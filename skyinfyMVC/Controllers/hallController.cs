using QRCoder;
using skyinfyMVC.Models;
using System;
using System.Collections.Generic;
using System.Data;
using System.Drawing;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Text;
using System.Text.RegularExpressions;
using System.Web;
using System.Web.Mvc;
using System.Net.Mail;
using System.Reflection;
using System.Threading;
using System.Net;
using CrystalDecisions.Shared;

namespace skyinfyMVC.Controllers
{
    public class hallController : Controller
    {
        static string mq = "", mq1 = "", mq0 = "", mq2 = "", vch_num = "", status = "", btnval = "", tab_name = "", type = "", type_desc = "", tab_name1 = "", where = "", mid_mst = "", MyGuid = "", cond = "",
            cond_dpjoin = "", cond_dgjoin = "", defval = "";
        string smtpvalue;
        string emailIdvalue;
        string passwordvalue, units = "";
        int portvalue;
        string userCode = "", html = "", year_from = "", year_to = "", xprdrange = "", userid_mst = "", cg_com_name = "", clientid_mst = "", unitid_mst = "", role_mst = "", Ac_Year = "", actionName = "", controllerName = "";
        public static string ctype1 = "", finalpath1 = "", path1 = "", fileName1 = "", encpath1 = "";
        bool isedit = false;
        public static string name = "", ctype2 = "", ctype3 = "", ctype4 = "", ctype5 = "", ctype6 = "", ctype7 = "",
        finalpath2 = "", finalpath3 = "", finalpath4 = "", finalpath5 = "", finalpath6 = "", finalpath7 = "", path2 = "", path3 = "", path4 = "",
       path5 = "", path6 = "", path7 = "", fileName2 = "", fileName3 = "", fileName4 = "", fileName5 = "", fileName6 = "", fileName7 = "",
       encpath2 = "", encpath3 = "", encpath4 = "", unitname_mst = "", subdomain_mst = "", encpath5 = "", encpath6 = "", encpath7 = "", clientname_mst = "", m_module3 = "";
        string defcall = "";

        sgenFun sgen;
        Cmd_Fun cmd_Fun;
        #region
        public void FillMst(string Myguid = "")
        {
            MyGuid = Myguid;
            //sgen = new sgenFun(MyGuid);
            if (MyGuid == "") { MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]); }
            //if (MyGuid == "") MyGuid = sgen.GetCookie("", "MyGuid");
            sgen = new sgenFun(MyGuid);
            cmd_Fun = new Cmd_Fun(MyGuid);

            userCode = sgen.GetCookie(MyGuid, "userCode");
            userid_mst = sgen.GetCookie(MyGuid, "userid_mst");
            cg_com_name = sgen.GetCookie(MyGuid, "cg_com_name");
            clientid_mst = sgen.GetCookie(MyGuid, "clientid_mst");
            unitid_mst = sgen.GetCookie(MyGuid, "unitid_mst");
            role_mst = sgen.GetCookie(MyGuid, "role_mst");
            Ac_Year = sgen.GetCookie(MyGuid, "Ac_Year");
            actionName = this.ControllerContext.RouteData.Values["action"].ToString();
            controllerName = this.ControllerContext.RouteData.Values["controller"].ToString();
            sgen.SetSession(MyGuid, "viewName", actionName);
            sgen.SetSession(MyGuid, "controllerName", controllerName);
            year_to = sgen.GetCookie(MyGuid, "year_to");
            year_from = sgen.GetCookie(MyGuid, "year_from");
            xprdrange = "and vch_DATE between " + year_from + " and " + year_to + "";
        }
        public List<Tmodelmain> getload(List<Tmodelmain> model)
        {
            chkRef();
            Tmodelmain tm1 = new Tmodelmain();
            mid_mst = EncryptDecrypt.Decrypt(Request.QueryString["mid"]);
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            ViewBag.vnew = "";
            ViewBag.vedit = "";
            ViewBag.vsave = "disabled='disabled'";
            ViewBag.vsavenew = "disabled='disabled'";
            ViewBag.scripCall = "disableForm();";
            tm1.Col13 = "Save";
            tm1.Col100 = "Save & New";
            tm1.Col121 = "S";
            tm1.Col122 = "<u>S</u>ave";
            tm1.Col123 = "Save & Ne<u>w</u>";
            tm1.Col14 = mid_mst.Trim();
            tm1.Col15 = MyGuid.Trim();
            model.Add(tm1);
            return model;
        }
        public List<Tmodelmain> getnew(List<Tmodelmain> model)
        {
            sgen.SetSession(MyGuid, "EDMODE", "N");
            ViewBag.vnew = "disabled='disabled'";
            ViewBag.vedit = "disabled='disabled'";
            ViewBag.vsavenew = "";
            ViewBag.vsave = "";
            ViewBag.scripCall = "enableForm();";
            // mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
            // vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
            // model[0].Col16 = vch_num;

            mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
            vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
            model[0].Col16 = vch_num;
            return model;
        }
        public List<Tmodelmain> getedit(List<Tmodelmain> model, DataTable dtt, string param)
        {
            sgen.SetSession(MyGuid, "EDMODE", "Y");
            model[0].Col1 = dtt.Rows[0]["client_id"].ToString();
            model[0].Col2 = dtt.Rows[0]["client_unit_id"].ToString();
            model[0].Col3 = dtt.Rows[0]["ent_by"].ToString();
            model[0].Col4 = dtt.Rows[0]["ent_date"].ToString();
            model[0].Col7 = dtt.Rows[0]["rec_id"].ToString();
            model[0].Col8 = "client_id||client_unit_id||vch_num|| to_char(vch_date, 'yyyymmdd')|| type = '" + param + "'";
            model[0].Col13 = "Update";
            model[0].Col100 = "Update & New";
            model[0].Col121 = "U";
            model[0].Col122 = "<u>U</u>pdate";
            model[0].Col123 = "Update & Ne<u>w</u>";
            return model;
        }
        private List<Tmodelmain> StartCallback(List<Tmodelmain> model)
        {
            if (sgen.GetSession(MyGuid, "PERWISE") != null) btnval = sgen.GetSession(MyGuid, "PERWISE").ToString();
            else if (sgen.GetSession(MyGuid, "delid") != null) { btnval = "FDEL"; sgen.GetSession(MyGuid, "btnval").ToString(); }
            else if (sgen.GetSession(MyGuid, "btnval") != null) btnval = sgen.GetSession(MyGuid, "btnval").ToString();
            model = CallbackFun(btnval, "N", actionName, controllerName, model);
            {
                ViewBag.vnew = "disabled='disabled'";
                ViewBag.vedit = "disabled='disabled'";
                ViewBag.vsave = "";
                ViewBag.vsavenew = "";
            }
            if ((actionName == "amount_exp") && btnval == "VIEW" || (actionName == "prnt_ltr") && btnval == "REPRINT")
            {
                ViewBag.vnew = "";
                ViewBag.vedit = "";
                ViewBag.vsave = "disabled='disabled'";
                ViewBag.vsavenew = "disabled='disabled'";
                ViewBag.scripCall += "disableForm();";

            }

            return model;
        }
        private ActionResult CancelFun(List<Tmodelmain> model)
        {
            return RedirectToAction(actionName, new { @m_id = EncryptDecrypt.Encrypt(model[0].Col15), @mid = EncryptDecrypt.Encrypt(model[0].Col14) });
        }
        public DataRow getsave(string curdt, DataRow drn, List<Tmodelmain> model, bool edit)
        {

            drn["rec_id"] = "0";
            if (edit)
            {
                //drn["rec_id"] = model[0].Col7;
                drn["ent_by"] = model[0].Col3;
                drn["ent_date"] = model[0].Col4;
                drn["client_id"] = clientid_mst;
                drn["client_unit_id"] = unitid_mst;
                drn["edit_by"] = userid_mst;
                drn["edit_date"] = curdt;
            }
            else
            {
                drn["ent_by"] = userid_mst;
                drn["ent_date"] = curdt;
                drn["edit_by"] = "-";
                drn["edit_date"] = curdt;
                drn["client_id"] = clientid_mst;
                drn["client_unit_id"] = unitid_mst;
            }
            return drn;
        }
        public void chkRef()
        {
            if (userCode.Equals("")) Response.Redirect(sgenFun.callbackurl);
            if (Request.UrlReferrer == null) { Response.Redirect(sgenFun.callbackurl); }
        }
        public bool sendmail_stream(string userCode, string client_id, string mail_to, string mailcc, Stream stream, string filename, string body_text, string title)
        {
            int portvalue = 0;
            string smtpvalue = "", emailIdvalue = "", passwordvalue = "", cgname = "";
            DataTable dtmail = new DataTable();
            mq = "select com_email,com_password,com_smtp,com_port,company_name from company_profile where company_profile_id='" + client_id + "' and type='CP'";
            dtmail = sgen.getdata(userCode, mq);
            if (dtmail.Rows.Count > 0)
            {
                smtpvalue = Convert.ToString(dtmail.Rows[0]["com_Smtp"]);
                emailIdvalue = Convert.ToString(dtmail.Rows[0]["com_Email"]);
                passwordvalue = EncryptDecrypt.Decrypt(Convert.ToString(dtmail.Rows[0]["com_password"].ToString()));
                portvalue = Convert.ToInt32(dtmail.Rows[0]["com_Port"]);
                cgname = sgen.GetCookie(MyGuid, "cg_com_name");
            }
            try
            {
                MailMessage msg = new MailMessage();
                msg.From = new MailAddress(emailIdvalue);
                msg.To.Add(mail_to);
                if (mailcc != "" && mailcc != "-")
                {
                    msg.CC.Add(mailcc);
                }
                var body = new StringBuilder();
                body.AppendLine("" + title + " - " + body_text + "");
                msg.Body = body.ToString();
                SmtpClient smtp = new SmtpClient();
                smtp.Host = smtpvalue;
                System.Net.NetworkCredential NetworkCred = new System.Net.NetworkCredential();
                NetworkCred.UserName = emailIdvalue;
                NetworkCred.Password = passwordvalue;
                smtp.UseDefaultCredentials = true;
                smtp.Credentials = NetworkCred;
                smtp.Port = portvalue;
                smtp.EnableSsl = true;
                Attachment attach = new Attachment(stream, new System.Net.Mime.ContentType("application/pdf"));
                attach.ContentDisposition.FileName = filename;
                msg.Attachments.Add(attach);
                smtp.Send(msg);
                msg.Dispose();
                return true;
            }
            catch (Exception err)
            {
                return false;
            }
        }
        #endregion
        //=====================make query===========
        #region make query
        public void Make_query(string viewname, string title, string btnval, string seektype, string param1, string param2, string Myguid)
        {
            FillMst(Myguid);
            sgen.SetSession(MyGuid, "btnval", btnval);
            string cmd = "";
            switch (viewname)
            {
                #region function
                case "prog":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "VIEW":
                            cmd = "select distinct (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr," +
                                " a.vch_num as Doc_No, to_char( convert_tz( a.date1,'UTC','" + sgen.Gettimezone() + "')," +
                                 "'" + sgen.Getsqldateformat() + "')as   Date_Of_Function, b.master_name Function_Type , a.col3 Name_Of_Party ,a.col2 as no_of_paxes,sum(a.col10*a.col9) Total_AMount" +
                                 " ,(case when a.type='FUN' then 'Active' else 'Inactive' END ) as Status   from enx_tab2 a inner join master_setting  b on a. col5=b.master_id" +
                                 " and b.type='FUN' and find_in_set(a.client_id,b.client_id)=1 and find_in_set(a.client_unit_id,b.client_unit_id)=1" +
                                " where a.type in ('FUN','DDFUN')and a.client_id ='" + clientid_mst + "'" + " and  a.client_unit_id='" + unitid_mst + "' and to_date(to_char(a.vch_DATE,'ddMMyyyy'),'ddMMyyyy') between to_date('" + year_from + "','" + sgen.Getsqldatetimeformat() + "') and to_date('" + year_to + "','" + sgen.Getsqldatetimeformat() + "')" +
                                " group by (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) ,a.vch_num ,to_char(convert_tz(a.date1," +
                                " 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "'),b.master_name, a.col3,(case when a.type = 'FUN' then 'Active'" +
                                " else 'Inactive' END ) ,a.col2 order by a.vch_num desc";

                            break;

                        case "HEAD":
                            where = "";
                            if (param1 != "") where = " and master_id not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','").Trim().ToString() + "')";
                            cmd = "select (client_id||client_unit_id||master_id||to_char(vch_date,'yyyymmdd')||type) as fstr, " +
                                "master_id as  Exp_Head_id,master_name as Exp_Head_Name" +
                                  " from master_setting where type='BEH'and " +
                                  "client_id ='" + clientid_mst + "'" + " and  client_unit_id='" + unitid_mst + "' " + where + "";


                            break;
                    }
                    break;
                #endregion
                #region Amount_exp
                case "amount_exp":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "PRINT":

                            cmd = "select distinct (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr," +
                                " a.vch_num as Doc_no, d.master_name as Function_Type,to_char(convert_tz(c.date1, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') as Date_Of_Function,c.col3 as Party_Name  from enx_tab2 a inner join master_setting b" +
                                " on a.col6 = b.master_id and b.type = 'BEH' and a.client_id = b.client_id and a.client_unit_id = b.client_unit_id " +
                                "inner join enx_tab2 c on c.vch_num = a.col3 and c.type='FUN' and a.client_unit_id = c.client_unit_id  inner join " +
                                " master_setting d on d.master_id = a.col5 and d.type = 'FUN' and a.client_unit_id = d.client_unit_id " +
                                "where a.type = 'BEH' and a.client_id = '" + clientid_mst + "' and a.client_unit_id = '" + unitid_mst + "' and to_date(to_char(a.vch_DATE,'ddMMyyyy'),'ddMMyyyy') between to_date('" + year_from + "','" + sgen.Getsqldatetimeformat() + "') and to_date('" + year_to + "','" + sgen.Getsqldatetimeformat() + "') order by a.vch_num desc  ";
                            break;


                        case "VIEW":
                            cmd = " select a.fstr,a.Doc_no,a.Function_Type,a.Party_Name, a.Date_Of_Function,no_of_paxes,sum(Total_Expense) as Total_Expense from" +
                                "(select distinct (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr," +
                                " a.vch_num as Doc_no, d.master_name as Function_Type,to_char(convert_tz(c.date1, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat()
                                + "') as Date_Of_Function,c.col3 as Party_Name ,c.col2 as no_of_paxes ,(a.col4) Total_Expense  from enx_tab2 a inner join master_setting b" +
                                " on a.col6 = b.master_id and b.type = 'BEH' and a.client_id = b.client_id and a.client_unit_id = b.client_unit_id " +
                                "inner join enx_tab2 c on c.vch_num = a.col3 and c.type='FUN' and a.client_unit_id = c.client_unit_id  inner join " +
                                " master_setting d on d.master_id = a.col5 and d.type = 'FUN' and a.client_unit_id = d.client_unit_id " +
                                "where a.type = 'BEH' and a.client_id = '" + clientid_mst + "' and a.client_unit_id = '" + unitid_mst + "' and to_date(to_char(a.vch_DATE,'ddMMyyyy'),'ddMMyyyy') between to_date('" + year_from + "','" + sgen.Getsqldatetimeformat() + "') and to_date('" + year_to + "','" + sgen.Getsqldatetimeformat() + "') order by a.vch_num desc) a " +
                                " group by Date_Of_Function,fstr,Doc_no,Function_Type,no_of_paxes,Party_Name  ";
                            break;

                        case "VIEWDETAIL":
                            String URL = sgen.GetSession(MyGuid, "SSEEKVAL").ToString();
                            cmd = "select distinct (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr, a.vch_num as Doc_no," +
                                " b.master_name as Exp_Head, a.col9 as Remarks, d.master_name as Function_Type,c.col3 as Party_Name ,a.col4 as Amount from enx_tab2 a" +
                                " inner join master_setting b on a.col6 = b.master_id and b.type = 'BEH' and a.client_id = b.client_id and a.client_unit_id = b.client_unit_id inner join enx_tab2 c" +
                                " on c.vch_num = a.col3 and c.type='FUN' and a.client_unit_id = c.client_unit_id  inner join  master_setting d on d.master_id" +
                                " = a.col5 and d.type = 'FUN' and a.client_unit_id = d.client_unit_id where (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type)='" + URL + "'  order by a.vch_num desc   ";
                            break;

                        case "NEW":

                            cmd = "select distinct (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr," +
                                "to_char(convert_tz(a.date1, 'UTC', '" + sgen.Gettimezone() + "')," + "'" + sgen.Getsqldateformat() + "') as " +
                                "Date_Of_Function , b.master_name function_Name, " +
                                "a.col2 as no_of_pax, a.col3 Name_Of_Party,replace(a.col7,'0','-') Contact_No,replace(a.col6,'0','-') as Email_Id from enx_tab2 a" +
                                " inner join master_setting b on a.col5 = b.master_id and b.type = 'FUN'" +
                                " and a.client_id = b.client_id and a.client_unit_id = b.client_unit_id where a.type = 'FUN'and " +
                                "a.client_id = '" + clientid_mst + "'" +
                                " and a.client_unit_id = '" + unitid_mst + "' and a.vch_num  not in ( select distinct col3  from enx_tab2 where type='BEH' and client_unit_id='" + unitid_mst + "')";
                            break;

                        case "HEAD":
                            where = "";
                            if (param1 != "") where = " and master_id not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','").Trim().ToString() + "')";
                            cmd = "select (client_id||client_unit_id||master_id||to_char(vch_date,'yyyymmdd')||type) as fstr, " +
                                "master_id as  Exp_Head_id,master_name as Exp_Head_Name" +
                                  " from master_setting where type='BEH'and " +
                                  "client_id ='" + clientid_mst + "'" + " and  client_unit_id='" + unitid_mst + "' " + where + "";


                            break;
                    }
                    break;
                #endregion
                #region Booking amount
                case "booking_amt":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "VIEW":

                            cmd = "select distinct (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr," +
                                "to_char(convert_tz(c.date1, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') as Date_Of_Function " +
                                ", b.master_name function_Name, c.col3 Name_Of_Party , replace(c.col7, '0', '-') Contact_No,to_char(convert_tz" +
                                "(a.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') as Deposit_Date,(a.col3) as Received_Amount" +
                                " from enx_tab2 a inner join enx_tab2 c on a.col5 = c.vch_num and c.type = 'FUN' and c.client_unit_id = a.client_unit_id " +
                                "inner join master_setting b on c.col5 = b.master_id and b.type = 'FUN' and a.client_id = b.client_id and " +
                                "a.client_unit_id = b.client_unit_id where a.type = 'BAM'and a.client_id = '" + clientid_mst + "' and a.client_unit_id = '" + unitid_mst + "' and to_date(to_char(a.vch_DATE,'ddMMyyyy'),'ddMMyyyy') between to_date('" + year_from + "','" + sgen.Getsqldatetimeformat() + "') and to_date('" + year_to + "','" + sgen.Getsqldatetimeformat() + "')";
                            break;
                        case "PARTY":

                            cmd = "select distinct (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr," +
                                "to_char(convert_tz(a.date1, 'UTC', '" + sgen.Gettimezone() + "')," + "'" + sgen.Getsqldateformat() + "') Date_Of_Function," +
                                "b.master_name function_Name,a.col2 as no_of_pax, a.col3 Name_Of_Party,(a.col7) Contact_No,(a.col6) Email_Id from enx_tab2 a " +
                                "inner join master_setting b on a.col5 = b.master_id and b.type = 'FUN' and find_in_set(a.client_id,b.client_id)=1 and find_in_set(a.client_unit_id,b.client_unit_id)=1 " +
                                "where a.type = 'FUN'and a.client_id = '" + clientid_mst + "' and a.client_unit_id = '" + unitid_mst + "'";
                            break;
                    }
                    break;
                #endregion
                #region work allocation
                case "w_alloc":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "DETAIL":
                            cmd = "select wo.client_id||wo.client_unit_id||wo.vch_num||to_char(wo.vch_date,'yyyymmdd')||wo.type as fstr,wo.vch_num as doc_no," +
                                "to_char(wo.vch_date,'" + sgen.Getsqldateformat() + "') as doc_date,cp.c_name as client_name,cp.addr address," +
                                "nvl(sp.master_name,'-') as service_area,(emp.first_name || ' ' || replace(emp.middle_name, '0', '') || ' ' || " +
                                "replace(emp.last_name, '0', '')) as TL_Name,dp.master_name department,dg.master_name as designation,to_char(wo.date1," +
                                " '" + sgen.Getsqldateformat() + "') as start_date,to_char(wo.date2, '" + sgen.Getsqldateformat() + "') as end_date,wo.COL7" +
                                " as period,(case when wo.COL12 = '0' then 'Active' when wo.COL12 = '1' then 'Inactive' else '-' end) Status from enx_tab2 wo inner " +
                                "join clients_mst cp on cp.vch_num = wo.COL2 and cp.type = 'BCD' and substr(cp.vch_num,0,3)= '303' left join master_setting " +
                                "sp on cp.occ_type = sp.master_id and cp.client_unit_id = sp.client_unit_id and sp.type = 'SSA' inner join emp_master emp" +
                                " on emp.vch_num = wo.COL8 and emp.type = 'EMP' and emp.client_unit_id = '" + unitid_mst + "' left join master_setting dp" +
                                " on dp.master_id = emp.emp_dept and dp.type = 'MDP' and find_in_set(dp.client_unit_id,'" + unitid_mst + "')= 1 left join" +
                                " master_setting dg on dg.master_id = emp.emp_desig and dg.type = 'MDG' and find_in_set(dg.client_unit_id," +
                                "'" + unitid_mst + "')= 1 where wo.type = 'CUU' and wo.client_unit_id = '" + unitid_mst + "' and to_date(to_char(wo.vch_DATE,'ddMMyyyy'),'ddMMyyyy') between to_date('" + year_from + "','" + sgen.Getsqldatetimeformat() + "') and to_date('" + year_to + "','" + sgen.Getsqldatetimeformat() + "')";
                            break;
                        case "PARTY":
                            cmd = "select cp.vch_num||to_char(cp.vch_date,'yyyymmdd')||cp.type as fstr, cp.vch_num as emp_code,cp.c_name as cust_name," +
                                "cp.addr address,sp.master_name as service_area,(case when cp.cpcont='0000000000' then '-' else cp.cpcont end) ContactNo,(case when cp.cpaltcont='0000000000' then '-' else cp.cpaltcont end) as AltContactNo," +
                                "(case when cp.cpemail='ab@ab.ab' then '-' else cp.cpemail end) as Email,cp.c_gstin cust_gstin_no from clients_mst cp left join master_setting sp " +
                                "on cp.occ_type = sp.master_id and cp.client_unit_id = sp.client_unit_id and sp.type = 'SSA' where cp.type = 'BCD' and substr(cp.vch_num,0,3)= '303' " +
                                "and find_in_set(cp.client_unit_id,'" + unitid_mst + "')= 1 and mftr<> 'Y'";
                            break;
                        case "EMP":
                        case "TL":
                            cmd = "select (emp.client_id||emp.client_unit_id||emp.vch_num||to_char(emp.vch_date,'yyyymmdd')||emp.type) as fstr,emp.emp_code as Emp_Code," +
                                  "emp.old_empcode Old_EmpCode,(emp.FIRST_NAME|| ' '|| REPLACE(emp.MIDDLE_NAME,'0','')|| ' '||REPLACE(emp.LAST_NAME,'0','')) as Emp_Name," +
                                  "nvl(dg.master_name,'-') as designation,nvl(dp.master_name,'-') as department,emp.f_name as Father_Name,emp.gender as Gender, " +
                                  "to_char(emp.st_dt,'" + sgen.Getsqldateformat() + "') as Date_Of_Joining" +
                                  " from emp_master emp left join master_setting dp on dp.master_id=emp.emp_dept and dp.type='MDP' and find_in_set(dp.client_unit_id,'" + unitid_mst + "')=1 " +
                                  "left join master_setting dg on dg.master_id = emp.emp_desig and dg.type = 'MDG' and find_in_set(dg.client_unit_id,'" + unitid_mst + "')= 1 WHERE emp.type= 'EMP' " +
                                  "and emp.client_unit_id= '" + unitid_mst + "' and to_char(emp.ex_dt,'yyyy')='1900' and emp.emp_status='Y' order by emp.emp_code asc";
                            break;
                    }
                    break;
                #endregion
                #region rate card
                case "rcard":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "DETAIL":

                            // reena 3 line
                            cmd = "select a.fstr,a.doc_no,a.doc_date,a.Rate,group_concat(a.designation) as designation " +
                                "from(select ug.client_id||ug.client_unit_id||ug.vch_num||to_char(ug.vch_date,'yyyymmdd')" +
                                "||ug.type as fstr,ug.vch_num as doc_no,to_char(ug.vch_date, '" + sgen.Getsqldateformat() + "') as doc_date,ug.col3" +
                                " as Rate,dg.master_name as designation from enx_tab2 ug inner join master_setting dg on " +
                                "find_in_set(dg.master_id, ug.col6) = 1 and dg.type = 'MDG' and " +
                                "find_in_set(ug.client_unit_id,dg.client_unit_id)= 1 where ug.client_unit_id = " +
                                "'" + unitid_mst + "' and ug.type = 'RCC' and to_date(to_char(ug.vch_DATE,'ddMMyyyy'),'ddMMyyyy') between to_date('" + year_from + "','" + sgen.Getsqldatetimeformat() + "') and to_date('" + year_to + "','" + sgen.Getsqldatetimeformat() + "')) a group by a.fstr,a.doc_no,a.doc_date,a.Rate";
                            break;
                    }
                    break;
                #endregion
                #region cost sheet
                case "csheet":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "DETAIL":
                            cmd = "select a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type as fstr" +
                                ",a.vch_num as doc_no,to_char(a.vch_date, '" + sgen.Getsqldateformat() + "') as doc_date, b.vch_num as client_code" +
                                ",b.c_name as client_name,b.addr address,nvl(sp.master_name,'-') as service_area,b.c_gstin cust_gstin_no " +
                                "from enx_tab2 a inner join clients_mst b on a.col2 = b.vch_num and substr(b.vch_num, 0, 3) = '303' " +
                                "and find_in_set(b.client_unit_id, a.client_unit_id) = 1 left join master_setting sp on b.occ_type = " +
                                "sp.master_id and b.client_unit_id = sp.client_unit_id and sp.type = 'SSA' where a.type = 'BCS' and" +
                                " a.client_unit_id = '" + unitid_mst + "' and to_date(to_char(a.vch_DATE,'ddMMyyyy'),'ddMMyyyy') between to_date('" + year_from + "','" + sgen.Getsqldatetimeformat() + "') and to_date('" + year_to + "','" + sgen.Getsqldatetimeformat() + "')";
                            break;
                        case "PARTY":
                            cmd = "select cp.vch_num||to_char(cp.vch_date,'yyyymmdd')||cp.type as fstr, cp.vch_num as client_code,cp.c_name as client_name," +
                                "cp.addr address,sp.master_name as service_area,(case when cp.cpcont='0000000000' then '-' else cp.cpcont end) ContactNo,(case when cp.cpaltcont='0000000000' then '-' else cp.cpaltcont end) as AltContactNo," +
                                "(case when cp.cpemail='ab@ab.ab' then '-' else cp.cpemail end) as Email,cp.c_gstin cust_gstin_no from clients_mst cp left join master_setting sp " +
                                "on cp.occ_type = sp.master_id and cp.client_unit_id = sp.client_unit_id and sp.type = 'SSA' where cp.type = 'BCD' and substr(cp.vch_num,0,3)= '303' " +
                                "and find_in_set(cp.client_unit_id,'" + unitid_mst + "')= 1 and mftr<> 'Y'";
                            break;
                    }
                    break;
                #endregion
                #region conveyance rate
                case "con_rate":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "DETAIL":
                            cmd = "select a.fstr,a.doc_no,a.doc_date,a.client_code,a.client_name,a.address,a.Amount,group_concat(designation) " +
                                "designation,group_concat(location) location,group_concat(mode_of_conveyance) mode_of_conveyance " +
                                "from (select a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type as fstr,a.vch_num as doc_no," +
                                "to_char(a.vch_date, '" + sgen.Getsqldateformat() + "') as doc_date, b.vch_num as client_code,b.c_name as client_name,b.addr address, nvl(sp.master_name, '-')" +
                                " as service_area,a.col9 as Amount,dg.master_name as designation,lc.master_name as location,tp.master_name as mode_of_conveyance from enx_tab2 " +
                                "a inner join clients_mst b on a.col2 = b.vch_num and substr(b.vch_num, 0, 3) = '303' and find_in_set(b.client_unit_id, a.client_unit_id) = 1 " +
                                "left join master_setting sp on b.occ_type = sp.master_id and b.client_unit_id = sp.client_unit_id and sp.type = 'SSA' left join master_setting dg" +
                                " on find_in_set(dg.master_id, a.col5)=1 and dg.type = 'MDG' and find_in_set(dg.client_unit_id, a.client_unit_id)= 1 left join master_setting lc on find_in_set(lc.master_id, a.col6)=1 " +
                                "and lc.type = 'LC6' and find_in_set(lc.client_unit_id, a.client_unit_id)= 1 left join master_setting tp on find_in_set(tp.master_id, a.col7)=1 and tp.type = 'AMT' and " +
                                "find_in_set(tp.client_unit_id, a.client_unit_id)= 1 where a.type = 'BCR' and a.client_unit_id = '" + unitid_mst + "' and to_date(to_char(a.vch_DATE,'ddMMyyyy'),'ddMMyyyy') between to_date('" + year_from + "','" + sgen.Getsqldatetimeformat() + "') and to_date('" + year_to + "','" + sgen.Getsqldatetimeformat() + "')) a group by a.fstr,a.doc_no,a.doc_date" +
                                ",a.client_code,a.client_name,a.address,a.Amount";
                            break;
                        case "PARTY":
                            if (param1 != "" && param1 != null) where = " and cp.vch_num||to_char(cp.vch_date,'yyyymmdd')||cp.type not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','").Trim().ToString() + "')";

                            cmd = "select cp.vch_num||to_char(cp.vch_date,'yyyymmdd')||cp.type as fstr, cp.vch_num as client_code,cp.c_name as client_name," +
                                "cp.addr address,sp.master_name as service_area,(case when cp.cpcont='0000000000' then '-' else cp.cpcont end) ContactNo,(case when cp.cpaltcont='0000000000' then '-' else cp.cpaltcont end) as AltContactNo," +
                                "(case when cp.cpemail='ab@ab.ab' then '-' else cp.cpemail end) as Email,cp.c_gstin cust_gstin_no from clients_mst cp left join master_setting sp " +
                                "on cp.occ_type = sp.master_id and cp.client_unit_id = sp.client_unit_id and sp.type = 'SSA' where cp.type = 'BCD' and substr(cp.vch_num,0,3)= '303' " +
                                "and find_in_set(cp.client_unit_id,'" + unitid_mst + "')= 1 and mftr<> 'Y' " + where + "";
                            break;
                    }
                    break;
                #endregion
                #region assign training
                case "asn_trng":
                    switch (btnval.ToUpper())
                    {
                        case "SERIES":
                            cmd = "SELECT en.client_id||en.client_unit_id||en.rec_id|| to_char(en.vch_date, 'yyyymmdd')||en.type as fstr, en.col1 as Series," +
                                "md.MOD_NAME as Module,ct.CAT_NAME as Category,cr.cou_title as Title,en.col5 as Ref_Code FROM enx_tab en INNER join module md " +
                                "on en.col2=md.MOD_ID and md.type='TMD' INNER join category ct on en.col3=ct.CAT_ID and ct.type='TCT' inner join courses cr " +
                                "on en.col4=cr.course_id and cr.type='TCR' and cr.client_id='" + clientid_mst + "' and cr.client_unit_id='" + unitid_mst + "' WHERE en.TYPE='TRS' and " +
                                "en.client_id='" + clientid_mst + "' and en.client_unit_id='" + unitid_mst + "'";
                            break;
                        case "UNASSIGN":
                            // brijesh 2, 3, 4 line
                            cmd = "select uc.client_id||uc.client_unit_id||uc.vch_num||to_char(uc.vch_date, 'yyyymmdd')||uc.type as fstr,count(uc.rec_id) as Usercount,uc.vch_num,GROUP_CONCAT(distinct uc.group_name) as Group_Name," +
                                "uc.mod_name as Module,uc.cat_name as Category,uc.cou_title as Title,uc.ref_code as Ref_code,uc.dwn_permission as Permission,to_char(uc.start_date,'" + sgen.Getsqldatetimeformat() + "') as Start_Date," +
                                "to_char(uc.end_date,'" + sgen.Getsqldatetimeformat() + "') as End_Date,uc.Usercourse_status as Status,uc.trn_duration as Training_Duration,uc.trn_mandatory as Mandatory from usercourse uc,user_details " +
                                "ud where uc.ent_by = '" + userid_mst + "' and uc.usercourse_status = 'assigned' and uc.type = 'TCU' and ud.type = 'CPR' and ud.vch_num= uc.user_id " +
                                "GROUP by uc.client_id || uc.client_unit_id || uc.vch_num || to_char(uc.vch_date, 'yyyymmdd') || uc.type,uc.vch_num,uc.mod_name,uc.cat_name,uc.cou_title, uc.group_name,uc.ref_code,uc.dwn_permission," +
                                "uc.start_date,uc.end_date,uc.Usercourse_status,uc.trn_duration,uc.trn_mandatory";
                            break;
                        case "CHOOSETITLE":
                            cmd = "select uc.client_id||uc.client_unit_id||uc.vch_num||to_char(uc.vch_date, 'yyyymmdd')||uc.type as fstr,count(uc.rec_id) as Usercount," +
                                "uc.vch_num,uc.group_name as Group_Name,uc.mod_name as Module,uc.cat_name as Category,uc.cou_title as Title,uc.ref_code as Ref_code," +
                                "uc.dwn_permission as Permission,to_char(uc.start_date,'" + sgen.Getsqldatetimeformat() + "') as Start_Date," +
                                "to_char(uc.end_date,'" + sgen.Getsqldatetimeformat() + "') as End_Date,uc.Usercourse_status as Status," +
                                "uc.trn_duration as Training_Duration,uc.group_id as Group_Id,uc.trn_mandatory as Mandatory from usercourse uc,user_details ud where " +
                                "uc.ent_by='" + userid_mst + "' and uc.usercourse_status='assigned' and uc.type='TCU' and ud.type='CPR' and ud.vch_num=uc.user_id GROUP by uc.group_name,uc.mod_name,uc.cat_name,uc.cou_title,uc.ref_code,uc.dwn_permission,uc.start_date,uc.end_date,uc.Usercourse_status,uc.trn_duration,uc.group_id,uc.trn_mandatory,uc.vch_num,uc.client_id||uc.client_unit_id||uc.vch_num||to_char(uc.vch_date, 'yyyymmdd')||uc.type";
                            break;
                        case "TOPIC":
                            if (role_mst.ToString().Trim().ToUpper() == "OWNER")
                            {
                                cmd = "SELECT c.client_id||c.client_unit_id||c.vch_num||to_char(c.vch_date, 'yyyymmdd')||c.type as fstr,m.mod_name," +
                                    "cat.cat_name,c.cou_title,c.ref_code,c.trn_duration,ud.First_name|| ' '||ud.middle_name|| ' '|| ud.last_name as" +
                                    " Ent_By,to_char(c.cou_Ent_Date, " + "'" + sgen.Getsqldateformat() + "') as Ent_Date from courses c inner join module " +
                                    "m on m.mod_id = c.mod_id and m.type = 'TMD' inner join category cat on cat.cat_id = c.cat_id and cat.type = 'TCT' " +
                                    "inner join user_details ud on c.cou_ent_by = ud.vch_num and ud.type = 'CPR' where c.type = 'TCR' " +
                                    "and c.client_id in('" + clientid_mst + "') and c.client_unit_id in('" + unitid_mst + "')";
                            }
                            else
                            {
                                cmd = "SELECT c.client_id||c.client_unit_id||c.vch_num||to_char(c.vch_date, 'yyyymmdd')||c.type as fstr,m.mod_name," +
                                    "cat.cat_name,c.cou_title,c.ref_code,c.trn_duration,ud.First_name|| ' '||ud.middle_name|| ' '|| ud.last_name as Ent_By" +
                                    ",to_char(c.cou_Ent_Date," + "'" + sgen.Getsqldateformat() + "') as Ent_Date from courses c inner join module m on " +
                                    "m.mod_id = c.mod_id and m.type = 'TMD' inner join category cat on cat.cat_id = c.cat_id and cat.type = 'TCT' inner " +
                                    "join user_details ud on c.cou_ent_by = ud.vch_num and ud.type = 'CPR' where c.type = 'TCR' and " +
                                    "c.client_id in('" + clientid_mst + "') and c.client_unit_id in('" + unitid_mst + "') and c.cou_ent_by='" + userid_mst + "'";
                            }
                            break;
                        case "INDI":
                            cmd = "select fstr,User_Id,User_Name,cu.Unit_Name,ms.master_name as Department,d.master_name as Designation,Email from (" +
                                "SELECT user_id,COALESCE(replace(first_name,'0',''),'')||' '||COALESCE(replace(middle_name,'0',''),'')||' '||COALESCE(replace(last_name,'0',''),'')" +
                                " AS User_Name,email,department,designation,client_id,client_unit_id,rec_id,vch_date,type,rec_id||to_char(vch_date, 'yyyymmdd')||type as fstr, " +
                                "SUBSTRING_INDEX(SUBSTRING_INDEX(client_unit_id, ',', numbers.n), ',',-1) name from numbers inner join user_details on " +
                                "CHAR_LENGTH(user_details.client_unit_id)-CHAR_LENGTH(REPLACE(user_details.client_unit_id, ',', ''))>=numbers.n-1 where type='CPR' " +
                                "and status='active' and find_in_set('1000',mod_id)=1  and find_in_set('" + clientid_mst + "',client_id)=1  order by n)a inner join company_unit_profile cu " +
                                "on cu.cup_id = a.name inner join master_setting ms on ms.master_id=a.department and ms.type='MDP' inner join master_setting " +
                                "d on d.master_id= a.designation and d.type='MDG' where substr(name,1,3)='" + clientid_mst + "'";
                            break;
                        case "GROUP":
                            units = sgen.GetSession(MyGuid, "satrday").ToString();

                            cmd = "select gd.client_id||gd.client_unit_id||gd.vch_num||to_char(gd.vch_date, 'yyyymmdd')||gd.type as fstr,gd.Group_id,gd.Group_Name," +
                                "count(ug.user_id) as User_Count from group_details gd LEFT OUTER join usergroup ug on ug.group_id = gd.group_id and ug.type = 'TGP'" +
                                " and ug.status = 'assigned' and ug.client_id = gd.client_id and ug.client_unit_id in (" + units + ") where gd.client_id = '" + clientid_mst + "' " +
                                "and gd.type = 'TGP' GROUP by gd.GROUP_ID,gd.group_name,gd.client_id || gd.client_unit_id || gd.vch_num || to_char(gd.vch_date, 'yyyymmdd') || gd.type,gd.Group_id,gd.Group_Name";

                            break;
                        case "DEPT":
                            cond = sgen.GetSession(Myguid, "condition").ToString();

                            cmd = "select ms.master_id||ms.type as fstr,ms.master_id as Id,ms.master_name as Department,count(ud.user_id) as User_in_Dept from " +
                                "master_setting ms left join user_details ud on ud.department = ms.master_id and ud.type = 'CPR' and ud.status = 'active' and " +
                                "find_in_set('001', ud.client_id) = 1 and (" + cond + ") WHERE ms.type = 'MDP' group by ms.master_id,ms.master_id " +
                                "|| ms.type,ms.master_name having count(ud.user_id)>0";
                            break;
                        case "DESG":
                            cond = sgen.GetSession(Myguid, "condition").ToString();
                            cmd = "select ms.master_id||ms.type as fstr,ms.master_id as Id,ms.master_name as Designation," +
                                "count(ud.user_id) as User_in_Dept from master_setting ms left join user_details ud on ud.designation = ms.master_id " +
                                "and ud.type = 'CPR' and ud.status = 'active' and find_in_set('" + clientid_mst + "',ud.client_id)= 1 and " +
                                "find_in_set('1000',ud.mod_id)= 1 and (" + cond + ") WHERE ms.type = 'MDG' group by ms.master_id,ms.master_name" +
                                ",ms.master_id || ms.type having count(ud.user_id)>0";
                            break;
                        case "PHYTRN":
                            if (role_mst.ToString().Trim().ToUpper() == "OWNER")
                            {
                                cmd = "SELECT c.client_id||c.client_unit_id||c.vch_num||to_char(c.vch_date, 'yyyymmdd')||c.type as fstr,m.mod_name," +
                                    "cat.cat_name,c.cou_title,c.ref_code,c.trn_duration,ud.First_name|| ' '||ud.middle_name||' '|| ud.last_name as " +
                                    "Ent_By,to_char(c.cou_Ent_Date, " + "'" + sgen.Getsqldateformat() + "') as Ent_Date from courses c inner join module " +
                                    "m on m.mod_id = c.mod_id and m.type = 'TMD' inner join category cat on cat.cat_id = c.cat_id and cat.type = 'TCT' " +
                                    "inner join user_details ud on c.cou_ent_by = ud.vch_num and ud.type = 'CPR' where c.type = 'TCR' and " +
                                    "c.client_id in('" + clientid_mst + "') and c.client_unit_id in('" + unitid_mst + "')";
                            }
                            else
                            {
                                cmd = "SELECT c.client_id||c.client_unit_id||c.vch_num||to_char(c.vch_date, 'yyyymmdd')||c.type as fstr,m.mod_name," +
                                    "cat.cat_name,c.cou_title,c.ref_code,c.trn_duration,ud.First_name||' '||ud.middle_name|| ' '|| ud.last_name as Ent_By" +
                                    ",to_char(c.cou_Ent_Date, " + "'" + sgen.Getsqldateformat() + "') as Ent_Date from courses c inner join module m on m.mod_id" +
                                    " = c.mod_id and m.type = 'TMD' inner join category cat on cat.cat_id = c.cat_id and cat.type = 'TCT' inner join " +
                                    "user_details ud on c.cou_ent_by = ud.vch_num and ud.type = 'CPR' where c.type = 'TCR' and c.client_id " +
                                    "in('" + clientid_mst + "') and c.client_unit_id in('" + unitid_mst + "') and c.cou_ent_by='" + userid_mst + "'";
                            }
                            break;
                    }
                    break;
                #endregion
                #region Attendence
                case "att":
                    switch (btnval.ToUpper())
                    {
                        case "DETAIL":
                            cmd = "select a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date, 'yyyymmdd')||a.type as fstr,a.vch_num as doc_no," +
                              "to_char(date1,'" + sgen.Getsqldateformat() + "') as doc_date,(case when a.col1 = 'CNV' then 'conveyance' when " +
                              "a.col1 = 'TXI' then 'Taxi' when a.col1 = 'TRV' then 'Travel' else '-' end) as att_type,(case when a.col8 = 'JRN' then 'Journey' when " +
                              "a.col8 = 'DLY' then 'Daily' else a.col8 end) as travel_type,a.col19 as Time_in,a.col20 as HRS_Spent,a.COL11 as fare,a.col12 as conveyance,a.col13 as da," +
                              "a.col14 as fooding_at_client,a.COL15 as mobile,a.COL17 as others" +
                              ",a.COL7 as fix_conv,a.COL9 as additional_conv,a.COL10 as taxi_Charges,a.col38 as status from kc_tab a where a.type = 'ATT' " +
                              "and a.client_unit_id = '" + unitid_mst + "' and to_date(to_char(a.vch_DATE,'ddMMyyyy'),'ddMMyyyy') between to_date('" + year_from + "','" + sgen.Getsqldatetimeformat() + "') and to_date('" + year_to + "','" + sgen.Getsqldatetimeformat() + "')";
                            break;
                        case "EDIT":
                            cmd = "select distinct a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date, 'yyyymmdd')||a.type as fstr,a.vch_num as doc_no," +
                              "to_char(date1,'" + sgen.Getsqldateformat() + "') as doc_date,(case when a.col1 = 'CNV' then 'conveyance' when " +
                              "a.col1 = 'TXI' then 'Taxi' when a.col1 = 'TRV' then 'Travel' else '-' end) as att_type,(case when a.col8 = 'JRN' then 'Journey' when " +
                              "a.col8 = 'DLY' then 'Daily' else a.col8 end) as travel_type,b.first_name || ' ' || replace(b.middle_name, '0', '') || '' || replace(b.last_name, '0', '') as user_name from kc_tab a " +
                              " inner join user_details b on b.vch_num=a.ent_by and b.type='CPR' where a.type = 'ATT' " +
                              "and a.client_unit_id = '" + unitid_mst + "' and a.Col38='Pending' and to_date(to_char(a.vch_DATE,'ddMMyyyy'),'ddMMyyyy') between to_date('" + year_from + "','" + sgen.Getsqldatetimeformat() + "') and to_date('" + year_to + "','" + sgen.Getsqldatetimeformat() + "')";
                            break;
                    }
                    break;
                #endregion
                #region schdl_meet
                case "schdl_meet":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "DETAIL":
                            cmd = "SELECT a.client_id||a.client_unit_id||a.vch_num|| to_char(a.vch_date, 'yyyymmdd')||a.type as fstr," +
                                "a.meeting_type as Subject,a.conf_roomname as Room_No," +
                                "to_char(convert_tz(a.startdatetime,'+00:00','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldatetimeformat() + "') as Start_Time" +
                                ",to_char(convert_tz(a.enddatetime,'+00:00','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldatetimeformat() + "') as End_time," +
                                "convert_tz(a.entdate,'+00:00','+05:30') as Organised_Date,c.user_id as Organised_By,a.Agenda,group_concat(b.user_id) as Invitee " +
                                "FROM bookings a inner join  user_details b on a.user_id=b.vch_num inner join user_details c on c.vch_num=a.entby where a.type = 'CRB' and a.client_id='" + clientid_mst + "' and a.client_unit_id='" + unitid_mst + "' group by a.vch_num";
                            break;
                        case "INDIVIDUAL":
                            cmd = "SELECT a.client_id||a.client_unit_id||a.vch_num|| to_char(a.vch_date, 'yyyymmdd')||a.type as fstr,a.user_id as Userid,b.master_name as Department,a.first_name as First_Name,a.last_name as Last_Name,a.Email fROM user_details a" +
                                ", master_setting b where a.client_id='" + clientid_mst + "' and a.client_unit_id='" + unitid_mst + "'  and a.type='CPR' and a.status='active' " +
                                "and a.department=b.master_Id and b.type='MDP' and find_in_set('3000', a.mod_id)";
                            break;
                        case "ADDMORE":
                            cmd = "SELECT a.client_id||a.client_unit_id||a.vch_num|| to_char(a.vch_date, 'yyyymmdd')||a.type as fstr,a.user_id as Userid," +
                                "b.master_name as Department,a.first_name as First_Name,a.last_name as Last_Name,a.Email fROM user_details a, master_setting b " +
                                "where a.client_id='" + clientid_mst + "' and a.client_unit_id='" + unitid_mst + "'  and a.type='CPR' and a.status='active' and a.department=b.master_Id and b.type='MDP'";
                            break;
                        case "GROUP":
                            cmd = "select gd.client_id||gd.client_unit_id||gd.group_id|| to_char(gd.vch_date, 'yyyymmdd')||gd.type as fstr,gd.Group_Name," +
                                "count(ug.user_id) as Users_In_Group from group_details gd left OUTER join usergroup ug on gd.group_id=ug.group_id where" +
                                " gd.client_id='" + clientid_mst + "' and gd.client_unit_id='" + unitid_mst + "' group by gd.group_name order by gd.group_id";
                            break;
                        case "DEPARTMENT":
                            cmd = "select ms.client_id||ms.client_unit_id||ms.master_id|| to_char(ms.vch_date, 'yyyymmdd')||ms.type as fstr,ms.master_name as " +
                                "Department,count(ud.user_id) as Users_In_Department from master_setting ms left OUTER join user_details ud on " +
                                "ms.master_id=ud.department where  ms.type='MDP' and ud.client_id='" + clientid_mst + "' and find_in_set('3000', ud.mod_id) " +
                                "group by ms.master_name order by ms.master_id";
                            break;
                        case "DESIGNATION":
                            cmd = "select ms.client_id||ms.client_unit_id|ms.master_id||to_char(ms.vch_date, 'yyyymmdd')||ms.type as fstr,ms.master_name as " +
                                "Designation,count(ud.user_id) as Users_In_Designation from master_setting ms left outer join user_details ud on ms.master_id=" +
                                "ud.designation where ms.type='MDG'and ud.client_id='" + clientid_mst + "' and find_in_set('3000', ud.mod_id) group by " +
                                "ms.master_name order by ms.master_id";
                            break;
                        case "ADDMOREGROUP":
                            cmd = "select gd.client_id||gd.client_unit_id||gd.group_id|| to_char(gd.vch_date, 'yyyymmdd')||gd.type as fstr,gd.Group_Name,count(ug.user_id) as Users_In_Group" +
                                " from group_details gd left OUTER join usergroup ug on gd.group_id=ug.group_id where gd.client_id='" + clientid_mst + "' " +
                                "and gd.client_unit_id='" + unitid_mst + "' group by gd.group_name order by gd.group_id";
                            break;
                        case "ADDMOREDEPT":
                            cmd = "select ms.client_id||ms.client_unit_id||ms.master_id|| to_char(ms.vch_date, 'yyyymmdd')||ms.type as fstr,ms.master_name as Department,count(ud.user_id) as Users_In_Department from master_setting ms left OUTER join user_details ud on ms.master_id=ud.department where  ms.type='MDP' and ud.client_id='" + clientid_mst + "' and find_in_set('3000', ud.mod_id) group by ms.master_name order by ms.master_id";
                            break;
                        case "ADDMOREDESG":
                            cmd = "select ms.client_id||ms.client_unit_id||ms.master_id|| to_char(ms.vch_date, 'yyyymmdd')||ms.type as fstr,ms.master_name as Designation,count(ud.user_id) as Users_In_Designation from master_setting ms left outer join user_details ud on ms.master_id=ud.designation where ms.type='MDG'and ud.client_id='" + clientid_mst + "' and find_in_set('3000', ud.mod_id) group by ms.master_name order by ms.master_id";
                            break;
                    }
                    break;
                #endregion
                #region meet config
                case "meet_config":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "DETAIL":
                            cmd = "select a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date, 'yyyymmdd')||a.type as fstr,a.master_id As Service_Id," +
                                "a.master_name as Service_Type,group_concat(distinct (b.First_name|| ' '|| replace(nvl(b.middle_name, ''),'0','')|| ' '|| replace(nvl(b.last_name,''),'0',''))) as " +
                                "Service_Head from master_setting a inner join user_details b on find_in_set(b.vch_num,a.content)=1  WHERE a.TYPE='TOS' and a.client_unit_id='" + unitid_mst + "' " +
                                "group by a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date, 'yyyymmdd')||a.type,a.master_id,a.master_name";
                            break;
                        case "SERVICES":
                            cmd = "select client_id||client_unit_id||vch_num||to_char(vch_date, 'yyyymmdd')||type as fstr,master_Id as Id,sectionid as Service_Type," +
                                "master_name as Our_Additional_Service from master_setting where type='CRS' and client_unit_id='" + unitid_mst + "'";
                            break;
                    }
                    break;
                #endregion
                #region att_rpt
                case "att_rpt":
                    switch (btnval.ToUpper())
                    {
                        case "APP":
                            cmd = "select distinct a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date, 'yyyymmdd')||a.type as fstr,a.vch_num as doc_no," +
                      "to_char(date1, '" + sgen.Getsqldateformat() + "') as doc_date,(case when a.col1 = 'CNV' then 'conveyance' when a.col1 = 'TXI' then 'Taxi' " +
                      "when a.col1 = 'TRV' then 'Travel' else '-' end) as att_type,a.col39 as total_hours ,a.col40 as total_amount," +
                      "ud.first_name||' '||replace(ud.middle_name,'0','')||''||replace(ud.last_name,'0','') as user_name from kc_tab" +
                      " a inner join user_details ud on ud.vch_num=a.ent_by and ud.type='CPR' where a.type = 'ATT' and a.client_unit_id = '" + unitid_mst + "' and a.col38='Approved'";

                            break;
                        case "DIS":
                            cmd = "select distinct a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date, 'yyyymmdd')||a.type as fstr,a.vch_num as doc_no," +
            "to_char(date1, '" + sgen.Getsqldateformat() + "') as doc_date,(case when a.col1 = 'CNV' then 'conveyance' when a.col1 = 'TXI' then 'Taxi' " +
            "when a.col1 = 'TRV' then 'Travel' else '-' end) as att_type,a.col39 as total_hours ,a.col40 as total_amount," +
            "ud.first_name||' '||replace(ud.middle_name,'0','')||''||replace(ud.last_name,'0','') as user_name from kc_tab" +
            " a inner join user_details ud on ud.vch_num=a.ent_by and ud.type='CPR' where a.type = 'ATT' and a.client_unit_id = '" + unitid_mst + "' and a.col38='Disapproved'";

                            break;
                    }
                    break;
                #endregion
                #region w_inv
                case "w_inv":
                    switch (btnval.ToUpper())
                    {
                        case "PARTY":
                            mq = "select  a.vch_num,a.ref_code,replace(nvl(b.c_name,'-'),'0','-') c_name ,replace(b.addr,'0','-') address, to_char(a.DOB, '" + sgen.Getsqldateformat() + "') as DOB,to_char(a.DOA, '" + sgen.Getsqldateformat() + "') as DOA," +
                         "(case when a.cplandno='0000000000' then '-' else a.cplandno end) cplandno ,replace((case when a.cpemail='ab@ab.ab' then '-' else a.cpemail end), '0', '-') cpemail" +
                         ",((replace(a.cpname, '0', '-') || ' ' || replace(a.cp_mname, '0', '') || ' ' || replace(a.cp_lname, '0', ''))) contact_person from clients_mst a" +
                         " inner join clients_mst b on a.ref_code = b.vch_num and b.type = 'BCD' and a.client_unit_id = b.client_unit_id   where a.type = 'BCD' and substr(a.ref_code,0,3)='303' and a.client_unit_id = '" + unitid_mst + "'" +
                         " order by b.c_name";


                            break;
                        case "DIS":
                            cmd = "select distinct a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date, 'yyyymmdd')||a.type as fstr,a.vch_num as doc_no," +
            "to_char(date1, '" + sgen.Getsqldateformat() + "') as doc_date,(case when a.col1 = 'CNV' then 'conveyance' when a.col1 = 'TXI' then 'Taxi' " +
            "when a.col1 = 'TRV' then 'Travel' else '-' end) as att_type,a.col39 as total_hours ,a.col40 as total_amount," +
            "ud.first_name||' '||replace(ud.middle_name,'0','')||''||replace(ud.last_name,'0','') as user_name from kc_tab" +
            " a inner join user_details ud on ud.vch_num=a.ent_by and ud.type='CPR' where a.type = 'ATT' and a.client_unit_id = '" + unitid_mst + "' and a.col38='Disapproved'";

                            break;
                    }
                    break;
                #endregion
                #region site location
                case "s_loc":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "DETAIL":
                            cmd = "select ug.client_id||ug.client_unit_id||ug.vch_num||to_char(ug.vch_date,'yyyymmdd')||ug.type as fstr,ug.vch_num as doc_no," +
                                "to_char(ug.vch_date, '" + sgen.Getsqldateformat() + "') as doc_date,ug.col3 as site_name,ug.col2 as site_address,ug.COL4 as google_address,ug.COL8 as latlong from enx_tab2 ug where ug.client_unit_id = " +
                                "'" + unitid_mst + "' and ug.type = 'SLC' and to_date(to_char(ug.vch_DATE,'ddMMyyyy'),'ddMMyyyy') between to_date('" + year_from + "','" + sgen.Getsqldatetimeformat() + "') and to_date('" + year_to + "','" + sgen.Getsqldatetimeformat() + "')";
                            break;
                    }
                    break;
                #endregion
                #region site link
                case "site_link":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "DETAIL":

                            cmd = "select ug.client_id||ug.client_unit_id||ug.vch_num||to_char(ug.vch_date,'yyyymmdd')||ug.type as fstr,ug.vch_num as doc_no," +
                                "to_char(ug.vch_date, '" + sgen.Getsqldateformat() + "') as doc_date,ug.col5 as site_code,sl.col3 as site_name,sl.col2 as site_address,ug.col3 as Remark" +
                                ",(emp.FIRST_NAME || ' ' || REPLACE(emp.MIDDLE_NAME, '0', '') || ' ' || REPLACE(emp.LAST_NAME, '0', '')) as Employee_Name," +
                                "emp.emp_code as Employee_Code,nvl(dg.master_name, '-') as designation,nvl(dp.master_name, '-') as department from enx_tab2 ug inner " +
                                "join enx_tab2 sl on sl.vch_num = ug.col5 and sl.type = 'SLC' and ug.client_unit_id = sl.client_unit_id inner join emp_master emp" +
                                " on emp.emp_code = ug.col6 and emp.client_unit_id = ug.client_unit_id and emp.type = 'EMP' left join master_setting dp on dp.master_id " +
                                "= emp.emp_dept and dp.type = 'MDP' and find_in_set(dp.client_unit_id,'" + unitid_mst + "')= 1 left join master_setting dg on dg.master_id = " +
                                "emp.emp_desig and dg.type = 'MDG' and find_in_set(dg.client_unit_id, '" + unitid_mst + "') = 1 where ug.client_unit_id = '" + unitid_mst + "' and ug.type = 'ESL'" +
                                " and to_date(to_char(ug.vch_DATE,'ddMMyyyy'),'ddMMyyyy') between to_date('" + year_from + "','" + sgen.Getsqldatetimeformat() + "') and" +
                                " to_date('" + year_to + "','" + sgen.Getsqldatetimeformat() + "')";
                            break;
                        case "SITE":
                            cmd = "select ug.client_id||ug.client_unit_id||ug.vch_num||to_char(ug.vch_date,'yyyymmdd')||ug.type as fstr,ug.vch_num as doc_no," +
                                "to_char(ug.vch_date, '" + sgen.Getsqldateformat() + "') as doc_date,ug.col3 as site_name,ug.col2 as site_address from enx_tab2 ug where ug.client_unit_id = " +
                                "'" + unitid_mst + "' and ug.type = 'SLC'";
                            break;
                        case "EMP":
                            if (param1 != "" && param1 != "-")
                            {
                                if (param1 != "") where = " and emp.emp_code not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','").Trim().ToString() + "')";
                            }
                            string Fdate = sgen.server_datetime_dt(userCode).ToString("dd/MM/yyyy");
                            cmd = "select (emp.client_id||emp.client_unit_id||emp.vch_num||to_char(emp.vch_date,'yyyymmdd')||emp.type) as fstr," +
                                "(emp.FIRST_NAME|| ' '|| REPLACE(emp.MIDDLE_NAME,'0','')|| ' '||REPLACE(emp.LAST_NAME,'0','')) as Employee_Name," +
                                "emp.gender as Gender,emp.emp_code as Employee_Code,emp.old_empcode as OldEmpCode,emp.External_EmpNo," +
                                "to_char(emp.dob,'" + sgen.Getsqldateformat() + "') as DOB,emp.f_name as Father_Name,emp.m_name as Mother_Name,emp.contact_no as ContactNo," +
                                "to_char(emp.st_dt,'" + sgen.Getsqldateformat() + "') as Date_Of_Joining," +
                                "(case when emp.emp_status!='R' and (case when to_char(emp.ex_dt,'yyyy')='1900' then 1 when emp.ex_dt>to_date('" + Fdate + "','" + sgen.Getsqldateformat() + "') then 1 else 0 end)=1 " +
                                "then 'Active' else 'Left' end) as Status from emp_master emp " +
                                "WHERE emp.client_unit_id= '" + unitid_mst + "' and emp.type= 'EMP' " + where + " order by emp.emp_code asc";
                            where = "";
                            break;
                    }
                    break;
                #endregion
                #region asst_alc
                case "asst_alc":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "DETAIL":
                            if (sgen.GetSession(MyGuid, "menu_id").ToString() == "33006.1")
                            {
                                cmd = "select ug.client_id||ug.client_unit_id||ug.vch_num||to_char(ug.vch_date,'yyyymmdd')||ug.type as fstr,ug.vch_num as doc_no," +
                                    "to_char(ug.vch_date, '" + sgen.Getsqldateformat() + "') as doc_date,ug.col5 as asset_serial,ug.col6 as asset_name,ug.col8 as expected_value" +
                                    ",to_char(ug.date1, '" + sgen.Getsqldateformat() + "') as expected_return_date,ug.col18 as status,ug.col3 as Remark" +
                                    ",(emp.FIRST_NAME || ' ' || REPLACE(emp.MIDDLE_NAME, '0', '') || ' ' || REPLACE(emp.LAST_NAME, '0', '')) as Employee_Name," +
                                    "emp.emp_code as Employee_Code,nvl(dg.master_name, '-') as designation,nvl(dp.master_name, '-') as department from enx_tab2 ug inner join emp_master emp" +
                                    " on emp.emp_code = ug.col2 and emp.client_unit_id = ug.client_unit_id and emp.type = 'EMP' left join master_setting dp on dp.master_id " +
                                    "= emp.emp_dept and dp.type = 'MDP' and find_in_set(dp.client_unit_id,'" + unitid_mst + "')= 1 left join master_setting dg on dg.master_id = " +
                                    "emp.emp_desig and dg.type = 'MDG' and find_in_set(dg.client_unit_id, '" + unitid_mst + "') = 1 where ug.client_unit_id = '" + unitid_mst + "' and ug.type = 'AAE'" +
                                    " and to_date(to_char(ug.vch_DATE,'ddMMyyyy'),'ddMMyyyy') between to_date('" + year_from + "','" + sgen.Getsqldatetimeformat() + "') and" +
                                    " to_date('" + year_to + "','" + sgen.Getsqldatetimeformat() + "')";
                            }
                            if (sgen.GetSession(MyGuid, "menu_id").ToString() == "42003.2")

                            {
                                cmd = "select ug.client_id||ug.client_unit_id||ug.vch_num||to_char(ug.vch_date,'yyyymmdd')||ug.type as fstr,ug.vch_num as doc_no," +
                                                                "to_char(ug.vch_date, '" + sgen.Getsqldateformat() + "') as doc_date,ug.col5 as asset_serial,ug.col6 as asset_name,ug.col8 as expected_value" +
                                                                ",to_char(ug.date1, '" + sgen.Getsqldateformat() + "') as expected_return_date,ug.col18 as status,ug.col3 as Remark" +
                                                                ",(emp.FIRST_NAME || ' ' || REPLACE(emp.MIDDLE_NAME, '0', '') || ' ' || REPLACE(emp.LAST_NAME, '0', '')) as user_Name," +
                                                                "emp.vch_num as user_id,nvl(dg.master_name, '-') as designation,nvl(dp.master_name, '-') as department from enx_tab2 ug " +
                                                                "inner join user_details emp on emp.vch_num = ug.col2  and emp.type = 'CPR'  left join master_setting dp on dp.master_id " +
                                                                "= emp.department and dp.type = 'MDP' and find_in_set(dp.client_unit_id,'" + unitid_mst + "')= 1 left join master_setting dg on dg.master_id = " +
                                                                "emp.designation and dg.type = 'MDG' and find_in_set(dg.client_unit_id, '" + unitid_mst + "') = 1 where ug.client_unit_id = '" + unitid_mst + "' and ug.type = 'AAU'" +
                                                                " and to_date(to_char(ug.vch_DATE,'ddMMyyyy'),'ddMMyyyy') between to_date('" + year_from + "','" + sgen.Getsqldatetimeformat() + "') and" +
                                                                " to_date('" + year_to + "','" + sgen.Getsqldatetimeformat() + "')";
                            }
                            break;
                        case "EMP":
                            string Fdate = sgen.server_datetime_dt(userCode).ToString("dd/MM/yyyy");
                            if (param1 == "33006.1")
                            {
                                cmd = "select (emp.client_id||emp.client_unit_id||emp.vch_num||to_char(emp.vch_date,'yyyymmdd')||emp.type) as fstr," +
                                "(emp.FIRST_NAME|| ' '|| REPLACE(emp.MIDDLE_NAME,'0','')|| ' '||REPLACE(emp.LAST_NAME,'0','')) as Employee_Name," +
                                "emp.gender as Gender,emp.emp_code as Employee_Code,emp.old_empcode as OldEmpCode,emp.External_EmpNo, emp.f_name as Father_Name,emp.contact_no as ContactNo," +
                                "to_char(emp.st_dt,'" + sgen.Getsqldateformat() + "') as Date_Of_Joining," +
                                "(case when emp.emp_status!='R' and (case when to_char(emp.ex_dt,'yyyy')='1900' then 1 when emp.ex_dt>to_date('" + Fdate + "','" + sgen.Getsqldateformat() + "') then 1 else 0 end)=1 " +
                                "then 'Active' else 'Left' end) as Status from emp_master emp " +
                                "WHERE emp.client_unit_id= '" + unitid_mst + "' and emp.type= 'EMP' and emp.emp_status='Y' order by emp.emp_code asc";
                            }
                            if (param1 == "42003.2")
                            {
                                cmd = "select ud.vch_num fstr, ud.vch_num as id,ud.first_name||' '||replace(ud.middle_name,'0','')||''||replace(ud.last_name,'0','') as user_name ,nvl(dg.master_name,'-') as designation,nvl(dp.master_name,'-') as department" +
                                    " from user_details ud left join master_setting dp on dp.master_id = ud.department and dp.type = 'MDP' and find_in_set(dp.client_unit_id,'" + unitid_mst + "')= 1 " +
                                    "left join master_setting dg on dg.master_id = ud.designation and dg.type = 'MDG' and find_in_set(dg.client_unit_id, '" + unitid_mst + "') = 1 where ud.type = 'CPR'";
                            }
                            break;
                        case "AST":
                            cmd = "select (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.vch_num as doc_no" +
                                ",a.col5 as asset_model,a.col6 as asset_serial,to_char(a.date1, 'dd/mm/yyy') as invoice_date,a.col7 as invoice_no" +
                                ",a.col8 as original_value,a.col9 as current_value,a.col10 as Warranty,a.col1 as Remark from enx_tab2 a where " +
                                "a.client_unit_id = '" + unitid_mst + "' and a.type = 'ASS'";
                            break;
                    }
                    break;
                #endregion
                #region letter template
                case "letter_tmp":
                    if (sgen.GetSession(MyGuid, "TYPE_MSTTEMP").ToString() != null)
                    {
                        type = sgen.GetSession(MyGuid, "TYPE_MSTTEMP").ToString().Trim();
                        switch (btnval.ToUpper())
                        {
                            case "VIEW":
                            case "EDIT":
                                cmd = "select (a.client_id||a.client_unit_id||a.vch_num || to_char(a.vch_date, 'yyyymmdd') ||a.type) as fstr,a.vch_num as templete_id,a.col2 as template_name " +
                                    "from enx_tab2 a where a.type = '" + type + "' and a.client_unit_id = '" + unitid_mst + "'";
                                break;
                        }                       
                    }
                    break;
                #endregion
                #region print letter
                case "prnt_ltr":
                    switch (btnval.ToUpper())
                    {
                        case "VIEW":
                        case "EDIT":
                        case "REPRINT":
                            cmd = "select (a.client_id||a.client_unit_id||a.vch_num || to_char(a.vch_date, 'yyyymmdd') ||a.type) as fstr,a.vch_num as doc_no,a.col5 as letter_id,to_char(a.date1,'" + sgen.Getsqldateformat() + "') as letter_date" +
                                " from enx_tab2 a where a.type = 'PLT' and a.client_unit_id = '" + unitid_mst + "'";
                            break;
                        case "EMP":
                            string Fdate = sgen.server_datetime_dt(userCode).ToString("dd/MM/yyyy");
                            cmd = "select (emp.client_id||emp.client_unit_id||emp.vch_num||to_char(emp.vch_date,'yyyymmdd')||emp.type) as fstr,emp.emp_code as Employee_Code," +
                                "(emp.FIRST_NAME|| ' '|| REPLACE(emp.MIDDLE_NAME,'0','')|| ' '||REPLACE(emp.LAST_NAME,'0','')) as Employee_Name," +
                                "emp.gender as Gender,emp.old_empcode as OldEmpCode,emp.f_name as Father_Name,to_char(emp.st_dt,'" + sgen.Getsqldateformat() + "') as Date_Of_Joining," +
                                "(case when emp.emp_status!='R' and (case when to_char(emp.ex_dt,'yyyy')='1900' then 1 when emp.ex_dt>to_date('" + Fdate + "','" + sgen.Getsqldateformat() + "') then 1 else 0 end)=1 " +
                                "then 'Active' else 'Left' end) as Status from emp_master emp " +
                                "WHERE emp.client_unit_id= '" + unitid_mst + "' and emp.type= 'EMP' order by emp.emp_code asc";
                            break;
                        case "TMP":
                            cmd = "select (a.client_id||a.client_unit_id||a.vch_num || to_char(a.vch_date, 'yyyymmdd') ||a.type) as fstr,a.vch_num as templete_id,a.col2 as templete_name" +
                             " from enx_tab2 a where a.type = 'LTP' and a.client_unit_id = '" + unitid_mst + "'";

                            break;
                    }
                    break;
                #endregion
                #region asst_return
                case "asst_return":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "DETAIL":
                            cmd = "select ug.client_id||ug.client_unit_id||ug.vch_num||to_char(ug.vch_date,'yyyymmdd')||ug.type as fstr,ug.vch_num as doc_no," +
                                "to_char(ug.vch_date, '" + sgen.Getsqldateformat() + "') as doc_date,ug.col5 as asset_serial,ug.col6 as asset_name,ug.col8 as expected_value" +
                                ",to_char(ug.date1, '" + sgen.Getsqldateformat() + "') as expected_return_date,ug.col3 as Remark" +
                                ",(emp.FIRST_NAME || ' ' || REPLACE(emp.MIDDLE_NAME, '0', '') || ' ' || REPLACE(emp.LAST_NAME, '0', '')) as Employee_Name," +
                                "emp.emp_code as Employee_Code,nvl(dg.master_name, '-') as designation,nvl(dp.master_name, '-') as department from enx_tab2 ug inner join emp_master emp" +
                                " on emp.emp_code = ug.col2 and emp.client_unit_id = ug.client_unit_id and emp.type = 'EMP' left join master_setting dp on dp.master_id " +
                                "= emp.emp_dept and dp.type = 'MDP' and find_in_set(dp.client_unit_id,'" + unitid_mst + "')= 1 left join master_setting dg on dg.master_id = " +
                                "emp.emp_desig and dg.type = 'MDG' and find_in_set(dg.client_unit_id, '" + unitid_mst + "') = 1 where ug.client_unit_id = '" + unitid_mst + "' and ug.type = 'ARB'" +
                                " and to_date(to_char(ug.vch_DATE,'ddMMyyyy'),'ddMMyyyy') between to_date('" + year_from + "','" + sgen.Getsqldatetimeformat() + "') and" +
                                " to_date('" + year_to + "','" + sgen.Getsqldatetimeformat() + "')";

                            if (sgen.GetSession(MyGuid, "menu_id").ToString() == "42003.3")
                            {
                                cmd = "select ug.client_id||ug.client_unit_id||ug.vch_num||to_char(ug.vch_date,'yyyymmdd')||ug.type as fstr,ug.vch_num as doc_no," +
                                                                "to_char(ug.vch_date, '" + sgen.Getsqldateformat() + "') as doc_date,ug.col5 as asset_serial,ug.col6 as asset_name,ug.col8 as expected_value" +
                                                                ",to_char(ug.date1, '" + sgen.Getsqldateformat() + "') as expected_return_date,ug.col18 as status,ug.col3 as Remark" +
                                                                ",(emp.FIRST_NAME || ' ' || REPLACE(emp.MIDDLE_NAME, '0', '') || ' ' || REPLACE(emp.LAST_NAME, '0', '')) as user_Name," +
                                                                "emp.vch_num as user_id,nvl(dg.master_name, '-') as designation,nvl(dp.master_name, '-') as department from enx_tab2 ug " +
                                                                "inner join user_details emp on emp.vch_num = ug.col2  and emp.type = 'CPR'  left join master_setting dp on dp.master_id " +
                                                                "= emp.department and dp.type = 'MDP' and find_in_set(dp.client_unit_id,'" + unitid_mst + "')= 1 left join master_setting dg on dg.master_id = " +
                                                                "emp.designation and dg.type = 'MDG' and find_in_set(dg.client_unit_id, '" + unitid_mst + "') = 1 where ug.client_unit_id = '" + unitid_mst + "' and ug.type = 'ARU'" +
                                                                " and to_date(to_char(ug.vch_DATE,'ddMMyyyy'),'ddMMyyyy') between to_date('" + year_from + "','" + sgen.Getsqldatetimeformat() + "') and" +
                                                                " to_date('" + year_to + "','" + sgen.Getsqldatetimeformat() + "')";
                            }
                            break;
                        case "EMP":
                            string Fdate = sgen.server_datetime_dt(userCode).ToString("dd/MM/yyyy");
                            cmd = "select (emp.client_id||emp.client_unit_id||emp.vch_num||to_char(emp.vch_date,'yyyymmdd')||emp.type) as fstr," +
                                "(emp.FIRST_NAME|| ' '|| REPLACE(emp.MIDDLE_NAME,'0','')|| ' '||REPLACE(emp.LAST_NAME,'0','')) as Employee_Name," +
                                "emp.gender as Gender,emp.emp_code as Employee_Code,emp.old_empcode as OldEmpCode,emp.External_EmpNo, emp.f_name as Father_Name,emp.contact_no as ContactNo," +
                                "to_char(emp.st_dt,'" + sgen.Getsqldateformat() + "') as Date_Of_Joining," +
                                "(case when emp.emp_status!='R' and (case when to_char(emp.ex_dt,'yyyy')='1900' then 1 when emp.ex_dt>to_date('" + Fdate + "','" + sgen.Getsqldateformat() + "') then 1 else 0 end)=1 " +
                                "then 'Active' else 'Left' end) as Status from emp_master emp inner join enx_tab2 ug on emp.emp_code = ug.col2 and emp.client_unit_id = ug.client_unit_id and ug.type = 'AAE'" +
                                " WHERE emp.client_unit_id= '" + unitid_mst + "' and emp.type= 'EMP' and emp.emp_status = 'Y' order by emp.emp_code asc";

                            if (param1 == "42003.3")
                            {
                                cmd = "select ud.vch_num fstr, ud.vch_num as id,ud.first_name||' '||replace(ud.middle_name,'0','')||''||replace(ud.last_name,'0','') as user_name ,nvl(dg.master_name,'-') as designation,nvl(dp.master_name,'-') as department" +
                                    " from user_details ud left join master_setting dp on dp.master_id = ud.department and dp.type = 'MDP' and find_in_set(dp.client_unit_id,'" + unitid_mst + "')= 1 " +
                                    "left join master_setting dg on dg.master_id = ud.designation and dg.type = 'MDG' and find_in_set(dg.client_unit_id, '" + unitid_mst + "') = 1 where ud.type = 'CPR'";
                            }

                            break;


                        case "AST":
                            if (sgen.GetSession(MyGuid, "PTYNAME") != null)
                            {
                                if (sgen.GetSession(MyGuid, "menu_id").ToString() == "33006.2")
                                {
                                    cmd = "select ug.client_id||ug.client_unit_id||ug.vch_num||to_char(ug.vch_date,'yyyymmdd')||ug.type as fstr,ug.vch_num as doc_no," +
                               "to_char(ug.vch_date, '" + sgen.Getsqldateformat() + "') as doc_date,ug.col5 as asset_serial,ug.col6 as asset_name,ug.col8 as expected_value" +
                               ",to_char(ug.date1, '" + sgen.Getsqldateformat() + "') as expected_return_date,ug.col3 as Remark from enx_tab2 ug inner join emp_master emp" +
                               " on emp.emp_code = ug.col2 and emp.client_unit_id = ug.client_unit_id and emp.type = 'EMP' and emp.emp_code = '" + sgen.GetSession(MyGuid, "PTYNAME").ToString() + "'left join master_setting dp on dp.master_id " +
                               "= emp.emp_dept and dp.type = 'MDP' and find_in_set(dp.client_unit_id,'" + unitid_mst + "')= 1 left join master_setting dg on dg.master_id = " +
                               "emp.emp_desig and dg.type = 'MDG' and find_in_set(dg.client_unit_id, '" + unitid_mst + "') = 1 where ug.client_unit_id = '" + unitid_mst + "' and ug.type = 'AAE' and ug.col18 = 'PENDING'";
                                }
                                if (sgen.GetSession(MyGuid, "menu_id").ToString() == "42003.3")
                                {
                                    cmd = "select ug.client_id||ug.client_unit_id||ug.vch_num||to_char(ug.vch_date,'yyyymmdd')||ug.type as fstr,ug.vch_num as doc_no," +
                                  "to_char(ug.vch_date, '" + sgen.Getsqldateformat() + "') as doc_date,ug.col5 as asset_serial,ug.col6 as asset_name,ug.col8 as expected_value" +
                                  ",to_char(ug.date1, '" + sgen.Getsqldateformat() + "') as expected_return_date,ug.col3 as Remark from enx_tab2 ug inner join user_details emp" +
                                  " on emp.vch_num = ug.col2  and emp.type = 'CPR' and emp.vch_num = '" + sgen.GetSession(MyGuid, "PTYNAME").ToString() + "'left join master_setting dp on dp.master_id " +
                                  "= emp.department and dp.type = 'MDP' and find_in_set(dp.client_unit_id,'" + unitid_mst + "')= 1 left join master_setting dg on dg.master_id = " +
                                  "emp.designation and dg.type = 'MDG' and find_in_set(dg.client_unit_id, '" + unitid_mst + "') = 1 where ug.client_unit_id = '" + unitid_mst + "' and ug.type = 'AAU' and ug.col18 = 'PENDING'";
                                }


                            }
                            break;
                    }
                    break;
                #endregion
                #region hr_empdoc
                case "hr_empdoc":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "VIEW":
                            if (sgen.GetSession(MyGuid, "EDOCTYPE") != null) type = sgen.GetSession(MyGuid, "EDOCTYPE").ToString();
                            cmd = "select distinct (e.client_id||e.client_unit_id||e.vch_num||to_char(e.vch_date,'yyyymmdd')||e.type) fstr,t.emp_code Employee_code," +
                                "(t.FIRST_NAME|| ' '|| REPLACE(t.MIDDLE_NAME,'0','')|| ' '||REPLACE(t.LAST_NAME,'0','')) Employee_Name from enx_tab e " +
                                "inner join emp_master t on e.col2=t.vch_num and t.type='EMP' and t.client_id='" + clientid_mst + "' and t.client_unit_id='" + unitid_mst + "' " +
                                "where e.type='" + type + "' and e.client_id='" + clientid_mst + "' and e.client_unit_id='" + unitid_mst + "'";
                            break;
                        case "EMP":
                            string Fdate = sgen.server_datetime_dt(userCode).ToString("dd/MM/yyyy");
                            cmd = "select (emp.client_id||emp.client_unit_id||emp.vch_num||to_char(emp.vch_date,'yyyymmdd')||emp.type) as fstr," +
                                "(emp.FIRST_NAME|| ' '|| REPLACE(emp.MIDDLE_NAME,'0','')|| ' '||REPLACE(emp.LAST_NAME,'0','')) as Employee_Name," +
                                "emp.gender as Gender,emp.emp_code as Employee_Code,emp.old_empcode as OldEmpCode,emp.External_EmpNo," +
                                "to_char(emp.dob,'" + sgen.Getsqldateformat() + "') as DOB,emp.f_name as Father_Name,emp.m_name as Mother_Name,emp.contact_no as ContactNo," +
                                "to_char(emp.st_dt,'" + sgen.Getsqldateformat() + "') as Date_Of_Joining," +
                                "(case when emp.emp_status!='R' and (case when to_char(emp.ex_dt,'yyyy')='1900' then 1 when emp.ex_dt>to_date('" + Fdate + "','" + sgen.Getsqldateformat() + "') then 1 else 0 end)=1 " +
                                "then 'Active' else 'Left' end) as Status" +
                                " from emp_master emp " +
                                "WHERE emp.client_unit_id= '" + unitid_mst + "' and emp.type= 'EMP' order by emp.emp_code asc";
                            break;
                    }
                    break;
                #endregion
                #region reg_apr
                case "reg_apr":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "VIEW":
                            cmd = "select (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.vch_num Doc_No,a.col5 as certificate_name,a.col19 as reminer_before,a.col3 as short_description," +
                                "a.col4 as long_description from enx_tab2 a where a.type='RUC' and a.client_unit_id='" + unitid_mst + "'";

                            break;
                    }
                    break;
                #endregion
                #region add challan
                case "add_chl":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "VIEW":
                            cmd = "select (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.vch_num as doc_no" +
                                ",a.col1 as chl_serial,a.col2 as totchl_amount,to_char(a.date1,'dd/mm/yyy') as voucher_date,a.col3 as bsr_code," +
                                "a.col21 as bank_name,a.col4 as tds,a.col5 as surcharge,a.col6 as education_cess,a.col7 as interest," +
                                "a.col8 as others,a.col9 as cheque_no,to_char(a.date2, 'dd/mm/yyy') as payment_date," +
                                "to_char(a.date3, 'dd/mm/yyy') as deduction_date,a.col10 as ack_no,a.col11 as late_fee from kc_tab a where " +
                                "a.client_unit_id = '" + unitid_mst + "' and a.type = 'CHL'";

                            break;
                    }
                    break;
                #endregion
                #region asset master
                case "asst_mst":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "VIEW":
                            cmd = "select (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.vch_num as doc_no,a.col3 as asset_name" +
                                ",a.col5 as asset_model,a.col6 as asset_serial,to_char(a.date1, 'dd/mm/yyy') as invoice_date,a.col7 as invoice_no" +
                                ",a.col8 as original_value,a.col9 as current_value,a.col11 as quantity,a.col10 as Warranty,a.col1 as Remark from enx_tab2 a where " +
                                "a.client_unit_id = '" + unitid_mst + "' and a.type = 'ASS'";
                            break;
                    }
                    break;
                #endregion
                #region delegates
                case "delgts":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "VIEW":
                            cmd = "select (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.vch_num as doc_no,(emp.FIRST_NAME|| ' '|| REPLACE(emp.MIDDLE_NAME,'0','')|| ' '||REPLACE(emp.LAST_NAME,'0','')) as Employee_Name,nvl(dp.master_name, '-') as department,nvl(dg.master_name, '-') as designation,to_char(a.date1, 'dd/mm/yyy') as from_date,to_char(a.date2, 'dd/mm/yyy') as to_date from enx_tab2 a " +
                                " inner join emp_master emp on a.col5=(emp.client_id||emp.client_unit_id||emp.vch_num||to_char(emp.vch_date,'yyyymmdd')||emp.type) inner join master_setting dp on dp.master_id=emp.emp_dept and dp.type='MDP' and find_in_set(dp.client_unit_id,emp.client_unit_id)=1 " +
                             "inner join master_setting dg on dg.master_id=emp.emp_desig and dg.type='MDG' and find_in_set(dg.client_unit_id,emp.client_unit_id)=1 where " +
                                "a.client_unit_id = '" + unitid_mst + "' and a.type = 'WGT'";
                            break;
                    }
                    break;
                #endregion
                #region family_det
                case "family_det":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "DETAIL":
                            cmd = "select ug.client_id||ug.client_unit_id||ug.vch_num||to_char(ug.vch_date,'yyyymmdd')||ug.type as fstr,ug.vch_num as doc_no," +
                                "to_char(ug.vch_date, '" + sgen.Getsqldateformat() + "') as doc_date,(emp.FIRST_NAME || ' ' || REPLACE(emp.MIDDLE_NAME, '0', '') || ' ' || REPLACE(emp.LAST_NAME, '0', '')) as Employee_Name," +
                                "emp.emp_code as Employee_Code,nvl(dg.master_name, '-') as designation,nvl(dp.master_name, '-') as department,ug.col16 as Member_name,ug.col17 as gender,ug.col20 as blood_group,ug.col6 as Email_id" +
                                ",ug.col8 as Nationality,to_char(ug.date1, '" + sgen.Getsqldateformat() + "') as date_of_birth,ug.col5 as mobile,ug.col7 as Profession,ug.col3 as Address" +
                                " from enx_tab2 ug inner join emp_master emp" +
                                " on emp.emp_code = ug.col2 and emp.client_unit_id = ug.client_unit_id and emp.type = 'EMP' left join master_setting dp on dp.master_id " +
                                "= emp.emp_dept and dp.type = 'MDP' and find_in_set(dp.client_unit_id,'" + unitid_mst + "')= 1 left join master_setting dg on dg.master_id = " +
                                "emp.emp_desig and dg.type = 'MDG' and find_in_set(dg.client_unit_id, '" + unitid_mst + "') = 1 where ug.client_unit_id = '" + unitid_mst + "' and ug.type = 'FDT'";
                            break;
                        case "EMP":
                            string Fdate = sgen.server_datetime_dt(userCode).ToString("dd/MM/yyyy");
                            cmd = "select (emp.client_id||emp.client_unit_id||emp.vch_num||to_char(emp.vch_date,'yyyymmdd')||emp.type) as fstr," +
                                "(emp.FIRST_NAME|| ' '|| REPLACE(emp.MIDDLE_NAME,'0','')|| ' '||REPLACE(emp.LAST_NAME,'0','')) as Employee_Name," +
                                "emp.gender as Gender,emp.emp_code as Employee_Code,emp.old_empcode as OldEmpCode,emp.External_EmpNo, emp.f_name as Father_Name,emp.contact_no as ContactNo," +
                                "to_char(emp.st_dt,'" + sgen.Getsqldateformat() + "') as Date_Of_Joining," +
                                "(case when emp.emp_status!='R' and (case when to_char(emp.ex_dt,'yyyy')='1900' then 1 when emp.ex_dt>to_date('" + Fdate + "','" + sgen.Getsqldateformat() + "') then 1 else 0 end)=1 " +
                                "then 'Active' else 'Left' end) as Status from emp_master emp " +
                                "WHERE emp.client_unit_id= '" + unitid_mst + "' and emp.type= 'EMP' and emp.emp_status = 'Y' order by emp.emp_code asc";
                            break;
                    }
                    break;
                #endregion
                #region nomination
                case "nomination":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "DETAIL":
                            cmd = "select ug.client_id||ug.client_unit_id||ug.vch_num||to_char(ug.vch_date,'yyyymmdd')||ug.type as fstr," +
                                "ug.vch_num as doc_no,to_char(ug.vch_date, '" + sgen.Getsqldateformat() + "') as doc_date,ug.col5 as Nomination_For,b.col16 || '(' || rl.master_name || ')' as family_member" +
                                ",ug.col7 as nomination_per from enx_tab2 ug inner join enx_tab2 b on b.vch_num = ug.col6 and b.type = 'FDT' and b.client_unit_id = ug.client_unit_id " +
                                "inner join master_setting rl on rl.master_id = b.col21 and rl.type = 'REL' and find_in_set(rl.client_unit_id, b.client_unit_id)= 1 where " +
                                "ug.client_unit_id = '" + unitid_mst + "' and ug.type = 'NDT'";
                            break;
                    }
                    break;
                #endregion
                #region card_det
                case "card_det":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "DETAIL":
                            cmd = "select ug.client_id||ug.client_unit_id||ug.vch_num||to_char(ug.vch_date,'yyyymmdd')||ug.type as fstr," +
                                "ug.vch_num as doc_no,to_char(ug.vch_date, '" + sgen.Getsqldateformat() + "') as doc_date,ug.col5 as Card_no,to_char(ug.date1, '" + sgen.Getsqldateformat() + "') as from_date,to_char(ug.date2, '" + sgen.Getsqldateformat() + "') as to_date,ug.col3 as Remark from enx_tab2 ug  where ug.client_unit_id = '" + unitid_mst + "' and ug.type = 'CRD'";

                            break;
                    }
                    break;
                #endregion
                #region hd_wf
                case "hd_wf":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "DETAIL":
                            cmd = "select distinct ug.client_id||ug.client_unit_id||ug.vch_num||to_char(ug.vch_date,'yyyymmdd')||ug.type as fstr," +
                                "ug.vch_num as doc_no,to_char(ug.vch_date, '" + sgen.Getsqldateformat() + "') as doc_date,b.master_name as help_type from enx_tab2 ug " +
                                "inner join master_setting b on b.master_id=ug.col5 and find_in_set(ug.client_unit_id,b.client_unit_id)=1 and b.type='HTM' " +
                                "where ug.client_unit_id = '" + unitid_mst + "' and ug.type = 'HWF'";

                            break;
                    }
                    break;
                #endregion
                #region faq master
                case "faq_m":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "DETAIL":
                            cmd = "select ug.client_id||ug.client_unit_id||ug.vch_num||to_char(ug.vch_date,'yyyymmdd')||ug.type as fstr," +
                                "ug.vch_num as doc_no,to_char(ug.vch_date, '" + sgen.Getsqldateformat() + "') as doc_date,b.master_name as help_type,ug.col23 as question,ug.col24 as answer from enx_tab2 ug " +
                                "inner join master_setting b on b.master_id=ug.col5 and find_in_set(ug.client_unit_id,b.client_unit_id)=1 and b.type='HTM' " +
                                "where ug.client_unit_id = '" + unitid_mst + "' and ug.type = 'FQM'";
                            break;
                    }
                    break;
                #endregion
                #region faq add
                case "faq_add":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "DETAIL":
                            cmd = "select ug.client_id||ug.client_unit_id||ug.vch_num||to_char(ug.vch_date,'yyyymmdd')||ug.type as fstr," +
                                "ug.vch_num as doc_no,to_char(ug.vch_date, '" + sgen.Getsqldateformat() + "') as doc_date,b.master_name as help_type,ug.col23 as query from enx_tab2 ug " +
                                "inner join master_setting b on b.master_id=ug.col5 and find_in_set(ug.client_unit_id,b.client_unit_id)=1 and b.type='HTM' " +
                                "where ug.client_unit_id = '" + unitid_mst + "' and ug.type = 'FQR'";
                            break;
                    }
                    break;
                #endregion
                #region awf
                case "awf":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "DETAIL":
                            if (sgen.GetSession(MyGuid, "menu_id").ToString() == "33006.3")
                            {
                                cmd = "select ug.client_id||ug.client_unit_id||ug.vch_num||to_char(ug.vch_date,'yyyymmdd')||ug.type as fstr,ug.vch_num as doc_no,to_char(ug.vch_date, '" + sgen.Getsqldateformat() + "') as doc_date,ast.vch_num as asset_code,ast.col6 as asset_serial,ast.col3 as asset_name,(emp.FIRST_NAME || ' ' || REPLACE(emp.MIDDLE_NAME, '0', '') || ' ' || REPLACE(emp.LAST_NAME, '0', '')) as Employee_Name,emp.emp_code as Employee_Code,nvl(dg.master_name, '-') as designation,nvl(dp.master_name, '-') as department,ug.col6 as quantity,ug.col7 as Value,ug.col8 as app_by,ug.col3 as remark from enx_tab2 ug inner join enx_tab2 alc on alc.client_unit_id || alc.vch_num || alc.col10 || to_char(alc.vch_date, 'yyyymmdd') || alc.type = ug.col5 inner join enx_tab2 ast on ast.vch_num = alc.col10 and ast.type = 'ASS' and ast.client_unit_id = alc.client_unit_id inner join emp_master emp on emp.emp_code = alc.col2 and emp.client_unit_id = alc.client_unit_id and emp.type = 'EMP' left join master_setting dp on dp.master_id = emp.emp_dept and dp.type = 'MDP' and find_in_set(dp.client_unit_id,'" + unitid_mst + "')= 1 left join master_setting dg on dg.master_id = emp.emp_desig and dg.type = 'MDG' and find_in_set(dg.client_unit_id, '" + unitid_mst + "') = 1 where ug.client_unit_id = '" + unitid_mst + "' and ug.type = 'AWF'";
                            }

                            if (sgen.GetSession(MyGuid, "menu_id").ToString() == "42003.4")
                            {

                                cmd = "select ug.client_id||ug.client_unit_id||ug.vch_num||to_char(ug.vch_date,'yyyymmdd')||ug.type as fstr,ug.vch_num as doc_no,to_char(ug.vch_date, '" + sgen.Getsqldateformat() + "') as doc_date,ast.vch_num as asset_code,ast.col6 as asset_serial,ast.col3 as asset_name,(emp.FIRST_NAME || ' ' || REPLACE(emp.MIDDLE_NAME, '0', '') || ' ' || REPLACE(emp.LAST_NAME, '0', '')) as User_Name,emp.vch_num as user_id,nvl(dg.master_name, '-') as designation,nvl(dp.master_name, '-') as department,ug.col6 as quantity,ug.col7 as Value,ug.col8 as app_by,ug.col3 as remark from enx_tab2 ug inner join enx_tab2 alc on alc.client_unit_id || alc.vch_num || alc.col10 || to_char(alc.vch_date, 'yyyymmdd') || alc.type = ug.col5 inner join enx_tab2 ast on ast.vch_num = alc.col10 and ast.type = 'ASS' and ast.client_unit_id = alc.client_unit_id inner join user_details emp on emp.vch_num = alc.col2  and emp.type = 'CPR' left join master_setting dp on dp.master_id = emp.department and dp.type = 'MDP' and find_in_set(dp.client_unit_id,'" + unitid_mst + "')= 1 left join master_setting dg on dg.master_id = emp.designation and dg.type = 'MDG' and find_in_set(dg.client_unit_id, '" + unitid_mst + "') = 1 where ug.client_unit_id = '" + unitid_mst + "' and ug.type = 'AWU'";
                                //cmd = "select ug.client_id||ug.client_unit_id||ug.vch_num||to_char(ug.vch_date,'yyyymmdd')||ug.type as fstr,ug.vch_num as doc_no,to_char(ug.vch_date, '" + sgen.Getsqldateformat() + "') as doc_date,ast.vch_num as asset_code,ast.col6 as asset_serial,ast.col3 as asset_name,(emp.FIRST_NAME || ' ' || REPLACE(emp.MIDDLE_NAME, '0', '') || ' ' || REPLACE(emp.LAST_NAME, '0', '')) as Employee_Name,emp.vch_num as user_id,nvl(dg.master_name, '-') as designation,nvl(dp.master_name, '-') as department,ug.col6 as quantity,ug.col7 as Value,ug.col8 as app_by,ug.col3 as remark from enx_tab2 ug inner join enx_tab2 alc on alc.client_unit_id || alc.vch_num || alc.col10 || to_char(alc.vch_date, 'yyyymmdd') || alc.type = ug.col5 inner join enx_tab2 ast on ast.vch_num = alc.col10 and ast.type = 'ASS' and ast.client_unit_id = alc.client_unit_id inner join user_details emp on emp.vch_num = alc.col2  and emp.type = 'CPR' left join master_setting dp on dp.master_id = emp.department and dp.type = 'MDP' and find_in_set(dp.client_unit_id,'" + unitid_mst + "')= 1 left join master_setting dg on dg.master_id = emp.designation and dg.type = 'MDG' and find_in_set(dg.client_unit_id, '" + unitid_mst + "') = 1 where ug.client_unit_id = '" + unitid_mst + "' and ug.type = 'AWF'";

                            }

                            break;
                        case "ASSET":
                            if (sgen.GetSession(MyGuid, "menu_id").ToString() == "33006.3")
                            {
                                cmd = "select ug.client_unit_id||ug.vch_num||ug.col10||to_char(ug.vch_date,'yyyymmdd')||ug.type as fstr," +
                                "ug.col10 as asset_doc,ast.asset_serial,ast.asset_name,to_char(ug.date1, '" + sgen.Getsqldateformat() + "') as expected_return_date,ug.col18 as status,(emp.FIRST_NAME || ' ' || REPLACE(emp.MIDDLE_NAME, '0', '') || ' ' || REPLACE(emp.LAST_NAME, '0', '')) as Employee_Name," +
                               "emp.emp_code as Employee_Code,nvl(dg.master_name, '-') as designation,nvl(dp.master_name, '-') as department from enx_tab2 ug inner join emp_master emp" +
                               " on emp.emp_code = ug.col2 and emp.client_unit_id = ug.client_unit_id and emp.type = 'EMP' left join master_setting dp on dp.master_id " +
                               "= emp.emp_dept and dp.type = 'MDP' and find_in_set(dp.client_unit_id,'" + unitid_mst + "')= 1 left join master_setting dg on dg.master_id = " +
                               "emp.emp_desig and dg.type = 'MDG' and find_in_set(dg.client_unit_id, '" + unitid_mst + "') = 1 " +
                               "inner join (select a.vch_num as doc_no,a.col5 as asset_model,a.col3 as asset_name,a.col6 as asset_serial,to_char(a.date1, 'dd/mm/yyy') as invoice_date,a.col8 as invoice_no" +
                                ",a.col8 as original_value,a.col9 as current_value,a.col10 as Warranty,a.col1 as Remark from enx_tab2 a where " +
                                "a.client_unit_id = '" + unitid_mst + "' and a.type = 'ASS') ast on ast.doc_no = ug.col10" +
                               " where ug.client_unit_id = '" + unitid_mst + "' and ug.type = 'AAE' and ug.col18='PENDING'";
                            }
                            if (sgen.GetSession(MyGuid, "menu_id").ToString() == "42003.4")
                            {
                                cmd = "select ug.client_unit_id||ug.vch_num||ug.col10||to_char(ug.vch_date,'yyyymmdd')||ug.type as fstr," +
                                "ug.col10 as asset_doc,ast.asset_serial,ast.asset_name,to_char(ug.date1, '" + sgen.Getsqldateformat() + "') as expected_return_date,ug.col18 as status,(emp.FIRST_NAME || ' ' || REPLACE(emp.MIDDLE_NAME, '0', '') || ' ' || REPLACE(emp.LAST_NAME, '0', '')) as user_Name," +
                               "emp.vch_num as user_id,nvl(dg.master_name, '-') as designation,nvl(dp.master_name, '-') as department from enx_tab2 ug inner join user_details emp" +
                               " on emp.vch_num = ug.col2  and emp.type = 'CPR' left join master_setting dp on dp.master_id " +
                               "= emp.department and dp.type = 'MDP' and find_in_set(dp.client_unit_id,'" + unitid_mst + "')= 1 left join master_setting dg on dg.master_id = " +
                               "emp.designation and dg.type = 'MDG' and find_in_set(dg.client_unit_id, '" + unitid_mst + "') = 1 " +
                               "inner join (select a.vch_num as doc_no,a.col5 as asset_model,a.col3 as asset_name,a.col6 as asset_serial,to_char(a.date1, 'dd/mm/yyy') as invoice_date,a.col8 as invoice_no" +
                                ",a.col8 as original_value,a.col9 as current_value,a.col10 as Warranty,a.col1 as Remark from enx_tab2 a where " +
                                "a.client_unit_id = '" + unitid_mst + "' and a.type = 'ASS') ast on ast.doc_no = ug.col10" +
                               " where ug.client_unit_id = '" + unitid_mst + "' and ug.type = 'AAU' and ug.col18='PENDING'";
                            }
                            break;
                    }
                    break;
                #endregion
                #region hr_report
                case "hr_report":
                    switch (btnval.ToUpper())
                    {
                        case "ASSSET":
                            if (sgen.GetSession(MyGuid, "menu_id").ToString() == "33006.5")
                            {
                                cmd = "select a.vch_num as asset_no,a.vch_num as doc_no,a.col3 as asset_name,ty.master_name as Category" +
                                ",a.col11 as purchase_qty,nvl(uf.emp_qty, 0) as qty_with_employee,nvl((a.col11 - uf.emp_qty), a.col11) as qty_in_stock from enx_tab2 a inner join master_setting " +
                                "ty on ty.master_id = a.col17 and ty.type = 'ATY' and find_in_set(ty.client_unit_id,'" + unitid_mst + "')= 1 " +
                                "left join(select max(ug.vch_num) vch_num, max(ug.client_unit_id) client_unit_id, count(ug.col8) emp_qty, ug.col10 " +
                                "from enx_tab2 ug inner join enx_tab2 b on b.vch_num= ug.col10 and b.type= 'ASS' and ug.client_unit_id= " +
                                "b.client_unit_id where ug.client_unit_id = '" + unitid_mst + "' and ug.type = 'AAE' group by ug.col10) uf on " +
                                "uf.col10 = a.vch_num and uf.client_unit_id = a.client_unit_id where a.client_unit_id = '" + unitid_mst + "' and " +
                                "a.type = 'ASS'";
                            }

                            if (sgen.GetSession(MyGuid, "menu_id").ToString() == "42003.7")
                            {
                                cmd = "select a.vch_num as asset_no,a.vch_num as doc_no,a.col3 as asset_name,ty.master_name as Category" +
                                ",a.col11 as purchase_qty,nvl(uf.emp_qty, 0) as qty_with_user,nvl((a.col11 - uf.emp_qty), a.col11) as qty_in_stock from enx_tab2 a inner join master_setting " +
                                "ty on ty.master_id = a.col17 and ty.type = 'ATY' and find_in_set(ty.client_unit_id,'" + unitid_mst + "')= 1 " +
                                "left join(select max(ug.vch_num) vch_num, max(ug.client_unit_id) client_unit_id, count(ug.col8) emp_qty, ug.col10 " +
                                "from enx_tab2 ug inner join enx_tab2 b on b.vch_num= ug.col10 and b.type= 'ASS' and ug.client_unit_id= " +
                                "b.client_unit_id where ug.client_unit_id = '" + unitid_mst + "' and ug.type = 'AAU' group by ug.col10) uf on " +
                                "uf.col10 = a.vch_num and uf.client_unit_id = a.client_unit_id where a.client_unit_id = '" + unitid_mst + "' and " +
                                "a.type = 'ASS'";
                            }
                            break;
                        case "ASSSETDET":
                            if (sgen.GetSession(MyGuid, "menu_id").ToString() == "33006.5")
                            {
                                cmd = "select ug.client_id||ug.client_unit_id||ug.vch_num||to_char(ug.vch_date,'yyyymmdd')||ug.type as fstr,(emp.FIRST_NAME || ' ' || REPLACE(emp.MIDDLE_NAME, '0', '') || ' ' || REPLACE(emp.LAST_NAME, '0', '')) as Employee_Name," +
       "emp.emp_code as Employee_Code,nvl(dg.master_name, '-') as designation,nvl(dp.master_name, '-') as department,b.col3 as asset_name from enx_tab2 ug inner join emp_master emp" +
       " on emp.emp_code = ug.col2 and emp.client_unit_id = ug.client_unit_id and emp.type = 'EMP' " +
       "inner join enx_tab2 b on b.vch_num= ug.col10 and b.type= 'ASS' and ug.client_unit_id= b.client_unit_id and b.vch_num = '" + param1.ToString() + "'" +
       " left join master_setting dp on dp.master_id = emp.emp_dept and dp.type = 'MDP' and find_in_set(dp.client_unit_id,'" + unitid_mst + "')= 1 left join master_setting dg on dg.master_id = " +
       "emp.emp_desig and dg.type = 'MDG' and find_in_set(dg.client_unit_id, '" + unitid_mst + "') = 1 where ug.client_unit_id = '" + unitid_mst + "' and ug.type = 'AAE'";
                            }

                            if (sgen.GetSession(MyGuid, "menu_id").ToString() == "42003.7")
                            {
                                cmd = "select ug.client_id||ug.client_unit_id||ug.vch_num||to_char(ug.vch_date,'yyyymmdd')||ug.type as fstr,(emp.FIRST_NAME || ' ' || REPLACE(emp.MIDDLE_NAME, '0', '') || ' ' || REPLACE(emp.LAST_NAME, '0', '')) as User_Name," +
       "emp.vch_num as user_id,nvl(dg.master_name, '-') as designation,nvl(dp.master_name, '-') as department,b.col3 as asset_name from enx_tab2 ug inner join user_details emp" +
       " on emp.vch_num = ug.col2  and emp.type = 'CPR' " +
       "inner join enx_tab2 b on b.vch_num= ug.col10 and b.type= 'ASS' and ug.client_unit_id= b.client_unit_id and b.vch_num = '" + param1.ToString() + "'" +
       " left join master_setting dp on dp.master_id = emp.department and dp.type = 'MDP' and find_in_set(dp.client_unit_id,'" + unitid_mst + "')= 1 left join master_setting dg on dg.master_id = " +
       "emp.designation and dg.type = 'MDG' and find_in_set(dg.client_unit_id, '" + unitid_mst + "') = 1 where ug.client_unit_id = '" + unitid_mst + "' and ug.type = 'AAU'";
                            }
                            break;
                        case "ASEMP":
                            string Fdate = sgen.server_datetime_dt(userCode).ToString("dd/MM/yyyy");
                            if (sgen.GetSession(MyGuid, "menu_id").ToString() == "33006.5")
                            {
                                cmd = "select (emp.client_id||emp.client_unit_id||emp.vch_num||to_char(emp.vch_date,'yyyymmdd')||emp.type) as fstr," +
                                "(emp.FIRST_NAME|| ' '|| REPLACE(emp.MIDDLE_NAME,'0','')|| ' '||REPLACE(emp.LAST_NAME,'0','')) as Employee_Name," +
                                "emp.gender as Gender,emp.emp_code as Employee_Code,emp.old_empcode as OldEmpCode,emp.External_EmpNo, emp.f_name as Father_Name,emp.contact_no as ContactNo," +
                                "to_char(emp.st_dt,'" + sgen.Getsqldateformat() + "') as Date_Of_Joining," +
                                "(case when emp.emp_status!='R' and (case when to_char(emp.ex_dt,'yyyy')='1900' then 1 when emp.ex_dt>to_date('" + Fdate + "','" + sgen.Getsqldateformat() + "') then 1 else 0 end)=1 " +
                                "then 'Active' else 'Left' end) as Status from emp_master emp " +
                                "WHERE emp.client_unit_id= '" + unitid_mst + "' and emp.type= 'EMP' and emp.emp_status='Y' order by emp.emp_code asc";
                            }

                            if (sgen.GetSession(MyGuid, "menu_id").ToString() == "42003.7")
                            {
                                cmd = "select (emp.client_id||emp.client_unit_id||emp.vch_num||to_char(emp.vch_date,'yyyymmdd')||emp.type) as fstr," +
                                "(emp.FIRST_NAME|| ' '|| REPLACE(emp.MIDDLE_NAME,'0','')|| ' '||REPLACE(emp.LAST_NAME,'0','')) as Employee_Name," +
                                "emp.vch_num as user_id,nvl(dg.master_name, '-') as designation,nvl(dp.master_name, '-') as department " +
                                " from user_details emp left join master_setting dp on dp.master_id = emp.department and dp.type = 'MDP' and find_in_set(dp.client_unit_id,'" + unitid_mst + "')= 1 left join master_setting dg on dg.master_id = " +
       "emp.designation and dg.type = 'MDG' and find_in_set(dg.client_unit_id, '" + unitid_mst + "') = 1  " +
                                "WHERE emp.client_unit_id= '" + unitid_mst + "' and emp.type= 'CPR'  ";
                            }
                            break;
                        case "ASEMPDET":
                            if (sgen.GetSession(MyGuid, "menu_id").ToString() == "33006.5")
                            {
                                cmd = "select ug.client_id||ug.client_unit_id||ug.vch_num||to_char(ug.vch_date,'yyyymmdd')||ug.type as fstr,(emp.FIRST_NAME || ' ' || REPLACE(emp.MIDDLE_NAME, '0', '') || ' ' || REPLACE(emp.LAST_NAME, '0', '')) as Employee_Name," +
     "emp.emp_code as Employee_Code,nvl(dg.master_name, '-') as designation,nvl(dp.master_name, '-') as department,b.col3 as asset_name,b.col11 as purchase_qty,ug.col8 as asset_with_emp from enx_tab2 ug inner join emp_master emp" +
     " on emp.emp_code = ug.col2 and emp.client_unit_id = ug.client_unit_id and emp.type = 'EMP' and (emp.client_id||emp.client_unit_id||emp.vch_num||to_char(emp.vch_date,'yyyymmdd')||emp.type) = '" + param1.ToString() + "'" +
     "inner join enx_tab2 b on b.vch_num= ug.col10 and b.type= 'ASS' and ug.client_unit_id= b.client_unit_id" +
     " left join master_setting dp on dp.master_id = emp.emp_dept and dp.type = 'MDP' and find_in_set(dp.client_unit_id,'" + unitid_mst + "')= 1 left join master_setting dg on dg.master_id = " +
     "emp.emp_desig and dg.type = 'MDG' and find_in_set(dg.client_unit_id, '" + unitid_mst + "') = 1 where ug.client_unit_id = '" + unitid_mst + "' and ug.type = 'AAE'";
                            }
                            if (sgen.GetSession(MyGuid, "menu_id").ToString() == "42003.7")
                            {
                                cmd = "select ug.client_id||ug.client_unit_id||ug.vch_num||to_char(ug.vch_date,'yyyymmdd')||ug.type as fstr,(emp.FIRST_NAME || ' ' || REPLACE(emp.MIDDLE_NAME, '0', '') || ' ' || REPLACE(emp.LAST_NAME, '0', '')) as Employee_Name," +
     "nvl(dg.master_name, '-') as designation,nvl(dp.master_name, '-') as department,b.col3 as asset_name,b.col11 as purchase_qty,ug.col8 as asset_with_user from enx_tab2 ug inner join user_details emp" +
     " on emp.vch_num = ug.col2  and emp.type = 'CPR' and (emp.client_id||emp.client_unit_id||emp.vch_num||to_char(emp.vch_date,'yyyymmdd')||emp.type) = '" + param1.ToString() + "'" +
     " inner join enx_tab2 b on b.vch_num= ug.col10 and b.type= 'ASS' and ug.client_unit_id= b.client_unit_id" +
     " left join master_setting dp on dp.master_id = emp.department and dp.type = 'MDP' and find_in_set(dp.client_unit_id,'" + unitid_mst + "')= 1 " +
     "left join master_setting dg on dg.master_id = emp.designation and dg.type = 'MDG' and find_in_set(dg.client_unit_id, '" + unitid_mst + "') = 1 where ug.client_unit_id = '" + unitid_mst + "' and ug.type = 'AAU'";
                            }
                            break;
                        case "CATWISE":
                            cmd = "select '-' as fstr,ty.master_name as Category,count(a.vch_num) as total_assets from enx_tab2 a inner join master_setting " +
                                    "ty on ty.master_id = a.col17 and ty.type = 'ATY' and find_in_set(ty.client_unit_id,'" + unitid_mst + "')= 1 " +
                                    " where a.client_unit_id = '" + unitid_mst + "' and a.type = 'ASS' group by ty.master_name";
                            break;
                    }
                    break;
                #endregion
                #region service master
                case "serc_master":
                    switch (btnval.ToUpper())
                    {
                        //case "SUBGRP":
                        //    if (param1 == null)
                        //    {
                        //        param1 = "";
                        //    }
                        //    cmd = "select sg.icode||to_char(sg.vch_date,'yyyymmdd')||sg.type as fstr,(case when substr(sg.icode,1,2)<>'99' then substr(sg.icode,1,1) else substr(sg.icode,1,2) end) Main_Grp_id," +
                        //        "substr(sg.icode,1,3) Item_grp_id,gp.master_name Item_Grp,sg.icode Item_sgrp_id," +
                        //        "sg.iname Item_subgrp from item sg " +
                        //        "inner join master_setting gp on gp.master_id=substr(sg.icode,1,3) and gp.type='KIG' and substr(sg.icode,1,3)='" + param1.ToString() + "' and find_in_set(gp.client_unit_id,'" + unitid_mst + "')=1 " +
                        //        "where sg.type='SG' and find_in_set(sg.client_unit_id,'" + unitid_mst + "')=1";
                        //    break;
                        case "EDIT":
                        case "DETAIL":
                            cmd = "select ug.client_id||ug.client_unit_id||ug.vch_num||to_char(ug.vch_date,'yyyymmdd')||ug.type as fstr," +
                                "ug.vch_num as doc_no,to_char(ug.vch_date, '" + sgen.Getsqldateformat() + "') as doc_date,ug.col3 as service_name,ug.col4 as description from enx_tab2 ug " +
                                "where ug.client_unit_id = '" + unitid_mst + "' and ug.type = 'SMT'";
                            break;
                    }
                    break;
                #endregion
                #region srv invoice
                case "srv_inv":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "PRINT":
                        case "SEND":
                            cmd = "select distinct (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) as fstr,p.vch_num Doc_number,to_char(p.vch_date, '" + sgen.Getsqldateformat() + "') DOC_date," +
                                "c.c_name as Party_Name,c.c_gstin as Party_Gstin,c.addr as Party_Address,c.comp_email EMAIL_ID from itransaction p " +
                                "inner join clients_mst c on p.acode = c.vch_num and c.type = 'BCD' and find_in_set(c.client_unit_id, p.client_unit_id)=1 " +
                                "where p.client_unit_id = '" + unitid_mst + "' and p.type= '48' and to_date(to_char(p.vch_DATE,'ddMMyyyy'),'ddMMyyyy') between to_date('" + year_from + "','" + sgen.Getsqldatetimeformat() + "') and to_date('" + year_to + "','" + sgen.Getsqldatetimeformat() + "') order by p.vch_num desc";
                            break;
                        case "PRINTDRFT":
                            cmd = "select distinct (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) as fstr,p.vch_num Doc_number,to_char(p.vch_date, '" + sgen.Getsqldateformat() + "') DOC_date," +
                                "c.c_name as Party_Name,c.c_gstin as Party_Gstin,c.addr as Party_Address,c.comp_email EMAIL_ID from itransactionc p " +
                                "inner join clients_mst c on p.acode = c.vch_num and c.type = 'BCD' and find_in_set(c.client_unit_id, p.client_unit_id)=1 " +
                                "where p.client_unit_id = '" + unitid_mst + "' and p.type= '48' and to_date(to_char(p.vch_DATE,'ddMMyyyy'),'ddMMyyyy') between to_date('" + year_from + "','" + sgen.Getsqldatetimeformat() + "') and to_date('" + year_to + "','" + sgen.Getsqldatetimeformat() + "') order by p.vch_num desc";
                            break;
                        case "VIEW":
                            cmd = "select distinct (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) as fstr,p.vch_num doc_number,to_char(p.vch_date, '" + sgen.Getsqldateformat() + "') doc_date," +
                                "c.c_name as Party_Name,c.c_gstin as Party_Gstin,c.addr as Party_Address," +
                                " p.icode service_code, p.iname service_name, p.uom UOM, p.hsno HSN,p.taxrate TaxRate,p.ordqty Quantity, p.irate Rate, iamount Ser_Amt,p.taxamt taxamt,p.disctype Discount_Type, p.discrate Discount_Rate," +
                                " p.discamt Discount_Amt,p.lineamount LineAmt,p.gserchrg IGST, p.gloadchrg SGST, p.gamc CGST, p.basicamt BasicAmt, p.ginstlchrg GrossAmt, p.gtaxamt as Net_Amount from itransaction p " +
                                "inner join clients_mst c on p.acode = c.vch_num and c.type = 'BCD' and find_in_set(c.client_unit_id, p.client_unit_id)=1 " +
                                "where p.client_unit_id = '" + unitid_mst + "' and p.type= '48' and to_date(to_char(p.vch_DATE,'ddMMyyyy'),'ddMMyyyy') between to_date('" + year_from + "','" + sgen.Getsqldatetimeformat() + "') and to_date('" + year_to + "','" + sgen.Getsqldatetimeformat() + "') order by p.vch_num desc";
                            break;
                        case "DRAFT":
                            cmd = "select distinct (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) as fstr,p.vch_num Doc_number,to_char(p.vch_date, '" + sgen.Getsqldateformat() + "') DOC_date," +
                               "c.c_name as Party_Name,c.c_gstin as Party_Gstin,c.addr as Party_Address,c.comp_email EMAIL_ID from itransactionc p " +
                               "inner join clients_mst c on p.acode = c.vch_num and c.type = 'BCD' and find_in_set(c.client_unit_id, p.client_unit_id)=1 " +
                               "where p.client_unit_id = '" + unitid_mst + "' and p.type= '48' and to_date(to_char(p.vch_DATE,'ddMMyyyy'),'ddMMyyyy') between to_date('" + year_from + "','" + sgen.Getsqldatetimeformat() + "') and to_date('" + year_to + "','" + sgen.Getsqldatetimeformat() + "') order by p.vch_num desc";
                            break;
                        case "PARTY":
                            cmd = "select a.vch_num|| to_char(a.vch_date,'yyyymmdd')||a.type as fstr,a.vch_num as Party_code,a.c_name as Name,a.addr address,a.pincode as Pincode,a.c_gstin as GSTIN," +
                                "a.type_desc as Search_text,a.cpname as PerName,(case when a.cpcont='0000000000' then '-' else a.cpcont end) ContactNo,(case when a.cpaltcont='0000000000' then '-' else a.cpaltcont end) as AltContactNo,(case when a.cpemail='ab@ab.ab' then '-' else a.cpemail end) as Email,a.cpaddr as PerAddr " +
                                "from clients_mst a where find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 AND a.type='BCD' and substr(a.vch_num,0,3)='303' ";
                            break;
                        case "ITEM":
                            if (param1 != null)
                            {
                                if (param1 != "")
                                {
                                    if (param1 != "") where = " and sv.vch_num not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','").Trim().ToString() + "')";
                                }
                            }
                            cmd = "select sv.client_id||sv.client_unit_id||sv.vch_num||to_char(sv.vch_date,'yyyymmdd')||sv.type as fstr,sv.vch_num as service_code,sv.col3 as service_name,um.master_name as UOM,nvl(hsn.master_name, '-') as hsn,nvl(hsn.group_name, '0') taxrate,sv.col4 as description from enx_tab2 sv left join master_setting um on um.master_id = sv.col7 and um.type = 'UMM' and find_in_set(um.client_unit_id, sv.client_unit_id)= 1 left join master_setting hsn on hsn.master_id = sv.col8 and hsn.type = 'HSN' and find_in_set(hsn.client_unit_id, sv.client_unit_id)= 1 where sv.client_unit_id = '" + unitid_mst + "' and sv.type = 'SMT' " + where + "";
                            break;
                        case "CHRGS":
                            cmd = "select (master_id||to_char(vch_date,'yyyymmdd')||type) fstr,master_id DocNo,master_name Charge " +
                                "from master_setting where find_in_set(client_unit_id,'" + unitid_mst + "')=1 and type='MR0'";
                            break;

                        case "RATE":
                            sgen.SetSession(MyGuid, "sortrno", param1.Trim());
                            cmd = "select (master_id||to_char(vch_date,'yyyymmdd')||type) fstr,master_id DocNo,group_name TaxRate " +
                                "from master_setting where find_in_set(client_unit_id,'" + unitid_mst + "')=1 and type='HSN'";
                            break;
                        case "PER":
                            cmd = "select client_id||client_unit_id||vch_num||to_char(vch_date, 'yyyymmdd')|| type as fstr,vch_num as per_id," +
                         "master_name as sales_person,CONT_PERSON_EMAIL as email_id,GROUP_ID as mobile_no from master_setting " +
                         "where type = 'SPR' and client_unit_id = '" + unitid_mst + "'";
                            break;

                    }
                    break;
                #endregion
                #region s_person
                case "s_person":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "DETAIL":
                            cmd = "select client_id||client_unit_id||vch_num||to_char(vch_date, 'yyyymmdd')|| type as fstr,vch_num as doc_no," +
                                "master_name as sales_person,CONT_PERSON_EMAIL as email_id,GROUP_ID as mobile_no from master_setting " +
                                "where type = 'SPR' and client_unit_id = '" + unitid_mst + "'";
                            break;
                    }
                    break;
                #endregion
                #region pay_term
                case "pay_term":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "DETAIL":
                            cmd = "select client_id||client_unit_id||vch_num||to_char(vch_date, 'yyyymmdd')|| type as fstr,vch_num as doc_no," +
                                "master_name as term_name,MALERATIO as no_of_days from master_setting " +
                                "where type = 'PT2' and client_unit_id = '" + unitid_mst + "'";
                            break;
                    }
                    break;
                #endregion
                #region rcr invoice
                case "rcr_inv":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "PRINT":
                        case "SEND":
                            cmd = "select distinct (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) as fstr,p.vch_num Doc_number,to_char(p.vch_date, '" + sgen.Getsqldateformat() + "') DOC_date," +
                                "c.c_name as Party_Name,c.c_gstin as Party_Gstin,c.addr as Party_Address,c.comp_email EMAIL_ID from itransactionc p " +
                                "inner join clients_mst c on p.acode = c.vch_num and c.type = 'BCD' and find_in_set(c.client_unit_id, p.client_unit_id)=1 " +
                                "where p.client_unit_id = '" + unitid_mst + "' and p.type= 'RIV' and to_date(to_char(p.vch_DATE,'ddMMyyyy'),'ddMMyyyy') between to_date('" + year_from + "','" + sgen.Getsqldatetimeformat() + "') and to_date('" + year_to + "','" + sgen.Getsqldatetimeformat() + "') order by p.vch_num desc";
                            break;
                        case "INVOICE":
                            //cmd = "select distinct (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) as fstr,p.vch_num Doc_number,to_char(p.vch_date, '" + sgen.Getsqldateformat() + "') DOC_date," +
                            //    "c.c_name as Party_Name,c.c_gstin as Party_Gstin,c.addr as Party_Address,c.comp_email EMAIL_ID from itransactionc p " +
                            //    "inner join clients_mst c on p.acode = c.vch_num and c.type = 'BCD' and find_in_set(c.client_unit_id, p.client_unit_id)=1 " +
                            //    "where p.client_unit_id = '" + unitid_mst + "' and p.type= 'RIV' and to_date(to_char(p.vch_DATE,'ddMMyyyy'),'ddMMyyyy') between to_date('" + year_from + "','" + sgen.Getsqldatetimeformat() + "') and to_date('" + year_to + "','" + sgen.Getsqldatetimeformat() + "') " +
                            //    " and to_char(p.date2,'ddmmyyyy') <= to_char(sysdate,'ddmmyyyy') order by p.vch_num desc";
                            cmd = "select distinct (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) as fstr,p.vch_num Doc_number,to_char(p.vch_date, '" + sgen.Getsqldateformat() + "') DOC_date," +
                                "c.c_name as Party_Name,c.c_gstin as Party_Gstin,c.addr as Party_Address,c.comp_email EMAIL_ID from itransactionc p inner join clients_mst c on p.acode = c.vch_num and c.type = 'BCD' and find_in_set(c.client_unit_id, p.client_unit_id)= 1 where " +
                                "p.client_unit_id = '" + unitid_mst + "' and p.type = 'RIV' and to_date(to_char(p.vch_DATE,'ddMMyyyy'),'ddMMyyyy') " +
                                "between to_date('" + year_from + "', '" + sgen.Getsqldatetimeformat() + "') and to_date('" + year_to + "','" + sgen.Getsqldatetimeformat() + "') " +
                                "and to_char(sysdate, 'ddmmyyyy') between to_char(p.date1,'ddmmyyyy') and (case when p.MMT = 'N' then to_char(date2,'ddmmyyyy') else to_char(sysdate + 1, 'ddmmyyyy') end) " +
                                "order by p.vch_num desc";
                            break;
                        case "VIEW":
                            cmd = "select distinct (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) as fstr,p.vch_num doc_number,to_char(p.vch_date, '" + sgen.Getsqldateformat() + "') doc_date," +
                                "c.c_name as Party_Name,c.c_gstin as Party_Gstin,c.addr as Party_Address," +
                                " p.icode service_code, p.iname service_name, p.uom UOM, p.hsno HSN,p.taxrate TaxRate,p.ordqty Quantity, p.irate Rate, iamount Ser_Amt,p.taxamt taxamt,p.disctype Discount_Type, p.discrate Discount_Rate," +
                                " p.discamt Discount_Amt,p.lineamount LineAmt,p.gserchrg IGST, p.gloadchrg SGST, p.gamc CGST, p.basicamt BasicAmt, p.ginstlchrg GrossAmt, p.gtaxamt as Net_Amount from itransactionc p " +
                                "inner join clients_mst c on p.acode = c.vch_num and c.type = 'BCD' and find_in_set(c.client_unit_id, p.client_unit_id)=1 " +
                                "where p.client_unit_id = '" + unitid_mst + "' and p.type= 'RIV' and to_date(to_char(p.vch_DATE,'ddMMyyyy'),'ddMMyyyy') between to_date('" + year_from + "','" + sgen.Getsqldatetimeformat() + "') and to_date('" + year_to + "','" + sgen.Getsqldatetimeformat() + "') order by p.vch_num desc";
                            break;
                        case "PARTY":
                            cmd = "select a.vch_num|| to_char(a.vch_date,'yyyymmdd')||a.type as fstr,a.vch_num as Party_code,a.c_name as Name,a.addr address,a.pincode as Pincode,a.c_gstin as GSTIN," +
                                "a.type_desc as Search_text,a.cpname as PerName,(case when a.cpcont='0000000000' then '-' else a.cpcont end) ContactNo,(case when a.cpaltcont='0000000000' then '-' else a.cpaltcont end) as AltContactNo,(case when a.cpemail='ab@ab.ab' then '-' else a.cpemail end) as Email,a.cpaddr as PerAddr " +
                                "from clients_mst a where find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 AND a.type='BCD' and substr(a.vch_num,0,3)='303' ";
                            break;
                        case "ITEM":
                            if (param1 != null)
                            {
                                if (param1 != "")
                                {
                                    if (param1 != "") where = " and sv.vch_num not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','").Trim().ToString() + "')";
                                }
                            }
                            cmd = "select sv.client_id||sv.client_unit_id||sv.vch_num||to_char(sv.vch_date,'yyyymmdd')||sv.type as fstr,sv.vch_num as service_code,sv.col3 as service_name,um.master_name as UOM,nvl(hsn.master_name, '-') as hsn,nvl(hsn.group_name, '0') taxrate,sv.col4 as description from enx_tab2 sv left join master_setting um on um.master_id = sv.col7 and um.type = 'UMM' and find_in_set(um.client_unit_id, sv.client_unit_id)= 1 left join master_setting hsn on hsn.master_id = sv.col8 and hsn.type = 'HSN' and find_in_set(hsn.client_unit_id, sv.client_unit_id)= 1 where sv.client_unit_id = '" + unitid_mst + "' and sv.type = 'SMT' " + where + "";
                            break;
                        case "CHRGS":
                            cmd = "select (master_id||to_char(vch_date,'yyyymmdd')||type) fstr,master_id DocNo,master_name Charge " +
                                "from master_setting where find_in_set(client_unit_id,'" + unitid_mst + "')=1 and type='MR0'";
                            break;
                        case "RATE":
                            sgen.SetSession(MyGuid, "rcrtrno", param1.Trim());
                            cmd = "select (master_id||to_char(vch_date,'yyyymmdd')||type) fstr,master_id DocNo,group_name TaxRate " +
                                "from master_setting where find_in_set(client_unit_id,'" + unitid_mst + "')=1 and type='HSN'";
                            break;
                        case "PER":
                            cmd = "select client_id||client_unit_id||vch_num||to_char(vch_date, 'yyyymmdd')|| type as fstr,vch_num as per_id," +
                         "master_name as sales_person,CONT_PERSON_EMAIL as email_id,GROUP_ID as mobile_no from master_setting " +
                         "where type = 'SPR' and client_unit_id = '" + unitid_mst + "'";
                            break;
                    }
                    break;
                #endregion
                #region cr note
                case "cr_note":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "PRINT":
                            cmd = "select distinct (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) as fstr,p.vch_num Doc_number,to_char(p.vch_date, '" + sgen.Getsqldateformat() + "') DOC_date," +
                                "c.c_name as Party_Name,c.c_gstin as Party_Gstin,c.addr as Party_Address,c.comp_email EMAIL_ID from itransactionc p " +
                                "inner join clients_mst c on p.acode = c.vch_num and c.type = 'BCD' and find_in_set(c.client_unit_id, p.client_unit_id)=1 " +
                                "where p.client_unit_id = '" + unitid_mst + "' and p.type= 'CNO' and to_date(to_char(p.vch_DATE,'ddMMyyyy'),'ddMMyyyy') between to_date('" + year_from + "','" + sgen.Getsqldatetimeformat() + "') and to_date('" + year_to + "','" + sgen.Getsqldatetimeformat() + "') order by p.vch_num desc";
                            break;
                        case "VIEW":
                            cmd = "select distinct (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) as fstr,p.vch_num doc_number,to_char(p.vch_date, '" + sgen.Getsqldateformat() + "') doc_date," +
                                "c.c_name as Party_Name,c.c_gstin as Party_Gstin,c.addr as Party_Address," +
                                " p.icode service_code, p.iname service_name, p.uom UOM, p.hsno HSN,p.taxrate TaxRate,p.ordqty Quantity, p.irate Rate, iamount Ser_Amt,p.taxamt taxamt,p.disctype Discount_Type, p.discrate Discount_Rate," +
                                " p.discamt Discount_Amt,p.lineamount LineAmt,p.gserchrg IGST, p.gloadchrg SGST, p.gamc CGST, p.basicamt BasicAmt, p.ginstlchrg GrossAmt, p.gtaxamt as Net_Amount from itransactionc p " +
                                "inner join clients_mst c on p.acode = c.vch_num and c.type = 'BCD' and find_in_set(c.client_unit_id, p.client_unit_id)=1 " +
                                "where p.client_unit_id = '" + unitid_mst + "' and p.type= 'CNO' and to_date(to_char(p.vch_DATE,'ddMMyyyy'),'ddMMyyyy') between to_date('" + year_from + "','" + sgen.Getsqldatetimeformat() + "') and to_date('" + year_to + "','" + sgen.Getsqldatetimeformat() + "') order by p.vch_num desc";
                            break;
                        case "INV":
                            if (sgen.GetSession(MyGuid, "S_INVPARTY") != null)
                            {
                                cmd = "select distinct (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) as fstr,p.vch_num Doc_number,to_char(p.vch_date, '" + sgen.Getsqldateformat() + "') DOC_date" +
                                " from itransaction p inner join clients_mst c on p.acode = c.vch_num and c.type = 'BCD' and find_in_set(c.client_unit_id, p.client_unit_id)=1 and c.vch_num = '" + sgen.GetSession(MyGuid, "S_INVPARTY") + "' " +
                                "where p.client_unit_id = '" + unitid_mst + "' and p.type= '48' order by p.vch_num desc";
                            }
                            break;
                        case "PARTY":
                            cmd = "select a.vch_num|| to_char(a.vch_date,'yyyymmdd')||a.type as fstr,a.vch_num as Party_code,a.c_name as Name,a.addr address,a.pincode as Pincode,a.c_gstin as GSTIN," +
                                "a.type_desc as Search_text,a.cpname as PerName,(case when a.cpcont='0000000000' then '-' else a.cpcont end) ContactNo,(case when a.cpaltcont='0000000000' then '-' else a.cpaltcont end) as AltContactNo,(case when a.cpemail='ab@ab.ab' then '-' else a.cpemail end) as Email,a.cpaddr as PerAddr " +
                                "from clients_mst a where find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 AND a.type='BCD' and substr(a.vch_num,0,3)='303' ";
                            break;
                        case "ITEM":
                            if (param1 != null)
                            {
                                if (param1 != "")
                                {
                                    if (param1 != "") where = " and sv.vch_num not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','").Trim().ToString() + "')";
                                }
                            }
                            if (sgen.GetSession(MyGuid, "S_INVNO") != null)
                            {
                                cmd = "select sv.client_id||sv.client_unit_id||iv.vch_num||sv.vch_num||to_char(sv.vch_date,'yyyymmdd')||sv.type as fstr,sv.vch_num as service_code,sv.col3 as service_name,um.master_name as UOM" +
                                ",nvl(hsn.master_name, '-') as hsn,nvl(hsn.group_name, '0') taxrate,sv.col4 as description from enx_tab2 sv left join master_setting um on um.master_id = sv.col7 and um.type = 'UMM' and " +
                                "find_in_set(um.client_unit_id, sv.client_unit_id)= 1 " +
                                "left join master_setting hsn on hsn.master_id = sv.col8 and hsn.type = 'HSN' and find_in_set(hsn.client_unit_id, sv.client_unit_id)= 1 " +
                                "inner join itransaction iv on iv.icode = sv.vch_num and iv.type = '48' and iv.client_unit_id = sv.client_unit_id and iv.vch_num='" + sgen.GetSession(MyGuid, "S_INVNO").ToString().Trim().TrimEnd(',').Replace(",", "','").Trim().ToString() + "' where " +
                                "sv.client_unit_id = '" + unitid_mst + "' and sv.type = 'SMT' " + where + "";
                            }
                            break;
                        case "CHRGS":
                            cmd = "select (master_id||to_char(vch_date,'yyyymmdd')||type) fstr,master_id DocNo,master_name Charge " +
                                "from master_setting where find_in_set(client_unit_id,'" + unitid_mst + "')=1 and type='MR0'";
                            break;
                        case "RATE":
                            sgen.SetSession(MyGuid, "cnrdelrno", param1.Trim());
                            cmd = "select (master_id||to_char(vch_date,'yyyymmdd')||type) fstr,master_id DocNo,group_name TaxRate " +
                                "from master_setting where find_in_set(client_unit_id,'" + unitid_mst + "')=1 and type='HSN'";
                            break;
                        case "PER":
                            cmd = "select client_id||client_unit_id||vch_num||to_char(vch_date, 'yyyymmdd')|| type as fstr,vch_num as per_id," +
                         "master_name as sales_person,CONT_PERSON_EMAIL as email_id,GROUP_ID as mobile_no from master_setting " +
                         "where type = 'SPR' and client_unit_id = '" + unitid_mst + "'";
                            break;
                    }
                    break;
                #endregion
                #region inv_list
                case "inv_list":
                    switch (btnval.ToUpper())
                    {
                        case "PARENT":
                            sgen.SetSession(MyGuid, "inv_list", null);
                            sgen.SetSession(MyGuid, "inv_list_comm", null);
                            cmd = "select a.vch_num|| to_char(a.vch_date,'yyyymmdd')||a.type as fstr,a.vch_num as Party_code,a.c_name as Name,a.addr address,a.pincode as Pincode,a.c_gstin as GSTIN," +
                               "a.type_desc as Search_text,a.cpname as PerName,(case when a.cpcont='0000000000' then '-' else a.cpcont end) ContactNo,(case when a.cpaltcont='0000000000' then '-' else a.cpaltcont end) as AltContactNo,(case when a.cpemail='ab@ab.ab' then '-' else a.cpemail end) as Email,a.cpaddr as PerAddr " +
                               "from clients_mst a where find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 AND a.type='BCD' and substr(a.vch_num,0,3)='303' ";
                            break;
                    }
                    break;
                #endregion
                #region sub_legislation
                case "sub_legis":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "VIEW":
                            cmd = "select (client_id||client_unit_id||vch_num||to_char(vch_date,'yyyymmdd')||type) as fstr, " +
                           "master_id as ID,master_name as Sub_Legislation_area from master_setting where type='SLG' and client_unit_id='" + unitid_mst + "'";



                            break;

                    }
                    break;
                #endregion
                #region add_kr
                case "add_kr":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "VIEW":
                            cmd = "select (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr, " +
                           "a.vch_num as Doc_no,to_char(vch_date,'" + sgen.Getsqldateformat() + "') as Doc_date,a.col2 as section,a.col3 as rule_no," +
                           "a.col4 as form_no,to_char(a.date1,'" + sgen.Getsqldateformat() + "') as due_date,a.col41 as description," +
                           "a.col5 as cost_of_no_comp,a.col69 as cost_in_text from kc_tab a where a.type='AKR' and a.client_unit_id='" + unitid_mst + "'";
                            break;
                    }
                    break;
                #endregion
                #region as_contracts
                case "as_contracts":
                    switch (btnval.ToUpper())
                    {
                        case "VENDOR":

                            cmd = cmd_Fun.showvendor(unitid_mst);
                            break;

                        case "EDIT":
                        case "VIEW":
                            cmd = "select (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr, a.vch_num doc_no,to_char(a.vch_date,'" + sgen.Getsqldateformat() + "') doc_date," +
                                "b.c_name vendor_name,a.col3 contract_name from enx_tab a inner join clients_mst b on a.col7=b.vch_num " +
                                "and find_in_set(b.client_unit_id,'" + unitid_mst + "')=1 and substr(b.vch_num,0,3)='203' where a.type='CTR' " +
                                "and a.client_unit_id='" + unitid_mst + "' and a.col12='Pending' order by a.vch_num desc";
                            break;
                    }
                    break;
                #endregion
                #region contract approval
                case "contr_apr":
                    cond = "";


                    switch (btnval.ToUpper())
                    {

                        case "APPROVED":

                            cmd = "select  a.vch_num doc_no,to_char(a.vch_date,'" + sgen.Getsqldateformat() + "') doc_date," +
                                        "b.c_name vendor_name,a.col3 contract_name,a.col5 contract_value,to_char(a.date1,'" + sgen.Getsqldateformat() + "') start_date" +
                                        ",to_char(a.date2,'" + sgen.Getsqldateformat() + "') End_date, nvl((case when c.master_name ='0' then '-' else c.master_name end ) ,'-') service_type from enx_tab a " +
                                        "inner join clients_mst b on a.col7=b.vch_num left join master_setting c on a.col9=c.master_id and c.type='SER' and find_in_set(c.client_unit_id,'" + unitid_mst + "')=1 " +
                                        "and find_in_set(b.client_unit_id,'" + unitid_mst + "')=1 and substr(b.vch_num,0,3)='203' where a.type='CTR' " +
                                        "and a.client_unit_id='" + unitid_mst + "' and a.col12='Approved' order by a.vch_num desc";


                            break;
                        case "REJECTED":

                            cmd = "select  a.vch_num doc_no,to_char(a.vch_date,'" + sgen.Getsqldateformat() + "') doc_date," +
                                        "b.c_name vendor_name,a.col3 contract_name,a.col5 contract_value,to_char(a.date1,'" + sgen.Getsqldateformat() + "') start_date" +
                                        ",to_char(a.date2,'" + sgen.Getsqldateformat() + "') End_date, nvl((case when c.master_name ='0' then '-' else c.master_name end ) ,'-') service_type from enx_tab a " +
                                        "inner join clients_mst b on a.col7=b.vch_num left join master_setting c on a.col9=c.master_id and c.type='SER' and find_in_set(c.client_unit_id,'" + unitid_mst + "')=1 " +
                                        "and find_in_set(b.client_unit_id,'" + unitid_mst + "')=1 and substr(b.vch_num,0,3)='203' where a.type='CTR' " +
                                        "and a.client_unit_id='" + unitid_mst + "' and a.col12='Rejected' order by a.vch_num desc";


                            break;
                    }
                    break;
                    #endregion
            }
            sgen.open_grid(title, cmd, sgen.Make_int(seektype));
            //Session["parentname"] = "MVC";
            ViewBag.pageurl = sgen.GetSession(MyGuid, "pageurl").ToString();
            //return Content(cmd);
        }
        #endregion
        //========================callback==============
        #region call back

        public List<Tmodelmain> CallbackFun(string btnval, string edmode, string viewName, string controllerName, List<Tmodelmain> model)
        {
            //FillMst();
            DataTable dt = new DataTable();
            string defcall = "";

            String URL = sgen.GetSession(MyGuid, "SSEEKVAL").ToString();
            btnval = btnval.ToUpper();
            List<Tmodelmain> rpt_model = new List<Tmodelmain>();
            List<SelectListItem> mod1 = new List<SelectListItem>();
            List<SelectListItem> mod2 = new List<SelectListItem>();
            List<SelectListItem> mod3 = new List<SelectListItem>();
            List<SelectListItem> mod4 = new List<SelectListItem>();
            List<SelectListItem> mod5 = new List<SelectListItem>();
            List<SelectListItem> mod6 = new List<SelectListItem>();
            List<SelectListItem> mod7 = new List<SelectListItem>();
            List<SelectListItem> mod8 = new List<SelectListItem>();
            List<SelectListItem> mod9 = new List<SelectListItem>();
            List<SelectListItem> mod10 = new List<SelectListItem>();
            List<SelectListItem> mod11 = new List<SelectListItem>();
            List<SelectListItem> mod12 = new List<SelectListItem>();
            List<SelectListItem> mod13 = new List<SelectListItem>();
            List<SelectListItem> mod14 = new List<SelectListItem>();
            List<SelectListItem> mod15 = new List<SelectListItem>();

            DataTable dtt = new DataTable();
            var tm = model.FirstOrDefault();
            switch (viewName.ToLower())
            {
                #region function
                case "prog":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            mq = "select a.R_NO, a.col11,a.col17, a.col14, a.vch_num,a.col2, To_Char( convert_tz( a.date1,'UTC','" + sgen.Gettimezone() + "')," +
                                "'" + sgen.Getsqldateformat() + "')  date1,a.col5,a.col3, To_Char( convert_tz( a.date2,'UTC','" + sgen.Gettimezone() + "')," +
                                "'" + sgen.Getsqldateformat() + "')  date2,a.ent_by,a.ent_date,type," +
                                "a.rec_id,a.col4,a.col6,a.col7,a.col10,col9, ref_code from " + model[0].Col10 + " a " +
                                "where (client_id||client_unit_id||vch_num||to_char(vch_date,'yyyymmdd')||type)='" + URL + "' ";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {

                                sgen.SetSession(MyGuid, "EDMODE", "Y");

                                #region FillFunctionType
                                //mod1 = cmd_Fun.funtype(userCode, clientid_mst, unitid_mst);
                                mod1 = cmd_Fun.funtype(userCode, unitid_mst);

                                TempData[MyGuid + "_TList1"] = mod1;
                                #endregion

                                #region Service Type         

                                mod2 = cmd_Fun.sertype(userCode, unitid_mst);
                                TempData[MyGuid + "_Tlist2"] = mod2;
                                model[0].TList2 = mod2;


                                #endregion
                                #region Menu Type         


                                mod3 = cmd_Fun.menustype(userCode, unitid_mst);
                                TempData[MyGuid + "_Tlist3"] = mod3;
                                model[0].TList3 = mod3;


                                #endregion
                                #region hall Type         


                                mod4 = cmd_Fun.iloc(userCode, unitid_mst, out defcall);
                                TempData[MyGuid + "_Tlist4"] = mod4;
                                model[0].TList4 = mod4;


                                #endregion

                                model[0].TList1 = mod1;
                                model[0].Col8 = "(client_id||client_unit_id|| vch_num|| to_char(vch_date, 'yyyymmdd')|| type) = '" + URL + "'";
                                model[0].Col16 = dtt.Rows[0]["vch_num"].ToString();
                                model[0].Col17 = dtt.Rows[0]["date1"].ToString();
                                //model[0].Col18 = dtt.Rows[0]["col2"].ToString();
                                model[0].Col19 = dtt.Rows[0]["col3"].ToString();
                                model[0].Col3 = dtt.Rows[0]["ent_by"].ToString();
                                model[0].Col4 = dtt.Rows[0]["ent_date"].ToString();
                                model[0].Col21 = dtt.Rows[0]["col7"].ToString();
                                model[0].Col22 = dtt.Rows[0]["col6"].ToString();
                                model[0].Col23 = dtt.Rows[0]["col4"].ToString();

                                if (dtt.Rows[0]["type"].ToString() == "FUN")
                                {
                                    model[0].Col20 = "Y";
                                }

                                else { model[0].Col20 = "N"; }



                                String[] L1 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["col5"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems1 = L1;

                                String[] L2 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["col11"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems2 = L2;

                                String[] L3 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["col17"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems3 = L3;

                                String[] L4 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["r_no"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems4 = L4;


                                model[0].Col13 = "Update";
                                model[0].Col100 = "Update & New";
                                model[0].Col121 = "U";
                                model[0].Col122 = "<u>U</u>pdate";
                                model[0].Col123 = "Update & Ne<u>w</u>";
                                model[0].dt1 = new DataTable();
                                model[0].dt1 = ((DataTable)sgen.GetSession(MyGuid, "BPR_DT")).Clone();
                                //model[0].dt1 = model[0].dt1.Clone();
                                for (int i = 0; i < dtt.Rows.Count; i++)
                                {
                                    //GridViewRows         //TableRows

                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["SNO"] = i + 1;
                                    dr["booking_date"] = dtt.Rows[i]["date2"];
                                    dr["NO_Pax"] = dtt.Rows[i]["col9"];
                                    dr["Rate"] = dtt.Rows[i]["col10"];
                                    dr["Ref_code"] = dtt.Rows[i]["Ref_code"];
                                    dr["remark"] = dtt.Rows[i]["col14"];

                                    model[0].dt1.Rows.Add(dr);

                                }
                                model[0].dt1.AcceptChanges();

                                mq = "select distinct (a.client_id||a.client_unit_id|| a.vch_num|| to_char(a.vch_date, 'yyyymmdd')|| a.type) as fstr, " +
                                    " a.col6 as Head_id , b.master_name as Exp_Head, a.col4 as Remarks,a.col9 as Amount " +
                                                                " from enx_tab2 a left join master_setting b on a.col6 = b.master_id" +
                                                                " and b.type = 'BEH' and a.client_id = b.client_id and a.client_unit_id =" +
                                                                " b.client_unit_id  where a.type='OTH' and a.client_unit_id='" + unitid_mst + "' and " +
                                                                "a.vch_num='" + model[0].Col16 + "'";

                                DataTable dto = new DataTable();
                                model[0].dt2 = new DataTable();
                                model[0].dt2 = ((DataTable)sgen.GetSession(MyGuid, "OTH_DT")).Clone();
                                dto = sgen.getdata(userCode, mq);
                                if (dto.Rows.Count > 0)
                                {
                                    model[0].Col29 = "(client_id||client_unit_id|| vch_num|| to_char(vch_date, 'yyyymmdd')|| type) = '" + dto.Rows[0]["fstr"].ToString() + "'";
                                }
                                else
                                {
                                    model[0].Col29 = "";
                                    dto = dt = sgen.getdata(userCode, "select '' head,'1' SNo ,'-' Head_Id,'-' exp_head,'0' Amount ,'-' Remarks from dual");
                                }
                                for (int i = 0; i < dto.Rows.Count; i++)
                                {
                                    //GridViewRows         //TableRows

                                    DataRow dr = model[0].dt2.NewRow();
                                    dr["SNO"] = i + 1;
                                    dr["HEAD_ID"] = dto.Rows[i]["Head_id"];
                                    dr["HEAD_NAME"] = dto.Rows[i]["exp_head"];
                                    dr["AMOUNT"] = dto.Rows[i]["Amount"];
                                    dr["REMARK"] = dto.Rows[i]["Remarks"];
                                    model[0].dt2.Rows.Add(dr);

                                }
                                model[0].dt2.AcceptChanges();



                            }
                            else
                            {
                                model = new List<Tmodelmain>();
                                tm.Col17 = "";
                                tm.Col18 = "";
                                tm.Col19 = "";
                                tm.Col20 = "";

                                model.Add(tm);
                            }
                            break;

                        case "HEAD":

                            mq = "select '-' fstr, master_id as  Exp_Head_id,master_name as Exp_Head_Name " +
                                "from master_setting where (client_id||client_unit_id||master_id||to_char(vch_date,'yyyymmdd')||type) in ('" + URL + "')";

                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                if (model[0].dt2.Rows[0]["Head_Id"].ToString().Trim().Equals("-")) { model[0].dt2.Rows.RemoveAt(0); }

                                for (int i = 0; i < dtt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt2.NewRow();
                                    dr["head"] = dtt.Rows[i]["fstr"].ToString();
                                    dr["SNo"] = i + 1;
                                    dr["Head_Id"] = dtt.Rows[i]["Exp_Head_id"].ToString();
                                    dr["Head_Name"] = dtt.Rows[i]["Exp_Head_Name"].ToString();
                                    model[0].dt2.Rows.Add(dr);
                                }

                                model[0].dt2.AcceptChanges();


                            }
                            break;
                    }
                    break;
                #endregion
                #region Amount Exp
                case "amount_exp":
                    switch (btnval.ToUpper())
                    {

                        case "EDIT":
                        case "VIEW":

                            mq = "select distinct  c.col2 as pax_no, replace(c.col6,'0','-') as email,replace(c.col7,'0','-') as ph, a.col5 as fun_id, a.col3 as party_code, a.ent_by,a.ent_date,a.client_id,a.client_unit_id, a.vch_num as Doc_no,a.col6 as Head_id ," +
                                " b.master_name as Exp_Head, a.col9 as Remarks, d.master_name as Function_Type,c.col3 as Party_Name ,a.col4 as Amount " +
                                ",to_char(convert_tz(c.date1, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') as Date_Of_Function " +
                                " from enx_tab2 a inner join master_setting b on a.col6 = b.master_id" +
                                " and b.type = 'BEH' and a.client_id = b.client_id and a.client_unit_id = b.client_unit_id inner join enx_tab2 c " +
                                " on c.vch_num = a.col3 and c.type = 'FUN' and a.client_unit_id = c.client_unit_id  inner join  master_setting d on" +
                                " d.master_id = a.col5 and d.type = 'FUN' and a.client_unit_id = d.client_unit_id where(a.client_id || a.client_unit_id ||" +
                                " a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.type) = '" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            DataTable dt1 = new DataTable();
                            if (dtt.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "EDMODE", "Y");

                                //Model            //TableRows

                                model[0].TList1 = mod1;
                                model[0].Col8 = "(client_id||client_unit_id|| vch_num|| to_char(vch_date, 'yyyymmdd')|| type) = '" + URL + "'";
                                model[0].Col1 = dtt.Rows[0]["client_id"].ToString();
                                model[0].Col2 = dtt.Rows[0]["client_unit_id"].ToString();
                                model[0].Col3 = dtt.Rows[0]["ent_by"].ToString();
                                model[0].Col4 = dtt.Rows[0]["ent_date"].ToString();
                                model[0].Col16 = dtt.Rows[0]["Doc_no"].ToString();
                                model[0].Col21 = dtt.Rows[0]["Function_Type"].ToString();     //fn type
                                model[0].Col20 = dtt.Rows[0]["party_code"].ToString();    //party_code
                                model[0].Col19 = dtt.Rows[0]["Party_Name"].ToString();    //pty name
                                model[0].Col22 = dtt.Rows[0]["Date_Of_Function"].ToString();    //date of fun
                                model[0].Col23 = dtt.Rows[0]["fun_id"].ToString();    //date of fun
                                model[0].Col25 = dtt.Rows[0]["ph"].ToString();
                                model[0].Col26 = dtt.Rows[0]["email"].ToString();
                                model[0].Col27 = dtt.Rows[0]["pax_no"].ToString();
                                model[0].Col13 = "Update";
                                model[0].Col100 = "Update & New";
                                model[0].Col121 = "U";
                                model[0].Col122 = "<u>U</u>pdate";
                                model[0].Col123 = "Update & Ne<u>w</u>";
                                model[0].dt1 = new DataTable();
                                model[0].dt1 = ((DataTable)sgen.GetSession(MyGuid, "BEX_DT")).Clone();

                                for (int i = 0; i < dtt.Rows.Count; i++)
                                {
                                    //GridViewRows         //TableRows

                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["SNO"] = i + 1;
                                    dr["HEAD_ID"] = dtt.Rows[i]["Head_id"];
                                    dr["HEAD_NAME"] = dtt.Rows[i]["exp_head"];
                                    dr["AMOUNT"] = dtt.Rows[i]["Amount"];
                                    dr["REMARK"] = dtt.Rows[i]["Remarks"];
                                    model[0].dt1.Rows.Add(dr);

                                }
                                model[0].dt1.AcceptChanges();

                            }
                            else
                            {
                                model = new List<Tmodelmain>();
                                tm.Col17 = "";
                                tm.Col18 = "";
                                tm.Col19 = "";
                                tm.Col20 = "";

                                model.Add(tm);
                            }
                            break;



                        //case "VIEW":

                        //    Make_query(viewName.ToLower(), "View Function Amount Expense", "VIEWDETAIL", "0", "", "");
                        //    ViewBag.scripCall = "callFoo('View');";




                        //    break;

                        case "NEW":

                            mq = "select distinct a.col5, a.vch_num," +
                                " to_char(convert_tz(a.date1, 'UTC', '" + sgen.Gettimezone() + "')," + "'" + sgen.Getsqldateformat() + "') as" +
                                " Date_Of_Function, a.col2 as pax_no, a.col3 Name_Of_Party, b.master_name as fun_name,replace(a.col6,'0','-') as email,replace(a.col7,'0','-') as ph  " +
                                "from enx_tab2 a  inner join master_setting b on a.col5 = b.master_id and b.type = 'FUN' " +
                                "and a.client_id = b.client_id and a.client_unit_id = b.client_unit_id where" +
                                " (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) ='" + URL + "'";

                            dtt = sgen.getdata(userCode, mq);
                            model = getnew(model);
                            //ViewBag.vprint = "disabled='disabled'";
                            model[0].dt1 = new DataTable();
                            model[0].dt1 = ((DataTable)sgen.GetSession(MyGuid, "BEX_DT"));
                            if (dtt.Rows.Count > 0)
                            {
                                model[0].Col19 = dtt.Rows[0]["Name_Of_Party"].ToString();
                                model[0].Col20 = dtt.Rows[0]["vch_num"].ToString();
                                model[0].Col21 = dtt.Rows[0]["fun_name"].ToString();
                                model[0].Col22 = dtt.Rows[0]["Date_Of_Function"].ToString();
                                model[0].Col23 = dtt.Rows[0]["col5"].ToString();
                                model[0].Col25 = dtt.Rows[0]["ph"].ToString();
                                model[0].Col26 = dtt.Rows[0]["email"].ToString();
                                model[0].Col27 = dtt.Rows[0]["pax_no"].ToString();

                            }

                            break;

                        case "HEAD":

                            mq = "select '-' fstr, master_id as  Exp_Head_id,master_name as Exp_Head_Name " +
                                "from master_setting where (client_id||client_unit_id||master_id||to_char(vch_date,'yyyymmdd')||type) in ('" + URL + "')";

                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                if (model[0].dt1.Rows[0]["Head_Id"].ToString().Trim().Equals("-")) { model[0].dt1.Rows.RemoveAt(0); }

                                for (int i = 0; i < dtt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["head"] = dtt.Rows[i]["fstr"].ToString();
                                    dr["SNo"] = i + 1;
                                    dr["Head_Id"] = dtt.Rows[i]["Exp_Head_id"].ToString();
                                    dr["Head_Name"] = dtt.Rows[i]["Exp_Head_Name"].ToString();
                                    model[0].dt1.Rows.Add(dr);
                                }

                                model[0].dt1.AcceptChanges();


                            }
                            break;
                        case "PRINT":

                            mq = "select distinct c.col2 as no_paxes, a.col3 as party_code, a.ent_by,a.ent_date,a.client_id,a.client_unit_id, a.vch_num as Doc_no,a.col6 as Head_id ," +
                                " b.master_name as Exp_Head, a.col9 as Remarks, d.master_name as Function_Type,c.col3 as Party_Name ,a.col4 as Amount " +
                                ",to_char(convert_tz(c.date1, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') as Date_Of_Function " +
                                " from enx_tab2 a inner join master_setting b on a.col6 = b.master_id" +
                                " and b.type = 'BEH' and a.client_id = b.client_id and a.client_unit_id = b.client_unit_id inner join enx_tab2 c " +
                                " on c.vch_num = a.col3 and c.type = 'FUN' and a.client_unit_id = c.client_unit_id  inner join  master_setting d on" +
                                " d.master_id = a.col5 and d.type = 'FUN' and a.client_unit_id = d.client_unit_id where(a.client_id || a.client_unit_id ||" +
                                " a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.type) = '" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);

                            if (dtt.Rows.Count > 0)
                            {

                                sgen.open_report_bydt_xml(userCode, dtt, "fun_exp", "Function Expense Detail");
                                ViewBag.scripCall += "showRptnew('Function Expense Detail';";
                                //ViewBag.scripCall = "OpenSingle('../../../../../erp/schoolReports_Rpts/Filter_Report_xml.aspx','95%','900px','Reports');";
                            }
                            else
                            {
                                model = new List<Tmodelmain>();
                                tm.Col17 = "";
                                tm.Col18 = "";
                                tm.Col19 = "";
                                tm.Col20 = "";

                                model.Add(tm);
                            }
                            break;




                    }
                    break;
                #endregion
                #region booking amt
                case "booking_amt":
                    switch (btnval.ToUpper())
                    {

                        case "EDIT":


                            //                 
                            decimal tot_till = 0, bal = 0;
                            mq = "select a.vch_date, a.col3 as amt, a.col5 as party_id , a.vch_num,a.ent_by,a.ent_date,a.client_id,a.client_unit_id,replace(a.col4,'0','') as rmk,a.col6 as mode_pay" +
                                " from enx_tab2 a where (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type)='" + URL + "' ";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {

                                sgen.SetSession(MyGuid, "EDMODE", "Y");

                                #region FillFunctionType
                                mod1 = cmd_Fun.Modeofpayment(userCode, unitid_mst);

                                TempData[MyGuid + "_TList1"] = mod1;
                                #endregion                              

                                model[0].TList1 = mod1;
                                model[0].Col8 = "(client_id||client_unit_id|| vch_num|| to_char(vch_date, 'yyyymmdd')|| type) = '" + URL + "'";
                                model[0].Col16 = dtt.Rows[0]["vch_num"].ToString();
                                model[0].Col3 = dtt.Rows[0]["ent_by"].ToString();
                                model[0].Col4 = dtt.Rows[0]["ent_date"].ToString();
                                model[0].Col34 = dtt.Rows[0]["vch_date"].ToString();
                                model[0].Col28 = dtt.Rows[0]["amt"].ToString();
                                model[0].Col29 = dtt.Rows[0]["rmk"].ToString();

                                String[] L1 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["mode_pay"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems1 = L1;
                                model[0].Col13 = "Update";
                                model[0].Col100 = "Update & New";
                                model[0].Col121 = "U";
                                model[0].Col122 = "<u>U</u>pdate";
                                model[0].Col123 = "Update & Ne<u>w</u>";
                                mq = "select vch_num,date_of_function,name_of_party,fun_name,email,ph,sum(pax_no) as pax_no,sum(rate*pax_no) as amount" +
                               "  from (select distinct a.col10 as rate, a.col5, a.vch_num, to_char(convert_tz(a.date1, 'UTC', '" + sgen.Gettimezone() + "')," +
                               "'" + sgen.Getsqldateformat() + "') as Date_Of_Function, a.col9 as pax_no, a.col3 Name_Of_Party, b.master_name as fun_name," +
                               "(a.col6) email ,(a.col7) as ph  from enx_tab2 a inner  join master_setting b " +
                               "on a.col5 = b.master_id and b.type = 'FUN' and a.client_id = b.client_id and a.client_unit_id = b.client_unit_id " +
                               "where a.type='FUN' and a.client_id='" + clientid_mst + "' and a.client_unit_id='" + unitid_mst + "' and a.vch_num='" + dtt.Rows[0]["party_id"].ToString() + "') a " +
                               " group by vch_num, date_of_function, name_of_party, fun_name, email, ph";

                                dt = sgen.getdata(userCode, mq);
                                if (dtt.Rows.Count > 0)
                                {
                                    model[0].Col19 = dt.Rows[0]["Name_Of_Party"].ToString();
                                    //model[0].Col20 = dtt.Rows[0]["vch_num"].ToString();
                                    model[0].Col21 = dt.Rows[0]["fun_name"].ToString();
                                    model[0].Col22 = dt.Rows[0]["Date_Of_Function"].ToString();
                                    model[0].Col23 = dt.Rows[0]["vch_num"].ToString();

                                    model[0].Col25 = dt.Rows[0]["ph"].ToString();
                                    model[0].Col26 = dt.Rows[0]["email"].ToString();
                                    model[0].Col27 = dt.Rows[0]["pax_no"].ToString();
                                    model[0].Col24 = dt.Rows[0]["amount"].ToString();


                                    mq = "select nvl(sum(col9),0)  as Other_amt from enx_tab2 where type='OTH' and client_unit_id='" + unitid_mst + "' and vch_num='" + model[0].Col23 + "'";

                                    model[0].Col35 = sgen.getstring(userCode, mq);
                                    model[0].Col36 = (sgen.Make_decimal(model[0].Col35) + sgen.Make_decimal(model[0].Col24)).ToString();
                                }



                                mq = "select To_Char( convert_tz( a.vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "')  vch_date, To_Char( convert_tz( a.date1,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "')  date1," +
                                    " a.vch_num,a.col3 Amount,b.master_name as Mode_Of_Payment,a.col4 as rmk from enx_tab2 a inner join master_setting b" +
                                    " on a.col6=master_id and b.type='EPM' where a.type = 'BAM' and a.client_unit_id = '" + unitid_mst + "' and col5='" + model[0].Col23 + "' order by a.vch_num ";

                                dt = sgen.getdata(userCode, mq);
                                dt = sgen.getdata(userCode, mq);
                                if (dt.Rows.Count > 0)
                                {
                                    var tmm = model.FirstOrDefault();
                                    model = new List<Tmodelmain>();
                                    foreach (DataRow dr in dt.Rows)
                                    {
                                        model.Add(new Tmodelmain
                                        {
                                            Col3 = tmm.Col3,
                                            Col4 = tmm.Col4,
                                            Col8 = tmm.Col8,
                                            Col9 = tmm.Col9,
                                            Col11 = tmm.Col11,
                                            Col12 = tmm.Col12,
                                            Col13 = tmm.Col13,
                                            Col100 = tmm.Col100,
                                            Col121 = tmm.Col121,
                                            Col122 = tmm.Col122,
                                            Col123 = tmm.Col123,
                                            Col10 = tmm.Col10,

                                            Col14 = tmm.Col14,
                                            Col15 = tmm.Col15,
                                            Col16 = tmm.Col16,
                                            Col17 = tmm.Col17,
                                            Col19 = tmm.Col19,
                                            Col21 = tmm.Col21,
                                            Col22 = tmm.Col22,
                                            Col23 = tmm.Col23,
                                            Col24 = tmm.Col24,
                                            Col25 = tmm.Col25,
                                            Col26 = tmm.Col26,
                                            Col27 = tmm.Col27,
                                            Col28 = tmm.Col28,
                                            Col29 = tmm.Col29,
                                            Col34 = tmm.Col34,
                                            Col35 = tmm.Col35,
                                            Col36 = tmm.Col36,
                                            Col30 = dr["vch_date"].ToString(),
                                            Col31 = dr["Amount"].ToString(),
                                            Col32 = dr["Mode_Of_Payment"].ToString(),
                                            Col33 = dr["rmk"].ToString(),
                                            Col39 = dr["date1"].ToString(),
                                            TList1 = mod1,
                                            SelectedItems1 = tm.SelectedItems1,


                                        });
                                        tot_till = tot_till + sgen.Make_decimal(dr["Amount"].ToString());
                                    }

                                    model[0].Col37 = tot_till.ToString();
                                    model[0].Col38 = (sgen.Make_decimal(model[0].Col36) - sgen.Make_decimal(tot_till)).ToString();


                                }









                            }
                            else
                            {
                                model = new List<Tmodelmain>();
                                tm.Col17 = "";
                                tm.Col18 = "";
                                tm.Col19 = "";
                                tm.Col20 = "";

                                model.Add(tm);
                            }
                            break;
                        case "PARTY":

                            mq = "select vch_num,date_of_function,name_of_party,fun_name,email,ph,sum(pax_no) as pax_no,sum(rate*pax_no) as amount" +
                                "  from (select distinct a.col10 as rate, a.col5, a.vch_num, to_char(convert_tz(a.date1, 'UTC', '" + sgen.Gettimezone() + "')," +
                                "'" + sgen.Getsqldateformat() + "') as Date_Of_Function, a.col9 as pax_no, a.col3 Name_Of_Party, b.master_name as fun_name," +
                                "(a.col6) email ,(a.col7) as ph  from enx_tab2 a inner  join master_setting b " +
                                "on a.col5 = b.master_id and b.type = 'FUN' and a.client_id = b.client_id and a.client_unit_id = b.client_unit_id " +
                                "where(a.client_id || a.client_unit_id || a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.type) = '" + URL + "') a " +
                                " group by vch_num, date_of_function, name_of_party, fun_name, email, ph";
                            tot_till = 0; bal = 0;
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                model[0].Col19 = dtt.Rows[0]["Name_Of_Party"].ToString();
                                //model[0].Col20 = dtt.Rows[0]["vch_num"].ToString();
                                model[0].Col21 = dtt.Rows[0]["fun_name"].ToString();
                                model[0].Col22 = dtt.Rows[0]["Date_Of_Function"].ToString();
                                model[0].Col23 = dtt.Rows[0]["vch_num"].ToString();
                                model[0].Col25 = dtt.Rows[0]["ph"].ToString();
                                model[0].Col26 = dtt.Rows[0]["email"].ToString();
                                model[0].Col27 = dtt.Rows[0]["pax_no"].ToString();
                                model[0].Col24 = dtt.Rows[0]["amount"].ToString();

                                mq = "select nvl(sum(col9),0)  as Other_amt from enx_tab2 where type='OTH' and client_unit_id='" + unitid_mst + "' and vch_num='" + model[0].Col23 + "'";

                                model[0].Col35 = sgen.getstring(userCode, mq);
                                model[0].Col36 = (sgen.Make_decimal(model[0].Col35) + sgen.Make_decimal(model[0].Col24)).ToString();
                            }

                            mq = "select To_Char( convert_tz( a.vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "')  vch_date,To_Char( convert_tz( a.date1,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "')  date1," +
                                " a.vch_num,a.col3 Amount,b.master_name as Mode_Of_Payment,a.col4 as rmk from enx_tab2 a inner join master_setting b" +
                                " on a.col6=master_id and b.type='EPM' where a.type = 'BAM' and a.client_unit_id = '" + unitid_mst + "' and col5='" + model[0].Col23 + "' order by a.vch_num ";
                            dt = sgen.getdata(userCode, mq);
                            #region FillFunctionType
                            mod1 = cmd_Fun.Modeofpayment(userCode, unitid_mst);

                            TempData[MyGuid + "_TList1"] = mod1;
                            #endregion

                            model[0].TList1 = mod1;


                            if (dt.Rows.Count > 0)
                            {
                                var tmm = model.FirstOrDefault();
                                tmm.Col37 = "0";

                                model = new List<Tmodelmain>();
                                foreach (DataRow dr in dt.Rows)
                                {

                                    model.Add(new Tmodelmain
                                    {
                                        Col9 = tmm.Col9,
                                        Col11 = tmm.Col11,
                                        Col12 = tmm.Col12,
                                        Col10 = tmm.Col10,
                                        Col13 = tmm.Col13,
                                        Col14 = tmm.Col14,
                                        Col15 = tmm.Col15,
                                        Col16 = tmm.Col16,
                                        Col17 = tmm.Col17,
                                        Col19 = tmm.Col19,
                                        Col21 = tmm.Col21,
                                        Col22 = tmm.Col22,
                                        Col23 = tmm.Col23,
                                        Col24 = tmm.Col24,
                                        Col25 = tmm.Col25,
                                        Col26 = tmm.Col26,
                                        Col27 = tmm.Col27,
                                        Col28 = tmm.Col28,
                                        Col29 = tmm.Col29,
                                        Col35 = tmm.Col35,
                                        Col36 = tmm.Col36,
                                        Col100 = tmm.Col100,
                                        Col121 = tmm.Col121,
                                        Col122 = tmm.Col122,
                                        Col123 = tmm.Col123,
                                        Col37 = tot_till.ToString(),
                                        Col38 = bal.ToString(),
                                        Col30 = dr["vch_date"].ToString(),
                                        Col31 = dr["Amount"].ToString(),
                                        Col32 = dr["Mode_Of_Payment"].ToString(),
                                        Col33 = dr["rmk"].ToString(),
                                        Col39 = dr["date1"].ToString(),
                                        TList1 = mod1,
                                        SelectedItems1 = tm.SelectedItems1,


                                    });

                                    tot_till = tot_till + sgen.Make_decimal(dr["Amount"].ToString());
                                }

                                model[0].Col37 = tot_till.ToString();
                                model[0].Col38 = (sgen.Make_decimal(model[0].Col36) - sgen.Make_decimal(tot_till)).ToString();


                            }
                            break;
                    }
                    break;
                #endregion
                #region work allocation
                case "w_alloc":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "DETAIL":
                            mq = "select wo.client_id||wo.client_unit_id||wo.vch_num||to_char(wo.vch_date,'yyyymmdd')||wo.type as fstr,wo.rec_id,wo.vch_num,wo.client_unit_id,wo.ent_by,wo.ent_date,wo.client_id,wo.vch_num as doc_no,to_char(wo.vch_date,'" + sgen.Getsqldateformat() + "') as doc_date" +
                                ",cp.vch_num client_code,cp.c_name as client_name,cp.addr address,nvl(sp.master_name,'-') as service_area,wo.col5,wo.col6,wo.COL18,wo.COL21,wo.COL20,wo.COL19,wo.COL22,(emp.first_name || ' ' || replace(emp.middle_name, '0', '') ||" +
                                " ' ' || replace(emp.last_name, '0', '')) as TL_Name,emp.vch_num as emp_code,dp.master_name department, dg.master_name as designation,to_char(wo.date1, '" + sgen.Getsqldateformat() + "') as " +
                                "start_date,to_char(wo.date2, '" + sgen.Getsqldateformat() + "') as end_date,wo.COL7 as period,wo.COL12 Status from enx_tab2 wo inner join clients_mst cp on cp.vch_num = wo.COL2 and cp.type = 'BCD' and substr(cp.vch_num,0,3)= '303' " +
                                "left join master_setting sp on cp.occ_type = sp.master_id and cp.client_unit_id = sp.client_unit_id and sp.type = 'SSA' inner join emp_master emp on emp.vch_num = wo.COL8 and emp.type = 'EMP' and emp.client_unit_id = '" + unitid_mst + "' left join master_setting dp on dp.master_id = emp.emp_dept and dp.type = 'MDP' and find_in_set(dp.client_unit_id,'" + unitid_mst + "')= 1 left join master_setting dg on dg.master_id = emp.emp_desig and dg.type = 'MDG' and find_in_set(dg.client_unit_id,'" + unitid_mst + "')= 1 where wo.client_id || wo.client_unit_id || wo.vch_num || to_char(wo.vch_date, 'yyyymmdd') || wo.type = '" + URL + "'";

                            dtt = sgen.getdata(userCode, mq);
                            TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.assignment(userCode, unitid_mst);
                            DataTable dtreg = sgen.getdata(userCode, "select com_code,com_year from com_year where client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "'");
                            if (dtreg.Rows.Count > 0)
                            {
                                foreach (DataRow dr in dtreg.Rows)
                                {
                                    mod2.Add(new SelectListItem { Text = dr["com_year"].ToString(), Value = dr["com_code"].ToString() });
                                }
                            }
                            TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2;
                            if (dtt.Rows.Count > 0)
                            {
                                model = getedit(model, dtt, URL);
                                model[0].Col16 = dtt.Rows[0]["vch_num"].ToString();
                                String[] L1 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["COL5"].ToString()).Distinct()).Split(',');
                                String[] L2 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["COL6"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems1 = L1;
                                model[0].SelectedItems2 = L2;
                                model[0].Col17 = dtt.Rows[0]["client_name"].ToString();
                                model[0].Col18 = dtt.Rows[0]["client_code"].ToString();
                                model[0].Col19 = dtt.Rows[0]["address"].ToString();
                                model[0].Col20 = dtt.Rows[0]["service_area"].ToString();
                                model[0].Col23 = dtt.Rows[0]["TL_Name"].ToString();
                                model[0].Col24 = dtt.Rows[0]["emp_code"].ToString();
                                model[0].Col25 = dtt.Rows[0]["department"].ToString();
                                model[0].Col26 = dtt.Rows[0]["designation"].ToString();
                                model[0].Col21 = dtt.Rows[0]["COL22"].ToString();
                                model[0].Col22 = dtt.Rows[0]["period"].ToString();
                                model[0].Col29 = dtt.Rows[0]["Status"].ToString();
                                model[0].Col27 = dtt.Rows[0]["start_date"].ToString();
                                model[0].Col28 = dtt.Rows[0]["end_date"].ToString();
                                model[0].dt1 = model[0].dt1.Clone();
                                for (int i = 0; i < dtt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["SNo"] = i + 1;
                                    dr["EMP_CODE"] = dtt.Rows[i]["COL18"].ToString();
                                    dr["EMP_NAME"] = dtt.Rows[i]["COL20"].ToString();
                                    dr["MOBILE"] = dtt.Rows[i]["COL19"].ToString();
                                    dr["EMAIL"] = dtt.Rows[i]["COL21"].ToString();
                                    model[0].dt1.Rows.Add(dr);
                                }
                                model[0].dt1.AcceptChanges();
                            }
                            else
                            {
                                sgen.showmsg(1, "No Data Found", 1);
                            }
                            break;

                        case "PARTY":
                            mq = "select cp.vch_num as emp_code,cp.c_name as cust_name,cp.addr address,nvl(sp.master_name, '-') as " +
                                "service_area,cp.c_gstin cust_gstin_no from clients_mst cp left join master_setting sp on " +
                                "cp.occ_type = sp.master_id and cp.client_unit_id = sp.client_unit_id and sp.type = 'SSA' " +
                                "where cp.vch_num || to_char(cp.vch_date, 'yyyymmdd') || cp.type = '" + URL + "'";

                            dtt = new DataTable();
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.assignment(userCode, unitid_mst);
                                dtreg = sgen.getdata(userCode, "select com_code,com_year from com_year where client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "'");
                                if (dtreg.Rows.Count > 0)
                                {
                                    foreach (DataRow dr in dtreg.Rows)
                                    {
                                        mod2.Add(new SelectListItem { Text = dr["com_year"].ToString(), Value = dr["com_code"].ToString() });
                                    }
                                }
                                TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2;
                                model = getnew(model);
                                model[0].Col17 = dtt.Rows[0]["cust_name"].ToString();
                                model[0].Col18 = dtt.Rows[0]["emp_code"].ToString();
                                model[0].Col19 = dtt.Rows[0]["address"].ToString();
                                model[0].Col20 = dtt.Rows[0]["service_area"].ToString();
                                if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                                if (model[0].SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
                            }
                            else
                            {
                                sgen.showmsg(1, "No Data Found", 1);
                            }
                            break;
                        case "TL":

                            mq = "SELECT to_char(emp.st_dt,'" + sgen.Getsqldateformat() + "') as doj,emp.vch_num,(emp.first_name|| ' '|| replace(emp.middle_name, " +
                       "'0', '')|| ' '|| replace(emp.last_name, '0', '')) as Name,nvl(dg.master_name,'-') as designation,nvl(dp.master_name,'-') as department FROM emp_master emp" +
                       " left join master_setting dp on dp.master_id=emp.emp_dept and dp.type='MDP' and find_in_set(dp.client_unit_id,'" + unitid_mst + "')=1 left join master_setting dg on dg.master_id = emp.emp_desig and dg.type = 'MDG' and " +
                       " find_in_set(dg.client_unit_id,'" + unitid_mst + "')= 1 where (emp.client_id|| emp.client_unit_id|| emp.vch_num|| to_char(emp.vch_date,'yyyymmdd')||emp.type) = '" + URL + "'";

                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                model[0].Col23 = dt.Rows[0]["Name"].ToString();
                                model[0].Col24 = dt.Rows[0]["vch_num"].ToString();
                                model[0].Col25 = dt.Rows[0]["department"].ToString();
                                model[0].Col26 = dt.Rows[0]["designation"].ToString();
                            }
                            else
                            {
                                sgen.showmsg(1, "No Data Found", 1);
                            }
                            break;
                        case "EMP":
                            // brijesh 1 line
                            mq = "SELECT (emp.client_id|| emp.client_unit_id|| emp.vch_num|| to_char(emp.vch_date,'yyyymmdd')||emp.type) as fstr,to_char(emp.st_dt,'" + sgen.Getsqldateformat() + "') as doj,emp.vch_num,(emp.first_name|| ' '|| replace(emp.middle_name, " +
                                 "'0', '')|| ' '|| replace(emp.last_name, '0', '')) as Name,nvl(dg.master_name,'-') as designation,nvl(dp.master_name,'-') as department,emp.email_id as Per_Email,emp.contact_no as ContactNo FROM emp_master emp" +
                                 " left join master_setting dp on dp.master_id=emp.emp_dept and dp.type='MDP' and find_in_set(dp.client_unit_id,'" + unitid_mst + "')=1 left join master_setting dg on dg.master_id = emp.emp_desig and dg.type = 'MDG' and " +
                                 " find_in_set(dg.client_unit_id,'" + unitid_mst + "')= 1 where (emp.client_id|| emp.client_unit_id|| emp.vch_num|| to_char(emp.vch_date,'yyyymmdd')||emp.type) in ('" + URL + "')";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                if (model[0].dt1.Rows[0]["EMP_CODE"].ToString().Trim().Equals("-")) { model[0].dt1.Rows.RemoveAt(0); }
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["select_"] = dt.Rows[i]["fstr"].ToString();
                                    dr["SNo"] = i + 1;
                                    dr["EMP_CODE"] = dt.Rows[i]["vch_num"].ToString();
                                    dr["EMP_NAME"] = dt.Rows[i]["Name"].ToString();
                                    dr["MOBILE"] = dt.Rows[i]["ContactNo"].ToString();
                                    dr["EMAIL"] = dt.Rows[i]["Per_Email"].ToString();
                                    model[0].dt1.Rows.Add(dr);
                                }
                                model[0].dt1.AcceptChanges();
                            }
                            else
                            {
                                sgen.showmsg(1, "No Data Found", 1);
                            }
                            break;
                    }
                    break;
                #endregion
                #region rate card
                case "rcard":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            mq = "select ug.client_id||ug.client_unit_id||ug.vch_num||to_char(ug.vch_date,'yyyymmdd')||ug.type as fstr" +
                                ",ug.col6,ug.client_id,ug.client_unit_id,ug.ent_by,ug.rec_id,ug.ent_date,ug.vch_num,to_char(ug.vch_date,'" + sgen.Getsqldateformat() + "'),ug.col3 as Rate from " +
                                "enx_tab2 ug where ug.client_id||ug.client_unit_id||ug.vch_num||to_char(ug.vch_date,'yyyymmdd')||ug.type = '" + URL + "'";

                            DataTable dtreg = new DataTable();
                            dtreg = sgen.getdata(userCode, mq);
                            if (dtreg.Rows.Count > 0)
                            {
                                model = getedit(model, dtreg, URL);
                                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.desig(userCode, unitid_mst);
                                // TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2 = cmd_Fun.transportmode(userCode, unitid_mst);
                                model[0].Col16 = dtreg.Rows[0]["vch_num"].ToString();
                                String[] L1 = System.String.Join(",", dtreg.Rows.OfType<DataRow>().Select(r => r["col6"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems1 = L1;
                                // String[] L2 = System.String.Join(",", dtreg.Rows.OfType<DataRow>().Select(r => r["col7"].ToString()).Distinct()).Split(',');
                                // model[0].SelectedItems2 = L2;
                                model[0].Col17 = dtreg.Rows[0]["Rate"].ToString();
                            }
                            else
                            {
                                sgen.showmsg(1, "No Data Found", 1);
                            }
                            break;
                    }
                    break;
                #endregion
                #region csheet
                case "csheet":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            mq = "select a.vch_num,to_char(a.vch_date, '" + sgen.Getsqldateformat() + "') as doc_date, b.vch_num as emp_code," +
                                "b.c_name as cust_name,b.addr address,a.col5,nvl(sp.master_name,'-') as service_area,(case when b.cpcont = '0000000000' " +
                                "then '-' else b.cpcont end) ContactNo,a.client_id,a.client_unit_id,a.ent_by,a.rec_id,a.ent_date,(case when b.cpaltcont = '0000000000' then '-' else b.cpaltcont" +
                                " end) as AltContactNo,(case when b.cpemail = 'ab@ab.ab' then '-' else b.cpemail end) as Email " +
                                ",b.c_gstin cust_gstin_no from enx_tab2 a inner join clients_mst b on a.col2 = b.vch_num and " +
                                "substr(b.vch_num, 0, 3) = '303' and find_in_set(b.client_unit_id, a.client_unit_id) = 1 left join" +
                                " master_setting sp on b.occ_type = sp.master_id and b.client_unit_id = sp.client_unit_id and" +
                                " sp.type = 'SSA' where a.client_id || a.client_unit_id || a.vch_num || to_char(a.vch_date, 'yyyymmdd')" +
                                " || a.type = '" + URL + "'";
                            DataTable dtreg = new DataTable();
                            dtreg = sgen.getdata(userCode, mq);
                            mod1.Add(new SelectListItem { Text = "temp assignment", Value = "001" });
                            TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
                            if (dtreg.Rows.Count > 0)
                            {
                                model = getedit(model, dtreg, URL);
                                model[0].Col16 = dtreg.Rows[0]["vch_num"].ToString();
                                String[] L1 = System.String.Join(",", dtreg.Rows.OfType<DataRow>().Select(r => r["col5"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems1 = L1;
                                model[0].Col17 = dtreg.Rows[0]["cust_name"].ToString();
                                model[0].Col18 = dtreg.Rows[0]["emp_code"].ToString();
                                model[0].Col19 = dtreg.Rows[0]["address"].ToString();
                                model[0].Col20 = dtreg.Rows[0]["service_area"].ToString();
                            }
                            else
                            {
                                sgen.showmsg(1, "No Data Found", 1);
                            }
                            break;

                        case "PARTY":
                            mq = "select cp.vch_num as emp_code,cp.c_name as cust_name,cp.addr address,nvl(sp.master_name, '-') as " +
                                "service_area,cp.c_gstin cust_gstin_no from clients_mst cp left join master_setting sp on " +
                                "cp.occ_type = sp.master_id and cp.client_unit_id = sp.client_unit_id and sp.type = 'SSA' " +
                                "where cp.vch_num || to_char(cp.vch_date, 'yyyymmdd') || cp.type = '" + URL + "'";

                            dtt = new DataTable();
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                mod1.Add(new SelectListItem { Text = "temp assignment", Value = "001" });
                                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
                                model = getnew(model);
                                model[0].Col17 = dtt.Rows[0]["cust_name"].ToString();
                                model[0].Col18 = dtt.Rows[0]["emp_code"].ToString();
                                model[0].Col19 = dtt.Rows[0]["address"].ToString();
                                model[0].Col20 = dtt.Rows[0]["service_area"].ToString();
                                if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                            }
                            else
                            {
                                sgen.showmsg(1, "No Data Found", 1);
                            }
                            break;
                    }
                    break;
                #endregion
                #region conveyance rate
                case "con_rate":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            mq = "select a.vch_num,to_char(a.vch_date, '" + sgen.Getsqldateformat() + "') as doc_datea,a.col12,b.vch_num as emp_code," +
                                "b.c_name as cust_name,b.addr address,a.col5,a.col6,a.col7,a.col9,nvl(sp.master_name,'-') as service_area,(case when b.cpcont = '0000000000' " +
                                "then '-' else b.cpcont end) ContactNo,a.client_id,a.client_unit_id,a.ent_by,a.rec_id,a.ent_date,(case when b.cpaltcont = '0000000000' then '-' else b.cpaltcont" +
                                " end) as AltContactNo,(case when b.cpemail = 'ab@ab.ab' then '-' else b.cpemail end) as Email " +
                                ",b.c_gstin cust_gstin_no from enx_tab2 a inner join clients_mst b on a.col2 = b.vch_num and " +
                                "substr(b.vch_num, 0, 3) = '303' and find_in_set(b.client_unit_id, a.client_unit_id) = 1 left join" +
                                " master_setting sp on b.occ_type = sp.master_id and b.client_unit_id = sp.client_unit_id and" +
                                " sp.type = 'SSA' where a.client_id || a.client_unit_id || a.vch_num || to_char(a.vch_date, 'yyyymmdd')" +
                                " || a.type = '" + URL + "'";
                            DataTable dtreg = new DataTable();
                            dtreg = sgen.getdata(userCode, mq);
                            TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.desig(userCode, unitid_mst);
                            TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2 = cmd_Fun.iloc(userCode, unitid_mst);
                            TempData[MyGuid + "_TList3"] = model[0].TList3 = mod3 = cmd_Fun.transportmode(userCode, unitid_mst);
                            if (dtreg.Rows.Count > 0)
                            {
                                model = getedit(model, dtreg, URL);
                                model[0].Col16 = dtreg.Rows[0]["vch_num"].ToString();
                                String[] L1 = System.String.Join(",", dtreg.Rows.OfType<DataRow>().Select(r => r["col5"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems1 = L1;
                                String[] L2 = System.String.Join(",", dtreg.Rows.OfType<DataRow>().Select(r => r["col6"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems2 = L2;
                                String[] L3 = System.String.Join(",", dtreg.Rows.OfType<DataRow>().Select(r => r["col7"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems3 = L3;
                                model[0].Col17 = dtreg.Rows[0]["col9"].ToString();
                                model[0].Chk1 = (dtreg.Rows[0]["col12"].ToString() == "Y") ? true : false;
                                model[0].dt1 = model[0].dt1.Clone();
                                for (int i = 0; i < dtreg.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["SNo"] = i + 1;
                                    dr["Client_Code"] = dtreg.Rows[i]["emp_code"].ToString();
                                    dr["Client_Name"] = dtreg.Rows[i]["cust_name"].ToString();
                                    dr["Address"] = dtreg.Rows[i]["address"].ToString();
                                    dr["Service_Area"] = dtreg.Rows[i]["service_area"].ToString();
                                    model[0].dt1.Rows.Add(dr);
                                }
                                model[0].dt1.AcceptChanges();
                            }
                            else
                            {
                                sgen.showmsg(1, "No Data Found", 1);
                            }
                            break;
                        case "PARTY":
                            mq = "select cp.vch_num || to_char(cp.vch_date, 'yyyymmdd') || cp.type as fstr, cp.vch_num as emp_code,cp.c_name as cust_name,cp.addr address,nvl(sp.master_name, '-') as " +
                        "service_area,cp.c_gstin cust_gstin_no from clients_mst cp left join master_setting sp on " +
                        "cp.occ_type = sp.master_id and cp.client_unit_id = sp.client_unit_id and sp.type = 'SSA' " +
                        "where cp.vch_num || to_char(cp.vch_date, 'yyyymmdd') || cp.type in ('" + URL + "')";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                if (model[0].dt1.Rows[0]["Client_Code"].ToString().Trim().Equals("-")) { model[0].dt1.Rows.RemoveAt(0); }
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["select_"] = dt.Rows[i]["fstr"].ToString();
                                    dr["SNo"] = i + 1;
                                    dr["Client_Code"] = dt.Rows[i]["emp_code"].ToString();
                                    dr["Client_Name"] = dt.Rows[i]["cust_name"].ToString();
                                    dr["Address"] = dt.Rows[i]["address"].ToString();
                                    dr["Service_Area"] = dt.Rows[i]["service_area"].ToString();
                                    model[0].dt1.Rows.Add(dr);
                                }
                                model[0].dt1.AcceptChanges();
                            }
                            else
                            {
                                sgen.showmsg(1, "No Data Found", 1);
                            }
                            break;
                    }
                    break;
                #endregion
                #region assign training
                case "asn_trng":
                    bool res = false;
                    string userid = "", invitee = "", cond = "", condition = "", trntype = "";
                    tm = model.FirstOrDefault();
                    switch (btnval.ToUpper())
                    {

                        case "EDIT":
                            mq = "select ug.client_id||ug.client_unit_id||ug.vch_num||to_char(ug.vch_date,'yyyymmdd')||ug.type as fstr" +
                                ",ug.col6,ug.client_id,ug.client_unit_id,ug.ent_by,ug.rec_id,ug.ent_date,ug.vch_num,to_char(ug.vch_date,'" + sgen.Getsqldateformat() + "'),ug.col3 as Rate from " +
                                "enx_tab2 ug where ug.client_id||ug.client_unit_id||ug.vch_num||to_char(ug.vch_date,'yyyymmdd')||ug.type = '" + URL + "'";

                            DataTable dtreg = new DataTable();
                            dtreg = sgen.getdata(userCode, mq);
                            if (dtreg.Rows.Count > 0)
                            {
                                model = getedit(model, dtreg, URL);
                                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.desig(userCode, unitid_mst);
                                // TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2 = cmd_Fun.transportmode(userCode, unitid_mst);
                                model[0].Col16 = dtreg.Rows[0]["vch_num"].ToString();
                                String[] L1 = System.String.Join(",", dtreg.Rows.OfType<DataRow>().Select(r => r["col6"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems1 = L1;
                                // String[] L2 = System.String.Join(",", dtreg.Rows.OfType<DataRow>().Select(r => r["col7"].ToString()).Distinct()).Split(',');
                                // model[0].SelectedItems2 = L2;
                                model[0].Col17 = dtreg.Rows[0]["Rate"].ToString();
                            }
                            else
                            {
                                sgen.showmsg(1, "No Data Found", 1);
                            }
                            break;
                        case "SERIES":
                            mq = "select en.col1,en.col2,en.col3,en.col4,en.col5,cr.trn_duration,m.mod_name,ct.cat_name," +
                                "cr.course_id,cr.cou_title,cr.ref_code from enx_tab en inner join courses cr on en.col4 = " +
                                "cr.course_id and cr.type = 'TCR' and en.client_id = cr.client_id and en.client_unit_id =" +
                                " cr.client_unit_id inner join module m on m.mod_id = en.col2 and m.type = 'TMD' inner " +
                                "join category ct on ct.cat_id = en.col3 and ct.type = 'TCT' where en.client_id||en.client_unit_id||en.rec_id|| to_char(en.vch_date, 'yyyymmdd')|| en.type= '" + URL + "'";

                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                if (dt.Rows[0]["trn_duration"].ToString().Equals("0")) { ViewBag.Scripcall = "sgen.showmsg(1, 'Please upload training first', 0);"; return model; }
                                model[0].Col17 = dt.Rows[0]["col1"].ToString();
                                sgen.SetSession(MyGuid, "tr_seriesurl", URL);
                                model[0].Col19 = dt.Rows[0]["col4"].ToString();
                                model[0].Col18 = dt.Rows[0]["cou_title"].ToString();
                                model[0].Col24 = dt.Rows[0]["ref_code"].ToString();
                                model[0].Col25 = dt.Rows[0]["trn_duration"].ToString();
                                model[0].Col22 = dt.Rows[0]["mod_name"].ToString();
                                model[0].Col23 = dt.Rows[0]["col2"].ToString();
                                model[0].Col21 = dt.Rows[0]["col3"].ToString();
                                model[0].Col22 = dt.Rows[0]["cat_name"].ToString();
                                model[0].Col24 = dt.Rows[0]["col5"].ToString();
                                model[0].Col25 = dt.Rows[0]["trn_duration"].ToString();
                            }
                            else
                            {
                                sgen.showmsg(1, "No Data Found", 1);
                            }
                            break;
                        case "CHOOSETITLE":

                            mq = "select uc.course_id,uc.mod_id,uc.cat_id,uc.cou_title,uc.ref_code,uc.client_id,uc.client_unit_id,c.trn_duration,m.mod_name,ct.cat_name from usercourse uc " +
                                "inner join courses c on c.course_id = uc.course_id and  c.type = 'TCR' and c.client_id = uc.client_id and c.client_unit_id = uc.client_unit_id " +
                                "inner join module m on m.mod_id = uc.mod_id and m.type='TMD' inner join category ct on ct.cat_id=uc.cat_id and ct.type='TCT' where" +
                                " uc.client_id|| uc.client_unit_id||uc.course_id||to_char(uc.vch_date, 'yyyymmdd')|| uc.type= '" + URL + "'";

                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                if (dt.Rows[0]["trn_duration"].ToString().Equals("0")) { ViewBag.Scripcall = "sgen.showmsg(1, 'Please upload training first', 0);"; return model; }

                                model[0].Col19 = dt.Rows[0]["course_id"].ToString();
                                model[0].Col18 = dt.Rows[0]["cou_title"].ToString();
                                model[0].Col24 = dt.Rows[0]["ref_code"].ToString();
                                model[0].Col25 = dt.Rows[0]["trn_duration"].ToString();
                                model[0].Col22 = dt.Rows[0]["mod_name"].ToString();
                                model[0].Col23 = dt.Rows[0]["mod_id"].ToString();
                                model[0].Col21 = dt.Rows[0]["cat_id"].ToString();
                                model[0].Col20 = dt.Rows[0]["cat_name"].ToString();
                            }
                            else
                            {
                                sgen.showmsg(1, "No Data Found", 1);
                            }
                            break;
                        case "TOPIC":
                            mq = "select c.mod_id,c.cat_id,c.course_id,m.mod_name,cat.cat_name,c.cou_title,c.ref_code," +
                                "c.trn_duration,ud.First_name|| ' '||ud.middle_name||' '|| ud.last_name as Ent_By,to_char(c.cou_Ent_Date," + "'" + sgen.Getsqldateformat() + "')" +
                                " as Ent_Date from courses c inner join module m on m.mod_id = c.mod_id and m.type = 'TMD' and m.client_unit_id=c.client_unit_id inner join " +
                                "category cat on cat.cat_id = c.cat_id and cat.type = 'TCT' and cat.mod_id=m.mod_id and cat.client_unit_id=c.client_unit_id  inner join user_details ud on c.cou_ent_by" +
                                " = ud.vch_num and ud.type = 'CPR'  where c.client_id||c.client_unit_id||c.vch_num||to_char(c.vch_date, 'yyyymmdd')|| c.type ='" + URL + "'";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                model[0].Col22 = dt.Rows[0]["mod_name"].ToString();
                                model[0].Col23 = dt.Rows[0]["mod_id"].ToString();
                                model[0].Col20 = dt.Rows[0]["cat_name"].ToString();
                                model[0].Col21 = dt.Rows[0]["cat_id"].ToString();
                                model[0].Col18 = dt.Rows[0]["cou_title"].ToString();
                                model[0].Col19 = dt.Rows[0]["course_id"].ToString();
                                model[0].Col24 = dt.Rows[0]["ref_code"].ToString();
                                model[0].Col25 = dt.Rows[0]["trn_duration"].ToString();
                            }
                            else
                            {
                                sgen.showmsg(1, "No Data Found", 1);
                            }
                            break;
                        case "PHYTRN":
                            mq = "select c.mod_id,c.cat_id,c.course_id,m.mod_name,cat.cat_name,c.cou_title,c.ref_code,c.trn_duration," +
                                "ud.First_name|| ' '||ud.middle_name|| ' '|| ud.last_name as Ent_By,to_char(c.cou_Ent_Date, " + "'" + sgen.Getsqldateformat() + "') as Ent_Date " +
                                "from courses c inner join module m on m.mod_id = c.mod_id and m.type = 'TMD'  and inner join category cat on cat.cat_id = c.cat_id and cat.type = 'TCT'  and cat.mod_id=m.mod_id and cat.client_unit_id=c.client_unit_id" +
                                " inner join user_details ud on c.cou_ent_by = ud.vch_num and ud.type = 'CPR'  where c.client_id||c.client_unit_id||c.vch_num|| to_char(c.vch_date, 'yyyymmdd')|| c.type='" + URL + "'";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                //txt_duration.ReadOnly = false;
                                //loc.Visible = true;
                                //remark.Visible = true;
                                //up_ctr.Visible = true;
                                sgen.SetSession(MyGuid, "trntype", "p");
                                sgen.SetSession(MyGuid, "trnstatus", "pending");
                                model[0].Col22 = dt.Rows[0]["mod_name"].ToString();
                                model[0].Col23 = dt.Rows[0]["mod_id"].ToString();
                                model[0].Col20 = dt.Rows[0]["cat_name"].ToString();
                                model[0].Col21 = dt.Rows[0]["cat_id"].ToString();
                                model[0].Col18 = dt.Rows[0]["cou_title"].ToString();
                                model[0].Col19 = dt.Rows[0]["course_id"].ToString();
                                model[0].Col24 = dt.Rows[0]["ref_code"].ToString();
                                model[0].Col25 = dt.Rows[0]["trn_duration"].ToString();
                            }
                            else
                            {
                                ViewBag.scripCall += "mytoast('warning', 'toast-top-right', 'Data Not Exist');";
                            }
                            break;
                        case "DESG":
                            condition = sgen.GetSession(MyGuid, "condition").ToString();
                            sgen.SetSession(MyGuid, "grouptype", "DP");
                            mq = "select ms.master_id||ms.type as fstr,ms.master_id as Id,ms.master_name as Desg,ud.rec_id,ud.vch_num,ud.designation,COALESCE(replace(ud.first_name,'0',''),'')||''||COALESCE(replace(ud.middle_name,'0',''),'')||' '||COALESCE(replace(ud.last_name,'0',''),'')" +
                                " AS Name,ud.email,ud.client_unit_id from master_setting ms left outer join user_details ud on ud.designation = ms.master_id and ud.type = 'CPR' and ud.status = 'active' and find_in_set('" + clientid_mst + "',ud.client_id)=1 and find_in_set('1000',ud.mod_id)=1" +
                                " and (" + condition + ")  WHERE ms.type = 'MDG' and ms.master_id||ms.type in('" + URL + "') ";
                            dt = sgen.getdata(userCode, mq);
                            //foreach (DataRow dr in dt.Rows)
                            //{
                            //    string unitcheck = dr["client_unit_id"].ToString();
                            //    if (unitcheck.Trim().Contains(unitid_mst)) dr["client_unit_id"] = unitid_mst;
                            //    else dr["client_unit_id"] = unitcheck.Split(',').Distinct().OrderBy(x => x).ToList()[0].ToString();
                            //}
                            //dt.AcceptChanges();
                            //List<individual> ind = new List<individual>();
                            if (dt.Rows.Count > 0)
                            {
                                mod1.Add(new SelectListItem { Text = "Yes", Value = "1" });
                                mod1.Add(new SelectListItem { Text = "No", Value = "0" });
                                mod2.Add(new SelectListItem { Text = "Yes", Value = "1" });
                                mod2.Add(new SelectListItem { Text = "No", Value = "0" });
                                mod4.Add(new SelectListItem { Text = "Created Group", Value = "1" });
                                mod4.Add(new SelectListItem { Text = "Department", Value = "2" });
                                mod4.Add(new SelectListItem { Text = "Designation", Value = "3" });
                                mod4.Add(new SelectListItem { Text = "Individual", Value = "4" });
                                dtt = new DataTable();
                                mq1 = "select client_unit_id from user_details where vch_num ='" + userid_mst + "' and type='CPR'";
                                dtt = sgen.getdata(userCode, mq1);
                                if (dt.Rows.Count > 0)
                                {
                                    if (dtt.Rows[0]["client_unit_id"].ToString() == "owner")
                                    {
                                        mq = "select cup_id,unit_name||'('||cup_id||')' as Unit_Name from company_unit_profile ";
                                        DataTable dt1 = new DataTable();
                                        dt1 = sgen.getdata(userCode, mq);
                                        foreach (DataRow dr in dt1.Rows)
                                        {
                                            mod3.Add(new SelectListItem { Text = dr["Unit_Name"].ToString(), Value = dr["cup_id"].ToString() });
                                        }
                                    }
                                    else
                                    {
                                        DataTable dt1 = new DataTable();
                                        mq = "select distinct cu.cup_id,cu.unit_name||' ('|| cu.cup_id||')' as Unit_Name from " +
                                            "(SELECT user_id,COALESCE(replace(first_name,'0',''),'')||' '||COALESCE(replace(middle_name,'0',''),'')||' '||COALESCE(replace(last_name,'0',''),'') AS User_Name,email,client_id,client_unit_id," +
                                            "rec_id,vch_date,type,SUBSTRING_INDEX(SUBSTRING_INDEX(client_unit_id, ',', numbers.n), ',',-1) name from numbers inner join user_details on CHAR_LENGTH(user_details.client_unit_id)-CHAR_LENGTH(REPLACE(user_details.client_unit_id, ',', ''))>=numbers.n-1 where type='CPR' and status='active' and find_in_set('1000',mod_id) and find_in_set('" + clientid_mst + "',client_id) order by n)a inner join company_unit_profile cu on cu.cup_id = a.name  where substr(name, 1, 3) = '" + clientid_mst + "'";

                                        dt1 = sgen.getdata(userCode, mq);
                                        if (dt1.Rows.Count > 0)
                                        {
                                            foreach (DataRow dr in dt1.Rows)
                                            {
                                                mod3.Add(new SelectListItem { Text = dr["cup_id"].ToString(), Value = dr["Unit_Name"].ToString() });
                                            }
                                        }
                                    }
                                }
                                TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1;
                                TempData[MyGuid + "_Tlist2"] = model[0].TList2 = mod2;
                                TempData[MyGuid + "_Tlist3"] = model[0].TList3 = mod3;
                                TempData[MyGuid + "_Tlist4"] = model[0].TList4 = mod4;
                                model = new List<Tmodelmain>();
                                for (int k = 0; k < dt.Rows.Count; k++)
                                {
                                    individual indi = new individual();
                                    Tmodelmain tmm = new Tmodelmain();

                                    tmm.Col32 = dt.Rows[k]["vch_num"].ToString();
                                    tmm.Col30 = dt.Rows[k]["designation"].ToString();
                                    tmm.Col33 = dt.Rows[k]["Name"].ToString();
                                    tmm.Col31 = dt.Rows[k]["Desg"].ToString();
                                    tmm.Col35 = dt.Rows[k]["client_unit_id"].ToString();
                                    tmm.Col34 = dt.Rows[k]["email"].ToString();
                                    tmm.Col9 = tm.Col9;
                                    tmm.Col10 = tm.Col10;
                                    tmm.Col11 = tm.Col11;
                                    tmm.Col12 = tm.Col12;
                                    tmm.Col14 = tm.Col14;
                                    tmm.Col15 = tm.Col15;
                                    tmm.Col17 = tm.Col17;
                                    tmm.Col18 = tm.Col18;
                                    tmm.Col19 = tm.Col19;
                                    tmm.Col20 = tm.Col20;
                                    tmm.Col21 = tm.Col21;
                                    tmm.Col22 = tm.Col22;
                                    tmm.Col23 = tm.Col23;
                                    tmm.Col24 = tm.Col24;
                                    tmm.Col25 = tm.Col25;
                                    tmm.Col26 = tm.Col26;
                                    tmm.Col27 = tm.Col27;
                                    tmm.Col28 = tm.Col28;
                                    tmm.Col29 = tm.Col29;
                                    tmm.TList1 = tm.TList1;
                                    tmm.TList2 = tm.TList2;
                                    tmm.TList3 = tm.TList3;
                                    tmm.TList4 = tm.TList4;
                                    tmm.SelectedItems1 = tm.SelectedItems1;
                                    tmm.SelectedItems2 = tm.SelectedItems2;
                                    tmm.SelectedItems3 = tm.SelectedItems3;
                                    tmm.SelectedItems4 = tm.SelectedItems4;
                                    //invitee = invitee + indi.groupname + ",";
                                    model.Add(tmm);
                                }
                                //model[0].Col29 = string.Join(",", invitee.TrimEnd(',').Trim().Split(',').Distinct().ToList());
                                //ListtoDataTable ldt = new ListtoDataTable();
                                //DataTable dta = ldt.ToDataTable(ind);
                                //sgen.SetSession(MyGuid, "selecteduser", dtadta);
                                model[0].Col36 = "Designation";

                                sgen.SetSession(MyGuid, "selecteduser", dt);

                            }
                            else
                            {
                                ViewBag.scripCall += "mytoast('warning', 'toast-top-right', 'Data Not Exist');";
                            }
                            break;
                        case "DEPT":
                            condition = sgen.GetSession(MyGuid, "condition").ToString();
                            sgen.SetSession(MyGuid, "grouptype", "DP");
                            mq = "select ms.master_id||ms.type as fstr,ms.master_id as Id,ms.master_name as Dept,ud.rec_id,ud.vch_num,ud.department" +
                                ",ud.first_name||''||replace(ud.middle_name,'0','')||' '||replace(ud.last_name,'0','') AS Name" +
                                ",ud.email,ud.client_unit_id from master_setting ms left outer " +
                                "join user_details ud on ud.department = ms.master_id and ud.type = 'CPR' and ud.status = 'active' and " +
                                "find_in_set('" + clientid_mst + "',ud.client_id)=1 and find_in_set('1000',ud.mod_id)=1 and (" + condition + ")  " +
                                "WHERE ms.type = 'MDP' and ms.master_id||ms.type in('" + URL + "') ";
                            dt = sgen.getdata(userCode, mq);
                            //foreach (DataRow dr in dt.Rows)
                            //{
                            //    string unitcheck = dr["client_unit_id"].ToString();
                            //    if (unitcheck.Trim().Contains(unitid_mst)) dr["client_unit_id"] = unitid_mst;
                            //    else dr["client_unit_id"] = unitcheck.Split(',').Distinct().OrderBy(x => x).ToList()[0].ToString();
                            //}
                            //dt.AcceptChanges();
                            //ind = new List<individual>();
                            if (dt.Rows.Count > 0)
                            {
                                mod1.Add(new SelectListItem { Text = "Yes", Value = "1" });
                                mod1.Add(new SelectListItem { Text = "No", Value = "0" });
                                mod2.Add(new SelectListItem { Text = "Yes", Value = "1" });
                                mod2.Add(new SelectListItem { Text = "No", Value = "0" });
                                mod4.Add(new SelectListItem { Text = "Created Group", Value = "1" });
                                mod4.Add(new SelectListItem { Text = "Department", Value = "2" });
                                mod4.Add(new SelectListItem { Text = "Designation", Value = "3" });
                                mod4.Add(new SelectListItem { Text = "Individual", Value = "4" });
                                dtt = new DataTable();
                                mq1 = "select client_unit_id from user_details where vch_num ='" + userid_mst + "' and type='CPR'";
                                dtt = sgen.getdata(userCode, mq1);
                                if (dt.Rows.Count > 0)
                                {
                                    if (dtt.Rows[0]["client_unit_id"].ToString() == "owner")
                                    {
                                        mq = "select cup_id,unit_name||'('||cup_id||')' as Unit_Name from company_unit_profile ";
                                        DataTable dt1 = new DataTable();
                                        dt1 = sgen.getdata(userCode, mq);
                                        foreach (DataRow dr in dt1.Rows)
                                        {
                                            mod3.Add(new SelectListItem { Text = dr["Unit_Name"].ToString(), Value = dr["cup_id"].ToString() });
                                        }
                                    }
                                    else
                                    {
                                        DataTable dt1 = new DataTable();
                                        mq = "select distinct cu.cup_id,cu.unit_name||' ('|| cu.cup_id||')' as Unit_Name from " +
                                            "(SELECT user_id,COALESCE(replace(first_name,'0',''),'')||' '||COALESCE(replace(middle_name,'0',''),'')||' '||COALESCE(replace(last_name,'0',''),'') AS User_Name,email,client_id,client_unit_id," +
                                            "rec_id,vch_date,type,SUBSTRING_INDEX(SUBSTRING_INDEX(client_unit_id, ',', numbers.n), ',',-1) name from numbers inner join user_details on CHAR_LENGTH(user_details.client_unit_id)-CHAR_LENGTH(REPLACE(user_details.client_unit_id, ',', ''))>=numbers.n-1 where type='CPR' and status='active' and find_in_set('1000',mod_id) and find_in_set('" + clientid_mst + "',client_id) order by n)a inner join company_unit_profile cu on cu.cup_id = a.name  where substr(name, 1, 3) = '" + clientid_mst + "'";

                                        dt1 = sgen.getdata(userCode, mq);
                                        if (dt1.Rows.Count > 0)
                                        {
                                            foreach (DataRow dr in dt1.Rows)
                                            {
                                                mod3.Add(new SelectListItem { Text = dr["cup_id"].ToString(), Value = dr["Unit_Name"].ToString() });
                                            }
                                        }
                                    }
                                }
                                TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1;
                                TempData[MyGuid + "_Tlist2"] = model[0].TList2 = mod2;
                                TempData[MyGuid + "_Tlist3"] = model[0].TList3 = mod3;
                                TempData[MyGuid + "_Tlist4"] = model[0].TList4 = mod4;
                                model = new List<Tmodelmain>();
                                for (int k = 0; k < dt.Rows.Count; k++)
                                {
                                    individual indi = new individual();
                                    Tmodelmain tmm = new Tmodelmain();

                                    tmm.Col32 = dt.Rows[k]["vch_num"].ToString();
                                    tmm.Col30 = dt.Rows[k]["department"].ToString();
                                    tmm.Col33 = dt.Rows[k]["Name"].ToString();
                                    tmm.Col31 = dt.Rows[k]["dept"].ToString();
                                    tmm.Col35 = dt.Rows[k]["client_unit_id"].ToString();
                                    tmm.Col34 = dt.Rows[k]["email"].ToString();
                                    tmm.Col9 = tm.Col9;
                                    tmm.Col10 = tm.Col10;
                                    tmm.Col11 = tm.Col11;
                                    tmm.Col12 = tm.Col12;
                                    tmm.Col14 = tm.Col14;
                                    tmm.Col15 = tm.Col15;
                                    tmm.Col17 = tm.Col17;
                                    tmm.Col18 = tm.Col18;
                                    tmm.Col19 = tm.Col19;
                                    tmm.Col20 = tm.Col20;
                                    tmm.Col21 = tm.Col21;
                                    tmm.Col22 = tm.Col22;
                                    tmm.Col23 = tm.Col23;
                                    tmm.Col24 = tm.Col24;
                                    tmm.Col25 = tm.Col25;
                                    tmm.Col26 = tm.Col26;
                                    tmm.Col27 = tm.Col27;
                                    tmm.Col28 = tm.Col28;
                                    tmm.Col29 = tm.Col29;
                                    tmm.TList1 = tm.TList1;
                                    tmm.TList2 = tm.TList2;
                                    tmm.TList3 = tm.TList3;
                                    tmm.TList4 = tm.TList4;
                                    tmm.SelectedItems1 = tm.SelectedItems1;
                                    tmm.SelectedItems2 = tm.SelectedItems2;
                                    tmm.SelectedItems3 = tm.SelectedItems3;
                                    tmm.SelectedItems4 = tm.SelectedItems4;
                                    //invitee = invitee + indi.groupname + ",";
                                    model.Add(tmm);
                                }
                                //model[0].Col29 = string.Join(",", invitee.TrimEnd(',').Trim().Split(',').Distinct().ToList());
                                //ListtoDataTable ldt = new ListtoDataTable();
                                //DataTable dta = ldt.ToDataTable(ind);
                                //sgen.SetSession(MyGuid, "selecteduser", dtadta);
                                model[0].Col36 = "Department";
                                sgen.SetSession(MyGuid, "selecteduser", dt);

                            }
                            else
                            {
                                sgen.showmsg(1, "No Data Found", 1);
                            }
                            break;
                        case "GROUP":
                            units = sgen.GetSession(MyGuid, "satrday").ToString();
                            sgen.SetSession(MyGuid, "grouptype", "G");

                            mq = "select gd.client_id||gd.client_unit_id||gd.vch_num||to_char(gd.vch_date, 'yyyymmdd')||gd.type) as fstr" +
                                ",gd.group_id,gd.group_name,count(ug.user_id) as user,ug.user_id,ud.client_unit_id,COALESCE(replace(ud.first_name,'0',''),'')||''||COALESCE(replace(ud.middle_name,'0',''),'')||' '||COALESCE(replace(ud.last_name,'0',''),'') AS Name" +
                                ",ud.email from group_details gd LEFT OUTER join usergroup ug on ug.group_id=gd.group_id and ug.type='TGP' and ug.status='assigned' and ug.client_id=gd.client_id and ug.client_unit_id in (" + units + ") " +
                                "inner join user_details ud on ud.vch_num=ug.user_id and ud.type='CPR' where gd.client_id='" + clientid_mst + "' and gd.type='TGP' and gd.client_id||gd.client_unit_id||gd.vch_num|| to_char(gd.vch_date, 'yyyymmdd')|| gd.type in ('" + URL + "')" +
                                " GROUP by gd.GROUP_ID,gd.group_name,ug.user_id";

                            dt = sgen.getdata(userCode, mq);
                            foreach (DataRow dr in dt.Rows)
                            {
                                string unitcheck = dr["client_unit_id"].ToString();
                                if (unitcheck.Trim().Contains(unitid_mst)) dr["client_unit_id"] = unitid_mst;
                                else dr["client_unit_id"] = unitcheck.Split(',').Distinct().OrderBy(x => x).ToList()[0].ToString();
                            }
                            dt.AcceptChanges();

                            //individual ind = new List<individual>();
                            //if (dt.Rows.Count > 0)
                            //{

                            //    for (int k = 0; k < dt.Rows.Count; k++)
                            //    {
                            //        individual indi = new individual();
                            //        indi.recid = dt.Rows[k]["user_id"].ToString();
                            //        indi.groupid = dt.Rows[k]["group_id"].ToString();
                            //        indi.name = dt.Rows[k]["Name"].ToString();
                            //        indi.groupname = dt.Rows[k]["group_name"].ToString();
                            //        indi.cu = dt.Rows[k]["client_unit_id"].ToString();
                            //        indi.email = dt.Rows[k]["email"].ToString();
                            //        invitee = invitee + indi.groupname + ",";
                            //        ind.Add(indi);
                            //    }
                            //    model[0].Col29 = string.Join(",", invitee.TrimEnd(',').Trim().Split(',').Distinct().ToList());

                            //    ListtoDataTable ldt = new ListtoDataTable();
                            //    DataTable dta = ldt.ToDataTable(ind);
                            //    sgen.SetSession(MyGuid, "selecteduser", dta);
                            //}

                            //else
                            //{
                            //    ViewBag.scripCall += "mytoast('warning', 'toast-top-right', 'Data Not Exist');";
                            //}
                            break;
                        case "INDI":
                            sgen.SetSession(MyGuid, "grouptype", "I");
                            sgen.SetSession(MyGuid, "TRAINEELIST", "URL");
                            //ind = new List<individual>();

                            //DataTable dtk = (DataTable)Session["mydtkc"];

                            //if (dtk.Rows.Count > 0)
                            //{
                            //    string[] anj = URL.Split(',');

                            //    for (int k = 0; k < anj.Length; k++)
                            //    {
                            //        individual indi = new individual();
                            //        string[] aj = anj[k].Split('-');
                            //        indi.recid = aj[0].Replace("'", "").ToString();
                            //        indi.dept = aj[3].ToString();
                            //        indi.desg = aj[4].Replace("'", "").ToString();
                            //        indi.name = sgen.seekval_dt(dtk, "fstr='" + anj[k].Replace("'", "") + "'", "Name");
                            //        indi.cu = sgen.seekval_dt(dtk, "fstr='" + anj[k].Replace("'", "") + "'", "client_unit_id");
                            //        indi.email = sgen.seekval_dt(dtk, "fstr='" + anj[k].Replace("'", "") + "'", "email");
                            //        invitee = invitee + indi.name + ",";
                            //        ind.Add(indi);
                            //    }
                            //    model[0].Col29 = invitee.TrimEnd(',');
                            //    ListtoDataTable ldt = new ListtoDataTable();
                            //    DataTable dta = ldt.ToDataTable(ind);
                            //    sgen.SetSession(MyGuid, "selecteduser", dta);
                            //}
                            //else
                            //{
                            //    sgen.showmsg(1, "No Data Found", 1);
                            //}
                            break;
                        case "UNASSIGN":
                            DataTable datatable = new DataTable();
                            datatable = sgen.getdata(userCode, "select com_email,com_password,com_port,com_smtp from company_profile where Company_Profile_Id='" + clientid_mst + "' and type='CP' ");
                            if (datatable.Rows.Count > 0)
                            {
                                smtpvalue = Convert.ToString(datatable.Rows[0]["com_smtp"]);
                                emailIdvalue = Convert.ToString(datatable.Rows[0]["com_email"]);
                                passwordvalue = EncryptDecrypt.Decrypt(datatable.Rows[0]["com_password"].ToString());
                                portvalue = Convert.ToInt32(datatable.Rows[0]["com_port"]);
                                if (smtpvalue == "" && passwordvalue == "" && portvalue == 0)
                                {
                                    sgen.showmsg(1, "Please configure your mail first", 2);
                                }
                            }
                            DataTable dttrng = new DataTable();
                            mq = "select uc.user_id,uc.cou_title,uc.vch_num,uc.group_name,ud.email,ud.first_name,ud.user_id from usercourse uc join user_details ud " +
                                "on uc.user_id=ud.vch_num and uc.type='TCU' where uc.client_id||uc.client_unit_id||uc.vch_num||to_char(uc.vch_date, 'yyyymmdd')|| uc.type in('" + URL + "')";

                            dttrng = sgen.getdata(userCode, mq);
                            if (dttrng.Rows.Count > 0)
                            {
                                res = sgen.execute_cmd(userCode, "delete from usercourse WHERE vch_num='" + dttrng.Rows[0]["vch_num"].ToString() + "' and type='TCU'" + where + "");
                                if (res == true)
                                {
                                    for (int k = 0; k < dttrng.Rows.Count; k++)
                                    {
                                        MailMessage msg = new MailMessage();

                                        // msg.From = new MailAddress(emailIdvalue);
                                        // msg.CC.Add(emailIdvalue);
                                        msg.To.Add(dttrng.Rows[k]["email"].ToString());
                                        msg.Subject = "Training Unassign";

                                        // string msgbody = "<b style='color: #3caee9; font-size: 20px'>Training Unassigned By Admin</b><br /><hr style='border:1px solid black' /><p>Hi <b>" + dttrng.Rows[k]["first_name"].ToString() + "</b>,</p><p>This is to notify that you have been unassigned training. your unassigned training details are as below :-</p><table style='font-weight:600'><tr><td>Company Name </td><td>: " + clientname_mst + " </td></tr><tr><td> Unit Name </td><td>: " + unitname_mst + " </td></tr><tr><td> Training </td><td>: " + dttrng.Rows[k]["cou_title"].ToString() + " </td></tr><tr><td> URL </td><td>: " + subdomain_mst + " </td></tr></table><br /><p>Please ask your admin for further clarification and information.</p><p>Thank you,<br />Administrator<br /></p><br /><p>Note:- Please do not reply to this mail as it is an unmonitered alias.</p>";
                                        // msg.Body = msgbody;
                                        msg.IsBodyHtml = true;
                                        SmtpClient smtp = new SmtpClient();
                                        // smtp.Host = smtpvalue;
                                        System.Net.NetworkCredential NetworkCred = new System.Net.NetworkCredential();
                                        //  NetworkCred.UserName = emailIdvalue;
                                        // NetworkCred.Password = passwordvalue;
                                        smtp.UseDefaultCredentials = true;
                                        smtp.Credentials = NetworkCred;
                                        //smtp.Port = portvalue;
                                        smtp.EnableSsl = true;
                                        smtp.Send(msg);
                                    }

                                    sgen.showmsg(1, "Training Unassigned", 1);
                                }
                            }
                            else
                            {
                                sgen.showmsg(1, "No Data Found", 1);
                            }
                            break;
                    }
                    break;
                #endregion
                #region attendence
                case "att":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            mq = "select a.vch_num,to_char(a.date1, '" + sgen.Getsqldateformat() + "') as doc_datea," +
                                "to_char(a.date10, '" + sgen.Getsqldatetimeformat() + "') as datefrom," +
                                "to_char(a.date11, '" + sgen.Getsqldatetimeformat() + "') as dateto,a.* from kc_tab a where a.client_id || a.client_unit_id || a.vch_num || to_char(a.vch_date, 'yyyymmdd')" +
                                " || a.type = '" + URL + "'";
                            dtt = new DataTable();
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                model[0].Col16 = dtt.Rows[0]["vch_num"].ToString();
                                model[0].Col22 = sgen.seekval(userCode, "select vch_num as id,first_name||' '||replace(middle_name,'0','')||''||replace(last_name,'0','') as user_name from user_details where type='CPR' and vch_num = '" + dtt.Rows[0]["ent_by"].ToString() + "'", "user_name");

                                model[0].Col17 = dtt.Rows[0]["col1"].ToString();
                                model[0].Col18 = dtt.Rows[0]["doc_datea"].ToString();
                                model[0].Col19 = dtt.Rows[0]["col8"].ToString();
                                model[0].Col20 = dtt.Rows[0]["datefrom"].ToString();
                                model[0].Col21 = dtt.Rows[0]["dateto"].ToString();
                                mod1 = cmd_Fun.assignment(userCode, unitid_mst);
                                mod2 = cmd_Fun.iloc(userCode, unitid_mst);
                                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod3 = cmd_Fun.traveltype(userCode, unitid_mst);
                                TempData[MyGuid + "_TList2"] = model[0].TList2 = mod4 = cmd_Fun.travelclass(userCode, unitid_mst);
                                TempData[MyGuid + "_TList3"] = model[0].TList3 = mod5 = cmd_Fun.iloc(userCode, unitid_mst);
                                TempData[MyGuid + "_TList4"] = model[0].TList4 = mod6 = cmd_Fun.iloc(userCode, unitid_mst);
                                model = getedit(model, dtt, URL);
                                String[] L3 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["col5"].ToString()).Distinct()).Split(',');
                                String[] L4 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["col6"].ToString()).Distinct()).Split(',');
                                String[] L5 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["col25"].ToString()).Distinct()).Split(',');
                                String[] L6 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["col4"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems1 = L3;
                                model[0].SelectedItems2 = L4;
                                model[0].SelectedItems3 = L5;
                                model[0].SelectedItems4 = L6;
                                model[0].LTM2 = new List<Tmodelmain>();
                                for (int i = 0; i < dtt.Rows.Count; i++)
                                {
                                    Tmodelmain ltm2 = new Tmodelmain();
                                    ltm2.Col17 = dtt.Rows[i]["col19"].ToString();
                                    ltm2.Col29 = dtt.Rows[i]["col18"].ToString();
                                    ltm2.Col18 = dtt.Rows[i]["col20"].ToString();
                                    ltm2.Col19 = dtt.Rows[i]["COL7"].ToString();
                                    ltm2.Col20 = dtt.Rows[i]["COL9"].ToString();
                                    ltm2.Col21 = dtt.Rows[i]["COL10"].ToString();
                                    ltm2.Col22 = dtt.Rows[i]["COL11"].ToString();
                                    ltm2.Col23 = dtt.Rows[i]["COL12"].ToString();
                                    ltm2.Col24 = dtt.Rows[i]["COL13"].ToString();
                                    ltm2.Col25 = dtt.Rows[i]["COL14"].ToString();
                                    ltm2.Col26 = dtt.Rows[i]["COL15"].ToString();
                                    ltm2.Col27 = dtt.Rows[i]["COL16"].ToString();
                                    ltm2.Col28 = dtt.Rows[i]["COL17"].ToString();
                                    string[] L1 = new string[] { dtt.Rows[i]["col2"].ToString() };
                                    string[] L2 = new string[] { dtt.Rows[i]["col3"].ToString() };
                                    ltm2.SelectedItems1 = L1;
                                    ltm2.SelectedItems2 = L2;
                                    TempData[MyGuid + "_TL1"] = ltm2.TList1 = mod1;
                                    TempData[MyGuid + "_TL2"] = ltm2.TList2 = mod2;
                                    model[0].LTM2.Add(ltm2);
                                }
                            }
                            else
                            {
                                sgen.showmsg(1, "No Data Found", 1);
                            }
                            break;
                        case "PARTY":
                            mq = "select cp.vch_num || to_char(cp.vch_date, 'yyyymmdd') || cp.type as fstr, cp.vch_num as emp_code,cp.c_name as cust_name,cp.addr address,nvl(sp.master_name, '-') as " +
                        "service_area,cp.c_gstin cust_gstin_no from clients_mst cp left join master_setting sp on " +
                        "cp.occ_type = sp.master_id and cp.client_unit_id = sp.client_unit_id and sp.type = 'SSA' " +
                        "where cp.vch_num || to_char(cp.vch_date, 'yyyymmdd') || cp.type in ('" + URL + "')";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                if (model[0].dt1.Rows[0]["Client_Code"].ToString().Trim().Equals("-")) { model[0].dt1.Rows.RemoveAt(0); }
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["select_"] = dt.Rows[i]["fstr"].ToString();
                                    dr["SNo"] = i + 1;
                                    dr["Client_Code"] = dt.Rows[i]["emp_code"].ToString();
                                    dr["Client_Name"] = dt.Rows[i]["cust_name"].ToString();
                                    dr["Address"] = dt.Rows[i]["address"].ToString();
                                    dr["Service_Area"] = dt.Rows[i]["service_area"].ToString();
                                    model[0].dt1.Rows.Add(dr);
                                }
                                model[0].dt1.AcceptChanges();
                            }
                            else
                            {
                                sgen.showmsg(1, "No Data Found", 1);
                            }
                            break;
                    }
                    break;
                #endregion
                #region attendence report
                case "att_rpt":
                    switch (btnval.ToUpper())
                    {
                        case "PERSON WISE":
                            string fdt = "";
                            string tdt = ""
; if (sgen.GetSession(MyGuid, "KPDFDT") != null) fdt = sgen.GetSession(MyGuid, "KPDFDT").ToString();
                            if (sgen.GetSession(MyGuid, "KPDTDT") != null) tdt = sgen.GetSession(MyGuid, "KPDTDT").ToString();
                            mq = "select distinct a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date, 'yyyymmdd')||a.type as fstr,a.vch_num as doc_no," +
                      "to_char(date1, '" + sgen.Getsqldateformat() + "') as doc_date,(case when a.col1 = 'CNV' then 'conveyance' when a.col1 = 'TXI' then 'Taxi' " +
                      "when a.col1 = 'TRV' then 'Travel' else '-' end) as att_type,a.col39 as total_hours ,a.col40 as total_amount," +
                      "ud.first_name||' '||replace(ud.middle_name,'0','')||''||replace(ud.last_name,'0','') as user_name from kc_tab" +
                      " a inner join user_details ud on ud.vch_num=a.ent_by and ud.type='CPR' and ud.vch_num='" + URL + "' where a.type = 'ATT' and a.col38='Pending' and to_date(to_char(a.vch_DATE,'ddMMyyyy'),'ddMMyyyy') between" +
                        " to_date('" + fdt + "','" + sgen.Getsqldatetimeformat() + "') and to_date('" + tdt + "','" + sgen.Getsqldatetimeformat() + "')" +
                      "and a.client_unit_id = '" + unitid_mst + "'";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                model = new List<Tmodelmain>();
                                foreach (DataRow dr in dt.Rows)
                                {
                                    model.Add(new Tmodelmain
                                    {
                                        Col9 = tm.Col9,
                                        Col11 = tm.Col11,
                                        Col12 = tm.Col12,
                                        Col10 = tm.Col10,
                                        Col13 = tm.Col13,
                                        Col14 = tm.Col14,
                                        Col15 = tm.Col15,
                                        Col17 = tm.Col17,
                                        Col100 = "Save & New",
                                        Col121 = "S",
                                        Col122 = "<u>S</u>ave",
                                        Col123 = "Save & Ne<u>w</u>",
                                        Col16 = "",
                                        Col18 = tm.Col18,
                                        Col19 = dr["user_name"].ToString(),
                                        Col20 = dr["fstr"].ToString(),
                                        Col21 = dr["att_type"].ToString(),
                                        Col22 = dr["total_hours"].ToString(),
                                        Col23 = dr["total_amount"].ToString(),
                                    });
                                }
                            }
                            else { ViewBag.scripCall += "showmsgJS(1,'No Data Found',2);"; }
                            break;
                    }
                    break;
                #endregion
                #region schdl_meet
                case "schdl_meet":
                    List<invite_meeting_status> invitelist = new List<invite_meeting_status>();
                    string groupid = "", grpid = "", type_id = "", typename = "";
                    string groupname = "", group = "", bcc = "";
                    string invitees = "";
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            mod1.Add(new SelectListItem { Text = "Individual assignment", Value = "1" });
                            mod1.Add(new SelectListItem { Text = "Group", Value = "2" });
                            mod1.Add(new SelectListItem { Text = "Department", Value = "3" });
                            mod1.Add(new SelectListItem { Text = "Designation", Value = "4" });
                            TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
                            TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2 = cmd_Fun.conf_room(userCode, unitid_mst);
                            TempData[MyGuid + "_TList3"] = model[0].TList3 = mod3 = cmd_Fun.hospitality(userCode, unitid_mst);
                            TempData[MyGuid + "_TList4"] = model[0].TList4 = mod4 = cmd_Fun.it_services(userCode, unitid_mst);
                            DataTable dt1 = new DataTable();
                            mq1 = "select usertype_id,user_type from bookings  where client_id||client_unit_id||vch_num||to_char(vch_date, 'yyyymmdd')||type='" + URL + "'";
                            dt1 = sgen.getdata(userCode, mq1);
                            if (dt1.Rows.Count > 0)
                            {
                                typename = dt1.Rows[0]["user_type"].ToString().Trim();
                                type_id = dt1.Rows[0]["usertype_id"].ToString().Trim();
                            }
                            #region booking edit
                            dt = new DataTable();
                            if ((typename == "MDP") || (typename == "MDG"))
                            {
                                mq = "select a.no_of_invities as No_Of_Invitees,a.it_services,a.add_services,a.conf_roomid," +
                                    "a.meeting_type as Subject,a.conf_roomname as Room_No,a.client_id,a.client_unit_id,to_char(convert_tz(a.startdatetime,'+00:00','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldatetimeformat() + "') as Start_Time," +
                                    "to_char(convert_tz(a.enddatetime,'+00:00','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldatetimeformat() + "') as End_time," +
                                    "to_char(convert_tz(a.entdate,'+00:00','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldatetimeformat() + "') as Organised_Date," +
                                    "a.entby AS Organised_By,a.Agenda,b.user_id as Invitee,a.rec_id,a.vch_num,a.booking_id,a.vch_date,a.entby,a.entdate," +
                                    "a.editby,a.editdate,a.user_id as uid,b.user_id as uname,b.email,b.first_name,a.usertype_id,a.user_type,ms.master_name from " +
                                    "bookings a,user_details b,master_setting ms  where a.type='CRB' and a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date, 'yyyymmdd')|| a.type" +
                                    "='" + URL + "' and a.user_id=b.vch_num and a.usertype_id=ms.master_id and a.user_type=ms.type";
                            }
                            else if (typename == "Individual")
                            {
                                mq = "select 'Individual'as master_name,a.no_of_invities as No_Of_Invitees,a.it_services,a.add_services,a.conf_roomid,a.meeting_type as Subject,a.conf_roomname as Room_No,a.client_id,a.client_unit_id," +
                                    "to_char(convert_tz(a.startdatetime,'+00:00','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldatetimeformat() + "') as Start_Time," +
                                    "to_char(convert_tz(a.enddatetime,'+00:00','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldatetimeformat() + "') as End_time," +
                                    "to_char(convert_tz(a.entdate,'+00:00','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldatetimeformat() + "') as Organised_Date,a.entby AS Organised_By,a.Agenda,b.user_id as Invitee,a.rec_id,a.vch_num,a.booking_id,a.vch_date,a.entby,a.entdate,a.editby," +
                                    "a.editdate,a.user_id as uid,b.user_id as uname,b.email,b.first_name,a.usertype_id,a.user_type from bookings a,user_details b where a.type='CRB' and " +
                                    "a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date, 'yyyymmdd')|| a.type='" + URL + "' and a.user_id=b.vch_num and a.user_type='" + typename + "'";
                            }
                            else if (typename == "Group")
                            {
                                mq = "select c.group_name as master_name,a.no_of_invities as No_Of_Invitees,a.it_services,a.add_services,a.conf_roomid,a.meeting_type as Subject,a.conf_roomname as Room_No,a.client_id,a.client_unit_id," +
                                    "to_char(convert_tz(a.startdatetime,'+00:00','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldatetimeformat() + "') as Start_Time," +
                                    "to_char(convert_tz(a.enddatetime,'+00:00','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldatetimeformat() + "') as End_time," +
                                    "to_char(convert_tz(a.entdate,'+00:00','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldatetimeformat() + "') as Organised_Date,a.entby AS Organised_By,a.Agenda,b.user_id as Invitee,a.rec_id,a.vch_num,a.booking_id,a.vch_date,a.entby,a.entdate,a.editby,a.editdate,a.user_id as uid,b.user_id as uname,b.email,b.first_name,a.usertype_id,a.user_type from bookings a,user_details b,group_details c where " +
                                    "a.type='CRB' and a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date, 'yyyymmdd')|| a.type='" + URL + "' and a.user_id=b.vch_num and a.usertype_id=c.group_id";
                            }
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    invite_meeting_status ims = new invite_meeting_status();
                                    ims.Usersid = dt.Rows[i]["uname"].ToString().Trim();
                                    invitees = invitees + ims.Usersid + ", ";
                                    ims.USsersname = dt.Rows[i]["first_name"].ToString().Trim();
                                    ims.Useremail = dt.Rows[i]["email"].ToString().Trim();
                                    string rec_id = dt.Rows[i]["uid"].ToString().Trim();
                                    ims.Rec_id = sgen.padlc(Convert.ToInt16(rec_id), 6);
                                    ims.groupid = dt.Rows[i]["usertype_id"].ToString().Trim();
                                    ims.user_type = dt.Rows[i]["user_type"].ToString().Trim();
                                    invitelist.Add(ims);
                                }
                                string utype = dt.Rows[0]["user_type"].ToString().Trim();
                                if (utype == "Individual")
                                {
                                    model[0].SelectedItems1 = new string[] { "1" };
                                    model[0].Col19 = invitees.Trim().TrimEnd(',');
                                }
                                else
                                {
                                    DataView dv1 = dt.DefaultView;
                                    DataTable dtdepts = dv1.ToTable(true, "master_name");
                                    foreach (DataRow r in dtdepts.Rows)
                                    {
                                        groupname = (string)r["master_name"];
                                        group = group + groupname + ", ";
                                    }

                                    model[0].Col19 = group.Trim().TrimEnd(',');
                                }
                                if (utype == "Group") model[0].SelectedItems1 = new string[] { "2" };
                                if (utype == "MDP") model[0].SelectedItems1 = new string[] { "3" };
                                if (utype == "MDG") model[0].SelectedItems1 = new string[] { "4" };
                                sgen.SetSession(MyGuid, "cr_invites", invitelist);
                                DateTime start = DateTime.ParseExact(dt.Rows[0]["Start_Time"].ToString(), sgen.Getdatetimeformat(), CultureInfo.InvariantCulture);
                                model[0].Col17 = start.ToString(sgen.Getdatetimeformat(), CultureInfo.InvariantCulture);
                                DateTime end = DateTime.ParseExact(dt.Rows[0]["End_time"].ToString(), sgen.Getdatetimeformat(), CultureInfo.InvariantCulture);
                                model[0].Col18 = end.ToString(sgen.Getdatetimeformat(), CultureInfo.InvariantCulture);
                                string vchnum = dt.Rows[0]["vch_num"].ToString().Trim();
                                model[0].Col20 = dt.Rows[0]["No_Of_Invitees"].ToString().Trim();
                                model[0].Col21 = dt.Rows[0]["Subject"].ToString().Trim();
                                String[] L2 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["conf_roomid"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems2 = L2;
                                string hospservice = Convert.ToString(dt.Rows[0]["add_services"]);
                                string agenda = Convert.ToString(dt.Rows[0]["Agenda"]);
                                if (agenda == "0") model[0].Col22 = "";
                                if (!agenda.Equals("0")) model[0].Col22 = agenda;
                                string itservice = Convert.ToString(dt.Rows[0]["it_services"]);
                                String[] L3 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["it_services"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems3 = L3;
                                //ScriptManager.RegisterStartupScript(this, this.GetType(), "abcd", "filldropdown('" + hospservice + "','ddl_hospitality');filldropdown('" + itservice + "','ddl_it');", true);
                                model = getedit(model, dt, URL);
                                //bindagenda_att_rpt();
                                DataTable dtf = new DataTable();
                                dtf = sgen.getdata(userCode, "select client_id||client_unit_id||vch_num||to_char(vch_date,'yyyymmdd')||type as fstr, rec_id,file_name,file_path,col1,col2,description,Col3 from file_tab where vch_num='" + dtt.Rows[0]["vch_num"].ToString() + "' and type in " +
                                    "('CRB') and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "' and col1='CRB'");
                                List<Tmodelmain> ltmf = new List<Tmodelmain>();
                                string des = "", title = "", f_recid = "";
                                if (dtf.Rows.Count > 0)
                                {
                                    foreach (DataRow drf in dtf.Rows)
                                    {
                                        Tmodelmain tmf = new Tmodelmain();
                                        tmf.Col4 = drf["file_path"].ToString();
                                        tmf.Col1 = drf["file_name"].ToString();
                                        tmf.Col2 = drf["col1"].ToString();
                                        tmf.Col3 = drf["rec_id"].ToString();
                                        tmf.Col97 = drf["rec_id"].ToString();
                                        tmf.Col5 = drf["description"].ToString();
                                        des = drf["description"].ToString();
                                        title = drf["Col3"].ToString();
                                        tmf.Col6 = drf["col3"].ToString();
                                        tmf.Col7 = drf["col2"].ToString();
                                        ltmf.Add(tmf);
                                    }
                                }
                                model[0].LTM1 = ltmf;
                            }
                            #endregion
                            break;
                        case "INDIVIDUAL":
                            #region  individual list
                            mq = "select user_id,email,first_name,vch_num,client_id,client_unit_id,ent_by,ent_date from user_details " +
                                "where client_id||client_unit_id||vch_num||to_char(vch_date, 'yyyymmdd')|| type in ('" + URL + "')";

                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    invite_meeting_status ims = new invite_meeting_status();
                                    ims.Usersid = dt.Rows[i]["user_id"].ToString().Trim();
                                    invitees = invitees + ims.Usersid + ", ";
                                    ims.USsersname = dt.Rows[i]["first_name"].ToString().Trim();
                                    ims.Useremail = dt.Rows[i]["email"].ToString().Trim();
                                    string rec_id = dt.Rows[i]["vch_num"].ToString().Trim();
                                    ims.Rec_id = rec_id;
                                    ims.groupid = "0";
                                    ims.user_type = "Individual";
                                    ims.group = "Individual";
                                    invitelist.Add(ims);
                                }
                                model[0].Col19 = invitees.Trim().TrimEnd(',');
                                model[0].Col20 = Convert.ToString(dt.Rows.Count);
                            }
                            sgen.SetSession(MyGuid, "cr_invites", invitelist);
                            #endregion
                            break;
                        case "GROUP":
                            #region grouplist
                            mq1 = "select group_id,group_name from group_details where " +
                                "client_id||client_unit_id||group_id||to_char(vch_date, 'yyyymmdd')|| type in ('" + URL + "')";
                            DataTable dtg = sgen.getdata(userCode, mq1);
                            if (dtg.Rows.Count > 0)
                            {
                                foreach (DataRow r in dtg.Rows)
                                {
                                    groupname = (string)r["group_name"];
                                    grpid = Convert.ToString(r["group_id"]);
                                    group = group + groupname + ", ";
                                    groupid = groupid + grpid + ",";
                                }
                                groupid = groupid.TrimEnd(',');
                                mq = "SELECT ud.user_id,ud.email,ud.first_name,ug.group_id,gd.group_name,ud.VCH_NUM FROM usergroup ug " +
                                    "inner join user_details ud on ug.user_id=ud.vch_num inner JOIN group_details gd on " +
                                    "ug.group_id=gd.GROUP_ID and ug.group_id in (" + groupid + ")";
                                dt = new DataTable();
                                dt = sgen.getdata(userCode, mq);
                                if (dt.Rows.Count > 0)
                                {
                                    for (int i = 0; i < dt.Rows.Count; i++)
                                    {
                                        invite_meeting_status ims = new invite_meeting_status();
                                        ims.Usersid = dt.Rows[i]["user_id"].ToString().Trim();
                                        invitees = invitees + ims.Usersid + ", ";
                                        ims.USsersname = dt.Rows[i]["first_name"].ToString().Trim();
                                        ims.Useremail = dt.Rows[i]["email"].ToString().Trim();
                                        string rec_id = dt.Rows[i]["vch_num"].ToString().Trim();
                                        ims.Rec_id = rec_id;
                                        ims.groupid = dt.Rows[i]["group_id"].ToString().Trim();
                                        ims.user_type = "Group";
                                        ims.group = dt.Rows[i]["group_name"].ToString().Trim();
                                        invitelist.Add(ims);
                                    }

                                }
                                model[0].Col19 = group.Trim().TrimEnd(',');
                                model[0].Col20 = Convert.ToString(dt.Rows.Count);
                                sgen.SetSession(MyGuid, "cr_invites", invitelist);
                            }
                            #endregion
                            break;
                        case "DEPARTMENT":
                            #region dept
                            mq1 = "select master_id,master_name from master_setting where client_id||client_unit_id||master_id||to_char(vch_date, 'yyyymmdd')|| type in ('" + URL + "')";
                            dtg = sgen.getdata(userCode, mq1);
                            if (dtg.Rows.Count > 0)
                            {
                                foreach (DataRow r in dtg.Rows)
                                {
                                    groupname = (string)r["master_name"];
                                    grpid = Convert.ToString(r["master_id"]);
                                    group = group + groupname + ", ";
                                    groupid = groupid + grpid + ",";
                                }
                                group = group.Trim().TrimEnd(',');
                                groupid = groupid.TrimEnd(',');

                                mq = "select ud.user_id,ud.email,ud.first_name,ud.department,ms.master_name,ud.vch_num from user_details" +
                                    " ud join master_setting ms on ud.department=ms.master_id where ud.department in (" + groupid + ") and ud.type='CPR' and ms.type='MDP'";

                                //mq = "select user_id,email,first_name,department,rec_id from user_details where department in (" + groupid + ") and type='CPR'";
                                dt = new DataTable();
                                dt = sgen.getdata(userCode, mq);
                                if (dt.Rows.Count > 0)
                                {

                                    for (int i = 0; i < dt.Rows.Count; i++)
                                    {

                                        invite_meeting_status ims = new invite_meeting_status();
                                        ims.Usersid = dt.Rows[i]["user_id"].ToString().Trim();
                                        invitees = invitees + ims.Usersid + ", ";
                                        ims.USsersname = dt.Rows[i]["first_name"].ToString().Trim();
                                        ims.Useremail = dt.Rows[i]["email"].ToString().Trim();
                                        string rec_id = dt.Rows[i]["vch_num"].ToString().Trim();
                                        ims.Rec_id = rec_id;
                                        ims.groupid = dt.Rows[i]["department"].ToString().Trim();
                                        ims.user_type = "MDP";
                                        ims.group = dt.Rows[i]["master_name"].ToString().Trim();
                                        invitelist.Add(ims);

                                    }
                                    model[0].Col19 = group;
                                    model[0].Col20 = Convert.ToString(dt.Rows.Count);
                                }
                                sgen.SetSession(MyGuid, "cr_invites", invitelist);
                            }
                            #endregion
                            break;
                        case "DESIGNATION":
                            #region desig
                            mq1 = "select master_id,master_name from master_setting where client_id||client_unit_id||master_id||to_char(vch_date, 'yyyymmdd')||type in ('" + URL + "')";
                            dtg = sgen.getdata(userCode, mq1);
                            if (dtg.Rows.Count > 0)
                            {
                                foreach (DataRow r in dtg.Rows)
                                {
                                    groupname = (string)r["master_name"];
                                    grpid = Convert.ToString(r["master_id"]);
                                    group = group + groupname + ", ";
                                    groupid = groupid + grpid + ",";
                                }
                                groupid = groupid.TrimEnd(',');
                                mq = "select ud.user_id,ud.email,ud.first_name,ud.designation,ms.master_name,ud.vch_num from user_details ud join master_setting ms on ud.designation=ms.master_id where ud.designation in (" + groupid + ") and ud.type='CPR' and ms.type='MDG'";
                                dt = new DataTable();
                                dt = sgen.getdata(userCode, mq);
                                if (dt.Rows.Count > 0)
                                {
                                    for (int i = 0; i < dt.Rows.Count; i++)
                                    {
                                        invite_meeting_status ims = new invite_meeting_status();
                                        ims.Usersid = dt.Rows[i]["user_id"].ToString().Trim();
                                        invitees = invitees + ims.Usersid + ", ";
                                        ims.USsersname = dt.Rows[i]["first_name"].ToString().Trim();
                                        ims.Useremail = dt.Rows[i]["email"].ToString().Trim();
                                        string rec_id = dt.Rows[i]["vch_num"].ToString().Trim();
                                        ims.Rec_id = rec_id;
                                        ims.groupid = dt.Rows[i]["designation"].ToString().Trim();
                                        ims.user_type = "MDG";
                                        ims.group = dt.Rows[i]["master_name"].ToString().Trim();
                                        invitelist.Add(ims);
                                    }
                                    model[0].Col19 = group.Trim().TrimEnd(',');
                                    model[0].Col20 = Convert.ToString(dt.Rows.Count);
                                }
                                sgen.SetSession(MyGuid, "cr_invites", invitelist);
                            }
                            #endregion
                            break;
                        case "ADDMORE":
                            #region for addmore list
                            dt = new DataTable();
                            mq = "select user_id,email,first_name,vch_num,client_id,client_unit_id,ent_by,ent_date from user_details " +
                                "where client_id||client_unit_id||vch_num||to_char(vch_date, 'yyyymmdd'), type) in ('" + URL + "')";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    invite_meeting_status ims = new invite_meeting_status();
                                    ims.Usersid = dt.Rows[i]["user_id"].ToString().Trim();
                                    invitees = invitees + ims.Usersid + ", ";
                                    //invitee_list = invitees + ims.Usersid + ","; // for label
                                    ims.USsersname = dt.Rows[i]["first_name"].ToString().Trim();
                                    ims.Useremail = dt.Rows[i]["email"].ToString().Trim();
                                    string rec_id = dt.Rows[i]["vch_num"].ToString().Trim();
                                    ims.Rec_id = rec_id;
                                    invitelist.Add(ims);
                                }
                                var list = sgen.GetSession(MyGuid, "cr_invites") as List<invite_meeting_status>;
                                sgen.SetSession(MyGuid, "cr_invites", list.Concat(invitelist).ToList());

                                model[0].Col19 = model[0].Col19 + ',' + invitees.Trim().TrimEnd(',');
                                model[0].Col20 = (Convert.ToInt32(model[0].Col20) + Convert.ToInt32(dt.Rows.Count)).ToString();
                            }
                            #endregion
                            break;

                        case "ADDMOREGROUP":
                            #region addmoregroup
                            mq1 = "select group_id,group_name from group_details where client_id||client_unit_id||group_id||to_char(vch_date, 'yyyymmdd')|| type in ('" + URL + "')";
                            dtg = sgen.getdata(userCode, mq1);
                            if (dtg.Rows.Count > 0)
                            {
                                foreach (DataRow r in dtg.Rows)
                                {
                                    groupname = (string)r["group_name"];
                                    grpid = Convert.ToString(r["group_id"]);
                                    group = group + groupname + ", ";
                                    groupid = groupid + grpid + ",";
                                }
                                groupid = groupid.TrimEnd(',');
                                mq = "SELECT ud.user_id,ud.email,ud.first_name,ug.group_id,gd.group_name,ud.vch_num FROM usergroup ug" +
                                    " inner join user_details ud on ug.user_id=ud.vch_num inner JOIN group_details gd on " +
                                    "ug.group_id=gd.GROUP_ID and ug.group_id in (" + groupid + ")";
                                dt = new DataTable();
                                dt = sgen.getdata(userCode, mq);
                                if (dt.Rows.Count > 0)
                                {
                                    for (int i = 0; i < dt.Rows.Count; i++)
                                    {
                                        invite_meeting_status ims = new invite_meeting_status();
                                        ims.Usersid = dt.Rows[i]["user_id"].ToString().Trim();
                                        invitees = invitees + ims.Usersid + ", ";
                                        ims.USsersname = dt.Rows[i]["first_name"].ToString().Trim();
                                        ims.Useremail = dt.Rows[i]["email"].ToString().Trim();
                                        string rec_id = dt.Rows[i]["vch_num"].ToString().Trim();
                                        ims.Rec_id = rec_id;
                                        ims.groupid = dt.Rows[i]["group_id"].ToString().Trim();
                                        ims.user_type = "Group";
                                        ims.group = dt.Rows[i]["group_name"].ToString().Trim();
                                        invitelist.Add(ims);
                                    }
                                }
                                var list = sgen.GetSession(MyGuid, "cr_invites") as List<invite_meeting_status>;
                                sgen.SetSession(MyGuid, "cr_invites", list.Concat(invitelist).ToList());
                                model[0].Col19 = model[0].Col19 + ',' + group.Trim().TrimEnd(',');
                                model[0].Col20 = (Convert.ToInt32(model[0].Col20) + Convert.ToInt32(dt.Rows.Count)).ToString();
                            }
                            #endregion
                            break;
                        case "ADDMOREDEPT":
                            #region ADDMOREdept
                            mq1 = "select master_id,master_name from master_setting where client_id||client_unit_id||master_id||TO_CHAR(vch_date, 'yyyymmdd')||type in ('" + URL + "')";
                            dtg = sgen.getdata(userCode, mq1);
                            if (dtg.Rows.Count > 0)
                            {
                                foreach (DataRow r in dtg.Rows)
                                {
                                    groupname = (string)r["master_name"];
                                    grpid = Convert.ToString(r["master_id"]);
                                    group = group + groupname + ", ";
                                    groupid = groupid + grpid + ",";
                                }
                                group = group.Trim().TrimEnd(',');
                                groupid = groupid.TrimEnd(',');
                                mq = "select ud.user_id,ud.email,ud.first_name,ud.department,ms.master_name,ud.vch_num from " +
                                    "user_details ud join master_setting ms on ud.department=ms.master_id where ud.department in (" + groupid + ") and ud.type='CPR' and ms.type='MDP'";
                                dt = new DataTable();
                                dt = sgen.getdata(userCode, mq);
                                if (dt.Rows.Count > 0)
                                {
                                    for (int i = 0; i < dt.Rows.Count; i++)
                                    {
                                        invite_meeting_status ims = new invite_meeting_status();
                                        ims.Usersid = dt.Rows[i]["user_id"].ToString().Trim();
                                        invitees = invitees + ims.Usersid + ", ";
                                        ims.USsersname = dt.Rows[i]["first_name"].ToString().Trim();
                                        ims.Useremail = dt.Rows[i]["email"].ToString().Trim();
                                        string rec_id = dt.Rows[i]["vch_num"].ToString().Trim();
                                        ims.Rec_id = rec_id;
                                        ims.groupid = dt.Rows[i]["department"].ToString().Trim();
                                        ims.user_type = "MDP";
                                        ims.group = dt.Rows[i]["master_name"].ToString().Trim();
                                        invitelist.Add(ims);
                                    }
                                }
                                var list = sgen.GetSession(MyGuid, "cr_invites") as List<invite_meeting_status>;
                                sgen.SetSession(MyGuid, "cr_invites", list.Concat(invitelist).ToList());
                                model[0].Col19 = model[0].Col19 + ',' + group.Trim().TrimEnd(',');
                                model[0].Col20 = (Convert.ToInt32(model[0].Col20) + Convert.ToInt32(dt.Rows.Count)).ToString();
                            }

                            #endregion
                            break;
                        case "ADDMOREDESG":
                            #region ADDMOREDESG
                            try
                            {
                                mq1 = "select master_id,master_name from master_setting where client_id||client_unit_id||master_id||to_char(vch_date, 'yyyymmdd')|| type in ('" + URL + "')";
                                dtg = sgen.getdata(userCode, mq1);
                                if (dtg.Rows.Count > 0)
                                {
                                    foreach (DataRow r in dtg.Rows)
                                    {
                                        groupname = (string)r["master_name"];
                                        grpid = Convert.ToString(r["master_id"]);
                                        group = group + groupname + ", ";
                                        groupid = groupid + grpid + ",";
                                    }
                                    groupid = groupid.TrimEnd(',');
                                    mq = "select ud.user_id,ud.email,ud.first_name,ud.designation,ms.master_name,ud.vch_num from user_details ud " +
                                        " inner join master_setting ms on ud.designation=ms.master_id where ud.designation in (" + groupid + ") " +
                                        "and ud.type='CPR' and ms.type='MDG'";
                                    dt = new DataTable();
                                    dt = sgen.getdata(userCode, mq);
                                    if (dt.Rows.Count > 0)
                                    {
                                        for (int i = 0; i < dt.Rows.Count; i++)
                                        {
                                            invite_meeting_status ims = new invite_meeting_status();
                                            ims.Usersid = dt.Rows[i]["user_id"].ToString().Trim();
                                            invitees = invitees + ims.Usersid + ", ";
                                            ims.USsersname = dt.Rows[i]["first_name"].ToString().Trim();
                                            ims.Useremail = dt.Rows[i]["email"].ToString().Trim();
                                            string rec_id = dt.Rows[i]["vch_num"].ToString().Trim();
                                            ims.Rec_id = sgen.padlc(Convert.ToInt16(rec_id), 6);
                                            ims.groupid = dt.Rows[i]["designation"].ToString().Trim();
                                            ims.user_type = "MDG";
                                            ims.group = dt.Rows[i]["master_name"].ToString().Trim();
                                            invitelist.Add(ims);
                                        }
                                    }
                                    var list = sgen.GetSession(MyGuid, "cr_invites") as List<invite_meeting_status>;
                                    sgen.SetSession(MyGuid, "cr_invites", list.Concat(invitelist).ToList());
                                    model[0].Col19 = model[0].Col19 + ',' + group.Trim().TrimEnd(',');
                                    model[0].Col20 = (Convert.ToInt32(model[0].Col20) + Convert.ToInt32(dt.Rows.Count)).ToString();
                                }
                            }
                            catch (Exception ex)
                            {
                                sgen.showmsg(1, ex.Message.ToString(), 0);
                            }
                            #endregion
                            break;
                    }
                    break;
                #endregion
                #region meet_config
                case "meet_config":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            mq = "select master_id,master_name,type,master_type,master_entby,master_entdate,master_status,client_id,client_unit_id,vch_num," +
                                "group_concat(content) as content from master_setting where client_id || client_unit_id || vch_num || to_char(vch_date, 'yyyymmdd') || type " +
                                "= '" + URL + "' group by master_id,master_name,type,master_type,master_entby,master_entdate,master_status,client_id,client_unit_id," +
                                "vch_num";

                            DataTable dtreg = new DataTable();
                            dtreg = sgen.getdata(userCode, mq);
                            TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.username(userCode);
                            //else TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.typeof_service(userCode, unitid_mst);
                            if (dtreg.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "EDMODE", "Y");
                                model[0].Col1 = dtreg.Rows[0]["client_id"].ToString();
                                model[0].Col2 = dtreg.Rows[0]["client_unit_id"].ToString();
                                model[0].Col3 = dtreg.Rows[0]["master_entby"].ToString();
                                model[0].Col4 = dtreg.Rows[0]["master_entdate"].ToString();
                                model[0].Col8 = "client_id||client_unit_id||vch_num|| to_char(vch_date, 'yyyymmdd')|| type = '" + URL + "'";
                                model[0].Col13 = "Update";
                                model[0].Col100 = "Update & New";
                                model[0].Col121 = "U";
                                model[0].Col122 = "<u>U</u>pdate";
                                model[0].Col123 = "Update & Ne<u>w</u>";
                                model[0].Col16 = dtreg.Rows[0]["vch_num"].ToString();
                                String[] L1 = System.String.Join(",", dtreg.Rows.OfType<DataRow>().Select(r => r["content"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems1 = L1;
                                model[0].Col17 = dtreg.Rows[0]["master_name"].ToString();
                            }
                            else
                            {
                                sgen.showmsg(1, "No Data Found", 1);
                            }
                            break;
                        case "SERVICES":
                            mq = "select master_id,master_name,type,master_type,master_entby,master_entdate,master_status,client_id,client_unit_id,vch_num,classid,sectionid " +
                                "from master_setting where type= 'CRS' and client_id||client_unit_id||vch_num||to_char(vch_date, 'yyyymmdd')||type='" + URL + "'";
                            dtreg = new DataTable();
                            dtreg = sgen.getdata(userCode, mq);
                            TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.typeof_service(userCode, unitid_mst);
                            if (dtreg.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "EDMODE", "Y");
                                model[0].Col1 = dtreg.Rows[0]["client_id"].ToString();
                                model[0].Col2 = dtreg.Rows[0]["client_unit_id"].ToString();
                                model[0].Col3 = dtreg.Rows[0]["master_entby"].ToString();
                                model[0].Col4 = dtreg.Rows[0]["master_entdate"].ToString();
                                model[0].Col8 = "client_id||client_unit_id||vch_num|| to_char(vch_date, 'yyyymmdd')|| type = '" + URL + "'";
                                model[0].Col13 = "Update";
                                model[0].Col100 = "Update & New";
                                model[0].Col121 = "U";
                                model[0].Col122 = "<u>U</u>pdate";
                                model[0].Col123 = "Update & Ne<u>w</u>";
                                model[0].Col16 = dtreg.Rows[0]["vch_num"].ToString();
                                String[] L1 = System.String.Join(",", dtreg.Rows.OfType<DataRow>().Select(r => r["classid"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems1 = L1;
                                model[0].Col17 = dtreg.Rows[0]["master_name"].ToString();
                            }
                            else
                            {
                                sgen.showmsg(1, "No Data Found", 1);
                            }
                            break;
                    }
                    break;
                #endregion
                #region s_loc
                case "s_loc":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            mq = "select ug.client_id||ug.client_unit_id||ug.vch_num||to_char(ug.vch_date,'yyyymmdd')||ug.type as fstr" +
                                ",ug.col3,ug.COL4 as google_address,ug.COL8 as latlong,ug.col2,ug.client_id,ug.client_unit_id,ug.ent_by,ug.rec_id,ug.ent_date,ug.vch_num,to_char(ug.vch_date,'" + sgen.Getsqldateformat() + "'),ug.col3 as Rate from " +
                                "enx_tab2 ug where ug.client_id||ug.client_unit_id||ug.vch_num||to_char(ug.vch_date,'yyyymmdd')||ug.type = '" + URL + "'";
                            DataTable dtreg = new DataTable();
                            dtreg = sgen.getdata(userCode, mq);
                            if (dtreg.Rows.Count > 0)
                            {
                                model = getedit(model, dtreg, URL);
                                model[0].Col16 = dtreg.Rows[0]["vch_num"].ToString();
                                model[0].Col17 = dtreg.Rows[0]["col3"].ToString();
                                model[0].Col18 = dtreg.Rows[0]["col2"].ToString();
                                model[0].Col77 = dtreg.Rows[0]["google_address"].ToString();
                                model[0].Col76 = dtreg.Rows[0]["latlong"].ToString();
                                if (model[0].Col76 == null) ViewBag.scripCall = ViewBag.scripCall + "initialize(28.477450,77.034138);";
                                else ViewBag.scripCall = ViewBag.scripCall + "initialize(" + model[0].Col76 + ");";
                            }
                            else
                            {
                                sgen.showmsg(1, "No Data Found", 1);
                            }
                            break;
                    }
                    break;
                #endregion
                #region site link
                case "site_link":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            mq = "select ug.client_id||ug.client_unit_id||ug.vch_num||to_char(ug.vch_date,'yyyymmdd')||ug.type as fstr,ug.vch_num as doc_no," +
                         "to_char(ug.vch_date, '" + sgen.Getsqldateformat() + "') as doc_date,ug.client_id,ug.client_unit_id,ug.ent_by,ug.rec_id,ug.ent_date,ug.vch_num,ug.col5 as site_code,sl.col3 as site_name,ug.col11 as remk,sl.col2 as site_address,ug.col3 as Remark" +
                         ",(emp.FIRST_NAME || ' ' || REPLACE(emp.MIDDLE_NAME, '0', '') || ' ' || REPLACE(emp.LAST_NAME, '0', '')) as Emp_Name," +
                         "emp.emp_code as Emp_Code,nvl(dg.master_name, '-') as designation,emp.contact_no as ContactNo,nvl(dp.master_name, '-') as department from enx_tab2 ug inner " +
                         "join enx_tab2 sl on sl.vch_num = ug.col5 and sl.type = 'SLC' and ug.client_unit_id = sl.client_unit_id inner join emp_master emp" +
                         " on emp.emp_code = ug.col6 and emp.client_unit_id = ug.client_unit_id and emp.type = 'EMP' left join master_setting dp on dp.master_id " +
                         "= emp.emp_dept and dp.type = 'MDP' and find_in_set(dp.client_unit_id,'" + unitid_mst + "')= 1 left join master_setting dg on dg.master_id = " +
                         "emp.emp_desig and dg.type = 'MDG' and find_in_set(dg.client_unit_id, '" + unitid_mst + "') = 1 where ug.client_id||ug.client_unit_id||ug.vch_num||to_char(ug.vch_date,'yyyymmdd')||ug.type = '" + URL + "'";
                            DataTable dtreg = new DataTable();
                            dtreg = sgen.getdata(userCode, mq);
                            if (dtreg.Rows.Count > 0)
                            {
                                model = getedit(model, dtreg, URL);
                                model[0].Col16 = dtreg.Rows[0]["doc_no"].ToString();
                                model[0].Col19 = dtreg.Rows[0]["site_code"].ToString();
                                model[0].Col17 = dtreg.Rows[0]["site_name"].ToString();
                                model[0].Col18 = dtreg.Rows[0]["site_address"].ToString();
                                model[0].Col20 = dtreg.Rows[0]["Remark"].ToString();
                                model[0].dt1 = model[0].dt1.Clone();
                                for (int i = 0; i < dtreg.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["select_"] = dtreg.Rows[i]["fstr"].ToString();
                                    dr["SNo"] = i + 1;
                                    dr["Employee_code"] = dtreg.Rows[i]["Emp_Code"].ToString();
                                    dr["Employee_name"] = dtreg.Rows[i]["Emp_Name"].ToString();
                                    dr["ContactNo"] = dtreg.Rows[i]["ContactNo"].ToString();
                                    dr["Department"] = dtreg.Rows[i]["department"].ToString();
                                    dr["Designation"] = dtreg.Rows[i]["designation"].ToString();
                                    dr["Remark"] = dtreg.Rows[i]["remk"].ToString();
                                    model[0].dt1.Rows.Add(dr);
                                }
                                model[0].dt1.AcceptChanges();
                            }
                            else
                            {
                                sgen.showmsg(1, "No Data Found", 1);
                            }
                            break;
                        case "SITE":
                            mq = "select ug.client_id||ug.client_unit_id||ug.vch_num||to_char(ug.vch_date,'yyyymmdd')||ug.type as fstr,ug.vch_num as doc_no," +
                                "to_char(ug.vch_date, '" + sgen.Getsqldateformat() + "') as doc_date,ug.col3 as site_name,ug.col2 as site_address from enx_tab2" +
                                " ug where ug.client_id||ug.client_unit_id||ug.vch_num||to_char(ug.vch_date,'yyyymmdd')||ug.type = '" + URL + "'";
                            dtt = new DataTable();
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                model[0].Col19 = dtt.Rows[0]["doc_no"].ToString();
                                model[0].Col17 = dtt.Rows[0]["site_name"].ToString();
                                model[0].Col18 = dtt.Rows[0]["site_address"].ToString();
                            }
                            else
                            {
                                sgen.showmsg(1, "No Data Found", 1);
                            }
                            break;
                        case "EMP":
                            mq = "select (emp.client_id||emp.client_unit_id||emp.vch_num||to_char(emp.vch_date,'yyyymmdd')||emp.type) as fstr,emp.emp_code as Emp_Code," +
                 "emp.old_empcode Old_EmpCode,(emp.FIRST_NAME|| ' '|| REPLACE(emp.MIDDLE_NAME,'0','')|| ' '||REPLACE(emp.LAST_NAME,'0','')) as Emp_Name," +
                 "nvl(dg.master_name,'-') as designation,nvl(dp.master_name,'-') as department,emp.f_name as Father_Name,emp.contact_no as ContactNo,emp.gender as Gender, " +
                 "to_char(emp.st_dt,'" + sgen.Getsqldateformat() + "') as Date_Of_Joining" +
                 " from emp_master emp left join master_setting dp on dp.master_id=emp.emp_dept and dp.type='MDP' and find_in_set(dp.client_unit_id,'" + unitid_mst + "')=1 " +
                 "left join master_setting dg on dg.master_id = emp.emp_desig and dg.type = 'MDG' and find_in_set(dg.client_unit_id,'" + unitid_mst + "')= 1 WHERE" +
                 " (emp.client_id||emp.client_unit_id||emp.vch_num||to_char(emp.vch_date,'yyyymmdd')||emp.type) in ('" + URL + "')";

                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                if (model[0].dt1.Rows[0]["Employee_code"].ToString().Trim().Equals("-") || model[0].dt1.Rows[0]["Employee_code"].ToString().Trim().Equals("")) { model[0].dt1.Rows.RemoveAt(0); }
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["select_"] = dt.Rows[i]["fstr"].ToString();
                                    dr["SNo"] = i + 1;
                                    dr["Employee_code"] = dt.Rows[i]["Emp_Code"].ToString();
                                    dr["Employee_name"] = dt.Rows[i]["Emp_Name"].ToString();
                                    dr["ContactNo"] = dt.Rows[i]["ContactNo"].ToString();
                                    dr["Department"] = dt.Rows[i]["department"].ToString();
                                    dr["Designation"] = dt.Rows[i]["designation"].ToString();
                                    model[0].dt1.Rows.Add(dr);
                                }
                                model[0].dt1.AcceptChanges();
                            }
                            break;
                    }
                    break;
                #endregion
                #region asst_emp
                case "asst_alc":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            if (sgen.GetSession(MyGuid, "menu_id").ToString() == "33006.1")
                            {
                                mq = "select ug.client_id||ug.client_unit_id||ug.vch_num||to_char(ug.vch_date,'yyyymmdd')||ug.type as fstr,ug.vch_num as doc_no," +
                             "to_char(ug.vch_date, '" + sgen.Getsqldateformat() + "') as doc_date,to_char(ug.date1, '" + sgen.Getsqldateformat() + "') as exp_date,ug.client_id,ug.client_unit_id,ug.ent_by,ug.rec_id,ug.col10,ug.ent_date,ug.col7 as atype" +
                             ",ug.vch_num,ug.col5 as serial_no,ug.col6 as asset_name,ug.col3 as remark,ug.col8 as exp_value,ug.col3 as Remark" +
                             ",(emp.FIRST_NAME || ' ' || REPLACE(emp.MIDDLE_NAME, '0', '') || ' ' || REPLACE(emp.LAST_NAME, '0', '')) as Emp_Name," +
                             "emp.emp_code as Emp_Code,nvl(dg.master_name, '-') as designation,to_char(emp.st_dt,'" + sgen.Getsqldateformat() + "') as Date_Of_Joining,emp.contact_no as ContactNo,nvl(dp.master_name, '-') as department," +
                             " to_char(ug.date2,'" + sgen.Getsqldatetimeformat() + "') date2 from enx_tab2 ug inner join emp_master emp" +
                             " on emp.emp_code = ug.col2 and emp.client_unit_id = ug.client_unit_id and emp.type = 'EMP' left join master_setting dp on dp.master_id " +
                             "= emp.emp_dept and dp.type = 'MDP' and find_in_set(dp.client_unit_id,'" + unitid_mst + "')= 1 left join master_setting dg on dg.master_id = " +
                             "emp.emp_desig and dg.type = 'MDG' and find_in_set(dg.client_unit_id, '" + unitid_mst + "') = 1 where ug.client_id||ug.client_unit_id||ug.vch_num||to_char(ug.vch_date,'yyyymmdd')||ug.type = '" + URL + "'";
                            }
                            if (sgen.GetSession(MyGuid, "menu_id").ToString() == "42003.2")
                            {
                                mq = "select to_char(ug.date2,'" + sgen.Getsqldatetimeformat() + "') date2 ,ug.client_id||ug.client_unit_id||ug.vch_num||to_char(ug.vch_date,'yyyymmdd')||ug.type as fstr,ug.vch_num as doc_no," +
                                                            "to_char(ug.vch_date, '" + sgen.Getsqldateformat() + "') as doc_date,to_char(ug.date1, '" + sgen.Getsqldateformat() + "') as exp_date,ug.client_id,ug.client_unit_id,ug.ent_by,ug.rec_id,ug.col10,ug.ent_date,ug.col7 as atype" +
                                                            ",ug.vch_num,ug.col5 as serial_no,ug.col6 as asset_name,ug.col3 as remark,ug.col8 as exp_value,ug.col3 as Remark" +
                                                            ",(emp.FIRST_NAME || ' ' || REPLACE(emp.MIDDLE_NAME, '0', '') || ' ' || REPLACE(emp.LAST_NAME, '0', '')) as Emp_Name," +
                                                            "emp.vch_num as Emp_Code,nvl(dg.master_name, '-') as designation,'' as Date_Of_Joining,nvl(dp.master_name, '-') as department from enx_tab2 ug inner join user_details emp" +
                                                            " on emp.vch_num = ug.col2 and emp.type = 'CPR' left join master_setting dp on dp.master_id " +
                                                            "= emp.department and dp.type = 'MDP' and find_in_set(dp.client_unit_id,'" + unitid_mst + "')= 1 left join master_setting dg on dg.master_id = " +
                                                            "emp.designation and dg.type = 'MDG' and find_in_set(dg.client_unit_id, '" + unitid_mst + "') = 1 where ug.client_id||ug.client_unit_id||ug.vch_num||to_char(ug.vch_date,'yyyymmdd')||ug.type = '" + URL + "'";
                            }

                            DataTable dtreg = new DataTable();
                            dtreg = sgen.getdata(userCode, mq);
                            TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.asset_type(userCode, unitid_mst);
                            if (dtreg.Rows.Count > 0)
                            {
                                model = getedit(model, dtreg, URL);
                                String[] L1 = System.String.Join(",", dtreg.Rows.OfType<DataRow>().Select(r => r["atype"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems1 = L1;
                                model[0].Col16 = dtreg.Rows[0]["doc_no"].ToString();
                                model[0].Col17 = dtreg.Rows[0]["doc_date"].ToString();
                                model[0].Col18 = dtreg.Rows[0]["Emp_Name"].ToString();
                                model[0].Col19 = dtreg.Rows[0]["Emp_Code"].ToString();
                                model[0].Col20 = dtreg.Rows[0]["department"].ToString();
                                model[0].Col21 = dtreg.Rows[0]["designation"].ToString();
                                model[0].Col22 = dtreg.Rows[0]["Date_Of_Joining"].ToString();
                                model[0].Col23 = dtreg.Rows[0]["serial_no"].ToString();
                                model[0].Col24 = dtreg.Rows[0]["asset_name"].ToString();
                                model[0].Col25 = dtreg.Rows[0]["exp_value"].ToString();
                                model[0].Col26 = dtreg.Rows[0]["exp_date"].ToString();
                                model[0].Col27 = dtreg.Rows[0]["Remark"].ToString();
                                model[0].Col28 = dtreg.Rows[0]["col10"].ToString();
                                model[0].Col30 = dtreg.Rows[0]["date2"].ToString();
                            }
                            else

                            {
                                sgen.showmsg(1, "No Data Found", 1);
                            }
                            break;
                        case "EMP":
                            if (URL.Contains("EMP"))
                            {
                                mq = "select (emp.client_id||emp.client_unit_id||emp.vch_num||to_char(emp.vch_date,'yyyymmdd')||emp.type) as fstr,emp.emp_code as Emp_Code," +
                     "emp.old_empcode Old_EmpCode,(emp.FIRST_NAME|| ' '|| REPLACE(emp.MIDDLE_NAME,'0','')|| ' '||REPLACE(emp.LAST_NAME,'0','')) as Emp_Name," +
                     "nvl(dg.master_name,'-') as designation,nvl(dp.master_name,'-') as department,emp.f_name as Father_Name,emp.contact_no as ContactNo,emp.gender as Gender, " +
                     "to_char(emp.st_dt,'" + sgen.Getsqldateformat() + "') as Date_Of_Joining" +
                     " from emp_master emp left join master_setting dp on dp.master_id=emp.emp_dept and dp.type='MDP' and find_in_set(dp.client_unit_id,'" + unitid_mst + "')=1 " +
                     "left join master_setting dg on dg.master_id = emp.emp_desig and dg.type = 'MDG' and find_in_set(dg.client_unit_id,'" + unitid_mst + "')= 1 WHERE" +
                     " (emp.client_id||emp.client_unit_id||emp.vch_num||to_char(emp.vch_date,'yyyymmdd')||emp.type) in ('" + URL + "')";
                            }
                            else
                            {
                                mq = "select '' Date_Of_Joining, ud.vch_num as Emp_Code,ud.first_name||' '||replace(ud.middle_name,'0','')||''||replace(ud.last_name,'0','') as Emp_Name,nvl(dg.master_name,'-') as designation,nvl(dp.master_name,'-') as department" +
                                     " from user_details ud left join master_setting dp on dp.master_id = ud.department and dp.type = 'MDP' and find_in_set(dp.client_unit_id,'" + unitid_mst + "')= 1 " +
                                     "left join master_setting dg on dg.master_id = ud.designation and dg.type = 'MDG' and find_in_set(dg.client_unit_id, '" + unitid_mst + "') = 1 " +
                                     "where ud.type = 'CPR' and ud.vch_num='" + URL + "'";
                            }
                            dtt = new DataTable();
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                model[0].Col19 = dtt.Rows[0]["Emp_Code"].ToString();
                                model[0].Col18 = dtt.Rows[0]["Emp_Name"].ToString();
                                model[0].Col20 = dtt.Rows[0]["department"].ToString();
                                model[0].Col21 = dtt.Rows[0]["designation"].ToString();
                                model[0].Col22 = dtt.Rows[0]["Date_Of_Joining"].ToString();

                            }
                            else
                            {
                                sgen.showmsg(1, "No Data Found", 1);
                            }
                            break;
                        case "AST":
                            mq = "select (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.vch_num as doc_no,a.col3 as asset_name" +
                       ",a.col5 as asset_model,a.col6 as asset_serial,a.col17,to_char(a.date1, 'dd/mm/yyy') as invoice_date,b.master_name as asset_type,to_char(a.date2, 'dd/mm/yyy') as w_expiry,a.col7 as invoice_no" +
                       ",a.col8 as original_value,a.col9 as current_value,a.col10 as Warranty,a.col1 as Remark from enx_tab2 a inner join master_setting b on b.master_id=a.col17 and find_in_set(a.client_unit_id,b.client_unit_id)=1 and b.type='ATY' where " +
                       "(a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) = '" + URL + "'";

                            dtt = new DataTable();
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.asset_type(userCode, unitid_mst);

                                model[0].Col23 = dtt.Rows[0]["asset_serial"].ToString();
                                model[0].Col24 = dtt.Rows[0]["asset_name"].ToString();
                                model[0].Col28 = dtt.Rows[0]["doc_no"].ToString();
                                //model[0].Col29 = dtt.Rows[0]["asset_type"].ToString();
                                String[] L1 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["col17"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems1 = L1;
                            }
                            else
                            {
                                sgen.showmsg(1, "No Data Found", 1);
                            }
                            break;
                    }
                    break;
                #endregion
                #region letter template
                case "letter_tmp":
                    switch (btnval.ToUpper())
                    {
                        case "VIEW":
                        case "EDIT":
                            mq = "select a.vch_num,a.rec_id, a.client_id,a.client_unit_id,a.ent_by,a.col2,a.col23,a.col3,a.col4," +
                                "to_char(convert_tz(a.ent_date, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') ent_date " +
                                "from enx_tab2 a where (a.client_id||a.client_unit_id|| a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.type) = '" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "EDMODE", "Y");
                                mod1.Add(new SelectListItem { Text = "Lead", Value = "001" });
                                mod1.Add(new SelectListItem { Text = "Booking", Value = "002" });
                                mod1.Add(new SelectListItem { Text = "Booking Cancel", Value = "003" });
                                mod1.Add(new SelectListItem { Text = "Feedback", Value = "004" });
                                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
                                model[0].Col1 = dtt.Rows[0]["client_id"].ToString();
                                model[0].Col2 = dtt.Rows[0]["client_unit_id"].ToString();
                                model[0].Col3 = dtt.Rows[0]["ent_by"].ToString();
                                model[0].Col4 = dtt.Rows[0]["ent_date"].ToString();
                                model[0].Col7 = dtt.Rows[0]["rec_id"].ToString();
                                model[0].Col8 = "client_id||client_unit_id||vch_num|| to_char(vch_date, 'yyyymmdd')|| type = '" + URL + "'";
                                model[0].Col13 = "Update";
                                model[0].Col121 = "U";
                                model[0].Col122 = "<u>U</u>pdate";
                                model[0].Col16 = dtt.Rows[0]["vch_num"].ToString();
                                model[0].Col20 = dtt.Rows[0]["col23"].ToString();
                                model[0].Col17 = dtt.Rows[0]["col2"].ToString();
                                model[0].Col18 = dtt.Rows[0]["col4"].ToString();
                                model[0].SelectedItems1 = new string[] { dtt.Rows[0]["col3"].ToString() };

                                #region attachment
                                DataTable dtf = new DataTable();
                                dtf = sgen.getdata(userCode, "select client_id||client_unit_id||vch_num||to_char(vch_date,'yyyymmdd')||type as fstr, rec_id,file_name," +
                                    "file_path,col1,col2,description,Col3 from file_tab where vch_num='" + dtt.Rows[0]["vch_num"].ToString() + "' and type='" + model[0].Col12 + "' " +
                                    "and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "' and col1='BOK'");
                                model[0].Files1 = new List<Files>();
                                List<Files> ltmf = new List<Files>();
                                if (dtf.Rows.Count > 0)
                                {
                                    try
                                    {
                                        string serverpath = Server.MapPath("~/Uploads/" + cg_com_name.Replace(" ", "") + "/");
                                        foreach (DataRow drf in dtf.Rows)
                                        {
                                            Files tmf = new Files();
                                            var fullPath = serverpath + drf["file_path"].ToString();
                                            byte[] imageArray = System.IO.File.ReadAllBytes(fullPath);
                                            string base64 = Convert.ToBase64String(imageArray);
                                            tmf.FileBase64 = base64;
                                            tmf.FileName = drf["file_name"].ToString();
                                            tmf.ContentType = drf["col2"].ToString();
                                            tmf.FileTitle = drf["col3"].ToString();
                                            tmf.FileDesc = drf["description"].ToString();
                                            ltmf.Add(tmf);
                                        }
                                        model[0].Files1 = ltmf;
                                    }
                                    catch (Exception err)
                                    {
                                        model[0].Files1 = new List<Files>();
                                        Files tm3 = new Files();
                                        tm3.FileName = "-";
                                        model[0].Files1.Add(tm3);
                                    }
                                }
                                else
                                {
                                    model[0].Files1 = new List<Files>();
                                    Files tm3 = new Files();
                                    tm3.FileName = "-";
                                    model[0].Files1.Add(tm3);
                                }

                                #endregion
                            }
                            break;
                    }
                    break;
                #endregion
                #region print letter
                case "prnt_ltr":
                    switch (btnval.ToUpper())
                    {
                        case "VIEW":
                        case "EDIT":
                            mq = "select to_char(a.date1,'" + sgen.Getsqldateformat() + "') as letter_date,a.* from enx_tab2 a where (a.client_id||a.client_unit_id|| a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.type) = '" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                model = getedit(model, dtt, URL);
                                model[0].Col16 = dtt.Rows[0]["vch_num"].ToString();
                                model[0].Col24 = dtt.Rows[0]["col5"].ToString();
                                model[0].Col25 = dtt.Rows[0]["letter_date"].ToString();
                                model[0].Col20 = dtt.Rows[0]["col23"].ToString();

                                mq1 = "select (emp.client_id||emp.client_unit_id||emp.vch_num||to_char(emp.vch_date,'yyyymmdd')||emp.type) as fstr,emp.emp_code as Emp_Code," +
                    "emp.old_empcode Old_EmpCode,(emp.FIRST_NAME || ' ' || REPLACE(emp.MIDDLE_NAME, '0', '') || ' ' || REPLACE(emp.LAST_NAME, '0', '')) as Emp_Name" +
                    ",nvl(dg.master_name, '-') as designation,nvl(dp.master_name, '-') as department,emp.email_id as Per_Email,emp.contact_no as ContactNo,to_char(emp.dob, '" + sgen.Getsqldateformat() + "') dob,emp.cur_address" +
                    ",nvl(p.TOTEARN,'0')*12 as gross_earn_year,emp.f_name as Father_Name,emp.gender as Gender,to_char(emp.st_dt, '" + sgen.Getsqldateformat() + "') as Date_Of_Joining,to_char(emp.ex_dt, '" + sgen.Getsqldateformat() + "') as Date_Of_Leave" +
                    ",nvl(p.TOTEARN,'0') as gross_earn_month,p.TOTDED,p.NETSALARY from emp_master emp left join paymain p on emp.vch_num = p.emp_code and p.type = 'PAY' and emp.client_id = p.client_id" +
                    " and emp.client_unit_id = p.client_unit_id left join master_setting dp on dp.master_id = emp.emp_dept and dp.type = 'MDP'" +
                    " and find_in_set(dp.client_id, emp.client_id)= 1 and find_in_set(dp.client_unit_id, emp.client_unit_id)= 1 left join master_setting dg on dg.master_id" +
                    " = emp.emp_desig and dg.type = 'MDG' and find_in_set(dg.client_id, emp.client_id)= 1 and find_in_set(dg.client_unit_id, emp.client_unit_id)= 1 WHERE" +
                    "  (emp.client_id||emp.client_unit_id||emp.vch_num||to_char(emp.vch_date,'yyyymmdd')||emp.type) = '" + dtt.Rows[0]["col7"].ToString() + "'";

                                DataTable dttemp = new DataTable();
                                dttemp = sgen.getdata(userCode, mq1);
                                if (dttemp.Rows.Count > 0)
                                {
                                    model[0].Col19 = dttemp.Rows[0]["Emp_Code"].ToString();
                                    model[0].Col18 = dttemp.Rows[0]["Emp_Name"].ToString();
                                    model[0].Col22 = dttemp.Rows[0]["department"].ToString();
                                    model[0].Col21 = dttemp.Rows[0]["designation"].ToString();
                                    model[0].Col23 = dttemp.Rows[0]["fstr"].ToString();
                                }
                                mq2 = "select a.vch_num,A.col2,A.col23 from enx_tab2 a where a.type = 'LTP' and a.client_unit_id = '" + unitid_mst + "' and a.vch_num = '" + dtt.Rows[0]["col8"].ToString() + "'";
                                DataTable dmpt = new DataTable();
                                dmpt = sgen.getdata(userCode, mq2);
                                if (dtt.Rows.Count > 0)
                                {
                                    model[0].Col26 = dmpt.Rows[0]["col2"].ToString();
                                    //model[0].Col20 = dmpt.Rows[0]["col23"].ToString();
                                    model[0].Col27 = dmpt.Rows[0]["vch_num"].ToString();
                                }
                            }
                            break;

                        case "REPRINT":
                            //          mq = "select (emp.client_id||emp.client_unit_id||emp.vch_num||to_char(emp.vch_date,'yyyymmdd')||emp.type) as fstr,emp.emp_code as Emp_Code," +
                            //"emp.old_empcode Old_EmpCode,(emp.FIRST_NAME || ' ' || REPLACE(emp.MIDDLE_NAME, '0', '') || ' ' || REPLACE(emp.LAST_NAME, '0', '')) as Emp_Name" +
                            //",nvl(dg.master_name, '-') as designation,nvl(dp.master_name, '-') as department,emp.email_id as Per_Email,emp.contact_no as ContactNo,to_char(emp.dob, '" + sgen.Getsqldateformat() + "') dob,emp.cur_address" +
                            //",p.TOTEARN*12 as gross_earn_year,emp.f_name as Father_Name,emp.gender as Gender,to_char(emp.st_dt, '" + sgen.Getsqldateformat() + "') as Date_Of_Joining" +
                            //",p.TOTEARN as gross_earn_month,p.TOTDED,p.NETSALARY from emp_master emp inner join paymain p on emp.vch_num = p.emp_code and p.type = 'PAY' and emp.client_id = p.client_id" +
                            //" and emp.client_unit_id = p.client_unit_id and p.curryyyymmm = '2020004' inner join master_setting dp on dp.master_id = emp.emp_dept and dp.type = 'MDP'" +
                            //" and find_in_set(dp.client_id, emp.client_id)= 1 and find_in_set(dp.client_unit_id, emp.client_unit_id)= 1 inner join master_setting dg on dg.master_id" +
                            //" = emp.emp_desig and dg.type = 'MDG' and find_in_set(dg.client_id, emp.client_id)= 1 and find_in_set(dg.client_unit_id, emp.client_unit_id)= 1 WHERE" +
                            //"  (emp.client_id||emp.client_unit_id||emp.vch_num||to_char(emp.vch_date,'yyyymmdd')||emp.type) = '" + dtt.Rows[0]["col7"].ToString() + "'";


                            mq = "select to_char(a.date1,'" + sgen.Getsqldateformat() + "') as letter_date,a.col23 as bulktext,(emp.client_id||emp.client_unit_id||emp.vch_num||to_char(emp.vch_date,'yyyymmdd')||emp.type) as fstr,emp.emp_code as Emp_Code," +
                  "emp.old_empcode Old_EmpCode,(emp.FIRST_NAME || ' ' || REPLACE(emp.MIDDLE_NAME, '0', '') || ' ' || REPLACE(emp.LAST_NAME, '0', '')) as Emp_Name" +
                  ",nvl(dg.master_name, '-') as designation,nvl(dp.master_name, '-') as department,emp.email_id as Per_Email,emp.contact_no as ContactNo,to_char(emp.dob, '" + sgen.Getsqldateformat() + "') dob,emp.cur_address" +
                  ",nvl(p.TOTEARN,'0')*12 as gross_earn_year,to_char(emp.ex_dt, '" + sgen.Getsqldateformat() + "') as Date_Of_Leave,emp.f_name as Father_Name,emp.gender as Gender,to_char(emp.st_dt, '" + sgen.Getsqldateformat() + "') as Date_Of_Joining" +
                  ",nvl(p.TOTEARN,'0') as gross_earn_month,p.TOTDED,p.NETSALARY from enx_tab2 a inner join emp_master emp on" +
                                " (emp.client_id||emp.client_unit_id||emp.vch_num||to_char(emp.vch_date,'yyyymmdd')||emp.type) = a.col7 and " +
                                "emp.type= 'EMP' left join paymain p on emp.vch_num = p.emp_code and p.type = 'PAY' and emp.client_id = p.client_id" +
                  " and emp.client_unit_id = p.client_unit_id left join master_setting dp on dp.master_id = emp.emp_dept and dp.type = 'MDP'" +
                  " and find_in_set(dp.client_id, emp.client_id)= 1 and find_in_set(dp.client_unit_id, emp.client_unit_id)= 1 left join master_setting dg on dg.master_id" +
                  " = emp.emp_desig and dg.type = 'MDG' and find_in_set(dg.client_id, emp.client_id)= 1 and find_in_set(dg.client_unit_id, emp.client_unit_id)= 1 where" +
                                " (a.client_id||a.client_unit_id|| a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.type)= '" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                string msg_txt = dtt.Rows[0]["bulktext"].ToString();
                                string empname = dtt.Rows[0]["Emp_Name"].ToString();
                                string father = dtt.Rows[0]["Father_Name"].ToString();
                                string address = dtt.Rows[0]["cur_address"].ToString();
                                string mobile = dtt.Rows[0]["ContactNo"].ToString();
                                string email = dtt.Rows[0]["Per_Email"].ToString();
                                string empaddress = dtt.Rows[0]["cur_address"].ToString();
                                string department = dtt.Rows[0]["department"].ToString();
                                string designation = dtt.Rows[0]["designation"].ToString();
                                string earn_year = dtt.Rows[0]["gross_earn_year"].ToString();
                                string earn_month = dtt.Rows[0]["gross_earn_month"].ToString();
                                string dob = dtt.Rows[0]["dob"].ToString();
                                string doj = dtt.Rows[0]["Date_Of_Joining"].ToString();
                                string dol = dtt.Rows[0]["Date_Of_Leave"].ToString();
                                msg_txt = msg_txt.Replace("[name]", empname);
                                msg_txt = msg_txt.Replace("[fname]", father);
                                msg_txt = msg_txt.Replace("[mobile]", mobile);
                                msg_txt = msg_txt.Replace("[email]", email);
                                msg_txt = msg_txt.Replace("[add]", empaddress);
                                msg_txt = msg_txt.Replace("[deprtment]", department);
                                msg_txt = msg_txt.Replace("[designation]", designation);
                                msg_txt = msg_txt.Replace("[gearn_y]", earn_year);
                                msg_txt = msg_txt.Replace("[gearn_m]", earn_month);
                                msg_txt = msg_txt.Replace("[doj]", doj);
                                msg_txt = msg_txt.Replace("[dob]", dob);
                                msg_txt = msg_txt.Replace("[dol]", dol);
                                dtt.Rows[0]["bulktext"] = msg_txt;
                                sgen.open_report_bydt_xml(userCode, dtt, "offer_ltr", "Letter");
                                ViewBag.scripCall += "showRptnew('Letter');disableForm();";

                            }
                            break;
                        case "EMP":
                            mq = "select (emp.client_id||emp.client_unit_id||emp.vch_num||to_char(emp.vch_date,'yyyymmdd')||emp.type) as fstr,emp.emp_code as Emp_Code," +
                 "emp.old_empcode Old_EmpCode,(emp.FIRST_NAME|| ' '|| REPLACE(emp.MIDDLE_NAME,'0','')|| ' '||REPLACE(emp.LAST_NAME,'0','')) as Emp_Name," +
                 "nvl(dg.master_name,'-') as designation,nvl(dp.master_name,'-') as department,emp.f_name as Father_Name,emp.contact_no as ContactNo,emp.gender as Gender, " +
                 "to_char(emp.st_dt,'" + sgen.Getsqldateformat() + "') as Date_Of_Joining" +
                 " from emp_master emp left join master_setting dp on dp.master_id=emp.emp_dept and dp.type='MDP' and find_in_set(dp.client_unit_id,'" + unitid_mst + "')=1 " +
                 "left join master_setting dg on dg.master_id = emp.emp_desig and dg.type = 'MDG' and find_in_set(dg.client_unit_id,'" + unitid_mst + "')= 1 WHERE" +
                 " (emp.client_id||emp.client_unit_id||emp.vch_num||to_char(emp.vch_date,'yyyymmdd')||emp.type) in ('" + URL + "')";
                            dtt = new DataTable();
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                model[0].Col19 = dtt.Rows[0]["Emp_Code"].ToString();
                                model[0].Col18 = dtt.Rows[0]["Emp_Name"].ToString();
                                model[0].Col22 = dtt.Rows[0]["department"].ToString();
                                model[0].Col21 = dtt.Rows[0]["designation"].ToString();
                                model[0].Col23 = dtt.Rows[0]["fstr"].ToString();
                            }
                            else
                            {
                                ViewBag.scripCall = "showmsgJS(1, 'No Data Found', 1);";

                            }
                            break;
                        case "TMP":
                            mq = "select A.col2,A.col23,a.vch_num from enx_tab2 a where (a.client_id||a.client_unit_id|| a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.type) = '" + URL + "'";
                            DataTable dtemp = new DataTable();
                            dtemp = sgen.getdata(userCode, mq);
                            if (dtemp.Rows.Count > 0)
                            {
                                model[0].Col26 = dtemp.Rows[0]["col2"].ToString();
                                model[0].Col20 = dtemp.Rows[0]["col23"].ToString();
                                model[0].Col27 = dtemp.Rows[0]["vch_num"].ToString();
                            }
                            else
                            {
                                ViewBag.scripCall = "showmsgJS(1, 'No Data Found', 1);";
                            }
                            break;
                    }
                    break;
                #endregion
                #region reg_apr
                case "reg_apr":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "PURCHASE":
                            mq = "select a.*,to_char(a.date1,'" + sgen.Getsqldateformat() + "') as v_from,to_char(a.date2,'" + sgen.Getsqldateformat() + "') as v_to from enx_tab2 a where (a.client_id || a.client_unit_id || a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.type) = '" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.dept(userCode, clientid_mst, unitid_mst);
                            TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2 = cmd_Fun.aff_auth(userCode, unitid_mst);
                            TempData[MyGuid + "_TList3"] = model[0].TList3 = mod3 = cmd_Fun.iloc(userCode, unitid_mst);
                            TempData[MyGuid + "_TList4"] = model[0].TList4 = mod4 = cmd_Fun.ddl_division(userCode, unitid_mst);
                            TempData[MyGuid + "_TList5"] = model[0].TList5 = mod5 = cmd_Fun.ddl_type(userCode, unitid_mst);

                            mod6.Add(new SelectListItem { Text = "High", Value = "High" });
                            mod6.Add(new SelectListItem { Text = "Medium", Value = "Medium" });
                            mod6.Add(new SelectListItem { Text = "Low", Value = "Low" });
                            TempData[MyGuid + "_TList6"] = model[0].TList6 = mod6;
                            mod7.Add(new SelectListItem { Text = "Active", Value = "Active" });
                            mod7.Add(new SelectListItem { Text = "Inactive", Value = "Inactive" });
                            TempData[MyGuid + "_TList7"] = model[0].TList7 = mod7;
                            if (dtt.Rows.Count > 0)
                            {
                                model = getedit(model, dtt, URL);
                                model[0].Col16 = dtt.Rows[0]["vch_num"].ToString();
                                model[0].Col17 = dtt.Rows[0]["col5"].ToString();
                                model[0].Col18 = dtt.Rows[0]["col19"].ToString();
                                model[0].Col20 = dtt.Rows[0]["v_from"].ToString();
                                model[0].Col21 = dtt.Rows[0]["v_to"].ToString();
                                model[0].Col22 = dtt.Rows[0]["col20"].ToString();
                                model[0].Col23 = dtt.Rows[0]["col3"].ToString();
                                model[0].Col24 = dtt.Rows[0]["col4"].ToString();
                                String[] L1 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["col18"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems1 = L1;
                                String[] L2 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["col6"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems2 = L2;
                                String[] L3 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["col7"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems3 = L3;
                                String[] L4 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["col8"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems4 = L4;
                                String[] L5 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["col9"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems5 = L5;
                                String[] L6 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["col10"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems6 = L6;
                                String[] L7 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["col11"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems7 = L7;

                                #region attachment
                                DataTable dtf = new DataTable();
                                dtf = sgen.getdata(userCode, "select client_id||client_unit_id||vch_num||to_char(vch_date,'yyyymmdd')||type as fstr, rec_id,file_name,file_path,col1,col2,description,Col3 from file_tab where vch_num='" + dtt.Rows[0]["vch_num"].ToString() + "' and type in " +
                                    "('" + tm.Col12 + "','DD" + model[0].Col12 + "') and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "' and col1='RAP'");
                                List<Tmodelmain> ltmf = new List<Tmodelmain>();
                                string des = "", title = "", f_recid = "";
                                if (dtf.Rows.Count > 0)
                                {
                                    model[0].Col31 = dtf.Rows[0]["col3"].ToString();
                                    model[0].Col32 = dtf.Rows[0]["description"].ToString();
                                    foreach (DataRow drf in dtf.Rows)
                                    {
                                        Tmodelmain tmf = new Tmodelmain();
                                        tmf.Col4 = drf["file_path"].ToString();
                                        tmf.Col1 = drf["file_name"].ToString();
                                        tmf.Col2 = drf["col1"].ToString();
                                        tmf.Col3 = drf["rec_id"].ToString();
                                        tmf.Col97 = drf["rec_id"].ToString();
                                        tmf.Col5 = drf["description"].ToString();
                                        des = drf["description"].ToString();
                                        title = drf["Col3"].ToString();
                                        tmf.Col6 = drf["col3"].ToString();
                                        tmf.Col7 = drf["col2"].ToString();
                                        //model[0].Col98 = "(client_id||client_unit_id|| vch_num|| to_char(vch_date, 'yyyymmdd')|| type) = '" + drf["fstr"].ToString() + "'";
                                        ltmf.Add(tmf);
                                    }
                                }
                                model[0].LTM1 = ltmf;
                                #endregion

                            }
                            break;
                        case "FDEL":
                            string fid = sgen.GetSession(MyGuid, "delid").ToString();
                            res = sgen.execute_cmd(userCode, "Delete from file_tab WHERE rec_id='" + fid + "' and type='RAP' and client_id='"
              + clientid_mst + "' and client_unit_id='" + unitid_mst + "'");
                            sgen.SetSession(MyGuid, "delid", null);
                            if (res)
                            {
                                var LTM = model[0].LTM1;
                                for (int d = 0; d < LTM.Count; d++)
                                {
                                    var id = LTM[d].Col3;
                                    if (id == fid) { model[0].LTM1.RemoveAt(d); }
                                }
                            }
                            break;
                    }
                    break;
                #endregion
                #region asst_return
                case "asst_return":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":

                            if (sgen.GetSession(MyGuid, "menu_id").ToString() == "33006.2")
                            {
                                mq = "select ug.client_id||ug.client_unit_id||ug.vch_num||to_char(ug.vch_date,'yyyymmdd')||ug.type as fstr,ug.vch_num as doc_no," +
                         "to_char(ug.vch_date, '" + sgen.Getsqldateformat() + "') as doc_date,to_char(ug.date1, '" + sgen.Getsqldateformat() + "') as exp_date,ug.col4 as remark1,ug.client_id,ug.client_unit_id,ug.ent_by,ug.rec_id,ug.ent_date,ug.col7 as atype" +
                         ",ug.vch_num,ug.col5 as serial_no,ug.col6 as asset_name,ug.col8 as exp_value,ug.col3 as Remark" +
                         ",(emp.FIRST_NAME || ' ' || REPLACE(emp.MIDDLE_NAME, '0', '') || ' ' || REPLACE(emp.LAST_NAME, '0', '')) as Emp_Name," +
                         "emp.emp_code as Emp_Code,nvl(dg.master_name, '-') as designation,to_char(emp.st_dt,'" + sgen.Getsqldateformat() + "') as Date_Of_Joining,emp.contact_no as ContactNo,nvl(dp.master_name, '-') as department from enx_tab2 ug inner join emp_master emp" +
                         " on emp.emp_code = ug.col2 and emp.client_unit_id = ug.client_unit_id and emp.type = 'EMP' left join master_setting dp on dp.master_id " +
                         "= emp.emp_dept and dp.type = 'MDP' and find_in_set(dp.client_unit_id,'" + unitid_mst + "')= 1 left join master_setting dg on dg.master_id = " +
                         "emp.emp_desig and dg.type = 'MDG' and find_in_set(dg.client_unit_id, '" + unitid_mst + "') = 1 where ug.client_id||ug.client_unit_id||ug.vch_num||to_char(ug.vch_date,'yyyymmdd')||ug.type = '" + URL + "'";
                            }
                            if (sgen.GetSession(MyGuid, "menu_id").ToString() == "42003.3")
                            {
                                mq = "select ug.client_id||ug.client_unit_id||ug.vch_num||to_char(ug.vch_date,'yyyymmdd')||ug.type as fstr,ug.vch_num as doc_no," +
                                                        "to_char(ug.vch_date, '" + sgen.Getsqldateformat() + "') as doc_date,to_char(ug.date1, '" + sgen.Getsqldateformat() + "') as exp_date,ug.col4 as remark1,ug.client_id,ug.client_unit_id,ug.ent_by,ug.rec_id,ug.ent_date,ug.col7 as atype" +
                                                        ",ug.vch_num,ug.col5 as serial_no,ug.col6 as asset_name,ug.col8 as exp_value,ug.col3 as Remark" +
                                                        ",(emp.FIRST_NAME || ' ' || REPLACE(emp.MIDDLE_NAME, '0', '') || ' ' || REPLACE(emp.LAST_NAME, '0', '')) as Emp_Name," +
                                                        "emp.vch_num as Emp_Code,nvl(dg.master_name, '-') as designation,'' Date_Of_Joining,nvl(dp.master_name, '-') as department from enx_tab2 ug inner join user_details emp" +
                                                        " on emp.vch_num = ug.col2  and emp.type = 'CPR' left join master_setting dp on dp.master_id " +
                                                        "= emp.department and dp.type = 'MDP' and find_in_set(dp.client_unit_id,'" + unitid_mst + "')= 1 left join master_setting dg on dg.master_id = " +
                                                        "emp.designation and dg.type = 'MDG' and find_in_set(dg.client_unit_id, '" + unitid_mst + "') = 1 where ug.client_id||ug.client_unit_id||ug.vch_num||to_char(ug.vch_date,'yyyymmdd')||ug.type = '" + URL + "'";
                            }
                            DataTable dtreg = new DataTable();
                            dtreg = sgen.getdata(userCode, mq);
                            if (dtreg.Rows.Count > 0)
                            {
                                model = getedit(model, dtreg, URL);

                                //String[] L1 = System.String.Join(",", dtreg.Rows.OfType<DataRow>().Select(r => r["atype"].ToString()).Distinct()).Split(',');
                                //model[0].SelectedItems1 = L1;
                                model[0].Col16 = dtreg.Rows[0]["doc_no"].ToString();
                                model[0].Col17 = dtreg.Rows[0]["doc_date"].ToString();
                                model[0].Col18 = dtreg.Rows[0]["Emp_Name"].ToString();
                                model[0].Col19 = dtreg.Rows[0]["Emp_Code"].ToString();
                                model[0].Col20 = dtreg.Rows[0]["department"].ToString();
                                model[0].Col21 = dtreg.Rows[0]["designation"].ToString();
                                model[0].Col22 = dtreg.Rows[0]["Date_Of_Joining"].ToString();
                                model[0].Col24 = dtreg.Rows[0]["remark1"].ToString();
                                sgen.SetSession(MyGuid, "PTYNAME", model[0].Col19);
                                model[0].dt1 = model[0].dt1.Clone();
                                for (int i = 0; i < dtreg.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["select_"] = dtreg.Rows[i]["fstr"].ToString();
                                    dr["SNo"] = i + 1;
                                    dr["Asset_serial"] = dtreg.Rows[i]["serial_no"].ToString();
                                    dr["Asset_name"] = dtreg.Rows[i]["asset_name"].ToString();
                                    dr["Asset_type"] = dtreg.Rows[i]["atype"].ToString();
                                    dr["expected_value"] = dtreg.Rows[i]["exp_value"].ToString();
                                    dr["Exp_return_date"] = dtreg.Rows[i]["exp_date"].ToString();
                                    dr["Remark"] = dtreg.Rows[i]["Remark"].ToString();
                                    dr["ref_code"] = dtreg.Rows[i]["fstr"].ToString();
                                    model[0].dt1.Rows.Add(dr);
                                }
                                model[0].dt1.AcceptChanges();
                            }
                            else

                            {
                                sgen.showmsg(1, "No Data Found", 1);
                            }
                            break;
                        case "EMP":
                            if (URL.Contains("EMP"))
                            {
                                mq = "select (emp.client_id||emp.client_unit_id||emp.vch_num||to_char(emp.vch_date,'yyyymmdd')||emp.type) as fstr,emp.emp_code as Emp_Code," +
                     "emp.old_empcode Old_EmpCode,(emp.FIRST_NAME|| ' '|| REPLACE(emp.MIDDLE_NAME,'0','')|| ' '||REPLACE(emp.LAST_NAME,'0','')) as Emp_Name," +
                     "nvl(dg.master_name,'-') as designation,nvl(dp.master_name,'-') as department,emp.f_name as Father_Name,emp.contact_no as ContactNo,emp.gender as Gender, " +
                     "to_char(emp.st_dt,'" + sgen.Getsqldateformat() + "') as Date_Of_Joining" +
                     " from emp_master emp left join master_setting dp on dp.master_id=emp.emp_dept and dp.type='MDP' and find_in_set(dp.client_unit_id,'" + unitid_mst + "')=1 " +
                     "left join master_setting dg on dg.master_id = emp.emp_desig and dg.type = 'MDG' and find_in_set(dg.client_unit_id,'" + unitid_mst + "')= 1 WHERE" +
                     " (emp.client_id||emp.client_unit_id||emp.vch_num||to_char(emp.vch_date,'yyyymmdd')||emp.type) in ('" + URL + "')";
                            }

                            else
                            {

                                mq = "select '' Date_Of_Joining, ud.vch_num as Emp_Code,ud.first_name||' '||replace(ud.middle_name,'0','')||''||replace(ud.last_name,'0','') as Emp_Name,nvl(dg.master_name,'-') as designation,nvl(dp.master_name,'-') as department" +
                                     " from user_details ud left join master_setting dp on dp.master_id = ud.department and dp.type = 'MDP' and find_in_set(dp.client_unit_id,'" + unitid_mst + "')= 1 " +
                                     "left join master_setting dg on dg.master_id = ud.designation and dg.type = 'MDG' and find_in_set(dg.client_unit_id, '" + unitid_mst + "') = 1 " +
                                     "where ud.type = 'CPR' and ud.vch_num='" + URL + "'";
                            }
                            dtt = new DataTable();
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                model[0].Col19 = dtt.Rows[0]["Emp_Code"].ToString();
                                model[0].Col18 = dtt.Rows[0]["Emp_Name"].ToString();
                                model[0].Col20 = dtt.Rows[0]["department"].ToString();
                                model[0].Col21 = dtt.Rows[0]["designation"].ToString();
                                model[0].Col22 = dtt.Rows[0]["Date_Of_Joining"].ToString();
                                sgen.SetSession(MyGuid, "PTYNAME", model[0].Col19);
                            }
                            else
                            {
                                sgen.showmsg(1, "No Data Found", 1);
                            }




                            break;
                        case "AST":
                            if (sgen.GetSession(MyGuid, "menu_id").ToString() == "33006.2")

                            {
                                mq = "select ug.client_id||ug.client_unit_id||ug.vch_num||to_char(ug.vch_date,'yyyymmdd')||ug.type as fstr,ug.vch_num as doc_no," +
                           "to_char(ug.vch_date, '" + sgen.Getsqldateformat() + "') as doc_date,to_char(ug.date1, '" + sgen.Getsqldateformat() + "') as exp_date,nvl(tp.master_name,'-') as atype" +
                           ",ug.vch_num,ug.col5 as serial_no,ug.col6 as asset_name,ug.col3 as remark,ug.col8 as exp_value,ug.col3 as Remark" +
                           " from enx_tab2 ug left join master_setting tp on tp.master_id=ug.col7 and tp.type='ATY' and find_in_set(tp.client_unit_id,ug.client_unit_id)=1 inner join emp_master emp" +
                           " on emp.emp_code = ug.col2 and emp.client_unit_id = ug.client_unit_id and emp.type = 'EMP' left join master_setting dp on dp.master_id " +
                           "= emp.emp_dept and dp.type = 'MDP' and find_in_set(dp.client_unit_id,'" + unitid_mst + "')= 1 left join master_setting dg on dg.master_id = " +
                           "emp.emp_desig and dg.type = 'MDG' and find_in_set(dg.client_unit_id, '" + unitid_mst + "') = 1 where ug.client_id||ug.client_unit_id||ug.vch_num||to_char(ug.vch_date,'yyyymmdd')||ug.type = '" + URL + "'";
                            }
                            if (sgen.GetSession(MyGuid, "menu_id").ToString() == "42003.3")
                            {
                                mq = "select ug.client_id||ug.client_unit_id||ug.vch_num||to_char(ug.vch_date,'yyyymmdd')||ug.type as fstr,ug.vch_num as doc_no," +
                                                          "to_char(ug.vch_date, '" + sgen.Getsqldateformat() + "') as doc_date,to_char(ug.date1, '" + sgen.Getsqldateformat() + "') as exp_date,nvl(tp.master_name,'-') as atype" +
                                                          ",ug.vch_num,ug.col5 as serial_no,ug.col6 as asset_name,ug.col3 as remark,ug.col8 as exp_value,ug.col3 as Remark" +
                                                          " from enx_tab2 ug left join master_setting tp on tp.master_id=ug.col7 and tp.type='ATY' and find_in_set(tp.client_unit_id,ug.client_unit_id)=1 inner join user_details emp" +
                                                          " on emp.vch_num = ug.col2  and emp.type = 'CPR' left join master_setting dp on dp.master_id " +
                                                          "= emp.department and dp.type = 'MDP' and find_in_set(dp.client_unit_id,'" + unitid_mst + "')= 1 left join master_setting dg on dg.master_id = " +
                                                          "emp.designation and dg.type = 'MDG' and find_in_set(dg.client_unit_id, '" + unitid_mst + "') = 1 where ug.client_id||ug.client_unit_id||ug.vch_num||to_char(ug.vch_date,'yyyymmdd')||ug.type = '" + URL + "'";
                            }
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                if (model[0].dt1.Rows[0]["Asset_serial"].ToString().Trim().Equals("-") || model[0].dt1.Rows[0]["Asset_serial"].ToString().Trim().Equals("")) { model[0].dt1.Rows.RemoveAt(0); }
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["select_"] = dt.Rows[i]["fstr"].ToString();
                                    dr["SNo"] = i + 1;
                                    dr["Asset_serial"] = dt.Rows[i]["serial_no"].ToString();
                                    dr["Asset_name"] = dt.Rows[i]["asset_name"].ToString();
                                    dr["Asset_type"] = dt.Rows[i]["atype"].ToString();
                                    dr["expected_value"] = dt.Rows[i]["exp_value"].ToString();
                                    dr["Exp_return_date"] = dt.Rows[i]["exp_date"].ToString();
                                    dr["Remark"] = "-";
                                    dr["ref_code"] = dt.Rows[i]["fstr"].ToString();

                                    model[0].dt1.Rows.Add(dr);
                                }
                                model[0].dt1.AcceptChanges();
                            }
                            break;
                    }
                    break;
                #endregion
                #region hr_empdoc
                case "hr_empdoc":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            mq = "select (e.client_id||e.client_unit_id||e.vch_num||to_char(e.vch_date,'yyyymmdd')||e.type) fstr,e.vch_num,e.rec_id,e.client_id,e.client_unit_id," +
                                "e.ent_by,e.ent_date,e.col2 empvch,e.col1,e.col3,e.col5,e.col6,e.r_no rno,to_char(e.date1,'" + sgen.Getsqldateformat() + "') date1,to_char(e.date2,'" + sgen.Getsqldateformat() + "') date2," +
                                "(t.FIRST_NAME|| ' '|| REPLACE(t.MIDDLE_NAME,'0','')|| ' '||REPLACE(t.LAST_NAME,'0','')) empname,dp.master_name dept,dg.master_name desig," +
                                "nvl(f.file_name,'0') fname,nvl(f.file_path,'0') fpath,nvl(f.col1,'0') ftitle,nvl(f.col2,'0') ftype,nvl(f.rec_id,'0') frec " +
                             "from enx_tab e " +
                             "inner join emp_master t on e.col2=t.vch_num and t.type='EMP' and t.client_id='" + clientid_mst + "' and t.client_unit_id='" + unitid_mst + "' " +
                             "inner join master_setting dp on dp.master_id=t.emp_dept and dp.type='MDP' and find_in_set(dp.client_id,e.client_id)=1 and find_in_set(dp.client_unit_id,e.client_unit_id)=1 " +
                             "inner join master_setting dg on dg.master_id=t.emp_desig and dg.type='MDG' and find_in_set(dg.client_id,e.client_id)=1 and find_in_set(dg.client_unit_id,e.client_unit_id)=1 " +
                             "left join file_tab f on f.vch_num=e.vch_num and f.type=e.type and f.client_id=e.client_id and f.client_unit_id=e.client_unit_id and f.r_no = e.r_no " +
                             "where (e.client_id||e.client_unit_id||e.vch_num||to_char(e.vch_date,'yyyymmdd')||e.type)='" + URL + "' order by e.r_no asc";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                model = getedit(model, dt, URL);
                                model[0].Col16 = dt.Rows[0]["vch_num"].ToString();
                                model[0].Col17 = dt.Rows[0]["empname"].ToString();
                                model[0].Col18 = dt.Rows[0]["empvch"].ToString();
                                model[0].Col19 = dt.Rows[0]["dept"].ToString();
                                model[0].Col20 = dt.Rows[0]["desig"].ToString();
                                model[0].LTM1 = new List<Tmodelmain>();
                                if (model[0].Col14 == "33008.1")
                                {
                                    model[0].Col21 = "EXP_DOC";
                                    for (int i = 0; i < dt.Rows.Count; i++)
                                    {
                                        Tmodelmain ltm = new Tmodelmain();
                                        ltm.Col1 = "Doc Type";
                                        ltm.Col2 = "Description";
                                        ltm.Col3 = "Issuing Authority";
                                        ltm.Col4 = "Issued On";
                                        ltm.Col5 = "Expiry On";
                                        ltm.Col6 = "Y";
                                        ltm.Col7 = "Y";
                                        ltm.Col8 = "Y";
                                        ltm.Col9 = "Y";
                                        ltm.Col10 = "Y";
                                        ltm.Col21 = "ND";
                                        ltm.Col22 = "ND";
                                        ltm.Col23 = "ND";
                                        ltm.Col24 = "YD";
                                        ltm.Col25 = "YD";
                                        ltm.Col11 = dt.Rows[i]["col1"].ToString();
                                        ltm.Col12 = dt.Rows[i]["col3"].ToString();
                                        ltm.Col13 = dt.Rows[i]["col5"].ToString();
                                        ltm.Col14 = dt.Rows[i]["date1"].ToString();
                                        ltm.Col15 = dt.Rows[i]["date2"].ToString();
                                        ltm.Col16 = dt.Rows[i]["ftitle"].ToString();
                                        ltm.Col18 = dt.Rows[i]["fpath"].ToString();
                                        ltm.Col19 = dt.Rows[i]["frec"].ToString();
                                        ltm.Col20 = dt.Rows[i]["rno"].ToString();
                                        model[0].LTM1.Add(ltm);
                                    }
                                }
                            }
                            break;
                        case "EMP":
                            mq = "select e.vch_num,(e.first_name||replace(e.middle_name,'0','')||replace(e.last_name,'0','')) empname,dp.master_name dept,dg.master_name desig from emp_master e " +
                                "inner join master_setting dp on dp.master_id=e.emp_dept and dp.type='MDP' and find_in_set(dp.client_id,e.client_id)=1 and find_in_set(dp.client_unit_id,e.client_unit_id)=1 " +
                                "inner join master_setting dg on dg.master_id=e.emp_desig and dg.type='MDG' and find_in_set(dg.client_id,e.client_id)=1 and find_in_set(dg.client_unit_id,e.client_unit_id)=1 " +
                                "where (e.client_id||e.client_unit_id||e.vch_num||to_char(e.vch_date,'yyyymmdd')||e.type)='" + URL + "'";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                model[0].Col17 = dt.Rows[0]["empname"].ToString();
                                model[0].Col18 = dt.Rows[0]["vch_num"].ToString();
                                model[0].Col19 = dt.Rows[0]["dept"].ToString();
                                model[0].Col20 = dt.Rows[0]["desig"].ToString();
                            }
                            break;
                        case "FDEL":
                            string fid = sgen.GetSession(MyGuid, "delid").ToString();
                            res = sgen.execute_cmd(userCode, "Delete from file_tab WHERE rec_id='" + fid + "' and type='" + model[0].Col12 + "' and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "'");
                            sgen.SetSession(MyGuid, "delid", null);
                            if (res)
                            {
                                var LTM = model[0].LTM1;
                                for (int d = 0; d < LTM.Count; d++)
                                {
                                    var id = LTM[d].Col19;
                                    if (id == fid)
                                    {
                                        //model[0].LTM1.RemoveAt(d);
                                        model[0].LTM1[d].Col16 = "";
                                        model[0].LTM1[d].Col18 = "";
                                        model[0].LTM1[d].Col19 = "";
                                    }
                                }
                            }
                            break;
                    }
                    break;
                #endregion
                #region add challan
                case "add_chl":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            mq = "select (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.vch_num as doc_no" +
                             ",a.col1 as chl_serial,a.col2 as totchl_amount,a.client_id,a.client_unit_id,a.ent_by,a.rec_id,a.ent_date,to_char(a.date1,'" + sgen.Getsqldateformat() + "') as voucher_date,a.col3 as bsr_code," +
                             "a.col21 as bank_name,a.col4 as tds,a.col5 as surcharge,a.col6 as education_cess,a.col7 as interest," +
                             "a.col8 as others,a.col12,a.col13,a.col9 as cheque_no,to_char(a.date2, '" + sgen.Getsqldateformat() + "') as payment_date," +
                             "to_char(a.date3, '" + sgen.Getsqldateformat() + "') as deduction_date,a.col10 as ack_no,a.col11 as late_fee from kc_tab a where " +
                             "(a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) = '" + URL + "'";
                            DataTable dtreg = new DataTable();
                            TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.month(userCode, unitid_mst);
                            mod2.Add(new SelectListItem { Text = "TDS Payble By Taxpayer", Value = "001" });
                            TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2;
                            dtreg = sgen.getdata(userCode, mq);
                            if (dtreg.Rows.Count > 0)
                            {
                                model = getedit(model, dtreg, URL);
                                String[] L1 = System.String.Join(",", dtreg.Rows.OfType<DataRow>().Select(r => r["col12"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems1 = L1;
                                String[] L2 = System.String.Join(",", dtreg.Rows.OfType<DataRow>().Select(r => r["col13"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems2 = L2;
                                model[0].Col16 = dtreg.Rows[0]["doc_no"].ToString();
                                model[0].Col17 = dtreg.Rows[0]["chl_serial"].ToString();
                                model[0].Col18 = dtreg.Rows[0]["totchl_amount"].ToString();
                                model[0].Col19 = dtreg.Rows[0]["voucher_date"].ToString();
                                model[0].Col20 = dtreg.Rows[0]["bsr_code"].ToString();
                                model[0].Col21 = dtreg.Rows[0]["bank_name"].ToString();
                                model[0].Col22 = dtreg.Rows[0]["tds"].ToString();
                                model[0].Col23 = dtreg.Rows[0]["surcharge"].ToString();
                                model[0].Col24 = dtreg.Rows[0]["education_cess"].ToString();
                                model[0].Col25 = dtreg.Rows[0]["interest"].ToString();
                                model[0].Col26 = dtreg.Rows[0]["others"].ToString();
                                model[0].Col27 = dtreg.Rows[0]["cheque_no"].ToString();
                                model[0].Col28 = dtreg.Rows[0]["payment_date"].ToString();
                                model[0].Col29 = dtreg.Rows[0]["deduction_date"].ToString();
                                model[0].Col30 = dtreg.Rows[0]["ack_no"].ToString();
                                model[0].Col31 = dtreg.Rows[0]["late_fee"].ToString();
                            }
                            else

                            {
                                sgen.showmsg(1, "No Data Found", 1);
                            }
                            break;
                    }
                    break;
                #endregion
                #region delegates
                case "delgts":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            mq = "select (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.vch_num" +
                           ",a.col5,a.col6,a.col7,a.client_id,a.client_unit_id,a.ent_by,a.rec_id,a.ent_date,to_char(a.date1, '" + sgen.Getsqldateformat() + "') as from_date" +
                           ", to_char(a.date2, '" + sgen.Getsqldateformat() + "') as to_date from enx_tab2 a where " +
                           "(a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) = '" + URL + "'";

                            DataTable dtreg = new DataTable();
                            dtreg = sgen.getdata(userCode, mq);
                            mq1 = "select a.fstr as id,a.Emp_Name||'('||a.department||'/'||a.designation||')' as name from (select (emp.client_id||emp.client_unit_id||emp.vch_num||to_char(emp.vch_date,'yyyymmdd')||emp.type) as fstr,emp.emp_code as Emp_Code," +
"emp.old_empcode Old_EmpCode,(emp.FIRST_NAME|| ' '|| REPLACE(emp.MIDDLE_NAME,'0','')|| ' '||REPLACE(emp.LAST_NAME,'0','')) as Emp_Name," +
"nvl(dg.master_name,'-') as designation,nvl(dp.master_name,'-') as department,emp.f_name as Father_Name,emp.gender as Gender, " +
"to_char(emp.st_dt,'" + sgen.Getsqldateformat() + "') as Date_Of_Joining" +
" from emp_master emp inner join master_setting dp on dp.master_id=emp.emp_dept and dp.type='MDP' and find_in_set(dp.client_unit_id,'" + unitid_mst + "')=1 " +
"inner join master_setting dg on dg.master_id = emp.emp_desig and dg.type = 'MDG' and find_in_set(dg.client_unit_id,'" + unitid_mst + "')= 1 WHERE emp.type= 'EMP' " +
"and emp.client_unit_id= '" + unitid_mst + "' and to_char(emp.ex_dt,'yyyy')='1900' and emp.emp_status='Y') a";
                            DataTable dtemp = new DataTable();
                            dtemp = sgen.getdata(userCode, mq1);
                            if (dtemp.Rows.Count > 0)
                            {
                                foreach (DataRow dr in dtemp.Rows)
                                {
                                    mod1.Add(new SelectListItem { Value = dr["id"].ToString(), Text = dr["name"].ToString() });
                                }
                            }
                            TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
                            TempData[MyGuid + "_TList2"] = model[0].TList2 = mod1;
                            mod3.Add(new SelectListItem { Text = "Leave Applied", Value = "000001" });
                            mod3.Add(new SelectListItem { Text = "Loan", Value = "000002" });
                            mod3.Add(new SelectListItem { Text = "OD Slip", Value = "000003" });
                            mod3.Add(new SelectListItem { Text = "Separation", Value = "000004" });
                            TempData[MyGuid + "_TList3"] = model[0].TList3 = mod3;
                            model[0].SelectedItems1 = new string[] { "" };
                            model[0].SelectedItems2 = new string[] { "" };

                            if (dtreg.Rows.Count > 0)
                            {
                                model = getedit(model, dtreg, URL);
                                String[] L1 = System.String.Join(",", dtreg.Rows.OfType<DataRow>().Select(r => r["col5"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems1 = L1;
                                String[] L2 = System.String.Join(",", dtreg.Rows.OfType<DataRow>().Select(r => r["col6"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems2 = L2;
                                String[] L3 = System.String.Join(",", dtreg.Rows.OfType<DataRow>().Select(r => r["col7"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems3 = L3;
                                model[0].Col16 = dtreg.Rows[0]["vch_num"].ToString();
                                model[0].Col17 = dtreg.Rows[0]["from_date"].ToString();
                                model[0].Col18 = dtreg.Rows[0]["to_date"].ToString();
                            }
                            else
                            {
                                sgen.showmsg(1, "No Data Found", 1);
                            }
                            break;
                    }
                    break;
                #endregion
                #region asset master
                case "asst_mst":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            mq = "select (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.vch_num as doc_no" +
                           ",a.col5 as asset_model,a.col3 as asset_name,a.col11,a.col6 as asset_serial,a.col17,a.client_id,a.client_unit_id,a.ent_by,a.rec_id,a.ent_date" +
                           ",to_char(a.date1, 'dd/mm/yyy') as invoice_date,to_char(a.vch_date, 'dd/mm/yyy') as doc_date,to_char(a.date2, 'dd/mm/yyy') as w_expiry,a.col7 as invoice_no" +
                           ",a.col8 as original_value,a.col9 as current_value,a.col10 as Warranty,a.col1 as Remark from enx_tab2 a where " +
                           "(a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) = '" + URL + "'";

                            DataTable dtreg = new DataTable();
                            TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.asset_type(userCode, unitid_mst);
                            dtreg = sgen.getdata(userCode, mq);
                            if (dtreg.Rows.Count > 0)
                            {
                                model = getedit(model, dtreg, URL);
                                String[] L1 = System.String.Join(",", dtreg.Rows.OfType<DataRow>().Select(r => r["col17"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems1 = L1;
                                model[0].Col16 = dtreg.Rows[0]["doc_no"].ToString();
                                model[0].Col17 = dtreg.Rows[0]["asset_model"].ToString();
                                model[0].Col18 = dtreg.Rows[0]["asset_serial"].ToString();
                                model[0].Col19 = dtreg.Rows[0]["invoice_date"].ToString();
                                model[0].Col20 = dtreg.Rows[0]["invoice_no"].ToString();
                                model[0].Col21 = dtreg.Rows[0]["original_value"].ToString();
                                model[0].Col22 = dtreg.Rows[0]["current_value"].ToString();
                                model[0].Col23 = dtreg.Rows[0]["Warranty"].ToString();
                                model[0].Col24 = dtreg.Rows[0]["w_expiry"].ToString();
                                model[0].Col25 = dtreg.Rows[0]["Remark"].ToString();
                                model[0].Col26 = dtreg.Rows[0]["asset_name"].ToString();
                                model[0].Col37 = dtreg.Rows[0]["col11"].ToString();
                                model[0].Col36 = dtreg.Rows[0]["doc_date"].ToString();

                                DataTable dtf = new DataTable();
                                dtf = sgen.getdata(userCode, "select client_id||client_unit_id||vch_num||to_char(vch_date,'yyyymmdd')||type as fstr, rec_id,file_name,file_path,col1,col2,description,Col3 from file_tab where vch_num='" + dtreg.Rows[0]["doc_no"].ToString() + "' and type in " +
                                    "('" + tm.Col12 + "','DD" + model[0].Col12 + "') and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "' and col1='AMS'");
                                List<Tmodelmain> ltmf = new List<Tmodelmain>();
                                string des = "", title = "", f_recid = "";
                                if (dtf.Rows.Count > 0)
                                {
                                    model[0].Col31 = dtf.Rows[0]["col3"].ToString();
                                    model[0].Col32 = dtf.Rows[0]["description"].ToString();
                                    foreach (DataRow drf in dtf.Rows)
                                    {
                                        Tmodelmain tmf = new Tmodelmain();
                                        tmf.Col4 = drf["file_path"].ToString();
                                        tmf.Col1 = drf["file_name"].ToString();
                                        tmf.Col2 = drf["col1"].ToString();
                                        tmf.Col3 = drf["rec_id"].ToString();
                                        tmf.Col97 = drf["rec_id"].ToString();
                                        tmf.Col5 = drf["description"].ToString();
                                        des = drf["description"].ToString();
                                        title = drf["Col3"].ToString();
                                        tmf.Col6 = drf["col3"].ToString();
                                        tmf.Col7 = drf["col2"].ToString();
                                        ltmf.Add(tmf);
                                    }
                                }
                                model[0].LTM1 = ltmf;
                            }
                            else
                            {
                                sgen.showmsg(1, "No Data Found", 1);
                            }
                            break;

                        case "FDEL":
                            string fid = sgen.GetSession(MyGuid, "delid").ToString();
                            res = sgen.execute_cmd(userCode, "Delete from file_tab WHERE rec_id='" + fid + "' and type='AMS' and client_id='"
              + clientid_mst + "' and client_unit_id='" + unitid_mst + "'");
                            sgen.SetSession(MyGuid, "delid", null);
                            if (res)
                            {
                                var LTM = model[0].LTM1;
                                for (int d = 0; d < LTM.Count; d++)
                                {
                                    var id = LTM[d].Col3;
                                    if (id == fid) { model[0].LTM1.RemoveAt(d); }
                                }
                            }
                            break;
                    }
                    break;
                #endregion
                #region family_det
                case "family_det":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            mq = "select ug.*,to_char(ug.date1, '" + sgen.Getsqldateformat() + "') as dob,(emp.client_id||emp.client_unit_id||emp.vch_num||to_char(emp.vch_date,'yyyymmdd')||emp.type) as fstr,emp.emp_code as Emp_Code," +
                 "emp.old_empcode Old_EmpCode,(emp.FIRST_NAME|| ' '|| REPLACE(emp.MIDDLE_NAME,'0','')|| ' '||REPLACE(emp.LAST_NAME,'0','')) as Emp_Name," +
                 "nvl(dg.master_name,'-') as designation,nvl(dp.master_name,'-') as department,emp.cur_address,emp.f_name as Father_Name,emp.contact_no as ContactNo,emp.gender as Gender, " +
                 "to_char(emp.st_dt,'" + sgen.Getsqldateformat() + "') as Date_Of_Joining from enx_tab2 ug inner join emp_master emp" +
                         " on emp.emp_code = ug.col2 and emp.client_unit_id = ug.client_unit_id and emp.type = 'EMP' left join master_setting dp on dp.master_id " +
                         "= emp.emp_dept and dp.type = 'MDP' and find_in_set(dp.client_unit_id,'" + unitid_mst + "')= 1 left join master_setting dg on dg.master_id = " +
                         "emp.emp_desig and dg.type = 'MDG' and find_in_set(dg.client_unit_id, '" + unitid_mst + "') = 1 where ug.client_id||ug.client_unit_id||ug.vch_num||to_char(ug.vch_date,'yyyymmdd')||ug.type = '" + URL + "'";

                            DataTable dtreg = new DataTable();
                            dtreg = sgen.getdata(userCode, mq);
                            TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2 = cmd_Fun.relation(userCode, unitid_mst);
                            #region 1.bloodgroup
                            mod1.Add(new SelectListItem { Text = "A+", Value = "A+" });
                            mod1.Add(new SelectListItem { Text = "B+", Value = "B+" });
                            mod1.Add(new SelectListItem { Text = "AB+", Value = "AB+" });
                            mod1.Add(new SelectListItem { Text = "O+", Value = "O+" });
                            mod1.Add(new SelectListItem { Text = "A-", Value = "A-" });
                            mod1.Add(new SelectListItem { Text = "B-", Value = "B-" });
                            mod1.Add(new SelectListItem { Text = "AB-", Value = "AB-" });
                            mod1.Add(new SelectListItem { Text = "O-", Value = "O-" });
                            TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;//bloodgrp
                            #endregion
                            if (dtreg.Rows.Count > 0)
                            {
                                model = getedit(model, dtreg, URL);
                                String[] L1 = System.String.Join(",", dtreg.Rows.OfType<DataRow>().Select(r => r["col20"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems1 = L1;
                                String[] L2 = System.String.Join(",", dtreg.Rows.OfType<DataRow>().Select(r => r["col21"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems2 = L2;
                                model[0].Col19 = dtreg.Rows[0]["Emp_Code"].ToString();
                                model[0].Col18 = dtreg.Rows[0]["Emp_Name"].ToString();
                                model[0].Col20 = dtreg.Rows[0]["department"].ToString();
                                model[0].Col21 = dtreg.Rows[0]["designation"].ToString();
                                model[0].Col22 = dtreg.Rows[0]["Father_Name"].ToString();
                                model[0].Col27 = dtreg.Rows[0]["cur_address"].ToString();
                                model[0].Col16 = dtreg.Rows[0]["vch_num"].ToString();
                                model[0].Col23 = dtreg.Rows[0]["col16"].ToString();
                                model[0].Col24 = dtreg.Rows[0]["col17"].ToString();
                                model[0].Col25 = dtreg.Rows[0]["dob"].ToString();
                                model[0].Col26 = dtreg.Rows[0]["col3"].ToString();
                                model[0].Col28 = dtreg.Rows[0]["col5"].ToString();
                                model[0].Col29 = dtreg.Rows[0]["col6"].ToString();
                                model[0].Col30 = dtreg.Rows[0]["col7"].ToString();
                                model[0].Col31 = dtreg.Rows[0]["col8"].ToString();
                            }
                            else

                            {
                                sgen.showmsg(1, "No Data Found", 1);
                            }
                            break;
                        case "EMP":
                            mq = "select (emp.client_id||emp.client_unit_id||emp.vch_num||to_char(emp.vch_date,'yyyymmdd')||emp.type) as fstr,emp.emp_code as Emp_Code," +
                 "emp.old_empcode Old_EmpCode,(emp.FIRST_NAME|| ' '|| REPLACE(emp.MIDDLE_NAME,'0','')|| ' '||REPLACE(emp.LAST_NAME,'0','')) as Emp_Name," +
                 "nvl(dg.master_name,'-') as designation,nvl(dp.master_name,'-') as department,emp.cur_address,emp.f_name as Father_Name,emp.contact_no as ContactNo,emp.gender as Gender, " +
                 "to_char(emp.st_dt,'" + sgen.Getsqldateformat() + "') as Date_Of_Joining" +
                 " from emp_master emp left join master_setting dp on dp.master_id=emp.emp_dept and dp.type='MDP' and find_in_set(dp.client_unit_id,'" + unitid_mst + "')=1 " +
                 "left join master_setting dg on dg.master_id = emp.emp_desig and dg.type = 'MDG' and find_in_set(dg.client_unit_id,'" + unitid_mst + "')= 1 WHERE" +
                 " (emp.client_id||emp.client_unit_id||emp.vch_num||to_char(emp.vch_date,'yyyymmdd')||emp.type) in ('" + URL + "')";
                            dtt = new DataTable();
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                model[0].Col19 = dtt.Rows[0]["Emp_Code"].ToString();
                                model[0].Col18 = dtt.Rows[0]["Emp_Name"].ToString();
                                model[0].Col20 = dtt.Rows[0]["department"].ToString();
                                model[0].Col21 = dtt.Rows[0]["designation"].ToString();
                                model[0].Col22 = dtt.Rows[0]["Father_Name"].ToString();
                                model[0].Col27 = dtt.Rows[0]["cur_address"].ToString();

                            }
                            else
                            {
                                sgen.showmsg(1, "No Data Found", 1);
                            }
                            break;
                    }
                    break;
                #endregion
                #region nomination
                case "nomination":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            mq = "select ug.* from enx_tab2 ug where ug.client_id||ug.client_unit_id||ug.vch_num||to_char(ug.vch_date,'yyyymmdd')||ug.type = '" + URL + "'";

                            DataTable dtreg = new DataTable();
                            dtreg = sgen.getdata(userCode, mq);
                            #region ddls
                            mq = "select ug.vch_num as doc_no,ug.col16||'('||rl.master_name||')' as Member_name from enx_tab2 ug" +
                                " inner join master_setting rl on rl.master_id=ug.col21 and rl.type='REL' and find_in_set(rl.client_unit_id,ug.client_unit_id)=1" +
                                " where ug.client_unit_id = '" + unitid_mst + "' and ug.type = 'FDT'";
                            DataTable dtemp = new DataTable();
                            dtemp = sgen.getdata(userCode, mq);
                            if (dtemp.Rows.Count > 0)
                            {
                                foreach (DataRow dr in dtemp.Rows)
                                {
                                    mod2.Add(new SelectListItem { Value = dr["doc_no"].ToString(), Text = dr["Member_name"].ToString() });
                                }
                            }
                            mod1.Add(new SelectListItem { Text = "EPF", Value = "EPF" });
                            mod1.Add(new SelectListItem { Text = "EPS", Value = "EPS" });
                            mod1.Add(new SelectListItem { Text = "ESI", Value = "ESI" });
                            mod1.Add(new SelectListItem { Text = "Gratuity", Value = "Gratuity" });
                            TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
                            TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2;
                            #endregion
                            if (dtreg.Rows.Count > 0)
                            {
                                model = getedit(model, dtreg, URL);
                                String[] L1 = System.String.Join(",", dtreg.Rows.OfType<DataRow>().Select(r => r["col5"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems1 = L1;
                                String[] L2 = System.String.Join(",", dtreg.Rows.OfType<DataRow>().Select(r => r["col6"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems2 = L2;
                                model[0].Col16 = dtreg.Rows[0]["vch_num"].ToString();
                                model[0].Col17 = dtreg.Rows[0]["col7"].ToString();
                                model[0].Chk1 = (dtreg.Rows[0]["col8"].ToString() == "Y") ? true : false;
                            }
                            else

                            {
                                sgen.showmsg(1, "No Data Found", 1);
                            }
                            break;
                        case "EMP":
                            mq = "select (emp.client_id||emp.client_unit_id||emp.vch_num||to_char(emp.vch_date,'yyyymmdd')||emp.type) as fstr,emp.emp_code as Emp_Code," +
                 "emp.old_empcode Old_EmpCode,(emp.FIRST_NAME|| ' '|| REPLACE(emp.MIDDLE_NAME,'0','')|| ' '||REPLACE(emp.LAST_NAME,'0','')) as Emp_Name," +
                 "nvl(dg.master_name,'-') as designation,nvl(dp.master_name,'-') as department,emp.cur_address,emp.f_name as Father_Name,emp.contact_no as ContactNo,emp.gender as Gender, " +
                 "to_char(emp.st_dt,'" + sgen.Getsqldateformat() + "') as Date_Of_Joining" +
                 " from emp_master emp left join master_setting dp on dp.master_id=emp.emp_dept and dp.type='MDP' and find_in_set(dp.client_unit_id,'" + unitid_mst + "')=1 " +
                 "left join master_setting dg on dg.master_id = emp.emp_desig and dg.type = 'MDG' and find_in_set(dg.client_unit_id,'" + unitid_mst + "')= 1 WHERE" +
                 " (emp.client_id||emp.client_unit_id||emp.vch_num||to_char(emp.vch_date,'yyyymmdd')||emp.type) in ('" + URL + "')";
                            dtt = new DataTable();
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                model[0].Col19 = dtt.Rows[0]["Emp_Code"].ToString();
                                model[0].Col18 = dtt.Rows[0]["Emp_Name"].ToString();
                                model[0].Col20 = dtt.Rows[0]["department"].ToString();
                                model[0].Col21 = dtt.Rows[0]["designation"].ToString();
                                model[0].Col22 = dtt.Rows[0]["Father_Name"].ToString();
                                model[0].Col27 = dtt.Rows[0]["cur_address"].ToString();

                            }
                            else
                            {
                                sgen.showmsg(1, "No Data Found", 1);
                            }
                            break;
                    }
                    break;
                #endregion
                #region card_det
                case "card_det":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            mq = "select ug.*,to_char(ug.date1, '" + sgen.Getsqldateformat() + "') as from_date,to_char(ug.date2, '" + sgen.Getsqldateformat() + "') as to_date from enx_tab2 ug where ug.client_id||ug.client_unit_id||ug.vch_num||to_char(ug.vch_date,'yyyymmdd')||ug.type = '" + URL + "'";

                            DataTable dtreg = new DataTable();
                            dtreg = sgen.getdata(userCode, mq);
                            if (dtreg.Rows.Count > 0)
                            {
                                model = getedit(model, dtreg, URL);
                                model[0].Col16 = dtreg.Rows[0]["vch_num"].ToString();
                                model[0].Col17 = dtreg.Rows[0]["col5"].ToString();
                                model[0].Col18 = dtreg.Rows[0]["from_date"].ToString();
                                model[0].Col19 = dtreg.Rows[0]["to_date"].ToString();
                                model[0].Col20 = dtreg.Rows[0]["col3"].ToString();
                            }
                            else

                            {
                                sgen.showmsg(1, "No Data Found", 1);
                            }
                            break;
                        case "EMP":
                            mq = "select (emp.client_id||emp.client_unit_id||emp.vch_num||to_char(emp.vch_date,'yyyymmdd')||emp.type) as fstr,emp.emp_code as Emp_Code," +
                 "emp.old_empcode Old_EmpCode,(emp.FIRST_NAME|| ' '|| REPLACE(emp.MIDDLE_NAME,'0','')|| ' '||REPLACE(emp.LAST_NAME,'0','')) as Emp_Name," +
                 "nvl(dg.master_name,'-') as designation,nvl(dp.master_name,'-') as department,emp.cur_address,emp.f_name as Father_Name,emp.contact_no as ContactNo,emp.gender as Gender, " +
                 "to_char(emp.st_dt,'" + sgen.Getsqldateformat() + "') as Date_Of_Joining" +
                 " from emp_master emp left join master_setting dp on dp.master_id=emp.emp_dept and dp.type='MDP' and find_in_set(dp.client_unit_id,'" + unitid_mst + "')=1 " +
                 "left join master_setting dg on dg.master_id = emp.emp_desig and dg.type = 'MDG' and find_in_set(dg.client_unit_id,'" + unitid_mst + "')= 1 WHERE" +
                 " (emp.client_id||emp.client_unit_id||emp.vch_num||to_char(emp.vch_date,'yyyymmdd')||emp.type) in ('" + URL + "')";
                            dtt = new DataTable();
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                model[0].Col19 = dtt.Rows[0]["Emp_Code"].ToString();
                                model[0].Col18 = dtt.Rows[0]["Emp_Name"].ToString();
                                model[0].Col20 = dtt.Rows[0]["department"].ToString();
                                model[0].Col21 = dtt.Rows[0]["designation"].ToString();
                                model[0].Col22 = dtt.Rows[0]["Father_Name"].ToString();
                                model[0].Col27 = dtt.Rows[0]["cur_address"].ToString();

                            }
                            else
                            {
                                sgen.showmsg(1, "No Data Found", 1);
                            }
                            break;
                    }
                    break;
                #endregion
                #region hd_wf
                case "hd_wf":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            model[0].LTM2 = new List<Tmodelmain>();

                            mq = "select ug.*,to_char(ug.date1, '" + sgen.Getsqldateformat() + "') as from_date,to_char(ug.date2, '" + sgen.Getsqldateformat() + "') as to_date from enx_tab2 ug where ug.client_id||ug.client_unit_id||ug.vch_num||to_char(ug.vch_date,'yyyymmdd')||ug.type = '" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            TempData[MyGuid + "_Tlist3"] = model[0].TList3 = mod3 = cmd_Fun.help_type(userCode, unitid_mst);
                            mod1 = cmd_Fun.username(userCode);
                            mod2.Add(new SelectListItem { Text = "Owner", Value = "Owner" });
                            mod2.Add(new SelectListItem { Text = "Assignee", Value = "Assignee" });
                            mod2.Add(new SelectListItem { Text = "E 1", Value = "E 1" });
                            mod2.Add(new SelectListItem { Text = "E 2", Value = "E 2" });
                            mod2.Add(new SelectListItem { Text = "E 3", Value = "E 3" });

                            if (dtt.Rows.Count > 0)
                            {

                                model[0].Col16 = dtt.Rows[0]["vch_num"].ToString();
                                model = getedit(model, dtt, URL);
                                String[] L3 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["col5"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems3 = L3;
                                for (int i = 0; i < dtt.Rows.Count; i++)
                                {
                                    Tmodelmain ltm2 = new Tmodelmain();
                                    ltm2.SelectedItems1 = new string[] { dtt.Rows[i]["COL6"].ToString() };
                                    ltm2.SelectedItems2 = new string[] { dtt.Rows[i]["COL7"].ToString() };
                                    TempData[MyGuid + "_Tlist1"] = ltm2.TList1 = mod1;
                                    TempData[MyGuid + "_Tlist2"] = ltm2.TList2 = mod2;
                                    ltm2.Col17 = dtt.Rows[i]["COL8"].ToString();  //
                                    ltm2.Chk1 = dtt.Rows[i]["col12"].ToString() == "Y" ? true : false;
                                    ltm2.Chk2 = dtt.Rows[i]["col9"].ToString() == "Y" ? true : false;
                                    model[0].LTM2.Add(ltm2);
                                }
                            }
                            else

                            {
                                sgen.showmsg(1, "No Data Found", 1);
                            }
                            break;
                        case "EMP":
                            mq = "select (emp.client_id||emp.client_unit_id||emp.vch_num||to_char(emp.vch_date,'yyyymmdd')||emp.type) as fstr,emp.emp_code as Emp_Code," +
                 "emp.old_empcode Old_EmpCode,(emp.FIRST_NAME|| ' '|| REPLACE(emp.MIDDLE_NAME,'0','')|| ' '||REPLACE(emp.LAST_NAME,'0','')) as Emp_Name," +
                 "nvl(dg.master_name,'-') as designation,nvl(dp.master_name,'-') as department,emp.cur_address,emp.f_name as Father_Name,emp.contact_no as ContactNo,emp.gender as Gender, " +
                 "to_char(emp.st_dt,'" + sgen.Getsqldateformat() + "') as Date_Of_Joining" +
                 " from emp_master emp left join master_setting dp on dp.master_id=emp.emp_dept and dp.type='MDP' and find_in_set(dp.client_unit_id,'" + unitid_mst + "')=1 " +
                 "left join master_setting dg on dg.master_id = emp.emp_desig and dg.type = 'MDG' and find_in_set(dg.client_unit_id,'" + unitid_mst + "')= 1 WHERE" +
                 " (emp.client_id||emp.client_unit_id||emp.vch_num||to_char(emp.vch_date,'yyyymmdd')||emp.type) in ('" + URL + "')";
                            dtt = new DataTable();
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                model[0].Col19 = dtt.Rows[0]["Emp_Code"].ToString();
                                model[0].Col18 = dtt.Rows[0]["Emp_Name"].ToString();
                                model[0].Col20 = dtt.Rows[0]["department"].ToString();
                                model[0].Col21 = dtt.Rows[0]["designation"].ToString();
                                model[0].Col22 = dtt.Rows[0]["Father_Name"].ToString();
                                model[0].Col27 = dtt.Rows[0]["cur_address"].ToString();

                            }
                            else
                            {
                                sgen.showmsg(1, "No Data Found", 1);
                            }
                            break;
                    }
                    break;
                #endregion
                #region faq_master
                case "faq_m":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            mq = "select ug.client_id||ug.client_unit_id||ug.vch_num||to_char(ug.vch_date,'yyyymmdd')||ug.type as fstr" +
                                ",ug.col5,ug.col23,ug.col24,ug.client_id,ug.client_unit_id,ug.ent_by,ug.rec_id,ug.ent_date,ug.vch_num,to_char(ug.vch_date,'" + sgen.Getsqldateformat() + "') as doc_date from " +
                                "enx_tab2 ug where ug.client_id||ug.client_unit_id||ug.vch_num||to_char(ug.vch_date,'yyyymmdd')||ug.type = '" + URL + "'";
                            DataTable dtreg = new DataTable();
                            dtreg = sgen.getdata(userCode, mq);
                            if (dtreg.Rows.Count > 0)
                            {
                                model = getedit(model, dtreg, URL);
                                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.help_type(userCode, unitid_mst);
                                model[0].Col16 = dtreg.Rows[0]["vch_num"].ToString();
                                String[] L1 = System.String.Join(",", dtreg.Rows.OfType<DataRow>().Select(r => r["col5"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems1 = L1;
                                model[0].Col17 = dtreg.Rows[0]["doc_date"].ToString();
                                model[0].Col20 = dtreg.Rows[0]["col23"].ToString();
                                model[0].Col132 = dtreg.Rows[0]["col24"].ToString();
                            }
                            else
                            {
                                sgen.showmsg(1, "No Data Found", 1);
                            }
                            break;
                    }
                    break;
                #endregion
                #region faq_add
                case "faq_add":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            mq = "select ug.client_id||ug.client_unit_id||ug.vch_num||to_char(ug.vch_date,'yyyymmdd')||ug.type as fstr" +
                                ",ug.col5,ug.col23,ug.client_id,ug.client_unit_id,ug.ent_by,ug.rec_id,ug.ent_date,ug.vch_num,to_char(ug.vch_date,'" + sgen.Getsqldateformat() + "') as doc_date from " +
                                "enx_tab2 ug where ug.client_id||ug.client_unit_id||ug.vch_num||to_char(ug.vch_date,'yyyymmdd')||ug.type = '" + URL + "'";
                            DataTable dtreg = new DataTable();
                            dtreg = sgen.getdata(userCode, mq);
                            if (dtreg.Rows.Count > 0)
                            {
                                model = getedit(model, dtreg, URL);
                                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.help_type(userCode, unitid_mst);
                                model[0].Col16 = dtreg.Rows[0]["vch_num"].ToString();
                                String[] L1 = System.String.Join(",", dtreg.Rows.OfType<DataRow>().Select(r => r["col5"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems1 = L1;
                                model[0].Col17 = dtreg.Rows[0]["doc_date"].ToString();
                                model[0].Col20 = dtreg.Rows[0]["col23"].ToString();
                            }
                            else
                            {
                                sgen.showmsg(1, "No Data Found", 1);
                            }
                            break;
                    }
                    break;
                #endregion
                #region awf
                case "awf":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            mq = "select ug.client_id||ug.client_unit_id||ug.vch_num||to_char(ug.vch_date,'yyyymmdd')||ug.type as fstr" +
                              ",ug.col5,ug.col6,ug.col7,ug.col8,ug.col3,ug.client_id,ug.client_unit_id,ug.ent_by,ug.rec_id,ug.ent_date,ug.vch_num,to_char(ug.vch_date,'" + sgen.Getsqldateformat() + "') as doc_date from " +
                              "enx_tab2 ug where ug.client_id||ug.client_unit_id||ug.vch_num||to_char(ug.vch_date,'yyyymmdd')||ug.type = '" + URL + "'";

                            DataTable dtreg = new DataTable();
                            dtreg = sgen.getdata(userCode, mq);

                            if (dtreg.Rows.Count > 0)
                            {
                                model = getedit(model, dtreg, URL);
                                model[0].Col16 = dtreg.Rows[0]["vch_num"].ToString();
                                String[] L1 = System.String.Join(",", dtreg.Rows.OfType<DataRow>().Select(r => r["col5"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems1 = L1;
                                model[0].Col17 = dtreg.Rows[0]["doc_date"].ToString();
                                model[0].Col18 = dtreg.Rows[0]["col6"].ToString();
                                model[0].Col19 = dtreg.Rows[0]["col7"].ToString();
                                model[0].Col21 = dtreg.Rows[0]["col3"].ToString();
                                model[0].Col20 = dtreg.Rows[0]["col8"].ToString();

                                if (sgen.GetSession(MyGuid, "menu_id").ToString() == "33006.3")
                                {
                                    mq1 = "select ug.client_unit_id||ug.vch_num||ug.col10||to_char(ug.vch_date,'yyyymmdd')||ug.type as fstr," +
                           "ug.col10 as asset_doc,ast.asset_serial,ast.asset_name,to_char(ug.date1, '" + sgen.Getsqldateformat() + "') as expected_return_date,ug.col18 as status,(emp.FIRST_NAME || ' ' || REPLACE(emp.MIDDLE_NAME, '0', '') || ' ' || REPLACE(emp.LAST_NAME, '0', '')) as Employee_Name," +
                          "emp.emp_code as Employee_Code,nvl(dg.master_name, '-') as designation,nvl(dp.master_name, '-') as department from enx_tab2 ug inner join emp_master emp" +
                          " on emp.emp_code = ug.col2 and emp.client_unit_id = ug.client_unit_id and emp.type = 'EMP' left join master_setting dp on dp.master_id " +
                          "= emp.emp_dept and dp.type = 'MDP' and find_in_set(dp.client_unit_id,'" + unitid_mst + "')= 1 left join master_setting dg on dg.master_id = " +
                          "emp.emp_desig and dg.type = 'MDG' and find_in_set(dg.client_unit_id, '" + unitid_mst + "') = 1 " +
                          "inner join (select a.vch_num as doc_no,a.col5 as asset_model,a.col3 as asset_name,a.col6 as asset_serial,to_char(a.date1, 'dd/mm/yyy') as invoice_date,a.col8 as invoice_no" +
                           ",a.col8 as original_value,a.col9 as current_value,a.col10 as Warranty,a.col1 as Remark from enx_tab2 a where " +
                           "a.client_unit_id = '" + unitid_mst + "' and a.type = 'ASS') ast on ast.doc_no = ug.col10" +
                          " where ug.client_unit_id = '" + unitid_mst + "' and ug.type = 'AAE' and ug.client_unit_id||ug.vch_num||ug.col10||to_char(ug.vch_date,'yyyymmdd')||ug.type = '" + dtreg.Rows[0]["col5"].ToString() + "'";
                                }

                                if (sgen.GetSession(MyGuid, "menu_id").ToString() == "42003.4")
                                {
                                    mq1 = "select ug.client_unit_id||ug.vch_num||ug.col10||to_char(ug.vch_date,'yyyymmdd')||ug.type as fstr," +
                           //   "ug.col10 as asset_doc,ast.asset_serial,ast.asset_name,to_char(ug.date1, 'dd/MM/YYYY') as expected_return_date,ug.col18 as status,(emp.FIRST_NAME || ' ' || REPLACE(emp.MIDDLE_NAME, '0', '') || ' ' || REPLACE(emp.LAST_NAME, '0', '')) as Employee_Name," +
                           //"emp.vch_num as Employee_Code,nvl(dg.master_name, '-') as designation,nvl(dp.master_name, '-') as department from enx_tab2 ug inner join user_details emp" +
                           "ug.col10 as asset_doc,ast.asset_serial,ast.asset_name,to_char(ug.date1, '" + sgen.Getsqldateformat() + "') as expected_return_date,ug.col18 as status,(emp.FIRST_NAME || ' ' || REPLACE(emp.MIDDLE_NAME, '0', '') || ' ' || REPLACE(emp.LAST_NAME, '0', '')) as Employee_Name," +
                          "emp.vch_num as Employee_Code,nvl(dg.master_name, '-') as designation,nvl(dp.master_name, '-') as department from enx_tab2 ug inner join user_details emp" +
                          " on emp.vch_num = ug.col2  and emp.type = 'CPR' left join master_setting dp on dp.master_id " +
                          "= emp.department and dp.type = 'MDP' and find_in_set(dp.client_unit_id,'" + unitid_mst + "')= 1 left join master_setting dg on dg.master_id = " +
                          "emp.designation and dg.type = 'MDG' and find_in_set(dg.client_unit_id, '" + unitid_mst + "') = 1 " +
                          "inner join (select a.vch_num as doc_no,a.col5 as asset_model,a.col3 as asset_name,a.col6 as asset_serial,to_char(a.date1, 'dd/mm/yyy') as invoice_date,a.col8 as invoice_no" +
                           ",a.col8 as original_value,a.col9 as current_value,a.col10 as Warranty,a.col1 as Remark from enx_tab2 a where " +
                           "a.client_unit_id = '" + unitid_mst + "' and a.type = 'ASS') ast on ast.doc_no = ug.col10" +
                          " where ug.client_unit_id = '" + unitid_mst + "' and ug.type = 'AAU' and ug.client_unit_id||ug.vch_num||ug.col10||to_char(ug.vch_date,'yyyymmdd')||ug.type = '" + dtreg.Rows[0]["col5"].ToString() + "'";
                                }
                                dt = new DataTable();
                                dt = sgen.getdata(userCode, mq1);
                                if (dt.Rows.Count > 0)
                                {
                                    model[0].Col23 = dt.Rows[0]["asset_serial"].ToString();
                                    model[0].Col24 = dt.Rows[0]["asset_name"].ToString();
                                    model[0].Col25 = dt.Rows[0]["Employee_Name"].ToString();
                                    model[0].Col28 = dt.Rows[0]["fstr"].ToString();
                                    model[0].Col30 = dt.Rows[0]["Employee_Code"].ToString();
                                }
                            }
                            else
                            {
                                sgen.showmsg(1, "No Data Found", 1);
                            }
                            break;
                        case "ASSET":
                            if (sgen.GetSession(MyGuid, "menu_id").ToString() == "33006.3")
                            {
                                mq = "select ug.client_unit_id||ug.vch_num||ug.col10||to_char(ug.vch_date,'yyyymmdd')||ug.type as fstr," +
                            "ug.col10 as asset_doc,ast.asset_serial,ast.asset_name,to_char(ug.date1, '" + sgen.Getsqldateformat() + "') as expected_return_date,ug.col18 as status,(emp.FIRST_NAME || ' ' || REPLACE(emp.MIDDLE_NAME, '0', '') || ' ' || REPLACE(emp.LAST_NAME, '0', '')) as Employee_Name," +
                           "emp.emp_code as Employee_Code,nvl(dg.master_name, '-') as designation,nvl(dp.master_name, '-') as department from enx_tab2 ug inner join emp_master emp" +
                           " on emp.emp_code = ug.col2 and emp.client_unit_id = ug.client_unit_id and emp.type = 'EMP' left join master_setting dp on dp.master_id " +
                           "= emp.emp_dept and dp.type = 'MDP' and find_in_set(dp.client_unit_id,'" + unitid_mst + "')= 1 left join master_setting dg on dg.master_id = " +
                           "emp.emp_desig and dg.type = 'MDG' and find_in_set(dg.client_unit_id, '" + unitid_mst + "') = 1 " +
                           "inner join (select a.vch_num as doc_no,a.col5 as asset_model,a.col3 as asset_name,a.col6 as asset_serial,to_char(a.date1, 'dd/mm/yyy') as invoice_date,a.col8 as invoice_no" +
                            ",a.col8 as original_value,a.col9 as current_value,a.col10 as Warranty,a.col1 as Remark from enx_tab2 a where " +
                            "a.client_unit_id = '" + unitid_mst + "' and a.type = 'ASS') ast on ast.doc_no = ug.col10" +
                           " where ug.client_unit_id||ug.vch_num||ug.col10||to_char(ug.vch_date,'yyyymmdd')||ug.type = '" + URL + "'";
                            }

                            if (sgen.GetSession(MyGuid, "menu_id").ToString() == "42003.4")
                            {
                                mq = "select ug.client_unit_id||ug.vch_num||ug.col10||to_char(ug.vch_date,'yyyymmdd')||ug.type as fstr," +
                            //   "ug.col10 as asset_doc,ast.asset_serial,ast.asset_name,to_char(ug.date1, 'dd/MM/YYYY') as expected_return_date,ug.col18 as status,(emp.FIRST_NAME || ' ' || REPLACE(emp.MIDDLE_NAME, '0', '') || ' ' || REPLACE(emp.LAST_NAME, '0', '')) as Employee_Name," +
                            //"emp.vch_num as Employee_Code,nvl(dg.master_name, '-') as designation,nvl(dp.master_name, '-') as department from enx_tab2 ug inner join user_details emp" +
                            "ug.col10 as asset_doc,ast.asset_serial,ast.asset_name,to_char(ug.date1, '" + sgen.Getsqldateformat() + "') as expected_return_date,ug.col18 as status,(emp.FIRST_NAME || ' ' || REPLACE(emp.MIDDLE_NAME, '0', '') || ' ' || REPLACE(emp.LAST_NAME, '0', '')) as Employee_Name," +
   "emp.vch_num as Employee_Code,nvl(dg.master_name, '-') as designation,nvl(dp.master_name, '-') as department from enx_tab2 ug inner join user_details emp" +
                           " on emp.vch_num = ug.col2 and emp.type = 'CPR' left join master_setting dp on dp.master_id " +
                           "= emp.department and dp.type = 'MDP' and find_in_set(dp.client_unit_id,'" + unitid_mst + "')= 1 left join master_setting dg on dg.master_id = " +
                           "emp.designation and dg.type = 'MDG' and find_in_set(dg.client_unit_id, '" + unitid_mst + "') = 1 " +
                           "inner join (select a.vch_num as doc_no,a.col5 as asset_model,a.col3 as asset_name,a.col6 as asset_serial,to_char(a.date1, 'dd/mm/yyy') as invoice_date,a.col8 as invoice_no" +
                            ",a.col8 as original_value,a.col9 as current_value,a.col10 as Warranty,a.col1 as Remark from enx_tab2 a where " +
                            "a.client_unit_id = '" + unitid_mst + "' and a.type = 'ASS') ast on ast.doc_no = ug.col10" +
                           " where ug.client_unit_id||ug.vch_num||ug.col10||to_char(ug.vch_date,'yyyymmdd')||ug.type = '" + URL + "'";
                            }
                            dtreg = sgen.getdata(userCode, mq);
                            if (dtreg.Rows.Count > 0)
                            {
                                model[0].Col23 = dtreg.Rows[0]["asset_serial"].ToString();
                                model[0].Col24 = dtreg.Rows[0]["asset_name"].ToString();
                                model[0].Col25 = dtreg.Rows[0]["Employee_Name"].ToString();
                                model[0].Col28 = dtreg.Rows[0]["fstr"].ToString();
                                model[0].Col30 = dtreg.Rows[0]["Employee_Code"].ToString();
                            }
                            else
                            {
                                sgen.showmsg(1, "No Data Found", 1);
                            }

                            break;
                    }
                    break;
                #endregion
                #region sub_legis
                case "sub_legis":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            mq = "select client_id,client_unit_id,master_entby,classid,master_entdate,master_id,vch_num,master_name from master_setting where (client_id||client_unit_id||vch_num||to_char(vch_date,'yyyymmdd')||type) = '" + URL + "'";
                            DataTable dtreg = new DataTable();
                            dtreg = sgen.getdata(userCode, mq);

                            TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.legislationstype(userCode, unitid_mst);
                            if (dtreg.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "EDMODE", "Y");
                                model[0].Col1 = dtreg.Rows[0]["client_id"].ToString();
                                model[0].Col2 = dtreg.Rows[0]["client_unit_id"].ToString();
                                model[0].Col3 = dtreg.Rows[0]["master_entby"].ToString();
                                model[0].Col4 = dtreg.Rows[0]["master_entdate"].ToString();
                                model[0].Col8 = "client_id||client_unit_id||vch_num|| to_char(vch_date, 'yyyymmdd')|| type = '" + URL + "'";
                                model[0].Col13 = "Update";
                                model[0].Col100 = "Update & New";
                                model[0].Col121 = "U";
                                model[0].Col122 = "<u>U</u>pdate";
                                model[0].Col123 = "Update & Ne<u>w</u>";
                                model[0].Col16 = dtreg.Rows[0]["vch_num"].ToString();
                                String[] L1 = System.String.Join(",", dtreg.Rows.OfType<DataRow>().Select(r => r["classid"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems1 = L1;
                                model[0].Col17 = dtreg.Rows[0]["master_name"].ToString();
                            }
                            break;
                    }
                    break;
                #endregion
                #region hr report
                case "hr_report":
                    switch (btnval.ToUpper())
                    {
                        case "ASSSET":
                            Make_query(viewName, "Detailed Asset", "ASSSETDET", "0", URL, "", MyGuid);
                            ViewBag.scripCall = "callFoo('Detailed Asset');";
                            //sgen.SetSession(MyGuid, "PURRPTBTN", null);
                            break;
                        case "ASEMP":
                            Make_query(viewName, "Employee Wise Assets List", "ASEMPDET", "0", URL, "", MyGuid);
                            ViewBag.scripCall = "callFoo('Employee Wise Assets List');";
                            //sgen.SetSession(MyGuid, "PURRPTBTN", null);
                            break;
                    }
                    break;
                #endregion
                #region my_prf2
                case "my_prf2":
                    switch (btnval.ToUpper())
                    {
                        case "DETAIL":
                            //mq = "select (emp.client_id||emp.client_unit_id||emp.vch_num||to_char(emp.vch_date,'yyyymmdd')||emp.type) as fstr," +
                            //     "(emp.FIRST_NAME|| ' '|| REPLACE(emp.MIDDLE_NAME,'0','')|| ' '||REPLACE(emp.LAST_NAME,'0','')) as Employee_Name," +
                            //     "emp.emer_contact_no,emp.ent_by,emp.ent_date,emp.rec_id,emp.client_id,emp.client_unit_id,emp.emer_contact_name,emp.emer_contact_relation,emp.gender as Gender," +
                            //     "(to_number(to_char(utc_timestamp(), 'yyyy')) - to_number(to_char(emp.st_dt, 'yyyy'))) as years," +
                            //     "trunc(months_between(utc_timestamp(),emp.st_dt)) as months,floor(utc_timestamp() - add_months(emp.st_dt,trunc(months_between(utc_timestamp(),emp.st_dt)))) days," +
                            //     "emp.emp_code as Employee_Code,emp.emp_address,emp.old_empcode as OldEmpCode,emp.External_EmpNo,to_char(emp.dom, '" + sgen.Getsqldateformat() + "') as DOM" +
                            //     ",to_char(emp.dob, '" + sgen.Getsqldateformat() + "') as DOB,emp.addr Address,(replace(emp.per_address,'0','')||' '||replace(emp.per_pincode,'0','')||' '||replace(emp.per_city,'0','')||' '||replace(emp.per_country,'0','')) per_Address,to_char(emp.st_dt, '" + sgen.Getsqldateformat() + "') " +
                            //     "as date_of_join,emp.contact_no as ContactNo,emp.alt_contact_no as Alt_ContactNo,emp.email_id as Per_Email,off_email " +
                            //     "Offi_Email,emp.pan_no as PANNo,nvl(bk.master_name, '-') as bank_name,emp.account_no as bank_acc,emp.ifsc_code as bank_ifsc," +
                            //     "dp.master_name emp_dept, nvl(dg.master_name, '-') emp_desig from emp_master emp inner join master_setting dp on " +
                            //     "dp.master_id = emp.emp_dept and dp.type = 'MDP' and find_in_set(emp.client_id, dp.client_id)= 1 and " +
                            //     "find_in_set(emp.client_unit_id, dp.client_unit_id)= 1 left join master_setting dg on dg.master_id = emp.emp_desig " +
                            //     "and dg.type = 'MDG' and find_in_set(emp.client_id, dg.client_id)= 1 and " +
                            //     "find_in_set(emp.client_unit_id, dg.client_unit_id)= 1 left join master_setting bk on bk.master_id = emp.bank_name and" +
                            //     " bk.type = 'ABD' and find_in_set(emp.client_id, bk.client_id)= 1 and find_in_set(emp.client_unit_id, bk.client_unit_id)= 1 " +
                            //     "inner join user_details ud on ud.emp_id = emp.vch_num and ud.type='CPR' and ud.client_id=emp.client_id and ud.client_unit_id=emp.client_unit_id " +
                            //     "where emp.client_id = '" + clientid_mst + "' and emp.client_unit_id = '" + unitid_mst + "' and emp.type = 'EMP' and emp.emp_status != 'R' " +
                            //     "and(case when to_char(emp.ex_dt, 'yyyy') = '1900' then 1 when " +
                            //     "emp.ex_dt > to_date(to_char(utc_timestamp()), '" + sgen.Getsqldateformat() + "') then 1 else 0 end)= 1 and ud.vch_num='" + Convert.ToInt32(userid_mst) + "'";

                            mq = "select (emp.client_id||emp.client_unit_id||emp.vch_num||to_char(emp.vch_date,'yyyymmdd')||emp.type) as fstr,emp.vch_num,emp.ismarried as Is_Married,emp.spouse_name as Spouse_Name,emp.havechild as Have_Child,emp.child_count as Child_Count,emp.f_name as Father_Name,nvl(emp.prob, '-') as prabation_days,lc.master_name as locregion,e.empname as reporting_ro,nvl(en.master_name, '-') grade,nvl(emp.pop, '-') as posting_place,nvl(emp.notempr, '-') as notice_period_amplr,nvl(emp.notemp, '-') as notice_period_emp,rl.master_name as religion,cs.country_name as nationality,emp.pob as Birth_Place,emp.m_name as Mother_Name,emp.blood_grp as Blood_group,to_char(emp.dom, '" + sgen.Getsqldateformat() + "') as marriage_date,emp.isspouseworking as IsSpWorking,emp.spouse_org as Spouse_Org,emp.spouse_desig as Spouse_Desig,(emp.FIRST_NAME || ' ' || REPLACE(emp.MIDDLE_NAME, '0', '') || ' ' || REPLACE(emp.LAST_NAME, '0', '')) as Employee_Name,emp.emer_contact_no,emp.ent_by,emp.ent_date,emp.rec_id,emp.client_id,emp.client_unit_id,emp.emer_contact_name,emp.emer_contact_relation,emp.gender as Gender,(to_number(to_char(utc_timestamp(), 'yyyy')) - to_number(to_char(emp.st_dt, 'yyyy'))) as years,trunc(months_between(utc_timestamp(), emp.st_dt)) as months,floor(utc_timestamp() - add_months(emp.st_dt, trunc(months_between(utc_timestamp(), emp.st_dt)))) days,emp.emp_code as Employee_Code,emp.emp_address,emp.old_empcode as OldEmpCode,emp.External_EmpNo,to_char(emp.dob, '" + sgen.Getsqldateformat() + "') as DOB,emp.addr Address,(replace(emp.per_address, '0', '') || ' ' || replace(emp.per_pincode, '0', '') || ' ' || replace(emp.per_city, '0', '') || ' ' || replace(emp.per_country, '0', '')) per_Address,to_char(emp.st_dt, '" + sgen.Getsqldateformat() + "') as date_of_join,to_char(emp.jconfdt, '" + sgen.Getsqldateformat() + "') as joining_confirm,emp.contact_no as ContactNo,emp.alt_contact_no as Alt_ContactNo,emp.email_id as Per_Email,off_email Offi_Email, emp.pan_no as PANNo,nvl(bk.master_name, '-') as bank_name,emp.account_no as bank_acc,emp.ifsc_code as bank_ifsc,dp.master_name emp_dept,nvl(dg.master_name, '-') emp_desig from emp_master emp inner join master_setting dp on dp.master_id = emp.emp_dept and dp.type = 'MDP' and " +
                                "find_in_set(emp.client_id, dp.client_id) = 1 and find_in_set(emp.client_unit_id, dp.client_unit_id)= 1 left join master_setting dg on dg.master_id = emp.emp_desig and dg.type = 'MDG' and find_in_set(emp.client_id, dg.client_id)= 1 and find_in_set(emp.client_unit_id, dg.client_unit_id)= 1 left join master_setting bk on bk.master_id = emp.bank_name and bk.type = 'ABD' and find_in_set(emp.client_id, bk.client_id)= 1 and find_in_set(emp.client_unit_id, bk.client_unit_id) = 1 INNER join(select distinct en.col1, sg.master_name, en.client_unit_id from enx_tab en INNER join master_setting sg on sg.master_id = en.col2 and sg.type = 'KGM' and sg.client_unit_id = '" + unitid_mst + "' where en.type = 'KSG' and en.client_unit_id = '" + unitid_mst + "') en on en.col1 = emp.emp_dept and en.client_unit_id = '" + unitid_mst + "' INNER join master_setting lc on lc.master_id = emp.locreg and lc.type = 'KLR' and lc.client_unit_id = '" + unitid_mst + "' inner join(select distinct (e.FIRST_NAME|| ' ' || REPLACE(e.MIDDLE_NAME, '0', '') || ' ' || REPLACE(e.LAST_NAME, '0', '')) empname,e.vch_num from emp_master e where e.type = 'EMP') e on e.vch_num = emp.rptto inner join(select DISTINCT alpha_2, country_name from country_state order by country_name) cs on cs.alpha_2 = emp.nationality inner join master_setting rl on rl.master_id = emp.religion  and rl.type = 'ERT' and find_in_set(rl.client_unit_id, emp.client_unit_id)= 1 inner join user_details ud on ud.emp_id = emp.vch_num and ud.type = 'CPR' and ud.client_id = emp.client_id and ud.client_unit_id = emp.client_unit_id " +
                                "where emp.client_id = '" + clientid_mst + "' and emp.client_unit_id = '" + unitid_mst + "' and emp.type = 'EMP' and emp.emp_status != 'R' and(case when to_char(emp.ex_dt, 'yyyy') = '1900' then 1 when emp.ex_dt > to_date(to_char(utc_timestamp()), '" + sgen.Getsqldateformat() + "') then 1 else 0 end)= 1 and ud.vch_num='" + Convert.ToInt32(userid_mst) + "'";

                            DataTable bdt = new DataTable();
                            bdt = sgen.getdata(userCode, mq);
                            if (bdt.Rows.Count > 0)
                            {
                                model[0].Col17 = bdt.Rows[0]["Employee_Code"].ToString();  //emp code
                                model[0].Col18 = bdt.Rows[0]["Employee_Name"].ToString();  //empp name
                                model[0].Col19 = bdt.Rows[0]["DOB"].ToString();
                                model[0].Col20 = bdt.Rows[0]["days"].ToString() + " / " + bdt.Rows[0]["months"].ToString();
                                model[0].Col22 = bdt.Rows[0]["Father_Name"].ToString();
                                model[0].Col23 = bdt.Rows[0]["Is_Married"].ToString();
                                model[0].Col21 = bdt.Rows[0]["Blood_group"].ToString();
                                model[0].Col24 = bdt.Rows[0]["marriage_date"].ToString();
                                model[0].Col25 = bdt.Rows[0]["Spouse_Name"].ToString();
                                model[0].Col26 = bdt.Rows[0]["nationality"].ToString();
                                model[0].Col27 = "-";
                                model[0].Col28 = bdt.Rows[0]["Birth_Place"].ToString();
                                model[0].Col29 = bdt.Rows[0]["nationality"].ToString();
                                model[0].Col30 = bdt.Rows[0]["religion"].ToString();
                                model[0].Col31 = (bdt.Rows[0]["nationality"].ToString() != "India") ? "YES" : "No";
                                model[0].Col32 = "-";
                                model[0].Col33 = "-";
                                model[0].Col34 = bdt.Rows[0]["per_email"].ToString();

                                model[0].Col35 = bdt.Rows[0]["emp_dept"].ToString();
                                model[0].Col36 = bdt.Rows[0]["emp_desig"].ToString();
                                model[0].Col37 = bdt.Rows[0]["grade"].ToString();
                                model[0].Col38 = bdt.Rows[0]["locregion"].ToString();
                                model[0].Col39 = "";
                                model[0].Col40 = bdt.Rows[0]["reporting_ro"].ToString();
                                model[0].Col41 = bdt.Rows[0]["date_of_join"].ToString();
                                model[0].Col42 = bdt.Rows[0]["joining_confirm"].ToString();
                                model[0].Col43 = bdt.Rows[0]["prabation_days"].ToString();
                                model[0].Col44 = bdt.Rows[0]["notice_period_emp"].ToString();

                                model[0].Col45 = bdt.Rows[0]["emp_address"].ToString();
                                model[0].Col46 = bdt.Rows[0]["per_Address"].ToString();
                                model[0].Col47 = bdt.Rows[0]["ContactNo"].ToString();
                                model[0].Col48 = bdt.Rows[0]["emer_contact_no"].ToString();
                                model[0].Col49 = bdt.Rows[0]["bank_acc"].ToString();
                                model[0].Col50 = bdt.Rows[0]["bank_acc"].ToString();
                                model[0].Col51 = "-";
                                model[0].Col52 = "";
                                model[0].Col53 = "";
                                model[0].Col54 = "";
                                DataTable dtf = new DataTable();
                                dtf = sgen.getdata(userCode, "select rec_id,file_name,file_path,col1 from file_tab where" +
                                    " ref_code='" + bdt.Rows[0]["vch_num"].ToString() + "' and type='EMP' and " +
                                    "client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "' and col1='Employee Photo'");
                                List<Tmodelmain> ltmf = new List<Tmodelmain>();
                                foreach (DataRow drf in dtf.Rows)
                                {
                                    Tmodelmain tmf = new Tmodelmain();
                                    tmf.Col1 = drf["file_name"].ToString();
                                    tmf.Col2 = drf["col1"].ToString();
                                    tmf.Col4 = drf["file_path"].ToString();
                                    tmf.Col3 = drf["rec_id"].ToString();
                                    ltmf.Add(tmf);
                                }
                                model[0].LTM1 = ltmf;
                            }
                            else
                            {
                                model[0].Col13 = "Update";
                                ViewBag.vsave = "disabled='disabled'";
                            }
                            break;
                    }
                    break;
                #endregion
                #region service master
                case "serc_master":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            mq = "select ug.client_id||ug.client_unit_id||ug.vch_num||to_char(ug.vch_date,'yyyymmdd')||ug.type as fstr" +
                                ",ug.col5,ug.col4,ug.col3,ug.col6,ug.col7,ug.col8,ug.client_id,ug.client_unit_id,ug.ent_by,ug.rec_id,ug.ent_date,ug.vch_num,to_char(ug.vch_date,'" + sgen.Getsqldateformat() + "') as doc_date from " +
                                "enx_tab2 ug where ug.client_id||ug.client_unit_id||ug.vch_num||to_char(ug.vch_date,'yyyymmdd')||ug.type = '" + URL + "'";
                            DataTable dtreg = new DataTable();
                            dtreg = sgen.getdata(userCode, mq);
                            if (dtreg.Rows.Count > 0)
                            {
                                model = getedit(model, dtreg, URL);
                                mq1 = "select sg.icode||to_char(sg.vch_date,'yyyymmdd')||sg.type as fstr,(case when substr(sg.icode,1,2)<>'99' then substr(sg.icode,1,1) else substr(sg.icode,1,2) end) Main_Grp_id," +
                         "substr(sg.icode,1,3) Item_grp_id,gp.master_name||'-'||sg.iname Item_Grp,sg.icode Item_sgrp_id" +
                         " from item sg " +
                         "inner join master_setting gp on gp.master_id=substr(sg.icode,1,3) and gp.type='KIG' and find_in_set(gp.client_unit_id,'" + unitid_mst + "')=1 " +
                         "where sg.type='SG' and find_in_set(sg.client_unit_id,'" + unitid_mst + "')=1";
                                dt = new DataTable();
                                dt = sgen.getdata(userCode, mq1);
                                if (dt.Rows.Count > 0)
                                {
                                    foreach (DataRow dr in dt.Rows)
                                    {
                                        mod1.Add(new SelectListItem { Text = dr["Item_Grp"].ToString(), Value = dr["Item_sgrp_id"].ToString() });
                                    }
                                }
                                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
                                TempData[MyGuid + "_TList3"] = model[0].TList3 = mod3 = cmd_Fun.unitmeas(userCode, unitid_mst);
                                TempData[MyGuid + "_TList4"] = model[0].TList4 = mod4 = cmd_Fun.hsn(userCode, unitid_mst);
                                model[0].Col16 = dtreg.Rows[0]["vch_num"].ToString();
                                String[] L1 = System.String.Join(",", dtreg.Rows.OfType<DataRow>().Select(r => r["col6"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems1 = L1;
                                String[] L3 = System.String.Join(",", dtreg.Rows.OfType<DataRow>().Select(r => r["col7"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems3 = L3;
                                String[] L4 = System.String.Join(",", dtreg.Rows.OfType<DataRow>().Select(r => r["col8"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems4 = L4;
                                model[0].Col17 = dtreg.Rows[0]["col3"].ToString();
                                model[0].Col20 = dtreg.Rows[0]["col4"].ToString();

                                //   mq1 = "select sg.icode||to_char(sg.vch_date,'yyyymmdd')||sg.type as fstr,(case when substr(sg.icode,1,2)<>'99' then substr(sg.icode,1,1) else substr(sg.icode,1,2) end) Main_Grp_id," +
                                //"substr(sg.icode,1,3) Item_grp_id,gp.master_name Item_Grp,sg.icode Item_sgrp_id," +
                                //"sg.iname Item_subgrp from item sg " +
                                //"inner join master_setting gp on gp.master_id=substr(sg.icode,1,3) and gp.type='KIG' and find_in_set(gp.client_unit_id,'" + unitid_mst + "')=1 " +
                                //"where sg.type='SG' and find_in_set(sg.client_unit_id,'" + unitid_mst + "')=1 and sg.icode = '"+ dtreg.Rows[0]["col5"].ToString() + "'";
                                //   dt = sgen.getdata(userCode, mq1);
                                //   if (dt.Rows.Count > 0)
                                //   {
                                //       model[0].Col18 = dt.Rows[0]["MainGrp"].ToString() + " - " + dt.Rows[0]["ItemGrp"].ToString() + " - " + dt.Rows[0]["Itemsubgrp"].ToString();
                                //       model[0].Col19 = dt.Rows[0]["Isgid"].ToString();
                                //   }
                            }
                            else
                            {
                                sgen.showmsg(1, "No Data Found", 1);
                            }
                            break;
                    }
                    break;
                #endregion
                #region srvice invoce
                case "srv_inv":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "INVOICE":
                        case "DRAFT":
                        case "VIEW":
                            if (btnval.ToUpper() == "EDIT" || btnval.ToUpper() == "VIEW")
                            {
                                mq = "select a.*,to_char(convert_tz(a.vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') vch_date1," +
                                    "to_char(convert_tz(a.podate,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') podate1,e.col3 sername from itransaction a " +
                                    "inner join enx_tab2 e on e.vch_num=a.icode and e.type='SMT' and e.client_unit_id=a.client_unit_id " +
                                "where a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date, 'yyyymmdd')|| a.type= '" + URL + "'";
                            }
                            else
                            {
                                mq = "select a.*,to_char(convert_tz(a.vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') vch_date1," +
                                    "to_char(convert_tz(a.podate,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') podate1," +
                                    "to_char(convert_tz(a.date1,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') datefrom," +
                                    "to_char(convert_tz(a.date2,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') dateto,e.col3 sername from itransactionc a " +
                                    "inner join enx_tab2 e on e.vch_num=a.icode and e.type='SMT' and e.client_unit_id=a.client_unit_id " +
                                "where a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date, 'yyyymmdd')|| a.type= '" + URL + "'";
                            }
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                #region 1.pay_term
                                TempData[MyGuid + "_TLList1"] = model[0].TList1 = mod1 = cmd_Fun.payterm2(userCode, unitid_mst);
                                #endregion
                                if (btnval.ToUpper() == "EDIT" || btnval.ToUpper() == "VIEW")
                                {
                                    model = getedit(model, dt, URL);
                                    model[0].Col16 = dt.Rows[0]["vch_num"].ToString();
                                    model[0].Col48 = dt.Rows[0]["vch_date1"].ToString();
                                    model[0].Col28 = dt.Rows[0]["podate1"].ToString();
                                }
                                else if (btnval.ToUpper() == "DRAFT")
                                {
                                    model[0].Col28 = dt.Rows[0]["podate1"].ToString();
                                    sgen.SetSession(MyGuid, "EDMODE", "N");
                                }
                                else
                                {
                                    string mq3 = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                                    model[0].Col16 = sgen.genNo(userCode, mq3, 6, "auto_genid");
                                    model[0].Col48 = sgen.server_datetime_local(userCode);
                                    model[0].Col28 = sgen.server_datetime_local(userCode);
                                    sgen.SetSession(MyGuid, "EDMODE", "N");
                                }
                                String[] L1 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["pay_term"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems1 = L1;
                                mq1 = "select a.c_name as name,a.c_gstin as gstin,a.addr as Address,a.vch_num,a.tor,nvl(ba.country_name,'-') as country_name," +
             "nvl(ba.state_name,'-') state_name,nvl(ba.city_name,'-') as city_name,a.pincode_2 from clients_mst a left join country_state ba on ba.rec_id = a.city2 where find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 and a.type='BCD' and substr(a.vch_num,0,3)='303' and a.vch_num='" + dt.Rows[0]["acode"].ToString() + "'";
                                DataTable dtp = sgen.getdata(userCode, mq1);
                                if (dtp.Rows.Count > 0)
                                {
                                    model[0].Col49 = dtp.Rows[0]["vch_num"].ToString();
                                    model[0].Col20 = dtp.Rows[0]["name"].ToString();
                                    model[0].Col21 = dtp.Rows[0]["address"].ToString();
                                    model[0].Col22 = dtp.Rows[0]["gstin"].ToString();
                                    model[0].Col52 = dtp.Rows[0]["tor"].ToString();
                                    model[0].Col75 = dtp.Rows[0]["city_name"].ToString();
                                    model[0].Col76 = dtp.Rows[0]["state_name"].ToString();
                                    model[0].Col77 = dtp.Rows[0]["country_name"].ToString();
                                    model[0].Col78 = dtp.Rows[0]["pincode_2"].ToString();
                                }
                                mq2 = "select client_id||client_unit_id||vch_num||to_char(vch_date, 'yyyymmdd')|| type as fstr,vch_num as per_id," +
         "master_name as sales_person,CONT_PERSON_EMAIL as email_id,GROUP_ID as mobile_no from master_setting " +
         "where  type = 'SPR' and client_unit_id = '" + unitid_mst + "' and vch_num='" + dt.Rows[0]["pono"].ToString() + "'";
                                DataTable dt3 = sgen.getdata(userCode, mq2);
                                if (dt3.Rows.Count > 0)
                                {
                                    model[0].Col24 = dt3.Rows[0]["sales_person"].ToString();
                                    model[0].Col25 = dt3.Rows[0]["per_id"].ToString();
                                    model[0].Col26 = dt3.Rows[0]["mobile_no"].ToString();
                                    model[0].Col27 = dt3.Rows[0]["email_id"].ToString();
                                }
                                model[0].Col31 = dt.Rows[0]["totremark"].ToString();
                                model[0].Col32 = dt.Rows[0]["cond"].ToString();
                                model[0].Col33 = dt.Rows[0]["basicamt"].ToString();
                                model[0].Col34 = dt.Rows[0]["igst"].ToString();
                                model[0].Col35 = dt.Rows[0]["cgst"].ToString();
                                model[0].Col36 = dt.Rows[0]["sgst"].ToString();
                                model[0].Col37 = dt.Rows[0]["ginstlchrg"].ToString();
                                model[0].Col38 = dt.Rows[0]["gserchrg"].ToString();
                                model[0].Col39 = dt.Rows[0]["gamc"].ToString();
                                model[0].Col40 = dt.Rows[0]["gloadchrg"].ToString();
                                model[0].Col62 = dt.Rows[0]["gtaxamt"].ToString();
                                model[0].Col23 = dt.Rows[0]["req_by"].ToString();
                                model[0].dt1 = model[0].dt1.Clone();
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["SNo"] = i + 1;
                                    dr["SERVICE_CODE"] = dt.Rows[i]["icode"].ToString();
                                    dr["SERVICE_NAME"] = dt.Rows[i]["sername"].ToString();
                                    dr["SAC_Code"] = dt.Rows[i]["hsno"].ToString();
                                    dr["UOM"] = dt.Rows[i]["uom"].ToString();
                                    dr["TAXRATE"] = dt.Rows[i]["taxrate"].ToString();
                                    dr["QUANTITY"] = dt.Rows[i]["ORDQTY"].ToString();
                                    dr["RATE"] = dt.Rows[i]["irate"].ToString();
                                    dr["DISC_TYPE"] = dt.Rows[i]["disctype"].ToString();
                                    dr["DISC_RATE"] = dt.Rows[i]["discrate"].ToString();
                                    dr["SAMOUNT"] = dt.Rows[i]["Iamount"].ToString();
                                    dr["taxamount"] = dt.Rows[i]["taxamt"].ToString();
                                    dr["discamount"] = dt.Rows[i]["discamt"].ToString();
                                    dr["lineamount"] = dt.Rows[i]["lineamount"].ToString();
                                    dr["Remark"] = dt.Rows[i]["iremark"].ToString();
                                    model[0].dt1.Rows.Add(dr);
                                }
                                model[0].dt1.AcceptChanges();
                                //other charges LTM
                                mq1 = "select ch.master_name chrgname,en.col1,en.col2,en.col3,en.col4,en.col5,en.col6,en.col7,en.col8,en.col9,en.r_no from enx_tab en " +
                                    "inner join master_setting ch on en.col1=ch.master_id and ch.type='MR0' and find_in_set(ch.client_unit_id,en.client_unit_id)=1 " +
                                    "where (en.client_id||en.client_unit_id||en.vch_num||to_char(en.vch_date, 'yyyymmdd')|| en.type) = '" + URL + "'";
                                dt = sgen.getdata(userCode, mq1);
                                if (dt.Rows.Count > 0)
                                {
                                    model[0].LTM1 = new List<Tmodelmain>();
                                    foreach (DataRow dr in dt.Rows)
                                    {
                                        model[0].LTM1.Add(new Tmodelmain
                                        {
                                            Col13 = dr["col3"].ToString(),//chrgrtid
                                            Col14 = dr["r_no"].ToString(),//rno
                                            Col15 = dr["col1"].ToString(),//chrgid
                                            Col16 = dr["col2"].ToString(),//chrgamt
                                            Col17 = dr["col4"].ToString(),//igstrt
                                            Col18 = dr["col5"].ToString(),//igstamt
                                            Col19 = dr["col6"].ToString(),//cgstrt
                                            Col20 = dr["col7"].ToString(),//cgstamt
                                            Col21 = dr["col8"].ToString(),//sgstrt
                                            Col22 = dr["col9"].ToString(),//sgstamt
                                            Col23 = dr["chrgname"].ToString(),//chrgname
                                        });
                                    }
                                }
                            }
                            break;
                        case "PRINT":
                        case "PRINTDRFT":

                            if (btnval.ToUpper() == "PRINT")
                            {
                                mq = "select a.*,to_char(convert_tz(a.vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') vch_date1," +
                                    "c.c_name as Party_Name,c.c_gstin as Party_Gstin,c.addr as Party_Address,c.tor,c.cpcont,c.panno PAN_NUMBER,c.comp_email ORG_EMAIL_ID," +
                                    "c.tanno TAN_NUMBER,e.col3 sername from itransaction a " +
                                    "inner join clients_mst c on a.acode = c.vch_num and c.type = 'BCD' and find_in_set(c.client_unit_id, a.client_unit_id)=1 " +
                                    "inner join enx_tab2 e on e.vch_num=a.icode and e.type='SMT' and e.client_unit_id=a.client_unit_id " +
                                    "where a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date, 'yyyymmdd')|| a.type= '" + URL + "'";
                            }
                            else
                            {
                                mq = "select a.*,to_char(convert_tz(a.vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') vch_date1," +
                                    "c.c_name as Party_Name,c.c_gstin as Party_Gstin,c.addr as Party_Address,c.tor,c.cpcont,c.panno PAN_NUMBER,c.comp_email ORG_EMAIL_ID," +
                                    "c.tanno TAN_NUMBER,e.col3 sername from itransactionc a " +
                                    "inner join clients_mst c on a.acode = c.vch_num and c.type = 'BCD' and find_in_set(c.client_unit_id, a.client_unit_id)=1 " +
                                    "inner join enx_tab2 e on e.vch_num=a.icode and e.type='SMT' and e.client_unit_id=a.client_unit_id " +
                                    "where a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date, 'yyyymmdd')|| a.type= '" + URL + "'";
                            }
                            dt = sgen.getdata(userCode, mq);
                            #region 1.pay_term
                            TempData[MyGuid + "_TLList1"] = model[0].TList1 = mod1 = cmd_Fun.payterm(userCode, unitid_mst, out defcall);
                            #endregion
                            if (dt.Rows.Count > 0)
                            {
                                dt.TableName = "prepcur";
                                sgen.open_report_bydt_xml(userCode, dt, "service_inv", "Service Invoice Report");
                                ViewBag.scripCall += "showRptnew('Service Invoice Report');disableForm();";
                            }
                            break;
                        case "SEND":
                            mq = "select a.*,to_char(convert_tz(a.vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') vch_date1,c.c_name as Party_Name,c.c_gstin as Party_Gstin,c.addr as Party_Address,c.tor,c.cpcont,c.panno PAN_NUMBER,c.comp_email ORG_EMAIL_ID,c.tanno TAN_NUMBER from itransaction a " +
                        " inner join clients_mst c on a.acode = c.vch_num and c.type = 'BCD' and find_in_set(c.client_unit_id, a.client_unit_id)=1 " +
                                " where a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date, 'yyyymmdd')|| a.type= '" + URL + "'";
                            dt = sgen.getdata(userCode, mq);
                            #region 1.pay_term
                            TempData[MyGuid + "_TLList1"] = model[0].TList1 = mod1 = cmd_Fun.payterm(userCode, unitid_mst, out defcall);
                            #endregion
                            if (dt.Rows.Count > 0)
                            {
                                mq1 = "select a.c_name as name,a.c_gstin as gstin,a.addr as Address,a.vch_num,a.tor,a.comp_email EMAIL_ID from clients_mst a where find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 and a.type='BCD' and substr(a.vch_num,0,3)='303' and a.vch_num='" + dt.Rows[0]["acode"].ToString() + "'";
                                DataTable dtp = sgen.getdata(userCode, mq1);
                                if (dtp.Rows.Count > 0)
                                {
                                    dt.TableName = "prepcur";
                                    sgen.open_report_bydt_xml(userCode, dt, "service_inv", "Service Invoice Report");
                                    var rd = sgen.getRptDoc(userCode, clientid_mst, unitid_mst);
                                    var streaminput = rd.ExportToStream(ExportFormatType.PortableDocFormat);
                                    bool ok = sendmail_stream(userCode, clientid_mst, dtp.Rows[0]["EMAIL_ID"].ToString(), "", streaminput, "service_invoice.pdf", "Dear , " + dtp.Rows[0]["name"].ToString() + " \n Download Your Invoice", "Service Invoice");
                                    if (ok)
                                    {
                                        ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Invoice Has Been Sent');disableForm();";
                                    }
                                    else
                                    {
                                        ViewBag.scripCall += "mytoast('error', 'toast-top-right', 'Invoice Not Sent');disableForm();";
                                    }
                                }
                            }
                            break;
                        case "PARTY":
                            mq = "select a.c_name as name,a.c_gstin as gstin,a.addr as Address,a.vch_num,a.tor,nvl(ba.country_name,'-') as country_name," +
     "nvl(ba.state_name,'-') state_name,nvl(ba.city_name,'-') as city_name,a.pincode_2 from clients_mst a left join country_state ba on ba.rec_id = a.city2 where a.vch_num||To_Char(a.vch_date, 'yyyymmdd')|| a.type = '" + URL + "'";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                model[0].Col49 = dt.Rows[0]["vch_num"].ToString();
                                model[0].Col20 = dt.Rows[0]["name"].ToString();
                                model[0].Col21 = dt.Rows[0]["address"].ToString();
                                model[0].Col22 = dt.Rows[0]["gstin"].ToString();
                                model[0].Col52 = dt.Rows[0]["tor"].ToString();
                                model[0].Col75 = dt.Rows[0]["city_name"].ToString();
                                model[0].Col76 = dt.Rows[0]["state_name"].ToString();
                                model[0].Col77 = dt.Rows[0]["country_name"].ToString();
                                model[0].Col78 = dt.Rows[0]["pincode_2"].ToString();
                            }
                            sgen.SetSession(MyGuid, "btnval", null);
                            sgen.SetSession(MyGuid, "SSEEKVAL", null);
                            break;
                        case "PER":
                            mq = "select client_id||client_unit_id||vch_num||to_char(vch_date, 'yyyymmdd')|| type as fstr,vch_num as per_id," +
            "master_name as sales_person,CONT_PERSON_EMAIL as email_id,GROUP_ID as mobile_no from master_setting " +
            "where client_id||client_unit_id||vch_num||to_char(vch_date, 'yyyymmdd')|| type = '" + URL + "'";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                model[0].Col24 = dt.Rows[0]["sales_person"].ToString();
                                model[0].Col25 = dt.Rows[0]["per_id"].ToString();
                                model[0].Col26 = dt.Rows[0]["mobile_no"].ToString();
                                model[0].Col27 = dt.Rows[0]["email_id"].ToString();
                            }
                            break;
                        case "ITEM":
                            mq = "select sv.client_id||sv.client_unit_id||sv.vch_num||to_char(sv.vch_date,'yyyymmdd')||sv.type as fstr" +
                                ",sv.vch_num as service_code,sv.col3 as service_name,um.master_name as UOM,nvl(hsn.master_name, '-') as hsn" +
                                ",nvl(hsn.group_name, '0') taxrate,sv.col4 as description from enx_tab2 sv left join master_setting um on " +
                                "um.master_id = sv.col7 and um.type = 'UMM' and find_in_set(um.client_unit_id, sv.client_unit_id)= 1 left join" +
                                " master_setting hsn on hsn.master_id = sv.col8 and hsn.type = 'HSN' and find_in_set(hsn.client_unit_id," +
                                " sv.client_unit_id)= 1 where sv.client_id||sv.client_unit_id||sv.vch_num||to_char(sv.vch_date,'yyyymmdd')||sv.type in ('" + URL + "')";

                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                if (model[0].dt1.Rows[0]["SERVICE_CODE"].ToString().Trim().Equals("-")) { model[0].dt1.Rows.RemoveAt(0); }
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["ADD_REMOVE"] = dt.Rows[i]["fstr"].ToString();
                                    dr["SNo"] = i + 1;
                                    dr["SERVICE_CODE"] = dt.Rows[i]["service_code"].ToString();
                                    dr["SERVICE_NAME"] = dt.Rows[i]["service_name"].ToString();
                                    dr["SAC_Code"] = dt.Rows[i]["hsn"].ToString();
                                    dr["UOM"] = dt.Rows[i]["uom"].ToString();
                                    dr["TaxRate"] = dt.Rows[i]["taxrate"].ToString();
                                    model[0].dt1.Rows.Add(dr);
                                }
                                model[0].dt1.AcceptChanges();
                            }
                            model[0].Col100 = tm.Col100;
                            break;
                        case "CHRGS":
                            mq = "select master_id,master_name from master_setting where (master_id||to_char(vch_date,'yyyymmdd')||type) in ('" + URL + "')";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                int i = 0;
                                if (model[0].LTM1 == null) { model[0].LTM1 = new List<Tmodelmain>(); }
                                if (model[0].LTM1.Count == 0) { model[0].LTM1 = new List<Tmodelmain>(); }
                                else i = model[0].LTM1.Count;
                                foreach (DataRow dr in dtt.Rows)
                                {
                                    i++;
                                    model[0].LTM1.Add(new Tmodelmain
                                    {
                                        Col14 = i.ToString(),
                                        Col15 = dr["master_id"].ToString(),
                                        Col23 = dr["master_name"].ToString(),
                                        Col16 = "0",
                                        Col17 = "0",
                                        Col18 = "0",
                                        Col19 = "0",
                                        Col20 = "0",
                                        Col21 = "0",
                                        Col22 = "0",
                                    });
                                }
                            }
                            break;
                        case "CHRGDEL":
                            if (sgen.GetSession(MyGuid, "sivdelrno") != null)
                            {
                                var mrno = sgen.GetSession(MyGuid, "sivdelrno").ToString();
                                var LTM = model[0].LTM1;
                                for (int d = 0; d < LTM.Count; d++)
                                {
                                    string chrgno = LTM[d].Col14;
                                    if (chrgno.Trim() == mrno.Trim()) { model[0].LTM1.RemoveAt(d); }
                                }
                                sgen.SetSession(MyGuid, "sivdelrno", null);
                            }
                            break;
                        case "RATE":
                            if (sgen.GetSession(MyGuid, "sortrno") == null)
                            {
                                ViewBag.scripCall += "showmsgJS(1,'Rno not defined', 0);";
                                return model;
                            }
                            var rno = sgen.Make_int(sgen.GetSession(MyGuid, "sortrno").ToString());
                            mq = "select master_id DocNo,group_name TaxRate from master_setting where (master_id||to_char(vch_date,'yyyymmdd')||type)='" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                model[0].LTM1[rno - 1].Col13 = dtt.Rows[0]["DocNo"].ToString().Trim();
                                var utgst = model[0].Col18.Substring(0, 2).Trim();
                                var pgst = model[0].Col22.Substring(0, 2).Trim();
                                if (utgst == pgst)
                                {
                                    var amt = sgen.Make_decimal(model[0].LTM1[rno - 1].Col16);
                                    var rt = sgen.Make_decimal(dtt.Rows[0]["TaxRate"].ToString().Trim().Split('%')[0].Trim());
                                    var amtrt = (amt * rt) / 100;
                                    model[0].LTM1[rno - 1].Col19 = (rt / 2).ToString() + "%";
                                    model[0].LTM1[rno - 1].Col20 = (amtrt / 2).ToString();
                                    model[0].LTM1[rno - 1].Col21 = (rt / 2).ToString() + "%";
                                    model[0].LTM1[rno - 1].Col22 = (amtrt / 2).ToString();
                                }
                                else
                                {
                                    var amt = sgen.Make_decimal(model[0].LTM1[rno - 1].Col16);
                                    var rt = sgen.Make_decimal(dtt.Rows[0]["TaxRate"].ToString().Trim().Split('%')[0].Trim());
                                    var amtrt = (amt * rt) / 100;
                                    model[0].LTM1[rno - 1].Col17 = rt.ToString() + "%";
                                    model[0].LTM1[rno - 1].Col18 = amtrt.ToString();
                                }
                                decimal bamt = sgen.Make_decimal(model[0].Col33);
                                decimal bigst = sgen.Make_decimal(model[0].Col34);
                                decimal bcgst = sgen.Make_decimal(model[0].Col35);
                                decimal bsgst = sgen.Make_decimal(model[0].Col36);
                                decimal tamt = 0, tigst = 0, tcgst = 0, tsgst = 0;
                                for (int i = 0; i < model[0].LTM1.Count; i++)
                                {
                                    tamt = tamt + sgen.Make_decimal(model[0].LTM1[i].Col16);
                                    tigst = tigst + sgen.Make_decimal(model[0].LTM1[i].Col18);
                                    tcgst = tcgst + sgen.Make_decimal(model[0].LTM1[i].Col20);
                                    tsgst = tsgst + sgen.Make_decimal(model[0].LTM1[i].Col22);
                                }
                                model[0].Col37 = (bamt + tamt).ToString();
                                model[0].Col38 = (bigst + tigst).ToString();
                                model[0].Col39 = (bcgst + tcgst).ToString();
                                model[0].Col40 = (bsgst + tsgst).ToString();
                                model[0].Col62 = (bamt + tamt + bigst + tigst + bcgst + tcgst + bsgst + tsgst).ToString();//netamt
                            }
                            break;
                    }
                    break;
                #endregion
                #region sales person
                case "s_person":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            mq = "select client_id||client_unit_id||vch_num||to_char(vch_date, 'yyyymmdd')|| type as fstr,vch_num as doc_no," +
                         "master_name as sales_person,client_id,client_unit_id,master_entby,master_entdate,rec_id,CONT_PERSON_EMAIL as email_id,GROUP_ID as mobile_no from master_setting " +
                         "where client_id||client_unit_id||vch_num||to_char(vch_date, 'yyyymmdd')|| type = '" + URL + "'";
                            DataTable dtreg = new DataTable();
                            dtreg = sgen.getdata(userCode, mq);
                            if (dtreg.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "EDMODE", "Y");
                                model[0].Col1 = dtreg.Rows[0]["client_id"].ToString();
                                model[0].Col2 = dtreg.Rows[0]["client_unit_id"].ToString();
                                model[0].Col3 = dtreg.Rows[0]["master_entby"].ToString();
                                model[0].Col4 = dtreg.Rows[0]["master_entdate"].ToString();
                                model[0].Col7 = dtreg.Rows[0]["rec_id"].ToString();
                                model[0].Col8 = "client_id||client_unit_id||vch_num|| to_char(vch_date, 'yyyymmdd')|| type = '" + URL + "'";
                                model[0].Col13 = "Update";
                                model[0].Col100 = "Update & New";
                                model[0].Col121 = "U";
                                model[0].Col122 = "<u>U</u>pdate";
                                model[0].Col123 = "Update & Ne<u>w</u>";
                                model[0].Col16 = dtreg.Rows[0]["doc_no"].ToString();
                                model[0].Col17 = dtreg.Rows[0]["sales_person"].ToString();
                                model[0].Col18 = dtreg.Rows[0]["email_id"].ToString();
                                model[0].Col19 = dtreg.Rows[0]["mobile_no"].ToString();
                            }
                            else
                            {
                                sgen.showmsg(1, "No Data Found", 1);
                            }
                            break;
                    }
                    break;
                #endregion
                #region pay_term
                case "pay_term":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            mq = "select client_id||client_unit_id||vch_num||to_char(vch_date, 'yyyymmdd')|| type as fstr,vch_num as doc_no," +
                         "master_name,client_id,client_unit_id,master_entby,master_entdate,rec_id,MALERATIO from master_setting " +
                         "where client_id||client_unit_id||vch_num||to_char(vch_date, 'yyyymmdd')|| type = '" + URL + "'";
                            DataTable dtreg = new DataTable();
                            dtreg = sgen.getdata(userCode, mq);
                            if (dtreg.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "EDMODE", "Y");
                                model[0].Col1 = dtreg.Rows[0]["client_id"].ToString();
                                model[0].Col2 = dtreg.Rows[0]["client_unit_id"].ToString();
                                model[0].Col3 = dtreg.Rows[0]["master_entby"].ToString();
                                model[0].Col4 = dtreg.Rows[0]["master_entdate"].ToString();
                                model[0].Col7 = dtreg.Rows[0]["rec_id"].ToString();
                                model[0].Col8 = "client_id||client_unit_id||vch_num|| to_char(vch_date, 'yyyymmdd')|| type = '" + URL + "'";
                                model[0].Col13 = "Update";
                                model[0].Col100 = "Update & New";
                                model[0].Col121 = "U";
                                model[0].Col122 = "<u>U</u>pdate";
                                model[0].Col123 = "Update & Ne<u>w</u>";
                                model[0].Col16 = dtreg.Rows[0]["doc_no"].ToString();
                                model[0].Col17 = dtreg.Rows[0]["MASTER_NAME"].ToString();
                                model[0].Col18 = dtreg.Rows[0]["MALERATIO"].ToString();
                            }
                            else
                            {
                                sgen.showmsg(1, "No Data Found", 1);
                            }
                            break;
                    }
                    break;
                #endregion
                #region rcr invoce
                case "rcr_inv":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "VIEW":
                            mq = "select a.*,to_char(convert_tz(a.vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') vch_date1,to_char(convert_tz(a.date1,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') datefrom,to_char(convert_tz(a.date2,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') dateto from itransactionc a " +
                            "where a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date, 'yyyymmdd')|| a.type= '" + URL + "'";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "EDMODE", "Y");
                                #region 1.pay_term
                                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.payterm2(userCode, unitid_mst);
                                //mod2.Add(new SelectListItem { Text = "Week", Value = "101" });
                                //mod2.Add(new SelectListItem { Text = "2 Weeks", Value = "102" });
                                //mod2.Add(new SelectListItem { Text = "Month", Value = "103" });
                                //mod2.Add(new SelectListItem { Text = "2 Months", Value = "104" });
                                //mod2.Add(new SelectListItem { Text = "3 Months", Value = "105" });
                                //mod2.Add(new SelectListItem { Text = "6 Months", Value = "106" });
                                //mod2.Add(new SelectListItem { Text = "Year", Value = "107" });
                                //mod2.Add(new SelectListItem { Text = "2 Years", Value = "108" });
                                //mod2.Add(new SelectListItem { Text = "3 Years", Value = "109" });
                                //mod2.Add(new SelectListItem { Text = "Custom", Value = "110" });
                                //mod3.Add(new SelectListItem { Text = "Day(s)", Value = "101" });
                                //mod3.Add(new SelectListItem { Text = "Week(s)", Value = "102" });
                                //mod3.Add(new SelectListItem { Text = "Month(s)", Value = "103" });
                                //mod3.Add(new SelectListItem { Text = "Year(s)", Value = "104" });
                                TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2 = cmd_Fun.freq_reminder(userCode, unitid_mst);
                                //TempData[MyGuid + "_TList3"] = model[0].TList3 = mod3;
                                #endregion
                                model = getedit(model, dt, URL);
                                model[0].Col16 = dt.Rows[0]["vch_num"].ToString();
                                model[0].Col48 = dt.Rows[0]["vch_date1"].ToString();
                                model[0].Col28 = dt.Rows[0]["datefrom"].ToString();
                                model[0].Col29 = dt.Rows[0]["dateto"].ToString();
                                //model[0].Col41 = dt.Rows[0]["pur_type"].ToString();
                                model[0].Chk1 = (dt.Rows[0]["mmt"].ToString() == "Y") ? true : false;
                                if (model[0].Chk1)
                                {
                                    model[0].Col29 = "";
                                }
                                String[] L1 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["pay_term"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems1 = L1;
                                String[] L2 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["tmode"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems2 = L2;
                                mq1 = "select  a.c_name as name,a.c_gstin as gstin,a.addr as Address,a.vch_num,a.tor,nvl(ba.country_name,'-') as country_name," +
"nvl(ba.state_name,'-') state_name,nvl(ba.city_name,'-') as city_name,a.pincode_2 from clients_mst a left join country_state ba on ba.rec_id = a.city2 where find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 and a.type='BCD' and substr(a.vch_num,0,3)='303' and a.vch_num='" + dt.Rows[0]["acode"].ToString() + "'";
                                DataTable dtp = sgen.getdata(userCode, mq1);
                                if (dtp.Rows.Count > 0)
                                {
                                    model[0].Col49 = dtp.Rows[0]["vch_num"].ToString();
                                    model[0].Col20 = dtp.Rows[0]["name"].ToString();
                                    model[0].Col21 = dtp.Rows[0]["address"].ToString();
                                    model[0].Col22 = dtp.Rows[0]["gstin"].ToString();
                                    model[0].Col52 = dtp.Rows[0]["tor"].ToString();
                                    model[0].Col75 = dtp.Rows[0]["city_name"].ToString();
                                    model[0].Col76 = dtp.Rows[0]["state_name"].ToString();
                                    model[0].Col77 = dtp.Rows[0]["country_name"].ToString();
                                    model[0].Col78 = dtp.Rows[0]["pincode_2"].ToString();
                                }
                                mq2 = "select client_id||client_unit_id||vch_num||to_char(vch_date, 'yyyymmdd')|| type as fstr,vch_num as per_id," +
         "master_name as sales_person,CONT_PERSON_EMAIL as email_id,GROUP_ID as mobile_no from master_setting " +
         "where  type = 'SPR' and client_unit_id = '" + unitid_mst + "' and vch_num='" + dt.Rows[0]["pono"].ToString() + "'";
                                DataTable dt3 = sgen.getdata(userCode, mq2);
                                if (dt3.Rows.Count > 0)
                                {
                                    model[0].Col24 = dt3.Rows[0]["sales_person"].ToString();
                                    model[0].Col25 = dt3.Rows[0]["per_id"].ToString();
                                    model[0].Col26 = dt3.Rows[0]["mobile_no"].ToString();
                                    model[0].Col27 = dt3.Rows[0]["email_id"].ToString();
                                }
                                model[0].Col31 = dt.Rows[0]["totremark"].ToString();
                                model[0].Col32 = dt.Rows[0]["cond"].ToString();
                                model[0].Col33 = dt.Rows[0]["basicamt"].ToString();
                                model[0].Col34 = dt.Rows[0]["igst"].ToString();
                                model[0].Col35 = dt.Rows[0]["cgst"].ToString();
                                model[0].Col36 = dt.Rows[0]["sgst"].ToString();
                                model[0].Col37 = dt.Rows[0]["ginstlchrg"].ToString();
                                model[0].Col38 = dt.Rows[0]["gserchrg"].ToString();
                                model[0].Col39 = dt.Rows[0]["gamc"].ToString();
                                model[0].Col40 = dt.Rows[0]["gloadchrg"].ToString();
                                model[0].Col62 = dt.Rows[0]["gtaxamt"].ToString();
                                model[0].Col23 = dt.Rows[0]["req_by"].ToString();
                                model[0].dt1 = model[0].dt1.Clone();
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["SNo"] = i + 1;
                                    dr["SERVICE_CODE"] = dt.Rows[i]["icode"].ToString();
                                    dr["SERVICE_NAME"] = dt.Rows[i]["iname"].ToString();
                                    dr["SAC_Code"] = dt.Rows[i]["hsno"].ToString();
                                    dr["UOM"] = dt.Rows[i]["uom"].ToString();
                                    dr["TAXRATE"] = dt.Rows[i]["taxrate"].ToString();
                                    dr["QUANTITY"] = dt.Rows[i]["ORDQTY"].ToString();
                                    dr["RATE"] = dt.Rows[i]["irate"].ToString();
                                    dr["DISC_TYPE"] = dt.Rows[i]["disctype"].ToString();
                                    dr["DISC_RATE"] = dt.Rows[i]["discrate"].ToString();
                                    dr["SAMOUNT"] = dt.Rows[i]["Iamount"].ToString();
                                    dr["taxamount"] = dt.Rows[i]["taxamt"].ToString();
                                    dr["discamount"] = dt.Rows[i]["discamt"].ToString();
                                    dr["lineamount"] = dt.Rows[i]["lineamount"].ToString();
                                    dr["Remark"] = dt.Rows[i]["iremark"].ToString();
                                    model[0].dt1.Rows.Add(dr);
                                }
                                model[0].dt1.AcceptChanges();
                                //other charges LTM
                                mq1 = "select ch.master_name chrgname,en.col1,en.col2,en.col3,en.col4,en.col5,en.col6,en.col7,en.col8,en.col9,en.r_no from enx_tab en " +
                                    "inner join master_setting ch on en.col1=ch.master_id and ch.type='MR0' and find_in_set(ch.client_unit_id,en.client_unit_id)=1 " +
                                    "where (en.client_id||en.client_unit_id||en.vch_num||to_char(en.vch_date, 'yyyymmdd')|| en.type) = '" + URL + "'";
                                dt = sgen.getdata(userCode, mq1);
                                if (dt.Rows.Count > 0)
                                {
                                    model[0].LTM1 = new List<Tmodelmain>();
                                    foreach (DataRow dr in dt.Rows)
                                    {
                                        model[0].LTM1.Add(new Tmodelmain
                                        {
                                            Col13 = dr["col3"].ToString(),//chrgrtid
                                            Col14 = dr["r_no"].ToString(),//rno
                                            Col15 = dr["col1"].ToString(),//chrgid
                                            Col16 = dr["col2"].ToString(),//chrgamt
                                            Col17 = dr["col4"].ToString(),//igstrt
                                            Col18 = dr["col5"].ToString(),//igstamt
                                            Col19 = dr["col6"].ToString(),//cgstrt
                                            Col20 = dr["col7"].ToString(),//cgstamt
                                            Col21 = dr["col8"].ToString(),//sgstrt
                                            Col22 = dr["col9"].ToString(),//sgstamt
                                            Col23 = dr["chrgname"].ToString(),//chrgname
                                        });
                                    }
                                }
                            }
                            break;
                        case "PRINT":
                            mq = "select a.*,to_char(convert_tz(a.vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') vch_date1,c.c_name as Party_Name,c.c_gstin as Party_Gstin,c.addr as Party_Address,c.tor,c.cpcont,c.panno PAN_NUMBER,c.comp_email ORG_EMAIL_ID,c.tanno TAN_NUMBER from itransactionc a " +
                        " inner join clients_mst c on a.acode = c.vch_num and c.type = 'BCD' and find_in_set(c.client_unit_id, a.client_unit_id)=1 " +
                                " where a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date, 'yyyymmdd')|| a.type= '" + URL + "'";
                            dt = sgen.getdata(userCode, mq);
                            #region 1.pay_term
                            TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1 = cmd_Fun.payterm(userCode, unitid_mst, out defcall);
                            TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2 = cmd_Fun.freq_reminder(userCode, unitid_mst);

                            #endregion
                            if (dt.Rows.Count > 0)
                            {
                                dt.TableName = "prepcur";
                                sgen.open_report_bydt_xml(userCode, dt, "service_inv", "Service Invoice Report");
                                ViewBag.scripCall += "showRptnew('Service Invoice Report');disableForm();";
                            }
                            break;
                        case "INVOICE":
                            mq = "select a.*,to_char(convert_tz(a.vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') vch_date1,c.c_name as Party_Name,c.c_gstin as Party_Gstin,c.addr as Party_Address,c.tor,c.cpcont,c.panno PAN_NUMBER,c.comp_email ORG_EMAIL_ID,c.tanno TAN_NUMBER from itransactionc a " +
                        " inner join clients_mst c on a.acode = c.vch_num and c.type = 'BCD' and find_in_set(c.client_unit_id, a.client_unit_id)=1 " +
                                " where a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date, 'yyyymmdd')|| a.type= '" + URL + "'";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                string fstr = URL;
                                //return RedirectToAction("srv_inv", "hall", new { m_id = EncryptDecrypt.Encrypt(model[0].Col15), mid = EncryptDecrypt.Encrypt(model[0].Col14), fstr = "INVOICE" + EncryptDecrypt.Encrypt(fstr) });

                                //dt.TableName = "prepcur";
                                //sgen.open_report_bydt_xml(userCode, dt, "service_inv", "Service Invoice Report");
                                //ViewBag.scripCall += "showRptnew('Service Invoice Report');disableForm();";
                            }
                            break;
                        case "PARTY":
                            mq = "select a.c_name as name,a.c_gstin as gstin,a.addr as Address,a.vch_num,a.tor,nvl(ba.country_name,'-') as country_name," +
"nvl(ba.state_name,'-') state_name,nvl(ba.city_name,'-') as city_name,a.pincode_2 from clients_mst a left join country_state ba on ba.rec_id = a.city2 where a.vch_num||To_Char(a.vch_date, 'yyyymmdd')|| a.type = '" + URL + "'";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                model[0].Col49 = dt.Rows[0]["vch_num"].ToString();
                                model[0].Col20 = dt.Rows[0]["name"].ToString();
                                model[0].Col21 = dt.Rows[0]["address"].ToString();
                                model[0].Col22 = dt.Rows[0]["gstin"].ToString();
                                model[0].Col52 = dt.Rows[0]["tor"].ToString();
                                model[0].Col75 = dt.Rows[0]["city_name"].ToString();
                                model[0].Col76 = dt.Rows[0]["state_name"].ToString();
                                model[0].Col77 = dt.Rows[0]["country_name"].ToString();
                                model[0].Col78 = dt.Rows[0]["pincode_2"].ToString();
                            }
                            break;
                        case "PER":
                            mq = "select client_id||client_unit_id||vch_num||to_char(vch_date, 'yyyymmdd')|| type as fstr,vch_num as per_id," +
            "master_name as sales_person,CONT_PERSON_EMAIL as email_id,GROUP_ID as mobile_no from master_setting " +
            "where client_id||client_unit_id||vch_num||to_char(vch_date, 'yyyymmdd')|| type = '" + URL + "'";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                model[0].Col24 = dt.Rows[0]["sales_person"].ToString();
                                model[0].Col25 = dt.Rows[0]["per_id"].ToString();
                                model[0].Col26 = dt.Rows[0]["mobile_no"].ToString();
                                model[0].Col27 = dt.Rows[0]["email_id"].ToString();
                            }
                            break;
                        case "ITEM":
                            mq = "select sv.client_id||sv.client_unit_id||sv.vch_num||to_char(sv.vch_date,'yyyymmdd')||sv.type as fstr" +
                                ",sv.vch_num as service_code,sv.col3 as service_name,um.master_name as UOM,nvl(hsn.master_name, '-') as hsn" +
                                ",nvl(hsn.group_name, '0') taxrate,sv.col4 as description from enx_tab2 sv left join master_setting um on " +
                                "um.master_id = sv.col7 and um.type = 'UMM' and find_in_set(um.client_unit_id, sv.client_unit_id)= 1 left join" +
                                " master_setting hsn on hsn.master_id = sv.col8 and hsn.type = 'HSN' and find_in_set(hsn.client_unit_id," +
                                " sv.client_unit_id)= 1 where sv.client_id||sv.client_unit_id||sv.vch_num||to_char(sv.vch_date,'yyyymmdd')||sv.type in ('" + URL + "')";

                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                if (model[0].dt1.Rows[0]["SERVICE_CODE"].ToString().Trim().Equals("-")) { model[0].dt1.Rows.RemoveAt(0); }
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["ADD_REMOVE"] = dt.Rows[i]["fstr"].ToString();
                                    dr["SNo"] = i + 1;
                                    dr["SERVICE_CODE"] = dt.Rows[i]["service_code"].ToString();
                                    dr["SERVICE_NAME"] = dt.Rows[i]["service_name"].ToString();
                                    dr["SAC_Code"] = dt.Rows[i]["hsn"].ToString();
                                    dr["UOM"] = dt.Rows[i]["uom"].ToString();
                                    dr["TaxRate"] = dt.Rows[i]["taxrate"].ToString();
                                    model[0].dt1.Rows.Add(dr);
                                }
                                model[0].dt1.AcceptChanges();
                            }
                            model[0].Col100 = tm.Col100;
                            break;
                        case "CHRGS":
                            mq = "select master_id,master_name from master_setting where (master_id||to_char(vch_date,'yyyymmdd')||type) in ('" + URL + "')";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                int i = 0;
                                if (model[0].LTM1 == null) { model[0].LTM1 = new List<Tmodelmain>(); }
                                if (model[0].LTM1.Count == 0) { model[0].LTM1 = new List<Tmodelmain>(); }
                                else i = model[0].LTM1.Count;
                                foreach (DataRow dr in dtt.Rows)
                                {
                                    i++;
                                    model[0].LTM1.Add(new Tmodelmain
                                    {
                                        Col14 = i.ToString(),
                                        Col15 = dr["master_id"].ToString(),
                                        Col23 = dr["master_name"].ToString(),
                                        Col16 = "0",
                                        Col17 = "0",
                                        Col18 = "0",
                                        Col19 = "0",
                                        Col20 = "0",
                                        Col21 = "0",
                                        Col22 = "0",
                                    });
                                }
                            }
                            break;
                        case "CHRGDEL":
                            if (sgen.GetSession(MyGuid, "rivdelrno") != null)
                            {
                                var mrno = sgen.GetSession(MyGuid, "rivdelrno").ToString();
                                var LTM = model[0].LTM1;
                                for (int d = 0; d < LTM.Count; d++)
                                {
                                    string chrgno = LTM[d].Col14;
                                    if (chrgno.Trim() == mrno.Trim()) { model[0].LTM1.RemoveAt(d); }
                                }
                                sgen.SetSession(MyGuid, "rivdelrno", null);
                            }
                            break;
                        case "RATE":
                            if (sgen.GetSession(MyGuid, "rcrtrno") == null)
                            {
                                ViewBag.scripCall += "showmsgJS(1,'Rno not defined', 0);";
                                return model;
                            }
                            var rno = sgen.Make_int(sgen.GetSession(MyGuid, "rcrtrno").ToString());
                            mq = "select master_id DocNo,group_name TaxRate from master_setting where (master_id||to_char(vch_date,'yyyymmdd')||type)='" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                model[0].LTM1[rno - 1].Col13 = dtt.Rows[0]["DocNo"].ToString().Trim();
                                var utgst = model[0].Col18.Substring(0, 2).Trim();
                                var pgst = model[0].Col22.Substring(0, 2).Trim();
                                if (utgst == pgst)
                                {
                                    var amt = sgen.Make_decimal(model[0].LTM1[rno - 1].Col16);
                                    var rt = sgen.Make_decimal(dtt.Rows[0]["TaxRate"].ToString().Trim().Split('%')[0].Trim());
                                    var amtrt = (amt * rt) / 100;
                                    model[0].LTM1[rno - 1].Col19 = (rt / 2).ToString() + "%";
                                    model[0].LTM1[rno - 1].Col20 = (amtrt / 2).ToString();
                                    model[0].LTM1[rno - 1].Col21 = (rt / 2).ToString() + "%";
                                    model[0].LTM1[rno - 1].Col22 = (amtrt / 2).ToString();
                                }
                                else
                                {
                                    var amt = sgen.Make_decimal(model[0].LTM1[rno - 1].Col16);
                                    var rt = sgen.Make_decimal(dtt.Rows[0]["TaxRate"].ToString().Trim().Split('%')[0].Trim());
                                    var amtrt = (amt * rt) / 100;
                                    model[0].LTM1[rno - 1].Col17 = rt.ToString() + "%";
                                    model[0].LTM1[rno - 1].Col18 = amtrt.ToString();
                                }
                                decimal bamt = sgen.Make_decimal(model[0].Col33);
                                decimal bigst = sgen.Make_decimal(model[0].Col34);
                                decimal bcgst = sgen.Make_decimal(model[0].Col35);
                                decimal bsgst = sgen.Make_decimal(model[0].Col36);
                                decimal tamt = 0, tigst = 0, tcgst = 0, tsgst = 0;
                                for (int i = 0; i < model[0].LTM1.Count; i++)
                                {
                                    tamt = tamt + sgen.Make_decimal(model[0].LTM1[i].Col16);
                                    tigst = tigst + sgen.Make_decimal(model[0].LTM1[i].Col18);
                                    tcgst = tcgst + sgen.Make_decimal(model[0].LTM1[i].Col20);
                                    tsgst = tsgst + sgen.Make_decimal(model[0].LTM1[i].Col22);
                                }
                                model[0].Col37 = (bamt + tamt).ToString();
                                model[0].Col38 = (bigst + tigst).ToString();
                                model[0].Col39 = (bcgst + tcgst).ToString();
                                model[0].Col40 = (bsgst + tsgst).ToString();
                                model[0].Col62 = (bamt + tamt + bigst + tigst + bcgst + tcgst + bsgst + tsgst).ToString();//netamt
                            }
                            break;
                    }
                    break;
                #endregion
                #region cr notes
                case "cr_note":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            mq = "select a.*,to_char(convert_tz(a.vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') vch_date1 from itransactionc a " +
                            "where a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date, 'yyyymmdd')|| a.type= '" + URL + "'";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "EDMODE", "Y");
                                model = getedit(model, dt, URL);
                                model[0].Col16 = dt.Rows[0]["vch_num"].ToString();
                                model[0].Col48 = dt.Rows[0]["vch_date1"].ToString();

                                mq1 = "select a.c_name as name,a.c_gstin as gstin,a.addr as Address,a.vch_num,a.tor,nvl(ba.country_name,'-') as country_name," +
             "nvl(ba.state_name,'-') state_name,nvl(ba.city_name,'-') as city_name,a.pincode_2 from clients_mst a left join country_state ba on ba.rec_id = a.city2 where find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 and a.type='BCD' and substr(a.vch_num,0,3)='303' and a.vch_num='" + dt.Rows[0]["acode"].ToString() + "'";
                                DataTable dtp = sgen.getdata(userCode, mq1);
                                if (dtp.Rows.Count > 0)
                                {
                                    model[0].Col49 = dtp.Rows[0]["vch_num"].ToString();
                                    model[0].Col20 = dtp.Rows[0]["name"].ToString();
                                    model[0].Col21 = dtp.Rows[0]["address"].ToString();
                                    model[0].Col22 = dtp.Rows[0]["gstin"].ToString();
                                    model[0].Col52 = dtp.Rows[0]["tor"].ToString();
                                    model[0].Col75 = dtp.Rows[0]["city_name"].ToString();
                                    model[0].Col76 = dtp.Rows[0]["state_name"].ToString();
                                    model[0].Col77 = dtp.Rows[0]["country_name"].ToString();
                                    model[0].Col78 = dtp.Rows[0]["pincode_2"].ToString();
                                    sgen.SetSession(MyGuid, "S_INVPARTY", model[0].Col49);
                                }
                                mq2 = "select client_id||client_unit_id||vch_num||to_char(vch_date, 'yyyymmdd')|| type as fstr,vch_num as per_id," +
         "master_name as sales_person,CONT_PERSON_EMAIL as email_id,GROUP_ID as mobile_no from master_setting " +
         "where  type = 'SPR' and client_unit_id = '" + unitid_mst + "' and vch_num='" + dt.Rows[0]["pono"].ToString() + "'";
                                DataTable dt3 = sgen.getdata(userCode, mq2);
                                if (dt3.Rows.Count > 0)
                                {
                                    model[0].Col24 = dt3.Rows[0]["sales_person"].ToString();
                                    model[0].Col25 = dt3.Rows[0]["per_id"].ToString();
                                    model[0].Col26 = dt3.Rows[0]["mobile_no"].ToString();
                                    model[0].Col27 = dt3.Rows[0]["email_id"].ToString();
                                }
                                string mq3 = "";
                                mq3 = "select distinct (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) as fstr,p.vch_num Doc_number,to_char(p.vch_date, '" + sgen.Getsqldateformat() + "') DOC_date" +
                                " from itransactionc p inner join clients_mst c on p.acode = c.vch_num and c.type = 'BCD' and find_in_set(c.client_unit_id, p.client_unit_id)=1 " +
                                "where p.client_unit_id = '" + unitid_mst + "' and p.type= '48' and p.vch_num not in ('" + dt.Rows[0]["invno"].ToString().Trim().TrimEnd(',').Replace(",", "','").Trim().ToString() + "')";
                                DataTable dt4 = sgen.getdata(userCode, mq3);
                                if (dt4.Rows.Count > 0)
                                {
                                    model[0].Col43 = dt4.Rows[0]["Doc_number"].ToString();
                                    sgen.SetSession(MyGuid, "S_INVNO", model[0].Col43);
                                }
                                model[0].Col31 = dt.Rows[0]["totremark"].ToString();
                                model[0].Col32 = dt.Rows[0]["cond"].ToString();
                                model[0].Col33 = dt.Rows[0]["basicamt"].ToString();
                                model[0].Col34 = dt.Rows[0]["igst"].ToString();
                                model[0].Col35 = dt.Rows[0]["cgst"].ToString();
                                model[0].Col36 = dt.Rows[0]["sgst"].ToString();
                                model[0].Col37 = dt.Rows[0]["ginstlchrg"].ToString();
                                model[0].Col38 = dt.Rows[0]["gserchrg"].ToString();
                                model[0].Col39 = dt.Rows[0]["gamc"].ToString();
                                model[0].Col40 = dt.Rows[0]["gloadchrg"].ToString();
                                model[0].Col62 = dt.Rows[0]["gtaxamt"].ToString();
                                model[0].Col23 = dt.Rows[0]["req_by"].ToString();
                                model[0].dt1 = model[0].dt1.Clone();
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["SNo"] = i + 1;
                                    dr["SERVICE_CODE"] = dt.Rows[i]["icode"].ToString();
                                    dr["SERVICE_NAME"] = dt.Rows[i]["iname"].ToString();
                                    dr["SAC_Code"] = dt.Rows[i]["hsno"].ToString();
                                    dr["UOM"] = dt.Rows[i]["uom"].ToString();
                                    dr["TAXRATE"] = dt.Rows[i]["taxrate"].ToString();
                                    dr["QUANTITY"] = dt.Rows[i]["ORDQTY"].ToString();
                                    dr["RATE"] = dt.Rows[i]["irate"].ToString();
                                    dr["DISC_TYPE"] = dt.Rows[i]["disctype"].ToString();
                                    dr["DISC_RATE"] = dt.Rows[i]["discrate"].ToString();
                                    dr["SAMOUNT"] = dt.Rows[i]["Iamount"].ToString();
                                    dr["taxamount"] = dt.Rows[i]["taxamt"].ToString();
                                    dr["discamount"] = dt.Rows[i]["discamt"].ToString();
                                    dr["lineamount"] = dt.Rows[i]["lineamount"].ToString();
                                    dr["Remark"] = dt.Rows[i]["iremark"].ToString();
                                    model[0].dt1.Rows.Add(dr);
                                }
                                model[0].dt1.AcceptChanges();
                                //other charges LTM
                                mq1 = "select ch.master_name chrgname,en.col1,en.col2,en.col3,en.col4,en.col5,en.col6,en.col7,en.col8,en.col9,en.r_no from enx_tab en " +
                                    "inner join master_setting ch on en.col1=ch.master_id and ch.type='MR0' and find_in_set(ch.client_unit_id,en.client_unit_id)=1 " +
                                    "where (en.client_id||en.client_unit_id||en.vch_num||to_char(en.vch_date, 'yyyymmdd')|| en.type) = '" + URL + "'";
                                dt = sgen.getdata(userCode, mq1);
                                if (dt.Rows.Count > 0)
                                {
                                    model[0].LTM1 = new List<Tmodelmain>();
                                    foreach (DataRow dr in dt.Rows)
                                    {
                                        model[0].LTM1.Add(new Tmodelmain
                                        {
                                            Col13 = dr["col3"].ToString(),//chrgrtid
                                            Col14 = dr["r_no"].ToString(),//rno
                                            Col15 = dr["col1"].ToString(),//chrgid
                                            Col16 = dr["col2"].ToString(),//chrgamt
                                            Col17 = dr["col4"].ToString(),//igstrt
                                            Col18 = dr["col5"].ToString(),//igstamt
                                            Col19 = dr["col6"].ToString(),//cgstrt
                                            Col20 = dr["col7"].ToString(),//cgstamt
                                            Col21 = dr["col8"].ToString(),//sgstrt
                                            Col22 = dr["col9"].ToString(),//sgstamt
                                            Col23 = dr["chrgname"].ToString(),//chrgname
                                        });
                                    }
                                }
                            }
                            break;
                        case "PRINT":
                            mq = "select a.*,to_char(convert_tz(a.vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') vch_date1,c.c_name as Party_Name,c.c_gstin as Party_Gstin,c.addr as Party_Address,c.tor,c.cpcont,c.panno PAN_NUMBER,c.comp_email ORG_EMAIL_ID,c.tanno TAN_NUMBER from itransactionc a " +
                        " inner join clients_mst c on a.acode = c.vch_num and c.type = 'BCD' and find_in_set(c.client_unit_id, a.client_unit_id)=1 " +
                                " where a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date, 'yyyymmdd')|| a.type= '" + URL + "'";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                dt.TableName = "prepcur";
                                sgen.open_report_bydt_xml(userCode, dt, "service_inv", "Service Invoice Report");
                                ViewBag.scripCall += "showRptnew('Service Invoice Report');disableForm();";
                            }
                            break;
                        case "PARTY":
                            mq = "select a.c_name as name,a.c_gstin as gstin,a.addr as Address,a.vch_num,a.tor,nvl(ba.country_name,'-') as country_name," +
         "nvl(ba.state_name,'-') state_name,nvl(ba.city_name,'-') as city_name,a.pincode_2 from clients_mst a left join country_state ba on ba.rec_id = a.city2 where a.vch_num||To_Char(a.vch_date, 'yyyymmdd')|| a.type = '" + URL + "'";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                model[0].Col49 = dt.Rows[0]["vch_num"].ToString();
                                model[0].Col20 = dt.Rows[0]["name"].ToString();
                                model[0].Col21 = dt.Rows[0]["address"].ToString();
                                model[0].Col22 = dt.Rows[0]["gstin"].ToString();
                                model[0].Col52 = dt.Rows[0]["tor"].ToString();
                                model[0].Col75 = dt.Rows[0]["city_name"].ToString();
                                model[0].Col76 = dt.Rows[0]["state_name"].ToString();
                                model[0].Col77 = dt.Rows[0]["country_name"].ToString();
                                model[0].Col78 = dt.Rows[0]["pincode_2"].ToString();
                                sgen.SetSession(MyGuid, "S_INVPARTY", model[0].Col49);
                                model[0].Col43 = "";
                                sgen.SetSession(MyGuid, "S_INVNO", null);
                            }
                            break;
                        case "PER":
                            mq = "select client_id||client_unit_id||vch_num||to_char(vch_date, 'yyyymmdd')|| type as fstr,vch_num as per_id," +
            "master_name as sales_person,CONT_PERSON_EMAIL as email_id,GROUP_ID as mobile_no from master_setting " +
            "where client_id||client_unit_id||vch_num||to_char(vch_date, 'yyyymmdd')|| type = '" + URL + "'";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                model[0].Col24 = dt.Rows[0]["sales_person"].ToString();
                                model[0].Col25 = dt.Rows[0]["per_id"].ToString();
                                model[0].Col26 = dt.Rows[0]["mobile_no"].ToString();
                                model[0].Col27 = dt.Rows[0]["email_id"].ToString();
                            }
                            break;
                        case "INV":
                            mq = "select distinct (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) as fstr,p.vch_num Doc_number,to_char(p.vch_date, '" + sgen.Getsqldateformat() + "') DOC_date" +
                                " from itransaction p inner join clients_mst c on p.acode = c.vch_num and c.type = 'BCD' and find_in_set(c.client_unit_id, p.client_unit_id)=1 " +
                                "where (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) in ('" + URL + "')";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                model[0].Col43 = dt.Rows[0]["Doc_number"].ToString();
                                sgen.SetSession(MyGuid, "S_INVNO", model[0].Col43);
                            }
                            break;
                        case "ITEM":
                            mq = "select sv.client_id||sv.client_unit_id||iv.vch_num||sv.vch_num||to_char(sv.vch_date,'yyyymmdd')||sv.type as fstr" +
                                ",sv.vch_num as service_code,iv.ORDQTY,iv.irate,iv.discrate,iv.disctype,sv.col3 as service_name,um.master_name as UOM,nvl(hsn.master_name, '-') as hsn" +
                                ",nvl(hsn.group_name, '0') taxrate,sv.col4 as description from enx_tab2 sv left join master_setting um on " +
                                "um.master_id = sv.col7 and um.type = 'UMM' and find_in_set(um.client_unit_id, sv.client_unit_id)= 1 left join" +
                                " master_setting hsn on hsn.master_id = sv.col8 and hsn.type = 'HSN' and find_in_set(hsn.client_unit_id," +
                                " sv.client_unit_id)= 1 inner join itransaction iv on iv.icode = sv.vch_num and iv.type = '48' and iv.client_unit_id = sv.client_unit_id " +
                                "where sv.client_id||sv.client_unit_id||iv.vch_num||sv.vch_num||to_char(sv.vch_date,'yyyymmdd')||sv.type in ('" + URL + "')";

                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                if (model[0].dt1.Rows[0]["SERVICE_CODE"].ToString().Trim().Equals("-")) { model[0].dt1.Rows.RemoveAt(0); }
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["ADD_REMOVE"] = dt.Rows[i]["fstr"].ToString();
                                    dr["SNo"] = i + 1;
                                    dr["SERVICE_CODE"] = dt.Rows[i]["service_code"].ToString();
                                    dr["SERVICE_NAME"] = dt.Rows[i]["service_name"].ToString();
                                    dr["SAC_Code"] = dt.Rows[i]["hsn"].ToString();
                                    dr["UOM"] = dt.Rows[i]["uom"].ToString();
                                    dr["QUANTITY"] = dt.Rows[i]["ORDQTY"].ToString();
                                    dr["RATE"] = dt.Rows[i]["irate"].ToString();
                                    dr["DISC_TYPE"] = dt.Rows[i]["disctype"].ToString();
                                    dr["DISC_RATE"] = dt.Rows[i]["discrate"].ToString();
                                    dr["TaxRate"] = dt.Rows[i]["taxrate"].ToString();
                                    model[0].dt1.Rows.Add(dr);
                                }
                                model[0].dt1.AcceptChanges();
                            }
                            model[0].Col100 = tm.Col100;
                            break;
                        case "CHRGS":
                            mq = "select master_id,master_name from master_setting where (master_id||to_char(vch_date,'yyyymmdd')||type) in ('" + URL + "')";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                int i = 0;
                                if (model[0].LTM1 == null) { model[0].LTM1 = new List<Tmodelmain>(); }
                                if (model[0].LTM1.Count == 0) { model[0].LTM1 = new List<Tmodelmain>(); }
                                else i = model[0].LTM1.Count;
                                foreach (DataRow dr in dtt.Rows)
                                {
                                    i++;
                                    model[0].LTM1.Add(new Tmodelmain
                                    {
                                        Col14 = i.ToString(),
                                        Col15 = dr["master_id"].ToString(),
                                        Col23 = dr["master_name"].ToString(),
                                        Col16 = "0",
                                        Col17 = "0",
                                        Col18 = "0",
                                        Col19 = "0",
                                        Col20 = "0",
                                        Col21 = "0",
                                        Col22 = "0",
                                    });
                                }
                            }
                            break;
                        case "CHRGDEL":
                            if (sgen.GetSession(MyGuid, "cnrdelrno") != null)
                            {
                                var mrno = sgen.GetSession(MyGuid, "cnrdelrno").ToString();
                                var LTM = model[0].LTM1;
                                for (int d = 0; d < LTM.Count; d++)
                                {
                                    string chrgno = LTM[d].Col14;
                                    if (chrgno.Trim() == mrno.Trim()) { model[0].LTM1.RemoveAt(d); }
                                }
                                sgen.SetSession(MyGuid, "cnrdelrno", null);
                            }
                            break;
                        case "RATE":
                            if (sgen.GetSession(MyGuid, "cnrdelrno") == null)
                            {
                                ViewBag.scripCall += "showmsgJS(1,'Rno not defined', 0);";
                                return model;
                            }
                            var rno = sgen.Make_int(sgen.GetSession(MyGuid, "cnrdelrno").ToString());
                            mq = "select master_id DocNo,group_name TaxRate from master_setting where (master_id||to_char(vch_date,'yyyymmdd')||type)='" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                model[0].LTM1[rno - 1].Col13 = dtt.Rows[0]["DocNo"].ToString().Trim();
                                var utgst = model[0].Col18.Substring(0, 2).Trim();
                                var pgst = model[0].Col22.Substring(0, 2).Trim();
                                if (utgst == pgst)
                                {
                                    var amt = sgen.Make_decimal(model[0].LTM1[rno - 1].Col16);
                                    var rt = sgen.Make_decimal(dtt.Rows[0]["TaxRate"].ToString().Trim().Split('%')[0].Trim());
                                    var amtrt = (amt * rt) / 100;
                                    model[0].LTM1[rno - 1].Col19 = (rt / 2).ToString() + "%";
                                    model[0].LTM1[rno - 1].Col20 = (amtrt / 2).ToString();
                                    model[0].LTM1[rno - 1].Col21 = (rt / 2).ToString() + "%";
                                    model[0].LTM1[rno - 1].Col22 = (amtrt / 2).ToString();
                                }
                                else
                                {
                                    var amt = sgen.Make_decimal(model[0].LTM1[rno - 1].Col16);
                                    var rt = sgen.Make_decimal(dtt.Rows[0]["TaxRate"].ToString().Trim().Split('%')[0].Trim());
                                    var amtrt = (amt * rt) / 100;
                                    model[0].LTM1[rno - 1].Col17 = rt.ToString() + "%";
                                    model[0].LTM1[rno - 1].Col18 = amtrt.ToString();
                                }
                                decimal bamt = sgen.Make_decimal(model[0].Col33);
                                decimal bigst = sgen.Make_decimal(model[0].Col34);
                                decimal bcgst = sgen.Make_decimal(model[0].Col35);
                                decimal bsgst = sgen.Make_decimal(model[0].Col36);
                                decimal tamt = 0, tigst = 0, tcgst = 0, tsgst = 0;
                                for (int i = 0; i < model[0].LTM1.Count; i++)
                                {
                                    tamt = tamt + sgen.Make_decimal(model[0].LTM1[i].Col16);
                                    tigst = tigst + sgen.Make_decimal(model[0].LTM1[i].Col18);
                                    tcgst = tcgst + sgen.Make_decimal(model[0].LTM1[i].Col20);
                                    tsgst = tsgst + sgen.Make_decimal(model[0].LTM1[i].Col22);
                                }
                                model[0].Col37 = (bamt + tamt).ToString();
                                model[0].Col38 = (bigst + tigst).ToString();
                                model[0].Col39 = (bcgst + tcgst).ToString();
                                model[0].Col40 = (bsgst + tsgst).ToString();
                                model[0].Col62 = (bamt + tamt + bigst + tigst + bcgst + tcgst + bsgst + tsgst).ToString();//netamt
                            }
                            break;
                    }
                    break;
                #endregion
                #region inv_list
                case "inv_list":
                    if (sgen.GetSession(MyGuid, "inv_list") == null)
                    {
                        sgen.SetSession(MyGuid, "inv_list", URL);
                    }
                    else
                    {
                        URL = sgen.GetSession(MyGuid, "inv_list").ToString();
                    }
                    switch (btnval.ToUpper())
                    {
                        case "PARENT":
                            mq = "select a.vch_num, a.c_name from clients_mst a where a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type ='" + URL + "' order by a.vch_num desc";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                model[0].Col16 = dt.Rows[0]["vch_num"].ToString();
                                model[0].Col17 = dt.Rows[0]["c_name"].ToString();
                                // total invoices
                                mq0 = "select count(p.vch_num) tot_inv from itransaction p " +
                          "inner join clients_mst c on p.acode = c.vch_num and c.type = 'BCD' and find_in_set(c.client_unit_id, p.client_unit_id)=1 and c.vch_num='" + model[0].Col16 + "'" +
                          "where p.client_unit_id = '" + unitid_mst + "' and p.type= '48'";
                                dt = sgen.getdata(userCode, mq0);
                                if (dt.Rows.Count > 0)
                                {
                                    model[0].Col18 = "Total Invoices : " + dt.Rows[0]["tot_inv"].ToString();
                                }
                                else { model[0].Col18 = "Total Invoices : " + "0"; }
                                // total recurring inv
                                mq1 = "select count(p.vch_num) tot_inv from itransactionc p " +
                     "inner join clients_mst c on p.acode = c.vch_num and c.type = 'BCD' and find_in_set(c.client_unit_id, p.client_unit_id)=1 and c.vch_num='" + model[0].Col16 + "'" +
                     "where p.client_unit_id = '" + unitid_mst + "' and p.type= 'RIV'";
                                dt = sgen.getdata(userCode, mq1);
                                if (dt.Rows.Count > 0)
                                {
                                    model[0].Col19 = "Total Recurring Invoices : " + dt.Rows[0]["tot_inv"].ToString();
                                }
                                else { model[0].Col19 = "Total Recurring Invoices : " + "0"; }
                                // total recurring inv active
                                mq1 = "select distinct count(p.vch_num) tot_inv from itransactionc p inner join clients_mst c on p.acode = c.vch_num and c.type = 'BCD' and find_in_set(c.client_unit_id, p.client_unit_id)= 1 and c.vch_num='" + model[0].Col16 + "' where " +
                   "p.client_unit_id = '" + unitid_mst + "' and p.type = 'RIV' and to_date(to_char(p.vch_DATE,'ddMMyyyy'),'ddMMyyyy') " +
                   "between to_date('" + year_from + "', '" + sgen.Getsqldatetimeformat() + "') and to_date('" + year_to + "','" + sgen.Getsqldatetimeformat() + "') " +
                   "and to_char(sysdate, 'ddmmyyyy') between to_char(p.date1,'ddmmyyyy') and (case when p.MMT = 'N' then to_char(date2,'ddmmyyyy') else to_char(sysdate + 1, 'ddmmyyyy') end) " +
                   "order by p.vch_num desc";
                                dt = sgen.getdata(userCode, mq1);
                                if (dt.Rows.Count > 0)
                                {
                                    model[0].Col20 = "Active Recurring Invoices : " + dt.Rows[0]["tot_inv"].ToString();
                                }
                                else { model[0].Col20 = "Active Recurring Invoices : " + "0"; }
                                // total expired recurring
                                mq1 = "select distinct count(p.vch_num) tot_inv from itransactionc p inner join clients_mst c on p.acode = c.vch_num and c.type = 'BCD' and find_in_set(c.client_unit_id, p.client_unit_id)= 1 and c.vch_num='" + model[0].Col16 + "' where " +
           "p.client_unit_id = '" + unitid_mst + "' and p.type = 'RIV' and to_date(to_char(p.vch_DATE,'ddMMyyyy'),'ddMMyyyy') " +
           "between to_date('" + year_from + "', '" + sgen.Getsqldatetimeformat() + "') and to_date('" + year_to + "','" + sgen.Getsqldatetimeformat() + "') " +
           "and to_char(sysdate, 'ddmmyyyy') between to_char(p.date1,'ddmmyyyy') and (case when p.MMT = 'Y' then to_char(date2,'ddmmyyyy') else to_char(sysdate + 1, 'ddmmyyyy') end) " +
           "order by p.vch_num desc";
                                dt = sgen.getdata(userCode, mq1);
                                if (dt.Rows.Count > 0)
                                {
                                    model[0].Col21 = "Expired Recurring Invoices : " + dt.Rows[0]["tot_inv"].ToString();
                                }
                                else { model[0].Col21 = "Expired Recurring Invoices : " + "0"; }
                                // total drafts
                                mq1 = "select distinct count(p.vch_num) tot_inv from itransactionc p inner join clients_mst c on p.acode = c.vch_num and c.type = 'BCD' and find_in_set(c.client_unit_id, p.client_unit_id)= 1 and c.vch_num='" + model[0].Col16 + "' where " +
           "p.client_unit_id = '" + unitid_mst + "' and p.type = 'DIV' and to_date(to_char(p.vch_DATE,'ddMMyyyy'),'ddMMyyyy') " +
           "between to_date('" + year_from + "', '" + sgen.Getsqldatetimeformat() + "') and to_date('" + year_to + "','" + sgen.Getsqldatetimeformat() + "') " +
           "and to_char(sysdate, 'ddmmyyyy') between to_char(p.date1,'ddmmyyyy') and (case when p.MMT = 'Y' then to_char(date2,'ddmmyyyy') else to_char(sysdate + 1, 'ddmmyyyy') end) " +
           "order by p.vch_num desc";
                                dt = sgen.getdata(userCode, mq1);
                                if (dt.Rows.Count > 0)
                                {
                                    model[0].Col22 = "Total Drafts Invoices : " + dt.Rows[0]["tot_inv"].ToString();
                                }
                                else { model[0].Col22 = "Total Drafts Invoices : " + "0"; }
                            }
                            else
                            {
                                model[0].Col18 = "Total Invoices : " + "0";
                                model[0].Col19 = "Total Recurring Invoices : " + "0";
                                model[0].Col20 = "Active Recurring Invoices : " + "0";
                                model[0].Col21 = "Expired Recurring Invoices : " + "0";
                                model[0].Col22 = "Total Drafts Invoices : " + "0";
                            }
                            break;
                    }
                    break;
                #endregion
                #region add_kr
                case "add_kr":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            mq = "select a.*,to_char(a.vch_date,'" + sgen.Getsqldateformat() + "') due_date from kc_tab a where a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type ='" + URL + "'";
                            dt = sgen.getdata(userCode, mq);
                            TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.country(userCode, unitid_mst);
                            #region state                   
                            mq0 = "select distinct state_name,state_gst_code from country_state where state_name!='-' order by state_name";
                            DataTable dtd = sgen.getdata(userCode, mq0);
                            if (dtd.Rows.Count > 0)
                            {
                                foreach (DataRow dr1 in dtd.Rows)
                                {
                                    mod2.Add(new SelectListItem { Text = dr1["state_name"].ToString(), Value = dr1["state_gst_code"].ToString() });
                                }
                            }
                            TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2;
                            #endregion
                            #region sub legis                   
                            mq1 = "select master_id,master_name from master_setting where type ='SLG' and client_unit_id='" + unitid_mst + "'";
                            DataTable dtv = sgen.getdata(userCode, mq1);
                            if (dtv.Rows.Count > 0)
                            {
                                foreach (DataRow dr1 in dtv.Rows)
                                {
                                    mod5.Add(new SelectListItem { Text = dr1["master_name"].ToString(), Value = dr1["master_id"].ToString() });
                                }
                            }
                            TempData[MyGuid + "_TList5"] = model[0].TList5 = mod5;
                            #endregion
                            //TempData[MyGuid + "_TList3"] = model[0].TList3 = mod3;
                            TempData[MyGuid + "_TList4"] = model[0].TList4 = mod4 = cmd_Fun.legislationstype(userCode, unitid_mst);
                            TempData[MyGuid + "_TList6"] = model[0].TList6 = mod6 = cmd_Fun.act_name(userCode, unitid_mst);
                            TempData[MyGuid + "_TList7"] = model[0].TList7 = mod7 = cmd_Fun.rule_name(userCode, unitid_mst);
                            //TempData[MyGuid + "_TList8"] = model[0].TList8 = mod8;
                            TempData[MyGuid + "_TList9"] = model[0].TList9 = mod9 = cmd_Fun.freqtype(userCode, unitid_mst);
                            TempData[MyGuid + "_TList10"] = model[0].TList10 = mod10 = cmd_Fun.statauttype(userCode, unitid_mst);
                            TempData[MyGuid + "_TList11"] = model[0].TList11 = mod11 = cmd_Fun.compliancetype(userCode, unitid_mst);
                            TempData[MyGuid + "_TList12"] = model[0].TList12 = mod12 = cmd_Fun.criticality(userCode, unitid_mst);
                            TempData[MyGuid + "_TList13"] = model[0].TList13 = mod13 = cmd_Fun.priority(userCode, unitid_mst);
                            if (dt.Rows.Count > 0)
                            {
                                if (btnval == "EDIT")
                                {
                                    model = getedit(model, dt, URL);
                                }
                                String[] L1 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["col6"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems1 = L1;
                                String[] L2 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["col7"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems2 = L2;
                                String[] L10 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["col14"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems10 = L10;
                                String[] L4 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["col9"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems4 = L4;
                                String[] L5 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["col10"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems5 = L5;
                                String[] L6 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["col11"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems6 = L6;
                                String[] L7 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["col12"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems7 = L7;
                                String[] L9 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["col13"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems9 = L9;
                                String[] L11 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["col15"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems11 = L11;
                                String[] L12 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["col16"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems12 = L12;
                                String[] L13 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["col17"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems13 = L13;
                                model[0].Col16 = dt.Rows[0]["vch_num"].ToString();
                                model[0].Col17 = dt.Rows[0]["col1"].ToString();
                                model[0].Col18 = dt.Rows[0]["col2"].ToString();
                                model[0].Col19 = dt.Rows[0]["col3"].ToString();
                                model[0].Col20 = dt.Rows[0]["col4"].ToString();
                                model[0].Col21 = dt.Rows[0]["due_date"].ToString();
                                model[0].Col22 = dt.Rows[0]["col41"].ToString();
                                model[0].Col23 = dt.Rows[0]["col5"].ToString();
                                model[0].Col24 = dt.Rows[0]["col69"].ToString();

                                #region attachment
                                DataTable dtf = new DataTable();
                                dtf = sgen.getdata(userCode, "select client_id||client_unit_id||vch_num||to_char(vch_date,'yyyymmdd')||type as fstr, rec_id,file_name,file_path,col1,col2,description,Col3 from file_tab where vch_num='" + dt.Rows[0]["vch_num"].ToString() + "' and type in " +
                                "('" + tm.Col12 + "','DD" + model[0].Col12 + "') and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "' and col1='AKR'");
                                List<Tmodelmain> ltmf = new List<Tmodelmain>();
                                string des = "", title = "", f_recid = "";
                                if (dtf.Rows.Count > 0)
                                {
                                    model[0].Col31 = dtf.Rows[0]["col3"].ToString();
                                    model[0].Col32 = dtf.Rows[0]["description"].ToString();
                                    foreach (DataRow drf in dtf.Rows)
                                    {
                                        Tmodelmain tmf = new Tmodelmain();
                                        tmf.Col4 = drf["file_path"].ToString();
                                        tmf.Col1 = drf["file_name"].ToString();
                                        tmf.Col2 = drf["col1"].ToString();
                                        tmf.Col3 = drf["rec_id"].ToString();
                                        tmf.Col97 = drf["rec_id"].ToString();
                                        tmf.Col5 = drf["description"].ToString();
                                        des = drf["description"].ToString();
                                        title = drf["Col3"].ToString();
                                        tmf.Col6 = drf["col3"].ToString();
                                        tmf.Col7 = drf["col2"].ToString();
                                        ltmf.Add(tmf);
                                    }
                                }
                                model[0].LTM1 = ltmf;
                                #endregion
                            }
                            break;
                        case "FDEL":
                            string fid = sgen.GetSession(MyGuid, "delid").ToString();
                            res = sgen.execute_cmd(userCode, "Delete from file_tab WHERE rec_id='" + fid + "' and type='AKR' and client_id='"
              + clientid_mst + "' and client_unit_id='" + unitid_mst + "'");
                            sgen.SetSession(MyGuid, "delid", null);
                            if (res)
                            {
                                var LTM = model[0].LTM1;
                                for (int d = 0; d < LTM.Count; d++)
                                {
                                    var id = LTM[d].Col3;
                                    if (id == fid) { model[0].LTM1.RemoveAt(d); }
                                }
                            }
                            break;
                    }
                    break;
                #endregion
                #region as_contracts
                case "as_contracts":
                    switch (btnval.ToUpper())
                    {
                        case "VENDOR":

                            mq = cmd_Fun.getparty(URL);
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                model[0].Col18 = dt.Rows[0]["vch_num"].ToString();
                                model[0].Col19 = dt.Rows[0]["c_name"].ToString();
                            }
                            break;

                        case "EDIT":
                            mq = "select a.col15, a.col5,a.col14, a.rec_id,a.ent_by,a.ent_date,a.client_id,a.client_unit_id,a.col7,a.col9,a.col10,a.col11,to_char(a.date1,'" + sgen.Getsqldateformat() + "') date1," +
                                "to_char(a.date2,'" + sgen.Getsqldateformat() + "') date2, a.col12,a.col13, a.vch_num ,a.vch_date," +
                                        "b.c_name vendor_name,a.col3  from enx_tab a inner join clients_mst b on a.col7=b.vch_num " +
                                        "and find_in_set(b.client_unit_id,'" + unitid_mst + "')=1 and substr(b.vch_num,0,3)='203' where a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type='" + URL + "'";

                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                if (btnval == "EDIT")
                                {
                                    model = getedit(model, dt, URL);
                                }

                                DataTable dtr = sgen.getdata(userCode, "select distinct vch_num,col5 as role_name from enx_tab2 where type='ROL' and client_unit_id='" + unitid_mst + "'");
                                DataTable dtas = sgen.getdata(userCode, "select distinct vch_num,col3 as asset_name from enx_tab2 where type='ASS' and client_unit_id='" + unitid_mst + "'");

                                TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1 = cmd_Fun.servtype(userCode, unitid_mst);
                                TempData[MyGuid + "_Tlist2"] = model[0].TList2 = mod2 = sgen.dt_to_selectlist(dtr);
                                TempData[MyGuid + "_Tlist3"] = model[0].TList3 = mod3 = cmd_Fun.username(userCode);
                                TempData[MyGuid + "_Tlist4"] = model[0].TList4 = mod4 = sgen.dt_to_selectlist(dtas);



                                model[0].SelectedItems1 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["col9"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems2 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["col10"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems3 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["col11"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems4 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["col14"].ToString()).Distinct()).Split(',');



                                model[0].Col16 = dt.Rows[0]["vch_num"].ToString();
                                model[0].Col17 = dt.Rows[0]["col3"].ToString();
                                model[0].Col18 = dt.Rows[0]["col7"].ToString();
                                model[0].Col19 = dt.Rows[0]["vendor_name"].ToString();
                                model[0].Col24 = dt.Rows[0]["col5"].ToString();

                                model[0].Col20 = dt.Rows[0]["date1"].ToString();
                                model[0].Col21 = dt.Rows[0]["date2"].ToString();
                                model[0].Chk1 = dt.Rows[0]["col15"].ToString() == "Y" ? true : false;
                                model[0].Chk2 = dt.Rows[0]["col13"].ToString() == "Y" ? true : false;

                                #region attachment
                                DataTable dtf = new DataTable();
                                dtf = sgen.getdata(userCode, "select client_id||client_unit_id||vch_num||to_char(vch_date,'yyyymmdd')||type as fstr, rec_id,file_name,file_path,col1,col2,description,Col3 from file_tab where vch_num='" + model[0].Col16 + "' and type in " +
                                    "('" + model[0].Col12 + "','DD" + model[0].Col12 + "') and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "' and col1='CTR'");
                                List<Tmodelmain> ltmf = new List<Tmodelmain>();
                                string des = "", title = "", f_recid = "";
                                if (dtf.Rows.Count > 0)
                                {
                                    model[0].Col31 = dtf.Rows[0]["col3"].ToString();
                                    model[0].Col32 = dtf.Rows[0]["description"].ToString();
                                    foreach (DataRow drf in dtf.Rows)
                                    {
                                        Tmodelmain tmf = new Tmodelmain();
                                        tmf.Col4 = drf["file_path"].ToString();
                                        tmf.Col1 = drf["file_name"].ToString();
                                        tmf.Col2 = drf["col1"].ToString();
                                        tmf.Col3 = drf["rec_id"].ToString();
                                        tmf.Col97 = drf["rec_id"].ToString();
                                        tmf.Col5 = drf["description"].ToString();
                                        des = drf["description"].ToString();
                                        title = drf["Col3"].ToString();
                                        tmf.Col6 = drf["col3"].ToString();
                                        tmf.Col7 = drf["col2"].ToString();
                                        ltmf.Add(tmf);
                                    }
                                }
                                model[0].LTM1 = ltmf;
                                #endregion
                            }

                            break;

                        case "FDEL":
                            string fid = sgen.GetSession(MyGuid, "delid").ToString();
                            res = sgen.execute_cmd(userCode, "Delete from file_tab WHERE rec_id='" + fid + "'  and client_id='"
              + clientid_mst + "' and client_unit_id='" + unitid_mst + "'");
                            sgen.SetSession(MyGuid, "delid", null);
                            if (res)
                            {
                                var LTM = model[0].LTM1;
                                for (int d = 0; d < LTM.Count; d++)
                                {
                                    var id = LTM[d].Col3;
                                    if (id == fid) { model[0].LTM1.RemoveAt(d); }
                                }
                            }
                            break;
                    }
                    break;
                    #endregion
            }
            return model;
        }

        #endregion
        //========================Methods==============
        #region Function_Master

        public ActionResult prog()
        {
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);

            FillMst(MyGuid);

            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);


            List<SelectListItem> md1 = new List<SelectListItem>();
            List<SelectListItem> md2 = new List<SelectListItem>();
            List<SelectListItem> md3 = new List<SelectListItem>();
            List<SelectListItem> md4 = new List<SelectListItem>();
            model[0].TList1 = md1;
            model[0].TList2 = md2;
            model[0].TList3 = md3;
            model[0].TList4 = md4;
            model[0].SelectedItems1 = new string[] { "" };
            model[0].SelectedItems2 = new string[] { "" };
            model[0].SelectedItems3 = new string[] { "" };
            model[0].SelectedItems4 = new string[] { "" };
            TempData[MyGuid + "_TList1"] = model[0].TList1;
            TempData[MyGuid + "_TList2"] = model[0].TList2;
            TempData[MyGuid + "_TList3"] = model[0].TList3;
            TempData[MyGuid + "_TList4"] = model[0].TList4;

            model[0].Col9 = "FUNCTION BOOKING";
            model[0].Col10 = "enx_tab2";
            model[0].Col12 = "FUN";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";

            DataTable dt = sgen.getdata(userCode, "select '' pax,'1' SNo ,'-' booking_date,'0' NO_Pax,'0' Rate,'0' Amount,'-' Remark,'0'as Ref_code  from dual");
            model[0].dt1 = dt;
            sgen.SetSession(MyGuid, "BPR_DT", dt);

            dt = sgen.getdata(userCode, "select '' head,'1' SNo ,'-' Head_Id,'-' Head_Name,'0' Amount ,'-' Remark from dual");
            model[0].dt2 = dt;
            sgen.SetSession(MyGuid, "OTH_DT", dt);

            return View(model);
        }

        public List<Tmodelmain> newprog(List<Tmodelmain> model)
        {

            model = getnew(model);

            #region FillFunctionType


            //List<SelectListItem> mod1 = cmd_Fun.funtype(userCode, clientid_mst, unitid_mst);
            List<SelectListItem> mod1 = cmd_Fun.funtype(userCode, unitid_mst);
            TempData[MyGuid + "_Tlist1"] = mod1;
            model[0].TList1 = mod1;
            model[0].SelectedItems1 = new string[] { "" };
            model[0].Col20 = "Y";
            #endregion

            #region Service Type         


            List<SelectListItem> mod2 = cmd_Fun.sertype(userCode, unitid_mst);
            TempData[MyGuid + "_Tlist2"] = mod2;
            model[0].TList2 = mod2;
            model[0].SelectedItems2 = new string[] { "" };

            #endregion
            #region Menu Type         

            List<SelectListItem> mod3 = cmd_Fun.menustype(userCode, unitid_mst);
            TempData[MyGuid + "_Tlist3"] = mod3;
            model[0].TList3 = mod3;
            model[0].SelectedItems3 = new string[] { "" };

            #endregion
            #region Hall Type         
            defval = "";
            List<SelectListItem> mod4 = cmd_Fun.iloc(userCode, unitid_mst, out defval);
            TempData[MyGuid + "_Tlist4"] = mod4;
            model[0].TList4 = mod4;
            model[0].SelectedItems4 = new string[] { defval };

            #endregion

            return model;
        }
        [HttpPost]
        public ActionResult prog(List<Tmodelmain> model, string command, string mid, string hfrow, string hftable)
        {
            try
            {

                FillMst(model[0].Col15);
                DataSet ds = new DataSet();
                if (hftable.Trim() != "")
                {
                    ds = sgen.setDS(hftable);
                    model[0].dt1 = ds.Tables[0];
                    model[0].dt2 = ds.Tables[1];
                    if (model[0].dt2.Rows.Count == 0) model[0].dt2 = ((DataTable)sgen.GetSession(MyGuid, "OTH_DT"));
                    if (model[0].dt1.Rows.Count == 0) model[0].dt1 = ((DataTable)sgen.GetSession(MyGuid, "BPR_DT"));
                }
                var tm = model.FirstOrDefault();

                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_Tlist1"];
                List<SelectListItem> mod2 = (List<SelectListItem>)TempData[MyGuid + "_Tlist2"];
                List<SelectListItem> mod3 = (List<SelectListItem>)TempData[MyGuid + "_Tlist3"];
                List<SelectListItem> mod4 = (List<SelectListItem>)TempData[MyGuid + "_Tlist4"];
                model[0].TList1 = mod1;
                model[0].TList2 = mod2;
                model[0].TList3 = mod3;
                model[0].TList4 = mod4;
                TempData[MyGuid + "_Tlist1"] = model[0].TList1;
                TempData[MyGuid + "_Tlist2"] = model[0].TList2;
                TempData[MyGuid + "_Tlist3"] = model[0].TList3;
                TempData[MyGuid + "_Tlist4"] = model[0].TList4;
                if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                if (model[0].SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
                if (model[0].SelectedItems3 == null) model[0].SelectedItems3 = new string[] { "" };
                if (model[0].SelectedItems4 == null) model[0].SelectedItems4 = new string[] { "" };


                if (command == "New")
                {
                    model = newprog(model);

                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command.Trim() == "Save" || command.Trim() == "Update" || command == "Save & New" || command == "Update & New")
                {


                    var tmodel = model.FirstOrDefault();
                    string currdate = sgen.server_datetime(userCode);
                    string cond = "", found = "";
                    DataTable dtstr = new DataTable();

                    if (model[0].Col20 == "N")
                    {
                        model[0].Col12 = "DD" + model[0].Col12;
                    }

                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        isedit = true;
                        vch_num = model[0].Col16;
                    }
                    else
                    {
                        isedit = false;
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        model[0].Col16 = vch_num;
                    }

                    //dtstr = sgen.getdata(userCode, "select * from " + model[0].Col10 + " WHERE 1=2");
                    dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());

                    #region dtstr
                    for (int i = 0; i < model[0].dt1.Rows.Count; i++)
                    {
                        DataRow dr = dtstr.NewRow();
                        dr["rec_id"] = "0";
                        dr["vch_num"] = vch_num;

                        dr["vch_date"] = currdate;
                        dr["date1"] = sgen.Savedate(model[0].Col17, false);   //Date OF Fuction

                        dr["type"] = model[0].Col12;
                        dr["col2"] = model[0].Col18;     //No. Of Pax
                        dr["col9"] = model[0].dt1.Rows[i][3].ToString();     //No. Of Pax
                        dr["date2"] = sgen.Savedate(model[0].dt1.Rows[i][2].ToString(), false);     //Pax Date
                        dr["col10"] = model[0].dt1.Rows[i][4].ToString();     //Pax Rate
                        dr["col5"] = model[0].SelectedItems1.FirstOrDefault();   //Function Type
                        dr["col3"] = model[0].Col19;//Name of party
                        dr["col7"] = model[0].Col21;//party contact
                        dr["col6"] = model[0].Col22;//party email
                        dr["col4"] = model[0].Col23;//party address
                        dr["col14"] = model[0].dt1.Rows[i][6].ToString();//remark
                        dr["col11"] = model[0].SelectedItems2.FirstOrDefault();   //service Type
                        dr["col17"] = model[0].SelectedItems3.FirstOrDefault();   //menu Type
                        dr["R_NO"] = model[0].SelectedItems4.FirstOrDefault();   //hall Type

                        #endregion


                        dr = getsave(currdate, dr, model, isedit);



                        dr["REF_CODE"] = model[0].dt1.Rows[i][7].ToString();//refcode
                        dtstr.Rows.Add(dr);
                    }
                    bool Result = sgen.Update_data(userCode, dtstr, model[0].Col10.Trim(), tmodel.Col8, isedit);
                    if (Result == true)
                    {
                        dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                        #region Other cost
                        for (int i = 0; i < model[0].dt2.Rows.Count; i++)
                        {

                            DataRow dr = dtstr.NewRow();
                            dr["rec_id"] = "0";
                            dr["type"] = "OTH";
                            dr["vch_num"] = vch_num.Trim();
                            dr["col6"] = model[0].dt2.Rows[i][2].ToString();   //Head ID
                            dr["col4"] = model[0].dt2.Rows[i][5].ToString();    //Remark
                            dr["col9"] = model[0].dt2.Rows[i][4].ToString();   //Amount


                            dr = getsave(currdate, dr, model, isedit);
                            dtstr.Rows.Add(dr);
                        }
                        Result = sgen.Update_data(userCode, dtstr, model[0].Col10.Trim(), tmodel.Col29, isedit);
                        #endregion
                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col9 = tm.Col9,
                            Col10 = tm.Col10,
                            Col11 = tm.Col11,
                            Col12 = tm.Col12,
                            Col13 = "Save",
                            Col100 = "Save & New",
                            Col121 = "S",
                            Col122 = "<u>S</u>ave",
                            Col123 = "Save & Ne<u>w</u>",
                            Col14 = tm.Col14,
                            Col15 = tm.Col15,
                            TList1 = mod1,
                            TList2 = mod2,
                            TList3 = mod3,
                            TList4 = mod4,
                            SelectedItems1 = new string[] { "" },
                            SelectedItems2 = new string[] { "" },
                            SelectedItems3 = new string[] { "" },
                            SelectedItems4 = new string[] { "" },
                            dt1 = (DataTable)sgen.GetSession(MyGuid, "BPR_DT"),
                            dt2 = (DataTable)sgen.GetSession(MyGuid, "OTH_DT")
                        });
                        if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                        {
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                        {
                            try
                            {
                                model = newprog(model);
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                            }
                            catch (Exception ex)
                            {
                                ViewBag.scripCall += "mytoast('error', 'toast-top-right', '" + ex.Message.ToString().Trim() + "');";

                            }
                        }
                    }
                    else
                    {
                        ViewBag.scripCall = "showmsgJS(1, 'Record Not Saved', 2);";
                    }

                }

                else if (command == "+")
                {
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                    if (model[0].dt1.Rows.Count != 0) model[0].dt1.Rows.Add(sgen.Make_int(hfrow));
                    else { model[0].dt1 = (DataTable)sgen.GetSession(MyGuid, "BPR_DT"); }
                }
                else if (command == "-")
                {
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                    if (model[0].dt1.Rows.Count > 1) model[0].dt1.Rows.RemoveAt(sgen.Make_int(hfrow));
                    else { model[0].dt1 = (DataTable)sgen.GetSession(MyGuid, "BPR_DT"); }
                }

                else if (command == "2-")
                {
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                    if (model[0].dt2.Rows.Count > 1) model[0].dt2.Rows.RemoveAt(sgen.Make_int(hfrow));
                    else { model[0].dt1 = (DataTable)sgen.GetSession(MyGuid, "OTH_DT"); }
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }

        #endregion
        #region Amount Exp
        public ActionResult amount_exp()
        {
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);

            FillMst(MyGuid);
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);

            model[0].Col9 = "EXPENSE AMOUNT";
            model[0].Col10 = "enx_tab2";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "BEH";

            DataTable dt = sgen.getdata(userCode, "select '' head,'1' SNo ,'-' Head_Id,'-' Head_Name,'0' Amount ,'-' Remark from dual");
            model[0].dt1 = dt;
            sgen.SetSession(MyGuid, "BEX_DT", dt);

            return View(model);
        }

        [HttpPost]
        public ActionResult amount_exp(List<Tmodelmain> model, string command, string mid, string hfrow, string hftable)
        {
            try
            {

                FillMst(model[0].Col15);
                DataTable dtm = sgen.settable(hftable);
                model[0].dt1 = dtm;
                var tm = model.FirstOrDefault();

                //if (command == "New")
                //{
                //    model = newamount_exp(model);
                //    //model = getnew(model);

                //    #region FillFunctionType
                //    //DataTable dt1 = new DataTable();
                //    //dt1 = sgen.getdata(userCode, "select master_id,master_name from master_setting where type='FUN'");
                //    //if (dt1.Rows.Count > 0)
                //    //{
                //    //    foreach (DataRow dr in dt1.Rows)
                //    //    {
                //    //        mod1.Add(new SelectListItem { Text = dr["master_name"].ToString(), Value = dr["master_id"].ToString() });
                //    //    }
                //    //}
                //    //TempData[MyGuid + "_List1"] = mod1;
                //    //model[0].TList1 = mod1;
                //    //model[0].SelectedItems1 = new string[] { "" };
                //    //#endregion


                //    //#region FillExpHead
                //    //dt1 = sgen.getdata(userCode, "select master_id,master_name from master_setting where type='BEH'");
                //    //if (dt1.Rows.Count > 0)
                //    //{
                //    //    foreach (DataRow dr in dt1.Rows)
                //    //    {
                //    //        mod2.Add(new SelectListItem { Text = dr["master_name"].ToString(), Value = dr["master_id"].ToString() });
                //    //    }
                //    //}
                //    //TempData[MyGuid + "_List2"] = mod2;
                //    //model[0].TList2 = mod2;
                //    //model[0].SelectedItems2 = new string[] { "" };
                //    #endregion


                //}
                if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    if (btnval.Equals("VIEW"))
                    {
                        DataTable dt = sgen.getdata(userCode, "select '1' SNo ,'-' Head_Id,'-' Head_Name,'0' Amount ,'-' Remark from dual");
                        model[0].dt1 = dt;
                        sgen.SetSession(MyGuid, "BEX_DT", dt);
                    }
                    model = StartCallback(model);
                }
                else if (command.Trim() == "Save" || command.Trim() == "Update" || command == "Save & New" || command == "Update & New")
                {

                    var tmodel = model.FirstOrDefault();
                    string currdate = sgen.server_datetime(userCode);
                    string cond = "", found = "";
                    DataTable dtstr = new DataTable();

                    //dtstr = sgen.getdata(userCode, "select * from " + model[0].Col10 + " WHERE 1=2");
                    dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        isedit = true;
                        vch_num = model[0].Col16;
                    }
                    else
                    {
                        isedit = false;
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        model[0].Col16 = vch_num;
                    }
                    for (int i = 0; i < model[0].dt1.Rows.Count; i++)
                    {

                        DataRow dr = dtstr.NewRow();
                        dr["rec_id"] = "0";
                        dr["type"] = model[0].Col12;
                        dr["vch_num"] = vch_num.Trim();
                        dr["vch_date"] = currdate;
                        dr["col3"] = model[0].Col20;      //Party 
                        dr["col5"] = model[0].Col23;//Function id
                        dr["col6"] = model[0].dt1.Rows[i][2].ToString();   //Head ID
                        dr["col4"] = model[0].dt1.Rows[i][4].ToString();    //Remark
                        dr["col9"] = model[0].dt1.Rows[i][5].ToString();   //Amount


                        dr = getsave(currdate, dr, model, isedit);
                        dtstr.Rows.Add(dr);
                    }
                    bool Result = sgen.Update_data(userCode, dtstr, model[0].Col10.Trim(), tmodel.Col8, isedit);
                    if (Result == true)
                    {
                        vch_num = model[0].Col16;
                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col10 = tm.Col10,
                            Col11 = tm.Col11,
                            Col12 = tm.Col12,
                            Col13 = "Save",
                            Col100 = "Save & New",
                            Col121 = "S",
                            Col122 = "<u>S</u>ave",
                            Col123 = "Save & Ne<u>w</u>",
                            Col14 = tm.Col14,
                            Col15 = tm.Col15,
                            Col9 = tm.Col9,
                            dt1 = (DataTable)sgen.GetSession(MyGuid, "BEX_DT")

                        });
                        if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                        {
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.scripCall = "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                        {
                            try
                            {
                                Make_query("amount_exp", "Select Party", "NEW", "1", "", "", MyGuid);
                                ViewBag.scripCall = "callFoo('Select Party');";
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                            }
                            catch (Exception ex) { }
                        }
                    }
                    else
                    {
                        ViewBag.scripCall = "showmsgJS(1, 'Record Not Saved', 2);";
                    }
                }
                else if (command == "-")
                {

                    if (model[0].dt1.Rows.Count > 1) model[0].dt1.Rows.RemoveAt(sgen.Make_int(hfrow));
                    else { model[0].dt1 = (DataTable)sgen.GetSession(MyGuid, "BEX_DT"); }
                }

            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);

        }
        #endregion
        #region booking amt
        public ActionResult booking_amt()
        {
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);

            FillMst(MyGuid);
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);

            model[0].Col9 = "BOOKING AMOUNT";
            model[0].Col10 = "enx_tab2";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "BAM";

            List<SelectListItem> md1 = new List<SelectListItem>();
            model[0].TList1 = md1;
            model[0].SelectedItems1 = new string[] { "" };
            TempData[MyGuid + "_TList1"] = model[0].TList1;
            return View(model);
        }
        public List<Tmodelmain> new_booking_amt(List<Tmodelmain> model)
        {
            try
            {
                List<SelectListItem> mod1 = new List<SelectListItem>();
                model = getnew(model);
                #region Mode of payment
                mod1 = cmd_Fun.Modeofpayment(userCode, unitid_mst);
                TempData[MyGuid + "_Tlist1"] = mod1;
                model[0].TList1 = mod1;
                model[0].SelectedItems1 = new string[] { "" };
                #endregion
            }
            catch (Exception ex)
            { ViewBag.scripCall = "showmsgJS(1, '" + ex.Message.ToString().Replace("'", "") + "', 1);"; }
            return model;
        }
        [HttpPost]
        public ActionResult booking_amt(List<Tmodelmain> model, string command, string mid, string hfrow, string hftable)
        {
            try
            {

                FillMst(model[0].Col15);
                //Session["viewName"] = actionName;
                //Session["controllerName"] = controllerName;
                DataTable dtm = sgen.settable(hftable);
                model[0].dt1 = dtm;
                var tm = model.FirstOrDefault();

                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_Tlist1"];
                model[0].TList1 = mod1;
                TempData[MyGuid + "_Tlist1"] = model[0].TList1;
                if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };

                if (command == "New")
                {
                    model = new_booking_amt(model);
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command.Trim() == "Save" || command.Trim() == "Update" || command == "Save & New" || command == "Update & New")
                {

                    var tmodel = model.FirstOrDefault();
                    string currdate = "";
                    string cond = "", found = "";
                    DataTable dtstr = new DataTable();

                    dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        isedit = true;
                        vch_num = model[0].Col16;
                        currdate = model[0].Col34;
                    }
                    else
                    {
                        isedit = false;
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        model[0].Col16 = vch_num;
                        currdate = sgen.server_datetime(userCode);
                    }
                    DataRow dr = dtstr.NewRow();
                    dr["rec_id"] = "0";
                    dr["type"] = model[0].Col12;
                    dr["vch_num"] = vch_num.Trim();
                    dr["vch_date"] = currdate;
                    dr["col3"] = model[0].Col28; // Amount
                    dr["col5"] = model[0].Col23;//Function id
                    dr["col6"] = model[0].SelectedItems1.FirstOrDefault();   //Mode of payment
                    dr["col4"] = model[0].Col29;    //Remark
                    dr["date1"] = sgen.SaveDate_dt(model[0].Col39, false);    //received date
                    dr = getsave(currdate, dr, model, isedit);
                    dtstr.Rows.Add(dr);

                    bool Result = sgen.Update_data(userCode, dtstr, model[0].Col10.Trim(), tmodel.Col8, isedit);
                    if (Result == true)
                    {
                        vch_num = model[0].Col16;

                        ViewBag.vnew = "";
                        ViewBag.vedit = "";
                        ViewBag.vsave = "disabled='disabled'";
                        ViewBag.vsavenew = "disabled='disabled'";
                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col10 = tm.Col10,
                            Col11 = tm.Col11,
                            Col12 = tm.Col12,
                            Col13 = "Save",
                            Col100 = "Save & New",
                            Col121 = "S",
                            Col122 = "<u>S</u>ave",
                            Col123 = "Save & Ne<u>w</u>",
                            Col14 = tm.Col14,
                            Col15 = tm.Col15,
                            Col9 = tm.Col9,
                            TList1 = mod1,
                            SelectedItems1 = new string[] { "" },

                        });
                        if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                        {
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.scripCall = "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                        {
                            try
                            {
                                model = new_booking_amt(model);
                                ViewBag.scripCall = "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                            }
                            catch (Exception ex) { }
                        }

                    }
                    else
                    {
                        ViewBag.scripCall = "showmsgJS(1, 'Record Not Saved', 2);";
                    }
                }

                else if (command == "+")
                {
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                    if (model[0].dt1.Rows.Count != 0) model[0].dt1.Rows.Add(sgen.Make_int(hfrow));
                    else { model[0].dt1 = (DataTable)sgen.GetSession(MyGuid, "BAMT_DT"); }
                }
                else if (command == "-")
                {
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                    if (model[0].dt1.Rows.Count > 1) model[0].dt1.Rows.RemoveAt(sgen.Make_int(hfrow));
                    else { model[0].dt1 = (DataTable)sgen.GetSession(MyGuid, "BAMT_DT"); }
                }

            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);




        }
        #endregion
        #region rate card
        public ActionResult rcard()
        {
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            FillMst(MyGuid);
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            model[0].Col9 = "RATE CARD";
            model[0].Col10 = "enx_tab2";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "RCC";
            List<SelectListItem> md1 = new List<SelectListItem>();
            TempData[MyGuid + "_TList1"] = model[0].TList1 = md1;
            //  TempData[MyGuid + "_TList2"] = model[0].TList2 = md1;
            model[0].SelectedItems1 = new string[] { "" };
            //  model[0].SelectedItems2 = new string[] { "" };
            return View(model);
        }
        public List<Tmodelmain> new_rcard(List<Tmodelmain> model)
        {
            model = getnew(model);
            var tm = model.FirstOrDefault();
            #region Dropdwon
            List<SelectListItem> mod1 = new List<SelectListItem>();
            //     List<SelectListItem> mod2 = new List<SelectListItem>();
            TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.desig(userCode, unitid_mst);
            //TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2 = cmd_Fun.transportmode(userCode, unitid_mst);
            model[0].SelectedItems1 = new string[] { "" };
            // model[0].SelectedItems2 = new string[] { "" };
            #endregion
            return model;
        }
        [HttpPost]
        public ActionResult rcard(List<Tmodelmain> model, string command, string mid)
        {
            try
            {
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();
                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
                if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                if (command == "New")
                {
                    model = new_rcard(model);
                }
                else if (command == "Print")
                {
                    DataTable qrdt = new DataTable();
                    qrdt = sgen.getdata(userCode, "select 'hello' as hi from dual");
                    sgen.open_report_bydt_xml(userCode, qrdt, "fin_statement", "Statements");
                    ViewBag.scripCall += "showRptnew('Financial Statement Analysis');";
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {

                    var tmodel = model.FirstOrDefault();
                    string currdate = "";
                    DataTable dtstr = new DataTable();
                    dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                    currdate = sgen.server_datetime(userCode);

                    #region dtstr
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        isedit = true;
                        vch_num = model[0].Col16;
                    }
                    else
                    {
                        isedit = false;
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        model[0].Col16 = vch_num;
                    }
                    DataRow dr = dtstr.NewRow();
                    dr["rec_id"] = "0";
                    dr["type"] = model[0].Col12;
                    dr["vch_num"] = vch_num.Trim();
                    dr["vch_date"] = currdate;
                    dr["col3"] = model[0].Col17; // RAte
                    dr["col6"] = string.Join(",", model[0].SelectedItems1);   //Desig
                                                                              // dr["col7"] = model[0].SelectedItems2.FirstOrDefault();   //mode
                    dr = getsave(currdate, dr, model, isedit);
                    dtstr.Rows.Add(dr);

                    #endregion
                    bool Result = sgen.Update_data(userCode, dtstr, model[0].Col10.Trim(), tmodel.Col8, isedit);
                    if (Result == true)
                    {
                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col10 = tm.Col10,
                            Col11 = tm.Col11,
                            Col12 = tm.Col12,
                            Col13 = "Save",
                            Col100 = "Save & New",
                            Col121 = "S",
                            Col122 = "<u>S</u>ave",
                            Col123 = "Save & Ne<u>w</u>",
                            Col14 = tm.Col14,
                            Col15 = tm.Col15,
                            Col9 = tm.Col9,
                            TList1 = mod1,
                            //  TList2 = mod2,
                            SelectedItems1 = new string[] { "" },
                            //  SelectedItems2 = new string[] { "" },
                        });
                        if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                        {
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                        {
                            try
                            {
                                model = new_rcard(model);
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                            }
                            catch (Exception ex) { }
                        }
                    }
                    else
                    {
                        ViewBag.scripCall = "showmsgJS(1, 'Record Not Saved', 2);";
                    }
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);




        }
        #endregion
        #region cost sheet
        public ActionResult csheet()
        {
            FillMst();
            List<Tmodelmain> model = new List<Tmodelmain>();
            List<SelectListItem> md1 = new List<SelectListItem>();
            model = getload(model);
            model[0].Col9 = "COST SHEET";
            model[0].Col10 = "enx_tab2";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "BCS";
            model[0].TList1 = md1;
            model[0].SelectedItems1 = new string[] { "" };
            TempData[MyGuid + "_TList1"] = model[0].TList1;
            return View(model);
        }
        [HttpPost]
        public ActionResult csheet(List<Tmodelmain> model, string command)
        {
            try
            {
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();
                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_Tlist1"];
                model[0].TList1 = mod1;
                TempData[MyGuid + "_Tlist1"] = model[0].TList1;
                if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command.Trim() == "Save" || command.Trim() == "Update" || command == "Save & New" || command == "Update & New")
                {

                    var tmodel = model.FirstOrDefault();
                    string currdate = "";
                    currdate = sgen.server_datetime(userCode);
                    DataTable dtstr = new DataTable();
                    dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        isedit = true;
                        vch_num = model[0].Col16;
                    }
                    else
                    {
                        isedit = false;
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        model[0].Col16 = vch_num;
                    }
                    DataRow dr = dtstr.NewRow();
                    dr["type"] = model[0].Col12;
                    dr["vch_num"] = vch_num.Trim();
                    dr["vch_date"] = currdate;
                    dr["col2"] = model[0].Col18; // prty code
                    dr["col5"] = model[0].SelectedItems1.FirstOrDefault(); //assignment
                    dr = getsave(currdate, dr, model, isedit);
                    dtstr.Rows.Add(dr);
                    bool Result = sgen.Update_data(userCode, dtstr, model[0].Col10.Trim(), tmodel.Col8, isedit);
                    if (Result == true)
                    {
                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col10 = tm.Col10,
                            Col11 = tm.Col11,
                            Col12 = tm.Col12,
                            Col13 = "Save",
                            Col100 = "Save & New",
                            Col121 = "S",
                            Col122 = "<u>S</u>ave",
                            Col123 = "Save & Ne<u>w</u>",
                            Col14 = tm.Col14,
                            Col15 = tm.Col15,
                            Col9 = tm.Col9,
                            TList1 = mod1,
                            SelectedItems1 = new string[] { "" },
                        });
                        if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                        {
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                        {
                            try
                            {
                                Make_query("csheet", "Select Client", "PARTY", "1", "", "", MyGuid);
                                ViewBag.scripCall = "callFoo('Select Client');";
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                            }
                            catch (Exception ex) { }
                        }
                    }
                    else
                    {
                        ViewBag.scripCall = "showmsgJS(1, 'Record Not Saved', 2);";
                    }
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);




        }
        #endregion
        #region attendence
        public ActionResult att()
        {
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            FillMst(MyGuid);
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            model[0].Col9 = "ATTENDENCE";
            model[0].Col10 = "kc_tab";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "ATT";

            List<SelectListItem> mod1 = new List<SelectListItem>();
            model[0].LTM2 = new List<Tmodelmain>();
            Tmodelmain tmltm2 = new Tmodelmain();
            tmltm2.TList1 = mod1;
            tmltm2.SelectedItems1 = new string[] { "" };
            tmltm2.TList2 = mod1;
            tmltm2.SelectedItems2 = new string[] { "" };
            tmltm2.Col1 = "1";
            model[0].LTM2.Add(tmltm2);
            TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
            TempData[MyGuid + "_TList2"] = model[0].TList2 = mod1;
            TempData[MyGuid + "_TList3"] = model[0].TList3 = mod1;
            TempData[MyGuid + "_TList4"] = model[0].TList4 = mod1;
            model[0].SelectedItems1 = new string[] { "" };
            model[0].SelectedItems2 = new string[] { "" };
            model[0].SelectedItems3 = new string[] { "" };
            model[0].SelectedItems4 = new string[] { "" };
            return View(model);
        }
        public List<Tmodelmain> new_att(List<Tmodelmain> model)
        {
            var tm = model.FirstOrDefault();
            model = getnew(model);
            List<SelectListItem> mod1 = new List<SelectListItem>();
            List<SelectListItem> mod2 = new List<SelectListItem>();
            List<SelectListItem> mod3 = new List<SelectListItem>();
            List<SelectListItem> mod4 = new List<SelectListItem>();
            List<SelectListItem> mod5 = new List<SelectListItem>();
            List<SelectListItem> mod6 = new List<SelectListItem>();
            model[0].Col18 = sgen.server_datetime_local(userCode);
            model[0].Col17 = "CNV";
            model[0].Col19 = "DLY";
            foreach (var mod in model[0].LTM2)
            {
                mod1 = cmd_Fun.assignment(userCode, unitid_mst);
                TempData[MyGuid + "_TL1"] = mod.TList1 = mod1;
                if (mod.SelectedItems1 == null) mod.SelectedItems1 = new string[] { "" };
                mod2 = cmd_Fun.iloc(userCode, unitid_mst);
                TempData[MyGuid + "_TL2"] = mod.TList2 = mod2;
                if (mod.SelectedItems2 == null) mod.SelectedItems2 = new string[] { "" };
            }
            mod3 = cmd_Fun.traveltype(userCode, unitid_mst);
            TempData[MyGuid + "_TList1"] = model[0].TList1 = mod3;
            if (model[0].SelectedItems3 == null) model[0].SelectedItems3 = new string[] { "" };
            mod4 = cmd_Fun.travelclass(userCode, unitid_mst);
            TempData[MyGuid + "_TList2"] = model[0].TList2 = mod4;
            if (model[0].SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
            mod5 = cmd_Fun.iloc(userCode, unitid_mst);
            TempData[MyGuid + "_TList3"] = model[0].TList3 = mod5;
            if (model[0].SelectedItems3 == null) model[0].SelectedItems3 = new string[] { "" };
            mod6 = cmd_Fun.iloc(userCode, unitid_mst);
            TempData[MyGuid + "_TList4"] = model[0].TList4 = mod6;
            if (model[0].SelectedItems4 == null) model[0].SelectedItems4 = new string[] { "" };
            model[0].Col22 = sgen.seekval(userCode, "select vch_num as id,first_name||' '||replace(middle_name,'0','')||''||replace(last_name,'0','') as user_name from user_details where type='CPR' and vch_num = '" + userid_mst + "'", "user_name");
            return model;
        }
        [HttpPost]
        public ActionResult att(List<Tmodelmain> model, string command, string hfrow)
        {
            try
            {
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();
                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_TL1"];
                List<SelectListItem> mod2 = (List<SelectListItem>)TempData[MyGuid + "_TL2"];
                List<SelectListItem> mod3 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                List<SelectListItem> mod4 = (List<SelectListItem>)TempData[MyGuid + "_TList2"];
                List<SelectListItem> mod5 = (List<SelectListItem>)TempData[MyGuid + "_TList3"];
                List<SelectListItem> mod6 = (List<SelectListItem>)TempData[MyGuid + "_TList4"];
                foreach (var mod in model[0].LTM2)
                {
                    TempData[MyGuid + "_TL1"] = mod.TList1 = mod1;
                    TempData[MyGuid + "_TL2"] = mod.TList2 = mod2;
                    if (mod.SelectedItems1 == null) mod.SelectedItems1 = new string[] { "" };
                    if (mod.SelectedItems2 == null) mod.SelectedItems2 = new string[] { "" };
                }

                TempData[MyGuid + "_TList1"] = tm.TList1 = mod3;
                TempData[MyGuid + "_TList2"] = tm.TList2 = mod4;
                TempData[MyGuid + "_TList3"] = tm.TList3 = mod5;
                TempData[MyGuid + "_TList4"] = tm.TList4 = mod5;
                if (tm.SelectedItems1 == null) tm.SelectedItems1 = new string[] { "" };
                if (tm.SelectedItems2 == null) tm.SelectedItems2 = new string[] { "" };
                if (tm.SelectedItems3 == null) tm.SelectedItems3 = new string[] { "" };
                if (tm.SelectedItems4 == null) tm.SelectedItems4 = new string[] { "" };
                if (command == "New")
                {
                    model = new_att(model);
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command == "Add")
                {
                    try
                    {
                        Tmodelmain ntm1 = new Tmodelmain();
                        ntm1.Col1 = (Convert.ToInt32(model[0].LTM2.Max(x => sgen.Make_int(x.Col1))) + 1).ToString();
                        foreach (var mod in model[0].LTM2)
                        {
                            ntm1.TList1 = (List<SelectListItem>)TempData[MyGuid + "_TL1"];
                            TempData[MyGuid + "_TL1"] = ntm1.TList1;
                            ntm1.TList2 = (List<SelectListItem>)TempData[MyGuid + "_TL2"];
                            TempData[MyGuid + "_TL2"] = ntm1.TList2;
                        }
                        ntm1.SelectedItems1 = new string[] { "" };
                        ntm1.SelectedItems2 = new string[] { "" };
                        model[0].LTM2.Add(ntm1);
                        model[0].Col19 = tm.Col19;
                        TempData[MyGuid + "_TList1"] = tm.TList1;
                        TempData[MyGuid + "_TList2"] = tm.TList2;
                        TempData[MyGuid + "_TList3"] = tm.TList3;
                        TempData[MyGuid + "_TList4"] = tm.TList4;
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                    }
                    catch (Exception ex) { ViewBag.scripCall = "showmsgJS(1,'" + ex.Message.ToString() + "',0);"; }
                }
                else if (command == "Remove")
                {
                    if (model[0].LTM2.Count > 1) model[0].LTM2.RemoveAt(sgen.Make_int(hfrow));
                    else
                    {
                        ViewBag.scripCall = "showmsgJS(1,'You cannot remove last entry',2)";
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                        return View(model);
                    }
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
                else if (command.Trim() == "Save" || command.Trim() == "Update" || command == "Save & New" || command == "Update & New")
                {
                    var tmodel = model.FirstOrDefault();
                    string currdate = "";
                    DataTable dtstr = new DataTable();
                    currdate = sgen.server_datetime(userCode);
                    dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        isedit = true;
                        vch_num = model[0].Col16;
                    }
                    else
                    {
                        isedit = false;
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        model[0].Col16 = vch_num;
                    }
                    for (int k = 0; k < model[0].LTM2.Count; k++)
                    {
                        DataRow dr = dtstr.NewRow();
                        dr["vch_num"] = vch_num;
                        dr["type"] = model[0].Col12;
                        dr["vch_date"] = currdate;
                        dr["col1"] = model[0].Col17;//
                        dr["col8"] = model[0].Col19;//Journey/daily
                        dr["date1"] = sgen.Make_date_S(model[0].Col18);//date
                        dr["col2"] = model[0].LTM2[k].SelectedItems1.FirstOrDefault(); //assign
                        dr["col3"] = model[0].LTM2[k].SelectedItems2.FirstOrDefault(); //location
                        dr["col4"] = model[0].SelectedItems4.FirstOrDefault(); //to location
                        dr["col5"] = model[0].SelectedItems1.FirstOrDefault(); //type
                        dr["col6"] = model[0].SelectedItems2.FirstOrDefault(); //class
                        dr["col25"] = model[0].SelectedItems3.FirstOrDefault(); //from loc
                        dr["col19"] = model[0].LTM2[k].Col17;//time in
                        dr["col18"] = model[0].LTM2[k].Col29;//time in
                        dr["col20"] = model[0].LTM2[k].Col18;//HRS Spent
                        dr["COL7"] = model[0].LTM2[k].Col19;//Fix Conveyance
                        dr["COL9"] = model[0].LTM2[k].Col20;//Additional Conveyance
                        dr["COL10"] = model[0].LTM2[k].Col21;//Taxi Charges
                        dr["COL11"] = model[0].LTM2[k].Col22;//Fare (For Tickets Done By Us)
                        dr["COL12"] = model[0].LTM2[k].Col23;//Conveyance
                        dr["COL13"] = model[0].LTM2[k].Col24;//DA
                        dr["COL14"] = model[0].LTM2[k].Col25;// Fooding At Client
                        dr["COL15"] = model[0].LTM2[k].Col26;//Mobile
                        dr["COL16"] = model[0].LTM2[k].Col27;//Laundry Charges
                        dr["COL17"] = model[0].LTM2[k].Col28;//Others
                        dr["Col38"] = "Pending";//status
                        dr["Col39"] = model[0].Col23;//tot hour
                        dr["COL40"] = model[0].Col24;//tot amount
                        dr["date10"] = sgen.Make_date_S(model[0].Col20);//Date Time (from)
                        dr["date11"] = sgen.Make_date_S(model[0].Col21);//Date Time (TO)
                        dr = getsave(currdate, dr, model, isedit);
                        dtstr.Rows.Add(dr);
                    }
                    bool Result = sgen.Update_data(userCode, dtstr, model[0].Col10.Trim(), tmodel.Col8, isedit);
                    if (Result == true)
                    {
                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col10 = tm.Col10,
                            Col9 = tm.Col9,
                            Col11 = tm.Col11,
                            Col12 = tm.Col12,
                            Col13 = "Save",
                            Col100 = "Save & New",
                            Col121 = "S",
                            Col122 = "<u>S</u>ave",
                            Col123 = "Save & Ne<u>w</u>",
                            Col14 = tm.Col14,
                            Col15 = tm.Col15,
                            TList1 = mod3,
                            SelectedItems1 = new string[] { "" },
                            TList2 = mod4,
                            SelectedItems2 = new string[] { "" },
                            TList3 = mod5,
                            SelectedItems3 = new string[] { "" },
                            TList4 = mod6,
                            SelectedItems4 = new string[] { "" },
                        });
                        model[0].LTM2 = new List<Tmodelmain>();
                        Tmodelmain tmltm2 = new Tmodelmain();
                        tmltm2.TList1 = mod1;
                        tmltm2.SelectedItems1 = new string[] { "" };
                        tmltm2.TList2 = mod2;
                        tmltm2.SelectedItems2 = new string[] { "" };
                        tmltm2.Col1 = "1";
                        model[0].LTM2.Add(tmltm2);
                        if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                        {
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                        {
                            try
                            {
                                model = new_att(model);
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                            }
                            catch (Exception ex) { }
                        }
                    }
                    else
                    {
                        ViewBag.scripCall = "showmsgJS(1, 'Record Not Saved', 2);";
                    }
                }

                else if (command == "+")
                {
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                    if (model[0].dt1.Rows.Count != 0) model[0].dt1.Rows.Add(sgen.Make_int(hfrow));
                    else { model[0].dt1 = (DataTable)sgen.GetSession(MyGuid, "BAMT_DT"); }
                }
                else if (command == "-")
                {
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                    if (model[0].dt1.Rows.Count > 1) model[0].dt1.Rows.RemoveAt(sgen.Make_int(hfrow));
                    else { model[0].dt1 = (DataTable)sgen.GetSession(MyGuid, "BAMT_DT"); }
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region CONVEYANCE RATE
        public ActionResult con_rate()
        {
            FillMst("");
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            model[0].Col9 = "CONVEYANCE RATE";
            model[0].Col10 = "enx_tab2";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "BCR";
            List<SelectListItem> md1 = new List<SelectListItem>();
            TempData[MyGuid + "_TList1"] = model[0].TList1 = md1;
            TempData[MyGuid + "_TList2"] = model[0].TList2 = md1;
            TempData[MyGuid + "_TList3"] = model[0].TList3 = md1;
            model[0].SelectedItems1 = new string[] { "" };
            model[0].SelectedItems2 = new string[] { "" };
            model[0].SelectedItems3 = new string[] { "" };
            DataTable dt = sgen.getdata(userCode, "select '' Select_,'1' as  SNo ,'-' as Client_Code,'-' as Client_Name,'-' Address,'-'  Service_Area from dual");
            model[0].dt1 = dt;
            sgen.SetSession(MyGuid, "BCONVEYDT", dt.Copy());
            return View(model);
        }
        public List<Tmodelmain> new_con_rate(List<Tmodelmain> model)
        {
            model = getnew(model);
            var tm = model.FirstOrDefault();
            #region Dropdwon
            List<SelectListItem> mod1 = new List<SelectListItem>();
            List<SelectListItem> mod2 = new List<SelectListItem>();
            List<SelectListItem> mod3 = new List<SelectListItem>();
            #endregion
            #region ddls
            TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.desig(userCode, unitid_mst);
            TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2 = cmd_Fun.iloc(userCode, unitid_mst);
            TempData[MyGuid + "_TList3"] = model[0].TList3 = mod3 = cmd_Fun.transportmode(userCode, unitid_mst);
            model[0].SelectedItems1 = new string[] { "" };
            model[0].SelectedItems2 = new string[] { "" };
            model[0].SelectedItems3 = new string[] { "" };
            #endregion
            return model;
        }
        [HttpPost]
        public ActionResult con_rate(List<Tmodelmain> model, string command, string hfrow, string hftable)
        {
            try
            {
                FillMst(model[0].Col15);
                DataTable dtm = sgen.settable(hftable);
                model[0].dt1 = dtm;
                var tm = model.FirstOrDefault();
                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                List<SelectListItem> mod2 = (List<SelectListItem>)TempData[MyGuid + "_TList2"];
                List<SelectListItem> mod3 = (List<SelectListItem>)TempData[MyGuid + "_TList3"];
                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
                TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2;
                TempData[MyGuid + "_TList3"] = model[0].TList3 = mod3;
                if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                if (model[0].SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
                if (model[0].SelectedItems3 == null) model[0].SelectedItems3 = new string[] { "" };

                if (command == "New")
                {
                    model = new_con_rate(model);
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command == "-")
                {

                    if (model[0].dt1.Rows.Count > 1) model[0].dt1.Rows.RemoveAt(sgen.Make_int(hfrow));
                    else { model[0].dt1 = (DataTable)sgen.GetSession(MyGuid, "BCONVEYDT"); }
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {

                    var tmodel = model.FirstOrDefault();
                    string currdate = "";
                    DataTable dtstr = new DataTable();
                    dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                    currdate = sgen.server_datetime(userCode);
                    if (model[0].dt1.Rows[0]["Client_code"].ToString().Trim().Equals("-"))
                    {
                        ViewBag.scripCall += "showmsgJS(1,'Please Select Client', 2);";
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                        return View(model);
                    }
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        isedit = true;
                        vch_num = model[0].Col16;
                    }
                    else
                    {
                        isedit = false;
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        model[0].Col16 = vch_num;
                    }
                    for (int i = 0; i < model[0].dt1.Rows.Count; i++)
                    {
                        DataRow dr = dtstr.NewRow();
                        dr["type"] = model[0].Col12;
                        dr["vch_num"] = vch_num.Trim();
                        dr["vch_date"] = currdate;
                        dr["col2"] = model[0].dt1.Rows[i]["Client_code"].ToString(); // c_code
                        dr["col9"] = model[0].Col17; // Amount
                        dr["col5"] = string.Join(",", model[0].SelectedItems1);   //Desig
                        dr["col6"] = string.Join(",", model[0].SelectedItems2);   //loc
                        dr["col7"] = string.Join(",", model[0].SelectedItems3);   //mode of convey
                        dr["col12"] = (model[0].Chk1 == true) ? "Y" : "N"; //all clients
                        dr = getsave(currdate, dr, model, isedit);
                        dtstr.Rows.Add(dr);
                    }
                    bool Result = sgen.Update_data(userCode, dtstr, model[0].Col10.Trim(), tmodel.Col8, isedit);
                    if (Result == true)
                    {
                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col10 = tm.Col10,
                            Col11 = tm.Col11,
                            Col12 = tm.Col12,
                            Col13 = "Save",
                            Col100 = "Save & New",
                            Col121 = "S",
                            Col122 = "<u>S</u>ave",
                            Col123 = "Save & Ne<u>w</u>",
                            Col14 = tm.Col14,
                            Col15 = tm.Col15,
                            Col9 = tm.Col9,
                            TList1 = mod1,
                            TList2 = mod2,
                            TList3 = mod3,
                            SelectedItems1 = new string[] { "" },
                            SelectedItems2 = new string[] { "" },
                            SelectedItems3 = new string[] { "" },
                            dt1 = ((DataTable)sgen.GetSession(MyGuid, "BCONVEYDT")).Copy()

                        });
                        if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                        {
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                        {
                            try
                            {
                                model = new_con_rate(model);
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                            }
                            catch (Exception ex) { }
                        }
                    }
                    else
                    {
                        ViewBag.scripCall = "showmsgJS(1, 'Record Not Saved', 2);";
                    }
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);




        }
        #endregion
        #region work allocation
        public ActionResult w_alloc()
        {
            FillMst("");
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            model[0].Col14 = mid_mst.Trim();
            List<SelectListItem> mod1 = new List<SelectListItem>();
            model[0].Col9 = "WORK ALLOACTION";
            model[0].Col10 = "enx_tab2";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "CUU"; //
            type_desc = "Client User";
            model[0].TList1 = mod1;
            model[0].TList2 = mod1;
            model[0].SelectedItems1 = new string[] { "" };
            model[0].SelectedItems2 = new string[] { "" };
            DataTable dt = sgen.getdata(userCode, "select '' Select_,'1' as  SNo ,'-' as Emp_Code,'-' as Emp_Name,'-' Mobile,'-'  Email from dual");
            model[0].dt1 = dt;
            sgen.SetSession(MyGuid, "BALLOCDT", dt.Copy());
            return View(model);
        }
        [HttpPost]
        public ActionResult w_alloc(List<Tmodelmain> model, string command, string hfrow, string hftable)
        {
            FillMst(model[0].Col15);
            DataTable dtm = sgen.settable(hftable);
            model[0].dt1 = dtm;
            var tm = model.FirstOrDefault();
            List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
            List<SelectListItem> mod2 = (List<SelectListItem>)TempData[MyGuid + "_TList2"];
            TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
            if (tm.SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
            TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2;
            if (tm.SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
            else if (command == "Cancel") { return CancelFun(model); }
            else if (command == "Callback") { model = StartCallback(model); }
            else if (command == "-")
            {

                if (model[0].dt1.Rows.Count > 1) model[0].dt1.Rows.RemoveAt(sgen.Make_int(hfrow));
                else { model[0].dt1 = (DataTable)sgen.GetSession(MyGuid, "BALLOCDT"); }
            }
            else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
            {
                try
                {
                    bool Result = false;

                    if (model[0].SelectedItems1.FirstOrDefault().Trim().Equals(""))
                    {
                        ViewBag.scripCall = "showmsgJS(1,'Please select Assignment Name',2)";
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        return View(model);
                    }
                    DataTable dtnew = new DataTable();
                    //dtnew = sgen.getdata(userCode, "select * from " + model[0].Col10 + " where type='" + model[0].Col10 + "' and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "' and col1='" + model[0].SelectedItems1.FirstOrDefault() + "' and col3='" + model[0].SelectedItems2.FirstOrDefault() + "'");
                    //if (dtnew.Rows.Count > 0)
                    //{
                    //    ViewBag.scripCall = "showmsgJS(1,'Assignment already assigned to Client',2)";
                    //    ViewBag.vnew = "disabled='disabled'";
                    //    ViewBag.vedit = "disabled='disabled'";
                    //    ViewBag.vsave = "";
                    //    return View(model);
                    //}
                    DataTable dataTable = new DataTable();
                    if (model[0].dt1.Rows[0]["emp_code"].ToString().Trim().Equals("-"))
                    {
                        ViewBag.scripCall += "showmsgJS(1,'Please Select Team Members', 2);";
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                        return View(model);
                    }
                    string currdate = sgen.server_datetime(userCode);
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        isedit = true;
                        mq1 = " and vch_num <> '" + model[0].Col16.Trim() + "'";
                        vch_num = model[0].Col16;
                    }
                    else
                    {
                        isedit = false;
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        model[0].Col16 = vch_num;
                    }
                    DataTable dtb = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());

                    for (int i = 0; i < model[0].dt1.Rows.Count; i++)
                    {
                        DataRow dr = dtb.NewRow();
                        dr["type"] = model[0].Col12;
                        dr["vch_num"] = vch_num.Trim();
                        dr["vch_date"] = currdate;
                        dr["type"] = model[0].Col12;
                        dr["COL2"] = model[0].Col18;
                        dr["COL5"] = model[0].SelectedItems1.FirstOrDefault(); //assignment name
                        dr["COL6"] = model[0].SelectedItems2.FirstOrDefault(); //fin year
                        dr["COL7"] = model[0].Col22; //period
                        dr["COL8"] = model[0].Col24; //team leader
                        dr["COL12"] = model[0].Col29; //status
                        dr["DATE1"] = sgen.Make_date_S(model[0].Col27); //st date
                        dr["DATE2"] = sgen.Make_date_S(model[0].Col28); //en date
                        dr["COL18"] = model[0].dt1.Rows[i]["EMP_CODE"].ToString();
                        dr["COL20"] = model[0].dt1.Rows[i]["EMP_NAME"].ToString();
                        dr["COL19"] = model[0].dt1.Rows[i]["MOBILE"].ToString();
                        dr["COL21"] = model[0].dt1.Rows[i]["EMAIL"].ToString();
                        dr["COL22"] = model[0].Col21; // ASSG CODE
                        dr = getsave(currdate, dr, model, isedit);
                        dtb.Rows.Add(dr);
                    }
                    Result = sgen.Update_data_fast1(userCode, dtb, model[0].Col10.Trim(), model[0].Col8, isedit);
                    if (Result == true)
                    {
                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col10 = tm.Col10,
                            Col9 = tm.Col9,
                            Col11 = tm.Col11,
                            Col13 = "Save",
                            Col100 = "Save & New",
                            Col121 = "S",
                            Col122 = "<u>S</u>ave",
                            Col123 = "Save & Ne<u>w</u>",
                            Col14 = tm.Col14,
                            Col15 = tm.Col15,
                            Col12 = tm.Col12,
                            Col18 = "",
                            TList1 = mod1,
                            SelectedItems1 = new string[] { "" },
                            TList2 = mod2,
                            SelectedItems2 = new string[] { "" },
                            dt1 = ((DataTable)sgen.GetSession(MyGuid, "BALLOCDT")).Copy()
                        });
                        if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                        {
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                        {
                            try
                            {
                                Make_query("w_alloc", "Select Client", "PARTY", "1", "", "", MyGuid);
                                ViewBag.scripCall = "callFoo('Select Client');";
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                            }
                            catch (Exception ex) { }
                        }
                    }
                    if (!Result)
                    {
                        ViewBag.scripCall += "mytoast('error', 'toast-top-right', 'Data Not Saved');disableForm();";
                    }
                }
                catch (Exception ex) { ViewBag.scripCall = "showmsgJS(1,'" + ex.Message.ToString() + "', 0);"; }
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region attendence raport
        public ActionResult att_ret()
        {
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            FillMst(MyGuid);
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            model[0].Col9 = "ATTENDENCE REPORT";
            return View(model);
        }
        [HttpPost]
        public ActionResult att_ret(List<Tmodelmain> model, string command, string mid, string hfrow, string hftable)
        {
            try
            {

                FillMst(model[0].Col15);
                //Session["viewName"] = actionName;
                //Session["controllerName"] = controllerName;
                DataTable dtm = sgen.settable(hftable);
                model[0].dt1 = dtm;
                var tm = model.FirstOrDefault();

                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_Tlist1"];
                model[0].TList1 = mod1;
                TempData[MyGuid + "_Tlist1"] = model[0].TList1;
                if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };

                if (command == "New")
                {

                    model = getnew(model);
                    #region Mode of payment


                    mod1 = cmd_Fun.Modeofpayment(userCode, unitid_mst);
                    TempData[MyGuid + "_Tlist1"] = mod1;
                    model[0].TList1 = mod1;
                    model[0].SelectedItems1 = new string[] { "" };

                    #endregion


                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command.Trim() == "Save" || command.Trim() == "Update")
                {

                    var tmodel = model.FirstOrDefault();
                    string currdate = "";
                    string cond = "", found = "";
                    DataTable dtstr = new DataTable();


                    dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        isedit = true;
                        vch_num = model[0].Col16;
                        currdate = model[0].Col34;

                    }
                    else
                    {
                        isedit = false;
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        model[0].Col16 = vch_num;

                        currdate = sgen.server_datetime(userCode);
                    }



                    DataRow dr = dtstr.NewRow();
                    dr["rec_id"] = "0";
                    dr["type"] = model[0].Col12;
                    dr["vch_num"] = vch_num.Trim();
                    dr["vch_date"] = currdate;
                    dr["col3"] = model[0].Col28; // Amount
                    dr["col5"] = model[0].Col23;//Function id
                    dr["col6"] = model[0].SelectedItems1.FirstOrDefault();   //Mode of payment
                    dr["col4"] = model[0].Col29;    //Remark
                    dr["date1"] = sgen.SaveDate_dt(model[0].Col39, false);    //received date



                    dr = getsave(currdate, dr, model, isedit);
                    dtstr.Rows.Add(dr);

                    bool Result = sgen.Update_data(userCode, dtstr, model[0].Col10.Trim(), tmodel.Col8, isedit);
                    if (Result == true)
                    {
                        vch_num = model[0].Col16;

                        ViewBag.vnew = "";
                        ViewBag.vedit = "";
                        ViewBag.vsave = "disabled='disabled'";
                        ViewBag.vsavenew = "disabled='disabled'";
                        ViewBag.scripCall = "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col10 = tm.Col10,
                            Col11 = tm.Col11,
                            Col12 = tm.Col12,
                            Col13 = "Save",
                            Col100 = "Save & New",
                            Col14 = tm.Col14,
                            Col15 = tm.Col15,
                            Col9 = tm.Col9,
                            TList1 = mod1,
                            SelectedItems1 = new string[] { "" },

                        });
                    }
                    else
                    {
                        ViewBag.scripCall = "showmsgJS(1, 'Record Not Saved', 2);";
                    }
                }

                else if (command == "+")
                {
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                    if (model[0].dt1.Rows.Count != 0) model[0].dt1.Rows.Add(sgen.Make_int(hfrow));
                    else { model[0].dt1 = (DataTable)sgen.GetSession(MyGuid, "BAMT_DT"); }
                }
                else if (command == "-")
                {
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                    if (model[0].dt1.Rows.Count > 1) model[0].dt1.Rows.RemoveAt(sgen.Make_int(hfrow));
                    else { model[0].dt1 = (DataTable)sgen.GetSession(MyGuid, "BAMT_DT"); }
                }

            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);




        }
        #endregion
        #region work allocation
        public class individual
        {
            public string recid { get; set; }
            public string dept { get; set; }
            public string desg { get; set; }
            public string name { get; set; }
            public string cu { get; set; }
            public string email { get; set; }
            public string groupid { get; set; }
            public string groupname { get; set; }
            public string deptname { get; set; }
            public string desgname { get; set; }

        }
        public class ListtoDataTable
        {
            public DataTable ToDataTable<T>(List<T> items)
            {
                DataTable dataTable = new DataTable(typeof(T).Name);
                //Get all the properties by using reflection   
                PropertyInfo[] Props = typeof(T).GetProperties(BindingFlags.Public | BindingFlags.Instance);
                foreach (PropertyInfo prop in Props)
                {
                    //Setting column names as Property names  
                    dataTable.Columns.Add(prop.Name);
                }
                foreach (T item in items)
                {
                    var values = new object[Props.Length];
                    for (int i = 0; i < Props.Length; i++)
                    {

                        values[i] = Props[i].GetValue(item, null);
                    }
                    dataTable.Rows.Add(values);
                }

                return dataTable;
            }
        }
        public void SendEmail(Object mailMsg)
        {
            MailMessage mailMessage = (MailMessage)mailMsg;
            try
            {
                SmtpClient smtpClient = new SmtpClient(smtpvalue);
                NetworkCredential networkCredential = new NetworkCredential();
                networkCredential.UserName = emailIdvalue;
                networkCredential.Password = passwordvalue;
                smtpClient.Credentials = networkCredential;
                smtpClient.Port = Convert.ToInt32(portvalue);
                //If you are using gmail account then
                smtpClient.EnableSsl = true;
                smtpClient.DeliveryMethod = SmtpDeliveryMethod.Network;
                smtpClient.Send(mailMessage);
            }
            catch (Exception ex)
            {
                // Response.Redirect("~/erp/login_main.aspx");
                sgen.showmsg(1, ex.Message.ToString(), 0);
            }
            finally
            {
                mailMessage.Dispose();
            }
        }
        public void SendEmailInBackgroundThread(MailMessage mailMessage)
        {
            Thread bgThread = new Thread(new ParameterizedThreadStart(SendEmail));
            bgThread.IsBackground = true;
            bgThread.Start(mailMessage);
        }
        public ActionResult asn_trng()
        {
            FillMst("");
            chkRef();
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            mid_mst = EncryptDecrypt.Decrypt(Request.QueryString["mid"]);
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            model[0].Col14 = mid_mst.Trim();
            model[0].Col15 = MyGuid.Trim();
            List<SelectListItem> mod1 = new List<SelectListItem>();
            List<SelectListItem> mod2 = new List<SelectListItem>();
            List<SelectListItem> mod3 = new List<SelectListItem>();
            List<SelectListItem> mod4 = new List<SelectListItem>();
            model[0].Col9 = "ASSIGN TRAINING";
            model[0].Col10 = "usercourse";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "TCU"; //
            type = "TRS";
            model[0].SelectedItems1 = new string[] { "" };
            model[0].SelectedItems2 = new string[] { "" };
            model[0].SelectedItems3 = new string[] { "" };
            model[0].SelectedItems4 = new string[] { "" };
            sgen.SetSession(MyGuid, "trntype", "o");
            sgen.SetSession(MyGuid, "trnstatus", "Unopened");
            sgen.SetSession(MyGuid, "tr_upd", null);

            mod1.Add(new SelectListItem { Text = "Yes", Value = "1" });
            mod1.Add(new SelectListItem { Text = "No", Value = "0" });
            mod2.Add(new SelectListItem { Text = "Yes", Value = "1" });
            mod2.Add(new SelectListItem { Text = "No", Value = "0" });
            mod4.Add(new SelectListItem { Text = "Created Group", Value = "1" });
            mod4.Add(new SelectListItem { Text = "Department", Value = "2" });
            mod4.Add(new SelectListItem { Text = "Designation", Value = "3" });
            mod4.Add(new SelectListItem { Text = "Individual", Value = "4" });
            DataTable dt = new DataTable();
            mq1 = "select client_unit_id from user_details where vch_num ='" + userid_mst + "' and type='CPR'";
            dt = sgen.getdata(userCode, mq1);
            if (dt.Rows.Count > 0)
            {
                if (dt.Rows[0]["client_unit_id"].ToString() == "owner")
                {
                    mq = "select cup_id,unit_name||'('||cup_id||')' as Unit_Name from company_unit_profile ";
                    dt = sgen.getdata(userCode, mq);
                    foreach (DataRow dr in dt.Rows)
                    {
                        mod3.Add(new SelectListItem { Text = dr["Unit_Name"].ToString(), Value = dr["cup_id"].ToString() });
                    }
                }
                else
                {
                    DataTable dt1 = new DataTable();
                    mq = "select distinct cu.cup_id,cu.unit_name||' ('|| cu.cup_id||')' as Unit_Name from " +
                        "(SELECT user_id,COALESCE(replace(first_name,'0',''),'')||' '||COALESCE(replace(middle_name,'0',''),'')||' '||COALESCE(replace(last_name,'0',''),'') AS User_Name,email,client_id,client_unit_id," +
                        "rec_id,vch_date,type,SUBSTRING_INDEX(SUBSTRING_INDEX(client_unit_id, ',', numbers.n), ',',-1) name from numbers inner join user_details on CHAR_LENGTH(user_details.client_unit_id)-CHAR_LENGTH(REPLACE(user_details.client_unit_id, ',', ''))>=numbers.n-1 where type='CPR' and status='active' and find_in_set('1000',mod_id) and find_in_set('" + clientid_mst + "',client_id) order by n)a inner join company_unit_profile cu on cu.cup_id = a.name  where substr(name, 1, 3) = '" + clientid_mst + "'";

                    dt1 = sgen.getdata(userCode, mq);
                    if (dt1.Rows.Count > 0)
                    {
                        foreach (DataRow dr in dt1.Rows)
                        {
                            mod3.Add(new SelectListItem { Text = dr["cup_id"].ToString(), Value = dr["Unit_Name"].ToString() });
                        }
                    }
                }
            }
            TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1;
            TempData[MyGuid + "_Tlist2"] = model[0].TList2 = mod2;
            TempData[MyGuid + "_Tlist3"] = model[0].TList3 = mod3;
            TempData[MyGuid + "_Tlist4"] = model[0].TList4 = mod4;
            model[0].SelectedItems1 = new string[] { "" };
            model[0].SelectedItems2 = new string[] { "" };
            model[0].SelectedItems3 = new string[] { "" };
            model[0].SelectedItems4 = new string[] { "" };
            model[0].SelectedItems5 = new string[] { "" };
            return View(model);
        }
        [HttpPost]
        public ActionResult asn_trng(List<Tmodelmain> model, string command, string hfrow, HttpPostedFileBase upd1)
        {
            int RowCount = 0; string usercourseid = "", trntype = "";
            FillMst(model[0].Col15);


            string clientname_mst = sgen.GetCookie(MyGuid, "clientname_mst");
            string unitname_mst = sgen.GetCookie(MyGuid, "unitname_mst");
            string subdomain_mst = sgen.GetCookie(MyGuid, "subdomain_mst");
            string cg_com_name = sgen.GetCookie(MyGuid, "cg_com_name");
            var tm = model.FirstOrDefault();
            List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_Tlist1"];
            TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1;
            if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
            List<SelectListItem> mod2 = (List<SelectListItem>)TempData[MyGuid + "_Tlist2"];
            TempData[MyGuid + "_Tlist2"] = model[0].TList2 = mod2;
            if (model[0].SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
            List<SelectListItem> mod3 = (List<SelectListItem>)TempData[MyGuid + "_Tlist3"];
            TempData[MyGuid + "_Tlist3"] = model[0].TList3 = mod3;
            if (model[0].SelectedItems3 == null) model[0].SelectedItems3 = new string[] { "" };
            List<SelectListItem> mod4 = (List<SelectListItem>)TempData[MyGuid + "_Tlist4"];
            TempData[MyGuid + "_Tlist4"] = model[0].TList4 = mod4;
            if (model[0].SelectedItems4 == null) model[0].SelectedItems4 = new string[] { "" };
            else if (command == "Cancel") { return CancelFun(model); }
            else if (command == "Assign")
            {
                Satransaction sat = new Satransaction(userCode, MyGuid);
                try
                {
                    //string serverpath = Server.MapPath("~/Uploads/" + cg_com_name.Replace(" ", "") + "/");
                    //   string serverpath = HttpContext.Current.Server.MapPath("~/Uploads/" + cg_com_name.Replace(" ", "") + "/");
                    IList<HttpPostedFile> fileCollection = (List<HttpPostedFile>)sgen.GetSession(MyGuid, "tr_upd");
                    string dwnper = "F", mandatory = "No", srid = "";
                    bool data1 = false, data = false;

                    if (model[0].Col26 == "") { sgen.showmsg(1, "Please fill Start Date", 2); return View(model); }
                    if (model[0].Col27 == "") { sgen.showmsg(1, "Please fill End Date", 2); return View(model); }

                    string currdate = sgen.server_datetime(userCode);
                    string location = model[0].Col28;
                    string remark = model[0].Col29;

                    if (model[0].SelectedItems1.FirstOrDefault() == "1") dwnper = "T";
                    if (model[0].SelectedItems2.FirstOrDefault() == "1") mandatory = "Yes";

                    DataTable dtbl = new DataTable();
                    dtbl = sgen.getdata(userCode, "select com_email,com_password,com_port,com_smtp,Company_Profile_Id,type from company_profile where Company_Profile_Id='" + clientid_mst + "' and type='CP' ");
                    if (dtbl.Rows.Count > 0)
                    {
                        smtpvalue = Convert.ToString(dtbl.Rows[0]["com_smtp"]);
                        emailIdvalue = Convert.ToString(dtbl.Rows[0]["com_email"]);
                        passwordvalue = EncryptDecrypt.Decrypt(dtbl.Rows[0]["com_password"].ToString());
                        portvalue = Convert.ToInt32(dtbl.Rows[0]["com_port"]);
                    }
                    else { sgen.showmsg(1, "Please configure your mail first", 2); return View(model); }
                    if (smtpvalue == "" && passwordvalue == "" && portvalue == 0) { sgen.showmsg(1, "Please configure your mail first", 2); return View(model); }

                    if (!sgen.GetSession(MyGuid, "trntype").ToString().Equals(null))
                    {
                        if (sgen.GetSession(MyGuid, "trntype").ToString().Equals("p"))
                        {
                            mq2 = "select course_id from courses where course_id='" + model[0].Col19 + "' and " +
                                "mod_id='" + model[0].Col23 + "' and cat_id='" + model[0].Col21 + "' and type='TCR'" + where + "";
                        }
                        else
                        {
                            mq2 = "select cou_content_id,course_id from course_content where course_id='" + model[0].Col19 + "' and mod_id" +
                                "='" + model[0].Col23 + "' and cat_id='" + model[0].Col21 + "' and type='TCR'" + where + "";
                        }
                    }

                    DataTable dtb = new DataTable();
                    dtb = sgen.getdata(userCode, mq2);
                    //if (dtb.Rows.Count > 0)
                    {
                        string modid = Convert.ToString(model[0].Col23);
                        string catid = Convert.ToString(model[0].Col21);
                        string modname = Convert.ToString(model[0].Col22);
                        string catname = Convert.ToString(model[0].Col20);
                        string title = model[0].Col18;
                        string refcode = model[0].Col24;

                        usercourseid = "select max(to_number(usercourse_id)) as auto_genid from usercourse where type='" + model[0].Col12 + "' and client_unit_id='" + unitid_mst + "'";
                        usercourseid = sgen.genNo(userCode, usercourseid, 6, "auto_genid");
                        vch_num = "select max(to_number(vch_num)) as auto_genid from usercourse where type='" + model[0].Col12 + "' and client_unit_id='" + unitid_mst + "'";
                        vch_num = sgen.genNo(userCode, vch_num, 6, "auto_genid");

                        //DataTable dt = (DataTable)Session["selecteduser"];
                        DataTable dt = (DataTable)sgen.GetSession(MyGuid, "selecteduser");
                        if (sgen.GetSession(MyGuid, "tr_seriesurl") == null) srid = "";
                        else srid = sgen.GetSession(MyGuid, "tr_seriesurl").ToString();

                        //if (model[0].SelectedItems4.FirstOrDefault().Trim().Equals("4"))
                        //{

                        //    if (dt.Rows.Count > 0)
                        //    {
                        //#region filesaving
                        //try
                        //{
                        //    HttpPostedFileBase file1 = upd1;
                        //    string fileName2 = file1.FileName;
                        //    string path2 = clientid_mst + unitid_mst + userid_mst + currdate + "_" + fileName2;
                        //    string encpath2 = sgen.Convert_Stringto64(path2).ToString();
                        //    string finalpath2 = serverpath + encpath2;
                        //    file1.SaveAs(finalpath2);
                        //    string mq = "";
                        //    data = sat.Execute_cmd("insert into course_content(cou_content_id,course_id,mod_id,cat_id,cou_title,ref_code,file_name,file_path,cou_content_ent_by," +
                        //                                              "cou_content_ent_dt,trn_duration,client_id,client_unit_id,type,vch_num,trn_type)values('" + vch_num + "','" + model[0].Col19
                        //                                              + "','" + modid + "','" + catid + "','" + title + "','"
                        //                                              + model[0].Col24 + "','" + fileName2 + "','" + encpath2 + "','" + userid_mst + "','" + currdate + "','" + model[0].Col25
                        //                                              + "','" + clientid_mst + "','" + unitid_mst + "','TCR','" + vch_num + "','" + sgen.GetSession(MyGuid, "trntype") + "')");

                        //}
                        //catch (Exception ex) { }
                        //#endregion
                        //for (int i = 0; i < dt.Rows.Count; i++)
                        //{

                        //    string rec_id = dt.Rows[i]["recid"].ToString();
                        //    string urec_id = sgen.padlc(Convert.ToInt16(rec_id), 6);
                        //    string cu = dt.Rows[i]["cu"].ToString();
                        //    string email = dt.Rows[i]["email"].ToString();
                        //    string name = dt.Rows[i]["Name"].ToString();




                        //    data1 = sgen.execute_cmd(userCode, "insert into usercourse(usercourse_id,course_id,user_id,mod_id,cat_id,usercourse_status,ENT_BY," +
                        //        "cou_title,ref_code,ENT_DATE,dwn_permission,start_date,end_date,training_status,group_name,mod_name,cat_name,trn_duration,group_id," +
                        //        "trn_mandatory,client_id,client_unit_id,vch_num,series_id,type,location,remark,trn_type,group_type)values('" + usercourseid + "','" + model[0].Col19
                        //        + "','" + urec_id + "','" + model[0].Col23 + "','" + model[0].Col21 + "','assigned','" + userid_mst
                        //        + "','" + title + "','" + model[0].Col24 + "','" + sgen.Savedate(currdate, true) + "','" + dwnper + "','"
                        //        + sgen.Savedate(model[0].Col26, false) + "','" + sgen.Savedate(model[0].Col26, false) + "','" + sgen.GetSession(MyGuid, "trnstatus").ToString() + "','Individual','"
                        //        + modname + "','" + catname + "','" + model[0].Col25 + "','0','" + mandatory + "','" + clientid_mst + "','" + cu + "','"
                        //        + vch_num + "','" + srid + "','" + model[0].Col12 + "','" + location + "','" + remark + "','" + sgen.GetSession(MyGuid, "trntype") + "', '" + sgen.GetSession(MyGuid, "grouptype").ToString() + "')");

                        //    if (data1 == true)
                        //    {
                        //        string msgbody = "";
                        //        MailMessage mailMsg = new MailMessage();
                        //        mailMsg.Subject = "Assign Training";
                        //        trntype = sgen.GetSession(MyGuid, "trntype").ToString();
                        //        if (trntype == "o") { msgbody = "<b style='color: #3caee9; font-size: 20px'>Training Assigned By Admin</b><br /><hr style='border:1px solid black' /><p>Hi <b>" + name + "</b>,</p><p>Congratulations, This is to notify that you have been assigned Online training. your training details are as below :-</p><table style='font-weight:600'><tr><td>Company Name </td><td>: " + clientname_mst + " </td></tr><tr><td> Unit Name </td><td>: " + unitname_mst + " </td></tr><tr><td> Training </td><td>: " + title + " </td></tr><tr><td> URL </td><td>: " + subdomain_mst + " </td></tr></table><br /><p>Please login and complete your Training.</p><p>Thank you,<br />Administrator<br /></p><br /><p>Note:- Please do not reply to this mail as it is an unmonitered alias.</p>"; }
                        //        if (trntype == "p") { msgbody = "<b style='color: #3caee9; font-size: 20px'>Training Assigned By Admin</b><br /><hr style='border:1px solid black' /><p>Hi <b>" + name + "</b>,</p><p>Congratulations, This is to notify that you have been assigned  Physical training. your training details are as below :-</p><table style='font-weight:600'><tr><td>Company Name </td><td>: " + clientname_mst + " </td></tr><tr><td> Unit Name </td><td>: " + unitname_mst + " </td></tr><tr><td> Training </td><td>: " + title + " </td></tr><tr><td> URL </td><td>: " + subdomain_mst + " </td></tr></table><br /><p>Please login and complete your Training.</p><p>Thank you,<br />Administrator<br /></p><br /><p>Note:- Please do not reply to this mail as it is an unmonitered alias.</p>"; }
                        //        mailMsg.Body = msgbody;
                        //        mailMsg.To.Add(new MailAddress(email));
                        //        mailMsg.CC.Add(emailIdvalue);
                        //        mailMsg.From = new MailAddress(emailIdvalue);
                        //        mailMsg.IsBodyHtml = true;
                        //        mailMsg.Priority = MailPriority.High;
                        //        SendEmailInBackgroundThread(mailMsg);
                        //    }
                        //    else
                        //    {
                        //        sat.Rollback();
                        //        sgen.showmsg(1, "Try Again", 0);
                        //    }
                        //}
                        //}
                        //sat.Commit();
                        //sgen.SetSession(MyGuid, "tr_upd", null);
                        //sgen.showmsg(1, "Training Assigned", 1);
                        //model[0].Col29 = "";
                        //}
                        //        else
                        //        {
                        //            if (dt.Rows.Count > 0)
                        //            {
                        //                //#region filesaving
                        //                //try
                        //                //{
                        //                //    for (int k = 0; k < fileCollection.Count; k++)
                        //                //    {
                        //                //        HttpPostedFile file = fileCollection[k];
                        //                //        string fileName2 = file.FileName;
                        //                //        string path2 = clientid_mst + unitid_mst + userid_mst + currdate + "_" + fileName2;
                        //                //        string encpath2 = sgen.Convert_Stringto64(path2).ToString();
                        //                //        string finalpath2 = serverpath + encpath2;
                        //                //        file.SaveAs(finalpath2);

                        //                //        string mq = "";
                        //                //        data = sat.Execute_cmd("insert into course_content(cou_content_id,course_id,mod_id,cat_id,cou_title,ref_code,file_name,file_path,cou_content_ent_by," +
                        //                //                                                  "cou_content_ent_dt,trn_duration,client_id,client_unit_id,type,vch_num,trn_type)values('" + vch_num + "','" + model[0].Col19
                        //                //                                                  + "','" + modid + "','" + catid + "','" + title + "','"
                        //                //                                                  + model[0].Col24 + "','" + fileName2 + "','" + encpath2 + "','" + userid_mst + "','" + currdate + "','" + model[0].Col25
                        //                //                                                  + "','" + clientid_mst + "','" + unitid_mst + "','TCR','" + vch_num + "','" + sgen.GetSession(MyGuid, "trntype").ToString() + "')");
                        //                //    }

                        //                //}
                        //                //catch (Exception ex) { sgen.showmsg(1, ex.Message.ToString(), 0); }


                        //                //#endregion
                        //        //        for (int l = 0; l < dt.Rows.Count; l++)
                        //        //        {
                        //        //            string rec_id = dt.Rows[l]["recid"].ToString();
                        //        //            string uid = sgen.padlc(Convert.ToInt16(rec_id), 6);
                        //        //            string cu = dt.Rows[l]["cu"].ToString();
                        //        //            string email = dt.Rows[l]["email"].ToString();
                        //        //            string groupid = dt.Rows[l]["groupid"].ToString();
                        //        //            string groupname = dt.Rows[l]["groupname"].ToString();
                        //        //            string name = dt.Rows[l]["name"].ToString();
                        //        //            string entdt = sgen.Savedate(currdate, true);
                        //        //            string stdt = sgen.Savedate(model[0].Col26, false);
                        //        //            string eddt = sgen.Savedate(model[0].Col27, false);
                        //        //            string crid = model[0].Col19;
                        //        //            string mdid = model[0].Col23;
                        //        //            string ctid = model[0].Col21;
                        //        //            string rf = model[0].Col24;
                        //        //            string dr = model[0].Col25;

                        //        //            mq2 = "insert into usercourse(usercourse_id, course_id, user_id, mod_id, cat_id, usercourse_status, ENT_BY, cou_title, ref_code," +
                        //        //                "ENT_DATE,dwn_permission, start_date, end_date, training_status, group_name, group_id, mod_name, cat_name, trn_duration," +
                        //        //                "trn_mandatory, client_id, client_unit_id, vch_num, series_id,type,location,remark,trn_type,group_type)" +
                        //        //                "values('" + usercourseid + "','" + crid + "','" + uid + "','" + mdid + "','" + ctid + "','" + "assigned" + "','"
                        //        //                + userid_mst + "','" + title + "','" + rf + "','" + entdt + "','" + dwnper + "','" + stdt + "','" + eddt + "','" + sgen.GetSession(MyGuid, "trnstatus").ToString() + "','" + groupname + "','" + groupid + "','" + modname + "','" + catname + "','" + dr + "','" + mandatory
                        //        //                + "','" + clientid_mst + "','" + cu + "','" + vch_num + "','" + srid + "','" + model[0].Col12 + "','" + location + "','" + remark + "','" + sgen.GetSession(MyGuid, "trntype").ToString() + "','" + sgen.GetSession(MyGuid, "grouptype").ToString() + "')";
                        //        //            data1 = sgen.execute_cmd(userCode, mq2);

                        //        //            if (data1 == true)
                        //        //            {


                        //        //                string msgbody = "";
                        //        //                MailMessage mailMsg = new MailMessage();
                        //        //                mailMsg.Subject = "Assign Training";
                        //        //                trntype = sgen.GetSession(MyGuid, "trntype").ToString();
                        //        //                if (trntype == "o") { msgbody = "<b style='color: #3caee9; font-size: 20px'>Training Assigned By Admin</b><br /><hr style='border:1px solid black' /><p>Hi <b>" + name + "</b>,</p><p>Congratulations, This is to notify that you have been assigned Online training. your training details are as below :-</p><table style='font-weight:600'><tr><td>Company Name </td><td>: " + clientname_mst + " </td></tr><tr><td> Unit Name </td><td>: " + unitname_mst + " </td></tr><tr><td> Training </td><td>: " + title + " </td></tr><tr><td> URL </td><td>: " + subdomain_mst + " </td></tr></table><br /><p>Please login and complete your Training.</p><p>Thank you,<br />Administrator<br /></p><br /><p>Note:- Please do not reply to this mail as it is an unmonitered alias.</p>"; }
                        //        //                if (trntype == "p") { msgbody = "<b style='color: #3caee9; font-size: 20px'>Training Assigned By Admin</b><br /><hr style='border:1px solid black' /><p>Hi <b>" + name + "</b>,</p><p>Congratulations, This is to notify that you have been assigned Physical training. your training details are as below :-</p><table style='font-weight:600'><tr><td>Company Name </td><td>: " + clientname_mst + " </td></tr><tr><td> Unit Name </td><td>: " + unitname_mst + " </td></tr><tr><td> Training </td><td>: " + title + " </td></tr><tr><td> URL </td><td>: " + subdomain_mst + " </td></tr></table><br /><p>Please login and complete your Training.</p><p>Thank you,<br />Administrator<br /></p><br /><p>Note:- Please do not reply to this mail as it is an unmonitered alias.</p>"; }
                        //        //                mailMsg.Body = msgbody;
                        //        //                mailMsg.To.Add(new MailAddress(emailIdvalue));
                        //        //                mailMsg.CC.Add(email);
                        //        //                mailMsg.From = new MailAddress(emailIdvalue);
                        //        //                mailMsg.IsBodyHtml = true;
                        //        //                mailMsg.Priority = MailPriority.High;
                        //        //                SendEmailInBackgroundThread(mailMsg);
                        //        //            }
                        //        //        }
                        //        //    }

                        //        //    else
                        //        //    {
                        //        //        sat.Rollback();
                        //        //        sgen.showmsg(1, "something went wrong, please try again", 0);
                        //        //        return View(model);
                        //        //    }
                        //        //    sat.Commit();
                        //        //    sgen.showmsg(1, "Training Assigned", 1);
                        //        //    model[0].Col29 = "";
                        //        //}

                        string email = "";
                        DataTable dataTable = cmd_Fun.GetStructure(userCode, model[0].Col10);
                        for (int i = 0; i < model.Count; i++)
                        {
                            if (model[i].Chk2 == true)
                            {
                                DataRow dr = dataTable.NewRow();
                                dr["rec_id"] = "0";
                                dr["type"] = model[0].Col12;
                                dr["vch_date"] = currdate;
                                dr["ent_by"] = userid_mst;
                                dr["ent_date"] = currdate;
                                dr["client_id"] = clientid_mst;
                                dr["client_unit_id"] = unitid_mst;
                                dr["vch_num"] = vch_num.Trim();
                                dr["usercourse_id"] = usercourseid;
                                dr["course_id"] = model[0].Col19;
                                dr["user_id"] = model[i].Col32;
                                dr["mod_id"] = model[0].Col23;
                                dr["cat_id"] = model[0].Col21;
                                dr["cou_title"] = model[0].Col18;
                                dr["ref_code"] = model[0].Col24;
                                dr["start_date"] = sgen.Savedate(model[0].Col26, true);
                                dr["end_date"] = sgen.Savedate(model[0].Col27, true);
                                dr["dwn_permission"] = dwnper;
                                dr["usercourse_status"] = "assigned";
                                dr["training_status"] = sgen.GetSession(MyGuid, "trnstatus").ToString();
                                dr["group_id"] = model[i].Col30;
                                dr["group_name"] = model[i].Col31;
                                dr["mod_name"] = model[0].Col22;
                                dr["cat_name"] = model[0].Col20;
                                dr["trn_duration"] = model[0].Col25;
                                dr["trn_mandatory"] = mandatory;
                                dr["series_id"] = srid;
                                dr["location"] = model[0].Col28;
                                dr["remark"] = model[0].Col29;
                                dr["trn_type"] = sgen.GetSession(MyGuid, "trntype").ToString();
                                dr["group_type"] = sgen.GetSession(MyGuid, "grouptype").ToString();
                                if ((model[i].Col34 != "") && (model[i].Col34 != null) && (model[i].Col34 != "0"))
                                {
                                    if (email == "")
                                    {
                                        email = model[i].Col34;
                                    }
                                    else { email = email + ',' + model[i].Col34; }
                                }
                                dataTable.Rows.Add(dr);
                            }

                        }
                        if (email != "")
                        {
                            email = email.TrimEnd(',');
                        }

                        bool Result = sgen.Update_data_fast1(userCode, dataTable, model[0].Col10.Trim(), model[0].Col8, isedit);
                        if (Result == true)
                        {
                            #region attachment
                            DataTable dtfile = new DataTable();
                            dtfile = cmd_Fun.GetStructure(userCode, "file_tab");
                            string serverpath = Server.MapPath("~/Uploads/" + cg_com_name.Replace(" ", "") + "/");
                            try
                            {
                                HttpPostedFileBase file1 = upd1;
                                ctype1 = file1.ContentType;
                                fileName1 = file1.FileName;
                                path1 = clientid_mst + unitid_mst + userid_mst + currdate + "_" + fileName1;
                                encpath1 = sgen.Convert_Stringto64(path1).ToString();
                                finalpath1 = serverpath + encpath1;
                                file1.SaveAs(finalpath1);
                                filesave(model, currdate, dtfile, fileName1, encpath1, "ASG TRAIN", ctype1);
                                bool res = sgen.Update_data_fast1(userCode, dtfile, "file_tab", "", false);
                            }
                            catch (Exception ex) { }

                            #endregion
                            #region mail
                            if (email != "")
                            {
                                string msgbody = "";
                                MailMessage mailMsg = new MailMessage();
                                mailMsg.Subject = "Assign Training";
                                trntype = sgen.GetSession(MyGuid, "trntype").ToString();
                                //if (trntype == "o") { msgbody = "<b style='color: #3caee9; font-size: 20px'>Training Assigned By Admin</b><br /><hr style='border:1px solid black' /><p>Hi <b>" + name + "</b>,</p><p>Congratulations, This is to notify that you have been assigned Online training. your training details are as below :-</p><table style='font-weight:600'><tr><td>Company Name </td><td>: " + clientname_mst + " </td></tr><tr><td> Unit Name </td><td>: " + unitname_mst + " </td></tr><tr><td> Training </td><td>: " + title + " </td></tr><tr><td> URL </td><td>: " + subdomain_mst + " </td></tr></table><br /><p>Please login and complete your Training.</p><p>Thank you,<br />Administrator<br /></p><br /><p>Note:- Please do not reply to this mail as it is an unmonitered alias.</p>"; }
                                //if (trntype == "p") { msgbody = "<b style='color: #3caee9; font-size: 20px'>Training Assigned By Admin</b><br /><hr style='border:1px solid black' /><p>Hi <b>" + name + "</b>,</p><p>Congratulations, This is to notify that you have been assigned Physical training. your training details are as below :-</p><table style='font-weight:600'><tr><td>Company Name </td><td>: " + clientname_mst + " </td></tr><tr><td> Unit Name </td><td>: " + unitname_mst + " </td></tr><tr><td> Training </td><td>: " + title + " </td></tr><tr><td> URL </td><td>: " + subdomain_mst + " </td></tr></table><br /><p>Please login and complete your Training.</p><p>Thank you,<br />Administrator<br /></p><br /><p>Note:- Please do not reply to this mail as it is an unmonitered alias.</p>"; }

                                if (trntype == "o") { msgbody = "<b style='color: #3caee9; font-size: 20px'>Training Assigned By Admin</b><br /><hr style='border:1px solid black' /><p>Hi ,</p><p>Congratulations, This is to notify that you have been assigned Online training. your training details are as below :-</p><table style='font-weight:600'><tr><td>Company Name </td><td>: " + clientname_mst + " </td></tr><tr><td> Unit Name </td><td>: " + unitname_mst + " </td></tr><tr><td> Training </td><td>: " + title + " </td></tr><tr><td> URL </td><td>: " + subdomain_mst + " </td></tr></table><br /><p>Please login and complete your Training.</p><p>Thank you,<br />Administrator<br /></p><br /><p>Note:- Please do not reply to this mail as it is an unmonitered alias.</p>"; }
                                if (trntype == "p") { msgbody = "<b style='color: #3caee9; font-size: 20px'>Training Assigned By Admin</b><br /><hr style='border:1px solid black' /><p>Hi ,</p><p>Congratulations, This is to notify that you have been assigned Physical training. your training details are as below :-</p><table style='font-weight:600'><tr><td>Company Name </td><td>: " + clientname_mst + " </td></tr><tr><td> Unit Name </td><td>: " + unitname_mst + " </td></tr><tr><td> Training </td><td>: " + title + " </td></tr><tr><td> URL </td><td>: " + subdomain_mst + " </td></tr></table><br /><p>Please login and complete your Training.</p><p>Thank you,<br />Administrator<br /></p><br /><p>Note:- Please do not reply to this mail as it is an unmonitered alias.</p>"; }
                                mailMsg.Body = msgbody;
                                mailMsg.To.Add(new MailAddress(emailIdvalue));
                                mailMsg.CC.Add(email);
                                mailMsg.From = new MailAddress(emailIdvalue);
                                mailMsg.IsBodyHtml = true;
                                mailMsg.Priority = MailPriority.High;
                                SendEmailInBackgroundThread(mailMsg);
                            }
                            #endregion;

                            model = new List<Tmodelmain>();
                            model.Add(new Tmodelmain
                            {

                                Col14 = tm.Col14,
                                Col15 = tm.Col15,
                                Col9 = tm.Col9,
                                Col10 = tm.Col10,
                                Col11 = tm.Col11,
                                Col12 = tm.Col12,
                                TList1 = mod1,
                                TList2 = mod2,
                                TList3 = mod3,
                                TList4 = mod4,
                                SelectedItems1 = new string[] { "" },
                                SelectedItems2 = new string[] { "" },
                                SelectedItems3 = new string[] { "" },
                                SelectedItems4 = new string[] { "" },
                            });

                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Training Assigned');";
                        }



                    }
                    //else
                    //{
                    //    sgen.showmsg(1, "If You Assign Online Training then Check your Attachment Else In Case of Physical Training Check Your Title", 2);
                    //}
                }
                catch (Exception ex)
                {
                    sgen.showmsg(1, ex.Message.ToString(), 0);
                }
            }
            else if (command == "Get Data")
            {
                if ((model[0].SelectedItems3.FirstOrDefault() == "") || (model[0].SelectedItems3.FirstOrDefault() == "0")) { sgen.showmsg(1, "Please Select unit", 2); return View(model); }
                if (model[0].SelectedItems4.FirstOrDefault() == "" || model[0].SelectedItems4.FirstOrDefault() == "0") { sgen.showmsg(1, "Please Select User Type", 2); return View(model); }
                DataTable dt = new DataTable();

                string cond = "";
                string[] ddlunit = string.Join(",", model[0].SelectedItems3).Split(',');
                foreach (string class_item in ddlunit)
                {
                    if (class_item.ToString() != "")
                    {
                        units = units + "'" + class_item + "'" + ",";
                        cond = cond + " find_in_set('" + class_item + "',ud.client_unit_id)=1 or ";
                    }
                }
                cond = cond.Substring(0, cond.Length - 3);

                units = units.TrimEnd(',');
                sgen.SetSession(MyGuid, "satrday", units);
                sgen.SetSession(MyGuid, "condition", cond);
                string[] newunit = units.Split(',');

                if (model[0].SelectedItems4.FirstOrDefault().Trim().Equals("1"))
                {
                    Make_query("asn_trng", "Group", "GROUP", "2", "", "", MyGuid);
                    ViewBag.scripCall = "callFoo('Group');";
                }

                else if (model[0].SelectedItems4.FirstOrDefault().Equals("2"))
                {
                    Make_query("asn_trng", "Department", "DEPT", "2", "", "", MyGuid);
                    ViewBag.scripCall = "callFoo('Department');";
                }

                else if (model[0].SelectedItems4.FirstOrDefault().Equals("3"))
                {
                    Make_query("asn_trng", "Designation", "DESG", "2", "", "", MyGuid);
                    ViewBag.scripCall = "callFoo('Designation');";
                }

                else if (model[0].SelectedItems4.FirstOrDefault().Equals("4"))
                {
                    sgen.SetSession(MyGuid, "grouptype", "I");
                    mq = "select ud.vch_num||'-'||to_char(ud.vch_date, 'yyyymmdd')||'-'||ud.type||'-'||ud.department||'-'||ud.designation " +
                        "as fstr,ms.master_id  dept,ud.user_id,ud.vch_num,ud.client_unit_id,COALESCE(replace(ud.first_name, '0', ''), '') || '' || " +
                        "COALESCE(replace(ud.middle_name, '0', ''), '') || ' ' || COALESCE(replace(ud.last_name, '0', ''), '') AS Name," +
                        "ms.master_name as department,d.master_name as designation,ud.email from user_details ud left join master_setting" +
                        " ms on ms.master_id = ud.department and ms.type = 'MDP' left join master_setting d on d.master_id = " +
                        "ud.designation and d.type = 'MDG' where ud.type = 'CPR' and ud.status = 'active' and find_in_set('1000',ud.mod_id)= 1 " +
                        "and find_in_set('" + clientid_mst + "',ud.client_id)= 1 and " + cond + " ";
                    dt = sgen.getdata(userCode, mq);
                    //foreach (DataRow dr in dt.Rows)
                    //{
                    //    string unitcheck = dr["client_unit_id"].ToString();
                    //    if (unitcheck.Trim().Contains(unitid_mst)) dr["client_unit_id"] = unitid_mst;
                    //    else dr["client_unit_id"] = unitcheck.Split(',').Distinct().OrderBy(x => x).ToList()[0].ToString();
                    //}
                    //dt.AcceptChanges();

                    //sgen.SetSession(MyGuid, "mydtkc", dt);
                    //DataTable dt1 = new DataTable();
                    //dt1 = sgen.getdata(userCode, "select cup_id,unit_name from company_unit_profile");
                    //DataTable dtres = new DataTable();
                    //dtres = dt.Clone();
                    //dtres.Columns.Add("uname");

                    //     var result = from user in dt.AsEnumerable()
                    //                  join unit in dt1.AsEnumerable()
                    //                  on user.Field<string>("client_unit_id") equals unit.Field<string>("cup_id") into lj
                    //                  from r in lj.DefaultIfEmpty()
                    //                  select dtres.LoadDataRow(new object[]
                    //                  {
                    // user.Field<string>("fstr"),
                    // user.Field<string>("user_id"),
                    //// user.Field<string>("client_id"),
                    // user.Field<string>("client_unit_id"),
                    // user.Field<string>("Name"),
                    // user.Field<string>("department"),
                    // user.Field<string>("designation"),
                    // user.Field<string>("email"),
                    // r.Field<string>("unit_name")
                    //                   }, false);

                    //sgen.SetSession(MyGuid, "BTNVAL", "INDI");
                    //sgen.open_grid_dt("Individual", dt, 2);

                    if (dt.Rows.Count > 0)
                    {

                        model = new List<Tmodelmain>();
                        for (int k = 0; k < dt.Rows.Count; k++)
                        {
                            individual indi = new individual();
                            Tmodelmain tmm = new Tmodelmain();

                            tmm.Col32 = dt.Rows[k]["vch_num"].ToString();
                            tmm.Col30 = dt.Rows[k]["dept"].ToString();
                            tmm.Col33 = dt.Rows[k]["Name"].ToString();
                            tmm.Col31 = dt.Rows[k]["department"].ToString() + '/' + dt.Rows[k]["designation"].ToString();
                            if ((tmm.Col31.Length == 1) && (tmm.Col31.Contains('/'))) { tmm.Col31 = "-"; }
                            tmm.Col35 = dt.Rows[k]["client_unit_id"].ToString();
                            tmm.Col34 = dt.Rows[k]["email"].ToString();
                            tmm.Col9 = tm.Col9;
                            tmm.Col10 = tm.Col10;
                            tmm.Col14 = tm.Col14;
                            tmm.Col15 = tm.Col15;
                            tmm.Col17 = tm.Col17;
                            tmm.Col18 = tm.Col18;
                            tmm.Col19 = tm.Col19;
                            tmm.Col20 = tm.Col20;
                            tmm.Col21 = tm.Col21;
                            tmm.Col22 = tm.Col22;
                            tmm.Col23 = tm.Col23;
                            tmm.Col24 = tm.Col24;
                            tmm.Col25 = tm.Col25;
                            tmm.Col26 = tm.Col26;
                            tmm.Col27 = tm.Col27;
                            tmm.Col28 = tm.Col28;
                            tmm.Col29 = tm.Col29;
                            tmm.TList1 = tm.TList1;
                            tmm.TList2 = tm.TList2;
                            tmm.TList3 = tm.TList3;
                            tmm.TList4 = tm.TList4;
                            tmm.SelectedItems1 = tm.SelectedItems1;
                            tmm.SelectedItems2 = tm.SelectedItems2;
                            tmm.SelectedItems3 = tm.SelectedItems3;
                            tmm.SelectedItems4 = tm.SelectedItems4;
                            //invitee = invitee + indi.groupname + ",";
                            model.Add(tmm);
                        }

                        model[0].Col36 = "Department / Designation";
                        sgen.SetSession(MyGuid, "selecteduser", dt);

                    }

                }
            }
            else if (command == "Callback") { model = StartCallback(model); }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region att report
        public ActionResult att_rpt()
        {
            FillMst();
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            model[0].Col9 = "ATTENDNCE REPORT";
            model[0].Col10 = "kc_tab";
            model[0].Col11 = " and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "'";
            ViewBag.scripCall = "enableForm();";
            model[0].Col12 = "ATT"; //ATTENDANCE
            return View(model);
        }
        [HttpPost]
        public ActionResult att_rpt(List<Tmodelmain> model, string command, string mid)
        {
            try
            {
                string fdt = "", tdt = "";
                FillMst(model[0].Col15);
                DataSet dst = new DataSet();
                if (sgen.GetSession(MyGuid, "KPDFDT") != null) fdt = sgen.GetSession(MyGuid, "KPDFDT").ToString();
                if (sgen.GetSession(MyGuid, "KPDTDT") != null) tdt = sgen.GetSession(MyGuid, "KPDTDT").ToString();
                if (sgen.GetSession(MyGuid, "KPDCMD") != null) command = sgen.GetSession(MyGuid, "KPDCMD").ToString();
                if (command.Trim().ToUpper() == "Period Wise" || command.Trim().ToUpper() == "Person Wise" || command.Trim().ToUpper() == "Callback") { sgen.SetSession(MyGuid, "KPDCMD", command); }
                else
                {
                    if (fdt == "") { ViewBag.scripCall += "showmsgJS(1,'Please Select From Date',2)"; return View(model); }
                    if (tdt == "") { ViewBag.scripCall += "showmsgJS(1,'Please Select To Date',2)"; return View(model); }
                }
                var tm = model.FirstOrDefault();
                if (command == "Submit")
                {
                    string status = "";
                    Boolean isok = false;
                    for (int i = 0; i < model.Count; i++)
                    {
                        if (model[i].Col18 == "APP")
                        {
                            status = "Approved";
                        }
                        else if (model[i].Col18 == "DIS")
                        {
                            status = "Disapproved";
                        }
                        mq = "update kc_tab set Col38='" + status + "' where type='ATT' and client_id||client_unit_id||vch_num||to_char(vch_date, 'yyyymmdd')||type='" + model[i].Col20 + "'";
                        isok = sgen.execute_cmd(userCode, mq);
                    }
                    if (isok == true)
                    {
                        mq = "select distinct a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date, 'yyyymmdd')||a.type as fstr,a.vch_num as doc_no," +
                         "to_char(date1, '" + sgen.Getsqldateformat() + "') as doc_date,(case when a.col1 = 'CNV' then 'conveyance' when a.col1 = 'TXI' then 'Taxi' " +
                         "when a.col1 = 'TRV' then 'Travel' else '-' end) as att_type,a.col39 as total_hours ,a.col40 as total_amount," +
                         "ud.first_name||' '||replace(ud.middle_name,'0','')||''||replace(ud.last_name,'0','') as user_name from kc_tab" +
                         " a inner join user_details ud on ud.vch_num=a.ent_by and ud.type='CPR' where a.type = 'ATT' and a.col38='Pending' and a.client_unit_id = '" + unitid_mst + "' and to_date(to_char(a.vch_DATE,'ddMMyyyy'),'ddMMyyyy') between" +
                         " to_date('" + fdt + "','" + sgen.Getsqldatetimeformat() + "') and to_date('" + tdt + "','" + sgen.Getsqldatetimeformat() + "')";

                        DataTable dt = sgen.getdata(userCode, mq);
                        if (dt.Rows.Count > 0)
                        {
                            model = new List<Tmodelmain>();
                            foreach (DataRow dr in dt.Rows)
                            {
                                model.Add(new Tmodelmain
                                {
                                    Col9 = tm.Col9,
                                    Col11 = tm.Col11,
                                    Col12 = tm.Col12,
                                    Col10 = tm.Col10,
                                    Col13 = tm.Col13,
                                    Col14 = tm.Col14,
                                    Col15 = tm.Col15,
                                    Col100 = "Save & New",
                                    Col121 = "S",
                                    Col122 = "<u>S</u>ave",
                                    Col123 = "Save & Ne<u>w</u>",
                                    Col16 = "",
                                    Col17 = tm.Col17,
                                    Col18 = tm.Col18,
                                    Col19 = dr["user_name"].ToString(),
                                    Col20 = dr["fstr"].ToString(),
                                    Col21 = dr["att_type"].ToString(),
                                    Col22 = dr["total_hours"].ToString(),
                                    Col23 = dr["total_amount"].ToString(),
                                });
                            }
                        }
                        else { ViewBag.scripCall += "showmsgJS(1,'No Data Found',2);"; }
                    }
                }
                else if (command == "Period Wise")
                {
                    mq = "select distinct a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date, 'yyyymmdd')||a.type as fstr,a.vch_num as doc_no," +
                        "to_char(date1, '" + sgen.Getsqldateformat() + "') as doc_date,(case when a.col1 = 'CNV' then 'conveyance' when a.col1 = 'TXI' then 'Taxi' " +
                        "when a.col1 = 'TRV' then 'Travel' else '-' end) as att_type,a.col39 as total_hours ,a.col40 as total_amount," +
                        "ud.first_name||' '||replace(ud.middle_name,'0','')||''||replace(ud.last_name,'0','') as user_name from kc_tab" +
                        " a inner join user_details ud on ud.vch_num=a.ent_by and ud.type='CPR' where a.type = 'ATT' and a.col39='Pending' and a.client_unit_id = '" + unitid_mst + "' and to_date(to_char(a.vch_DATE,'ddMMyyyy'),'ddMMyyyy') between" +
                        " to_date('" + fdt + "','" + sgen.Getsqldatetimeformat() + "') and to_date('" + tdt + "','" + sgen.Getsqldatetimeformat() + "')";

                    DataTable dt = sgen.getdata(userCode, mq);
                    if (dt.Rows.Count > 0)
                    {
                        model = new List<Tmodelmain>();
                        foreach (DataRow dr in dt.Rows)
                        {
                            model.Add(new Tmodelmain
                            {
                                Col9 = tm.Col9,
                                Col11 = tm.Col11,
                                Col12 = tm.Col12,
                                Col10 = tm.Col10,
                                Col13 = tm.Col13,
                                Col14 = tm.Col14,
                                Col15 = tm.Col15,
                                Col100 = "Save & New",
                                Col121 = "S",
                                Col122 = "<u>S</u>ave",
                                Col123 = "Save & Ne<u>w</u>",
                                Col16 = "",
                                Col17 = "",
                                Col18 = "",
                                Col19 = dr["user_name"].ToString(),
                                Col20 = dr["fstr"].ToString(),
                                Col21 = dr["att_type"].ToString(),
                                Col22 = dr["total_hours"].ToString(),
                                Col23 = dr["total_amount"].ToString(),
                            });
                        }
                    }
                    else { ViewBag.scripCall += "showmsgJS(1,'No Data Found',2);"; }
                    sgen.SetSession(MyGuid, "KPDCMD", null);
                }
                else if (command == "Person Wise")
                {
                    mq = "select distinct ud.vch_num as doc_no,ud.first_name||' '||replace(ud.middle_name,'0','')||''||replace(ud.last_name,'0','') as user_name" +
                        ",ud.email,ud.con_number,ud.per_address from kc_tab a inner join user_details ud on ud.vch_num = a.ent_by and ud.type = 'CPR' " +
                        "where a.type = 'ATT' and a.client_unit_id = '" + unitid_mst + "' and to_date(to_char(a.vch_DATE,'ddMMyyyy'),'ddMMyyyy') between" +
                        " to_date('" + fdt + "','" + sgen.Getsqldatetimeformat() + "') and to_date('" + tdt + "','" + sgen.Getsqldatetimeformat() + "')";

                    DataTable dt = sgen.getdata(userCode, mq);
                    if (dt.Rows.Count > 0)
                    {
                        sgen.open_grid("Attendence Person Wise Lise", mq, 1);
                        ViewBag.scripCall = "callFoo('Attendence Person Wise Lise');";
                        sgen.SetSession(MyGuid, "PERWISE", "Person Wise");
                        sgen.SetSession(MyGuid, "PERID", dt.Rows[0]["doc_no"].ToString());
                    }
                    else { ViewBag.scripCall += "showmsgJS(1,'No Data Found',2);"; }
                    sgen.SetSession(MyGuid, "KPDCMD", null);
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region conf_room
        public ActionResult conf_room()
        {
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            FillMst(MyGuid);
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            model[0].Col9 = "ADD ROOM FACILITES";
            model[0].Col10 = "";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "";
            List<SelectListItem> md1 = new List<SelectListItem>();
            TempData[MyGuid + "_TList1"] = model[0].TList1 = md1;
            model[0].SelectedItems1 = new string[] { "" };
            ViewBag.vsave = "";
            ViewBag.scripCall = "enableForm();";
            model = bindroomdetailrepeater(model);
            return View(model);
        }
        public List<Tmodelmain> bindroomdetailrepeater(List<Tmodelmain> model)
        {
            var tm = model.FirstOrDefault();
            DataTable dt = new DataTable();
            string mq = "select vch_num,conf_roomid,conf_roomname,conf_roomtype,seating_capacity,projector,whitebord,laptops,wifi,video_conf,roomimg_name,roomimg_path,vc_type,client_id,client_unit_id,vch_date,type from conference_room where client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "' and type='CRD'";
            dt = sgen.getdata(userCode, mq);
            if (dt.Rows.Count > 0)
            {
                model = new List<Tmodelmain>();
                foreach (DataRow dr in dt.Rows)
                {
                    model.Add(new Tmodelmain
                    {
                        Col9 = tm.Col9,
                        Col11 = tm.Col11,
                        Col12 = tm.Col12,
                        Col10 = tm.Col10,
                        Col13 = tm.Col13,
                        Col14 = tm.Col14,
                        Col15 = tm.Col15,
                        Col100 = "Save & New",
                        Col121 = "S",
                        Col122 = "<u>S</u>ave",
                        Col123 = "Save & Ne<u>w</u>",
                        Col16 = "",
                        Col17 = "",
                        Col18 = "",
                        Col19 = "",
                        Col20 = "",
                        Col21 = "",
                        Col22 = "",
                        Col23 = "",
                        Col24 = "",
                        Col25 = "",
                        Col27 = dr["Conf_roomid"].ToString(),
                        Col28 = dr["Conf_roomname"].ToString(),
                        Col29 = dr["Conf_roomtype"].ToString(),
                        Col30 = dr["Seating_capacity"].ToString(),
                        Col31 = dr["Projector"].ToString(),
                        Col32 = dr["Whitebord"].ToString(),
                        Col33 = dr["Laptops"].ToString(),
                        Col34 = dr["Wifi"].ToString(),
                        Col36 = dr["Video_conf"].ToString(),
                        Col37 = dr["Vc_type"].ToString(),
                        Col38 = dr["roomimg_name"].ToString(),
                        Col39 = dr["roomimg_path"].ToString(),
                    });
                }
            }
            return model;

        }
        [HttpPost]
        public ActionResult conf_room(List<Tmodelmain> model, string command, HttpPostedFileBase upd1)
        {
            try
            {
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();
                string projvalue = "", laptopvalue = "", wifivalue = "", whiteboardvalue = "", videoconfvalue = "", vctypevalue = "";
                if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {

                    var tmodel = model.FirstOrDefault();
                    string currdate = sgen.server_datetime(userCode);
                    string dt_ft = "YYYY-MM-dd HH24:MI:SS";

                    projvalue = model[0].Col20;
                    whiteboardvalue = model[0].Col21;
                    laptopvalue = model[0].Col22;
                    wifivalue = model[0].Col23;
                    videoconfvalue = model[0].Col24;
                    vctypevalue = model[0].Col25;
                    if (model[0].Col17 == "" || model[0].Col18 == "" || model[0].Col19 == "")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'Please fill All The Required Fields', 2);";
                    }
                    else
                    {
                        string confroomid = "select max(to_number(conf_roomid)) as auto_generated_id from conference_room where type='CRD' " + model[0].Col11 + "";
                        confroomid = sgen.genNo(userCode, confroomid, 6, "auto_generated_id");
                        string vch_num = "select max(to_number(vch_num)) as auto_genid from conference_room where type='CRD' " + model[0].Col11 + "";
                        vch_num = sgen.genNo(userCode, vch_num, 6, "auto_genid");
                        if (upd1 != null)
                        {
                            #region file
                            DataTable dtfile = cmd_Fun.GetStructure(userCode, "file_tab");
                            string serverpath = Server.MapPath("~/Uploads/" + cg_com_name.Replace(" ", "") + "/");
                            HttpPostedFileBase file1 = upd1;
                            ctype1 = file1.ContentType;
                            fileName1 = file1.FileName;
                            path1 = clientid_mst + unitid_mst + userid_mst + currdate + "_" + fileName1;
                            encpath1 = sgen.Convert_Stringto64(path1).ToString();
                            finalpath1 = serverpath + encpath1;
                            file1.SaveAs(finalpath1);
                            #endregion
                            DataTable dt = new DataTable();
                            dt = sgen.getdata(userCode, "select conf_roomname from conference_room where client_unit_id='" + unitid_mst + "' and conf_roomname='" + model[0].Col17 + "'");
                            if (dt.Rows.Count > 0)
                            {
                                ViewBag.scripCall += "showmsgJS(1, 'Already Saved Room Details', 2);";
                                return View(model);
                            }
                            bool data = sgen.execute_cmd(userCode, "insert into conference_room(conf_roomid,conf_roomname,conf_roomtype,seating_capacity," +
                                "projector,whitebord,laptops,wifi,video_conf,roomimg_name,roomimg_path,ent_by,ent_date,client_id,client_unit_id," +
                                "vch_num,type,vch_date,vc_type,edit_by,edit_date)values('" + confroomid + "','" + model[0].Col17 + "'," +
                                "'" + model[0].Col18 + "','" + model[0].Col19 + "','" + projvalue + "','" + whiteboardvalue + "'," +
                                "'" + laptopvalue + "','" + wifivalue + "','" + videoconfvalue + "','" + fileName1 + "','" + encpath1 + "','" + userid_mst + "'," +
                                "to_date('" + currdate + "','" + dt_ft + "'),'" + clientid_mst + "','" + unitid_mst + "','" + vch_num + "','CRD'," +
                                "to_date('" + currdate + "','" + dt_ft + "'),'" + vctypevalue + "','" + userid_mst + "',to_date('" + currdate + "','" + dt_ft + "'))");
                            sgen.execute_cmd(userCode, "commit");
                            if (data == true)
                            {
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Added');";
                                //biind repeater
                                model = bindroomdetailrepeater(model);
                            }
                            else
                            {
                                ViewBag.scripCall += "showmsgJS(1, 'Something Went Wrong', 2);";
                            }
                        }
                        else
                        {
                            bool data = sgen.execute_cmd(userCode, "insert into conference_room(conf_roomid,conf_roomname,conf_roomtype,seating_capacity," +
                                       "projector,whitebord,laptops,wifi,video_conf,ent_by,ent_date,client_id,client_unit_id," +
                                       "vch_num,type,vch_date,vc_type,edit_by,edit_date)values('" + confroomid + "','" + model[0].Col17.Trim() + "'," +
                                       "'" + model[0].Col18 + "','" + model[0].Col19 + "','" + projvalue + "','" + whiteboardvalue + "'," +
                                       "'" + laptopvalue + "','" + wifivalue + "','" + videoconfvalue + "','" + userid_mst + "'," +
                                       "to_date('" + currdate + "','" + dt_ft + "'),'" + clientid_mst + "','" + unitid_mst + "','" + vch_num + "','CRD'," +
                                       "to_date('" + currdate + "','" + dt_ft + "'),'" + vctypevalue + "','" + userid_mst + "',to_date('" + currdate + "','" + dt_ft + "'))");
                            sgen.execute_cmd(userCode, "commit");
                            if (data == true)
                            {
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Added');";
                            }
                            else
                            {
                                ViewBag.scripCall += "showmsgJS(1, 'Something Went Wrong', 2);";

                            }
                        }
                    }
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);

        }
        #endregion
        #region schdl_conf
        public ActionResult schdl_meet()
        {
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            FillMst(MyGuid);
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            model[0].Col9 = "SCHEDULE MEETING";
            model[0].Col10 = "bookings";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "CRS";
            model[0].Col40 = "CRB";
            List<SelectListItem> md1 = new List<SelectListItem>();
            model[0].TList1 = model[0].TList2 = model[0].TList3 = model[0].TList4 = md1;
            model[0].SelectedItems1 = model[0].SelectedItems2 = model[0].SelectedItems3 = model[0].SelectedItems4 = new string[] { "" };

            return View(model);
        }
        [HttpPost]
        public ActionResult schdl_meet(List<Tmodelmain> model, string command, HttpPostedFileBase upd1)
        {
            try
            {
                type = model[0].Col12;
                string type1 = "CRB";
                FillMst(model[0].Col15);
                cg_com_name = sgen.GetCookie(MyGuid, "cg_com_name");
                unitname_mst = sgen.GetCookie(MyGuid, "unitname_mst");
                subdomain_mst = sgen.GetCookie(MyGuid, "subdomain_mst");
                clientname_mst = sgen.GetCookie(MyGuid, "clientname_mst");
                var tm = model.FirstOrDefault();
                string projvalue = "", laptopvalue = "", wifivalue = "", whiteboardvalue = "", videoconfvalue = "", vctypevalue = "", bcc = "";
                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
                if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                List<SelectListItem> mod2 = (List<SelectListItem>)TempData[MyGuid + "_TList2"];
                TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2;
                if (model[0].SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
                List<SelectListItem> mod3 = (List<SelectListItem>)TempData[MyGuid + "_TList3"];
                TempData[MyGuid + "_TList3"] = model[0].TList3 = mod3;
                if (model[0].SelectedItems3 == null) model[0].SelectedItems3 = new string[] { "" };
                List<SelectListItem> mod4 = (List<SelectListItem>)TempData[MyGuid + "_TList4"];
                TempData[MyGuid + "_TList4"] = model[0].TList4 = mod4;
                if (model[0].SelectedItems4 == null) model[0].SelectedItems4 = new string[] { "" };
                if (command == "New")
                {
                    sgen.SetSession(MyGuid, "EDMODE", "N");
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsavenew = "";
                    ViewBag.vsave = "";
                    ViewBag.scripCall = "enableForm();";
                    model = bindroomdetailrepeater(model);
                    mod1 = new List<SelectListItem>();
                    mod2 = new List<SelectListItem>();
                    mod3 = new List<SelectListItem>();
                    mod4 = new List<SelectListItem>();
                    mod1.Add(new SelectListItem { Text = "Individual assignment", Value = "1" });
                    mod1.Add(new SelectListItem { Text = "Group", Value = "2" });
                    mod1.Add(new SelectListItem { Text = "Department", Value = "3" });
                    mod1.Add(new SelectListItem { Text = "Designation", Value = "4" });
                    TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
                    TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2 = cmd_Fun.conf_room(userCode, unitid_mst);
                    TempData[MyGuid + "_TList3"] = model[0].TList3 = mod3 = cmd_Fun.hospitality(userCode, unitid_mst);
                    TempData[MyGuid + "_TList4"] = model[0].TList4 = mod4 = cmd_Fun.it_services(userCode, unitid_mst);
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command == "Book Now")
                {
                    var tmodel = model.FirstOrDefault();
                    string currdate = sgen.server_datetime(userCode);
                    string dt_ft = "YYYY-MM-dd HH24:MI:SS";

                    string hospservice_id = "", itsercice_id = "", groupid = "", usertype = "", userid = "", rec_id = "", fname = "", email = "", bookingid = "";

                    if (model[0].Col17 == "" || model[0].Col18 == "" || model[0].SelectedItems2.FirstOrDefault() == "0" || model[0].Col20 == "" || model[0].Col21 == "" || model[0].Col22 == "")
                    {
                        sgen.showmsg(1, "Please Fill All The Required Fields", 2);
                        return View(model);
                    }
                    DataTable dt2 = new DataTable();
                    dt2 = cmd_Fun.GetStructure(userCode, model[0].Col10);
                    IList<HttpPostedFile> fileCollection = (List<HttpPostedFile>)sgen.GetSession(MyGuid, "tr_upd");

                    #region fillddl
                    if (model[0].SelectedItems3.FirstOrDefault() != "")
                    {
                        string[] ddl_hospitality = string.Join(",", model[0].SelectedItems3).Split(',');
                        foreach (string item in ddl_hospitality)
                        {
                            if (item != "")
                            {
                                hospservice_id = hospservice_id + item + ",";
                            }
                        }
                        hospservice_id = hospservice_id.TrimEnd(',');
                    }
                    if (model[0].SelectedItems4.FirstOrDefault() != "")
                    {
                        string[] ddl_it = string.Join(",", model[0].SelectedItems4).Split(',');

                        foreach (string item in ddl_it)
                        {
                            if (item != "")
                            {
                                itsercice_id = itsercice_id + item + ",";
                            }
                        }
                        itsercice_id = itsercice_id.TrimEnd(',');
                    }
                    #endregion
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        isedit = true;
                        vch_num = model[0].Col16;
                    }
                    else
                    {
                        isedit = false;
                        bookingid = "select max(to_number(booking_id)) as auto_generated_id from " + model[0].Col10 + " where type='" + type1 + "'" + model[0].Col11.Trim() + "";
                        bookingid = sgen.genNo(userCode, bookingid, 6, "auto_generated_id");

                        vch_num = "select max(to_number(vch_num)) as Auto_Generated_id from " + model[0].Col10 + " where type='" + type1 + "'" + model[0].Col11.Trim() + "";
                        vch_num = sgen.genNo(userCode, vch_num, 6, "Auto_Generated_id");
                        model[0].Col16 = vch_num;
                        //string roomname = ((List<SelectListItem>)TempData[MyGuid + "_TList2"]).SingleOrDefault(item => item.Value == model[0].SelectedItems2.FirstOrDefault().ToString()).Text.ToString();
                    }
                    string roomname = ((List<SelectListItem>)TempData[MyGuid + "_TList2"]).SingleOrDefault(item => item.Value == model[0].SelectedItems2.FirstOrDefault().ToString()).Text.ToString();

                    var list = sgen.GetSession(MyGuid, "cr_invites") as List<invite_meeting_status>;
                    for (int i = 0; i < list.Count; i++)
                    {
                        userid = list[i].Usersid;
                        rec_id = list[i].Rec_id;
                        email = list[i].Useremail;
                        fname = list[i].USsersname;
                        groupid = list[i].groupid;
                        usertype = list[i].user_type;
                        #region validation
                        DataTable dt = new DataTable();
                        string query = "select conf_roomname,to_char(convert_tz(startdatetime,'+00:00','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldatetimeformat() + "') as startdatetime," +
                            "to_char(convert_tz(enddatetime,'+00:00','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldatetimeformat() + "') as enddatetime from bookings" +
                            " where conf_roomname='" + roomname + "' and user_id='" + rec_id + "' " +
                            "and startdatetime>='" + sgen.Savedate(model[0].Col17, true) + "' and enddatetime<='" + sgen.Savedate(model[0].Col18, true) + "'";
                        dt = sgen.getdata(userCode, query);
                        if (dt.Rows.Count > 0)
                        {
                            sgen.showmsg(1, "Room And User Already Busy", 2);
                            return View(model);
                        }
                        else
                        {
                            DataTable dt1 = new DataTable();
                            string query1 = "select conf_roomname,to_char(convert_tz(startdatetime,'+00:00','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldatetimeformat() + "') as startdatetime" +
                                ",to_char(convert_tz(startdatetime,'+00:00','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldatetimeformat() + "') as startdatetime " +
                                "from conference_room where conf_roomname='" + roomname + "'  and startdatetime>='" + sgen.Savedate(model[0].Col17, true) + "' and enddatetime<='" + sgen.Savedate(model[0].Col18, true) + "'";
                            dt1 = sgen.getdata(userCode, query1);
                            if (dt1.Rows.Count > 0)
                            {
                                sgen.showmsg(1, "Room Already Busy", 2);
                                return View(model);
                            }
                        }
                        #endregion
                        #region
                        DataRow dr = dt2.NewRow();
                        dr["rec_id"] = "0";
                        dr["vch_num"] = vch_num;
                        dr["vch_date"] = sgen.Savedate(currdate, true);
                        dr["conf_roomid"] = model[0].SelectedItems2.FirstOrDefault();
                        dr["conf_roomname"] = roomname;
                        dr["no_of_invities"] = model[0].Col20;
                        dr["startdatetime"] = sgen.Savedate(model[0].Col17, true);
                        dr["enddatetime"] = sgen.Savedate(model[0].Col18, true);
                        dr["user_id"] = rec_id;
                        dr["add_services"] = hospservice_id;
                        dr["status"] = "booked";
                        dr["agenda"] = System.Threading.Thread.CurrentThread.CurrentCulture.TextInfo.ToTitleCase(model[0].Col22.ToLower());
                        dr["it_services"] = itsercice_id;
                        dr["client_id"] = clientid_mst;
                        dr["client_unit_id"] = unitid_mst;
                        dr["booking_id"] = bookingid;
                        dr["type"] = type1;
                        dr["created_date"] = sgen.Savedate(currdate, true);
                        dr["meeting_type"] = System.Threading.Thread.CurrentThread.CurrentCulture.TextInfo.ToTitleCase(model[0].Col21.ToLower());
                        dr["usertype_id"] = groupid;
                        dr["user_type"] = usertype;
                        dr = getsave(currdate, dr, model, isedit);
                        dt2.Rows.Add(dr);
                    }
                    bool res = sgen.Update_data_fast1(userCode, dt2, model[0].Col10, model[0].Col8, isedit);
                    // for attachment

                    if (upd1 != null)
                    {
                        string serverpath1 = Server.MapPath("~/Uploads/" + cg_com_name.Replace(" ", "") + "/");
                        DataTable dt3 = new DataTable();
                        dt3 = sgen.getdata(userCode, "select * from file_tab WHERE 1=2");
                        HttpPostedFileBase file1 = upd1;
                        ctype1 = file1.ContentType;
                        fileName1 = file1.FileName;
                        path1 = clientid_mst + unitid_mst + userid_mst + currdate + "_" + fileName1;
                        encpath1 = sgen.Convert_Stringto64(path1).ToString();
                        finalpath1 = serverpath1 + encpath1;
                        file1.SaveAs(finalpath1);
                        //filesave(model, currdate, dt3, fileName1, encpath1, "Family", ctype1, "");
                        DataRow dr1 = dt3.NewRow();
                        dr1["rec_id"] = "0";
                        dr1["vch_num"] = vch_num;
                        dr1["vch_date"] = sgen.Savedate(currdate, true);
                        dr1["client_id"] = clientid_mst;
                        dr1["client_unit_id"] = unitid_mst;
                        dr1["type"] = type1;
                        dr1["type_desc"] = "Conference Attachment";
                        dr1["created_date"] = sgen.Savedate(currdate, true);
                        dr1["ref_code"] = vch_num;
                        dr1["file_name"] = fileName2;
                        dr1["file_path"] = encpath2;
                        dr1 = getsave(currdate, dr1, model, isedit);
                        dt3.Rows.Add(dr1);
                        bool fileresult = sgen.Update_data(userCode, dt3, tab_name1, model[0].Col8, false);
                    }
                    if (res)
                    {
                        DataTable datatable = new DataTable();

                        datatable = sgen.getdata(userCode, "select com_email from company_profile where Company_Profile_Id='" + clientid_mst + "' and type='CP'");
                        if (datatable.Rows.Count > 0)
                        {
                            bcc = Convert.ToString(datatable.Rows[0]["com_email"]);
                        }
                        for (int i = 0; i < list.Count; i++)
                        {
                            userid = list[i].Usersid;
                            rec_id = list[i].Rec_id;
                            email = list[i].Useremail;
                            fname = list[i].USsersname;
                            if (!sgen.ValidateEmail(email))
                            {
                                return View(model);
                            }
                            DataTable dtf = sgen.getdata(userCode, "select * from " + model[0].Col10 + " where client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "' and type='" + type1 + "' and  vch_num='" + vch_num + "' and vch_date ='" + sgen.Savedate(currdate, true) + "' and user_id='" + rec_id + "'");
                            if (dtf.Rows.Count > 0)
                            {
                                int recid = Convert.ToInt32(dtf.Rows[0]["rec_id"]);
                                var body = new StringBuilder();
                                body.AppendLine(@"<b style='color:#3caee9; font-size: 20px'>Meeting Details From Admin</b><br /><hr style='border:1px solid black' /><p>Hi <b>" + fname + "</b>,</p><p>Congratulations, This is to notify you that you have been  invited for Meeting. your login credentials are as below :-</p>" +
                                    "<table style='font-weight:600'><tr><td>Company Name </td><td>: " + clientname_mst + " </td></tr><tr><td> Unit Name </td><td>: " + unitname_mst + " </td></tr><tr><td> " +
                                    "Meeting Type </td><td>: " + model[0].Col21 + " </td></tr><tr><td> Conference Room No/Name </td><td>: " + roomname + " </td> " +
                                    "</tr><tr><td>Invitees </td><td>: " + model[0].Col19 + " </td></tr><tr><td> URL </td><td>: " + subdomain_mst + " </td></tr></table><br /><p>" +
                                    "Please login and Send Approval For Same.</p><p>Thankyou,<br />Administrator<br /></p><br />");
                                if (isedit)
                                {
                                    body.AppendLine("Meeting Schedule has been changed as per below detail <br><br>");
                                }

                                body.AppendLine("Please Confirm the meeting <br><br>");
                                body.AppendLine("<a href='http://localhost:15560/erp/directlink/approve_meeting?rec_id=" + recid + "' style='text-decoration: none; margin-left:20px; padding-top:20px'>");
                                body.AppendLine("<img src ='http://skyinfy.com/images/acceptbtn.png' alt = 'Accept' style ='width: 123px; height: 48px; border: 0;'>");
                                body.AppendLine("</a> ");

                                body.AppendLine("<a href='http://localhost:15560/erp/directlink/approve_meeting?rec_id=" + recid + "' style='text-decoration: none; margin-left:20px; padding-top:20px'>");
                                body.AppendLine("<img src ='http://skyinfy.com/images/changebtn.png' alt = 'Change ?' style ='width: 123px; height: 48px; border: 0;'>");
                                body.AppendLine("</a>");
                                body.AppendLine("<a href='http://localhost:15560/erp/directlink/approve_meeting??rec_id=" + recid + "' style='text-decoration: none; margin-left:20px; padding-top:20px'>");
                                body.AppendLine("<img src ='http://skyinfy.com/images/declinebtn.png' alt = 'Decline' style ='width: 123px; height: 48px; border: 0;'>");
                                body.AppendLine("</a> <br><br>");
                                if (upd1 != null)
                                {
                                    sgen.Send_mail_Attch(userCode, clientid_mst, unitid_mst, email, "", bcc, body.ToString(), "Conference Meeting", "", fileCollection);
                                }
                                else
                                {
                                    sgen.Send_mail_SA1(userCode, clientid_mst, unitid_mst, email, "", bcc, body.ToString(), "Conference Meeting", "");
                                }

                            }
                        }
                        sgen.showmsg(1, "Booked", 1);
                        #endregion
                    }
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);

        }
        #endregion
        #region meet_config
        public ActionResult meet_config()
        {
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            FillMst(MyGuid);
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            if (model[0].Col14.Equals("3007"))
            {
                model[0].Col9 = "ADD AND ASSIGN TYPE OF SERVICES";
                model[0].Col10 = "master_setting";
                model[0].Col12 = "TOS";

            }
            else
            {
                model[0].Col9 = "ADD SERVICES FOR CONFERENCE ROOM";
                model[0].Col10 = "master_setting";
                model[0].Col12 = "CRS";
            }
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";

            List<SelectListItem> md1 = new List<SelectListItem>();
            TempData[MyGuid + "_TList1"] = model[0].TList1 = md1;
            model[0].SelectedItems1 = new string[] { "" };
            return View(model);
        }
        public List<Tmodelmain> new_meet_config(List<Tmodelmain> model)
        {
            model = getnew(model);
            var tm = model.FirstOrDefault();
            #region Dropdwon
            List<SelectListItem> mod1 = new List<SelectListItem>();
            #endregion
            model = getnew(model);
            #region ddls
            if (model[0].Col14.Equals("3007")) TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.username(userCode);
            else TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.typeof_service(userCode, unitid_mst);
            model[0].SelectedItems1 = new string[] { "" };
            #endregion
            return model;
        }
        [HttpPost]
        public ActionResult meet_config(List<Tmodelmain> model, string command, string mid)
        {
            try
            {
                string master_Id = "";
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();
                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
                if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                if (command == "New")
                {
                    model = new_meet_config(model);
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {

                    var tmodel = model.FirstOrDefault();
                    string currdate = "";
                    DataTable dtstr = new DataTable();
                    dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                    currdate = sgen.server_datetime(userCode);
                    if (model[0].Col17 == "" || model[0].SelectedItems1.FirstOrDefault() == "")
                    {
                        ViewBag.Scripcall = "sgen.showmsg(1, 'Please Fill All The Required Field', 2);";
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                        return View(model);
                    }
                    #region dtstr
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        isedit = true;
                        vch_num = model[0].Col16;
                        master_Id = model[0].Col16.Substring(3, 3);
                        mq1 = "and vch_num <> '" + model[0].Col16 + "'";
                    }
                    else
                    {
                        isedit = false;
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        mq = "select max(to_number(master_id)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                        master_Id = sgen.genNo(userCode, mq, 3, "auto_genid");
                        model[0].Col16 = vch_num;
                    }
                    DataTable dtch = new DataTable();
                    if (model[0].Col14.Equals("3007"))
                    {
                        dtch = sgen.getdata(userCode, "select client_id,client_unit_id,master_name from " + model[0].Col10.Trim() + " a where upper(master_name)='" + model[0].Col17.Trim().ToString().ToUpper() + "' " +
                                        "and type in ('" + model[0].Col12 + "','DD" + model[0].Col12 + "') and client_id='" + clientid_mst + "'" + mq1 + "");
                    }
                    else
                    {
                        dtch = sgen.getdata(userCode, "select client_id,client_unit_id,master_name from " + model[0].Col10.Trim() + " where upper(master_name)='" + model[0].Col17.Trim().ToString().ToUpper() + "'" +
                            " and classid = '" + model[0].SelectedItems1.FirstOrDefault().ToString() + "' and type in ('" + model[0].Col12 + "','DD" + model[0].Col12 + "') and client_id='" + clientid_mst + "'" + mq1 + "");
                    }
                    if (dtch.Rows.Count > 0)
                    {
                        ViewBag.scripCall = "showmsgJS(1, 'Name Already Exists in clientid- " + dtch.Rows[0]["client_id"].ToString() + " and unitid- " + dtch.Rows[0]["client_unit_id"].ToString() + "', 2);";
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                        return View(model);
                    }
                    DataRow dr = dtstr.NewRow();
                    dr["rec_id"] = "0";
                    dr["type"] = model[0].Col12;
                    dr["vch_num"] = vch_num.Trim();
                    dr["vch_date"] = currdate;
                    dr["master_id"] = master_Id;
                    dr["master_name"] = System.Threading.Thread.CurrentThread.CurrentCulture.TextInfo.ToTitleCase(model[0].Col17);
                    dr["master_status"] = "1";
                    if (model[0].Col14 == "3007")
                    {
                        dr["content"] = String.Join(",", model[0].SelectedItems1);
                    }
                    else
                    {
                        dr["classid"] = model[0].SelectedItems1.FirstOrDefault();
                        dr["sectionid"] = ((List<SelectListItem>)TempData[MyGuid + "_TList1"]).SingleOrDefault(item => item.Value == model[0].SelectedItems1.FirstOrDefault().ToString()).Text.ToString();
                    }
                    dr["master_type"] = model[0].Col14 == "3007" ? "Conference Room Service" : "conference room services";
                    if (isedit)
                    {
                        dr["master_entby"] = model[0].Col3;
                        dr["master_entdate"] = model[0].Col4;
                        dr["client_id"] = model[0].Col1;
                        dr["client_unit_id"] = model[0].Col2;
                        //dr["rec_id"] = model[0].Col7;
                        dr["master_editby"] = userid_mst;
                        dr["master_editdate"] = currdate;
                    }
                    else
                    {
                        dr["master_entby"] = userid_mst;
                        dr["master_entdate"] = currdate;
                        dr["master_editby"] = "-";
                        dr["master_editdate"] = currdate;
                        dr["client_id"] = clientid_mst;
                        dr["client_unit_id"] = unitid_mst;
                    }
                    dtstr.Rows.Add(dr);
                    #endregion
                    bool Result = sgen.Update_data_fast1(userCode, dtstr, model[0].Col10.Trim(), tmodel.Col8, isedit);
                    if (Result == true)
                    {
                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col10 = tm.Col10,
                            Col11 = tm.Col11,
                            Col12 = tm.Col12,
                            Col13 = "Save",
                            Col100 = "Save & New",
                            Col121 = "S",
                            Col122 = "<u>S</u>ave",
                            Col123 = "Save & Ne<u>w</u>",
                            Col14 = tm.Col14,
                            Col15 = tm.Col15,
                            Col9 = tm.Col9,
                            TList1 = mod1,
                            SelectedItems1 = new string[] { "" },
                        });
                        if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                        {
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                        {
                            try
                            {
                                model = new_meet_config(model);
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                            }
                            catch (Exception ex) { }
                        }
                    }
                    else
                    {
                        ViewBag.scripCall = "showmsgJS(1, 'Record Not Saved', 2);";
                    }
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);




        }
        #endregion
        #region book_room
        public ActionResult book_room()
        {
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            FillMst(MyGuid);
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            model[0].Col9 = "INVITEE STATUS";
            model[0].Col10 = "";
            model[0].Col12 = "";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            List<SelectListItem> md1 = new List<SelectListItem>();
            TempData[MyGuid + "_TList1"] = model[0].TList1 = md1;
            model[0].SelectedItems1 = new string[] { "" };
            return View(model);
        }
        [HttpPost]
        public ActionResult book_room(List<Tmodelmain> model, string command, string mid)
        {
            try
            {
                string master_Id = "";
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();
                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
                if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                if (command == "New")
                {
                    //model = new_meet_config(model);
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {

                    var tmodel = model.FirstOrDefault();
                    string currdate = "";
                    DataTable dtstr = new DataTable();
                    dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                    currdate = sgen.server_datetime(userCode);
                    if (model[0].Col17 == "" || model[0].SelectedItems1.FirstOrDefault() == "")
                    {
                        ViewBag.Scripcall = "sgen.showmsg(1, 'Please Fill All The Required Field', 2);";
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                        return View(model);
                    }
                    #region dtstr
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        isedit = true;
                        vch_num = model[0].Col16;
                        master_Id = model[0].Col16.Substring(3, 3);
                        mq1 = "and vch_num <> '" + model[0].Col16 + "'";
                    }
                    else
                    {
                        isedit = false;
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        mq = "select max(to_number(master_id)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                        master_Id = sgen.genNo(userCode, mq, 3, "auto_genid");
                        model[0].Col16 = vch_num;
                    }
                    DataTable dtch = new DataTable();
                    if (model[0].Col14.Equals("3007"))
                    {
                        dtch = sgen.getdata(userCode, "select client_id,client_unit_id,master_name from " + model[0].Col10.Trim() + " a where upper(master_name)='" + model[0].Col17.Trim().ToString().ToUpper() + "' " +
                                        "and type in ('" + model[0].Col12 + "','DD" + model[0].Col12 + "') and client_id='" + clientid_mst + "'" + mq1 + "");
                    }
                    else
                    {
                        dtch = sgen.getdata(userCode, "select client_id,client_unit_id,master_name from " + model[0].Col10.Trim() + " where upper(master_name)='" + model[0].Col17.Trim().ToString().ToUpper() + "'" +
                            " and classid = '" + model[0].SelectedItems1.FirstOrDefault().ToString() + "' and type in ('" + model[0].Col12 + "','DD" + model[0].Col12 + "') and client_id='" + clientid_mst + "'" + mq1 + "");
                    }
                    if (dtch.Rows.Count > 0)
                    {
                        ViewBag.scripCall = "showmsgJS(1, 'Name Already Exists in clientid- " + dtch.Rows[0]["client_id"].ToString() + " and unitid- " + dtch.Rows[0]["client_unit_id"].ToString() + "', 2);";
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                        return View(model);
                    }
                    DataRow dr = dtstr.NewRow();
                    dr["rec_id"] = "0";
                    dr["type"] = model[0].Col12;
                    dr["vch_num"] = vch_num.Trim();
                    dr["vch_date"] = currdate;
                    dr["master_id"] = master_Id;
                    dr["master_name"] = System.Threading.Thread.CurrentThread.CurrentCulture.TextInfo.ToTitleCase(model[0].Col17);
                    dr["master_status"] = "1";
                    if (model[0].Col14 == "3007")
                    {
                        dr["content"] = String.Join(",", model[0].SelectedItems1);
                    }
                    else
                    {
                        dr["classid"] = model[0].SelectedItems1.FirstOrDefault();
                        dr["sectionid"] = ((List<SelectListItem>)TempData[MyGuid + "_TList1"]).SingleOrDefault(item => item.Value == model[0].SelectedItems1.FirstOrDefault().ToString()).Text.ToString();
                    }
                    dr["master_type"] = model[0].Col14 == "3007" ? "Conference Room Service" : "conference room services";
                    if (isedit)
                    {
                        dr["master_entby"] = model[0].Col3;
                        dr["master_entdate"] = model[0].Col4;
                        dr["client_id"] = model[0].Col1;
                        dr["client_unit_id"] = model[0].Col2;
                        //dr["rec_id"] = model[0].Col7;
                        dr["master_editby"] = userid_mst;
                        dr["master_editdate"] = currdate;
                    }
                    else
                    {
                        dr["master_entby"] = userid_mst;
                        dr["master_entdate"] = currdate;
                        dr["master_editby"] = "-";
                        dr["master_editdate"] = currdate;
                        dr["client_id"] = clientid_mst;
                        dr["client_unit_id"] = unitid_mst;
                    }
                    dtstr.Rows.Add(dr);
                    #endregion
                    bool Result = sgen.Update_data_fast1(userCode, dtstr, model[0].Col10.Trim(), tmodel.Col8, isedit);
                    if (Result == true)
                    {
                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col10 = tm.Col10,
                            Col11 = tm.Col11,
                            Col12 = tm.Col12,
                            Col13 = "Save",
                            Col100 = "Save & New",
                            Col121 = "S",
                            Col122 = "<u>S</u>ave",
                            Col123 = "Save & Ne<u>w</u>",
                            Col14 = tm.Col14,
                            Col15 = tm.Col15,
                            Col9 = tm.Col9,
                            TList1 = mod1,
                            SelectedItems1 = new string[] { "" },
                        });
                        if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                        {
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                        {
                            try
                            {
                                //model = new_meet_config(model);
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                            }
                            catch (Exception ex) { }
                        }
                    }
                    else
                    {
                        ViewBag.scripCall = "showmsgJS(1, 'Record Not Saved', 2);";
                    }
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);




        }
        #endregion
        #region invoice work allocation
        public ActionResult w_inv()
        {
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            FillMst(MyGuid);
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            model[0].Col9 = "INVOICE";
            model[0].Col10 = "enx_tab2";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "WNV";
            List<SelectListItem> md1 = new List<SelectListItem>();
            TempData[MyGuid + "_TList1"] = model[0].TList1 = md1;
            model[0].SelectedItems1 = new string[] { "" };
            DataTable dt = sgen.getdata(userCode, "select '' Add_Remove,'1' SNo ,'' Nature_of_service,'' Rate,'' Quantity ,'' Amount ," +
                "'' Tax_Amount,'' as Remark from dual");
            model[0].dt1 = dt;
            sgen.SetSession(MyGuid, "BWINVOICE_DT", dt);

            return View(model);
        }
        public List<Tmodelmain> new_w_inv(List<Tmodelmain> model)
        {
            model = getnew(model);
            var tm = model.FirstOrDefault();
            #region Dropdwon
            List<SelectListItem> mod1 = new List<SelectListItem>();
            //     List<SelectListItem> mod2 = new List<SelectListItem>();
            #endregion
            model = getnew(model);
            #region ddls
            TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.desig(userCode, unitid_mst);
            //TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2 = cmd_Fun.transportmode(userCode, unitid_mst);
            model[0].SelectedItems1 = new string[] { "" };
            // model[0].SelectedItems2 = new string[] { "" };
            #endregion
            return model;
        }
        [HttpPost]
        public ActionResult w_inv(List<Tmodelmain> model, string command, string mid, string hfrow, string hftable)
        {
            try
            {
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();
                DataTable dtm = sgen.settable(hftable);
                model[0].dt1 = dtm;
                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
                if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                if (command == "New")
                {
                    model = new_rcard(model);
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command == "+")
                {
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                    if (model[0].dt1.Rows.Count != 0) model[0].dt1.Rows.Add(sgen.Make_int(hfrow));
                    else { model[0].dt1 = (DataTable)sgen.GetSession(MyGuid, "BWINVOICE_DT"); }
                }
                else if (command == "-")
                {
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                    if (model[0].dt1.Rows.Count > 1) model[0].dt1.Rows.RemoveAt(sgen.Make_int(hfrow));
                    else { model[0].dt1 = (DataTable)sgen.GetSession(MyGuid, "BWINVOICE_DT"); }
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {

                    var tmodel = model.FirstOrDefault();
                    string currdate = "";
                    DataTable dtstr = new DataTable();
                    dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                    currdate = sgen.server_datetime(userCode);
                    #region dtstr
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        isedit = true;
                        vch_num = model[0].Col16;
                    }
                    else
                    {
                        isedit = false;
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        model[0].Col16 = vch_num;
                    }
                    DataRow dr = dtstr.NewRow();
                    dr["rec_id"] = "0";
                    dr["type"] = model[0].Col12;
                    dr["vch_num"] = vch_num.Trim();
                    dr["vch_date"] = currdate;
                    dr["col3"] = model[0].Col17; // RAte
                    dr["col6"] = string.Join(",", model[0].SelectedItems1);   //Desig
                                                                              // dr["col7"] = model[0].SelectedItems2.FirstOrDefault();   //mode
                    dr = getsave(currdate, dr, model, isedit);
                    dtstr.Rows.Add(dr);
                    #endregion
                    bool Result = sgen.Update_data(userCode, dtstr, model[0].Col10.Trim(), tmodel.Col8, isedit);
                    if (Result == true)
                    {
                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col10 = tm.Col10,
                            Col11 = tm.Col11,
                            Col12 = tm.Col12,
                            Col13 = "Save",
                            Col100 = "Save & New",
                            Col121 = "S",
                            Col122 = "<u>S</u>ave",
                            Col123 = "Save & Ne<u>w</u>",
                            Col14 = tm.Col14,
                            Col15 = tm.Col15,
                            Col9 = tm.Col9,
                            TList1 = mod1,
                            //  TList2 = mod2,
                            SelectedItems1 = new string[] { "" },
                            //  SelectedItems2 = new string[] { "" },
                        });
                        if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                        {
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                        {
                            try
                            {
                                model = new_rcard(model);
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                            }
                            catch (Exception ex) { }
                        }
                    }
                    else
                    {
                        ViewBag.scripCall = "showmsgJS(1, 'Record Not Saved', 2);";
                    }
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region site location
        public ActionResult s_loc()
        {
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            FillMst(MyGuid);
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            model[0].Col9 = "SITE LOCATION";
            model[0].Col10 = "enx_tab2";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "SLC";
            List<SelectListItem> md1 = new List<SelectListItem>();
            TempData[MyGuid + "_TList1"] = model[0].TList1 = md1;
            //  TempData[MyGuid + "_TList2"] = model[0].TList2 = md1;
            model[0].SelectedItems1 = new string[] { "" };
            //  model[0].SelectedItems2 = new string[] { "" };
            if (model[0].Col76 == null) ViewBag.scripCall = ViewBag.scripCall + "initialize(28.477450,77.034138);";
            else ViewBag.scripCall = ViewBag.scripCall + "initialize(" + model[0].Col76 + ");";
            return View(model);
        }
        public List<Tmodelmain> new_s_loc(List<Tmodelmain> model)
        {
            model = getnew(model);
            var tm = model.FirstOrDefault();
            #region Dropdwon
            List<SelectListItem> mod1 = new List<SelectListItem>();
            //     List<SelectListItem> mod2 = new List<SelectListItem>();
            #endregion
            #region ddls
            //TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.desig(userCode, unitid_mst);
            ////TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2 = cmd_Fun.transportmode(userCode, unitid_mst);
            //model[0].SelectedItems1 = new string[] { "" };
            //// model[0].SelectedItems2 = new string[] { "" };
            #endregion
            if (model[0].Col76 == null) ViewBag.scripCall = ViewBag.scripCall + "initialize(28.477450,77.034138);";
            else ViewBag.scripCall = ViewBag.scripCall + "initialize(" + model[0].Col76 + ");";
            return model;
        }
        [HttpPost]
        public ActionResult s_loc(List<Tmodelmain> model, string command, string mid)
        {
            try
            {
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();
                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
                if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                if (command == "New")
                {
                    model = new_s_loc(model);
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {

                    var tmodel = model.FirstOrDefault();
                    string currdate = "";
                    DataTable dtstr = new DataTable();
                    dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                    currdate = sgen.server_datetime(userCode);

                    #region dtstr
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        isedit = true;
                        vch_num = model[0].Col16;
                    }
                    else
                    {
                        isedit = false;
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        model[0].Col16 = vch_num;
                    }
                    DataRow dr = dtstr.NewRow();
                    dr["rec_id"] = "0";
                    dr["type"] = model[0].Col12;
                    dr["vch_num"] = vch_num.Trim();
                    dr["vch_date"] = currdate;
                    dr["col3"] = model[0].Col17;
                    dr["col2"] = model[0].Col18;
                    dr["COL4"] = model[0].Col77;
                    dr["COL8"] = model[0].Col76;
                    dr = getsave(currdate, dr, model, isedit);
                    dtstr.Rows.Add(dr);
                    #endregion
                    bool Result = sgen.Update_data(userCode, dtstr, model[0].Col10.Trim(), tmodel.Col8, isedit);
                    if (Result == true)
                    {
                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col10 = tm.Col10,
                            Col11 = tm.Col11,
                            Col12 = tm.Col12,
                            Col13 = "Save",
                            Col100 = "Save & New",
                            Col121 = "S",
                            Col122 = "<u>S</u>ave",
                            Col123 = "Save & Ne<u>w</u>",
                            Col14 = tm.Col14,
                            Col15 = tm.Col15,
                            Col9 = tm.Col9,
                            //TList1 = mod1,
                            ////  TList2 = mod2,
                            //SelectedItems1 = new string[] { "" },
                            //  SelectedItems2 = new string[] { "" },
                        });
                        if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                        {
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                        {
                            try
                            {
                                model = new_s_loc(model);
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                            }
                            catch (Exception ex) { }
                        }
                    }
                    else
                    {
                        ViewBag.scripCall = "showmsgJS(1, 'Record Not Saved', 2);";
                    }
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region site_link
        public ActionResult site_link()
        {
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            FillMst(MyGuid);
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            model[0].Col9 = "SITE EMPLOYEE LINKING";
            model[0].Col10 = "enx_tab2";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "ESL";
            List<SelectListItem> md1 = new List<SelectListItem>();
            TempData[MyGuid + "_TList1"] = model[0].TList1 = md1;
            model[0].SelectedItems1 = new string[] { "" };

            DataTable dt = sgen.getdata(userCode, "select '' select_,'1' as  SNo ,'-' as Employee_code,'-' as Employee_name,'-' as ContactNo,'-' as Department,'-' Designation,'-' Remark from dual");
            model[0].dt1 = dt;
            sgen.SetSession(MyGuid, "ESL_DT", dt.Copy());
            return View(model);
        }
        public List<Tmodelmain> new_sitelink(List<Tmodelmain> model)
        {
            model = getnew(model);
            var tm = model.FirstOrDefault();
            return model;
        }
        [HttpPost]
        public ActionResult site_link(List<Tmodelmain> model, string command, string hfrow, string hftable)
        {
            try
            {
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();
                DataTable dtm = sgen.settable(hftable);
                model[0].dt1 = dtm;
                if (command == "New")
                {
                    model = new_sitelink(model);
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {

                    var tmodel = model.FirstOrDefault();
                    string currdate = "";
                    DataTable dtstr = new DataTable();
                    dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                    currdate = sgen.server_datetime(userCode);
                    if (model[0].dt1.Rows[0]["Employee_code"].ToString().Trim().Equals("-"))
                    {
                        ViewBag.scripCall += "showmsgJS(1,'Please Select Atleast One Employee', 2);";
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                        return View(model);
                    }

                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        isedit = true;
                        vch_num = model[0].Col16;
                    }
                    else
                    {
                        isedit = false;
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        model[0].Col16 = vch_num;
                    }
                    for (int i = 0; i < model[0].dt1.Rows.Count; i++)
                    {
                        DataRow dr = dtstr.NewRow();
                        dr["vch_num"] = vch_num;
                        dr["type"] = model[0].Col12;
                        dr["vch_date"] = currdate;
                        dr["col5"] = model[0].Col19;//site code
                        dr["col3"] = model[0].Col20; //remk
                        dr["col6"] = model[0].dt1.Rows[i]["Employee_code"].ToString();
                        dr["col7"] = model[0].dt1.Rows[i]["Employee_name"].ToString();
                        dr["col8"] = model[0].dt1.Rows[i]["ContactNo"].ToString();
                        dr["col9"] = model[0].dt1.Rows[i]["Department"].ToString();
                        dr["col10"] = model[0].dt1.Rows[i]["Designation"].ToString();
                        dr["col11"] = model[0].dt1.Rows[i]["Remark"].ToString();
                        dr = getsave(currdate, dr, model, isedit);
                        dtstr.Rows.Add(dr);
                    }
                    bool Result = sgen.Update_data_fast1(userCode, dtstr, model[0].Col10.Trim(), model[0].Col8, isedit);
                    if (Result == true)
                    {
                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col10 = tm.Col10,
                            Col11 = tm.Col11,
                            Col12 = tm.Col12,
                            Col13 = "Save",
                            Col100 = "Save & New",
                            Col121 = "S",
                            Col122 = "<u>S</u>ave",
                            Col123 = "Save & Ne<u>w</u>",
                            Col14 = tm.Col14,
                            Col15 = tm.Col15,
                            Col9 = tm.Col9,
                            dt1 = (DataTable)sgen.GetSession(MyGuid, "ESL_DT")
                            //TList1 = mod1,
                            ////  TList2 = mod2,
                            //SelectedItems1 = new string[] { "" },
                            //  SelectedItems2 = new string[] { "" },
                        });
                        if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                        {
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                        {
                            try
                            {
                                model = new_sitelink(model);
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                            }
                            catch (Exception ex) { }
                        }
                    }
                    else
                    {
                        ViewBag.scripCall = "showmsgJS(1, 'Record Not Saved', 2);";
                    }
                }
                else if (command == "-")
                {
                    if (model[0].dt1.Rows.Count > 1) model[0].dt1.Rows.RemoveAt(sgen.Make_int(hfrow));
                    else { model[0].dt1 = (DataTable)sgen.GetSession(MyGuid, "ESL_DT"); }
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region asset employee
        public ActionResult asst_alc()
        {
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            FillMst(MyGuid);
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            model[0].Col9 = "ASSET ALLOCATE";
            model[0].Col10 = "enx_tab2";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";

            List<SelectListItem> md1 = new List<SelectListItem>();
            TempData[MyGuid + "_TList1"] = model[0].TList1 = md1;
            model[0].SelectedItems1 = new string[] { "" };
            sgen.SetSession(MyGuid, "menu_id", model[0].Col14);
            if (model[0].Col14 == "42003.2") { model[0].Col29 = "User Name"; model[0].Col12 = "AAU"; }
            else { model[0].Col29 = "Employee name"; model[0].Col12 = "AAE"; }

            return View(model);
        }
        public List<Tmodelmain> new_asst_alc(List<Tmodelmain> model)
        {
            model = getnew(model);
            var tm = model.FirstOrDefault();
            model[0].Col17 = sgen.server_datetime_local(userCode);
            #region ddls
            List<SelectListItem> mod1 = new List<SelectListItem>();
            TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.asset_type(userCode, unitid_mst);
            model[0].SelectedItems1 = new string[] { "" };
            #endregion
            return model;
        }
        [HttpPost]
        public ActionResult asst_alc(List<Tmodelmain> model, string command, string mid)
        {
            try
            {
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();
                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
                if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                if (command == "New")
                {
                    model = new_asst_alc(model);
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {

                    var tmodel = model.FirstOrDefault();
                    string currdate = "";
                    DataTable dtstr = new DataTable();
                    dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                    currdate = sgen.server_datetime(userCode);

                    #region dtstr
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        isedit = true;
                        vch_num = model[0].Col16;
                    }
                    else
                    {
                        isedit = false;
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        model[0].Col16 = vch_num;
                    }
                    DataRow dr = dtstr.NewRow();
                    dr["rec_id"] = "0";
                    dr["type"] = model[0].Col12;
                    dr["vch_num"] = vch_num.Trim();
                    dr["vch_date"] = sgen.Make_date_S(model[0].Col17);
                    dr["col2"] = model[0].Col19; // emp id
                    dr["col5"] = model[0].Col23; // asset serial
                    dr["col6"] = model[0].Col24; // assset anem
                    dr["col7"] = model[0].SelectedItems1.FirstOrDefault(); // Asset Type
                    dr["col8"] = model[0].Col25; // expected value
                    dr["date1"] = sgen.Make_date_S(model[0].Col26); // expected date
                    dr["date2"] = sgen.Make_date_S(model[0].Col30, sgen.Getdatetimeformat());
                    dr["col3"] = model[0].Col27; // remk
                    dr["Col18"] = "PENDING"; // 
                    dr["col10"] = model[0].Col28; // asset code
                    dr = getsave(currdate, dr, model, isedit);
                    dtstr.Rows.Add(dr);

                    #endregion
                    bool Result = sgen.Update_data(userCode, dtstr, model[0].Col10.Trim(), tmodel.Col8, isedit);
                    if (Result == true)
                    {
                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col10 = tm.Col10,
                            Col11 = tm.Col11,
                            Col12 = tm.Col12,
                            Col29 = tm.Col29,
                            Col13 = "Save",
                            Col100 = "Save & New",
                            Col121 = "S",
                            Col122 = "<u>S</u>ave",
                            Col123 = "Save & Ne<u>w</u>",
                            Col14 = tm.Col14,
                            Col15 = tm.Col15,
                            Col9 = tm.Col9,
                            TList1 = mod1,
                            //  TList2 = mod2,
                            SelectedItems1 = new string[] { "" },
                            //  SelectedItems2 = new string[] { "" },
                        });
                        if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                        {
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                        {
                            try
                            {
                                model = new_asst_alc(model);
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                            }
                            catch (Exception ex) { }
                        }
                    }
                    else
                    {
                        ViewBag.scripCall = "showmsgJS(1, 'Record Not Saved', 2);";
                    }
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);




        }
        #endregion
        #region inc_tax
        public ActionResult inc_tax()
        {
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            FillMst(MyGuid);
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            ViewBag.scripCall = "enableForm();";

            //model[0].Col9 = "RATE CARD";
            model[0].Col10 = "enx_tab2";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            //model[0].Col12 = "RCC";
            List<SelectListItem> md1 = new List<SelectListItem>();
            TempData[MyGuid + "_TList1"] = model[0].TList1 = md1;
            //  TempData[MyGuid + "_TList2"] = model[0].TList2 = md1;
            model[0].SelectedItems1 = new string[] { "" };
            //  model[0].SelectedItems2 = new string[] { "" };
            return View(model);
        }
        [HttpPost]
        public ActionResult inc_tax(List<Tmodelmain> model, string command, string mid)
        {
            try
            {
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();
                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
                if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                if (command == "New")
                {
                    //model = new_rcard(model);
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {

                    var tmodel = model.FirstOrDefault();
                    string currdate = "";
                    DataTable dtstr = new DataTable();
                    dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                    currdate = sgen.server_datetime(userCode);

                    #region dtstr
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        isedit = true;
                        vch_num = model[0].Col16;
                    }
                    else
                    {
                        isedit = false;
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        model[0].Col16 = vch_num;
                    }
                    DataRow dr = dtstr.NewRow();
                    dr["rec_id"] = "0";
                    dr["type"] = model[0].Col12;
                    dr["vch_num"] = vch_num.Trim();
                    dr["vch_date"] = currdate;
                    dr["col3"] = model[0].Col17; // RAte
                    dr["col6"] = string.Join(",", model[0].SelectedItems1);   //Desig
                                                                              // dr["col7"] = model[0].SelectedItems2.FirstOrDefault();   //mode
                    dr = getsave(currdate, dr, model, isedit);
                    dtstr.Rows.Add(dr);

                    #endregion
                    bool Result = sgen.Update_data(userCode, dtstr, model[0].Col10.Trim(), tmodel.Col8, isedit);
                    if (Result == true)
                    {
                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col10 = tm.Col10,
                            Col11 = tm.Col11,
                            Col12 = tm.Col12,
                            Col13 = "Save",
                            Col100 = "Save & New",
                            Col121 = "S",
                            Col122 = "<u>S</u>ave",
                            Col123 = "Save & Ne<u>w</u>",
                            Col14 = tm.Col14,
                            Col15 = tm.Col15,
                            Col9 = tm.Col9,
                            TList1 = mod1,
                            //  TList2 = mod2,
                            SelectedItems1 = new string[] { "" },
                            //  SelectedItems2 = new string[] { "" },
                        });
                        if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                        {
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                        {
                            try
                            {
                                //model = new_rcard(model);
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                            }
                            catch (Exception ex) { }
                        }
                    }
                    else
                    {
                        ViewBag.scripCall = "showmsgJS(1, 'Record Not Saved', 2);";
                    }
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);




        }
        #endregion
        #region Letter Templete
        public ActionResult letter_tmp()
        {
            FillMst();
            List<Tmodelmain> model = new List<Tmodelmain>();
            List<SelectListItem> mod1 = new List<SelectListItem>();
            model = getload(model);
            if (model[0].Col14 == "33001.4")
            {
                model[0].Col9 = "LETTER TEMPLATE";
                model[0].Col12 = "LTP";
            }
            else if (model[0].Col14 == "40001.19")
            {
                model[0].Col9 = "MAIL TEMPLATE";
                model[0].Col12 = "MTP";
            }
            sgen.SetSession(MyGuid, "TYPE_MSTTEMP", model[0].Col12);
            model[0].Col10 = "enx_tab2";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
            model[0].SelectedItems1 = new string[] { "" };
            model[0].Files1 = new List<Files>();
            Files tm3 = new Files();
            tm3.FileName = "-";
            model[0].Files1.Add(tm3);
            return View(model);
        }
        [HttpPost]
        public ActionResult letter_tmp(List<Tmodelmain> model,string modelstr, string command, HttpPostedFileBase upd1)
        {
            sgen = new sgenFun(MyGuid);
            try
            {
                if (model[0].Files1 != null)
                {
                    for (int f = 0; f < model[0].Files1.Count; f++)
                    {
                        try
                        {
                            string base64String = "", fname = "", ftype = "";
                            var fi = model[0].Files1[f].PostedFile;
                            if (Request.Files["[0].Files1[" + f + "].PostedFile"] != null && Request.Files["[0].Files1[" + f + "].PostedFile"].ContentLength > 100)
                            {
                                fi = Request.Files["[0].Files1[" + f + "].PostedFile"];

                                Stream fs = fi.InputStream;
                                BinaryReader br = new BinaryReader(fs);
                                Byte[] bytes = br.ReadBytes((Int32)fs.Length);
                                base64String = Convert.ToBase64String(bytes, 0, bytes.Length);
                                fname = fi.FileName;
                                ftype = fi.ContentType;
                                model[0].Files1[f].FileBase64 = base64String;
                                model[0].Files1[f].FileName = fname;
                                model[0].Files1[f].ContentType = ftype;
                            }
                        }
                        catch (Exception ex)
                        {
                            sgen.SetSession(MyGuid, actionName + f, null);
                        }
                    }
                }
            }
            catch (Exception err) { }
            List<Tmodelmain> model1 = new List<Tmodelmain>();
            if (modelstr != null)
            {
                model1 = sgen.Make_Model(modelstr);
                model1[0].Files1 = model[0].Files1;
                model = model1;
            }

            try
            {
                string fdt = "", tdt = "";
                FillMst();
                var tm = model.FirstOrDefault();
                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];                
                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
                if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };                

                if (command == "New")
                {
                    model = getnew(model);
                    mod1 = new List<SelectListItem>();
                    mod1.Add(new SelectListItem { Text = "Lead", Value = "001" });
                    mod1.Add(new SelectListItem { Text = "Booking", Value = "002" });
                    mod1.Add(new SelectListItem { Text = "Booking Cancel", Value = "003" });
                    mod1.Add(new SelectListItem { Text = "Feed Back", Value = "004" });
                    TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;                    
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command.Trim() == "Save" || command.Trim() == "Update")
                {
                    try
                    {
                        var tmodel = model.FirstOrDefault();
                        string currdate = sgen.server_datetime(userCode);
                        DataTable dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());

                        if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                        {
                            isedit = true;
                            vch_num = model[0].Col16;
                        }
                        else
                        {
                            isedit = false;
                            mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                            vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                            model[0].Col16 = vch_num;
                        }
                        DataRow dr = dtstr.NewRow();
                        dr["type"] = model[0].Col12;
                        dr["vch_num"] = vch_num.Trim();
                        dr["vch_date"] = sgen.Savedate(currdate, false);
                        dr["col23"] = model[0].Col20;  // body text
                        dr["col2"] = model[0].Col17;   //  set for
                        dr["col3"] = model[0].SelectedItems1.FirstOrDefault();// temp type
                        dr["col4"] = model[0].Col18;// sub
                        dr = getsave(currdate, dr, model, isedit);
                        dtstr.Rows.Add(dr);
                        Satransaction sat = new Satransaction(userCode, MyGuid);
                        bool Result = sgen.Update_data_fast1_uncommit(userCode, dtstr, model[0].Col10.Trim(), tmodel.Col8, isedit, sat);
                        if (Result == true)
                        {
                            IList<KCFile> fileCollection = new List<KCFile>();
                            #region attachment
                            string serverpath = Server.MapPath("~/Uploads/" + cg_com_name.Replace(" ", "") + "/");
                            var dtf = sgen.getdata(userCode, "select * from file_tab where " + tmodel.Col8 + "");
                            List<Tmodel> filenames = new List<Tmodel>();
                            foreach (DataRow drr in dtf.Rows)
                            {
                                try
                                {
                                    var fileNameOnly = drr["file_path"].ToString();
                                    var fullPath = serverpath + drr["file_path"].ToString();
                                    string path = Path.GetDirectoryName(fullPath);
                                    var newname = "temp_" + fileNameOnly;
                                    System.IO.File.Move(fullPath, path + newname);
                                    Tmodel tmf = new Tmodel();
                                    tmf.Col1 = path;
                                    tmf.Col2 = fileNameOnly;
                                    tmf.Col3 = newname;
                                    filenames.Add(tmf);
                                }
                                catch (Exception err) { }
                            }
                            sat.Execute_cmd("delete from file_tab where " + tmodel.Col8 + "");

                            if (model[0].Files1 != null)
                            {
                                for (int f = 0; f < model[0].Files1.Count; f++)
                                {
                                    try
                                    {
                                        if (model[0].Files1[f] != null)
                                        {
                                            string fname = model[0].Files1[f].FileName;
                                            string ftype = model[0].Files1[f].ContentType;
                                            string base64String = model[0].Files1[f].FileBase64;
                                            if (base64String != null && base64String.Trim().Length > 100)
                                            {
                                                ctype1 = ftype;
                                                fileName1 = fname;
                                                path1 = clientid_mst + unitid_mst + userid_mst + currdate + "_" + fileName1;
                                                encpath1 = sgen.Convert_Stringto64(path1).ToString();
                                                finalpath1 = serverpath + encpath1;
                                                System.IO.File.WriteAllBytes(finalpath1, Convert.FromBase64String(base64String));

                                                DataTable dtfile = cmd_Fun.GetStructure(userCode, "file_tab");
                                                filesave(model, currdate, dtfile, fileName1, encpath1, "MTP", ctype1, "Mail Template", "Mail Template", model[0].SelectedItems1.FirstOrDefault(), "");                                                
                                                Result = sgen.Update_data_fast1_uncommit(userCode, dtfile, "file_tab", tmodel.Col8, isedit, sat);
                                                if (!Result)
                                                {
                                                    sat.Rollback();
                                                    break;
                                                }
                                                var bytes = Convert.FromBase64String(base64String);
                                                Stream stream = new MemoryStream(bytes);
                                                KCFile file = new KCFile();
                                                file.FileName = fname;
                                                file.ContentLength = stream.Length;
                                                file.ContentType = ctype1;
                                                file.InputStream = stream;
                                                fileCollection.Add(file);
                                            }
                                        }
                                    }
                                    catch (Exception err)
                                    {
                                        sat.Rollback();
                                        break;
                                    }
                                }
                            }
                            #endregion
                            if (Result)
                            {
                                sat.Commit();
                                foreach (var el in filenames)
                                {
                                    System.IO.File.Delete(el.Col1 + el.Col3);
                                }
                            }
                            else
                            {
                                foreach (var el in filenames)
                                {
                                    System.IO.File.Move(el.Col1 + el.Col3, el.Col1 + el.Col2);
                                }
                            }

                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.scripCall = "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                            model = new List<Tmodelmain>();
                            model.Add(new Tmodelmain
                            {
                                Col9 = tm.Col9,
                                Col10 = tm.Col10,
                                Col11 = tm.Col11,
                                Col12 = tm.Col12,
                                Col13 = "Save",
                                Col121 = "S",
                                Col122 = "<u>S</u>ave",
                                Col14 = tm.Col14,
                                Col15 = tm.Col15,
                                TList1 = mod1,
                                SelectedItems1 = new string[] { "" }
                            });

                            model[0].Files1 = new List<Files>();
                            Files tm3 = new Files();
                            tm3.FileName = "-";
                            model[0].Files1.Add(tm3);
                        }
                        else
                        {
                            ViewBag.scripCall = "showmsgJS(1, 'Record Not Saved', 2);";
                        }
                    }
                    catch (Exception ex) { sgen.showmsg(1, ex.Message.ToString(), 0); }
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region PRINT LETTER
        public ActionResult prnt_ltr()
        {
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            FillMst(MyGuid);
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            model[0].Col9 = "PRINT LETTER";
            model[0].Col10 = "enx_tab2";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "PLT";
            List<SelectListItem> md1 = new List<SelectListItem>();
            TempData[MyGuid + "_TList1"] = model[0].TList1 = md1;
            //  TempData[MyGuid + "_TList2"] = model[0].TList2 = md1;
            model[0].SelectedItems1 = new string[] { "" };
            //  model[0].SelectedItems2 = new string[] { "" };
            return View(model);
        }
        [HttpPost]
        public ActionResult prnt_ltr(List<Tmodelmain> model, string command, string mid)
        {
            try
            {
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();
                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
                if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                if (command == "New")
                {
                    model = getnew(model);

                }
                else if (command == "Print" || command == "Update" || command == "Save")
                {
                    DataTable qrdt = new DataTable();
                    DataTable maindt = new DataTable();

                    mq = "select (emp.client_id||emp.client_unit_id||emp.vch_num||to_char(emp.vch_date,'yyyymmdd')||emp.type) as fstr,emp.emp_code as Emp_Code," +
                        "emp.old_empcode Old_EmpCode,(emp.FIRST_NAME || ' ' || REPLACE(emp.MIDDLE_NAME, '0', '') || ' ' || REPLACE(emp.LAST_NAME, '0', '')) as Emp_Name" +
                        ",nvl(dg.master_name, '-') as designation,nvl(dp.master_name, '-') as department,emp.email_id as Per_Email,emp.contact_no as ContactNo,to_char(emp.dob, '" + sgen.Getsqldateformat() + "') dob,emp.cur_address" +
                        ",nvl(p.TOTEARN,'0')*12 as gross_earn_year,emp.f_name as Father_Name,emp.gender as Gender,to_char(emp.st_dt, '" + sgen.Getsqldateformat() + "') as Date_Of_Joining" +
                        ",nvl(p.TOTEARN,'0') as gross_earn_month,p.TOTDED,to_char(emp.ex_dt, '" + sgen.Getsqldateformat() + "') as Date_Of_Leave,p.NETSALARY from emp_master emp left join paymain p on emp.vch_num = p.emp_code and p.type = 'PAY' and emp.client_id = p.client_id" +
                        " and emp.client_unit_id = p.client_unit_id left join master_setting dp on dp.master_id = emp.emp_dept and dp.type = 'MDP'" +
                        " and find_in_set(dp.client_id, emp.client_id)= 1 and find_in_set(dp.client_unit_id, emp.client_unit_id)= 1 left join master_setting dg on dg.master_id" +
                        " = emp.emp_desig and dg.type = 'MDG' and find_in_set(dg.client_id, emp.client_id)= 1 and find_in_set(dg.client_unit_id, emp.client_unit_id)= 1 WHERE" +
                        "  (emp.client_id||emp.client_unit_id||emp.vch_num||to_char(emp.vch_date,'yyyymmdd')||emp.type) = '" + model[0].Col23 + "'";

                    DataTable dtemp = new DataTable();
                    dtemp = sgen.getdata(userCode, mq);
                    if (dtemp.Rows.Count > 0)
                    {
                        string msg_txt = model[0].Col20;

                        string empname = dtemp.Rows[0]["Emp_Name"].ToString();
                        string father = dtemp.Rows[0]["Father_Name"].ToString();
                        string address = dtemp.Rows[0]["cur_address"].ToString();
                        string mobile = dtemp.Rows[0]["ContactNo"].ToString();
                        string email = dtemp.Rows[0]["Per_Email"].ToString();
                        string empaddress = dtemp.Rows[0]["cur_address"].ToString();
                        string department = dtemp.Rows[0]["department"].ToString();
                        string designation = dtemp.Rows[0]["designation"].ToString();
                        string earn_year = dtemp.Rows[0]["gross_earn_year"].ToString();
                        string earn_month = dtemp.Rows[0]["gross_earn_month"].ToString();
                        string dob = dtemp.Rows[0]["dob"].ToString();
                        string doj = dtemp.Rows[0]["Date_Of_Joining"].ToString();
                        string dol = dtemp.Rows[0]["Date_Of_Leave"].ToString();
                        msg_txt = msg_txt.Replace("[name]", empname);
                        msg_txt = msg_txt.Replace("[fname]", father);
                        msg_txt = msg_txt.Replace("[mobile]", mobile);
                        msg_txt = msg_txt.Replace("[email]", email);
                        msg_txt = msg_txt.Replace("[add]", empaddress);
                        msg_txt = msg_txt.Replace("[deprtment]", department);
                        msg_txt = msg_txt.Replace("[designation]", designation);
                        msg_txt = msg_txt.Replace("[gearn_y]", earn_year);
                        msg_txt = msg_txt.Replace("[gearn_m]", earn_month);
                        msg_txt = msg_txt.Replace("[doj]", doj);
                        msg_txt = msg_txt.Replace("[dob]", dob);
                        msg_txt = msg_txt.Replace("[dol]", dol);

                        dtemp.Columns.Add("bulktext");
                        dtemp.Rows[0]["bulktext"] = msg_txt;

                        sgen.open_report_bydt_xml(userCode, dtemp, "offer_ltr", "Job Offer Letter");
                        ViewBag.scripCall += "showRptnew('Job Offer Letter');";

                        var tmodel = model.FirstOrDefault();
                        string currdate = sgen.server_datetime(userCode);
                        DataTable dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());

                        if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                        {
                            isedit = true;
                            vch_num = model[0].Col16;
                        }
                        else
                        {
                            isedit = false;
                            mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                            vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                            model[0].Col16 = vch_num;
                        }
                        DataRow dr = dtstr.NewRow();
                        dr["type"] = model[0].Col12;
                        dr["vch_num"] = vch_num.Trim();
                        dr["vch_date"] = sgen.Savedate(currdate, false);
                        dr["col23"] = model[0].Col20; //text
                        dr["col5"] = model[0].Col24;  //lette id
                        dr["date1"] = sgen.Make_date_S(model[0].Col25);  //ltr date
                        dr["col7"] = model[0].Col23;      //emp id
                        dr["col8"] = model[0].Col27;      //  tempid
                        dr = getsave(currdate, dr, model, isedit);
                        dtstr.Rows.Add(dr);
                        bool Result = sgen.Update_data_fast1(userCode, dtstr, model[0].Col10.Trim(), tmodel.Col8, isedit);
                        if (Result == true)
                        {
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                            model = new List<Tmodelmain>();
                            model.Add(new Tmodelmain
                            {
                                Col10 = tm.Col10,
                                Col11 = tm.Col11,
                                Col12 = tm.Col12,
                                Col13 = "Save",
                                Col121 = "S",
                                Col122 = "<u>S</u>ave",
                                Col14 = tm.Col14,
                                Col15 = tm.Col15,
                                Col9 = tm.Col9,
                            });
                        }
                        else
                        {
                            ViewBag.scripCall += "showmsgJS(1, 'Record Not Saved', 2);";
                        }
                    }
                    else
                    {
                        ViewBag.scripCall = "showmsgJS(1, 'Something Went Wrong', 2);";
                    }
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region registration approval
        public ActionResult reg_apr()
        {
            FillMst();
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            List<SelectListItem> md1 = new List<SelectListItem>();
            TempData[MyGuid + "_TList1"] = model[0].TList1 = md1;
            TempData[MyGuid + "_TList2"] = model[0].TList2 = md1;
            TempData[MyGuid + "_TList3"] = model[0].TList3 = md1;
            TempData[MyGuid + "_TList4"] = model[0].TList4 = md1;
            TempData[MyGuid + "_TList4"] = model[0].TList5 = md1;
            TempData[MyGuid + "_TList4"] = model[0].TList6 = md1;
            TempData[MyGuid + "_TList4"] = model[0].TList7 = md1;
            model[0].SelectedItems1 = new string[] { "" };
            model[0].SelectedItems2 = new string[] { "" };
            model[0].SelectedItems3 = new string[] { "" };
            model[0].SelectedItems4 = new string[] { "" };
            model[0].SelectedItems5 = new string[] { "" };
            model[0].SelectedItems6 = new string[] { "" };
            model[0].SelectedItems7 = new string[] { "" };
            model[0].Col10 = "enx_tab2";
            model[0].Col9 = "UPLOAD CERTIFICATE";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "RUC";

            return View(model);
        }
        public List<Tmodelmain> new_reg_apr(List<Tmodelmain> model)
        {
            try
            {
                List<SelectListItem> mod1 = new List<SelectListItem>();
                List<SelectListItem> mod2 = new List<SelectListItem>();
                List<SelectListItem> mod3 = new List<SelectListItem>();
                List<SelectListItem> mod4 = new List<SelectListItem>();
                List<SelectListItem> mod5 = new List<SelectListItem>();
                List<SelectListItem> mod6 = new List<SelectListItem>();
                List<SelectListItem> mod7 = new List<SelectListItem>();
                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.dept(userCode, clientid_mst, unitid_mst);
                TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2 = cmd_Fun.aff_auth(userCode, unitid_mst);
                TempData[MyGuid + "_TList3"] = model[0].TList3 = mod3 = cmd_Fun.iloc(userCode, unitid_mst);
                TempData[MyGuid + "_TList4"] = model[0].TList4 = mod4 = cmd_Fun.ddl_division(userCode, unitid_mst);
                TempData[MyGuid + "_TList5"] = model[0].TList5 = mod5 = cmd_Fun.ddl_type(userCode, unitid_mst);
                mod6.Add(new SelectListItem { Text = "High", Value = "High" });
                mod6.Add(new SelectListItem { Text = "Medium", Value = "Medium" });
                mod6.Add(new SelectListItem { Text = "Low", Value = "Low" });
                TempData[MyGuid + "_TList6"] = model[0].TList6 = mod6;
                mod7.Add(new SelectListItem { Text = "Active", Value = "Active" });
                mod7.Add(new SelectListItem { Text = "Inactive", Value = "Inactive" });
                TempData[MyGuid + "_TList7"] = model[0].TList7 = mod7;
                model = getnew(model);
            }
            catch (Exception ex)
            { ViewBag.scripCall = "showmsgJS(1, '" + ex.Message.ToString().Replace("'", "") + "', 1);"; }
            return model;
        }
        [HttpPost]
        public ActionResult reg_apr(List<Tmodelmain> model, string command, string mid, HttpPostedFileBase upd1)
        {
            try
            {
                FillMst(model[0].Col15);
                #region
                var tm = model.FirstOrDefault();
                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                List<SelectListItem> mod2 = (List<SelectListItem>)TempData[MyGuid + "_TList2"];
                List<SelectListItem> mod3 = (List<SelectListItem>)TempData[MyGuid + "_TList3"];
                List<SelectListItem> mod4 = (List<SelectListItem>)TempData[MyGuid + "_TList4"];
                List<SelectListItem> mod5 = (List<SelectListItem>)TempData[MyGuid + "_TList5"];
                List<SelectListItem> mod6 = (List<SelectListItem>)TempData[MyGuid + "_TList6"];
                List<SelectListItem> mod7 = (List<SelectListItem>)TempData[MyGuid + "_TList7"];
                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
                TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2;
                TempData[MyGuid + "_TList3"] = model[0].TList3 = mod3;
                TempData[MyGuid + "_TList4"] = model[0].TList4 = mod4;
                TempData[MyGuid + "_TList5"] = model[0].TList5 = mod5;
                TempData[MyGuid + "_TList6"] = model[0].TList6 = mod6;
                TempData[MyGuid + "_TList7"] = model[0].TList7 = mod7;
                if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                if (model[0].SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
                if (model[0].SelectedItems3 == null) model[0].SelectedItems3 = new string[] { "" };
                if (model[0].SelectedItems4 == null) model[0].SelectedItems4 = new string[] { "" };
                if (model[0].SelectedItems5 == null) model[0].SelectedItems5 = new string[] { "" };
                if (model[0].SelectedItems6 == null) model[0].SelectedItems6 = new string[] { "" };
                if (model[0].SelectedItems7 == null) model[0].SelectedItems7 = new string[] { "" };
                #endregion
                if (command == "New")
                {
                    model = new_reg_apr(model);
                    if (model[0].Col127 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for new " + model[0].Col9 + ", please contact your admin', 2);";
                        return View(model);
                    }
                    model = getnew(model);
                }
                if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {
                    tm = model.FirstOrDefault();
                    if (model[0].Col127 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for save " + model[0].Col9 + " , please contact your admin', 2);";
                        return View(model);
                    }
                    if (upd1 == null)
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'Please Select Attechment', 1);";
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                        return View(model);
                    }
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        isedit = true;
                        model[0].Col16 = tm.Col16.Trim();
                    }
                    else
                    {
                        mq1 = "";
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10 + " where type='" + model[0].Col12 + "' " + model[0].Col11 + "  ";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        isedit = false;
                        model[0].Col16 = vch_num;
                    }
                    #region dtstr
                    DataTable dtstr = new DataTable();
                    dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                    string currdate = sgen.server_datetime(userCode);
                    DataRow dr = dtstr.NewRow();
                    dr["vch_num"] = model[0].Col16;
                    dr["vch_date"] = currdate;
                    dr["type"] = model[0].Col12;
                    dr["col5"] = model[0].Col17; //Certificate Name
                    dr["col6"] = model[0].SelectedItems2.FirstOrDefault();//Affiliated Authority
                    dr["col7"] = model[0].SelectedItems3.FirstOrDefault();//Location
                    dr["col8"] = model[0].SelectedItems4.FirstOrDefault();//division
                    dr["col9"] = model[0].SelectedItems5.FirstOrDefault();//Type
                    dr["col10"] = model[0].SelectedItems6.FirstOrDefault();//Criticality
                    dr["col11"] = model[0].SelectedItems7.FirstOrDefault();//Criticality
                    dr["col18"] = model[0].SelectedItems1.FirstOrDefault();//Department
                    dr["col19"] = model[0].Col18;// Reminder Before (In days)
                    dr["col20"] = model[0].Col22;//Interval (In Days)
                    dr["col3"] = model[0].Col23;//Short Description
                    dr["col4"] = model[0].Col24;//long Description
                    dr["date1"] = sgen.Make_date_S(model[0].Col20);//valid from
                    dr["date2"] = sgen.Make_date_S(model[0].Col21);//Valid To
                    dr = getsave(currdate, dr, model, isedit);
                    dtstr.Rows.Add(dr);
                    bool Result = sgen.Update_data_fast1(userCode, dtstr, model[0].Col10.Trim(), tm.Col8, isedit);

                    if (Result == true)
                    {
                        #region attachment
                        DataTable dtfile = cmd_Fun.GetStructure(userCode, "file_tab");
                        string serverpath = Server.MapPath("~/Uploads/" + cg_com_name.Replace(" ", "") + "/");
                        try
                        {
                            HttpPostedFileBase file1 = upd1;
                            ctype1 = file1.ContentType;
                            fileName1 = file1.FileName;
                            path1 = clientid_mst + unitid_mst + userid_mst + currdate + "_" + fileName1;
                            encpath1 = sgen.Convert_Stringto64(path1).ToString();
                            finalpath1 = serverpath + encpath1;
                            file1.SaveAs(finalpath1);
                            filesave(model, currdate, dtfile, fileName1, encpath1, "RAP", ctype1, model[0].Col32, model[0].Col31, "", "");

                        }
                        catch (Exception ex) { }
                        bool res = false;
                        if (dtfile.Rows.Count > 0)
                        {
                            res = sgen.Update_data_fast1(userCode, dtfile, "file_tab", "", false);
                        }
                        #endregion
                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col10 = tm.Col10,
                            Col11 = tm.Col11,
                            Col12 = tm.Col12,
                            Col13 = "Save",
                            Col100 = "Save & New",
                            Col121 = "S",
                            Col122 = "<u>S</u>ave",
                            Col123 = "Save & Ne<u>w</u>",
                            Col14 = tm.Col14,
                            Col15 = tm.Col15,
                            Col9 = tm.Col9,
                            TList1 = mod1,
                            TList2 = mod2,
                            TList3 = mod3,
                            TList4 = mod4,
                            TList5 = mod5,
                            TList6 = mod6,
                            TList7 = mod7,
                            SelectedItems1 = new string[] { "" },
                            SelectedItems2 = new string[] { "" },
                            SelectedItems3 = new string[] { "" },
                            SelectedItems4 = new string[] { "" },
                            SelectedItems5 = new string[] { "" },
                            SelectedItems6 = new string[] { "" },
                            SelectedItems7 = new string[] { "" },
                        });
                        if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                        {
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                        {
                            try
                            {
                                model = new_reg_apr(model);
                            }
                            catch (Exception ex) { }
                        }
                    }
                    #endregion
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region asst_return
        public ActionResult asst_return()
        {
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            FillMst(MyGuid);
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            model[0].Col9 = "ASSET RETURN BACK";
            model[0].Col10 = "enx_tab2";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "ARB";
            sgen.SetSession(MyGuid, "menu_id", model[0].Col14);
            if (model[0].Col14 == "42003.3")
            {
                model[0].Col29 = "User Name";
                model[0].Col12 = "ARU";

            }
            else { model[0].Col29 = "Employee name"; }
            List<SelectListItem> md1 = new List<SelectListItem>();
            TempData[MyGuid + "_TList1"] = model[0].TList1 = md1;
            model[0].SelectedItems1 = new string[] { "" };
            DataTable dt = sgen.getdata(userCode, "select '' select_,'1' as  SNo ,'-' as Asset_serial,'-' as Asset_name,'-' as Asset_type,'-' as expected_value,'-' Exp_return_date,'-' Remark ,'0'as Ref_code  from dual");
            model[0].dt1 = dt;
            sgen.SetSession(MyGuid, "ARB_DT", dt.Copy());
            return View(model);
        }
        public List<Tmodelmain> new_asst_return(List<Tmodelmain> model)
        {
            model = getnew(model);
            var tm = model.FirstOrDefault();
            model[0].Col17 = sgen.server_datetime_local(userCode);
            #region ddls
            List<SelectListItem> mod1 = new List<SelectListItem>();
            TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.asset_type(userCode, unitid_mst);
            model[0].SelectedItems1 = new string[] { "" };
            #endregion
            return model;
        }
        [HttpPost]
        public ActionResult asst_return(List<Tmodelmain> model, string command, string hfrow, string hftable)
        {
            try
            {
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();
                DataTable dtm = sgen.settable(hftable);

                model[0].dt1 = dtm;
                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
                if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                if (command == "New")
                {
                    model = new_asst_return(model);
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {

                    var tmodel = model.FirstOrDefault();
                    string currdate = "";
                    DataTable dtstr = new DataTable();
                    dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                    currdate = sgen.server_datetime(userCode);
                    if (model[0].dt1.Rows[0]["Asset_serial"].ToString().Trim().Equals("-"))
                    {
                        ViewBag.scripCall += "showmsgJS(1,'Please Select Atleast One Asset', 2);";
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                        return View(model);
                    }
                    #region dtstr
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        isedit = true;
                        vch_num = model[0].Col16;
                    }
                    else
                    {
                        isedit = false;
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        model[0].Col16 = vch_num;
                    }
                    for (int i = 0; i < model[0].dt1.Rows.Count; i++)
                    {
                        DataRow dr = dtstr.NewRow();
                        dr["vch_num"] = vch_num;
                        dr["type"] = model[0].Col12;
                        dr["vch_date"] = sgen.Make_date_S(model[0].Col17);
                        dr["col2"] = model[0].Col19; // emp id
                        dr["col4"] = model[0].Col24; // remk
                        dr["col5"] = model[0].dt1.Rows[i]["Asset_serial"].ToString();
                        dr["col6"] = model[0].dt1.Rows[i]["Asset_name"].ToString();
                        dr["col7"] = model[0].dt1.Rows[i]["Asset_type"].ToString();
                        dr["col8"] = model[0].dt1.Rows[i]["expected_value"].ToString();
                        dr["date1"] = sgen.Make_date_S(model[0].dt1.Rows[i]["Exp_return_date"].ToString());
                        dr["col3"] = model[0].dt1.Rows[i]["Remark"].ToString();
                        dr = getsave(currdate, dr, model, isedit);
                        dtstr.Rows.Add(dr);
                    }
                    #endregion
                    bool Result = sgen.Update_data(userCode, dtstr, model[0].Col10.Trim(), tmodel.Col8, isedit);
                    if (Result == true)
                    {
                        if (!isedit)
                        {
                            for (int i = 0; i < model[0].dt1.Rows.Count; i++)
                            {
                                //string type2 = "";
                                //if (model[0].Col14 == "42003.3")
                                //{ type2 = "AAE";}
                                //else
                                //{ type2 = "AAU"; }
                                mq = "update enx_tab2 set Col18='RETURNED' where  client_id||client_unit_id||vch_num||to_char(vch_date, 'yyyymmdd')||type='" + model[0].dt1.Rows[i]["ref_code"].ToString() + "'";
                                sgen.execute_cmd(userCode, mq);
                            }
                        }
                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col10 = tm.Col10,
                            Col11 = tm.Col11,
                            Col12 = tm.Col12,
                            Col29 = tm.Col29,
                            Col13 = "Save",
                            Col100 = "Save & New",
                            Col121 = "S",
                            Col122 = "<u>S</u>ave",
                            Col123 = "Save & Ne<u>w</u>",
                            Col14 = tm.Col14,
                            Col15 = tm.Col15,
                            Col9 = tm.Col9,
                            TList1 = mod1,
                            //  TList2 = mod2,
                            SelectedItems1 = new string[] { "" },

                            dt1 = (DataTable)sgen.GetSession(MyGuid, "ARB_DT")
                            //  SelectedItems2 = new string[] { "" },
                        });
                        if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                        {
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                        {
                            try
                            {
                                model = new_asst_return(model);
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                            }
                            catch (Exception ex) { }
                        }
                    }
                    else
                    {
                        ViewBag.scripCall = "showmsgJS(1, 'Record Not Saved', 2);";
                    }
                }
                else if (command == "-")
                {
                    if (model[0].dt1.Rows.Count > 1) model[0].dt1.Rows.RemoveAt(sgen.Make_int(hfrow));
                    else { model[0].dt1 = (DataTable)sgen.GetSession(MyGuid, "ARB_DT"); }
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);




        }
        #endregion
        #region hr_empdoc             
        public ActionResult hr_empdoc()
        {
            FillMst("");
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            model[0].Col9 = "EMPLOYEE EXPIRY DOCUMENT";
            model[0].Col12 = "EXD";
            sgen.SetSession(MyGuid, "EDOCTYPE", model[0].Col12);
            model[0].Col10 = "enx_tab";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            return View(model);
        }
        [HttpPost]
        public ActionResult hr_empdoc(List<Tmodelmain> model, string command, string hfrow)
        {
            FillMst(model[0].Col15);
            var tm = model.FirstOrDefault();
            if (model[0].LTM1 != null)
            {
                for (int f = 0; f < model[0].LTM1.Count; f++)
                {
                    try
                    {
                        if (model[0].LTM1[f].File1[0] != null)
                        {
                            sgen.SetSession(MyGuid, "hr_empdoc" + f, model[0].LTM1[f].File1);
                            model[0].LTM1[f].Col17 = model[0].LTM1[f].File1[0].FileName;
                        }
                    }
                    catch (Exception ex)
                    {
                        sgen.SetSession(MyGuid, "hr_empdoc" + f, null);
                    }
                }
            }
            if (command == "New")
            {
                try
                {
                    model = getnew(model);
                    model[0].LTM1 = new List<Tmodelmain>();
                    Tmodelmain ltm = new Tmodelmain();
                    if (model[0].Col14 == "33008.1")
                    {
                        model[0].Col21 = "EXP_DOC";
                        ltm.Col1 = "Doc Type";
                        ltm.Col2 = "Description";
                        ltm.Col3 = "Issuing Authority";
                        ltm.Col4 = "Issued On";
                        ltm.Col5 = "Expiry On";
                        ltm.Col6 = "Y";
                        ltm.Col7 = "Y";
                        ltm.Col8 = "Y";
                        ltm.Col9 = "Y";
                        ltm.Col10 = "Y";
                        ltm.Col21 = "ND";
                        ltm.Col22 = "ND";
                        ltm.Col23 = "ND";
                        ltm.Col24 = "YD";
                        ltm.Col25 = "YD";
                    }
                    ltm.Col17 = "Choose File";
                    ltm.Col20 = "1";
                    model[0].LTM1.Add(ltm);
                }
                catch (Exception ex) { }
            }
            else if (command == "Cancel")
            {
                return CancelFun(model);
            }
            else if (command == "Callback")
            {
                if (sgen.GetSession(MyGuid, "delid") != null) { btnval = "FDEL"; }
                else if (sgen.GetSession(MyGuid, "btnval") != null) btnval = sgen.GetSession(MyGuid, "btnval").ToString();
                model = CallbackFun(btnval, "N", actionName, controllerName, model);
                ViewBag.vnew = "disabled='disabled'";
                ViewBag.vedit = "disabled='disabled'";
                ViewBag.vsave = "";
            }
            else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
            {
                try
                {
                    if (model[0].LTM1.Count <= 0)
                    {
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.scripCall += "showmsgJS(1, 'Please fill atleast 1 row', 0);";
                    }
                    Satransaction sat1 = new Satransaction(userCode, MyGuid);
                    string currdate = sgen.server_datetime(userCode);
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        mq1 = " and vch_num<>'" + model[0].Col16.Trim() + "'";
                        isedit = true;
                        vch_num = model[0].Col16;
                    }
                    else
                    {
                        mq1 = "";
                        isedit = false;
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                    }
                    DataTable dataTable = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                    for (int i = 0; i < model[0].LTM1.Count; i++)
                    {
                        #region dr
                        DataRow dr = dataTable.NewRow();
                        dr["type"] = model[0].Col12;
                        dr["vch_num"] = vch_num.Trim();
                        dr["vch_date"] = currdate;
                        dr["col2"] = model[0].Col18;//empvchnum 
                        if (model[0].Col14 == "33008.1")
                        {
                            dr["col1"] = model[0].LTM1[i].Col11;//doctype
                            dr["col3"] = model[0].LTM1[i].Col12;//description    
                            dr["col5"] = model[0].LTM1[i].Col13;//issuing authority
                            dr["date1"] = sgen.Make_date_S(model[0].LTM1[i].Col14);//issue date
                            dr["date2"] = sgen.Make_date_S(model[0].LTM1[i].Col15);//expiry date
                        }
                        dr["r_no"] = model[0].LTM1[i].Col20;//rowno                                                                                              
                        dr["rec_id"] = "0";
                        if (isedit)
                        {
                            dr["ent_by"] = model[0].Col3;
                            dr["ent_date"] = model[0].Col4;
                            dr["client_id"] = clientid_mst;
                            dr["client_unit_id"] = unitid_mst;
                            dr["edit_by"] = userid_mst;
                            dr["edit_date"] = currdate;
                        }
                        else
                        {
                            dr["ent_by"] = userid_mst;
                            dr["ent_date"] = currdate;
                            dr["edit_by"] = "-";
                            dr["edit_date"] = currdate;
                            dr["client_id"] = clientid_mst;
                            dr["client_unit_id"] = unitid_mst;
                        }
                        dataTable.Rows.Add(dr);
                        #endregion
                    }
                    bool res = false;
                    res = sgen.Update_data_uncommit2(userCode, dataTable, model[0].Col10.Trim(), model[0].Col8, isedit, sat1);
                    if (res)
                    {
                        DataTable dtfile = cmd_Fun.GetStructure(userCode, "file_tab");
                        string serverpath1 = Server.MapPath("~/Uploads/" + cg_com_name.Replace(" ", "") + "/");
                        for (int k = 0; k < model[0].LTM1.Count; k++)
                        {
                            try
                            {
                                List<HttpPostedFileBase> ff = (List<HttpPostedFileBase>)sgen.GetSession(MyGuid, "hr_empdoc" + k);
                                foreach (HttpPostedFileBase file1 in ff)
                                {
                                    ctype1 = file1.ContentType;
                                    fileName1 = file1.FileName;
                                    path1 = clientid_mst + unitid_mst + userid_mst + currdate + "_" + fileName1;
                                    encpath1 = sgen.Convert_Stringto64(path1).ToString();
                                    finalpath1 = serverpath1 + encpath1;
                                    file1.SaveAs(finalpath1);
                                    docfile(model, currdate, dtfile, fileName1, encpath1, model[0].Col21, ctype1, k + 1);
                                }
                            }
                            catch (Exception ex) { }
                        }
                        bool ok = false;
                        ok = sgen.Update_data_uncommit2(userCode, dtfile, "file_tab", "", false, sat1);
                        if (!ok)
                        {
                            sat1.Rollback();
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.scripCall += "showmsgJS(1, 'Something went wrong in file', 0);";
                            ModelState.Clear();
                            return View(model);
                        }
                        sat1.Commit();
                        ViewBag.vnew = "";
                        ViewBag.vedit = "";
                        ViewBag.vsave = "disabled='disabled'";
                        ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col9 = tm.Col9,
                            Col10 = tm.Col10,
                            Col11 = tm.Col11,
                            Col12 = tm.Col12,
                            Col13 = "Save",
                            Col14 = tm.Col14,
                            Col15 = tm.Col15,
                        });
                    }
                    else
                    {
                        sat1.Rollback();
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                        ViewBag.scripCall += "showmsgJS(1, 'Data Not Saved', 0);";
                        ModelState.Clear();
                        return View(model);
                    }
                }
                catch (Exception ex) { ViewBag.scripCall += "showmsgJS(1,'" + ex.Message.ToString().Replace("'", "") + "', 0);"; }
            }
            else if (command == "+")
            {
                try
                {
                    Tmodelmain ntm = new Tmodelmain();
                    ntm.Col20 = (Convert.ToInt32(model[0].LTM1.Max(x => sgen.Make_int(x.Col20))) + 1).ToString();
                    ntm.Col1 = model[0].LTM1[0].Col1;
                    ntm.Col2 = model[0].LTM1[0].Col2;
                    ntm.Col3 = model[0].LTM1[0].Col3;
                    ntm.Col4 = model[0].LTM1[0].Col4;
                    ntm.Col5 = model[0].LTM1[0].Col5;
                    ntm.Col6 = model[0].LTM1[0].Col6;
                    ntm.Col7 = model[0].LTM1[0].Col7;
                    ntm.Col8 = model[0].LTM1[0].Col8;
                    ntm.Col9 = model[0].LTM1[0].Col9;
                    ntm.Col10 = model[0].LTM1[0].Col10;
                    ntm.Col21 = model[0].LTM1[0].Col21;
                    ntm.Col22 = model[0].LTM1[0].Col22;
                    ntm.Col23 = model[0].LTM1[0].Col23;
                    ntm.Col24 = model[0].LTM1[0].Col24;
                    ntm.Col25 = model[0].LTM1[0].Col25;
                    ntm.Col17 = "Choose File";
                    model[0].LTM1.Add(ntm);
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                }
                catch (Exception ex) { ViewBag.scripCall = "showmsgJS(1,'" + ex.Message.ToString() + "',0);"; }
            }
            else if (command == "x")
            {
                if (model[0].LTM1.Count > 1) model[0].LTM1.RemoveAt(sgen.Make_int(hfrow));
                else
                {
                    ViewBag.scripCall += "showmsgJS(1,'You cannot remove last entry',2)";
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    return View(model);
                }
                ViewBag.vnew = "disabled='disabled'";
                ViewBag.vedit = "disabled='disabled'";
                ViewBag.vsave = "";
            }
            ModelState.Clear();
            return View(model);
        }
        private void docfile(List<Tmodelmain> model, string currdate, DataTable dtfile, string filename, string filepath, string filetitle, string content_type, int rno)
        {
            DataRow drf = dtfile.NewRow();
            drf["vch_num"] = model[0].Col16.Trim();
            drf["rec_id"] = 0;
            drf["vch_date"] = currdate;
            drf["type"] = model[0].Col12;
            drf["type_desc"] = model[0].Col21;
            drf["ref_code"] = model[0].Col16.Trim();
            drf["ref_code1"] = Convert.ToInt32(model[0].Col16.Trim());
            drf["file_name"] = filename;
            drf["file_path"] = filepath;
            drf["r_no"] = rno;
            drf["col1"] = filetitle;
            drf["col2"] = content_type;
            drf["rec_id"] = "0";
            drf["ent_by"] = userid_mst;
            drf["ent_date"] = currdate;
            drf["client_id"] = clientid_mst;
            drf["client_unit_id"] = unitid_mst;
            drf["edit_by"] = "-";
            drf["edit_date"] = currdate;
            dtfile.Rows.Add(drf);
        }
        #endregion
        #region DOC LIST 
        public ActionResult doc_list()
        {
            FillMst();
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            string defval = "";
            ViewBag.scripCall = "enableForm();";
            model[0].Col10 = "ENX_TAB";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            //model[0].Col12 = "LDC";


            var tm = model.FirstOrDefault();

            string leadcon = "";

            if (mid_mst == "33008.3")
            {
                model[0].Col9 = "LIST OF EXPIRY DOCUMENTS";
                mq = "select f.file_name||'('||nvl(to_char(f.rec_id),'file_not_attached')||')' as files,e.vch_num as doc_no,to_char(e.vch_date,'" + sgen.Getsqldateformat() + "') as doc_date," +
 "e.col1 as doc_type,e.col3 as description,e.col5 as issuing_authority,to_char(e.date1,'" + sgen.Getsqldateformat() + "') issue_date,to_char(e.date2,'" + sgen.Getsqldateformat() + "') expiry_date,e.col2 emp_doc," +
 "(t.FIRST_NAME|| ' '|| REPLACE(t.MIDDLE_NAME,'0','')|| ' '||REPLACE(t.LAST_NAME,'0','')) empname,dp.master_name dept,dg.master_name desig " +
"from enx_tab e " +
"inner join emp_master t on e.col2=t.vch_num and t.type='EMP' and t.client_id='" + clientid_mst + "' and t.client_unit_id='" + unitid_mst + "' " +
"inner join master_setting dp on dp.master_id=t.emp_dept and dp.type='MDP' and find_in_set(dp.client_id,e.client_id)=1 and find_in_set(dp.client_unit_id,e.client_unit_id)=1 " +
"inner join master_setting dg on dg.master_id=t.emp_desig and dg.type='MDG' and find_in_set(dg.client_id,e.client_id)=1 and find_in_set(dg.client_unit_id,e.client_unit_id)=1 " +
"left join file_tab f on f.vch_num=e.vch_num and f.type=e.type and f.client_id=e.client_id and f.client_unit_id=e.client_unit_id and f.r_no = e.r_no " +
"where e.type='EXD' and e.client_id='" + clientid_mst + "' and e.client_unit_id='" + unitid_mst + "' order by e.r_no asc";
                //                mq = "select file_name||'('||rec_id||')' as files,e.vch_num as doc_no,to_char(e.vch_date,'" + sgen.Getsqldateformat() + "') as doc_date," +
                // "e.col2 emp_doc,e.col1 as doc_type,e.col3 as description,e.col5 as issuing_authority,to_char(e.date1,'" + sgen.Getsqldateformat() + "') issue_date,to_char(e.date2,'" + sgen.Getsqldateformat() + "') expiry_date," +
                // "(t.FIRST_NAME|| ' '|| REPLACE(t.MIDDLE_NAME,'0','')|| ' '||REPLACE(t.LAST_NAME,'0','')) empname,dp.master_name dept,dg.master_name desig," +
                // "nvl(f.file_name,'0') fname,nvl(f.file_path,'0') fpath,nvl(f.col1,'0') ftitle,nvl(f.col2,'0') ftype " +
                //"from enx_tab e " +
                //"inner join emp_master t on e.col2=t.vch_num and t.type='EMP' and t.client_id='" + clientid_mst + "' and t.client_unit_id='" + unitid_mst + "' " +
                //"inner join master_setting dp on dp.master_id=t.emp_dept and dp.type='MDP' and find_in_set(dp.client_id,e.client_id)=1 and find_in_set(dp.client_unit_id,e.client_unit_id)=1 " +
                //"inner join master_setting dg on dg.master_id=t.emp_desig and dg.type='MDG' and find_in_set(dg.client_id,e.client_id)=1 and find_in_set(dg.client_unit_id,e.client_unit_id)=1 " +
                //"left join file_tab f on f.vch_num=e.vch_num and f.type=e.type and f.client_id=e.client_id and f.client_unit_id=e.client_unit_id and f.r_no = e.r_no " +
                //"where e.type='EXD' and e.client_id='" + clientid_mst + "' and e.client_unit_id='" + unitid_mst + "' order by e.r_no asc";
                model[0].Col12 = "EXD";
            }

            else if (mid_mst == "33008.4")
            {
                model[0].Col9 = "LIST OF HR POLICY";
                mq = "select file_name||'('||nvl(to_char(rec_id),'file_not_attached')||')' as files,vch_num as Doc_No,description as Description,col3 as file_title from file_tab " +
                   "where client_unit_id='" + unitid_mst + "' and type='HRP' order by vch_num desc";
                model[0].Col12 = "HRP";
            }

            sgen.SetSession(MyGuid, "gridq_demogrid", mq);

            ModelState.Clear();
            return View(model);
        }
        [HttpPost]
        public ActionResult doc_list(List<Tmodelmain> model, string command, string mid)
        {
            try
            {
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();




            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region filesave
        private void filesave(List<Tmodelmain> model, string currdate, DataTable dtfile, string filename, string filepath, string filetitle, string content_type)
        {
            FillMst();
            DataRow drf = dtfile.NewRow();
            drf["vch_num"] = model[0].Col17;
            drf["type"] = model[0].Col12;
            drf["ref_code"] = model[0].Col17;
            drf["ref_code1"] = model[0].Col17;
            drf["col1"] = filetitle;
            drf["rec_id"] = "0";
            drf["vch_date"] = currdate;
            drf["file_name"] = filename;
            drf["file_path"] = filepath;
            drf["col2"] = content_type;
            drf["ent_by"] = userid_mst;
            drf["ent_date"] = currdate;
            drf["client_id"] = clientid_mst;
            drf["client_unit_id"] = unitid_mst;
            drf["edit_by"] = userid_mst;
            drf["edit_date"] = currdate;
            dtfile.Rows.Add(drf);
        }
        private void filesave(List<Tmodelmain> model, string currdate, DataTable dtfile, string filename, string filepath, string filetitle, string content_type, string description, string page_title, string ref1, string ref2)
        {
            //filesave(model, currdate, dtfile, fileName1, encpath1, "RMK", ctype1, desc, pagetitle, ref1, f_rec_id);
            DataRow drf = dtfile.NewRow();
            drf["vch_num"] = model[0].Col16;
            drf["type"] = model[0].Col12;
            drf["ref_code"] = ref1;
            drf["col3"] = page_title;
            drf["col1"] = filetitle;
            drf["description"] = description;
            drf["vch_date"] = currdate;
            drf["file_name"] = filename;
            drf["file_path"] = filepath;
            drf["col2"] = content_type;
            if (ref2 == null || ref2 == "0")
            {
                drf["rec_id"] = "0";
                //drf["vch_date"] = currdate;
                //drf["file_name"] = filename;
                //drf["file_path"] = filepath;
                //drf["col2"] = content_type;
            }
            else
            {
                if ((model[0].Col14 == "40000") && isedit == true)
                {
                    drf["rec_id"] = ref2;
                }
                else
                {
                    drf["rec_id"] = "0";
                }
            }
            drf["ent_by"] = userid_mst;
            drf["ent_date"] = currdate;
            drf["client_id"] = clientid_mst;
            drf["client_unit_id"] = unitid_mst;
            drf["edit_by"] = userid_mst;
            drf["edit_date"] = currdate;
            dtfile.Rows.Add(drf);
        }

        #endregion
        [HttpPost]
        public void fdelete(string value, string Myguid)
        {
            if (!value.Trim().Equals(""))
            {
                sgen = new sgenFun(MyGuid);
                sgen.SetSession(Myguid, "delid", value);
            }
        }
        #region add challan
        public ActionResult add_chl()
        {
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            FillMst(MyGuid);
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            model[0].Col9 = "CHALLAN";
            model[0].Col10 = "kc_tab";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "CHL";
            List<SelectListItem> md1 = new List<SelectListItem>();
            TempData[MyGuid + "_TList1"] = model[0].TList1 = md1;
            TempData[MyGuid + "_TList2"] = model[0].TList2 = md1;
            model[0].SelectedItems1 = new string[] { "" };
            model[0].SelectedItems2 = new string[] { "" };
            return View(model);
        }
        public List<Tmodelmain> new_add_chl(List<Tmodelmain> model)
        {
            model = getnew(model);
            var tm = model.FirstOrDefault();
            #region Dropdwon
            List<SelectListItem> mod1 = new List<SelectListItem>();
            List<SelectListItem> mod2 = new List<SelectListItem>();
            TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.month(userCode, unitid_mst);
            mod2.Add(new SelectListItem { Text = "TDS Payble By Taxpayer", Value = "001" });
            TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2;
            model[0].SelectedItems1 = new string[] { "" };
            model[0].SelectedItems2 = new string[] { "" };
            #endregion
            return model;
        }
        [HttpPost]
        public ActionResult add_chl(List<Tmodelmain> model, string command, string mid)
        {
            try
            {
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();
                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
                if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                List<SelectListItem> mod2 = (List<SelectListItem>)TempData[MyGuid + "_TList2"];
                TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2;
                if (model[0].SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
                if (command == "New")
                {
                    model = new_add_chl(model);
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {

                    var tmodel = model.FirstOrDefault();
                    string currdate = "";
                    DataTable dtstr = new DataTable();
                    dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                    currdate = sgen.server_datetime(userCode);

                    #region dtstr
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        isedit = true;
                        vch_num = model[0].Col16;
                    }
                    else
                    {
                        isedit = false;
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        model[0].Col16 = vch_num;
                    }
                    DataRow dr = dtstr.NewRow();
                    dr["rec_id"] = "0";
                    dr["type"] = model[0].Col12;
                    dr["vch_num"] = vch_num.Trim();
                    dr["vch_date"] = currdate;
                    dr["col1"] = model[0].Col17; //Challan Serial No
                    dr["col2"] = model[0].Col18; //  Total Challan Amount
                    dr["date1"] = sgen.Make_date_S(model[0].Col19); //Voucher Date
                    dr["col3"] = model[0].Col20; //BSR Code
                    dr["col21"] = model[0].Col21; // Bank Name
                    dr["col4"] = model[0].Col22; //TDS
                    dr["col5"] = model[0].Col23; //Surcharge
                    dr["col6"] = model[0].Col24; //Education Cess
                    dr["col7"] = model[0].Col25; //Interest
                    dr["col8"] = model[0].Col26; //Others
                    dr["col9"] = model[0].Col27; //  Cheque / DD No
                    dr["date2"] = sgen.Make_date_S(model[0].Col28); //  Payment Date
                    dr["date3"] = sgen.Make_date_S(model[0].Col29); //   Deduction Date
                    dr["col10"] = model[0].Col30; //   Ack No
                    dr["col11"] = model[0].Col31; //   late fee
                    dr["col12"] = model[0].SelectedItems1.FirstOrDefault();   //Payroll Month
                    dr["col13"] = model[0].SelectedItems2.FirstOrDefault();   // Minor Head Code
                    dr = getsave(currdate, dr, model, isedit);
                    dtstr.Rows.Add(dr);

                    #endregion
                    bool Result = sgen.Update_data(userCode, dtstr, model[0].Col10.Trim(), tmodel.Col8, isedit);
                    if (Result == true)
                    {
                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col10 = tm.Col10,
                            Col11 = tm.Col11,
                            Col12 = tm.Col12,
                            Col13 = "Save",
                            Col100 = "Save & New",
                            Col121 = "S",
                            Col122 = "<u>S</u>ave",
                            Col123 = "Save & Ne<u>w</u>",
                            Col14 = tm.Col14,
                            Col15 = tm.Col15,
                            Col9 = tm.Col9,
                            TList1 = mod1,
                            TList2 = mod2,
                            SelectedItems1 = new string[] { "" },
                            SelectedItems2 = new string[] { "" },
                        });
                        if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                        {
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                        {
                            try
                            {
                                model = new_add_chl(model);
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                            }
                            catch (Exception ex) { }
                        }
                    }
                    else
                    {
                        ViewBag.scripCall = "showmsgJS(1, 'Record Not Saved', 2);";
                    }
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);




        }
        #endregion
        #region asset master
        public ActionResult asst_mst()
        {
            FillMst();
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            List<SelectListItem> md1 = new List<SelectListItem>();
            TempData[MyGuid + "_TList1"] = model[0].TList1 = md1;
            model[0].SelectedItems1 = new string[] { "" };
            model[0].Col10 = "enx_tab2";
            model[0].Col9 = "ASSET MASTER";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "ASS";
            return View(model);
        }
        public List<Tmodelmain> new_asst_mst(List<Tmodelmain> model)
        {
            model = getnew(model);
            var tm = model.FirstOrDefault();
            model[0].Col36 = sgen.server_datetime_local(userCode);
            model[0].Col19 = sgen.server_datetime_local(userCode);
            #region ddls
            List<SelectListItem> mod1 = new List<SelectListItem>();
            TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.asset_type(userCode, unitid_mst);
            model[0].SelectedItems1 = new string[] { "" };
            #endregion
            return model;
        }
        [HttpPost]
        public ActionResult asst_mst(List<Tmodelmain> model, string command, string mid, HttpPostedFileBase upd1)
        {
            try
            {
                FillMst(model[0].Col15);
                #region
                var tm = model.FirstOrDefault();
                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
                if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                #endregion
                if (command == "New")
                {
                    model = new_asst_mst(model);
                    if (model[0].Col127 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for new " + model[0].Col9 + ", please contact your admin', 2);";
                        return View(model);
                    }
                }
                if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {
                    tm = model.FirstOrDefault();
                    if (model[0].Col127 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for save " + model[0].Col9 + " , please contact your admin', 2);";
                        return View(model);
                    }
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        isedit = true;
                        model[0].Col16 = tm.Col16.Trim();
                    }
                    else
                    {
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10 + " where type='" + model[0].Col12 + "' " + model[0].Col11 + "  ";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        isedit = false;
                        model[0].Col16 = vch_num;
                    }
                    #region dtstr
                    DataTable dtstr = new DataTable();
                    dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                    string currdate = sgen.server_datetime(userCode);
                    DataRow dr = dtstr.NewRow();
                    dr["vch_num"] = model[0].Col16;
                    dr["vch_date"] = sgen.Make_date_S(model[0].Col36);
                    dr["type"] = model[0].Col12;
                    dr["col5"] = model[0].Col17; // Asset Model
                    dr["col3"] = model[0].Col26; // Asset name
                    dr["col6"] = model[0].Col18; //  Asset Serial No
                    dr["date1"] = sgen.Make_date_S(model[0].Col19); //Invoice Date
                    dr["col7"] = model[0].Col20; //Invoice No
                    dr["col8"] = model[0].Col21; // Original Value
                    dr["col9"] = model[0].Col22; //Current Value
                    dr["col10"] = model[0].Col23; //Warranty
                    dr["col11"] = model[0].Col37; //quantity
                    dr["date2"] = sgen.Make_date_S(model[0].Col24); //Warranty Expiry Date
                    dr["col1"] = model[0].Col25; //Remark
                    dr["col17"] = model[0].SelectedItems1.FirstOrDefault();//asset type
                    dr = getsave(currdate, dr, model, isedit);
                    dtstr.Rows.Add(dr);
                    bool Result = sgen.Update_data_fast1(userCode, dtstr, model[0].Col10.Trim(), tm.Col8, isedit);
                    #region attachment
                    DataTable dtfile = cmd_Fun.GetStructure(userCode, "file_tab");
                    string serverpath = Server.MapPath("~/Uploads/" + cg_com_name.Replace(" ", "") + "/");
                    //asset master Upload
                    try
                    {
                        HttpPostedFileBase file1 = upd1;
                        ctype1 = file1.ContentType;
                        fileName1 = file1.FileName;
                        path1 = clientid_mst + unitid_mst + userid_mst + currdate + "_" + fileName1;
                        encpath1 = sgen.Convert_Stringto64(path1).ToString();
                        finalpath1 = serverpath + encpath1;
                        file1.SaveAs(finalpath1);
                        filesave(model, currdate, dtfile, fileName1, encpath1, "AMS", ctype1, model[0].Col32, model[0].Col31, "", "");
                    }
                    catch (Exception ex) { }
                    bool res = false;
                    if (dtfile.Rows.Count > 0)
                    {
                        res = sgen.Update_data_fast1(userCode, dtfile, "file_tab", "", false);
                    }
                    #endregion
                    if (Result == true)
                    {
                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col10 = tm.Col10,
                            Col11 = tm.Col11,
                            Col12 = tm.Col12,
                            Col13 = "Save",
                            Col100 = "Save & New",
                            Col121 = "S",
                            Col122 = "<u>S</u>ave",
                            Col123 = "Save & Ne<u>w</u>",
                            Col14 = tm.Col14,
                            Col15 = tm.Col15,
                            Col9 = tm.Col9,
                            TList1 = mod1,
                            SelectedItems1 = new string[] { "" },
                        });
                        if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                        {
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                        {
                            try
                            {
                                model = new_asst_mst(model);
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                            }
                            catch (Exception ex) { }
                        }
                    }
                    #endregion
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region delegates
        public ActionResult delgts()
        {
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            FillMst(MyGuid);
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            model[0].Col9 = "WORKFLOW DELEGATES";
            model[0].Col10 = "enx_tab2";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "WGT";
            List<SelectListItem> md1 = new List<SelectListItem>();
            TempData[MyGuid + "_TList1"] = model[0].TList1 = md1;
            TempData[MyGuid + "_TList2"] = model[0].TList2 = md1;
            model[0].SelectedItems1 = new string[] { "" };
            model[0].SelectedItems2 = new string[] { "" };
            return View(model);
        }
        public List<Tmodelmain> new_delgts(List<Tmodelmain> model)
        {
            model = getnew(model);
            var tm = model.FirstOrDefault();
            model[0].Col17 = sgen.server_datetime_local(userCode);
            #region ddls
            List<SelectListItem> mod1 = new List<SelectListItem>();
            List<SelectListItem> mod2 = new List<SelectListItem>();
            List<SelectListItem> mod3 = new List<SelectListItem>();

            mq = "select a.fstr as id,a.Emp_Name||'('||a.department||'/'||a.designation||')' as name from (select (emp.client_id||emp.client_unit_id||emp.vch_num||to_char(emp.vch_date,'yyyymmdd')||emp.type) as fstr,emp.emp_code as Emp_Code," +
      "emp.old_empcode Old_EmpCode,(emp.FIRST_NAME|| ' '|| REPLACE(emp.MIDDLE_NAME,'0','')|| ' '||REPLACE(emp.LAST_NAME,'0','')) as Emp_Name," +
      "nvl(dg.master_name,'-') as designation,nvl(dp.master_name,'-') as department,emp.f_name as Father_Name,emp.gender as Gender, " +
      "to_char(emp.st_dt,'" + sgen.Getsqldateformat() + "') as Date_Of_Joining" +
      " from emp_master emp inner join master_setting dp on dp.master_id=emp.emp_dept and dp.type='MDP' and find_in_set(dp.client_unit_id,'" + unitid_mst + "')=1 " +
      "inner join master_setting dg on dg.master_id = emp.emp_desig and dg.type = 'MDG' and find_in_set(dg.client_unit_id,'" + unitid_mst + "')= 1 WHERE emp.type= 'EMP' " +
      "and emp.client_unit_id= '" + unitid_mst + "' and to_char(emp.ex_dt,'yyyy')='1900' and emp.emp_status='Y') a";
            DataTable dtemp = new DataTable();
            dtemp = sgen.getdata(userCode, mq);
            if (dtemp.Rows.Count > 0)
            {
                foreach (DataRow dr in dtemp.Rows)
                {
                    mod1.Add(new SelectListItem { Value = dr["id"].ToString(), Text = dr["name"].ToString() });
                }
            }
            TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
            mod3.Add(new SelectListItem { Text = "Leave Applied", Value = "000001" });
            mod3.Add(new SelectListItem { Text = "Loan", Value = "000002" });
            mod3.Add(new SelectListItem { Text = "OD Slip", Value = "000003" });
            mod3.Add(new SelectListItem { Text = "Separation", Value = "000004" });
            TempData[MyGuid + "_TList3"] = model[0].TList3 = mod3;
            TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2;
            model[0].SelectedItems1 = new string[] { "" };
            model[0].SelectedItems2 = new string[] { "" };
            #endregion
            return model;
        }
        [HttpPost]
        public ActionResult delgts(List<Tmodelmain> model, string command, string mid)
        {
            try
            {
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();
                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
                if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                List<SelectListItem> mod2 = (List<SelectListItem>)TempData[MyGuid + "_TList2"];
                TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2;
                if (model[0].SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
                List<SelectListItem> mod3 = (List<SelectListItem>)TempData[MyGuid + "_TList3"];
                TempData[MyGuid + "_TList3"] = model[0].TList3 = mod3;
                if (model[0].SelectedItems3 == null) model[0].SelectedItems3 = new string[] { "" };
                if (command == "New")
                {
                    model = new_delgts(model);
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command == "EMPLOYEE")
                {

                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                    ViewBag.scripCall = "enableForm();";
                    if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                    mod2 = new List<SelectListItem>();
                    model[0].SelectedItems2 = new string[] { "" };
                    if (model[0].SelectedItems3 == null) model[0].SelectedItems3 = new string[] { "" };

                    DataTable dt = new DataTable();
                    mq = "select a.fstr as id,a.Emp_Name||'('||a.department||'/'||a.designation||')' as name from (select (emp.client_id||emp.client_unit_id||emp.vch_num||to_char(emp.vch_date,'yyyymmdd')||emp.type) as fstr,emp.emp_code as Emp_Code," +
 "emp.old_empcode Old_EmpCode,(emp.FIRST_NAME|| ' '|| REPLACE(emp.MIDDLE_NAME,'0','')|| ' '||REPLACE(emp.LAST_NAME,'0','')) as Emp_Name," +
 "nvl(dg.master_name,'-') as designation,nvl(dp.master_name,'-') as department,emp.f_name as Father_Name,emp.gender as Gender, " +
 "to_char(emp.st_dt,'" + sgen.Getsqldateformat() + "') as Date_Of_Joining" +
 " from emp_master emp inner join master_setting dp on dp.master_id=emp.emp_dept and dp.type='MDP' and find_in_set(dp.client_unit_id,'" + unitid_mst + "')=1 " +
 "inner join master_setting dg on dg.master_id = emp.emp_desig and dg.type = 'MDG' and find_in_set(dg.client_unit_id,'" + unitid_mst + "')= 1 WHERE emp.type= 'EMP' " +
 "and emp.client_unit_id= '" + unitid_mst + "' and to_char(emp.ex_dt,'yyyy')='1900' and emp.emp_status='Y') a where a.fstr not in '" + model[0].SelectedItems1.FirstOrDefault() + "'";
                    DataTable dtemp = new DataTable();
                    dtemp = sgen.getdata(userCode, mq);
                    if (dtemp.Rows.Count > 0)
                    {
                        foreach (DataRow dr in dtemp.Rows)
                        {
                            mod2.Add(new SelectListItem { Value = dr["id"].ToString(), Text = dr["name"].ToString() });
                        }
                    }
                    TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2;
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {

                    var tmodel = model.FirstOrDefault();
                    string currdate = "";
                    DataTable dtstr = new DataTable();
                    dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                    currdate = sgen.server_datetime(userCode);

                    #region dtstr
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        isedit = true;
                        vch_num = model[0].Col16;
                    }
                    else
                    {
                        isedit = false;
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        model[0].Col16 = vch_num;
                    }
                    DataRow dr = dtstr.NewRow();
                    dr["rec_id"] = "0";
                    dr["type"] = model[0].Col12;
                    dr["vch_num"] = vch_num.Trim();
                    dr["vch_date"] = currdate;
                    dr["col5"] = model[0].SelectedItems1.FirstOrDefault(); // employee 
                    dr["col6"] = model[0].SelectedItems2.FirstOrDefault(); //  delegatee
                    dr["col7"] = model[0].SelectedItems3.FirstOrDefault(); // wflow
                    dr["date1"] = sgen.Make_date_S(model[0].Col17); // from date
                    dr["date2"] = sgen.Make_date_S(model[0].Col18); // to date
                    dr = getsave(currdate, dr, model, isedit);
                    dtstr.Rows.Add(dr);

                    #endregion
                    bool Result = sgen.Update_data(userCode, dtstr, model[0].Col10.Trim(), tmodel.Col8, isedit);
                    if (Result == true)
                    {
                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col10 = tm.Col10,
                            Col11 = tm.Col11,
                            Col12 = tm.Col12,
                            Col13 = "Save",
                            Col100 = "Save & New",
                            Col121 = "S",
                            Col122 = "<u>S</u>ave",
                            Col123 = "Save & Ne<u>w</u>",
                            Col14 = tm.Col14,
                            Col15 = tm.Col15,
                            Col9 = tm.Col9,
                            TList1 = mod1,
                            TList2 = mod2,
                            SelectedItems1 = new string[] { "" },
                            SelectedItems2 = new string[] { "" },
                            SelectedItems3 = new string[] { "" },
                        });
                        if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                        {
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                        {
                            try
                            {
                                model = new_delgts(model);
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                            }
                            catch (Exception ex) { }
                        }
                    }
                    else
                    {
                        ViewBag.scripCall = "showmsgJS(1, 'Record Not Saved', 2);";
                    }
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region family_det
        public ActionResult family_det()
        {
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            FillMst(MyGuid);
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            model[0].Col9 = "FAMILY DETAILS";
            model[0].Col10 = "enx_tab2";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "FDT";
            List<SelectListItem> md1 = new List<SelectListItem>();
            TempData[MyGuid + "_TList1"] = model[0].TList1 = md1;
            TempData[MyGuid + "_TList2"] = model[0].TList2 = md1;
            model[0].SelectedItems1 = new string[] { "" };
            model[0].SelectedItems2 = new string[] { "" };
            return View(model);
        }
        public List<Tmodelmain> new_family_det(List<Tmodelmain> model)
        {
            model = getnew(model);
            var tm = model.FirstOrDefault();
            #region ddls
            List<SelectListItem> mod1 = new List<SelectListItem>();
            List<SelectListItem> mod2 = new List<SelectListItem>();
            TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2 = cmd_Fun.relation(userCode, unitid_mst);
            #region 1.bloodgroup
            mod1.Add(new SelectListItem { Text = "A+", Value = "A+" });
            mod1.Add(new SelectListItem { Text = "B+", Value = "B+" });
            mod1.Add(new SelectListItem { Text = "AB+", Value = "AB+" });
            mod1.Add(new SelectListItem { Text = "O+", Value = "O+" });
            mod1.Add(new SelectListItem { Text = "A-", Value = "A-" });
            mod1.Add(new SelectListItem { Text = "B-", Value = "B-" });
            mod1.Add(new SelectListItem { Text = "AB-", Value = "AB-" });
            mod1.Add(new SelectListItem { Text = "O-", Value = "O-" });
            TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;//bloodgrp
            #endregion
            model[0].SelectedItems1 = new string[] { "" };
            model[0].SelectedItems2 = new string[] { "" };
            #endregion
            return model;
        }
        [HttpPost]
        public ActionResult family_det(List<Tmodelmain> model, string command, string mid)
        {
            try
            {
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();
                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
                if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                List<SelectListItem> mod2 = (List<SelectListItem>)TempData[MyGuid + "_TList2"];
                TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2;
                if (model[0].SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
                if (command == "New")
                {
                    model = new_family_det(model);
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {

                    var tmodel = model.FirstOrDefault();
                    string currdate = "";
                    DataTable dtstr = new DataTable();
                    dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                    currdate = sgen.server_datetime(userCode);

                    #region dtstr
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        isedit = true;
                        vch_num = model[0].Col16;
                    }
                    else
                    {
                        isedit = false;
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        model[0].Col16 = vch_num;
                    }
                    DataRow dr = dtstr.NewRow();
                    dr["rec_id"] = "0";
                    dr["type"] = model[0].Col12;
                    dr["vch_num"] = vch_num.Trim();
                    dr["vch_date"] = currdate;
                    dr["col2"] = model[0].Col19; // emp id
                    dr["col16"] = model[0].Col23; //membername
                    dr["col17"] = model[0].Col24; // gender
                    dr["col20"] = model[0].SelectedItems1.FirstOrDefault(); // blood group
                    dr["col21"] = model[0].SelectedItems2.FirstOrDefault(); // relation
                    dr["date1"] = sgen.Make_date_S(model[0].Col25); // dob
                    dr["col3"] = model[0].Col26; // address
                    dr["col5"] = model[0].Col28; // mobile
                    dr["col6"] = model[0].Col29; // Email
                    dr["col7"] = model[0].Col30; // Profession
                    dr["col8"] = model[0].Col31; // Nationality
                    dr = getsave(currdate, dr, model, isedit);
                    dtstr.Rows.Add(dr);
                    #endregion
                    bool Result = sgen.Update_data_fast1(userCode, dtstr, model[0].Col10.Trim(), tmodel.Col8, isedit);
                    if (Result == true)
                    {
                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col10 = tm.Col10,
                            Col11 = tm.Col11,
                            Col12 = tm.Col12,
                            Col13 = "Save",
                            Col100 = "Save & New",
                            Col121 = "S",
                            Col122 = "<u>S</u>ave",
                            Col123 = "Save & Ne<u>w</u>",
                            Col14 = tm.Col14,
                            Col15 = tm.Col15,
                            Col9 = tm.Col9,
                            TList1 = mod1,
                            TList2 = mod2,
                            SelectedItems1 = new string[] { "" },
                            SelectedItems2 = new string[] { "" },
                        });
                        if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                        {
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                        {
                            try
                            {
                                model = new_family_det(model);
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                            }
                            catch (Exception ex) { }
                        }
                    }
                    else
                    {
                        ViewBag.scripCall = "showmsgJS(1, 'Record Not Saved', 2);";
                    }
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region nomination
        public ActionResult nomination()
        {
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            FillMst(MyGuid);
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            model[0].Col9 = "NOMINEE DETAILS";
            model[0].Col10 = "enx_tab2";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "NDT";
            List<SelectListItem> md1 = new List<SelectListItem>();
            TempData[MyGuid + "_TList1"] = model[0].TList1 = md1;
            TempData[MyGuid + "_TList2"] = model[0].TList2 = md1;
            model[0].SelectedItems1 = new string[] { "" };
            model[0].SelectedItems2 = new string[] { "" };
            return View(model);
        }
        public List<Tmodelmain> new_nomination(List<Tmodelmain> model)
        {
            model = getnew(model);
            var tm = model.FirstOrDefault();
            #region ddls
            List<SelectListItem> mod1 = new List<SelectListItem>();
            List<SelectListItem> mod2 = new List<SelectListItem>();
            mq = "select ug.vch_num as doc_no,ug.col16||'('||rl.master_name||')' as Member_name from enx_tab2 ug" +
                " inner join master_setting rl on rl.master_id=ug.col21 and rl.type='REL' and find_in_set(rl.client_unit_id,ug.client_unit_id)=1" +
                " where ug.client_unit_id = '" + unitid_mst + "' and ug.type = 'FDT'";
            DataTable dtemp = new DataTable();
            dtemp = sgen.getdata(userCode, mq);
            if (dtemp.Rows.Count > 0)
            {
                foreach (DataRow dr in dtemp.Rows)
                {
                    mod2.Add(new SelectListItem { Value = dr["doc_no"].ToString(), Text = dr["Member_name"].ToString() });
                }
            }
            mod1.Add(new SelectListItem { Text = "EPF", Value = "EPF" });
            mod1.Add(new SelectListItem { Text = "EPS", Value = "EPS" });
            mod1.Add(new SelectListItem { Text = "ESI", Value = "ESI" });
            mod1.Add(new SelectListItem { Text = "Gratuity", Value = "Gratuity" });
            TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
            TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2;
            model[0].SelectedItems1 = new string[] { "" };
            model[0].SelectedItems2 = new string[] { "" };
            #endregion
            return model;
        }
        [HttpPost]
        public ActionResult nomination(List<Tmodelmain> model, string command, string mid)
        {
            try
            {
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();
                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
                if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                List<SelectListItem> mod2 = (List<SelectListItem>)TempData[MyGuid + "_TList2"];
                TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2;
                if (model[0].SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
                if (command == "New")
                {
                    model = new_nomination(model);
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {

                    var tmodel = model.FirstOrDefault();
                    string currdate = "";
                    DataTable dtstr = new DataTable();
                    dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                    currdate = sgen.server_datetime(userCode);

                    #region dtstr
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        isedit = true;
                        vch_num = model[0].Col16;
                    }
                    else
                    {
                        isedit = false;
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        model[0].Col16 = vch_num;
                    }
                    DataRow dr = dtstr.NewRow();
                    dr["rec_id"] = "0";
                    dr["type"] = model[0].Col12;
                    dr["vch_num"] = vch_num.Trim();
                    dr["vch_date"] = currdate;
                    dr["col5"] = model[0].SelectedItems1.FirstOrDefault(); // nom for 
                    dr["col6"] = model[0].SelectedItems2.FirstOrDefault(); //  nominee
                    dr["col7"] = model[0].Col17; // Nomination%
                    dr["col8"] = (model[0].Chk1 == true) ? "Y" : "N"; //minor
                    dr = getsave(currdate, dr, model, isedit);
                    dtstr.Rows.Add(dr);

                    #endregion
                    bool Result = sgen.Update_data(userCode, dtstr, model[0].Col10.Trim(), tmodel.Col8, isedit);
                    if (Result == true)
                    {
                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col10 = tm.Col10,
                            Col11 = tm.Col11,
                            Col12 = tm.Col12,
                            Col13 = "Save",
                            Col100 = "Save & New",
                            Col121 = "S",
                            Col122 = "<u>S</u>ave",
                            Col123 = "Save & Ne<u>w</u>",
                            Col14 = tm.Col14,
                            Col15 = tm.Col15,
                            Col9 = tm.Col9,
                            TList1 = mod1,
                            TList2 = mod2,
                            SelectedItems1 = new string[] { "" },
                            SelectedItems2 = new string[] { "" },
                            SelectedItems3 = new string[] { "" },
                        });
                        if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                        {
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                        {
                            try
                            {
                                model = new_nomination(model);
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                            }
                            catch (Exception ex) { }
                        }
                    }
                    else
                    {
                        ViewBag.scripCall = "showmsgJS(1, 'Record Not Saved', 2);";
                    }
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region acces card
        public ActionResult card_det()
        {
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            FillMst(MyGuid);
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            model[0].Col9 = "ACCESS CARD DETAILS";
            model[0].Col10 = "enx_tab2";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "CRD";
            return View(model);
        }
        public List<Tmodelmain> new_card_det(List<Tmodelmain> model)
        {
            model = getnew(model);
            var tm = model.FirstOrDefault();
            return model;
        }
        [HttpPost]
        public ActionResult card_det(List<Tmodelmain> model, string command, string mid)
        {
            try
            {
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();
                if (command == "New")
                {
                    model = new_card_det(model);
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {

                    var tmodel = model.FirstOrDefault();
                    string currdate = "";
                    DataTable dtstr = new DataTable();
                    dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                    currdate = sgen.server_datetime(userCode);

                    #region dtstr
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        isedit = true;
                        vch_num = model[0].Col16;
                    }
                    else
                    {
                        isedit = false;
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        model[0].Col16 = vch_num;
                    }
                    DataRow dr = dtstr.NewRow();
                    dr["rec_id"] = "0";
                    dr["type"] = model[0].Col12;
                    dr["vch_num"] = vch_num.Trim();
                    dr["vch_date"] = currdate;
                    dr["col5"] = model[0].Col17; // cardno 
                    dr["date1"] = sgen.Make_date_S(model[0].Col18); // from date
                    dr["date2"] = sgen.Make_date_S(model[0].Col19); // to date
                    dr["col3"] = model[0].Col20; //remark
                    dr = getsave(currdate, dr, model, isedit);
                    dtstr.Rows.Add(dr);

                    #endregion
                    bool Result = sgen.Update_data(userCode, dtstr, model[0].Col10.Trim(), tmodel.Col8, isedit);
                    if (Result == true)
                    {
                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col10 = tm.Col10,
                            Col11 = tm.Col11,
                            Col12 = tm.Col12,
                            Col13 = "Save",
                            Col100 = "Save & New",
                            Col121 = "S",
                            Col122 = "<u>S</u>ave",
                            Col123 = "Save & Ne<u>w</u>",
                            Col14 = tm.Col14,
                            Col15 = tm.Col15,
                            Col9 = tm.Col9,
                        });
                        if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                        {
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                        {
                            try
                            {
                                model = new_card_det(model);
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                            }
                            catch (Exception ex) { }
                        }
                    }
                    else
                    {
                        ViewBag.scripCall = "showmsgJS(1, 'Record Not Saved', 2);";
                    }
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region help desk workflow
        public ActionResult hd_wf()
        {
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            FillMst(MyGuid);
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            List<SelectListItem> mod1 = new List<SelectListItem>();
            List<SelectListItem> mod2 = new List<SelectListItem>();
            List<SelectListItem> mod3 = new List<SelectListItem>();
            model[0].Col9 = "HELPDESK WORKFLOW";
            model[0].Col10 = "enx_tab2";
            model[0].Col11 = " and a.client_id = '" + clientid_mst + "' and a.client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "HWF";
            model[0].TList3 = mod3;
            model[0].SelectedItems3 = new string[] { "" };
            model[0].LTM2 = new List<Tmodelmain>();
            Tmodelmain tmltm2 = new Tmodelmain();
            tmltm2.TList1 = mod1;
            tmltm2.TList2 = mod2;
            tmltm2.SelectedItems1 = new string[] { "" };
            tmltm2.SelectedItems2 = new string[] { "" };
            tmltm2.Col1 = "1";
            model[0].LTM2.Add(tmltm2);
            return View(model);
        }
        public List<Tmodelmain> new_hd_wf(List<Tmodelmain> model)
        {
            model = getnew(model);
            var tm = model.FirstOrDefault();
            #region ddls
            List<SelectListItem> mod3 = new List<SelectListItem>();
            List<SelectListItem> mod1 = new List<SelectListItem>();
            List<SelectListItem> mod2 = new List<SelectListItem>();
            TempData[MyGuid + "_Tlist3"] = model[0].TList3 = mod3 = cmd_Fun.help_type(userCode, unitid_mst);
            model[0].SelectedItems1 = new string[] { "" };

            foreach (var mod in model[0].LTM2)
            {
                if (mod.SelectedItems1 == null) mod.SelectedItems1 = new string[] { "" };
                if (mod.SelectedItems2 == null) mod.SelectedItems2 = new string[] { "" };
                mod.TList1 = mod1 = cmd_Fun.username(userCode);
                TempData[MyGuid + "_Tlist1"] = mod1;
                mod2.Add(new SelectListItem { Text = "Owner", Value = "Owner" });
                mod2.Add(new SelectListItem { Text = "Assignee", Value = "Assignee" });
                mod2.Add(new SelectListItem { Text = "E 1", Value = "E 1" });
                mod2.Add(new SelectListItem { Text = "E 2", Value = "E 2" });
                mod2.Add(new SelectListItem { Text = "E 3", Value = "E 3" });
                mod.TList2 = mod2;
                TempData[MyGuid + "_Tlist2"] = mod2;
            }
            #endregion
            return model;
        }
        [HttpPost]
        public ActionResult hd_wf(List<Tmodelmain> model, string command, string hfrow)
        {
            try
            {
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();
                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_Tlist1"];
                List<SelectListItem> mod2 = (List<SelectListItem>)TempData[MyGuid + "_Tlist2"];
                List<SelectListItem> mod3 = (List<SelectListItem>)TempData[MyGuid + "_Tlist3"];
                TempData[MyGuid + "_Tlist3"] = model[0].TList3 = mod3;
                if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                foreach (var mod in model[0].LTM2)
                {
                    TempData[MyGuid + "_Tlist1"] = mod.TList1 = mod1;
                    if (mod.SelectedItems1 == null) mod.SelectedItems1 = new string[] { "" };
                    TempData[MyGuid + "_Tlist2"] = mod.TList2 = mod2;
                    if (mod.SelectedItems2 == null) mod.SelectedItems2 = new string[] { "" };
                }
                type_desc = "helpdesk workflow";
                if (command == "New")
                {
                    model = new_hd_wf(model);
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                if (command == "Save" || command == "Update")
                {
                    try
                    {
                        var tmodel = model.FirstOrDefault();
                        string currdate = sgen.server_datetime(userCode);
                        if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                        {
                            isedit = true;
                            vch_num = model[0].Col16;
                        }
                        else
                        {
                            isedit = false;
                            mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                            vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                            model[0].Col16 = vch_num;
                        }
                        DataTable dataTable = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                        for (int k = 0; k < model[0].LTM2.Count; k++)
                        {
                            DataRow dr = dataTable.NewRow();
                            dr["vch_num"] = vch_num;
                            dr["type"] = model[0].Col12;
                            dr["vch_date"] = currdate;
                            dr["type_desc"] = type_desc;
                            dr["col5"] = model[0].SelectedItems3.FirstOrDefault();
                            //dr["col6"] = model[0].Col18;
                            dr["COL6"] = model[0].LTM2[k].SelectedItems1.FirstOrDefault(); //user
                            dr["COL7"] = model[0].LTM2[k].SelectedItems2.FirstOrDefault(); //role
                            dr["col12"] = (model[0].LTM2[k].Chk1 == true) ? "Y" : "N"; //imtiation
                            dr["col9"] = (model[0].LTM2[k].Chk2 == true) ? "Y" : "N"; //mail
                            dr["COL8"] = model[0].LTM2[k].Col17;//tat hour
                            //dr["COL9"] = model[0].LTM2[k].Col18;//others
                            dr = getsave(currdate, dr, model, isedit);
                            dataTable.Rows.Add(dr);
                        }
                        bool Result = sgen.Update_data_fast1(userCode, dataTable, model[0].Col10, tmodel.Col8, isedit);
                        if (Result == true)
                        {
                            model = new List<Tmodelmain>();
                            model.Add(new Tmodelmain
                            {
                                Col10 = tm.Col10,
                                Col9 = tm.Col9,
                                Col11 = tm.Col11,
                                Col12 = tm.Col12,
                                Col13 = "Save",
                                Col100 = "Save & New",
                                Col121 = "S",
                                Col122 = "<u>S</u>ave",
                                Col123 = "Save & Ne<u>w</u>",
                                Col14 = tm.Col14,
                                Col15 = tm.Col15,
                                TList3 = mod3,
                                SelectedItems3 = new string[] { "" },
                            });
                            model[0].LTM2 = new List<Tmodelmain>();
                            Tmodelmain tmltm2 = new Tmodelmain();
                            tmltm2.TList1 = mod1;
                            tmltm2.SelectedItems1 = new string[] { "" };
                            tmltm2.TList2 = mod2;
                            tmltm2.SelectedItems2 = new string[] { "" };
                            tmltm2.Col1 = "1";
                            model[0].LTM2.Add(tmltm2);
                            if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                            {
                                ViewBag.vnew = "";
                                ViewBag.vedit = "";
                                ViewBag.vsave = "disabled='disabled'";
                                ViewBag.vsavenew = "disabled='disabled'";
                                ViewBag.vsavenew = "disabled='disabled'";
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                            }
                            else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                            {
                                try
                                {
                                    model = new_hd_wf(model);
                                    ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                                }
                                catch (Exception ex) { }
                            }
                        }
                    }
                    catch (Exception ex) { ViewBag.scripCall = "showmsgJS(1,'" + ex.Message.ToString() + "', 0);"; }
                }
                else if (command == "Add")
                {
                    try
                    {
                        Tmodelmain ntm1 = new Tmodelmain();
                        ntm1.Col1 = (Convert.ToInt32(model[0].LTM2.Max(x => sgen.Make_int(x.Col1))) + 1).ToString();
                        foreach (var mod in model[0].LTM2)
                        {
                            ntm1.TList1 = (List<SelectListItem>)TempData[MyGuid + "_Tlist1"];
                            TempData[MyGuid + "_Tlist1"] = ntm1.TList1;
                            ntm1.TList2 = (List<SelectListItem>)TempData[MyGuid + "_Tlist2"];
                            TempData[MyGuid + "_Tlist2"] = ntm1.TList2;
                        }
                        ntm1.SelectedItems1 = new string[] { "" };
                        ntm1.SelectedItems2 = new string[] { "" };
                        model[0].LTM2.Add(ntm1);
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                    }
                    catch (Exception ex) { ViewBag.scripCall = "showmsgJS(1,'" + ex.Message.ToString() + "',0);"; }
                }
                else if (command == "Remove")
                {
                    if ((model[0].LTM2.Count > 1) && sgen.Make_int(hfrow) > 0) model[0].LTM2.RemoveAt(sgen.Make_int(hfrow));
                    else
                    {

                        ViewBag.scripCall = "showmsgJS(1,'You cannot remove last entry',2)";
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                        return View(model);
                    }
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region FAQ MASTER
        public ActionResult faq_m()
        {
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            FillMst(MyGuid);
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            model[0].Col9 = "FAQ MASTER";
            model[0].Col10 = "enx_tab2";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "FQM";
            List<SelectListItem> md1 = new List<SelectListItem>();
            TempData[MyGuid + "_TList1"] = model[0].TList1 = md1;
            model[0].SelectedItems1 = new string[] { "" };
            return View(model);
        }
        public List<Tmodelmain> new_faq_m(List<Tmodelmain> model)
        {
            model = getnew(model);
            var tm = model.FirstOrDefault();
            #region Dropdwon
            List<SelectListItem> mod1 = new List<SelectListItem>();
            TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.help_type(userCode, unitid_mst);
            model[0].SelectedItems1 = new string[] { "" };
            #endregion
            model[0].Col17 = sgen.server_datetime_local(userCode);

            return model;
        }
        [HttpPost]
        public ActionResult faq_m(List<Tmodelmain> model, string command, string mid)
        {
            try
            {
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();
                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
                if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                if (command == "New")
                {
                    model = new_faq_m(model);
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {

                    var tmodel = model.FirstOrDefault();
                    string currdate = "";
                    DataTable dtstr = new DataTable();
                    dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                    currdate = sgen.server_datetime(userCode);

                    #region dtstr
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        isedit = true;
                        vch_num = model[0].Col16;
                    }
                    else
                    {
                        isedit = false;
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        model[0].Col16 = vch_num;
                    }
                    DataRow dr = dtstr.NewRow();
                    dr["rec_id"] = "0";
                    dr["type"] = model[0].Col12;
                    dr["vch_num"] = vch_num.Trim();
                    dr["vch_date"] = sgen.Make_date_S(model[0].Col17);
                    dr["col5"] = model[0].SelectedItems1.FirstOrDefault();
                    dr["col23"] = model[0].Col20;
                    dr["col24"] = model[0].Col132;
                    dr = getsave(currdate, dr, model, isedit);
                    dtstr.Rows.Add(dr);
                    #endregion
                    bool Result = sgen.Update_data_fast1(userCode, dtstr, model[0].Col10.Trim(), tmodel.Col8, isedit);
                    if (Result == true)
                    {
                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col10 = tm.Col10,
                            Col11 = tm.Col11,
                            Col12 = tm.Col12,
                            Col13 = "Save",
                            Col100 = "Save & New",
                            Col121 = "S",
                            Col122 = "<u>S</u>ave",
                            Col123 = "Save & Ne<u>w</u>",
                            Col14 = tm.Col14,
                            Col15 = tm.Col15,
                            Col9 = tm.Col9,
                            TList1 = mod1,
                            //  TList2 = mod2,
                            SelectedItems1 = new string[] { "" },
                            //  SelectedItems2 = new string[] { "" },
                        });
                        if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                        {
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                        {
                            try
                            {
                                model = new_faq_m(model);
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                            }
                            catch (Exception ex) { }
                        }
                    }
                    else
                    {
                        ViewBag.scripCall = "showmsgJS(1, 'Record Not Saved', 2);";
                    }
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);




        }
        #endregion
        #region FAQ
        public ActionResult faq_h()
        {
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            FillMst(MyGuid);
            List<Tmodelmain> model = new List<Tmodelmain>();
            List<SelectListItem> mod1 = new List<SelectListItem>();
            model = getload(model);
            ViewBag.scripCall = "enableForm();";
            mq = "";
            model[0].SelectedItems1 = new string[] { "" };
            TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.help_type(userCode, unitid_mst);
            return View(model);
        }
        [HttpPost]
        public ActionResult faq_h(List<Tmodelmain> model, string command, string mid)
        {
            try
            {
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();
                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
                if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                if (command == "Search")
                {
                    if (!model[0].SelectedItems1.FirstOrDefault().Equals(""))
                    {
                        mq = "select ug.client_id||ug.client_unit_id||ug.vch_num||to_char(ug.vch_date,'yyyymmdd')||ug.type as fstr," +
                    "ug.vch_num as doc_no,to_char(ug.vch_date, '" + sgen.Getsqldateformat() + "') as doc_date,b.master_name as help_type,ug.col23 as question,ug.col24 as answer from enx_tab2 ug " +
                    "inner join master_setting b on b.master_id=ug.col5 and find_in_set(ug.client_unit_id,b.client_unit_id)=1 and b.type='HTM' " +
                    "where ug.client_unit_id = '" + unitid_mst + "' and ug.type = 'FQM' and ug.col5='" + model[0].SelectedItems1.FirstOrDefault() + "'";
                        DataTable dt = new DataTable();
                        dt = sgen.getdata(userCode, mq);
                        if (dt.Rows.Count > 0)
                        {
                            model = new List<Tmodelmain>();
                            foreach (DataRow dr in dt.Rows)
                            {
                                model.Add(new Tmodelmain
                                {
                                    Col20 = dr["question"].ToString(),
                                    Col132 = dr["answer"].ToString(),
                                    Col9 = "HELPDESK FAQ",
                                    Col10 = "enx_tab2",
                                    Col14 = mid_mst.Trim(),
                                    Col15 = MyGuid.Trim(),
                                    Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'",
                                    Col12 = "HFQ",
                                    TList1 = mod1,
                                    Col17 = tm.Col17,
                                    SelectedItems1 = new string[] { "" },
                                });
                            }
                        }
                    }
                }
                if (command == "SEARCHBYTEXT")
                {
                    if (!model[0].Col17.Equals(""))
                    {
                        mq = "select ug.client_id||ug.client_unit_id||ug.vch_num||to_char(ug.vch_date,'yyyymmdd')||ug.type as fstr," +
                    "ug.vch_num as doc_no,to_char(ug.vch_date, '" + sgen.Getsqldateformat() + "') as doc_date,b.master_name as help_type,ug.col23 as question,ug.col24 as answer from enx_tab2 ug " +
                    "inner join master_setting b on b.master_id=ug.col5 and find_in_set(ug.client_unit_id,b.client_unit_id)=1 and b.type='HTM' " +
                    "where ug.client_unit_id = '" + unitid_mst + "' and ug.type = 'FQM' and ug.col23||' '||ug.col24 like '%" + model[0].Col17.Trim() + "%'";
                        DataTable dt = new DataTable();
                        dt = sgen.getdata(userCode, mq);
                        if (dt.Rows.Count > 0)
                        {
                            model = new List<Tmodelmain>();
                            foreach (DataRow dr in dt.Rows)
                            {
                                model.Add(new Tmodelmain
                                {
                                    Col20 = dr["question"].ToString(),
                                    Col132 = dr["answer"].ToString(),
                                    Col9 = "HELPDESK FAQ",
                                    Col10 = "enx_tab2",
                                    Col14 = mid_mst.Trim(),
                                    Col15 = MyGuid.Trim(),
                                    Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'",
                                    Col12 = "HFQ",
                                    TList1 = mod1,
                                    Col17 = tm.Col17,
                                    SelectedItems1 = new string[] { "" },
                                });
                            }
                        }
                    }
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region faq add
        public ActionResult faq_add()
        {
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            FillMst(MyGuid);
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            model[0].Col9 = "ADD QUERIES";
            model[0].Col10 = "enx_tab2";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "FQR";
            List<SelectListItem> md1 = new List<SelectListItem>();
            TempData[MyGuid + "_TList1"] = model[0].TList1 = md1;
            //  TempData[MyGuid + "_TList2"] = model[0].TList2 = md1;
            model[0].SelectedItems1 = new string[] { "" };
            //  model[0].SelectedItems2 = new string[] { "" };
            return View(model);
        }
        public List<Tmodelmain> new_faq_add(List<Tmodelmain> model)
        {
            model = getnew(model);
            var tm = model.FirstOrDefault();
            #region Dropdwon
            List<SelectListItem> mod1 = new List<SelectListItem>();
            //     List<SelectListItem> mod2 = new List<SelectListItem>();
            #endregion
            #region ddls
            TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.help_type(userCode, unitid_mst);
            //TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2 = cmd_Fun.transportmode(userCode, unitid_mst);
            model[0].SelectedItems1 = new string[] { "" };
            // model[0].SelectedItems2 = new string[] { "" };
            #endregion
            return model;
        }
        [HttpPost]
        public ActionResult faq_add(List<Tmodelmain> model, string command, string mid)
        {
            try
            {
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();
                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
                if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                if (command == "New")
                {
                    model = new_faq_add(model);
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {

                    var tmodel = model.FirstOrDefault();
                    string currdate = "";
                    DataTable dtstr = new DataTable();
                    dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                    currdate = sgen.server_datetime(userCode);

                    #region dtstr
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        isedit = true;
                        vch_num = model[0].Col16;
                    }
                    else
                    {
                        isedit = false;
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        model[0].Col16 = vch_num;
                    }
                    DataRow dr = dtstr.NewRow();
                    dr["rec_id"] = "0";
                    dr["type"] = model[0].Col12;
                    dr["vch_num"] = vch_num.Trim();
                    dr["vch_date"] = sgen.Make_date_S(model[0].Col17);
                    dr["col5"] = model[0].SelectedItems1.FirstOrDefault();
                    dr["col23"] = model[0].Col20;
                    dr["col10"] = "P";
                    dr = getsave(currdate, dr, model, isedit);
                    dtstr.Rows.Add(dr);

                    #endregion
                    bool Result = sgen.Update_data(userCode, dtstr, model[0].Col10.Trim(), tmodel.Col8, isedit);
                    if (Result == true)
                    {
                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col10 = tm.Col10,
                            Col11 = tm.Col11,
                            Col12 = tm.Col12,
                            Col13 = "Save",
                            Col100 = "Save & New",
                            Col121 = "S",
                            Col122 = "<u>S</u>ave",
                            Col123 = "Save & Ne<u>w</u>",
                            Col14 = tm.Col14,
                            Col15 = tm.Col15,
                            Col9 = tm.Col9,
                            TList1 = mod1,
                            //  TList2 = mod2,
                            SelectedItems1 = new string[] { "" },
                            //  SelectedItems2 = new string[] { "" },
                        });
                        if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                        {
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                        {
                            try
                            {
                                model = new_faq_add(model);
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                            }
                            catch (Exception ex) { }
                        }
                    }
                    else
                    {
                        ViewBag.scripCall = "showmsgJS(1, 'Record Not Saved', 2);";
                    }
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        [HttpGet]
        public FileResult exp_pdf(DataTable dt)
        {
            FillMst();
            //model = (TableResultModel)sgen.GetSession(MyGuid, "model");
            string cg_com_name = sgen.GetCookie(MyGuid, "cg_com_name");
            string filename = sgen.GetSession(MyGuid, "filename").ToString();
            MemoryStream stream = sgen.exp_to_pdf(dt, filename);
            //return File(System.Net.Mime.MediaTypeNames.Application.Octet, filename);
            return File(stream.ToArray(), "application/pdf", "Grid.pdf");

        }
        #endregion
        #region add_exp
        public ActionResult add_exp()
        {
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            FillMst(MyGuid);
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            List<SelectListItem> mod1 = new List<SelectListItem>();
            List<SelectListItem> mod2 = new List<SelectListItem>();
            List<SelectListItem> mod3 = new List<SelectListItem>();
            model[0].Col9 = "ADD EXPENSE";
            model[0].Col10 = "enx_tab2";
            model[0].Col11 = " and a.client_id = '" + clientid_mst + "' and a.client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "HWF";
            model[0].TList3 = mod3;
            model[0].SelectedItems3 = new string[] { "" };
            model[0].LTM2 = new List<Tmodelmain>();
            Tmodelmain tmltm2 = new Tmodelmain();
            tmltm2.TList1 = mod1;
            tmltm2.TList2 = mod2;
            tmltm2.SelectedItems1 = new string[] { "" };
            tmltm2.SelectedItems2 = new string[] { "" };
            tmltm2.Col1 = "1";
            model[0].LTM2.Add(tmltm2);
            return View(model);
        }
        public List<Tmodelmain> new_add_exp(List<Tmodelmain> model)
        {
            model = getnew(model);
            var tm = model.FirstOrDefault();
            #region ddls
            List<SelectListItem> mod3 = new List<SelectListItem>();
            List<SelectListItem> mod1 = new List<SelectListItem>();
            List<SelectListItem> mod2 = new List<SelectListItem>();
            TempData[MyGuid + "_Tlist3"] = model[0].TList3 = mod3 = cmd_Fun.help_type(userCode, unitid_mst);
            model[0].SelectedItems1 = new string[] { "" };

            foreach (var mod in model[0].LTM2)
            {
                if (mod.SelectedItems1 == null) mod.SelectedItems1 = new string[] { "" };
                if (mod.SelectedItems2 == null) mod.SelectedItems2 = new string[] { "" };
                mod.TList1 = mod1 = cmd_Fun.username(userCode);
                TempData[MyGuid + "_Tlist1"] = mod1;
                mod2.Add(new SelectListItem { Text = "Owner", Value = "Owner" });
                mod2.Add(new SelectListItem { Text = "Assignee", Value = "Assignee" });
                mod2.Add(new SelectListItem { Text = "E 1", Value = "E 1" });
                mod2.Add(new SelectListItem { Text = "E 2", Value = "E 2" });
                mod2.Add(new SelectListItem { Text = "E 3", Value = "E 3" });
                mod.TList2 = mod2;
                TempData[MyGuid + "_Tlist2"] = mod2;
            }
            #endregion
            return model;
        }
        [HttpPost]
        public ActionResult add_exp(List<Tmodelmain> model, string command, string hfrow)
        {
            try
            {
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();
                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_Tlist1"];
                List<SelectListItem> mod2 = (List<SelectListItem>)TempData[MyGuid + "_Tlist2"];
                List<SelectListItem> mod3 = (List<SelectListItem>)TempData[MyGuid + "_Tlist3"];
                TempData[MyGuid + "_Tlist3"] = model[0].TList3 = mod3;
                if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                foreach (var mod in model[0].LTM2)
                {
                    TempData[MyGuid + "_Tlist1"] = mod.TList1 = mod1;
                    if (mod.SelectedItems1 == null) mod.SelectedItems1 = new string[] { "" };
                    TempData[MyGuid + "_Tlist2"] = mod.TList2 = mod2;
                    if (mod.SelectedItems2 == null) mod.SelectedItems2 = new string[] { "" };
                }
                type_desc = "helpdesk workflow";
                if (command == "New")
                {
                    model = new_hd_wf(model);
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                if (command == "Save" || command == "Update")
                {
                    try
                    {
                        var tmodel = model.FirstOrDefault();
                        string currdate = sgen.server_datetime(userCode);
                        if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                        {
                            isedit = true;
                            vch_num = model[0].Col16;
                        }
                        else
                        {
                            isedit = false;
                            mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                            vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                            model[0].Col16 = vch_num;
                        }
                        DataTable dataTable = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                        for (int k = 0; k < model[0].LTM2.Count; k++)
                        {
                            DataRow dr = dataTable.NewRow();
                            dr["vch_num"] = vch_num;
                            dr["type"] = model[0].Col12;
                            dr["vch_date"] = currdate;
                            dr["type_desc"] = type_desc;
                            dr["col5"] = model[0].SelectedItems3.FirstOrDefault();
                            //dr["col6"] = model[0].Col18;
                            dr["COL6"] = model[0].LTM2[k].SelectedItems1.FirstOrDefault(); //user
                            dr["COL7"] = model[0].LTM2[k].SelectedItems2.FirstOrDefault(); //role
                            dr["col12"] = (model[0].LTM2[k].Chk1 == true) ? "Y" : "N"; //imtiation
                            dr["col9"] = (model[0].LTM2[k].Chk2 == true) ? "Y" : "N"; //mail
                            dr["COL8"] = model[0].LTM2[k].Col17;//tat hour
                            //dr["COL9"] = model[0].LTM2[k].Col18;//others
                            dr = getsave(currdate, dr, model, isedit);
                            dataTable.Rows.Add(dr);
                        }
                        bool Result = sgen.Update_data_fast1(userCode, dataTable, model[0].Col10, tmodel.Col8, isedit);
                        if (Result == true)
                        {
                            model = new List<Tmodelmain>();
                            model.Add(new Tmodelmain
                            {
                                Col10 = tm.Col10,
                                Col9 = tm.Col9,
                                Col11 = tm.Col11,
                                Col12 = tm.Col12,
                                Col13 = "Save",
                                Col100 = "Save & New",
                                Col121 = "S",
                                Col122 = "<u>S</u>ave",
                                Col123 = "Save & Ne<u>w</u>",
                                Col14 = tm.Col14,
                                Col15 = tm.Col15,
                                TList3 = mod3,
                                SelectedItems3 = new string[] { "" },
                            });
                            model[0].LTM2 = new List<Tmodelmain>();
                            Tmodelmain tmltm2 = new Tmodelmain();
                            tmltm2.TList1 = mod1;
                            tmltm2.SelectedItems1 = new string[] { "" };
                            tmltm2.TList2 = mod2;
                            tmltm2.SelectedItems2 = new string[] { "" };
                            tmltm2.Col1 = "1";
                            model[0].LTM2.Add(tmltm2);
                            if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                            {
                                ViewBag.vnew = "";
                                ViewBag.vedit = "";
                                ViewBag.vsave = "disabled='disabled'";
                                ViewBag.vsavenew = "disabled='disabled'";
                                ViewBag.vsavenew = "disabled='disabled'";
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                            }
                            else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                            {
                                try
                                {
                                    model = new_hd_wf(model);
                                    ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                                }
                                catch (Exception ex) { }
                            }
                        }
                    }
                    catch (Exception ex) { ViewBag.scripCall = "showmsgJS(1,'" + ex.Message.ToString() + "', 0);"; }
                }
                else if (command == "Add")
                {
                    try
                    {
                        Tmodelmain ntm1 = new Tmodelmain();
                        ntm1.Col1 = (Convert.ToInt32(model[0].LTM2.Max(x => sgen.Make_int(x.Col1))) + 1).ToString();
                        foreach (var mod in model[0].LTM2)
                        {
                            ntm1.TList1 = (List<SelectListItem>)TempData[MyGuid + "_Tlist1"];
                            TempData[MyGuid + "_Tlist1"] = ntm1.TList1;
                            ntm1.TList2 = (List<SelectListItem>)TempData[MyGuid + "_Tlist2"];
                            TempData[MyGuid + "_Tlist2"] = ntm1.TList2;
                        }
                        ntm1.SelectedItems1 = new string[] { "" };
                        ntm1.SelectedItems2 = new string[] { "" };
                        model[0].LTM2.Add(ntm1);
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                    }
                    catch (Exception ex) { ViewBag.scripCall = "showmsgJS(1,'" + ex.Message.ToString() + "',0);"; }
                }
                else if (command == "Remove")
                {
                    if ((model[0].LTM2.Count > 1) && sgen.Make_int(hfrow) > 0) model[0].LTM2.RemoveAt(sgen.Make_int(hfrow));
                    else
                    {

                        ViewBag.scripCall = "showmsgJS(1,'You cannot remove last entry',2)";
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                        return View(model);
                    }
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region asset write off
        public ActionResult awf()
        {
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            FillMst(MyGuid);
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            model[0].Col9 = "ASSETS WRITE OFF";
            model[0].Col10 = "enx_tab2";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "AWF";
            sgen.SetSession(MyGuid, "menu_id", model[0].Col14);
            if (model[0].Col14 == "42003.4")
            { model[0].Col29 = "User Name"; model[0].Col12 = "AWU"; }
            else { model[0].Col29 = "Employee Name"; model[0].Col12 = "AWF"; }
            List<SelectListItem> md1 = new List<SelectListItem>();
            TempData[MyGuid + "_TList1"] = model[0].TList1 = md1;

            model[0].SelectedItems1 = new string[] { "" };

            return View(model);
        }
        public List<Tmodelmain> new_awf(List<Tmodelmain> model)
        {
            model = getnew(model);
            var tm = model.FirstOrDefault();
            #region Dropdwon
            List<SelectListItem> mod1 = new List<SelectListItem>();
            mq = "select (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.col3 as asset_name" +
                            " from enx_tab2 a where a.client_unit_id = '" + unitid_mst + "' and a.type = 'ASS'";
            DataTable dtd = new DataTable();
            dtd = sgen.getdata(userCode, mq);
            if (dtd.Rows.Count > 0)
            {
                foreach (DataRow dr in dtd.Rows)
                {
                    mod1.Add(new SelectListItem { Text = dr["asset_name"].ToString(), Value = dr["fstr"].ToString() });
                }
            }
            //     List<SelectListItem> mod2 = new List<SelectListItem>();
            TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
            //TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2 = cmd_Fun.transportmode(userCode, unitid_mst);
            model[0].SelectedItems1 = new string[] { "" };
            model[0].Col17 = sgen.server_datetime_local(userCode);

            // model[0].SelectedItems2 = new string[] { "" };
            #endregion
            return model;
        }
        [HttpPost]
        public ActionResult awf(List<Tmodelmain> model, string command, string mid)
        {
            try
            {
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();
                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
                if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                if (command == "New")
                {
                    model = new_awf(model);
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {

                    var tmodel = model.FirstOrDefault();
                    string currdate = "";
                    DataTable dtstr = new DataTable();
                    dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                    currdate = sgen.server_datetime(userCode);

                    #region dtstr
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        isedit = true;
                        vch_num = model[0].Col16;
                    }
                    else
                    {
                        isedit = false;
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        model[0].Col16 = vch_num;
                    }
                    DataRow dr = dtstr.NewRow();
                    dr["rec_id"] = "0";
                    dr["type"] = model[0].Col12;
                    dr["vch_num"] = vch_num.Trim();
                    dr["vch_date"] = sgen.Make_date_S(model[0].Col17);
                    dr["col5"] = model[0].Col28;   //asset
                    dr["col6"] = model[0].Col18;//Quantity
                    dr["col7"] = model[0].Col19;//Value
                    dr["col8"] = model[0].Col20;//Approved By
                    dr["col3"] = model[0].Col21;//remark
                    dr["col9"] = model[0].Col30;//write off from 
                    dr = getsave(currdate, dr, model, isedit);
                    dtstr.Rows.Add(dr);
                    #endregion
                    bool Result = sgen.Update_data_fast1(userCode, dtstr, model[0].Col10.Trim(), tmodel.Col8, isedit);
                    if (Result == true)
                    {
                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col10 = tm.Col10,
                            Col11 = tm.Col11,
                            Col12 = tm.Col12,
                            Col29 = tm.Col29,
                            Col13 = "Save",
                            Col100 = "Save & New",
                            Col121 = "S",
                            Col122 = "<u>S</u>ave",
                            Col123 = "Save & Ne<u>w</u>",
                            Col14 = tm.Col14,
                            Col15 = tm.Col15,
                            Col9 = tm.Col9,
                            TList1 = mod1,
                            //  TList2 = mod2,
                            SelectedItems1 = new string[] { "" },
                            //  SelectedItems2 = new string[] { "" },
                        });
                        if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                        {
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                        {
                            try
                            {
                                model = new_awf(model);
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                            }
                            catch (Exception ex) { }
                        }
                    }
                    else
                    {
                        ViewBag.scripCall = "showmsgJS(1, 'Record Not Saved', 2);";
                    }
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region asset list
        public ActionResult ast_list()
        {
            FillMst();
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            ViewBag.scripCall = "enableForm();";
            model[0].Col10 = "ENX_TAB";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            var tm = model.FirstOrDefault();
            model[0].Col9 = "LIST OF ASSETS";
            mq = "select a.vch_num as doc_no,a.col3 as asset_name,ty.master_name as Category,to_char(a.date1, 'dd/mm/yyy') as purchase_date,a.col11 as purchase_qty,nvl(uf.emp_qty, 0) as qty_with_employee,nvl((a.col11 - uf.emp_qty), 0) as qty_in_stock,a.col8 as original_value from enx_tab2 a inner join master_setting ty on ty.master_id = a.col17 and ty.type = 'ATY' and find_in_set(ty.client_unit_id,'" + unitid_mst + "')= 1 left join(select max(ug.vch_num) vch_num, max(ug.client_unit_id) client_unit_id, sum(ug.col8) emp_qty, ug.col10 from enx_tab2 ug inner join enx_tab2 b on b.vch_num= ug.col10 and b.type= 'ASS' and ug.client_unit_id= b.client_unit_id where ug.client_unit_id = '" + unitid_mst + "' and ug.type = 'AAE' group by ug.col10) uf on uf.col10 = a.vch_num and uf.client_unit_id = a.client_unit_id where a.client_unit_id = '" + unitid_mst + "' and a.type = 'ASS'";
            model[0].Col12 = "LAA";
            sgen.SetSession(MyGuid, "gridq_demogrid", mq);
            ModelState.Clear();
            return View(model);
        }
        [HttpPost]
        public ActionResult ast_list(List<Tmodelmain> model, string command, string mid)
        {
            try
            {
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region exp approve
        public ActionResult exp_app()
        {
            FillMst("");
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            ViewBag.scripCall = "enableForm();";
            List<SelectListItem> mod1 = new List<SelectListItem>();
            model[0].Col9 = "SUBMISSION FOR EXPENSES";
            model[0].Col10 = "enx_tab2";
            model[0].Col11 = " and a.client_id = '" + clientid_mst + "' and a.client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "OSL";
            model[0].TList1 = model[0].TList2 = mod1;
            model[0].SelectedItems1 = new string[] { "" };
            return View(model);
        }
        [HttpPost]
        public ActionResult exp_app(List<Tmodelmain> model, string command, string hfrow, string hftable)
        {
            FillMst(model[0].Col15);
            var tm = model.FirstOrDefault();
            string cond = "";
            if (!role_mst.ToUpper().Equals("OWNER"))
            {
                string rptto = sgen.getstring(userCode, "select emp_id from user_details where type='CPR' and vch_num='" + userid_mst + "' ");

                cond = "and ( emp.rptto='" + rptto + "' or emp.rptto2='" + rptto + "')";
            }

            if (command == "Submit")
            {
                string status = "";
                Boolean isok = true;
                int cnt = 0;
                for (int i = 0; i < model.Count; i++)
                {
                    if (model[i].Col27 == "P")
                    {
                        status = "Pending";
                    }
                    else if (model[i].Col27 == "A")
                    {
                        status = "Approved";
                        cnt++;
                    }
                    else if (model[i].Col27 == "R")
                    {
                        status = "Rejected";
                        cnt++;
                    }
                    string xDate = sgen.server_datetime(userCode);
                    string dt_ft = "YYYY-MM-dd HH24:MI:SS";
                    mq = "update enx_tab2 set col22='" + userid_mst + "', date5= to_date('" + xDate + "','" + dt_ft + "'), col10='" + status + "' where type='OSL' and client_unit_id||vch_num||to_char(vch_date,'yyyymmdd')||type='" + model[i].Col24 + "'";
                    isok = sgen.execute_cmd(userCode, mq);
                }
                if (isok == true)
                {
                    if (cnt > 0) { ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'OD Slip Status Updated Successfully');"; };
                    DataTable dt = new DataTable();

                    mq = "select a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type as fstr,a.vch_num as doc_num,a.col5 as shift_start,a.col6 as shift_end" +
                       ",a.col7 as app_by,a.date1 as od_from,a.date2 as od_to,a.col4 as remark,emp.emp_code as Emp_Code" +
                       ",(emp.FIRST_NAME || ' ' || REPLACE(emp.MIDDLE_NAME, '0', '') || ' ' || REPLACE(emp.LAST_NAME, '0', '')) as Emp_Name" +
                       ",nvl(dg.master_name, '-') as designation,rs.master_name as reason,nvl(dp.master_name, '-') as department , to_char(a.date1,'" + sgen.Getsqldatetimeformat() + "') od_from ," +
                       " to_char(a.date2,'" + sgen.Getsqldatetimeformat() + "') od_to from enx_tab2 a inner join " +
                       "emp_master emp on emp.vch_num = a.col8 and emp.type = 'EMP' and emp.client_unit_id = '" + unitid_mst + "'and emp.emp_status = 'Y' " + cond + "" +
                       " left join master_setting dp on dp.master_id = emp.emp_dept and dp.type = 'MDP' and " +
                       "find_in_set(dp.client_unit_id,'" + unitid_mst + "')= 1 left join master_setting dg on dg.master_id = emp.emp_desig and " +
                       "dg.type = 'MDG' and find_in_set(dg.client_unit_id,'" + unitid_mst + "')= 1 inner join master_setting rs on rs.master_id = a.col9 and " +
                       "rs.type = 'SRM' and find_in_set(rs.client_unit_id,'" + unitid_mst + "')= 1 where a.type = 'OSL' and a.col10='Pending' and a.client_unit_id = '" + unitid_mst + "' " + xprdrange.Replace("vch_DATE", "a.vch_DATE") + "";
                    dt = sgen.getdata(userCode, mq);
                    if (dt.Rows.Count > 0)
                    {
                        model = new List<Tmodelmain>();
                        foreach (DataRow dr in dt.Rows)
                        {
                            model.Add(new Tmodelmain
                            {
                                Col9 = tm.Col9,
                                Col11 = tm.Col11,
                                Col12 = tm.Col12,
                                Col10 = tm.Col10,
                                Col13 = tm.Col13,
                                Col14 = tm.Col14,
                                Col15 = tm.Col15,
                                Col28 = tm.Col28,
                                Col29 = tm.Col29,
                                Col30 = tm.Col30,
                                Col16 = dr["doc_num"].ToString(),
                                Col17 = tm.Col17,
                                Col18 = dr["Emp_Name"].ToString(),
                                Col19 = dr["department"].ToString() + " / " + dr["designation"].ToString(),
                                Col20 = dr["Emp_Code"].ToString(),
                                Col21 = dr["reason"].ToString(),
                                Col22 = dr["remark"].ToString(),
                                Col23 = dr["doc_num"].ToString(),
                                Col24 = dr["fstr"].ToString(),
                                Col25 = dr["od_from"].ToString(),
                                Col26 = dr["od_to"].ToString(),
                                Col27 = "P",
                            });
                        }
                    }
                }

            }
            else if (command == "Pending")
            {
                DataTable dt = new DataTable();

                mq = "select a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type as fstr,a.vch_num as doc_num,a.col5 as shift_start,a.col6 as shift_end" +
                      ",a.col7 as app_by,a.date1 as od_from,a.date2 as od_to,a.col4 as remark,emp.emp_code as Emp_Code" +
                      ",(emp.FIRST_NAME || ' ' || REPLACE(emp.MIDDLE_NAME, '0', '') || ' ' || REPLACE(emp.LAST_NAME, '0', '')) as Emp_Name" +
                      ",nvl(dg.master_name, '-') as designation,rs.master_name as reason,nvl(dp.master_name, '-') as department , to_char(a.date1,'" + sgen.Getsqldatetimeformat() + "') od_from ," +
                       " to_char(a.date2,'" + sgen.Getsqldatetimeformat() + "') od_to  from enx_tab2 a inner join " +
                      "emp_master emp on emp.vch_num = a.col8 and emp.type = 'EMP' and emp.client_unit_id = '" + unitid_mst + "'and emp.emp_status = 'Y' " + cond + "" +
                      " left join master_setting dp on dp.master_id = emp.emp_dept and dp.type = 'MDP' and " +
                      "find_in_set(dp.client_unit_id,'" + unitid_mst + "')= 1 left join master_setting dg on dg.master_id = emp.emp_desig and " +
                      "dg.type = 'MDG' and find_in_set(dg.client_unit_id,'" + unitid_mst + "')= 1 inner join master_setting rs on rs.master_id = a.col9 and " +
                      "rs.type = 'SRM' and find_in_set(rs.client_unit_id,'" + unitid_mst + "')= 1 where a.type = 'OSL' and a.col10='Pending'  and a.client_unit_id = '" + unitid_mst + "' " + xprdrange.Replace("vch_DATE", "a.vch_DATE") + "";

                dt = sgen.getdata(userCode, mq);
                if (dt.Rows.Count > 0)
                {
                    model = new List<Tmodelmain>();
                    foreach (DataRow dr in dt.Rows)
                    {
                        model.Add(new Tmodelmain
                        {
                            Col9 = tm.Col9,
                            Col11 = tm.Col11,
                            Col12 = tm.Col12,
                            Col10 = tm.Col10,
                            Col13 = tm.Col13,
                            Col14 = tm.Col14,
                            Col15 = tm.Col15,
                            Col28 = tm.Col28,
                            Col29 = tm.Col29,
                            Col30 = tm.Col30,
                            Col16 = dr["doc_num"].ToString(),
                            Col17 = tm.Col17,
                            Col18 = dr["Emp_Name"].ToString(),
                            Col19 = dr["department"].ToString() + " / " + dr["designation"].ToString(),
                            Col20 = dr["Emp_Code"].ToString(),
                            Col21 = dr["reason"].ToString(),
                            Col22 = dr["remark"].ToString(),
                            Col23 = dr["doc_num"].ToString(),
                            Col24 = dr["fstr"].ToString(),
                            Col25 = dr["od_from"].ToString(),
                            Col26 = dr["od_to"].ToString(),
                            Col27 = "P",
                        });
                    }
                }
            }
            else if (command == "Cancel")
            {
                return CancelFun(model);
            }
            else if (command == "Callback")
            {
                model = StartCallback(model);
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region bulk_exp
        public ActionResult bulk_exp()
        {
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            FillMst(MyGuid);
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            model[0].Col9 = "EXPENSE SUMMARY IMPORT";
            model[0].Col10 = "enx_tab2";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            //model[0].Col12 = "RCC";
            List<SelectListItem> md1 = new List<SelectListItem>();
            TempData[MyGuid + "_TList1"] = model[0].TList1 = md1;
            //  TempData[MyGuid + "_TList2"] = model[0].TList2 = md1;
            model[0].SelectedItems1 = new string[] { "" };
            //  model[0].SelectedItems2 = new string[] { "" };
            return View(model);
        }
        [HttpPost]
        public ActionResult bulk_exp(List<Tmodelmain> model, string command, HttpPostedFileBase upd1)
        {
            try
            {
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();
                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
                if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                if (command == "New")
                {
                    model = getnew(model);
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {

                    var tmodel = model.FirstOrDefault();
                    string currdate = "";
                    DataTable dtstr = new DataTable();
                    dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                    currdate = sgen.server_datetime(userCode);

                    #region dtstr
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        isedit = true;
                        vch_num = model[0].Col16;
                    }
                    else
                    {
                        isedit = false;
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        model[0].Col16 = vch_num;
                    }
                    DataRow dr = dtstr.NewRow();
                    dr["rec_id"] = "0";
                    dr["type"] = model[0].Col12;
                    dr["vch_num"] = vch_num.Trim();
                    dr["vch_date"] = currdate;
                    dr["col3"] = model[0].Col17; // RAte
                    dr["col6"] = string.Join(",", model[0].SelectedItems1);   //Desig
                                                                              // dr["col7"] = model[0].SelectedItems2.FirstOrDefault();   //mode
                    dr = getsave(currdate, dr, model, isedit);
                    dtstr.Rows.Add(dr);

                    #endregion
                    bool Result = sgen.Update_data(userCode, dtstr, model[0].Col10.Trim(), tmodel.Col8, isedit);
                    if (Result == true)
                    {
                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col10 = tm.Col10,
                            Col11 = tm.Col11,
                            Col12 = tm.Col12,
                            Col13 = "Save",
                            Col100 = "Save & New",
                            Col121 = "S",
                            Col122 = "<u>S</u>ave",
                            Col123 = "Save & Ne<u>w</u>",
                            Col14 = tm.Col14,
                            Col15 = tm.Col15,
                            Col9 = tm.Col9,
                            TList1 = mod1,
                            //  TList2 = mod2,
                            SelectedItems1 = new string[] { "" },
                            //  SelectedItems2 = new string[] { "" },
                        });
                        if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                        {
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                        {
                            try
                            {
                                model = new_rcard(model);
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                            }
                            catch (Exception ex) { }
                        }
                    }
                    else
                    {
                        ViewBag.scripCall = "showmsgJS(1, 'Record Not Saved', 2);";
                    }
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);




        }
        [HttpGet]
        public FileResult exptemp(List<Tmodelmain> model, string Myguid = "")
        {
            FillMst(Myguid);
            model = (List<Tmodelmain>)sgen.GetSession(Myguid, "model");
            DataTable dtl = new DataTable();
            mq = "select expense_date as Expense_Date,place_from as Place_From,place_to as Place_To,dep_time as Departure_Time," +
                           "arr_time as Arrival_Time,distance as Distance,transport_mode as Mode_Of_Transport,noe as Nature_Of_Expense,amount as Amount," +
                           "billdate as Bill_Date,billno as Bill_No,vendorname as Vendor_Name from expense_detail where 1=2";

            dtl = sgen.getdata(userCode, mq);
            string cg_com_name = sgen.GetCookie(MyGuid, "cg_com_name");
            Byte[] fileBytes = sgen.Exp_to_csv_new(dtl, "exptemp", cg_com_name);
            return File(fileBytes, System.Net.Mime.MediaTypeNames.Application.Octet, "exptemp");
        }
        #endregion
        #region my profile
        public ActionResult my_prf2()
        {
            FillMst();
            chkRef();
            ViewBag.vnew = "";
            ViewBag.vedit = "";
            //ViewBag.vsave = "disabled='disabled'";
            ViewBag.vsave = "";
            //ViewBag.scripCall = "disableForm();";
            List<Tmodelmain> model = new List<Tmodelmain>();
            Tmodelmain tm1 = new Tmodelmain();
            mid_mst = EncryptDecrypt.Decrypt(Request.QueryString["mid"]);
            tm1.Col9 = "MY PROFILE";
            tm1.Col10 = "emp_master";
            tm1.Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            tm1.Col12 = "EMP";
            tm1.Col14 = mid_mst.Trim();
            tm1.Col15 = MyGuid.Trim();
            model.Add(tm1);
            sgen.SetSession(MyGuid, "SSEEKVAL", cond);
            model = CallbackFun("DETAIL", "Y", "my_prf2", "Hr", model);
            ModelState.Clear();
            return View(model);
        }
        [HttpPost]
        public ActionResult my_prf2(List<Tmodelmain> model, string command)
        {
            FillMst(model[0].Col15);
            //DataTable dtm = sgen.settable(hftable);
            //model[0].dt1 = dtm;
            var tm = model.FirstOrDefault();
            if (command == "Cancel")
            {
                return CancelFun(model);
            }
            else if (command == "Callback")
            {
                model = StartCallback(model);
            }
            else if (command == "Save" || command == "Update")
            {
                try
                {
                    if (model[0].Col37 != "" && model[0].Col37 != null)
                    {
                        var res = sgen.execute_cmd(userCode, "UPDATE emp_master SET emp_Address = '" + model[0].Col37 + "' WHERE " +
                            " emp_code='" + model[0].Col17 + "' and contact_no = '" + model[0].Col27 + "' and email_id = '" + model[0].Col26 + "' and " + model[0].Col8 + "");
                        if (res) { ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Updated Successfully');"; }
                        else { ViewBag.scripCall = "showmsgJS(1, 'Something Went Wrong, Data Not Saved', 0);"; }
                    }
                }
                catch (Exception ex) { ViewBag.scripCall = "showmsgJS(1,'" + ex.Message.ToString() + "', 0);"; }
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region pur_rpt
        public ActionResult hr_report()
        {
            FillMst();
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            model[0].Col10 = "blahblah";
            model[0].Col9 = "ASSET REPORTS";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col13 = "Save";
            model[0].Col100 = "Save & New";
            model[0].Col14 = mid_mst.Trim();
            model[0].Col15 = MyGuid.Trim();

            sgen.SetSession(MyGuid, "menu_id", model[0].Col14);
            return View(model);
        }
        [HttpPost]
        public ActionResult hr_report(List<Tmodelmain> model, string command)
        {
            try
            {
                string fdt = "", tdt = "";
                FillMst(model[0].Col15);

                string title = "";
                string cmd = "";
                if (command == "Callback")
                {
                    model = StartCallback(model);
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region query list
        public ActionResult list_ques()
        {
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            FillMst(MyGuid);
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            model[0].Col9 = "LIST OF PENDING QUERIES";
            model[0].Col10 = "enx_tab2";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "LPQ";
            ViewBag.scripCall = "enableForm();";
            List<SelectListItem> mod1 = new List<SelectListItem>();
            model[0].SelectedItems1 = new string[] { "" };
            TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.help_type(userCode, unitid_mst);
            mq = "";
            sgen.SetSession(MyGuid, "gridq_demogrid", "");
            return View(model);
        }
        [HttpPost]
        public ActionResult list_ques(List<Tmodelmain> model, string command, string mid)
        {
            try
            {
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();
                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
                if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                if (command == "New")
                {
                    model = new_rcard(model);
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command == "Search")
                {
                    if (model[0].SelectedItems1.FirstOrDefault().ToString().Equals(""))
                    {
                        ViewBag.Scripcall = "sgen.showmsg(1, 'Please Select Help Category', 0);"; return View(model);
                    }
                    mq = "select ug.client_id||ug.client_unit_id||ug.vch_num||to_char(ug.vch_date,'yyyymmdd')||ug.type as fstr," +
                    "ug.vch_num as doc_no,to_char(ug.vch_date, '" + sgen.Getsqldateformat() + "') as doc_date,b.master_name as help_type,ug.col23 as query from enx_tab2 ug " +
                    "inner join master_setting b on b.master_id=ug.col5 and find_in_set(ug.client_unit_id,b.client_unit_id)=1 and b.type='HTM' " +
                    "where ug.client_unit_id = '" + unitid_mst + "' and ug.type = 'FQR' and b.master_id='" + model[0].SelectedItems1.FirstOrDefault() + "' and ug.col10='P'";

                    sgen.SetSession(MyGuid, "gridq_demogrid", mq);
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region faq_details
        public ActionResult faq_details()
        {
            MyGuid = EncryptDecrypt.Decrypt(HttpUtility.ParseQueryString(Request.UrlReferrer.Query)["m_id"]);
            FillMst(MyGuid);
            List<Tmodelmain> model = new List<Tmodelmain>();
            List<SelectListItem> mod1 = new List<SelectListItem>();
            model = getload(model);
            model[0].Col9 = "CLOSE QUERY";
            ViewBag.scripCall = "enableForm();";
            string fstr = "";
            if (Request.QueryString["fstr"] != null)
            {
                fstr = Request.QueryString["fstr"].ToString();
            }
            model[0].Col20 = fstr;
            if (fstr != null && fstr != "")
            {
                mq = "select ug.client_id||ug.client_unit_id||ug.vch_num||to_char(ug.vch_date,'yyyymmdd')||ug.type as fstr," +
                 "ug.vch_num as doc_no,to_char(ug.vch_date, '" + sgen.Getsqldateformat() + "') as doc_date,b.master_name as help_type,ug.col23 as query from enx_tab2 ug " +
                 "inner join master_setting b on b.master_id=ug.col5 and find_in_set(ug.client_unit_id,b.client_unit_id)=1 and b.type='HTM' " +
                 "where ug.client_id||ug.client_unit_id||ug.vch_num||to_char(ug.vch_date,'yyyymmdd')||ug.type = '" + model[0].Col20 + "'";
                DataTable dt = new DataTable();
                dt = sgen.getdata(userCode, mq);
                if (dt.Rows.Count > 0)
                {
                    model[0].Col16 = dt.Rows[0]["doc_no"].ToString();
                    model[0].Col17 = dt.Rows[0]["help_type"].ToString();
                    model[0].Col18 = dt.Rows[0]["query"].ToString();
                    ViewBag.vsave = "";
                }
            }
            return View(model);
        }
        [HttpPost]
        public ActionResult faq_details(List<Tmodelmain> model, string command, string mid)
        {
            try
            {
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();
                //List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                //TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
                //if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Save")
                {
                    string val = "";
                    if (model[0].Chk1 == true) { val = "C"; } else { val = "P"; }
                    sgen.execute_cmd(userCode, "update enx_tab2 set col10 = '" + val + "' where client_id||client_unit_id||vch_num||to_char(vch_date,'yyyymmdd')||type = '" + model[0].Col20 + "'");

                    ViewBag.vsave = "disabled='disabled'";
                    ViewBag.scripCall = "mytoast('success', 'toast-top-right', 'Query Closed Successfully');disableForm();";
                    model = new List<Tmodelmain>();
                    model.Add(new Tmodelmain
                    {
                        Col10 = tm.Col10,
                        Col11 = tm.Col11,
                        Col12 = tm.Col12,
                        //Col13 = "Save",
                        Col14 = tm.Col14,
                        Col15 = tm.Col15,
                        Col9 = tm.Col9,
                        Chk1 = false,
                        //TList1 = mod1,
                        //SelectedItems1 = new string[] { "" },

                    });
                    return RedirectToAction("list_ques", "hall", new { m_id = EncryptDecrypt.Encrypt(model[0].Col15), mid = EncryptDecrypt.Encrypt("8003.6") });
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region Service master
        public ActionResult serc_master()
        {
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            FillMst(MyGuid);
            var smst = Request.QueryString["smst"];
            if (smst == "") smst = "0";
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            model[0].Col9 = "SERVICE MASTER";
            model[0].Col10 = "enx_tab2";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "SMT";
            List<SelectListItem> md1 = new List<SelectListItem>();
            model[0].TList1 = md1;
            model[0].TList3 = md1;
            model[0].TList4 = md1;
            model[0].Col101 = smst;
            model[0].SelectedItems1 = new string[] { "" };
            model[0].SelectedItems3 = new string[] { "" };
            model[0].SelectedItems4 = new string[] { "" };
            return View(model);
        }
        public List<Tmodelmain> new_serc_master(List<Tmodelmain> model)
        {
            model = getnew(model);
            var tm = model.FirstOrDefault();
            #region Dropdwon
            List<SelectListItem> mod1 = new List<SelectListItem>();
            List<SelectListItem> mod3 = new List<SelectListItem>();
            List<SelectListItem> mod4 = new List<SelectListItem>();
            mq = "select sg.icode||to_char(sg.vch_date,'yyyymmdd')||sg.type as fstr,(case when substr(sg.icode,1,2)<>'99' then substr(sg.icode,1,1) else substr(sg.icode,1,2) end) Main_Grp_id," +
                            "substr(sg.icode,1,3) Item_grp_id,gp.master_name||'-'||sg.iname Item_Grp,sg.icode Item_sgrp_id" +
                            " from item sg " +
                            "inner join master_setting gp on gp.master_id=substr(sg.icode,1,3) and gp.type='KIG' and find_in_set(gp.client_unit_id,'" + unitid_mst + "')=1 " +
                            "where sg.type='SG' and find_in_set(sg.client_unit_id,'" + unitid_mst + "')=1";
            DataTable dt = new DataTable();
            dt = sgen.getdata(userCode, mq);
            if (dt.Rows.Count > 0)
            {
                foreach (DataRow dr in dt.Rows)
                {
                    mod1.Add(new SelectListItem { Text = dr["Item_Grp"].ToString(), Value = dr["Item_sgrp_id"].ToString() });
                }
            }
            TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
            TempData[MyGuid + "_TList3"] = model[0].TList3 = mod3 = cmd_Fun.unitmeas(userCode, unitid_mst);
            TempData[MyGuid + "_TList4"] = model[0].TList4 = mod4 = cmd_Fun.hsn(userCode, unitid_mst);
            //TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2 = cmd_Fun.transportmode(userCode, unitid_mst);
            model[0].SelectedItems1 = new string[] { "" };
            model[0].SelectedItems3 = new string[] { "" };
            model[0].SelectedItems4 = new string[] { "" };
            // model[0].SelectedItems2 = new string[] { "" };
            #endregion
            return model;
        }
        [HttpPost]
        public ActionResult serc_master(List<Tmodelmain> model, string command, string mid)
        {
            try
            {
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();
                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
                if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                List<SelectListItem> mod3 = (List<SelectListItem>)TempData[MyGuid + "_TList3"];
                TempData[MyGuid + "_TList3"] = model[0].TList3 = mod3;
                if (model[0].SelectedItems3 == null) model[0].SelectedItems3 = new string[] { "" };
                List<SelectListItem> mod4 = (List<SelectListItem>)TempData[MyGuid + "_TList4"];
                TempData[MyGuid + "_TList4"] = model[0].TList4 = mod4;
                if (model[0].SelectedItems4 == null) model[0].SelectedItems4 = new string[] { "" };
                if (command == "New")
                {
                    model = new_serc_master(model);
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {

                    var tmodel = model.FirstOrDefault();
                    string currdate = "";
                    DataTable dtstr = new DataTable();
                    dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                    currdate = sgen.server_datetime(userCode);

                    #region dtstr
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        isedit = true;
                        vch_num = model[0].Col16;
                    }
                    else
                    {
                        isedit = false;
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        model[0].Col16 = vch_num;
                    }
                    DataRow dr = dtstr.NewRow();
                    dr["rec_id"] = "0";
                    dr["type"] = model[0].Col12;
                    dr["vch_num"] = vch_num.Trim();
                    dr["vch_date"] = currdate;
                    dr["col3"] = model[0].Col17; //service name
                    //dr["col2"] = model[0].Col18; //sub cat name
                    //dr["col5"] = model[0].Col19; //sub cat id
                    dr["col4"] = model[0].Col20; //description
                    dr["col6"] = model[0].SelectedItems1.FirstOrDefault();  //main catg
                    dr["col7"] = model[0].SelectedItems3.FirstOrDefault();  //uom
                    dr["col8"] = model[0].SelectedItems4.FirstOrDefault();  //hsn
                    dr = getsave(currdate, dr, model, isedit);
                    dtstr.Rows.Add(dr);
                    #endregion
                    bool Result = sgen.Update_data(userCode, dtstr, model[0].Col10.Trim(), tmodel.Col8, isedit);
                    if (Result == true)
                    {
                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col10 = tm.Col10,
                            Col11 = tm.Col11,
                            Col12 = tm.Col12,
                            Col13 = "Save",
                            Col100 = "Save & New",
                            Col121 = "S",
                            Col122 = "<u>S</u>ave",
                            Col123 = "Save & Ne<u>w</u>",
                            Col14 = tm.Col14,
                            Col15 = tm.Col15,
                            Col9 = tm.Col9,
                            TList1 = mod1,
                            Col101 = tm.Col101,
                            Col102 = "saved",
                            //  TList2 = mod2,
                            SelectedItems1 = new string[] { "" },
                            //  SelectedItems2 = new string[] { "" },
                        });
                        if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                        {
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                        {
                            try
                            {
                                model = new_serc_master(model);
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                            }
                            catch (Exception ex) { }
                        }
                        if (model[0].Col101 != null)
                        {
                            if (model[0].Col101.Trim().Equals("0"))
                            {
                                string date = sgen.SaveDate_dt(currdate, false).ToString("yyyyMMdd");
                                string url = clientid_mst + unitid_mst + vch_num + date + model[0].Col12;
                                sgen.SetSession(MyGuid, "btnval", "ITEM");
                                sgen.SetSession(MyGuid, "SSEEKVAL", url);
                            }
                        }
                    }
                    else
                    {
                        ViewBag.scripCall = "showmsgJS(1, 'Record Not Saved', 2);";
                    }
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region service invoice
        public ActionResult srv_inv()
        {
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            FillMst(MyGuid);
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            List<SelectListItem> mod1 = new List<SelectListItem>();
            List<SelectListItem> mod2 = new List<SelectListItem>();
            List<SelectListItem> mod3 = new List<SelectListItem>();
            List<SelectListItem> mod5 = new List<SelectListItem>();
            model[0].Col9 = "SERVICE INVOICE";
            model[0].Col10 = "itransaction";
            model[0].Col12 = "48";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].TList1 = mod1;
            model[0].SelectedItems1 = new string[] { "" };
            model[0].Col18 = sgen.seekval(userCode, "select unit_gstin_no from company_unit_profile where cup_id='" + unitid_mst + "'", "unit_gstin_no");
            DataTable dt = sgen.getdata(userCode, "select '' ADD_REMOVE,'1' as  SNo ,'-' as SERVICE_CODE,'-' as SERVICE_NAME,'-'  SAC_Code,'-' as UOM,'0' as TAXRATE,'0' as QUANTITY,'0' as RATE," +
"'-' DISC_TYPE,'0' as DISC_RATE,'0' SAMOUNT,'0' TAXAMOUNT,'0' DISCAMOUNT,'0' LINEAMOUNT,'-' as Remark from dual");
            model[0].dt1 = dt;
            sgen.SetSession(MyGuid, "SIV_DT", dt.Copy());
            if (Request.QueryString["fstr"] != null)
            {
                string fstr = "";
                if (Request.QueryString["fstr"].StartsWith("INVOICE"))
                {
                    fstr = EncryptDecrypt.Decrypt(Request.QueryString["fstr"].ToString().Replace("INVOICE", "").Trim());
                    sgen.SetSession(MyGuid, "SSEEKVAL", fstr);
                    CallbackFun("INVOICE", "N", "srv_inv", "hall", model);
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                    ViewBag.scripCall = "enableForm();";
                }
                else if (Request.QueryString["fstr"].StartsWith("EDIT"))
                {
                    fstr = EncryptDecrypt.Decrypt(Request.QueryString["fstr"].ToString().Replace("EDIT", "").Trim());
                    sgen.SetSession(MyGuid, "SSEEKVAL", fstr);
                    CallbackFun("EDIT", "N", "srv_inv", "hall", model);
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                    ViewBag.scripCall = "enableForm();";
                }
                else if (Request.QueryString["fstr"].StartsWith("VIEW"))
                {
                    fstr = EncryptDecrypt.Decrypt(Request.QueryString["fstr"].ToString().Replace("VIEW", "").Trim());
                    sgen.SetSession(MyGuid, "SSEEKVAL", fstr);
                    CallbackFun("VIEW", "N", "srv_inv", "hall", model);
                    ViewBag.vnew = "";
                    ViewBag.vedit = "";
                    ViewBag.vsave = "disabled='disabled";
                    ViewBag.vsavenew = "disabled='disabled";
                    ViewBag.scripCall = "disableForm();";
                }
            }
            ModelState.Clear();
            return View(model);
        }
        public List<Tmodelmain> new_srv_inv(List<Tmodelmain> model)
        {
            model = getnew(model);
            var tm = model.FirstOrDefault();
            model[0].Col48 = sgen.server_datetime_local(userCode);
            #region Dropdwon
            List<SelectListItem> mod1 = new List<SelectListItem>();
            List<SelectListItem> mod3 = new List<SelectListItem>();
            List<SelectListItem> mod4 = new List<SelectListItem>();
            TempData[MyGuid + "_TLList1"] = model[0].TList1 = mod1 = cmd_Fun.payterm2(userCode, unitid_mst);
            model[0].SelectedItems1 = new string[] { "" };
            #endregion
            return model;
        }
        [HttpPost]
        public ActionResult srv_inv(List<Tmodelmain> model, string command, string hfrow, string hftable, HttpPostedFileBase upd1)
        {
            try
            {
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();
                DataTable dtm = sgen.settable(hftable);
                model[0].dt1 = dtm;
                string url = "";
                #region ddl          
                List<SelectListItem> mod1 = new List<SelectListItem>();
                List<SelectListItem> mod2 = new List<SelectListItem>();
                List<SelectListItem> mod3 = new List<SelectListItem>();
                TempData[MyGuid + "_TLList1"] = model[0].TList1 = (List<SelectListItem>)TempData[MyGuid + "_TLList1"];
                if (tm.SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                #endregion
                if (command == "New")
                {
                    model = new_srv_inv(model);
                    string sameserial = sgen.seekval(userCode, "select param1 from controls where type='CTL' and m_module3='-' and id='000018'", "param1");
                    if (sameserial.Trim().Equals("Y"))
                    {
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where substr(trim(type),1,1)='4'" + model[0].Col11.Trim() + "";
                    }
                    else
                    {
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                    }
                    vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                    model[0].Col16 = vch_num;
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "PAY")
                {
                    if (tm.SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                    if (model[0].SelectedItems1.FirstOrDefault() != "" && model[0].Col48 != "")
                    {
                        string val = "";
                        string show1;
                        val = sgen.seekval(userCode, "select MALERATIO as no_of_days from master_setting where type = 'PT2' and client_unit_id = '" + unitid_mst + "' and master_id='" + model[0].SelectedItems1.FirstOrDefault() + "'", "no_of_days");
                        show1 = model[0].Col48;
                        var ACDT = sgen.Make_date(model[0].Col48);
                        model[0].Col28 = ACDT.AddDays(sgen.Make_int(val)).ToString(sgen.Getdateformat(), CultureInfo.InvariantCulture);
                    }
                    else
                    {
                        model[0].Col28 = model[0].Col48;
                    }
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsavenew = "";
                    ViewBag.vsave = "";
                }
                else if (command == "Callback")
                {
                    if (sgen.GetSession(MyGuid, "sivdelrno") != null) btnval = "CHRGDEL";
                    else if (sgen.GetSession(MyGuid, "btnval") != null) btnval = sgen.GetSession(MyGuid, "btnval").ToString();
                    model = CallbackFun(btnval, "N", actionName, controllerName, model);
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                    if (btnval == "PRINT" || btnval == "SEND" || btnval == "PRINTDRFT")
                    {
                        ViewBag.vnew = "";
                        ViewBag.vedit = "";
                        ViewBag.vsave = "disabled='disabled'";
                        ViewBag.vsavenew = "disabled='disabled'";
                    }
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New" || command == "Draft")
                {
                    try
                    {
                        if (model[0].dt1.Rows[0]["SERVICE_CODE"].ToString().Trim().Equals("-"))
                        {
                            ViewBag.scripCall += "showmsgJS(1,'Please Select SERVICE in grid-1', 2);";
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            return View(model);
                        }
                        Satransaction sat1 = new Satransaction(userCode, MyGuid);
                        string currdate = sgen.server_datetime(userCode);
                        if (command.Trim().Equals("Draft"))
                        {
                            model[0].Col10 = "itransactionc";//draft invoice
                        }
                        if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                        {
                            isedit = true;
                            vch_num = model[0].Col16;
                        }
                        else
                        {
                            isedit = false;
                            string sameserial = sgen.seekval(userCode, "select param1 from controls where type='CTL' and m_module3='-' and id='000018'", "param1");
                            if (sameserial.Trim().Equals("Y"))
                            {
                                mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where substr(trim(type),1,1)='4'" + model[0].Col11.Trim() + "";
                            }
                            else
                            {
                                mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                            }
                            vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        }
                        bool Result = false;
                        DataTable dtbtch = cmd_Fun.GetStructure(userCode, "btchtrans");
                        DataTable dataTable = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                        #region DTSTR
                        for (int i = 0; i < model[0].dt1.Rows.Count; i++)
                        {
                            DataRow dr = dataTable.NewRow();
                            dr["rec_id"] = "0";
                            dr["type"] = model[0].Col12;
                            dr["vch_num"] = vch_num.Trim();
                            dr["vch_date"] = sgen.Make_date_S(model[0].Col48);
                            dr["podate"] = sgen.Make_date_S(model[0].Col28);
                            dr["acode"] = model[0].Col49;
                            dr["pono"] = model[0].Col25;
                            dr["icode"] = model[0].dt1.Rows[i]["SERVICE_CODE"].ToString(); //SERCODE
                            dr["iname"] = model[0].dt1.Rows[i]["SERVICE_NAME"].ToString();  //SER_NAME
                            dr["hsno"] = model[0].dt1.Rows[i]["SAC_Code"].ToString();
                            dr["uom"] = model[0].dt1.Rows[i]["UOM"].ToString();
                            dr["taxrate"] = model[0].dt1.Rows[i]["TAXRATE"].ToString();
                            dr["ORDQTY"] = model[0].dt1.Rows[i]["QUANTITY"].ToString();//QUANTITY
                            dr["irate"] = model[0].dt1.Rows[i]["RATE"].ToString();
                            dr["disctype"] = model[0].dt1.Rows[i]["DISC_TYPE"].ToString();
                            dr["discrate"] = model[0].dt1.Rows[i]["DISC_RATE"].ToString();
                            dr["iamount"] = model[0].dt1.Rows[i]["SAMOUNT"].ToString();
                            dr["taxamt"] = model[0].dt1.Rows[i]["TAXAMOUNT"].ToString();
                            dr["discamt"] = model[0].dt1.Rows[i]["DISCAMOUNT"].ToString();
                            dr["lineamount"] = model[0].dt1.Rows[i]["LINEAMOUNT"].ToString();
                            dr["iremark"] = model[0].dt1.Rows[i]["Remark"].ToString();
                            dr["gtaxamt"] = model[0].Col62; //net amount
                            dr["pay_term"] = model[0].SelectedItems1.FirstOrDefault();
                            if (model[0].Col31 == "") model[0].Col31 = "-";
                            if (model[0].Col32 == "") model[0].Col32 = "-";
                            dr["totremark"] = model[0].Col31;
                            dr["cond"] = model[0].Col32;
                            dr["basicamt"] = model[0].Col33;
                            dr["igst"] = model[0].Col34;
                            dr["cgst"] = model[0].Col35;
                            dr["sgst"] = model[0].Col36;
                            dr["ginstlchrg"] = model[0].Col37;
                            dr["gserchrg"] = model[0].Col38;
                            dr["gamc"] = model[0].Col39;
                            dr["gloadchrg"] = model[0].Col40;
                            dr["req_by"] = model[0].Col23;
                            dr = getsave(currdate, dr, model, isedit);
                            dataTable.Rows.Add(dr);
                        }
                        #endregion
                        Result = sgen.Update_data(userCode, dataTable, model[0].Col10.Trim(), model[0].Col8, isedit);
                        if (Result == true)
                        {
                            DataTable dten = cmd_Fun.GetStructure(userCode, "enx_tab");
                            if (model[0].LTM1 != null && model[0].LTM1.Count > 0)
                            {
                                bool res = false;
                                #region dr
                                for (int k = 0; k < model[0].LTM1.Count; k++)
                                {
                                    DataRow dr = dten.NewRow();
                                    dr["type"] = model[0].Col12;
                                    dr["vch_num"] = vch_num.Trim();
                                    dr["vch_date"] = sgen.Savedate(model[0].Col48, true);
                                    //dt====
                                    dr["r_no"] = model[0].LTM1[k].Col14;
                                    dr["col1"] = model[0].LTM1[k].Col15;//chrgid
                                    dr["col2"] = model[0].LTM1[k].Col16;//chrgamt
                                    dr["col3"] = model[0].LTM1[k].Col13;//chrgrtid
                                    dr["col4"] = model[0].LTM1[k].Col17;//igstrt
                                    dr["col5"] = model[0].LTM1[k].Col18;//igstamt
                                    dr["col6"] = model[0].LTM1[k].Col19;//cgstrt
                                    dr["col7"] = model[0].LTM1[k].Col20;//cgstamt
                                    dr["col8"] = model[0].LTM1[k].Col21;//sgstrt
                                    dr["col9"] = model[0].LTM1[k].Col22;//sgstamt
                                                                        //======                            
                                    dr["rec_id"] = "0";
                                    if (isedit)
                                    {
                                        dr["client_id"] = model[0].Col1.Trim();
                                        dr["client_unit_id"] = model[0].Col2.Trim();
                                        dr["ent_by"] = model[0].Col3;
                                        dr["ent_date"] = model[0].Col4;
                                        dr["edit_by"] = userid_mst;
                                        dr["edit_date"] = currdate;
                                    }
                                    else
                                    {
                                        dr["client_id"] = clientid_mst;
                                        dr["client_unit_id"] = unitid_mst;
                                        dr["ent_by"] = userid_mst;
                                        dr["ent_date"] = currdate;
                                        dr["edit_by"] = "-";
                                        dr["edit_date"] = currdate;
                                    }
                                    dten.Rows.Add(dr);
                                }
                                #endregion
                                res = sgen.Update_data_uncommit2(userCode, dten, "enx_tab", model[0].Col8, isedit, sat1);
                                if (!res)
                                {
                                    sat1.Rollback();
                                    ViewBag.vnew = "disabled='disabled'";
                                    ViewBag.vedit = "disabled='disabled'";
                                    ViewBag.vimport = "disabled='disabled";
                                    ViewBag.vsave = "";
                                    ViewBag.vsavenew = "";
                                    ViewBag.scripCall += "showmsgJS(1, 'Calc error', 0);";
                                    ModelState.Clear();
                                    return View(model);
                                }
                                else
                                {
                                    sat1.Commit();
                                }
                            }
                            model = new List<Tmodelmain>();
                            model.Add(new Tmodelmain
                            {
                                Col10 = "itransaction",
                                Col9 = tm.Col9,
                                Col11 = tm.Col11,
                                Col12 = tm.Col12,
                                Col13 = "Save",
                                Col100 = "Save & New",
                                Col121 = "S",
                                Col122 = "<u>S</u>ave",
                                Col123 = "Save & Ne<u>w</u>",
                                Col14 = tm.Col14,
                                Col15 = tm.Col15,
                                TList1 = mod1,
                                SelectedItems1 = new string[] { "" },
                                dt1 = ((DataTable)sgen.GetSession(MyGuid, "SIV_DT")).Copy()
                            });
                            if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE") || command.Trim().ToUpper().Equals("DRAFT"))
                            {
                                ViewBag.vnew = "";
                                ViewBag.vedit = "";
                                ViewBag.vsave = "disabled='disabled'";
                                ViewBag.vsavenew = "disabled='disabled'";
                                if (!command.Trim().ToUpper().Equals("DRAFT"))
                                {
                                    string date = sgen.SaveDate_dt(tm.Col48, false).ToString("yyyyMMdd");
                                    url = clientid_mst + unitid_mst + vch_num + date + "" + model[0].Col12 + "";
                                    sgen.SetSession(MyGuid, "SSEEKVAL", url);
                                    ViewBag.scripCall = "showmsgJS(2, 'Data Saved Successfully. Do You Want To Print', 1);disableForm();";
                                }
                                else
                                {
                                    ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully To Drafts');disableForm();";
                                }

                            }
                            else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                            {
                                try
                                {
                                    model = new_srv_inv(model);
                                    string sameserial = sgen.seekval(userCode, "select param1 from controls where type='CTL' and m_module3='-' and id='000018'", "param1");
                                    if (sameserial.Trim().Equals("Y"))
                                    {
                                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where substr(trim(type),1,1)='4'" + model[0].Col11.Trim() + "";
                                    }
                                    else
                                    {
                                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                                    }
                                    vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                                    model[0].Col16=vch_num;
                                    ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                                }
                                catch (Exception ex)
                                {
                                    ViewBag.scripCall += "mytoast('error', 'toast-top-right', '" + ex.Message.ToString().Trim() + "');";
                                }
                            }
                        }
                    }
                    catch (Exception ex) { ViewBag.scripCall = "showmsgJS(1,'" + ex.Message.ToString() + "', 0);"; }
                }
                else if (command == "hfbtnyes")
                {
                    model = CallbackFun("PRINT", "N", "srv_inv", "hall", model);
                    ViewBag.vnew = "";
                    ViewBag.vedit = "";
                    ViewBag.vsave = "disabled='disabled'";
                    ViewBag.vsavenew = "disabled='disabled'";
                }
                else if (command == "-")
                {
                    if (model[0].dt1.Rows.Count > 1) model[0].dt1.Rows.RemoveAt(sgen.Make_int(hfrow));
                    else { model[0].dt1 = ((DataTable)sgen.GetSession(MyGuid, "SIV_DT")).Copy(); }
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        [HttpPost]
        public void sivdelrno(string value)
        {
            sgen.SetSession(MyGuid, "sivdelrno", value);
        }
        #endregion
        #region sales person
        public ActionResult s_person()
        {
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            FillMst(MyGuid);
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            model[0].Col9 = "SALES PERSON";
            model[0].Col10 = "master_setting";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "SPR";
            return View(model);
        }
        public List<Tmodelmain> new_saleperson(List<Tmodelmain> model)
        {
            model = getnew(model);
            var tm = model.FirstOrDefault();
            return model;
        }
        [HttpPost]
        public ActionResult s_person(List<Tmodelmain> model, string command, string mid)
        {
            try
            {
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();
                if (command == "New")
                {
                    model = new_saleperson(model);
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {
                    string currdate = "";
                    DataTable dtstr = new DataTable();
                    dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                    currdate = sgen.server_datetime(userCode);

                    #region dtstr
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        isedit = true;
                        vch_num = model[0].Col16;
                    }
                    else
                    {
                        isedit = false;
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        model[0].Col16 = vch_num;
                    }
                    DataRow dr = dtstr.NewRow();
                    dr["rec_id"] = "0";
                    dr["type"] = model[0].Col12;
                    dr["vch_num"] = vch_num.Trim();
                    dr["vch_date"] = currdate;
                    dr["MASTER_NAME"] = model[0].Col17; // sales p name 
                    dr["CONT_PERSON_EMAIL"] = model[0].Col18; // email id
                    dr["GROUP_ID"] = model[0].Col19; // mobile
                    if (isedit)
                    {
                        dr["master_entby"] = model[0].Col3;
                        dr["master_entdate"] = model[0].Col4;
                        dr["client_id"] = clientid_mst;
                        dr["client_unit_id"] = unitid_mst;
                        dr["master_editby"] = userid_mst;
                        dr["master_editdate"] = currdate;
                    }
                    else
                    {
                        dr["master_entby"] = userid_mst;
                        dr["master_entdate"] = currdate;
                        dr["master_editby"] = "-";
                        dr["master_editdate"] = currdate;
                        dr["client_id"] = clientid_mst;
                        dr["client_unit_id"] = unitid_mst;
                    }
                    dtstr.Rows.Add(dr);

                    #endregion
                    bool Result = sgen.Update_data_fast1(userCode, dtstr, model[0].Col10.Trim(), tm.Col8, isedit);
                    if (Result == true)
                    {
                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col10 = tm.Col10,
                            Col11 = tm.Col11,
                            Col12 = tm.Col12,
                            Col13 = "Save",
                            Col100 = "Save & New",
                            Col121 = "S",
                            Col122 = "<u>S</u>ave",
                            Col123 = "Save & Ne<u>w</u>",
                            Col14 = tm.Col14,
                            Col15 = tm.Col15,
                            Col9 = tm.Col9,
                        });
                        if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                        {
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                        {
                            try
                            {
                                model = new_saleperson(model);
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                            }
                            catch (Exception ex) { }
                        }
                    }
                    else
                    {
                        ViewBag.scripCall = "showmsgJS(1, 'Record Not Saved', 2);";
                    }
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region pay_term
        public ActionResult pay_term()
        {
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            FillMst(MyGuid);
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            model[0].Col9 = "PAY TERMS";
            model[0].Col10 = "master_setting";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "PT2";
            return View(model);
        }
        public List<Tmodelmain> new_pay_term(List<Tmodelmain> model)
        {
            model = getnew(model);
            var tm = model.FirstOrDefault();
            return model;
        }
        [HttpPost]
        public ActionResult pay_term(List<Tmodelmain> model, string command, string mid)
        {
            try
            {
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();
                if (command == "New")
                {
                    model = new_pay_term(model);
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {
                    string currdate = "";
                    DataTable dtstr = new DataTable();
                    dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                    currdate = sgen.server_datetime(userCode);

                    #region dtstr
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        isedit = true;
                        vch_num = model[0].Col16;
                    }
                    else
                    {
                        isedit = false;
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        model[0].Col16 = vch_num;
                    }
                    DataRow dr = dtstr.NewRow();
                    dr["rec_id"] = "0";
                    dr["type"] = model[0].Col12;
                    dr["vch_num"] = vch_num.Trim();
                    dr["vch_date"] = currdate;
                    dr["MASTER_NAME"] = model[0].Col17; // term name 
                    dr["master_id"] = vch_num.Trim().Substring(3, 3); // sales p name 
                    dr["MALERATIO"] = model[0].Col18; // email id
                    if (isedit)
                    {
                        dr["master_entby"] = model[0].Col3;
                        dr["master_entdate"] = model[0].Col4;
                        dr["client_id"] = clientid_mst;
                        dr["client_unit_id"] = unitid_mst;
                        dr["master_editby"] = userid_mst;
                        dr["master_editdate"] = currdate;
                    }
                    else
                    {
                        dr["master_entby"] = userid_mst;
                        dr["master_entdate"] = currdate;
                        dr["master_editby"] = "-";
                        dr["master_editdate"] = currdate;
                        dr["client_id"] = clientid_mst;
                        dr["client_unit_id"] = unitid_mst;
                    }
                    dtstr.Rows.Add(dr);

                    #endregion
                    bool Result = sgen.Update_data_fast1(userCode, dtstr, model[0].Col10.Trim(), tm.Col8, isedit);
                    if (Result == true)
                    {
                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col10 = tm.Col10,
                            Col11 = tm.Col11,
                            Col12 = tm.Col12,
                            Col13 = "Save",
                            Col100 = "Save & New",
                            Col121 = "S",
                            Col122 = "<u>S</u>ave",
                            Col123 = "Save & Ne<u>w</u>",
                            Col14 = tm.Col14,
                            Col15 = tm.Col15,
                            Col9 = tm.Col9,
                        });
                        if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                        {
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                        {
                            try
                            {
                                model = new_pay_term(model);
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                            }
                            catch (Exception ex) { }
                        }
                    }
                    else
                    {
                        ViewBag.scripCall = "showmsgJS(1, 'Record Not Saved', 2);";
                    }
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region recurr invoice
        public ActionResult rcr_inv()
        {
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            FillMst(MyGuid);
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            List<SelectListItem> mod1 = new List<SelectListItem>();
            model[0].Col9 = "RECURRING SERVICE INVOICE";
            model[0].Col10 = "itransactionc";
            model[0].Col12 = "RIV";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].TList1 = mod1;
            model[0].SelectedItems1 = new string[] { "" };
            model[0].TList2 = mod1;
            model[0].SelectedItems2 = new string[] { "" };
            model[0].TList3 = mod1;
            model[0].Chk1 = true;
            model[0].SelectedItems3 = new string[] { "" };
            model[0].Col18 = sgen.seekval(userCode, "select unit_gstin_no from company_unit_profile where cup_id='" + unitid_mst + "'", "unit_gstin_no");
            DataTable dt = sgen.getdata(userCode, "select '' ADD_REMOVE,'1' as  SNo ,'-' as SERVICE_CODE,'-' as SERVICE_NAME,'-'  SAC_Code,'-' as UOM,'0' as TAXRATE,'0' as QUANTITY,'0' as RATE," +
"'-' DISC_TYPE,'0' as DISC_RATE,'0' SAMOUNT,'0' TAXAMOUNT,'0' DISCAMOUNT,'0' LINEAMOUNT,'-' as Remark from dual");
            model[0].dt1 = dt;
            sgen.SetSession(MyGuid, "RIV_DT", dt.Copy());
            if (Request.QueryString["fstr"] != null)
            {
                string fstr = "";
                if (Request.QueryString["fstr"].StartsWith("EDIT"))
                {
                    fstr = EncryptDecrypt.Decrypt(Request.QueryString["fstr"].ToString().Replace("EDIT", "").Trim());
                    sgen.SetSession(MyGuid, "SSEEKVAL", fstr);
                    CallbackFun("EDIT", "N", "rcr_inv", "hall", model);
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                    ViewBag.scripCall = "enableForm();";
                }
                else if (Request.QueryString["fstr"].StartsWith("VIEW"))
                {
                    fstr = EncryptDecrypt.Decrypt(Request.QueryString["fstr"].ToString().Replace("VIEW", "").Trim());
                    sgen.SetSession(MyGuid, "SSEEKVAL", fstr);
                    CallbackFun("VIEW", "N", "rcr_inv", "hall", model);
                    ViewBag.vnew = "";
                    ViewBag.vedit = "";
                    ViewBag.vsave = "disabled='disabled'";
                    ViewBag.vsavenew = "disabled='disabled'";
                    ViewBag.scripCall = "disableForm();";
                }
            }
            ModelState.Clear();
            return View(model);
        }
        public List<Tmodelmain> new_rcr_inv(List<Tmodelmain> model)
        {
            model = getnew(model);
            var tm = model.FirstOrDefault();
            model[0].Col48 = sgen.server_datetime_local(userCode);
            #region Dropdwon
            List<SelectListItem> mod1 = new List<SelectListItem>();
            List<SelectListItem> mod2 = new List<SelectListItem>();
            List<SelectListItem> mod3 = new List<SelectListItem>();
            //mod2.Add(new SelectListItem { Text = "Week", Value = "101" });
            //mod2.Add(new SelectListItem { Text = "2 Weeks", Value = "102" });
            //mod2.Add(new SelectListItem { Text = "Month", Value = "103" });
            //mod2.Add(new SelectListItem { Text = "2 Months", Value = "104" });
            //mod2.Add(new SelectListItem { Text = "3 Months", Value = "105" });
            //mod2.Add(new SelectListItem { Text = "6 Months", Value = "106" });
            //mod2.Add(new SelectListItem { Text = "Year", Value = "107" });
            //mod2.Add(new SelectListItem { Text = "2 Years", Value = "108" });
            //mod2.Add(new SelectListItem { Text = "3 Years", Value = "109" });
            //mod2.Add(new SelectListItem { Text = "Custom", Value = "110" });
            //mod3.Add(new SelectListItem { Text = "Day(s)", Value = "101" });
            //mod3.Add(new SelectListItem { Text = "Week(s)", Value = "102" });
            //mod3.Add(new SelectListItem { Text = "Month(s)", Value = "103" });
            //mod3.Add(new SelectListItem { Text = "Year(s)", Value = "104" });
            TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.payterm2(userCode, unitid_mst);
            TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2 = cmd_Fun.freq_reminder(userCode, unitid_mst); ;
            //TempData[MyGuid + "_TList3"] = model[0].TList3 = mod3;
            model[0].SelectedItems1 = new string[] { "" };
            model[0].SelectedItems2 = new string[] { "" };
            //model[0].SelectedItems3 = new string[] { "" };
            #endregion
            return model;
        }
        [HttpPost]
        public ActionResult rcr_inv(List<Tmodelmain> model, string command, string hfrow, string hftable, HttpPostedFileBase upd1)
        {
            try
            {
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();
                DataTable dtm = sgen.settable(hftable);
                model[0].dt1 = dtm;
                string url = "";
                #region ddl          
                List<SelectListItem> mod1 = new List<SelectListItem>();
                List<SelectListItem> mod2 = new List<SelectListItem>();
                //List<SelectListItem> mod3 = new List<SelectListItem>();
                TempData[MyGuid + "_TList1"] = model[0].TList1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                TempData[MyGuid + "_TList2"] = model[0].TList2 = (List<SelectListItem>)TempData[MyGuid + "_TList2"];
                //TempData[MyGuid + "_TList3"] = model[0].TList3 = (List<SelectListItem>)TempData[MyGuid + "_TList3"];
                if (tm.SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                if (tm.SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
                //if (tm.SelectedItems3 == null) model[0].SelectedItems3 = new string[] { "" };
                #endregion
                if (command == "New")
                {
                    model = new_rcr_inv(model);
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    if (sgen.GetSession(MyGuid, "sivdelrno") != null) btnval = "CHRGDEL";
                    else if (sgen.GetSession(MyGuid, "btnval") != null) btnval = sgen.GetSession(MyGuid, "btnval").ToString();
                    if (btnval == "INVOICE")
                    {
                        String fstr = sgen.GetSession(MyGuid, "SSEEKVAL").ToString();
                        return RedirectToAction("srv_inv", "hall", new { m_id = EncryptDecrypt.Encrypt(model[0].Col15), mid = EncryptDecrypt.Encrypt(model[0].Col14), fstr = "INVOICE" + EncryptDecrypt.Encrypt(fstr) });
                    }

                    if (btnval == "PRINT" || btnval == "SEND")
                    {
                        ViewBag.vnew = "";
                        ViewBag.vedit = "";
                        ViewBag.vsave = "disabled='disabled'";
                        ViewBag.vsavenew = "disabled='disabled'";
                    }
                    else
                    {
                        model = CallbackFun(btnval, "N", actionName, controllerName, model);
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                    }
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {
                    try
                    {
                        if (model[0].dt1.Rows[0]["SERVICE_CODE"].ToString().Trim().Equals("-"))
                        {
                            ViewBag.scripCall += "showmsgJS(1,'Please Select SERVICE in grid-1', 2);";
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            return View(model);
                        }
                        Satransaction sat1 = new Satransaction(userCode, MyGuid);
                        string currdate = sgen.server_datetime(userCode);
                        if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                        {
                            isedit = true;
                            vch_num = model[0].Col16;
                        }
                        else
                        {
                            isedit = false;
                            mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                            vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        }
                        bool Result = false;
                        DataTable dtbtch = cmd_Fun.GetStructure(userCode, "btchtrans");
                        DataTable dataTable = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                        #region DTSTR
                        for (int i = 0; i < model[0].dt1.Rows.Count; i++)
                        {
                            DataRow dr = dataTable.NewRow();
                            dr["rec_id"] = "0";
                            dr["type"] = model[0].Col12;
                            dr["vch_num"] = vch_num.Trim();
                            dr["vch_date"] = sgen.Make_date_S(model[0].Col48);
                            dr["date1"] = sgen.Make_date_S(model[0].Col28);//starts on
                            dr["date2"] = sgen.Make_date_S(model[0].Col29);//ends on
                            dr["acode"] = model[0].Col49;
                            dr["pono"] = model[0].Col25;
                            dr["MMT"] = (model[0].Chk1 == true) ? "Y" : "N"; //never expires
                            dr["icode"] = model[0].dt1.Rows[i]["SERVICE_CODE"].ToString(); //SERCODE
                            dr["iname"] = model[0].dt1.Rows[i]["SERVICE_NAME"].ToString();  //SER_NAME
                            dr["hsno"] = model[0].dt1.Rows[i]["SAC_Code"].ToString();
                            dr["uom"] = model[0].dt1.Rows[i]["UOM"].ToString();
                            dr["taxrate"] = model[0].dt1.Rows[i]["TAXRATE"].ToString();
                            dr["ORDQTY"] = model[0].dt1.Rows[i]["QUANTITY"].ToString();//QUANTITY
                            dr["irate"] = model[0].dt1.Rows[i]["RATE"].ToString();
                            dr["disctype"] = model[0].dt1.Rows[i]["DISC_TYPE"].ToString();
                            dr["discrate"] = model[0].dt1.Rows[i]["DISC_RATE"].ToString();
                            dr["iamount"] = model[0].dt1.Rows[i]["SAMOUNT"].ToString();
                            dr["taxamt"] = model[0].dt1.Rows[i]["TAXAMOUNT"].ToString();
                            dr["discamt"] = model[0].dt1.Rows[i]["DISCAMOUNT"].ToString();
                            dr["lineamount"] = model[0].dt1.Rows[i]["LINEAMOUNT"].ToString();
                            dr["iremark"] = model[0].dt1.Rows[i]["Remark"].ToString();
                            dr["gtaxamt"] = model[0].Col62; //net amount
                            //dr["pur_type"] = model[0].Col41; //days
                            dr["pay_term"] = model[0].SelectedItems1.FirstOrDefault();
                            dr["tmode"] = model[0].SelectedItems2.FirstOrDefault();
                            //dr["tmode"] = model[0].SelectedItems3.FirstOrDefault();
                            if (model[0].Col31 == "") model[0].Col31 = "-";
                            if (model[0].Col32 == "") model[0].Col32 = "-";
                            dr["totremark"] = model[0].Col31;
                            dr["cond"] = model[0].Col32;
                            dr["basicamt"] = model[0].Col33;
                            dr["igst"] = model[0].Col34;
                            dr["cgst"] = model[0].Col35;
                            dr["sgst"] = model[0].Col36;
                            dr["ginstlchrg"] = model[0].Col37;
                            dr["gserchrg"] = model[0].Col38;
                            dr["gamc"] = model[0].Col39;
                            dr["gloadchrg"] = model[0].Col40;
                            dr["req_by"] = model[0].Col23;
                            dr = getsave(currdate, dr, model, isedit);
                            dataTable.Rows.Add(dr);
                        }
                        #endregion
                        Result = sgen.Update_data_fast1(userCode, dataTable, model[0].Col10.Trim(), model[0].Col8, isedit);
                        if (Result == true)
                        {
                            DataTable dten = cmd_Fun.GetStructure(userCode, "enx_tab");
                            if (model[0].LTM1 != null && model[0].LTM1.Count > 0)
                            {
                                bool res = false;
                                #region dr
                                for (int k = 0; k < model[0].LTM1.Count; k++)
                                {
                                    DataRow dr = dten.NewRow();
                                    dr["type"] = model[0].Col12;
                                    dr["vch_num"] = vch_num.Trim();
                                    dr["vch_date"] = sgen.Savedate(model[0].Col48, true);
                                    //dt====
                                    dr["r_no"] = model[0].LTM1[k].Col14;
                                    dr["col1"] = model[0].LTM1[k].Col15;//chrgid
                                    dr["col2"] = model[0].LTM1[k].Col16;//chrgamt
                                    dr["col3"] = model[0].LTM1[k].Col13;//chrgrtid
                                    dr["col4"] = model[0].LTM1[k].Col17;//igstrt
                                    dr["col5"] = model[0].LTM1[k].Col18;//igstamt
                                    dr["col6"] = model[0].LTM1[k].Col19;//cgstrt
                                    dr["col7"] = model[0].LTM1[k].Col20;//cgstamt
                                    dr["col8"] = model[0].LTM1[k].Col21;//sgstrt
                                    dr["col9"] = model[0].LTM1[k].Col22;//sgstamt
                                                                        //======                            
                                    dr["rec_id"] = "0";
                                    if (isedit)
                                    {
                                        dr["client_id"] = model[0].Col1.Trim();
                                        dr["client_unit_id"] = model[0].Col2.Trim();
                                        dr["ent_by"] = model[0].Col3;
                                        dr["ent_date"] = model[0].Col4;
                                        dr["edit_by"] = userid_mst;
                                        dr["edit_date"] = currdate;
                                    }
                                    else
                                    {
                                        dr["client_id"] = clientid_mst;
                                        dr["client_unit_id"] = unitid_mst;
                                        dr["ent_by"] = userid_mst;
                                        dr["ent_date"] = currdate;
                                        dr["edit_by"] = "-";
                                        dr["edit_date"] = currdate;
                                    }
                                    dten.Rows.Add(dr);
                                }
                                #endregion
                                res = sgen.Update_data_uncommit2(userCode, dten, "enx_tab", model[0].Col8, isedit, sat1);
                                if (!res)
                                {
                                    sat1.Rollback();
                                    ViewBag.vnew = "disabled='disabled'";
                                    ViewBag.vedit = "disabled='disabled'";
                                    ViewBag.vimport = "disabled='disabled";
                                    ViewBag.vsave = "";
                                    ViewBag.vsavenew = "";
                                    ViewBag.scripCall += "showmsgJS(1, 'Calc error', 0);";
                                    ModelState.Clear();
                                    return View(model);
                                }
                                else
                                {
                                    sat1.Commit();
                                }
                            }
                            model = new List<Tmodelmain>();
                            model.Add(new Tmodelmain
                            {
                                Col10 = tm.Col10,
                                Col9 = tm.Col9,
                                Col11 = tm.Col11,
                                Col13 = "Save",
                                Col100 = "Save & New",
                                Col121 = "S",
                                Col122 = "<u>S</u>ave",
                                Col123 = "Save & Ne<u>w</u>",
                                Col14 = tm.Col14,
                                Col15 = tm.Col15,
                                Col12 = tm.Col12,
                                Chk1 = true,
                                TList1 = mod1,
                                SelectedItems1 = new string[] { "" },
                                TList2 = mod2,
                                SelectedItems2 = new string[] { "" },
                                dt1 = ((DataTable)sgen.GetSession(MyGuid, "RIV_DT")).Copy()
                            });
                            if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                            {
                                ViewBag.vnew = "";
                                ViewBag.vedit = "";
                                ViewBag.vsave = "disabled='disabled'";
                                ViewBag.vsavenew = "disabled='disabled'";
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                            }
                            else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                            {
                                try
                                {
                                    model = new_rcr_inv(model);
                                    ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                                }
                                catch (Exception ex)
                                {
                                    ViewBag.scripCall += "mytoast('error', 'toast-top-right', '" + ex.Message.ToString().Trim() + "');";
                                }
                            }
                        }
                    }
                    catch (Exception ex) { ViewBag.scripCall = "showmsgJS(1,'" + ex.Message.ToString() + "', 0);"; }
                }
                else if (command == "hfbtnyes")
                {
                    model = CallbackFun("PRINT", "N", "srv_inv", "hall", model);
                    ViewBag.vnew = "";
                    ViewBag.vedit = "";
                    ViewBag.vsave = "disabled='disabled'";
                    ViewBag.vsavenew = "disabled='disabled'";
                }
                else if (command == "-")
                {
                    if (model[0].dt1.Rows.Count > 1) model[0].dt1.Rows.RemoveAt(sgen.Make_int(hfrow));
                    else { model[0].dt1 = ((DataTable)sgen.GetSession(MyGuid, "RIV_DT")).Copy(); }
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        [HttpPost]
        public void rivdelrno(string value)
        {
            sgen.SetSession(MyGuid, "rivdelrno", value);
        }
        #endregion
        #region credit note
        public ActionResult cr_note()
        {
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            FillMst(MyGuid);
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            List<SelectListItem> mod1 = new List<SelectListItem>();
            model[0].Col9 = "CREDIT NOTE";
            model[0].Col10 = "itransactionc";
            model[0].Col12 = "CNO";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            //model[0].TList1 = mod1;
            //model[0].SelectedItems1 = new string[] { "" };
            model[0].Col18 = sgen.seekval(userCode, "select unit_gstin_no from company_unit_profile where cup_id='" + unitid_mst + "'", "unit_gstin_no");
            DataTable dt = sgen.getdata(userCode, "select '' ADD_REMOVE,'1' as  SNo ,'-' as SERVICE_CODE,'-' as SERVICE_NAME,'-'  SAC_Code,'-' as UOM,'0' as TAXRATE,'0' as QUANTITY,'0' as RATE," +
"'-' DISC_TYPE,'0' as DISC_RATE,'0' SAMOUNT,'0' TAXAMOUNT,'0' DISCAMOUNT,'0' LINEAMOUNT,'-' as Remark from dual");
            model[0].dt1 = dt;
            sgen.SetSession(MyGuid, "CNO_DT", dt.Copy());
            ModelState.Clear();
            return View(model);
        }
        public List<Tmodelmain> new_cr_note(List<Tmodelmain> model)
        {
            model = getnew(model);
            var tm = model.FirstOrDefault();
            model[0].Col48 = sgen.server_datetime_local(userCode);
            #region Dropdwon
            //List<SelectListItem> mod1 = new List<SelectListItem>();
            //TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.separation_reason(userCode, unitid_mst);
            //model[0].SelectedItems1 = new string[] { "" };
            #endregion
            return model;
        }
        [HttpPost]
        public ActionResult cr_note(List<Tmodelmain> model, string command, string hfrow, string hftable, HttpPostedFileBase upd1)
        {
            try
            {
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();
                DataTable dtm = sgen.settable(hftable);
                model[0].dt1 = dtm;
                string url = "";
                #region ddl          
                //List<SelectListItem> mod1 = new List<SelectListItem>();
                //TempData[MyGuid + "_TList1"] = model[0].TList1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                //if (tm.SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                #endregion
                if (command == "New")
                {
                    model = new_cr_note(model);
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    if (sgen.GetSession(MyGuid, "sivdelrno") != null) btnval = "CHRGDEL";
                    else if (sgen.GetSession(MyGuid, "btnval") != null) btnval = sgen.GetSession(MyGuid, "btnval").ToString();
                    model = CallbackFun(btnval, "N", actionName, controllerName, model);
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                    if (btnval == "PRINT" || btnval == "SEND")
                    {
                        ViewBag.vnew = "";
                        ViewBag.vedit = "";
                        ViewBag.vsave = "disabled='disabled'";
                        ViewBag.vsavenew = "disabled='disabled'";
                    }
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {
                    try
                    {
                        if (model[0].dt1.Rows[0]["SERVICE_CODE"].ToString().Trim().Equals("-"))
                        {
                            ViewBag.scripCall += "showmsgJS(1,'Please Select SERVICE in grid-1', 2);";
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            return View(model);
                        }
                        string currdate = sgen.server_datetime(userCode);
                        if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                        {
                            isedit = true;
                            vch_num = model[0].Col16;
                        }
                        else
                        {
                            isedit = false;
                            mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                            vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        }
                        bool Result = false;
                        DataTable dtbtch = cmd_Fun.GetStructure(userCode, "btchtrans");
                        DataTable dataTable = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                        #region DTSTR
                        for (int i = 0; i < model[0].dt1.Rows.Count; i++)
                        {
                            DataRow dr = dataTable.NewRow();
                            dr["rec_id"] = "0";
                            dr["type"] = model[0].Col12;
                            dr["vch_num"] = vch_num.Trim();
                            dr["vch_date"] = sgen.Make_date_S(model[0].Col48);
                            dr["acode"] = model[0].Col49;
                            dr["pono"] = model[0].Col25;
                            dr["invno"] = model[0].Col43;
                            dr["icode"] = model[0].dt1.Rows[i]["SERVICE_CODE"].ToString(); //SERCODE
                            dr["iname"] = model[0].dt1.Rows[i]["SERVICE_NAME"].ToString();  //SER_NAME
                            dr["hsno"] = model[0].dt1.Rows[i]["SAC_Code"].ToString();
                            dr["uom"] = model[0].dt1.Rows[i]["UOM"].ToString();
                            dr["taxrate"] = model[0].dt1.Rows[i]["TAXRATE"].ToString();
                            dr["ORDQTY"] = model[0].dt1.Rows[i]["QUANTITY"].ToString();//QUANTITY
                            dr["irate"] = model[0].dt1.Rows[i]["RATE"].ToString();
                            dr["disctype"] = model[0].dt1.Rows[i]["DISC_TYPE"].ToString();
                            dr["discrate"] = model[0].dt1.Rows[i]["DISC_RATE"].ToString();
                            dr["iamount"] = model[0].dt1.Rows[i]["SAMOUNT"].ToString();
                            dr["taxamt"] = model[0].dt1.Rows[i]["TAXAMOUNT"].ToString();
                            dr["discamt"] = model[0].dt1.Rows[i]["DISCAMOUNT"].ToString();
                            dr["lineamount"] = model[0].dt1.Rows[i]["LINEAMOUNT"].ToString();
                            dr["iremark"] = model[0].dt1.Rows[i]["Remark"].ToString();
                            dr["gtaxamt"] = model[0].Col62; //net amount
                            //dr["pay_term"] = model[0].SelectedItems1.FirstOrDefault();
                            if (model[0].Col31 == "") model[0].Col31 = "-";
                            if (model[0].Col32 == "") model[0].Col32 = "-";
                            dr["totremark"] = model[0].Col31;
                            dr["cond"] = model[0].Col32;
                            dr["basicamt"] = model[0].Col33;
                            dr["igst"] = model[0].Col34;
                            dr["cgst"] = model[0].Col35;
                            dr["sgst"] = model[0].Col36;
                            dr["ginstlchrg"] = model[0].Col37;
                            dr["gserchrg"] = model[0].Col38;
                            dr["gamc"] = model[0].Col39;
                            dr["gloadchrg"] = model[0].Col40;
                            dr["req_by"] = model[0].Col23;
                            dr = getsave(currdate, dr, model, isedit);
                            dataTable.Rows.Add(dr);
                        }
                        #endregion
                        Result = sgen.Update_data_fast1(userCode, dataTable, model[0].Col10.Trim(), model[0].Col8, isedit);
                        if (Result == true)
                        {
                            DataTable dten = cmd_Fun.GetStructure(userCode, "enx_tab");
                            if (model[0].LTM1 != null && model[0].LTM1.Count > 0)
                            {
                                bool res = false;
                                #region dr
                                for (int k = 0; k < model[0].LTM1.Count; k++)
                                {
                                    DataRow dr = dten.NewRow();
                                    dr["type"] = model[0].Col12;
                                    dr["vch_num"] = vch_num.Trim();
                                    dr["vch_date"] = sgen.Savedate(model[0].Col48, true);
                                    //dt====
                                    dr["r_no"] = model[0].LTM1[k].Col14;
                                    dr["col1"] = model[0].LTM1[k].Col15;//chrgid
                                    dr["col2"] = model[0].LTM1[k].Col16;//chrgamt
                                    dr["col3"] = model[0].LTM1[k].Col13;//chrgrtid
                                    dr["col4"] = model[0].LTM1[k].Col17;//igstrt
                                    dr["col5"] = model[0].LTM1[k].Col18;//igstamt
                                    dr["col6"] = model[0].LTM1[k].Col19;//cgstrt
                                    dr["col7"] = model[0].LTM1[k].Col20;//cgstamt
                                    dr["col8"] = model[0].LTM1[k].Col21;//sgstrt
                                    dr["col9"] = model[0].LTM1[k].Col22;//sgstamt
                                                                        //======                            
                                    dr["rec_id"] = "0";
                                    if (isedit)
                                    {
                                        dr["client_id"] = model[0].Col1.Trim();
                                        dr["client_unit_id"] = model[0].Col2.Trim();
                                        dr["ent_by"] = model[0].Col3;
                                        dr["ent_date"] = model[0].Col4;
                                        dr["edit_by"] = userid_mst;
                                        dr["edit_date"] = currdate;
                                    }
                                    else
                                    {
                                        dr["client_id"] = clientid_mst;
                                        dr["client_unit_id"] = unitid_mst;
                                        dr["ent_by"] = userid_mst;
                                        dr["ent_date"] = currdate;
                                        dr["edit_by"] = "-";
                                        dr["edit_date"] = currdate;
                                    }
                                    dten.Rows.Add(dr);
                                }
                                #endregion
                                res = sgen.Update_data_fast1(userCode, dten, "enx_tab", model[0].Col8, isedit);
                                if (!res)
                                {
                                    ViewBag.vnew = "disabled='disabled'";
                                    ViewBag.vedit = "disabled='disabled'";
                                    ViewBag.vimport = "disabled='disabled";
                                    ViewBag.vsave = "";
                                    ViewBag.vsavenew = "";
                                    ViewBag.scripCall += "showmsgJS(1, 'Calc error', 0);";
                                    ModelState.Clear();
                                    return View(model);
                                }
                            }
                            model = new List<Tmodelmain>();
                            model.Add(new Tmodelmain
                            {
                                Col9 = tm.Col9,
                                Col10 = tm.Col10,
                                Col11 = tm.Col11,
                                Col13 = "Save",
                                Col100 = "Save & New",
                                Col121 = "S",
                                Col122 = "<u>S</u>ave",
                                Col123 = "Save & Ne<u>w</u>",
                                Col14 = tm.Col14,
                                Col15 = tm.Col15,
                                Col12 = tm.Col12,
                                dt1 = ((DataTable)sgen.GetSession(MyGuid, "CNO_DT")).Copy()
                            });
                            if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                            {
                                ViewBag.vnew = "";
                                ViewBag.vedit = "";
                                ViewBag.vsave = "disabled='disabled'";
                                ViewBag.vsavenew = "disabled='disabled'";
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                            }
                            else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                            {
                                try
                                {
                                    model = new_cr_note(model);
                                    ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                                }
                                catch (Exception ex)
                                {
                                    ViewBag.scripCall += "mytoast('error', 'toast-top-right', '" + ex.Message.ToString().Trim() + "');";
                                }
                            }
                        }
                    }
                    catch (Exception ex) { ViewBag.scripCall = "showmsgJS(1,'" + ex.Message.ToString() + "', 0);"; }
                }
                else if (command == "-")
                {
                    if (model[0].dt1.Rows.Count > 1) model[0].dt1.Rows.RemoveAt(sgen.Make_int(hfrow));
                    else { model[0].dt1 = ((DataTable)sgen.GetSession(MyGuid, "CNO_DT")).Copy(); }
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        [HttpPost]
        public void crnotedelrno(string value)
        {
            sgen.SetSession(MyGuid, "crnotedelrno", value);
        }
        #endregion
        #region invoices list
        public ActionResult inv_list()
        {
            FillMst();
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            ViewBag.scripCall = "enableForm();";
            model[0].Col9 = "LIST OF INVOICES";
            model[0].Col11 = "and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "'";
            model[0].Col31 = "Doc No.";
            model[0].Col23 = "Doc Date";
            model[0].Col24 = "Customer Name";
            model[0].Col25 = "Cutomer Mob";
            if (sgen.GetSession(MyGuid, "inv_list") != null)
            {
                model = CallbackFun("PARENT", "N", "inv_list", "hall", model);
                if (sgen.GetSession(MyGuid, "inv_list_comm") != null)
                {
                    string cmd = sgen.GetSession(MyGuid, "inv_list_comm").ToString();
                    model = inv_list_dt(model, cmd);
                }
            }
            return View(model);
        }
        public List<Tmodelmain> inv_list_dt(List<Tmodelmain> model, string command)
        {
            try
            {
                var tm = model.FirstOrDefault();
                DataTable dt = new DataTable();
                if (command == "Total Invoices")
                {
                    mq = "select distinct (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) as fstr,p.vch_num Doc_number,to_char(p.vch_date, '" + sgen.Getsqldateformat() + "') DOC_date," +
                             "c.c_name as Party_Name,c.c_gstin as Party_Gstin,c.org_mobile,c.addr as Party_Address,c.comp_email EMAIL_ID from itransaction p " +
                             "inner join clients_mst c on p.acode = c.vch_num and c.type = 'BCD' and find_in_set(c.client_unit_id, p.client_unit_id)=1 " +
                             "where p.client_unit_id = '" + unitid_mst + "' and p.type= '48' and c.vch_num='" + model[0].Col16 + "'  order by p.vch_num desc";
                    dt = new DataTable();
                    dt = sgen.getdata(userCode, mq);
                    if (dt.Rows.Count > 0)
                    {
                        model = new List<Tmodelmain>();
                        for (int i = 0; i < dt.Rows.Count; i++)
                        {
                            Tmodelmain tmm = new Tmodelmain();
                            tmm.Col9 = tm.Col9;
                            tmm.Col10 = tm.Col10;
                            tmm.Col11 = tm.Col11;
                            tmm.Col12 = tm.Col12;
                            tmm.Col14 = tm.Col14;
                            tmm.Col15 = tm.Col15;
                            tmm.Col16 = tm.Col16;
                            tmm.Col17 = tm.Col17;
                            tmm.Col18 = tm.Col18;
                            tmm.Col19 = tm.Col19;
                            tmm.Col20 = tm.Col20;
                            tmm.Col21 = tm.Col21;
                            tmm.Col22 = tm.Col22;
                            tmm.Col31 = "Doc No.";
                            tmm.Col23 = "Doc Date";
                            tmm.Col24 = "Customer Name";
                            tmm.Col25 = "Cutomer Mob";
                            tmm.Col26 = dt.Rows[i]["fstr"].ToString();
                            tmm.Col32 = dt.Rows[i]["Doc_number"].ToString();
                            tmm.Col27 = dt.Rows[i]["DOC_date"].ToString();
                            tmm.Col28 = dt.Rows[i]["Party_Name"].ToString();
                            tmm.Col29 = dt.Rows[i]["org_mobile"].ToString();
                            tmm.Col30 = command;
                            model.Add(tmm);
                        }
                    }
                }
                else if (command == "Active Recurring")
                {
                    mq = "select (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) as fstr,p.vch_num Doc_number,to_char(p.vch_date, '" + sgen.Getsqldateformat() + "') DOC_date," +
                             "c.c_name as Party_Name,c.c_gstin as Party_Gstin,c.org_mobile,c.addr as Party_Address,c.comp_email EMAIL_ID from itransactionc p inner join clients_mst c on p.acode = c.vch_num and c.type = 'BCD' and find_in_set(c.client_unit_id, p.client_unit_id)= 1 and c.vch_num='" + model[0].Col16 + "' where " +
             "p.client_unit_id = '" + unitid_mst + "' and p.type = 'RIV' and to_date(to_char(p.vch_DATE,'ddMMyyyy'),'ddMMyyyy') " +
             "between to_date('" + year_from + "', '" + sgen.Getsqldatetimeformat() + "') and to_date('" + year_to + "','" + sgen.Getsqldatetimeformat() + "') " +
             "and to_char(sysdate, 'ddmmyyyy') between to_char(p.date1,'ddmmyyyy') and (case when p.MMT = 'N' then to_char(date2,'ddmmyyyy') else to_char(sysdate + 1, 'ddmmyyyy') end) " +
             "order by p.vch_num desc";
                    dt = new DataTable();
                    dt = sgen.getdata(userCode, mq);
                    if (dt.Rows.Count > 0)
                    {
                        model = new List<Tmodelmain>();
                        for (int i = 0; i < dt.Rows.Count; i++)
                        {

                            Tmodelmain tmm = new Tmodelmain();
                            tmm.Col9 = tm.Col9;
                            tmm.Col10 = tm.Col10;
                            tmm.Col11 = tm.Col11;
                            tmm.Col12 = tm.Col12;
                            tmm.Col14 = tm.Col14;
                            tmm.Col15 = tm.Col15;
                            tmm.Col16 = tm.Col16;
                            tmm.Col17 = tm.Col17;
                            tmm.Col18 = tm.Col18;
                            tmm.Col19 = tm.Col19;
                            tmm.Col20 = tm.Col20;
                            tmm.Col21 = tm.Col21;
                            tmm.Col22 = tm.Col22;
                            tmm.Col31 = "Doc No.";
                            tmm.Col23 = "Doc Date";
                            tmm.Col24 = "Customer Name";
                            tmm.Col25 = "Cutomer Mob";
                            tmm.Col26 = dt.Rows[i]["fstr"].ToString();
                            tmm.Col32 = dt.Rows[i]["Doc_number"].ToString();
                            tmm.Col27 = dt.Rows[i]["DOC_date"].ToString();
                            tmm.Col28 = dt.Rows[i]["Party_Name"].ToString();
                            tmm.Col29 = dt.Rows[i]["org_mobile"].ToString();
                            tmm.Col30 = command;
                            model.Add(tmm);
                        }

                    }
                }
                else if (command == "Total Recurring")
                {
                    sgen.SetSession(MyGuid, "inv_list_comm", command);
                    mq = "select distinct (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) as fstr,p.vch_num Doc_number,to_char(p.vch_date, '" + sgen.Getsqldateformat() + "') DOC_date," +
                              "c.c_name as Party_Name,c.c_gstin as Party_Gstin,c.org_mobile,c.addr as Party_Address,c.comp_email EMAIL_ID from itransactionc p " +
                              "inner join clients_mst c on p.acode = c.vch_num and c.type = 'BCD' and find_in_set(c.client_unit_id, p.client_unit_id)=1 " +
                              "where p.client_unit_id = '" + unitid_mst + "' and p.type= 'RIV' and c.vch_num='" + model[0].Col16 + "'  order by p.vch_num desc";

                    dt = new DataTable();
                    dt = sgen.getdata(userCode, mq);
                    if (dt.Rows.Count > 0)
                    {
                        model = new List<Tmodelmain>();
                        for (int i = 0; i < dt.Rows.Count; i++)
                        {
                            Tmodelmain tmm = new Tmodelmain();
                            tmm.Col9 = tm.Col9;
                            tmm.Col10 = tm.Col10;
                            tmm.Col11 = tm.Col11;
                            tmm.Col12 = tm.Col12;
                            tmm.Col14 = tm.Col14;
                            tmm.Col15 = tm.Col15;
                            tmm.Col16 = tm.Col16;
                            tmm.Col17 = tm.Col17;
                            tmm.Col18 = tm.Col18;
                            tmm.Col19 = tm.Col19;
                            tmm.Col20 = tm.Col20;
                            tmm.Col21 = tm.Col21;
                            tmm.Col22 = tm.Col22;
                            tmm.Col31 = "Doc No.";
                            tmm.Col23 = "Doc Date";
                            tmm.Col24 = "Customer Name";
                            tmm.Col25 = "Cutomer Mob";
                            tmm.Col26 = dt.Rows[i]["fstr"].ToString();
                            tmm.Col32 = dt.Rows[i]["Doc_number"].ToString();
                            tmm.Col27 = dt.Rows[i]["DOC_date"].ToString();
                            tmm.Col28 = dt.Rows[i]["Party_Name"].ToString();
                            tmm.Col29 = dt.Rows[i]["org_mobile"].ToString();
                            tmm.Col30 = command;
                            model.Add(tmm);
                        }
                    }
                }
                else if (command == "Expired Recurring")
                {
                    sgen.SetSession(MyGuid, "inv_list_comm", command);
                    mq = "select (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) as fstr,p.vch_num Doc_number,to_char(p.vch_date, '" + sgen.Getsqldateformat() + "') DOC_date," +
                           "c.c_name as Party_Name,c.c_gstin as Party_Gstin,c.org_mobile,c.addr as Party_Address,c.comp_email EMAIL_ID from itransactionc p inner join clients_mst c on p.acode = c.vch_num and c.type = 'BCD' and find_in_set(c.client_unit_id, p.client_unit_id)= 1 and c.vch_num='" + model[0].Col16 + "' where " +
           "p.client_unit_id = '" + unitid_mst + "' and p.type = 'RIV' and to_date(to_char(p.vch_DATE,'ddMMyyyy'),'ddMMyyyy') " +
           "between to_date('" + year_from + "', '" + sgen.Getsqldatetimeformat() + "') and to_date('" + year_to + "','" + sgen.Getsqldatetimeformat() + "') " +
           "and to_char(sysdate, 'ddmmyyyy') between to_char(p.date1,'ddmmyyyy') and (case when p.MMT = 'Y' then to_char(date2,'ddmmyyyy') else to_char(sysdate + 1, 'ddmmyyyy') end) " +
           "order by p.vch_num desc";
                    dt = new DataTable();
                    dt = sgen.getdata(userCode, mq);
                    if (dt.Rows.Count > 0)
                    {
                        model = new List<Tmodelmain>();
                        for (int i = 0; i < dt.Rows.Count; i++)
                        {

                            Tmodelmain tmm = new Tmodelmain();
                            tmm.Col9 = tm.Col9;
                            tmm.Col10 = tm.Col10;
                            tmm.Col11 = tm.Col11;
                            tmm.Col12 = tm.Col12;
                            tmm.Col14 = tm.Col14;
                            tmm.Col15 = tm.Col15;
                            tmm.Col16 = tm.Col16;
                            tmm.Col17 = tm.Col17;
                            tmm.Col18 = tm.Col18;
                            tmm.Col19 = tm.Col19;
                            tmm.Col20 = tm.Col20;
                            tmm.Col21 = tm.Col21;
                            tmm.Col22 = tm.Col22;
                            tmm.Col31 = "Doc No.";
                            tmm.Col23 = "Doc Date";
                            tmm.Col24 = "Customer Name";
                            tmm.Col25 = "Cutomer Mob";
                            tmm.Col26 = dt.Rows[i]["fstr"].ToString();
                            tmm.Col32 = dt.Rows[i]["Doc_number"].ToString();
                            tmm.Col27 = dt.Rows[i]["DOC_date"].ToString();
                            tmm.Col28 = dt.Rows[i]["Party_Name"].ToString();
                            tmm.Col29 = dt.Rows[i]["org_mobile"].ToString();
                            tmm.Col30 = command;
                            model.Add(tmm);
                        }

                    }
                }
            }
            catch (Exception ex)
            { ViewBag.scripCall = "showmsgJS(1, '" + ex.Message.ToString().Replace("'", "") + "', 1);"; }
            return model;
        }
        [HttpPost]
        public ActionResult inv_list(List<Tmodelmain> model, string command, string mid, string hfrow)
        {
            try
            {
                FillMst(model[0].Col15);
                //model[0].Col26 = "0";
                var tm = model.FirstOrDefault();
                DataTable dt = new DataTable();

                if (command.Contains("Total Invoices")) { command = "Total Invoices"; sgen.SetSession(MyGuid, "inv_list_comm", command); }
                else if (command.Contains("Total Recurring")) { command = "Total Recurring"; sgen.SetSession(MyGuid, "inv_list_comm", command); }
                else if (command.Contains("Active Recurring")) { command = "Active Recurring"; sgen.SetSession(MyGuid, "inv_list_comm", command); }
                else if (command.Contains("Expired Recurring")) { command = "Expired Recurring"; sgen.SetSession(MyGuid, "inv_list_comm", command); }
                //else if (command.Contains("Total Drafts")) { command = "Total Drafts"; sgen.SetSession(MyGuid, "inv_list_comm", command); }
                if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if ((command == "Total Invoices") || (command == "Total Recurring") || (command == "Active Recurring") || (command == "Expired Recurring"))
                {
                    model = inv_list_dt(model, command);
                }
                else if (command == "EDIT")
                {
                    string fstr = model[sgen.Make_int(hfrow)].Col26;

                    if (model[0].Col30 == "Total Invoices")
                    {
                        return RedirectToAction("srv_inv", "hall", new { m_id = EncryptDecrypt.Encrypt(model[0].Col15), mid = EncryptDecrypt.Encrypt("42002.1"), fstr = "EDIT" + EncryptDecrypt.Encrypt(fstr) });
                    }
                    if (model[0].Col30 == "Total Recurring")
                    {
                        return RedirectToAction("rcr_inv", "hall", new { m_id = EncryptDecrypt.Encrypt(model[0].Col15), mid = EncryptDecrypt.Encrypt("42002.2"), fstr = "EDIT" + EncryptDecrypt.Encrypt(fstr) });
                    }
                    if (model[0].Col30 == "Active Recurring")
                    {
                        return RedirectToAction("rcr_inv", "hall", new { m_id = EncryptDecrypt.Encrypt(model[0].Col15), mid = EncryptDecrypt.Encrypt("42002.2"), fstr = "EDIT" + EncryptDecrypt.Encrypt(fstr) });
                    }
                    if (model[0].Col30 == "Expired Recurring")
                    {
                        return RedirectToAction("rcr_inv", "hall", new { m_id = EncryptDecrypt.Encrypt(model[0].Col15), mid = EncryptDecrypt.Encrypt("42002.2"), fstr = "EDIT" + EncryptDecrypt.Encrypt(fstr) });
                    }
                    //if (model[0].Col30 == "Total Drafts")
                    //{
                    //    return RedirectToAction("srv_inv", "hall", new { m_id = EncryptDecrypt.Encrypt(model[0].Col15), mid = EncryptDecrypt.Encrypt(model[0].Col14), fstr = "EDIT" + EncryptDecrypt.Encrypt(fstr) });
                    //}
                }
                else if (command == "VIEW")
                {
                    string fstr = model[sgen.Make_int(hfrow)].Col26;
                    if (model[0].Col30 == "Total Invoices")
                    {
                        return RedirectToAction("srv_inv", "hall", new { m_id = EncryptDecrypt.Encrypt(model[0].Col15), mid = EncryptDecrypt.Encrypt("42002.1"), fstr = "VIEW" + EncryptDecrypt.Encrypt(fstr) });
                    }
                    if (model[0].Col30 == "Total Recurring")
                    {
                        return RedirectToAction("rcr_inv", "hall", new { m_id = EncryptDecrypt.Encrypt(model[0].Col15), mid = EncryptDecrypt.Encrypt("42002.2"), fstr = "VIEW" + EncryptDecrypt.Encrypt(fstr) });
                    }
                    if (model[0].Col30 == "Active Recurring")
                    {
                        return RedirectToAction("rcr_inv", "hall", new { m_id = EncryptDecrypt.Encrypt(model[0].Col15), mid = EncryptDecrypt.Encrypt("42002.2"), fstr = "VIEW" + EncryptDecrypt.Encrypt(fstr) });
                    }
                    if (model[0].Col30 == "Expired Recurring")
                    {
                        return RedirectToAction("rcr_inv", "hall", new { m_id = EncryptDecrypt.Encrypt(model[0].Col15), mid = EncryptDecrypt.Encrypt("42002.2"), fstr = "VIEW" + EncryptDecrypt.Encrypt(fstr) });
                    }
                    //if (model[0].Col30 == "Total Drafts")
                    //{
                    //    return RedirectToAction("mom", "hall", new { m_id = EncryptDecrypt.Encrypt(model[0].Col15), mid = EncryptDecrypt.Encrypt(model[0].Col14), fstr = "VIEW" + EncryptDecrypt.Encrypt(fstr) });
                    //}
                }

            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region repos_cat
        public ActionResult repos_cat()
        {
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            FillMst(MyGuid);
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            ViewBag.scripCall = "enableForm();";
            model[0].Col9 = "KNOWLEDGE REPOSITORY";
            model[0].Col10 = "enx_tab2";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "WGT";
            List<SelectListItem> mod1 = new List<SelectListItem>();
            List<SelectListItem> mod2 = new List<SelectListItem>();
            List<SelectListItem> mod3 = new List<SelectListItem>();
            List<SelectListItem> mod4 = new List<SelectListItem>();
            List<SelectListItem> mod5 = new List<SelectListItem>();
            List<SelectListItem> mod6 = new List<SelectListItem>();
            TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.country(userCode, unitid_mst);
            mq = "SELECT L_area_Id,L_area_Name FROM Legislation_Area where status='true'";
            DataTable dtemp = new DataTable();
            dtemp = sgen.getdata(userCode, mq);
            if (dtemp.Rows.Count > 0)
            {
                foreach (DataRow dr in dtemp.Rows)
                {
                    mod3.Add(new SelectListItem { Value = dr["L_area_Id"].ToString(), Text = dr["L_area_Name"].ToString() });
                }
            }
            TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2;
            TempData[MyGuid + "_TList3"] = model[0].TList3 = mod3;
            TempData[MyGuid + "_TList4"] = model[0].TList4 = mod4;
            TempData[MyGuid + "_TList5"] = model[0].TList5 = mod5;
            TempData[MyGuid + "_TList6"] = model[0].TList6 = mod6;
            model[0].SelectedItems1 = new string[] { "" };
            model[0].SelectedItems2 = new string[] { "" };
            model[0].SelectedItems3 = new string[] { "" };
            model[0].SelectedItems4 = new string[] { "" };
            model[0].SelectedItems5 = new string[] { "" };
            model[0].SelectedItems6 = new string[] { "" };
            return View(model);
        }
        [HttpPost]
        public ActionResult repos_cat(List<Tmodelmain> model, string command, string mid)
        {
            try
            {
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();
                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
                if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                List<SelectListItem> mod2 = (List<SelectListItem>)TempData[MyGuid + "_TList2"];
                TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2;
                if (model[0].SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
                List<SelectListItem> mod3 = (List<SelectListItem>)TempData[MyGuid + "_TList3"];
                TempData[MyGuid + "_TList3"] = model[0].TList3 = mod3;
                if (model[0].SelectedItems3 == null) model[0].SelectedItems3 = new string[] { "" };
                List<SelectListItem> mod4 = (List<SelectListItem>)TempData[MyGuid + "_TList4"];
                TempData[MyGuid + "_TList4"] = model[0].TList4 = mod4;
                if (model[0].SelectedItems4 == null) model[0].SelectedItems4 = new string[] { "" };
                List<SelectListItem> mod5 = (List<SelectListItem>)TempData[MyGuid + "_TList5"];
                TempData[MyGuid + "_TList5"] = model[0].TList5 = mod5;
                if (model[0].SelectedItems5 == null) model[0].SelectedItems5 = new string[] { "" };
                List<SelectListItem> mod6 = (List<SelectListItem>)TempData[MyGuid + "_TList6"];
                TempData[MyGuid + "_TList6"] = model[0].TList6 = mod6;
                if (model[0].SelectedItems6 == null) model[0].SelectedItems6 = new string[] { "" };
                if (command == "New")
                {
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command == "ddl_country_SelectedIndexChanged")
                {
                    ViewBag.scripCall = "enableForm();";
                    if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                    if (model[0].SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
                    if (model[0].SelectedItems3 == null) model[0].SelectedItems3 = new string[] { "" };
                    if (model[0].SelectedItems4 == null) model[0].SelectedItems4 = new string[] { "" };
                    if (model[0].SelectedItems5 == null) model[0].SelectedItems5 = new string[] { "" };
                    if (model[0].SelectedItems6 == null) model[0].SelectedItems6 = new string[] { "" };
                    #region state                   
                    mq = "select distinct state_name,state_gst_code from country_state where alpha_2='" + model[0].SelectedItems1.FirstOrDefault() + "' and state_name!='-' order by state_name";
                    DataTable dt = sgen.getdata(userCode, mq);
                    if (dt.Rows.Count > 0)
                    {
                        foreach (DataRow dr1 in dt.Rows)
                        {
                            mod2.Add(new SelectListItem { Text = dr1["state_name"].ToString(), Value = dr1["state_gst_code"].ToString() });
                        }
                    }
                    TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2;
                    #endregion
                }
                else if (command == "ddl_legislationarea_SelectedIndexChanged")
                {
                    ViewBag.scripCall = "enableForm();";
                    if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                    if (model[0].SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
                    if (model[0].SelectedItems3 == null) model[0].SelectedItems3 = new string[] { "" };
                    if (model[0].SelectedItems4 == null) model[0].SelectedItems4 = new string[] { "" };
                    if (model[0].SelectedItems5 == null) model[0].SelectedItems5 = new string[] { "" };
                    if (model[0].SelectedItems6 == null) model[0].SelectedItems6 = new string[] { "" };

                    int l_area_id = Convert.ToInt32(model[0].SelectedItems3.FirstOrDefault());

                    DataTable dt3 = new DataTable();
                    dt3 = sgen.getdata(userCode, "select sl_area_id, sl_area_name from sub_Legislation_Area where l_area_id='" + l_area_id + "' and status='" + "true" + "'");
                    if (dt3.Rows.Count > 0)
                    {
                        foreach (DataRow dr1 in dt3.Rows)
                        {
                            mod4.Add(new SelectListItem { Text = dr1["sl_area_name"].ToString(), Value = dr1["sl_area_id"].ToString() });
                        }
                        TempData[MyGuid + "_TList4"] = model[0].TList4 = mod4;
                        if (model[0].SelectedItems4.FirstOrDefault() == "")
                        {
                            DataTable dt2 = new DataTable();
                            dt2 = sgen.getdata(userCode, "select kr.kr_id,kr.country_id,cnt.country_name,kr.state_id,st.state_name,kr.city,kr.l_area_id,la.l_area_name,kr.sl_area_id,sl.sl_area_name,kr.act_id,noa.act_name,kr.rule_id,nor.rule_name,kr.section,kr.rule_no,kr.form_no,kr.af_id,kr.af_name,kr.due_on,kr.freq_id,kr.freq_name,kr.decription,kr.sta_auth_id,kr.sta_auth_name,kr.Ctype_id,kr.ctype_name,kr.cost_of_non_compliance,kr.cost_text,kr.crit_id,kr.crit_name,kr.prior_id,kr.prior_name from knowledge_repository_details kr join (select distinct country_name,alpha_2 from country_state) cnt,(select distinct state_name,state_gst_code from country_state) st, name_of_act noa,legislation_area la,sub_legislation_area sl,name_of_rule nor where kr.country_id=cnt.alpha_2 and kr.state_id=st.state_gst_code and kr.act_id=noa.act_id and kr.Rule_id=nor.rule_id and kr.L_area_id=la.l_area_id and kr.SL_area_id=sl.sl_area_id and kr.country_id='" + model[0].SelectedItems1.FirstOrDefault() + "' and kr.state_id='" + model[0].SelectedItems2.FirstOrDefault() + "' and legislation_area.l_area_id='" + model[0].SelectedItems3.FirstOrDefault() + "'");
                            if (dt2.Rows.Count > 0)
                            {
                                model = new List<Tmodelmain>();
                                for (int i = 0; i < dt2.Rows.Count; i++)
                                {
                                    Tmodelmain tmm = new Tmodelmain();
                                    tmm.Col17 = dt2.Rows[i]["Country_name"].ToString();
                                    tmm.Col18 = dt2.Rows[i]["country_id"].ToString();
                                    tmm.Col19 = dt2.Rows[i]["State_name"].ToString();
                                    tmm.Col20 = dt2.Rows[i]["state_id"].ToString();
                                    tmm.Col21 = dt2.Rows[i]["L_area_name"].ToString();
                                    tmm.Col22 = dt2.Rows[i]["l_area_id"].ToString();
                                    tmm.Col23 = dt2.Rows[i]["SL_area_name"].ToString();
                                    tmm.Col24 = dt2.Rows[i]["sl_area_id"].ToString();
                                    tmm.Col25 = dt2.Rows[i]["Act_name"].ToString();
                                    tmm.Col26 = dt2.Rows[i]["act_id"].ToString();
                                    tmm.Col27 = dt2.Rows[i]["Rule_name"].ToString();
                                    tmm.Col28 = dt2.Rows[i]["rule_id"].ToString();
                                    tmm.Chk1 = tm.Chk1;
                                    tmm.Chk2 = tm.Chk2;
                                    tmm.Col9 = tm.Col9;
                                    tmm.Col10 = tm.Col10;
                                    tmm.Col11 = tm.Col11;
                                    tmm.Col12 = tm.Col12;
                                    tmm.Col13 = tm.Col13;
                                    tmm.Col100 = tm.Col100;
                                    tmm.Col14 = tm.Col14;
                                    tmm.Col15 = tm.Col15;
                                    tmm.TList1 = tm.TList1;
                                    tmm.TList2 = tm.TList2;
                                    tmm.TList3 = tm.TList3;
                                    tmm.TList4 = tm.TList4;
                                    tmm.TList5 = tm.TList5;
                                    tmm.TList6 = tm.TList6;
                                    tmm.SelectedItems1 = tm.SelectedItems1;
                                    tmm.SelectedItems2 = tm.SelectedItems2;
                                    tmm.SelectedItems3 = tm.SelectedItems3;
                                    tmm.SelectedItems4 = tm.SelectedItems4;
                                    tmm.SelectedItems5 = tm.SelectedItems5;
                                    tmm.SelectedItems6 = tm.SelectedItems6;
                                    model.Add(tmm);
                                }
                            }
                        }
                        else
                        {
                            //category_list_repeater.DataSource = null;
                            //category_list_repeater.DataSourceID = null;
                            //category_list_repeater.DataBind();
                        }
                    }
                }
                else if (command == "ddl_state_SelectedIndexChanged")
                {
                    ViewBag.scripCall = "enableForm();";
                    if (model[0].SelectedItems3.FirstOrDefault() == "")
                    {
                        DataTable dt2 = new DataTable();
                        dt2 = sgen.getdata(userCode, "select kr.kr_id,kr.country_id,cnt.country_name,kr.state_id,st.state_name,kr.city,kr.l_area_id,la.l_area_name,kr.sl_area_id,sl.sl_area_name,kr.act_id,noa.act_name,kr.rule_id,nor.rule_name,kr.section,kr.rule_no,kr.form_no,kr.af_id,kr.af_name,kr.due_on,kr.freq_id,kr.freq_name,kr.decription,kr.sta_auth_id,kr.sta_auth_name,kr.Ctype_id,kr.ctype_name,kr.cost_of_non_compliance,kr.cost_text,kr.crit_id,kr.crit_name,kr.prior_id,kr.prior_name from knowledge_repository_details kr join (select distinct country_name,alpha_2 from country_state) cnt,(select distinct state_name,state_gst_code from country_state) st, name_of_act noa,legislation_area la,sub_legislation_area sl,name_of_rule nor where kr.country_id=cnt.alpha_2 and kr.state_id=st.state_gst_code and kr.act_id=noa.act_id and kr.Rule_id=nor.rule_id and kr.L_area_id=la.l_area_id and kr.SL_area_id=sl.sl_area_id and kr.country_id='" + model[0].SelectedItems1.FirstOrDefault() + "' and kr.state_id='" + model[0].SelectedItems2.FirstOrDefault() + "'");
                        if (dt2.Rows.Count > 0)
                        {
                            if (dt2.Rows.Count > 0)
                            {
                                model = new List<Tmodelmain>();
                                for (int i = 0; i < dt2.Rows.Count; i++)
                                {
                                    Tmodelmain tmm = new Tmodelmain();
                                    tmm.Col17 = dt2.Rows[i]["Country_name"].ToString();
                                    tmm.Col18 = dt2.Rows[i]["country_id"].ToString();
                                    tmm.Col19 = dt2.Rows[i]["State_name"].ToString();
                                    tmm.Col20 = dt2.Rows[i]["state_id"].ToString();
                                    tmm.Col21 = dt2.Rows[i]["L_area_name"].ToString();
                                    tmm.Col22 = dt2.Rows[i]["l_area_id"].ToString();
                                    tmm.Col23 = dt2.Rows[i]["SL_area_name"].ToString();
                                    tmm.Col24 = dt2.Rows[i]["sl_area_id"].ToString();
                                    tmm.Col25 = dt2.Rows[i]["Act_name"].ToString();
                                    tmm.Col26 = dt2.Rows[i]["act_id"].ToString();
                                    tmm.Col27 = dt2.Rows[i]["Rule_name"].ToString();
                                    tmm.Col28 = dt2.Rows[i]["rule_id"].ToString();
                                    tmm.Chk1 = tm.Chk1;
                                    tmm.Chk2 = tm.Chk2;
                                    tmm.Col9 = tm.Col9;
                                    tmm.Col10 = tm.Col10;
                                    tmm.Col11 = tm.Col11;
                                    tmm.Col12 = tm.Col12;
                                    tmm.Col13 = tm.Col13;
                                    tmm.Col100 = tm.Col100;
                                    tmm.Col14 = tm.Col14;
                                    tmm.Col15 = tm.Col15;
                                    tmm.TList1 = tm.TList1;
                                    tmm.TList2 = tm.TList2;
                                    tmm.TList3 = tm.TList3;
                                    tmm.TList4 = tm.TList4;
                                    tmm.TList6 = tm.TList6;
                                    tmm.SelectedItems1 = tm.SelectedItems1;
                                    tmm.SelectedItems2 = tm.SelectedItems2;
                                    tmm.SelectedItems3 = tm.SelectedItems3;
                                    tmm.SelectedItems4 = tm.SelectedItems4;
                                    tmm.SelectedItems5 = tm.SelectedItems5;
                                    tmm.SelectedItems6 = tm.SelectedItems6;
                                    model.Add(tmm);
                                }
                            }
                        }
                        //else
                        //{
                        //    //category_list_repeater.DataSource = null;
                        //    //category_list_repeater.DataSourceID = null;
                        //    //category_list_repeater.DataBind();
                        //}
                    }
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {

                    var tmodel = model.FirstOrDefault();
                    string currdate = "";
                    DataTable dtstr = new DataTable();
                    dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                    currdate = sgen.server_datetime(userCode);

                    #region dtstr
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        isedit = true;
                        vch_num = model[0].Col16;
                    }
                    else
                    {
                        isedit = false;
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        model[0].Col16 = vch_num;
                    }
                    DataRow dr = dtstr.NewRow();
                    dr["rec_id"] = "0";
                    dr["type"] = model[0].Col12;
                    dr["vch_num"] = vch_num.Trim();
                    dr["vch_date"] = currdate;
                    dr["col5"] = model[0].SelectedItems1.FirstOrDefault(); // employee 
                    dr["col6"] = model[0].SelectedItems2.FirstOrDefault(); //  delegatee
                    dr["col7"] = model[0].SelectedItems3.FirstOrDefault(); // wflow
                    dr["date1"] = sgen.Make_date_S(model[0].Col17); // from date
                    dr["date2"] = sgen.Make_date_S(model[0].Col18); // to date
                    dr = getsave(currdate, dr, model, isedit);
                    dtstr.Rows.Add(dr);

                    #endregion
                    bool Result = sgen.Update_data(userCode, dtstr, model[0].Col10.Trim(), tmodel.Col8, isedit);
                    if (Result == true)
                    {
                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col10 = tm.Col10,
                            Col11 = tm.Col11,
                            Col12 = tm.Col12,
                            Col13 = "Save",
                            Col100 = "Save & New",
                            Col121 = "S",
                            Col122 = "<u>S</u>ave",
                            Col123 = "Save & Ne<u>w</u>",
                            Col14 = tm.Col14,
                            Col15 = tm.Col15,
                            Col9 = tm.Col9,
                            TList1 = mod1,
                            TList2 = mod2,
                            SelectedItems1 = new string[] { "" },
                            SelectedItems2 = new string[] { "" },
                            SelectedItems3 = new string[] { "" },
                        });
                        if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                        {
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                        {
                            try
                            {
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                            }
                            catch (Exception ex) { }
                        }
                    }
                    else
                    {
                        ViewBag.scripCall = "showmsgJS(1, 'Record Not Saved', 2);";
                    }
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region add_kr
        public ActionResult add_kr()
        {
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            FillMst(MyGuid);
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            model[0].Col9 = "ADD KNOWLEDGE REPOSITORY";
            model[0].Col10 = "kc_tab";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "AKR";
            List<SelectListItem> mod1 = new List<SelectListItem>();
            List<SelectListItem> mod2 = new List<SelectListItem>();
            List<SelectListItem> mod3 = new List<SelectListItem>();
            List<SelectListItem> mod4 = new List<SelectListItem>();
            List<SelectListItem> mod5 = new List<SelectListItem>();
            List<SelectListItem> mod6 = new List<SelectListItem>();
            List<SelectListItem> mod7 = new List<SelectListItem>();
            List<SelectListItem> mod8 = new List<SelectListItem>();
            List<SelectListItem> mod9 = new List<SelectListItem>();
            List<SelectListItem> mod10 = new List<SelectListItem>();
            List<SelectListItem> mod11 = new List<SelectListItem>();
            List<SelectListItem> mod12 = new List<SelectListItem>();
            List<SelectListItem> mod13 = new List<SelectListItem>();
            TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
            TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2;
            TempData[MyGuid + "_TList3"] = model[0].TList3 = mod3;
            TempData[MyGuid + "_TList4"] = model[0].TList4 = mod4;
            TempData[MyGuid + "_TList5"] = model[0].TList5 = mod5;
            TempData[MyGuid + "_TList6"] = model[0].TList6 = mod6;
            TempData[MyGuid + "_TList7"] = model[0].TList7 = mod7;
            TempData[MyGuid + "_TList8"] = model[0].TList8 = mod8;
            TempData[MyGuid + "_TList9"] = model[0].TList9 = mod9;
            TempData[MyGuid + "_TList10"] = model[0].TList10 = mod10;
            TempData[MyGuid + "_TList11"] = model[0].TList11 = mod11;
            TempData[MyGuid + "_TList12"] = model[0].TList12 = mod12;
            TempData[MyGuid + "_TList13"] = model[0].TList13 = mod13;
            model[0].SelectedItems1 = new string[] { "" };
            model[0].SelectedItems2 = new string[] { "" };
            model[0].SelectedItems3 = new string[] { "" };
            model[0].SelectedItems4 = new string[] { "" };
            model[0].SelectedItems5 = new string[] { "" };
            model[0].SelectedItems6 = new string[] { "" };
            model[0].SelectedItems7 = new string[] { "" };
            model[0].SelectedItems8 = new string[] { "" };
            model[0].SelectedItems9 = new string[] { "" };
            model[0].SelectedItems10 = new string[] { "" };
            model[0].SelectedItems11 = new string[] { "" };
            model[0].SelectedItems12 = new string[] { "" };
            model[0].SelectedItems13 = new string[] { "" };

            if (Request.QueryString["fstr"] != null)
            {
                string fstr = "";
                if (Request.QueryString["fstr"].StartsWith("EDIT"))
                {
                    fstr = Request.QueryString["fstr"].ToString().Replace("EDIT", "").Trim();
                    sgen.SetSession(MyGuid, "SSEEKVAL", fstr);
                    CallbackFun("EDIT", "N", "add_kr", "hall", model);
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                    ViewBag.scripCall = "enableForm();";
                }
                if (Request.QueryString["fstr"].StartsWith("VIEW"))
                {
                    fstr = Request.QueryString["fstr"].ToString().Replace("VIEW", "").Trim();
                    sgen.SetSession(MyGuid, "SSEEKVAL", fstr);
                    CallbackFun("VIEW", "N", "add_kr", "hall", model);
                    ViewBag.vnew = "";
                    ViewBag.vedit = "";
                    ViewBag.vsave = "disabled='disabled'";
                    ViewBag.vsavenew = "disabled='disabled'";
                    ViewBag.scripCall = "disableForm();";
                }
            }
            return View(model);
        }
        public List<Tmodelmain> new_add_kr(List<Tmodelmain> model)
        {
            model = getnew(model);
            var tm = model.FirstOrDefault();
            #region Dropdwon
            List<SelectListItem> mod1 = new List<SelectListItem>();
            List<SelectListItem> mod2 = new List<SelectListItem>();
            List<SelectListItem> mod3 = new List<SelectListItem>();
            List<SelectListItem> mod4 = new List<SelectListItem>();
            List<SelectListItem> mod5 = new List<SelectListItem>();
            List<SelectListItem> mod6 = new List<SelectListItem>();
            List<SelectListItem> mod7 = new List<SelectListItem>();
            List<SelectListItem> mod8 = new List<SelectListItem>();
            List<SelectListItem> mod9 = new List<SelectListItem>();
            List<SelectListItem> mod10 = new List<SelectListItem>();
            List<SelectListItem> mod11 = new List<SelectListItem>();
            List<SelectListItem> mod12 = new List<SelectListItem>();
            List<SelectListItem> mod13 = new List<SelectListItem>();
            TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.country(userCode, unitid_mst);
            TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2;
            TempData[MyGuid + "_TList3"] = model[0].TList3 = mod3;
            TempData[MyGuid + "_TList4"] = model[0].TList4 = mod4 = cmd_Fun.legislationstype(userCode, unitid_mst);
            TempData[MyGuid + "_TList5"] = model[0].TList5 = mod5;
            TempData[MyGuid + "_TList6"] = model[0].TList6 = mod6 = cmd_Fun.act_name(userCode, unitid_mst);
            TempData[MyGuid + "_TList7"] = model[0].TList7 = mod7 = cmd_Fun.rule_name(userCode, unitid_mst);
            TempData[MyGuid + "_TList8"] = model[0].TList8 = mod8;
            TempData[MyGuid + "_TList9"] = model[0].TList9 = mod9 = cmd_Fun.freqtype(userCode, unitid_mst);
            TempData[MyGuid + "_TList10"] = model[0].TList10 = mod10 = cmd_Fun.statauttype(userCode, unitid_mst);
            TempData[MyGuid + "_TList11"] = model[0].TList11 = mod11 = cmd_Fun.compliancetype(userCode, unitid_mst);
            TempData[MyGuid + "_TList12"] = model[0].TList12 = mod12 = cmd_Fun.criticality(userCode, unitid_mst);
            TempData[MyGuid + "_TList13"] = model[0].TList13 = mod13 = cmd_Fun.priority(userCode, unitid_mst);
            #endregion
            return model;
        }
        [HttpPost]
        public ActionResult add_kr(List<Tmodelmain> model, string command, string mid, HttpPostedFileBase upd1)
        {
            try
            {
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();
                #region ddls
                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                List<SelectListItem> mod2 = (List<SelectListItem>)TempData[MyGuid + "_TList2"];
                //List<SelectListItem> mod3  = (List<SelectListItem>)TempData[MyGuid + "_TList3"];
                List<SelectListItem> mod4 = (List<SelectListItem>)TempData[MyGuid + "_TList4"];
                List<SelectListItem> mod5 = (List<SelectListItem>)TempData[MyGuid + "_TList5"];
                List<SelectListItem> mod6 = (List<SelectListItem>)TempData[MyGuid + "_TList6"];
                List<SelectListItem> mod7 = (List<SelectListItem>)TempData[MyGuid + "_TList7"];
                //List<SelectListItem> mod8  = (List<SelectListItem>)TempData[MyGuid + "_TList8"];
                List<SelectListItem> mod9 = (List<SelectListItem>)TempData[MyGuid + "_TList9"];
                List<SelectListItem> mod10 = (List<SelectListItem>)TempData[MyGuid + "_TList10"];
                List<SelectListItem> mod11 = (List<SelectListItem>)TempData[MyGuid + "_TList11"];
                List<SelectListItem> mod12 = (List<SelectListItem>)TempData[MyGuid + "_TList12"];
                List<SelectListItem> mod13 = (List<SelectListItem>)TempData[MyGuid + "_TList13"];
                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
                TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2;
                //TempData[MyGuid + "_TList3"] = model[0].TList3  = mod3 ;
                TempData[MyGuid + "_TList4"] = model[0].TList4 = mod4;
                TempData[MyGuid + "_TList5"] = model[0].TList5 = mod5;
                TempData[MyGuid + "_TList6"] = model[0].TList6 = mod6;
                TempData[MyGuid + "_TList7"] = model[0].TList7 = mod7;
                //TempData[MyGuid + "_TList8"] = model[0].TList8  = mod8 ;
                TempData[MyGuid + "_TList9"] = model[0].TList9 = mod9;
                TempData[MyGuid + "_TList10"] = model[0].TList10 = mod10;
                TempData[MyGuid + "_TList11"] = model[0].TList11 = mod11;
                TempData[MyGuid + "_TList12"] = model[0].TList12 = mod12;
                TempData[MyGuid + "_TList13"] = model[0].TList13 = mod13;
                if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                if (model[0].SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
                if (model[0].SelectedItems3 == null) model[0].SelectedItems3 = new string[] { "" };
                if (model[0].SelectedItems4 == null) model[0].SelectedItems4 = new string[] { "" };
                if (model[0].SelectedItems5 == null) model[0].SelectedItems5 = new string[] { "" };
                if (model[0].SelectedItems6 == null) model[0].SelectedItems6 = new string[] { "" };
                if (model[0].SelectedItems7 == null) model[0].SelectedItems7 = new string[] { "" };
                if (model[0].SelectedItems8 == null) model[0].SelectedItems8 = new string[] { "" };
                if (model[0].SelectedItems9 == null) model[0].SelectedItems9 = new string[] { "" };
                if (model[0].SelectedItems10 == null) model[0].SelectedItems10 = new string[] { "" };
                if (model[0].SelectedItems11 == null) model[0].SelectedItems11 = new string[] { "" };
                if (model[0].SelectedItems12 == null) model[0].SelectedItems12 = new string[] { "" };
                if (model[0].SelectedItems13 == null) model[0].SelectedItems13 = new string[] { "" };
                #endregion
                if (command == "New")
                {
                    model = new_add_kr(model);
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command == "ddl_country_SelectedIndexChanged")
                {
                    mod2 = new List<SelectListItem>();
                    model[0].TList2 = mod2;
                    model[0].SelectedItems2 = new string[] { "" };
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsavenew = "";
                    ViewBag.vsave = "";
                    #region state                   
                    mq = "select distinct state_name,state_gst_code from country_state where alpha_2='" + model[0].SelectedItems1.FirstOrDefault() + "' and state_name!='-' order by state_name";
                    DataTable dt = sgen.getdata(userCode, mq);
                    if (dt.Rows.Count > 0)
                    {
                        foreach (DataRow dr1 in dt.Rows)
                        {
                            mod2.Add(new SelectListItem { Text = dr1["state_name"].ToString(), Value = dr1["state_gst_code"].ToString() });
                        }
                    }
                    TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2;
                    #endregion
                }
                else if (command == "ddl_legislationarea_SelectedIndexChanged")
                {
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsavenew = "";
                    ViewBag.vsave = "";
                    mod5 = new List<SelectListItem>();
                    model[0].TList5 = mod5;
                    model[0].SelectedItems5 = new string[] { "" };
                    #region sub legis                   
                    mq = "select master_id,master_name from master_setting where classid='" + model[0].SelectedItems4.FirstOrDefault() + "' and type ='SLG' and client_unit_id='" + unitid_mst + "'";
                    DataTable dt = sgen.getdata(userCode, mq);
                    if (dt.Rows.Count > 0)
                    {
                        foreach (DataRow dr1 in dt.Rows)
                        {
                            mod5.Add(new SelectListItem { Text = dr1["master_name"].ToString(), Value = dr1["master_id"].ToString() });
                        }
                    }
                    TempData[MyGuid + "_TList5"] = model[0].TList5 = mod5;
                    #endregion
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {

                    var tmodel = model.FirstOrDefault();
                    string currdate = "";
                    DataTable dtstr = new DataTable();
                    dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                    currdate = sgen.server_datetime(userCode);
                    #region dtstr
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        isedit = true;
                        vch_num = model[0].Col16;
                    }
                    else
                    {
                        isedit = false;
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        model[0].Col16 = vch_num;
                    }
                    DataRow dr = dtstr.NewRow();
                    dr["rec_id"] = "0";
                    dr["type"] = model[0].Col12;
                    dr["vch_num"] = vch_num.Trim();
                    dr["vch_date"] = currdate;
                    dr["col1"] = model[0].Col17;//   Type Your City
                    dr["col2"] = model[0].Col18;//Section
                    dr["col3"] = model[0].Col19;//rule no
                    dr["col4"] = model[0].Col20;// Form No
                    dr["date1"] = sgen.Make_date_S(model[0].Col21);//due date
                    dr["col41"] = model[0].Col22;//description
                    dr["col5"] = model[0].Col23;//cost of non compliance
                    dr["col69"] = model[0].Col24;//cost in text
                    dr["col6"] = model[0].SelectedItems1.FirstOrDefault();
                    dr["col7"] = model[0].SelectedItems2.FirstOrDefault();
                    //dr["col8"] = model[0].SelectedItems3.FirstOrDefault();
                    dr["col9"] = model[0].SelectedItems4.FirstOrDefault();
                    dr["col10"] = model[0].SelectedItems5.FirstOrDefault();
                    dr["col11"] = model[0].SelectedItems6.FirstOrDefault();
                    dr["col12"] = model[0].SelectedItems7.FirstOrDefault();
                    dr["col13"] = model[0].SelectedItems9.FirstOrDefault();
                    dr["col14"] = model[0].SelectedItems10.FirstOrDefault();
                    dr["col15"] = model[0].SelectedItems11.FirstOrDefault();
                    dr["col16"] = model[0].SelectedItems12.FirstOrDefault();
                    dr["col17"] = model[0].SelectedItems13.FirstOrDefault();
                    dr = getsave(currdate, dr, model, isedit);
                    dtstr.Rows.Add(dr);
                    #endregion
                    bool Result = sgen.Update_data_fast1(userCode, dtstr, model[0].Col10.Trim(), tmodel.Col8, isedit);
                    if (Result == true)
                    {
                        #region attachment
                        DataTable dtfile = cmd_Fun.GetStructure(userCode, "file_tab");
                        string serverpath = Server.MapPath("~/Uploads/" + cg_com_name.Replace(" ", "") + "/");
                        //purchase Upload
                        try
                        {
                            HttpPostedFileBase file1 = upd1;
                            ctype1 = file1.ContentType;
                            fileName1 = file1.FileName;
                            path1 = clientid_mst + unitid_mst + userid_mst + currdate + "_" + fileName1;
                            encpath1 = sgen.Convert_Stringto64(path1).ToString();
                            finalpath1 = serverpath + encpath1;
                            file1.SaveAs(finalpath1);
                            filesave(model, currdate, dtfile, fileName1, encpath1, "AKR", ctype1, model[0].Col32, model[0].Col31, "", "");
                        }
                        catch (Exception ex) { }
                        if (dtfile.Rows.Count > 0)
                        {
                            bool res = sgen.Update_data_fast1(userCode, dtfile, "file_tab", "", false);
                        }
                        #endregion
                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col10 = tm.Col10,
                            Col11 = tm.Col11,
                            Col12 = tm.Col12,
                            Col13 = "Save",
                            Col100 = "Save & New",
                            Col121 = "S",
                            Col122 = "<u>S</u>ave",
                            Col123 = "Save & Ne<u>w</u>",
                            Col14 = tm.Col14,
                            Col15 = tm.Col15,
                            Col9 = tm.Col9,
                            TList1 = mod1,
                            TList2 = mod2,
                            //TList3  = mod3 ,
                            TList4 = mod4,
                            TList5 = mod5,
                            TList6 = mod6,
                            TList7 = mod7,
                            //TList8  = mod8 ,
                            TList9 = mod9,
                            TList10 = mod10,
                            TList11 = mod11,
                            TList12 = mod12,
                            TList13 = mod13,
                            SelectedItems1 = new string[] { "" },
                            SelectedItems2 = new string[] { "" },
                            SelectedItems3 = new string[] { "" },
                            SelectedItems4 = new string[] { "" },
                            SelectedItems5 = new string[] { "" },
                            SelectedItems6 = new string[] { "" },
                            SelectedItems7 = new string[] { "" },
                            SelectedItems8 = new string[] { "" },
                            SelectedItems9 = new string[] { "" },
                            SelectedItems10 = new string[] { "" },
                            SelectedItems11 = new string[] { "" },
                            SelectedItems12 = new string[] { "" },
                            SelectedItems13 = new string[] { "" },
                        });
                        if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                        {
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                        {
                            try
                            {
                                //model = new_rcard(model);
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                            }
                            catch (Exception ex) { }
                        }
                    }
                    else
                    {
                        ViewBag.scripCall = "showmsgJS(1, 'Record Not Saved', 2);";
                    }
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region sub_legis
        public ActionResult sub_legis()
        {
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            FillMst(MyGuid);
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            model[0].Col9 = "SUB LEGISLATION AREA";
            model[0].Col10 = "master_setting";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "SLG";
            List<SelectListItem> md1 = new List<SelectListItem>();
            TempData[MyGuid + "_TList1"] = model[0].TList1 = md1;
            //  TempData[MyGuid + "_TList2"] = model[0].TList2 = md1;
            model[0].SelectedItems1 = new string[] { "" };
            //  model[0].SelectedItems2 = new string[] { "" };
            return View(model);
        }
        public List<Tmodelmain> new_sub_legis(List<Tmodelmain> model)
        {
            model = getnew(model);
            var tm = model.FirstOrDefault();
            #region Dropdwon
            List<SelectListItem> mod1 = new List<SelectListItem>();
            //     List<SelectListItem> mod2 = new List<SelectListItem>();
            TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.legislationstype(userCode, unitid_mst);
            //TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2 = cmd_Fun.transportmode(userCode, unitid_mst);
            model[0].SelectedItems1 = new string[] { "" };
            // model[0].SelectedItems2 = new string[] { "" };
            #endregion
            return model;
        }
        [HttpPost]
        public ActionResult sub_legis(List<Tmodelmain> model, string command, string mid)
        {
            try
            {
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();
                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
                if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                if (command == "New")
                {
                    model = new_sub_legis(model);
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {

                    var tmodel = model.FirstOrDefault();
                    string currdate = "";
                    DataTable dtstr = new DataTable();
                    dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                    currdate = sgen.server_datetime(userCode);

                    #region dtstr
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        isedit = true;
                        vch_num = model[0].Col16;
                        mq1 = " and vch_num <>'" + model[0].Col16.Trim() + "'";

                    }
                    else
                    {
                        isedit = false;
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        model[0].Col16 = vch_num;
                    }
                    DataTable dtch = sgen.getdata(userCode, "select client_id,client_unit_id,master_name from " + model[0].Col10.Trim() + " a where upper(master_name)='" + model[0].Col27.Trim().ToString().ToUpper() + "' " +
                      "and type in ('" + model[0].Col12 + "','DD" + model[0].Col12 + "') and client_id='" + clientid_mst + "'" + mq1 + "");
                    if (dtch.Rows.Count > 0)
                    {
                        ViewBag.scripCall = "showmsgJS(1, 'Name Already Exists in clientid- " + dtch.Rows[0]["client_id"].ToString() + " and unitid- " + dtch.Rows[0]["client_unit_id"].ToString() + "', 2);";
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                        return View(model);
                    }
                    DataRow dr = dtstr.NewRow();
                    dr["rec_id"] = "0";
                    dr["type"] = model[0].Col12;
                    dr["vch_num"] = vch_num.Trim();
                    dr["vch_date"] = currdate;
                    dr["master_id"] = vch_num.Substring(3, 3);
                    dr["master_name"] = System.Threading.Thread.CurrentThread.CurrentCulture.TextInfo.ToTitleCase(model[0].Col17);
                    dr["classid"] = model[0].SelectedItems1.FirstOrDefault();
                    if (isedit)
                    {
                        dr["master_entby"] = model[0].Col3;
                        dr["master_entdate"] = model[0].Col4;
                        dr["client_id"] = model[0].Col1;
                        dr["client_unit_id"] = model[0].Col2;
                        //dr["rec_id"] = model[0].Col7;
                        dr["master_editby"] = userid_mst;
                        dr["master_editdate"] = currdate;
                    }
                    else
                    {
                        dr["master_entby"] = userid_mst;
                        dr["master_entdate"] = currdate;
                        dr["master_editby"] = "-";
                        dr["master_editdate"] = currdate;
                        dr["client_id"] = clientid_mst;
                        dr["client_unit_id"] = unitid_mst;
                    }
                    dtstr.Rows.Add(dr);

                    #endregion
                    bool Result = sgen.Update_data(userCode, dtstr, model[0].Col10.Trim(), tmodel.Col8, isedit);
                    if (Result == true)
                    {
                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col10 = tm.Col10,
                            Col11 = tm.Col11,
                            Col12 = tm.Col12,
                            Col13 = "Save",
                            Col100 = "Save & New",
                            Col121 = "S",
                            Col122 = "<u>S</u>ave",
                            Col123 = "Save & Ne<u>w</u>",
                            Col14 = tm.Col14,
                            Col15 = tm.Col15,
                            Col9 = tm.Col9,
                            TList1 = mod1,
                            //  TList2 = mod2,
                            SelectedItems1 = new string[] { "" },
                            //  SelectedItems2 = new string[] { "" },
                        });
                        if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                        {
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                        {
                            try
                            {
                                model = new_sub_legis(model);
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                            }
                            catch (Exception ex) { }
                        }
                    }
                    else
                    {
                        ViewBag.scripCall = "showmsgJS(1, 'Record Not Saved', 2);";
                    }
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region list_kr
        public ActionResult list_kr()
        {
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            FillMst(MyGuid);
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            ViewBag.scripCall = "enableForm();";
            model[0].Col9 = "LIST OF KNOWLEDGE REPOSITORY";
            mq = "select (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as EDIT_Details,to_char(a.vch_date,'" + sgen.Getsqldateformat() + "') as Doc_date,cs.country_name,st.state_name,a.col1 as city_name,lg.master_NAME AS Legislation_area,slg.master_NAME AS sub_Legislation_area,ac.master_NAME AS act_name,rn.master_NAME AS rule_name,a.col2 as section,a.col3 as rule_no,a.col4 as form_no,fr.master_NAME AS frequency,to_char(a.date1,'" + sgen.Getsqldateformat() + "') as due_date,SA.master_NAME as statutory_auth,ct.master_NAME as compliance_type,a.col41 as description,a.col5 as cost_of_no_comp,a.col69 as cost_in_text,cr.master_NAME as criticality,pr.master_NAME as priority from kc_tab a inner join (select distinct alpha_2,country_name from country_state) cs on a.col6=cs.alpha_2 inner join (select distinct state_name,state_gst_code from country_state) st on a.col7=st.state_gst_code inner join master_setting lg on lg.master_id = a.col9 and lg.type = 'LEA' and find_in_set(lg.client_unit_id, a.client_unit_id)= 1 inner join master_setting slg on slg.master_id = a.col10 and slg.type = 'SLG' and find_in_set(slg.client_unit_id, a.client_unit_id)= 1 inner join master_setting ac on ac.master_id = a.col11 and ac.type = 'NAC' and find_in_set(ac.client_unit_id, a.client_unit_id)= 1 inner join master_setting rn on rn.master_id = a.col12 and rn.type = 'RNM' and find_in_set(rn.client_unit_id, a.client_unit_id)= 1 inner join master_setting fr on fr.master_id = a.col13 and fr.type = 'FRE' and find_in_set(fr.client_unit_id, a.client_unit_id)= 1 inner join master_setting sa on sa.master_id = a.col14 and sa.type = 'SAN' and find_in_set(sa.client_unit_id, a.client_unit_id)= 1 inner join master_setting ct on ct.master_id = a.col15 and ct.type = 'COT' and find_in_set(ct.client_unit_id, a.client_unit_id)= 1 inner join master_setting cr on cr.master_id = a.col16 and cr.type = 'CMT' and find_in_set(cr.client_unit_id, a.client_unit_id)= 1 inner join master_setting pr on pr.master_id = a.col17 and pr.type = 'PMT' and find_in_set(pr.client_unit_id, a.client_unit_id)= 1 where a.type='AKR' and a.client_unit_id='" + unitid_mst + "'";
            sgen.SetSession(MyGuid, "gridq_demogrid", mq);
            return View(model);
        }
        [HttpPost]
        public ActionResult list_kr(List<Tmodelmain> model, string command, string mid)
        {
            try
            {
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();
                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
                if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                List<SelectListItem> mod2 = (List<SelectListItem>)TempData[MyGuid + "_TList2"];
                TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2;
                if (model[0].SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
                List<SelectListItem> mod3 = (List<SelectListItem>)TempData[MyGuid + "_TList3"];
                TempData[MyGuid + "_TList3"] = model[0].TList3 = mod3;
                if (model[0].SelectedItems3 == null) model[0].SelectedItems3 = new string[] { "" };
                List<SelectListItem> mod4 = (List<SelectListItem>)TempData[MyGuid + "_TList4"];
                TempData[MyGuid + "_TList4"] = model[0].TList4 = mod4;
                if (model[0].SelectedItems4 == null) model[0].SelectedItems4 = new string[] { "" };
                List<SelectListItem> mod5 = (List<SelectListItem>)TempData[MyGuid + "_TList5"];
                TempData[MyGuid + "_TList5"] = model[0].TList5 = mod5;
                if (model[0].SelectedItems5 == null) model[0].SelectedItems5 = new string[] { "" };
                List<SelectListItem> mod6 = (List<SelectListItem>)TempData[MyGuid + "_TList6"];
                TempData[MyGuid + "_TList6"] = model[0].TList6 = mod6;
                if (model[0].SelectedItems6 == null) model[0].SelectedItems6 = new string[] { "" };
                if (command == "New")
                {
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command == "ddl_country_SelectedIndexChanged")
                {
                    ViewBag.scripCall = "enableForm();";
                    if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                    if (model[0].SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
                    if (model[0].SelectedItems3 == null) model[0].SelectedItems3 = new string[] { "" };
                    if (model[0].SelectedItems4 == null) model[0].SelectedItems4 = new string[] { "" };
                    if (model[0].SelectedItems5 == null) model[0].SelectedItems5 = new string[] { "" };
                    if (model[0].SelectedItems6 == null) model[0].SelectedItems6 = new string[] { "" };
                    #region state                   
                    mq = "select distinct state_name,state_gst_code from country_state where alpha_2='" + model[0].SelectedItems1.FirstOrDefault() + "' and state_name!='-' order by state_name";
                    DataTable dt = sgen.getdata(userCode, mq);
                    if (dt.Rows.Count > 0)
                    {
                        foreach (DataRow dr1 in dt.Rows)
                        {
                            mod2.Add(new SelectListItem { Text = dr1["state_name"].ToString(), Value = dr1["state_gst_code"].ToString() });
                        }
                    }
                    TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2;
                    #endregion
                }
                else if (command == "ddl_legislationarea_SelectedIndexChanged")
                {
                    ViewBag.scripCall = "enableForm();";
                    if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                    if (model[0].SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
                    if (model[0].SelectedItems3 == null) model[0].SelectedItems3 = new string[] { "" };
                    if (model[0].SelectedItems4 == null) model[0].SelectedItems4 = new string[] { "" };
                    if (model[0].SelectedItems5 == null) model[0].SelectedItems5 = new string[] { "" };
                    if (model[0].SelectedItems6 == null) model[0].SelectedItems6 = new string[] { "" };

                    int l_area_id = Convert.ToInt32(model[0].SelectedItems3.FirstOrDefault());

                    DataTable dt3 = new DataTable();
                    dt3 = sgen.getdata(userCode, "select sl_area_id, sl_area_name from sub_Legislation_Area where l_area_id='" + l_area_id + "' and status='" + "true" + "'");
                    if (dt3.Rows.Count > 0)
                    {
                        foreach (DataRow dr1 in dt3.Rows)
                        {
                            mod4.Add(new SelectListItem { Text = dr1["sl_area_name"].ToString(), Value = dr1["sl_area_id"].ToString() });
                        }
                        TempData[MyGuid + "_TList4"] = model[0].TList4 = mod4;
                        if (model[0].SelectedItems4.FirstOrDefault() == "")
                        {
                            DataTable dt2 = new DataTable();
                            dt2 = sgen.getdata(userCode, "select kr.kr_id,kr.country_id,cnt.country_name,kr.state_id,st.state_name,kr.city,kr.l_area_id,la.l_area_name,kr.sl_area_id,sl.sl_area_name,kr.act_id,noa.act_name,kr.rule_id,nor.rule_name,kr.section,kr.rule_no,kr.form_no,kr.af_id,kr.af_name,kr.due_on,kr.freq_id,kr.freq_name,kr.decription,kr.sta_auth_id,kr.sta_auth_name,kr.Ctype_id,kr.ctype_name,kr.cost_of_non_compliance,kr.cost_text,kr.crit_id,kr.crit_name,kr.prior_id,kr.prior_name from knowledge_repository_details kr join (select distinct country_name,alpha_2 from country_state) cnt,(select distinct state_name,state_gst_code from country_state) st, name_of_act noa,legislation_area la,sub_legislation_area sl,name_of_rule nor where kr.country_id=cnt.alpha_2 and kr.state_id=st.state_gst_code and kr.act_id=noa.act_id and kr.Rule_id=nor.rule_id and kr.L_area_id=la.l_area_id and kr.SL_area_id=sl.sl_area_id and kr.country_id='" + model[0].SelectedItems1.FirstOrDefault() + "' and kr.state_id='" + model[0].SelectedItems2.FirstOrDefault() + "' and legislation_area.l_area_id='" + model[0].SelectedItems3.FirstOrDefault() + "'");
                            if (dt2.Rows.Count > 0)
                            {
                                model = new List<Tmodelmain>();
                                for (int i = 0; i < dt2.Rows.Count; i++)
                                {
                                    Tmodelmain tmm = new Tmodelmain();
                                    tmm.Col17 = dt2.Rows[i]["Country_name"].ToString();
                                    tmm.Col18 = dt2.Rows[i]["country_id"].ToString();
                                    tmm.Col19 = dt2.Rows[i]["State_name"].ToString();
                                    tmm.Col20 = dt2.Rows[i]["state_id"].ToString();
                                    tmm.Col21 = dt2.Rows[i]["L_area_name"].ToString();
                                    tmm.Col22 = dt2.Rows[i]["l_area_id"].ToString();
                                    tmm.Col23 = dt2.Rows[i]["SL_area_name"].ToString();
                                    tmm.Col24 = dt2.Rows[i]["sl_area_id"].ToString();
                                    tmm.Col25 = dt2.Rows[i]["Act_name"].ToString();
                                    tmm.Col26 = dt2.Rows[i]["act_id"].ToString();
                                    tmm.Col27 = dt2.Rows[i]["Rule_name"].ToString();
                                    tmm.Col28 = dt2.Rows[i]["rule_id"].ToString();
                                    tmm.Chk1 = tm.Chk1;
                                    tmm.Chk2 = tm.Chk2;
                                    tmm.Col9 = tm.Col9;
                                    tmm.Col10 = tm.Col10;
                                    tmm.Col11 = tm.Col11;
                                    tmm.Col12 = tm.Col12;
                                    tmm.Col13 = tm.Col13;
                                    tmm.Col100 = tm.Col100;
                                    tmm.Col14 = tm.Col14;
                                    tmm.Col15 = tm.Col15;
                                    tmm.TList1 = tm.TList1;
                                    tmm.TList2 = tm.TList2;
                                    tmm.TList3 = tm.TList3;
                                    tmm.TList4 = tm.TList4;
                                    tmm.TList5 = tm.TList5;
                                    tmm.TList6 = tm.TList6;
                                    tmm.SelectedItems1 = tm.SelectedItems1;
                                    tmm.SelectedItems2 = tm.SelectedItems2;
                                    tmm.SelectedItems3 = tm.SelectedItems3;
                                    tmm.SelectedItems4 = tm.SelectedItems4;
                                    tmm.SelectedItems5 = tm.SelectedItems5;
                                    tmm.SelectedItems6 = tm.SelectedItems6;
                                    model.Add(tmm);
                                }
                            }
                        }
                        else
                        {
                            //category_list_repeater.DataSource = null;
                            //category_list_repeater.DataSourceID = null;
                            //category_list_repeater.DataBind();
                        }
                    }
                }
                else if (command == "ddl_state_SelectedIndexChanged")
                {
                    ViewBag.scripCall = "enableForm();";
                    if (model[0].SelectedItems3.FirstOrDefault() == "")
                    {
                        DataTable dt2 = new DataTable();
                        dt2 = sgen.getdata(userCode, "select kr.kr_id,kr.country_id,cnt.country_name,kr.state_id,st.state_name,kr.city,kr.l_area_id,la.l_area_name,kr.sl_area_id,sl.sl_area_name,kr.act_id,noa.act_name,kr.rule_id,nor.rule_name,kr.section,kr.rule_no,kr.form_no,kr.af_id,kr.af_name,kr.due_on,kr.freq_id,kr.freq_name,kr.decription,kr.sta_auth_id,kr.sta_auth_name,kr.Ctype_id,kr.ctype_name,kr.cost_of_non_compliance,kr.cost_text,kr.crit_id,kr.crit_name,kr.prior_id,kr.prior_name from knowledge_repository_details kr join (select distinct country_name,alpha_2 from country_state) cnt,(select distinct state_name,state_gst_code from country_state) st, name_of_act noa,legislation_area la,sub_legislation_area sl,name_of_rule nor where kr.country_id=cnt.alpha_2 and kr.state_id=st.state_gst_code and kr.act_id=noa.act_id and kr.Rule_id=nor.rule_id and kr.L_area_id=la.l_area_id and kr.SL_area_id=sl.sl_area_id and kr.country_id='" + model[0].SelectedItems1.FirstOrDefault() + "' and kr.state_id='" + model[0].SelectedItems2.FirstOrDefault() + "'");
                        if (dt2.Rows.Count > 0)
                        {
                            if (dt2.Rows.Count > 0)
                            {
                                model = new List<Tmodelmain>();
                                for (int i = 0; i < dt2.Rows.Count; i++)
                                {
                                    Tmodelmain tmm = new Tmodelmain();
                                    tmm.Col17 = dt2.Rows[i]["Country_name"].ToString();
                                    tmm.Col18 = dt2.Rows[i]["country_id"].ToString();
                                    tmm.Col19 = dt2.Rows[i]["State_name"].ToString();
                                    tmm.Col20 = dt2.Rows[i]["state_id"].ToString();
                                    tmm.Col21 = dt2.Rows[i]["L_area_name"].ToString();
                                    tmm.Col22 = dt2.Rows[i]["l_area_id"].ToString();
                                    tmm.Col23 = dt2.Rows[i]["SL_area_name"].ToString();
                                    tmm.Col24 = dt2.Rows[i]["sl_area_id"].ToString();
                                    tmm.Col25 = dt2.Rows[i]["Act_name"].ToString();
                                    tmm.Col26 = dt2.Rows[i]["act_id"].ToString();
                                    tmm.Col27 = dt2.Rows[i]["Rule_name"].ToString();
                                    tmm.Col28 = dt2.Rows[i]["rule_id"].ToString();
                                    tmm.Chk1 = tm.Chk1;
                                    tmm.Chk2 = tm.Chk2;
                                    tmm.Col9 = tm.Col9;
                                    tmm.Col10 = tm.Col10;
                                    tmm.Col11 = tm.Col11;
                                    tmm.Col12 = tm.Col12;
                                    tmm.Col13 = tm.Col13;
                                    tmm.Col100 = tm.Col100;
                                    tmm.Col14 = tm.Col14;
                                    tmm.Col15 = tm.Col15;
                                    tmm.TList1 = tm.TList1;
                                    tmm.TList2 = tm.TList2;
                                    tmm.TList3 = tm.TList3;
                                    tmm.TList4 = tm.TList4;
                                    tmm.TList6 = tm.TList6;
                                    tmm.SelectedItems1 = tm.SelectedItems1;
                                    tmm.SelectedItems2 = tm.SelectedItems2;
                                    tmm.SelectedItems3 = tm.SelectedItems3;
                                    tmm.SelectedItems4 = tm.SelectedItems4;
                                    tmm.SelectedItems5 = tm.SelectedItems5;
                                    tmm.SelectedItems6 = tm.SelectedItems6;
                                    model.Add(tmm);
                                }
                            }
                        }
                        //else
                        //{
                        //    //category_list_repeater.DataSource = null;
                        //    //category_list_repeater.DataSourceID = null;
                        //    //category_list_repeater.DataBind();
                        //}
                    }
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {

                    var tmodel = model.FirstOrDefault();
                    string currdate = "";
                    DataTable dtstr = new DataTable();
                    dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                    currdate = sgen.server_datetime(userCode);

                    #region dtstr
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        isedit = true;
                        vch_num = model[0].Col16;
                    }
                    else
                    {
                        isedit = false;
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        model[0].Col16 = vch_num;
                    }
                    DataRow dr = dtstr.NewRow();
                    dr["rec_id"] = "0";
                    dr["type"] = model[0].Col12;
                    dr["vch_num"] = vch_num.Trim();
                    dr["vch_date"] = currdate;
                    dr["col5"] = model[0].SelectedItems1.FirstOrDefault(); // employee 
                    dr["col6"] = model[0].SelectedItems2.FirstOrDefault(); //  delegatee
                    dr["col7"] = model[0].SelectedItems3.FirstOrDefault(); // wflow
                    dr["date1"] = sgen.Make_date_S(model[0].Col17); // from date
                    dr["date2"] = sgen.Make_date_S(model[0].Col18); // to date
                    dr = getsave(currdate, dr, model, isedit);
                    dtstr.Rows.Add(dr);

                    #endregion
                    bool Result = sgen.Update_data(userCode, dtstr, model[0].Col10.Trim(), tmodel.Col8, isedit);
                    if (Result == true)
                    {
                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col10 = tm.Col10,
                            Col11 = tm.Col11,
                            Col12 = tm.Col12,
                            Col13 = "Save",
                            Col100 = "Save & New",
                            Col121 = "S",
                            Col122 = "<u>S</u>ave",
                            Col123 = "Save & Ne<u>w</u>",
                            Col14 = tm.Col14,
                            Col15 = tm.Col15,
                            Col9 = tm.Col9,
                            TList1 = mod1,
                            TList2 = mod2,
                            SelectedItems1 = new string[] { "" },
                            SelectedItems2 = new string[] { "" },
                            SelectedItems3 = new string[] { "" },
                        });
                        if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                        {
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                        {
                            try
                            {
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                            }
                            catch (Exception ex) { }
                        }
                    }
                    else
                    {
                        ViewBag.scripCall = "showmsgJS(1, 'Record Not Saved', 2);";
                    }
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region as_contracts
        public ActionResult as_contracts()
        {
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            FillMst(MyGuid);
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            model[0].Col9 = "ASSET CONTRACTS";
            model[0].Col10 = "enx_tab";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "CTR";
            model[0].Col22 = "Contract will auto renew upon reaching contract expiry date";
            model[0].Col23 = "Notify people upon expiry of contract";
            List<SelectListItem> md1 = new List<SelectListItem>();
            model[0].SelectedItems1 = new string[] { "" };
            model[0].SelectedItems2 = new string[] { "" };
            model[0].SelectedItems3 = new string[] { "" };
            TempData[MyGuid + "_TList1"] = model[0].TList1 = md1;
            TempData[MyGuid + "_TList2"] = model[0].TList1 = md1;
            TempData[MyGuid + "_TList3"] = model[0].TList1 = md1;
            TempData[MyGuid + "_TList4"] = model[0].TList1 = md1;
            DataTable dtb = (DataTable)sgen.GetSession(MyGuid, "URIGHTS");
            try
            {
                dtb = dtb.Select("m_id='" + model[0].Col14 + "'").CopyToDataTable();
                if (dtb.Rows.Count > 0)
                {
                    model[0].Col55 = dtb.Rows[0]["btnnew"].ToString();
                    model[0].Col56 = dtb.Rows[0]["btnedit"].ToString();
                    model[0].Col57 = dtb.Rows[0]["btnview"].ToString();

                }
            }
            catch (Exception ex) { }
            return View(model);
        }

        public List<Tmodelmain> new_as_contracts(List<Tmodelmain> model)
        {
            try
            {
                model = getnew(model);

                List<SelectListItem> mod1 = new List<SelectListItem>();
                List<SelectListItem> mod2 = new List<SelectListItem>();
                List<SelectListItem> mod3 = new List<SelectListItem>();
                List<SelectListItem> mod4 = new List<SelectListItem>();
                DataTable dtr = sgen.getdata(userCode, "select distinct vch_num,col5 as role_name from enx_tab2 where type='ROL' and client_unit_id='" + unitid_mst + "'");
                DataTable dtas = sgen.getdata(userCode, "select vch_num,col3 asset_name from enx_tab2 where type='ASS' and client_unit_id='" + unitid_mst + "' order by vch_num");

                TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1 = cmd_Fun.servtype(userCode, unitid_mst);
                TempData[MyGuid + "_Tlist2"] = model[0].TList2 = mod2 = sgen.dt_to_selectlist(dtr);
                TempData[MyGuid + "_Tlist3"] = model[0].TList3 = mod3 = cmd_Fun.username(userCode);
                TempData[MyGuid + "_Tlist4"] = model[0].TList4 = mod4 = sgen.dt_to_selectlist(dtas);

                var tm = model.FirstOrDefault();

            }
            catch (Exception ex)
            { ViewBag.scripCall = "showmsgJS(1, '" + ex.Message.ToString().Replace("'", "") + "', 1);"; }
            return model;
        }
        [HttpPost]
        public ActionResult as_contracts(List<Tmodelmain> model, string command, string mid, HttpPostedFileBase upd1)
        {
            try
            {
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();
                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
                if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                List<SelectListItem> mod2 = (List<SelectListItem>)TempData[MyGuid + "_TList2"];
                TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2;
                if (model[0].SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
                List<SelectListItem> mod3 = (List<SelectListItem>)TempData[MyGuid + "_TList3"];
                TempData[MyGuid + "_TList3"] = model[0].TList3 = mod3;
                if (model[0].SelectedItems3 == null) model[0].SelectedItems3 = new string[] { "" };
                List<SelectListItem> mod4 = (List<SelectListItem>)TempData[MyGuid + "_TList4"];
                TempData[MyGuid + "_TList4"] = model[0].TList4 = mod4;
                if (model[0].SelectedItems4 == null) model[0].SelectedItems4 = new string[] { "" };



                if (command == "New")
                {
                    if (model[0].Col55 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for new entry, please contact your admin', 2);";
                        return View(model);
                    }
                    model = new_as_contracts(model);
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }

                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {

                    var tmodel = model.FirstOrDefault();
                    string currdate = "";
                    DataTable dtstr = new DataTable();
                    dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                    currdate = sgen.server_datetime(userCode);

                    #region dtstr
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        isedit = true;
                        vch_num = model[0].Col16;
                    }
                    else
                    {
                        isedit = false;
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        model[0].Col16 = vch_num;
                    }
                    DataRow dr = dtstr.NewRow();
                    dr["rec_id"] = "0";
                    dr["type"] = model[0].Col12;
                    dr["vch_num"] = vch_num.Trim();
                    dr["vch_date"] = currdate;
                    dr["col3"] = model[0].Col17;//contract name
                    dr["col5"] = model[0].Col24;//Cost
                    dr["col7"] = model[0].Col18;//vendor id
                    dr["col9"] = model[0].SelectedItems1.FirstOrDefault(); // Service Type 
                    dr["col10"] = model[0].SelectedItems2.FirstOrDefault(); //  Visible to
                    dr["col11"] = model[0].SelectedItems3.FirstOrDefault(); // Approver
                    dr["col14"] = string.Join(",", model[0].SelectedItems4); // associate assets
                    dr["date1"] = sgen.Make_date_S(model[0].Col20); // from date
                    dr["date2"] = sgen.Make_date_S(model[0].Col21); // to date
                    dr["col12"] = "Pending";
                    if (model[0].Chk1 == true) { dr["col15"] = "Y"; } else { dr["col15"] = "N"; }
                    if (model[0].Chk2 == true) { dr["col13"] = "Y"; } else { dr["col13"] = "N"; }
                    dr = getsave(currdate, dr, model, isedit);
                    dtstr.Rows.Add(dr);

                    #endregion
                    bool Result = sgen.Update_data(userCode, dtstr, model[0].Col10.Trim(), tmodel.Col8, isedit);
                    if (Result == true)
                    {
                        #region attachment
                        DataTable dtfile = cmd_Fun.GetStructure(userCode, "file_tab");
                        string serverpath = Server.MapPath("~/Uploads/" + cg_com_name.Replace(" ", "") + "/");

                        try
                        {
                            HttpPostedFileBase file1 = upd1;
                            ctype1 = file1.ContentType;
                            fileName1 = file1.FileName;
                            path1 = clientid_mst + unitid_mst + userid_mst + currdate + "_" + fileName1;
                            encpath1 = sgen.Convert_Stringto64(path1).ToString();
                            finalpath1 = serverpath + encpath1;
                            file1.SaveAs(finalpath1);
                            filesave(model, currdate, dtfile, fileName1, encpath1, "CTR", ctype1, model[0].Col32, model[0].Col31, "", "");
                        }
                        catch (Exception ex) { }
                        bool res = false;
                        if (dtfile.Rows.Count > 0)
                        {
                            res = sgen.Update_data_fast1(userCode, dtfile, "file_tab", "", false);
                        }
                        #endregion
                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col10 = tm.Col10,
                            Col11 = tm.Col11,
                            Col12 = tm.Col12,
                            Col13 = "Save",
                            Col100 = "Save & New",
                            Col121 = "S",
                            Col122 = "<u>S</u>ave",
                            Col123 = "Save & Ne<u>w</u>",
                            Col14 = tm.Col14,
                            Col15 = tm.Col15,
                            Col9 = tm.Col9,
                            TList1 = mod1,
                            TList2 = mod2,
                            TList3 = mod3,
                            SelectedItems1 = new string[] { "" },
                            SelectedItems2 = new string[] { "" },
                            SelectedItems3 = new string[] { "" },
                        });
                        if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                        {
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                        {
                            try
                            {
                                model = new_as_contracts(model);
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                            }
                            catch (Exception ex) { }
                        }
                    }
                    else
                    {
                        ViewBag.scripCall = "showmsgJS(1, 'Record Not Saved', 2);";
                    }
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region contract_list 
        public ActionResult contract_list()
        {
            FillMst();
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            string defval = "";
            ViewBag.scripCall = "enableForm();";
            model[0].Col10 = "enx_tab2";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "APP";
            var tm = model.FirstOrDefault();
            string leadcon = "";
            model[0].Col9 = "LIST OF CONTRACTS";
            mq = "select distinct a.vch_num doc_no,to_char(a.vch_date,'" + sgen.Getsqldateformat() + "') doc_date," +
                              "b.c_name vendor_name,a.col3 contract_name,a.col5 contract_value,to_char(a.date1,'" + sgen.Getsqldateformat() + "') start_date" +
                              ",to_char(a.date2,'" + sgen.Getsqldateformat() + "') End_date, nvl((case when c.master_name ='0' then '-' else c.master_name end ) ,'-') service_type, a.col12 status from enx_tab a " +
                              "inner join clients_mst b on a.col7=b.vch_num left join master_setting c on a.col9=c.master_id and c.type='SER' and find_in_set(c.client_unit_id,'" + unitid_mst + "')=1 " +
                              "and find_in_set(b.client_unit_id,'" + unitid_mst + "')=1 and substr(b.vch_num,0,3)='203' where a.type='CTR' " +
                              "and a.client_unit_id='" + unitid_mst + "' order by a.vch_num desc";
            sgen.SetSession(MyGuid, "gridq_demogrid", mq);
            ModelState.Clear();
            return View(model);
        }
        [HttpPost]
        public ActionResult contract_list(List<Tmodelmain> model, string command, string mid)
        {
            try
            {
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region Contract Approval
        public ActionResult contr_apr()
        {
            FillMst();
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            model[0].Col9 = "CONTRACT  APPROVAL";
            model[0].Col10 = "enx_tab2";
            model[0].Col11 = " and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "'";
            ViewBag.scripCall = "enableForm();";

            return View(model);
        }
        [HttpPost]
        public ActionResult contr_apr(List<Tmodelmain> model, string command, string mid)
        {
            try
            {
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();

                string cond = "";
                int cnt = 0;

                if (command == "Submit")
                {
                    string status = "";
                    Boolean isok = true;
                    for (int i = 0; i < model.Count; i++)
                    {
                        if (model[i].Col27 == "P")
                        {
                            status = "Pending";
                        }
                        else if (model[i].Col27 == "A")
                        {
                            status = "Approved";
                            cnt++;
                        }
                        else if (model[i].Col27 == "R")
                        {
                            status = "Rejected";
                            cnt++;
                        }
                        string xDate = sgen.server_datetime(userCode);
                        string dt_ft = "YYYY-MM-dd HH24:MI:SS";
                        mq = "update enx_tab set col13='" + userid_mst + "',  col12='" + status + "' where type='CTR' and vch_num='" + model[i].Col16 + "' and client_unit_id='" + unitid_mst + "'";
                        isok = sgen.execute_cmd(userCode, mq);
                    }
                    if (isok == true)
                    {
                        if (cnt > 0) { ViewBag.scripCall = "mytoast('success', 'toast-top-right', 'Contract Status Updated Successfully');"; };
                        DataTable dt = new DataTable();


                        mq = "select  a.vch_num doc_no,to_char(a.vch_date,'" + sgen.Getsqldateformat() + "') doc_date," +
                                    "b.c_name vendor_name,a.col3 contract_name,a.col5 contract_value,to_char(a.date1,'" + sgen.Getsqldateformat() + "') start_date" +
                                    ",to_char(a.date2,'" + sgen.Getsqldateformat() + "') End_date, nvl((case when c.master_name ='0' then '-' else c.master_name end ) ,'-') service_type from enx_tab a " +
                                    "inner join clients_mst b on a.col7=b.vch_num left join master_setting c on a.col9=c.master_id and c.type='SER' and find_in_set(c.client_unit_id,'" + unitid_mst + "')=1 " +
                                    "and find_in_set(b.client_unit_id,'" + unitid_mst + "')=1 and substr(b.vch_num,0,3)='203' where a.type='CTR' " +
                                    "and a.client_unit_id='" + unitid_mst + "' and a.col12='Pending' order by a.vch_num desc";


                        dt = sgen.getdata(userCode, mq);
                        if (dt.Rows.Count > 0)
                        {
                            model = new List<Tmodelmain>();

                            foreach (DataRow dr in dt.Rows)
                            {
                                model.Add(new Tmodelmain
                                {
                                    Col9 = tm.Col9,
                                    Col11 = tm.Col11,
                                    Col12 = tm.Col12,
                                    Col10 = tm.Col10,
                                    Col13 = tm.Col13,
                                    Col14 = tm.Col14,
                                    Col15 = tm.Col15,
                                    Col16 = dr["doc_no"].ToString(),
                                    Col17 = tm.Col17,
                                    Col18 = dr["vendor_name"].ToString(),
                                    Col19 = dr["contract_name"].ToString(),
                                    Col20 = dr["contract_value"].ToString(),
                                    Col21 = dr["start_date"].ToString(),
                                    Col22 = dr["End_date"].ToString(),
                                    Col23 = dr["service_type"].ToString(),
                                    Col27 = "P",
                                });
                            }
                        }

                        else
                        {
                            Tmodelmain tmm = new Tmodelmain();
                            tmm.Col9 = tm.Col9;
                            tmm.Col10 = tm.Col10;
                            tmm.Col11 = tm.Col11;
                            tmm.Col12 = tm.Col12;
                            tmm.Col14 = tm.Col14;
                            tmm.Col15 = tm.Col15;
                            model.Add(tmm);
                        }
                    }

                }
                else if (command == "Pending")
                {
                    DataTable dt = new DataTable();

                    mq = "select  a.vch_num doc_no,to_char(a.vch_date,'" + sgen.Getsqldateformat() + "') doc_date," +
                               "b.c_name vendor_name,a.col3 contract_name,a.col5 contract_value,to_char(a.date1,'" + sgen.Getsqldateformat() + "') start_date" +
                               ",to_char(a.date2,'" + sgen.Getsqldateformat() + "') End_date, nvl((case when c.master_name ='0' then '-' else c.master_name end ) ,'-') service_type from enx_tab a " +
                               "inner join clients_mst b on a.col7=b.vch_num left join master_setting c on a.col9=c.master_id and c.type='SER' and find_in_set(c.client_unit_id,'" + unitid_mst + "')=1 " +
                               "and find_in_set(b.client_unit_id,'" + unitid_mst + "')=1 and substr(b.vch_num,0,3)='203' where a.type='CTR' " +
                               "and a.client_unit_id='" + unitid_mst + "' and a.col12='Pending' order by a.vch_num desc";


                    dt = sgen.getdata(userCode, mq);
                    if (dt.Rows.Count > 0)
                    {
                        model = new List<Tmodelmain>();

                        foreach (DataRow dr in dt.Rows)
                        {
                            model.Add(new Tmodelmain
                            {
                                Col9 = tm.Col9,
                                Col11 = tm.Col11,
                                Col12 = tm.Col12,
                                Col10 = tm.Col10,
                                Col13 = tm.Col13,
                                Col14 = tm.Col14,
                                Col15 = tm.Col15,
                                Col16 = dr["doc_no"].ToString(),
                                Col17 = tm.Col17,
                                Col18 = dr["vendor_name"].ToString(),
                                Col19 = dr["contract_name"].ToString(),
                                Col20 = dr["contract_value"].ToString(),
                                Col21 = dr["start_date"].ToString(),
                                Col22 = dr["End_date"].ToString(),
                                Col23 = dr["service_type"].ToString(),
                                Col27 = "P",
                            });
                        }
                    }
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
    }
}