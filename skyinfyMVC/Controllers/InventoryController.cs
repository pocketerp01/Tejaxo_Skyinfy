using skyinfyMVC.Models;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using System.Data;
using System.Diagnostics;
using System.Web.Script.Serialization;
using Newtonsoft.Json.Linq;
using Newtonsoft.Json;
using System.Reflection;
using System.Text.RegularExpressions;
using QRCoder;
using System.Drawing;
using System.IO;
using System.Globalization;
using System.Text;
namespace skyinfyMVC.Controllers
{
    public class InventoryController : Controller
    {
        string ctype1 = "", fileName1 = "", path1 = "", encpath1 = "", finalpath1 = "";
        string mq = "", mq1 = "", mq0 = "", mq2 = "", vch_num = "", btnval = "", type = "", mid_mst = "",
            where = "", ent_date = "", status = "", inactive_date = "", cmd = "", id = "",
            defval = "", cond = "";
        static string MyGuid = "";
        sgenFun sgen;
        Cmd_Fun cmd_Fun;
        bool isedit = false, res = false, ok = false, res1 = false;
        string userCode, userid_mst, Ac_Year_id, cg_com_name, clientid_mst, unitid_mst, year_to = "",
            year_from = "", xprdrange = "", actionName = "", Ac_Year = "", controllerName = "",
            role_mst = "", m_module3 = "", clientname_mst = "", FN_From_Date = "";
        #region mainfunc
        public void FillMst(string Myguid = "")
        {
            MyGuid = Myguid;
            if (MyGuid == "") { MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]); }
            Multiton multiton = Multiton.GetInstance(MyGuid);
            sgen = new sgenFun(MyGuid);
            cmd_Fun = new Cmd_Fun(MyGuid);
            userCode = multiton.UserCode;
            userid_mst = sgen.GetCookie(MyGuid, "userid_mst");
            Ac_Year_id = sgen.GetCookie(MyGuid, "Ac_Year_id");
            Ac_Year = sgen.GetCookie(MyGuid, "Ac_Year");
            year_to = sgen.GetCookie(MyGuid, "year_to");
            year_from = sgen.GetCookie(MyGuid, "year_from");
            cg_com_name = sgen.GetCookie(MyGuid, "cg_com_name");
            clientid_mst = sgen.GetCookie(MyGuid, "clientid_mst");
            unitid_mst = sgen.GetCookie(MyGuid, "unitid_mst");
            clientname_mst = sgen.GetCookie(MyGuid, "clientname_mst");
            role_mst = sgen.GetCookie(MyGuid, "role_mst");
            m_module3 = sgen.GetCookie(MyGuid, "m_module3");
            FN_From_Date = sgen.GetCookie(MyGuid, "year_from");
            actionName = this.ControllerContext.RouteData.Values["action"].ToString();
            controllerName = this.ControllerContext.RouteData.Values["controller"].ToString();
            sgen.SetSession(MyGuid, "viewName", actionName);
            sgen.SetSession(MyGuid, "controllerName", controllerName);
            sgen.SetSession(MyGuid, "BackToBack", "");
            xprdrange = "and to_date(to_char(vch_date,'ddMMyyyy'),'ddMMyyyy') between to_date('" + year_from + "','" + sgen.Getsqldatetimeformat() + "') " +
                "and to_date('" + year_to + "','" + sgen.Getsqldatetimeformat() + "')";
        }
        private List<Tmodelmain> StartCallback(List<Tmodelmain> model)
        {
            if (sgen.GetSession(MyGuid, "btnval") != null) btnval = sgen.GetSession(MyGuid, "btnval").ToString();
            model = CallbackFun(btnval, "N", actionName, controllerName, model);
            ViewBag.vnew = "disabled='disabled'";
            ViewBag.vedit = "disabled='disabled'";
            ViewBag.vsave = "";
            ViewBag.vsavenew = "";
            if (model[0].Col136 == "N" && btnval.Trim().Equals("EXT"))
            {
                ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for extend " + model[0].Col9 + ", please contact your admin', 2);disableForm();";
                return model;
            }
            else if (model[0].Col134 == "N" && btnval.Trim().Equals("EDIT"))
            {
                ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for edit " + model[0].Col9 + ", please contact your admin', 2);disableForm();";
                return model;
            }
            return model;
        }
        private List<Tmodelmain> StartCallback(List<Tmodelmain> model, string btnval)
        {
            if (sgen.GetSession(MyGuid, "btnval") != null) btnval = sgen.GetSession(MyGuid, "btnval").ToString();
            model = CallbackFun(btnval, "N", actionName, controllerName, model);
            ViewBag.vnew = "disabled='disabled'";
            ViewBag.vedit = "disabled='disabled'";
            ViewBag.vsave = "";
            ViewBag.vsavenew = "";
            if (model[0].Col136 == "N" && btnval.Trim().Equals("EXT"))
            {
                ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for extend " + model[0].Col9 + ", please contact your admin', 2);disableForm();";
                return model;
            }
            else if (model[0].Col134 == "N" && btnval.Trim().Equals("EDIT"))
            {
                ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for edit " + model[0].Col9 + ", please contact your admin', 2);disableForm();";
                return model;
            }
            return model;
        }
        private ActionResult CancelFun(List<Tmodelmain> model)
        {
            return RedirectToAction(actionName, new { @m_id = EncryptDecrypt.Encrypt(model[0].Col15), @mid = EncryptDecrypt.Encrypt(model[0].Col14) });
        }
        public List<Tmodelmain> getload(List<Tmodelmain> model)
        {
            chkRef();
            Tmodelmain tm1 = new Tmodelmain();
            mid_mst = EncryptDecrypt.Decrypt(Request.QueryString["mid"]);
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            ViewBag.vnew = "";
            ViewBag.vedit = "";
            ViewBag.vsave = "disabled='disabled'";
            ViewBag.vsavenew = "disabled='disabled'";
            ViewBag.scripCall = "disableForm();";
            tm1.Col13 = "Save";
            tm1.Col14 = mid_mst.Trim();
            tm1.Col15 = MyGuid.Trim();
            tm1.Col100 = "Save & New";
            tm1.Col121 = "S";
            tm1.Col122 = "<u>S</u>ave";
            tm1.Col123 = "Save & Ne<u>w</u>";
            DataTable dtb = (DataTable)sgen.GetSession(MyGuid, "URIGHTS");
            try
            {
                dtb = dtb.Select("m_id='" + tm1.Col14 + "'").CopyToDataTable();
                if (dtb.Rows.Count > 0)
                {
                    tm1.Col133 = dtb.Rows[0]["btnnew"].ToString();
                    tm1.Col134 = dtb.Rows[0]["btnedit"].ToString();
                    tm1.Col135 = dtb.Rows[0]["btnview"].ToString();
                    tm1.Col136 = dtb.Rows[0]["btnextend"].ToString();
                }
            }
            catch (Exception ex) { }
            model.Add(tm1);
            return model;
        }
        public List<Tmodelmain> getnew(List<Tmodelmain> model)
        {
            sgen.SetSession(MyGuid, "EDMODE", "N");
            ViewBag.vnew = "disabled='disabled'";
            ViewBag.vedit = "disabled='disabled'";
            ViewBag.vsave = "";
            ViewBag.vsavenew = "";
            ViewBag.scripCall = "enableForm();";
            mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
            vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
            model[0].Col16 = vch_num;
            if (model[0].Col133 == "N")
            {
                ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for new entry, please contact your admin', 2);";
                return (model);
            }
            return model;
        }
        public List<Tmodelmain> getedit(List<Tmodelmain> model, DataTable dtt, string param)
        {
            sgen.SetSession(MyGuid, "EDMODE", "Y");
            model[0].Col1 = dtt.Rows[0]["client_id"].ToString();
            model[0].Col2 = dtt.Rows[0]["client_unit_id"].ToString();
            model[0].Col3 = dtt.Rows[0]["ent_by"].ToString();
            model[0].Col4 = dtt.Rows[0]["ent_date"].ToString();
            model[0].Col7 = dtt.Rows[0]["rec_id"].ToString();
            model[0].Col8 = "client_id||client_unit_id||vch_num|| to_char(vch_date, 'yyyymmdd')|| type = '" + param + "'";
            model[0].Col13 = "Update";
            model[0].Col100 = "Update & New";
            model[0].Col121 = "U";
            model[0].Col122 = "<u>U</u>pdate";
            model[0].Col123 = "Update & Ne<u>w</u>";
            return model;
        }
        public DataRow getsave(string curdt, DataRow drn, List<Tmodelmain> model)
        {
            bool edit = false;
            //if (Session["EDMODE"].ToString().Equals("Y"))
            //{
            //    edit = true;
            //    vch_num = model[0].Col16.Trim();
            //}
            //else
            //{
            //    edit = false;
            //    mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
            //    vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
            //}
            //drn["vch_num"] = vch_num;
            drn["rec_id"] = "0";
            if (edit)
            {
                //drn["rec_id"] = model[0].Col7;
                drn["ent_by"] = model[0].Col3;
                drn["ent_date"] = model[0].Col4;
                drn["client_id"] = clientid_mst;
                drn["client_unit_id"] = unitid_mst;
                drn["edit_by"] = userid_mst;
                drn["edit_date"] = curdt;
            }
            else
            {
                drn["ent_by"] = userid_mst;
                drn["ent_date"] = curdt;
                drn["edit_by"] = "-";
                drn["edit_date"] = curdt;
                drn["client_id"] = clientid_mst;
                drn["client_unit_id"] = unitid_mst;
            }
            return drn;
        }
        public DataRow getsave(string curdt, DataRow drn, List<Tmodelmain> model, bool edit)
        {
            //bool edit = false;
            //if (Session["EDMODE"].ToString().Equals("Y"))
            //{
            //    edit = true;
            //    vch_num = model[0].Col16.Trim();
            //}
            //else
            //{
            //    edit = false;
            //    mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
            //    vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
            //}
            //drn["vch_num"] = vch_num;
            drn["rec_id"] = "0";
            if (edit)
            {
                //drn["rec_id"] = model[0].Col7;
                drn["ent_by"] = model[0].Col3;
                drn["ent_date"] = model[0].Col4;
                drn["client_id"] = clientid_mst;
                drn["client_unit_id"] = unitid_mst;
                drn["edit_by"] = userid_mst;
                drn["edit_date"] = curdt;
            }
            else
            {
                drn["ent_by"] = userid_mst;
                drn["ent_date"] = curdt;
                drn["edit_by"] = "-";
                drn["edit_date"] = curdt;
                drn["client_id"] = clientid_mst;
                drn["client_unit_id"] = unitid_mst;
            }
            return drn;
        }
        public ActionResult Index()
        {
            return View();
        }
        public void chkRef()
        {
            if (userCode.Equals("")) Response.Redirect(sgenFun.callbackurl);
            if (Request.UrlReferrer == null) { Response.Redirect(sgenFun.callbackurl); }
        }
        #endregion
        //=====================make query===========
        #region make query
        public void Make_query(string viewname, string title, string btnval, string seektype, string param1, string param2, string Myguid = "")
        {
            string cond = "", mid = "", joinmst = "", colmst = "", grpmst = "";
            FillMst(Myguid);
            sgen.SetSession(MyGuid, "btnval", btnval);
            switch (viewname.ToLower())
            {
                #region mrn
                case "mrn":
                    switch (btnval.ToUpper())
                    {
                        case "PRINT":
                        case "EDIT":
                            cmd = "select distinct (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) as fstr,p.vch_num MRN_No," +
                               "to_char(convert_tz(p.vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') MRN_Date,tp.master_name as MRN_TYPE," +
                               "c.c_name as Party_Name,p.chlno Challan_No, " +
                               "to_char(p.invdate, '" + sgen.Getsqldateformat() + "') as inv_date" +
                               ",p.invno Inv_No, p.pono from itransaction p " +
                               "inner join clients_mst c on p.acode = c.vch_num and find_in_set(c.client_unit_id,p.client_unit_id)=1 and c.type='BCD' " +
                               "inner join master_setting tp on tp.master_id=p.type and find_in_set(tp.client_unit_id, p.client_unit_id)= 1 and tp.type='KMR' " +
                               "where p.client_unit_id = '" + unitid_mst + "' and p.type in ('01','02','03','05','07','08','09') " + xprdrange.Replace("vch_date", "p.vch_date") + " order by p.vch_num desc";
                            break;

                        case "VIEW":
                            //cmd = "select (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) as fstr,p.vch_num MRN_No," +
                            //  "to_char(convert_tz(p.vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') MRN_Date,p.type MRN_Type," +
                            //  "c.c_name as Party_Name,c.c_gstin as Party_Gstin,c.addr as Party_Address,p.chlno Challan_No,p.ewayno Eway_BillNo,p.invno Inv_No,p.tmode Transport," +
                            //  "p.icode Item_Code,p.iname Item_Name,p.cpartno Part_No,p.uom UOM,p.hsno HSN,p.taxrate TaxRate,qtychl Challan_Qty,qtyrcvd In_Qty,p.irate ItemRate," +
                            //  "p.iamount ItemAmt,p.taxamt TaxAmt,p.lineamount LineAmt," +
                            //  "p.basicamt BasicAmt from itransaction p " +
                            //  "inner join clients_mst c on p.acode = c.vch_num and c.client_id = p.client_id and c.client_unit_id = p.client_unit_id and c.type = 'PVD' " +
                            //  "where p.client_id = '" + clientid_mst + "' and p.client_unit_id = '" + unitid_mst + "' and p.type in ('01','02','05','07','09')";
                            //brijesh
                            cmd = "select (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) as fstr,p.vch_num MRN_No," +
                                "to_char(convert_tz(p.vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') MRN_Date,p.type MRN_TYPE_CODE,tp.master_name as MRN_TYPE," +
                                "c.c_name as Party_Name,c.c_gstin as Party_Gstin,c.addr as Party_Address,p.chlno Challan_No, p.ewayno Eway_BillNo, nvl(kt.vch_num, '-') as gate_in_no," +
                                "to_char(p.ewaydate, '" + sgen.Getsqldateformat() + "') as Eway_BillDate,to_char(p.invdate, '" + sgen.Getsqldateformat() + "') as inv_date" +
                                ",p.invno Inv_No, p.tmode Transport, p.icode Item_Code, p.iname Item_Name, p.cpartno Part_No, p.uom UOM, p.hsno HSN, p.taxrate TaxRate, " +
                                "qtychl Challan_Qty,qtyrcvd In_Qty, p.irate ItemRate, p.disctype,p.discrate,p.iamount ItemAmt, p.taxamt TaxAmt, p.lineamount LineAmt," +
                                " p.basicamt MRN_BasicAmt,p.netamt as MRN_Net_amount,p.pktno as NOOFPKT_BOX,p.iremark remark, p.pono,to_char(p.podate, '" + sgen.Getsqldateformat() + "') as podate" +
                                ",p.btchno from itransaction p " +
                                "left join kc_tab kt on p.gatein_no = (kt.client_id || kt.vch_num || kt.type) and find_in_set(kt.client_unit_id,'" + unitid_mst + "')=1 and kt.type = 'GIN' " +
                                "inner join clients_mst c on p.acode = c.vch_num and find_in_set(c.client_unit_id,'" + unitid_mst + "')=1 and c.type='BCD' " +
                                "inner join master_setting tp on tp.master_id=p.type and find_in_set(tp.client_unit_id, '" + unitid_mst + "')= 1 and tp.type='KMR' " +
                                "where p.client_unit_id = '" + unitid_mst + "' and p.type in ('01','02','03','05','07','08','09') " + xprdrange.Replace("vch_date", "p.vch_date") + " order by p.vch_num desc";
                            break;
                        // shiv
                        case "NEW":
                            cmd = "select (master_id||to_char(vch_date,'yyyymmdd')||type) fstr,master_id Mrn_Type,master_name Mrn_type_Name from master_setting " +
                                "where type='KMR' and find_in_set(client_unit_id,'" + unitid_mst + "')=1";
                            break;
                        case "CUSREJTYPE":
                            cmd = "SELECT master_id FSTR,master_id,REJ_TYPE FROM (select '011' as master_id, 'AGAINST INVOIVE' as REJ_TYPE from dual Union all select '012'" +
                                " master_id,'AGAINST DISPATCH' as REJ_TYPE from dual union all select '013' master_id,'WITHOUT REFERENCE' as REJ_TYPE from dual)";
                            break;
                        case "BDDOCNO":
                            if (sgen.GetSession(MyGuid, "BDREJTYP").ToString().Trim().Equals("011"))
                            {
                                cmd = "select distinct (iv.client_id||iv.client_unit_id||iv.vch_num||to_char(iv.vch_date, 'yyyymmdd')||iv.type) fstr,iv.vch_num invoice_no," +
                                "to_char(iv.vch_date, '" + sgen.Getsqldateformat() + "') as invoice_date,iv.type from itransaction iv " +
                                "inner join clients_mst cl on iv.acode = cl.vch_num and find_in_set(iv.client_unit_id,cl.client_unit_id)=1 and cl.vch_num = '" + sgen.GetSession(MyGuid, "KPOPARTY").ToString() + "' " +
                                "where iv.type = '" + sgen.GetSession(MyGuid, "BDMRNINVTYPE").ToString() + "' and substr(iv.potype,1,1)= '5'";
                            }
                            else
                            {
                                cmd = "select distinct (iv.client_id||iv.client_unit_id||iv.vch_num||to_char(iv.vch_date, 'yyyymmdd')||iv.type) fstr,iv.vch_num invoice_no," +
                              "to_char(iv.vch_date, '" + sgen.Getsqldateformat() + "') as invoice_date,iv.type from itransaction iv " +
                              "inner join clients_mst cl on iv.acode = cl.vch_num and find_in_set(iv.client_unit_id,cl.client_unit_id)=1 and cl.vch_num = '" + sgen.GetSession(MyGuid, "KPOPARTY").ToString() + "' " +
                              "where iv.type = '" + sgen.GetSession(MyGuid, "BDMRNINVTYPE").ToString() + "' and substr(iv.type2,1,1)= '4'";
                            }
                            break;
                        //shiv
                        case "PARTY":
                            switch (param1.Trim())
                            {
                                case "09":
                                    cmd = @"select distinct (a.vch_num|| to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.vch_num vendor_code,a.c_name Name,
                                            a.addr address,a.c_gstin as GSTIN,(case when a.tor='R' then 'Regular' when a.tor='C' then 'Composition' else 'Not Registered' end) GSTType,
                                            a.type_desc as Search_text from clients_mst a 
                                            inner join itransactionc r on r.acode=a.vch_num and find_in_set(r.client_unit_id,a.client_unit_id)=1 and r.type='21' 
                                            where substr(a.vch_num,0,3)='203'  and find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 and a.type='BCD'";
                                    break;
                                case "02":
                                    cmd = "select distinct (a.vch_num|| to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.vch_num as vendor_code,a.c_name vendor_name," +
                                        "a.addr, a.c_gstin as gstin from clients_mst a " +
                                        "inner join purchases pc on pc.acode=a.vch_num and find_in_set(pc.client_unit_id,a.client_unit_id)=1 and pc.type in ('50','52') " +
                                        "where substr(a.vch_num,0,3)='203' and find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 and a.type='BCD'";
                                    break;
                                case "08":
                                    cmd = "select (a.vch_num|| to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.vch_num vendor_code,a.c_name Name," +
                                        "a.addr address,a.c_gstin as GSTIN,(case when a.tor = 'C' then " +
                                        "'Composition' when a.tor = 'R' then 'Regular' else 'Not Registered' end) GSTType,a.interunit from itransaction st " +
                                        "inner join clients_mst a on a.vch_num = st.acode and find_in_set(st.client_unit_id,a.client_unit_id)=1 and substr(a.vch_num,0,3)='103' " +
                                        "where st.client_id = '" + clientid_mst + "' and st.type = 'ST'";
                                    break;
                                case "05":
                                    if (sgen.GetSession(MyGuid, "BDREJTYP").ToString().Trim().Equals("011"))
                                    {
                                        cmd = "select distinct (a.vch_num||st.type|| to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.vch_num vendor_code," +
                                            "a.c_name Name, a.addr address, a.c_gstin as GSTIN," +
                                            "(case when a.tor = 'C' then 'Composition' when a.tor = 'R' then 'Regular' else 'Not Registered' end) GSTType from " +
                                            "itransaction st " +
                                            "inner join clients_mst a on a.vch_num = st.acode and find_in_set(st.client_unit_id,a.client_unit_id)=1 and substr(a.vch_num,0,3)= '303' " +
                                            "where substr(st.type,1,1)= '4' and substr(st.potype,1,1)= '5' and st.client_unit_id = '" + unitid_mst + "'";
                                    }
                                    else if (sgen.GetSession(MyGuid, "BDREJTYP").ToString().Trim().Equals("012"))
                                    {
                                        cmd = "select distinct (a.vch_num||st.type|| to_char(a.vch_date,'yyyymmdd')||a.type) as fstr ,a.vch_num vendor_code," +
                                         "a.c_name Name, a.addr address, a.c_gstin as GSTIN," +
                                         "(case when a.tor = 'C' then 'Composition' when a.tor = 'R' then 'Regular' else 'Not Registered' end) GSTType from " +
                                         "itransaction st " +
                                         "inner join clients_mst a on a.vch_num = st.acode and find_in_set(st.client_unit_id,a.client_unit_id)=1 and substr(a.vch_num,0,3)= '303' " +
                                         "where substr(st.type,1,1)= '6' and substr(st.type2,1,1)= '4' and st.client_unit_id = '" + unitid_mst + "'";
                                    }
                                    else
                                    {
                                        cmd = "select (a.vch_num|| to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.vch_num vendor_code,a.c_name Name," +
                                            "a.addr address,a.c_gstin as GSTIN,(case when a.tor='C' then " +
                                            "'Composition' when a.tor='R' then 'Regular' else 'Not Registered' end) GSTType,a.type_desc as Search_text from clients_mst a " +
                                            "where substr(a.vch_num,0,3)='203' and find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 and a.type='BCD'";
                                    }
                                    break;
                                default:
                                    cmd = "select (a.vch_num|| to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.vch_num vendor_code,a.c_name Name,a.addr address, a.c_gstin as GSTIN," +
                                        "(case when a.tor='C' then 'Composition' when a.tor='R' then 'Regular' else 'Not Registered' end) GSTType," +
                                        "a.type_desc as Search_text " +
                                        "from clients_mst a where substr(a.vch_num,0,3)='203' and find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 and a.type='BCD'";
                                    break;
                            }
                            break;
                        case "ITEM":
                        case "ITEM2":
                            if (sgen.GetSession(MyGuid, "KMRNTYPE") != null)
                            {
                                if (sgen.GetSession(MyGuid, "KMRNTYPE").ToString() == "05")   // item list in case Customer Rejection / Return
                                {
                                    if (sgen.GetSession(MyGuid, "BDREJTYP").ToString().Trim().Equals("011"))  // Against Invoice
                                    {
                                        string condi = " and pc.type='" + sgen.GetSession(MyGuid, "BDMRNINVTYPE").ToString() + "' and cl.vch_num = '" + sgen.GetSession(MyGuid, "KPOPARTY").ToString() + "' " +
                                                       "and pc.vch_num in ('" + sgen.GetSession(MyGuid, "BDINVDOCNO").ToString().Trim().TrimEnd(',').Replace(",", "','").Trim() + "')";
                                        cmd = "select distinct (it.icode || pc.type || pc.vch_num || to_char(it.vch_date, 'yyyymmdd') || it.type) as fstr," +
                                            "it.icode as icode,it.iname as iname,pc.vch_num as Doc_no,um.master_name as UOM,hsn.master_name as hsn," +
                                            "hsn.group_name taxrate,cl.c_name as Party_Name,it.cpartno partno, pc.qtyout from itransaction pc " +
                                            "inner join item it on it.icode = pc.icode and it.type = 'IT' and it.sale = 'Y' and find_in_set(it.client_unit_id, pc.client_unit_id) = 1 " +
                                            "left join master_setting um on um.master_id=it.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, it.client_unit_id) = 1 " +
                                            "left join master_setting hsn on hsn.master_id = it.hsno and hsn.type = 'HSN' and find_in_set(hsn.client_unit_id, it.client_unit_id) = 1 " +
                                            "inner join clients_mst cl on cl.vch_num = pc.acode and cl.type = 'BCD' and substr(cl.vch_num,0,3)= '303' and find_in_set(cl.client_unit_id,pc.client_unit_id)=1 " +
                                            "where pc.client_unit_id = '" + unitid_mst + "' and substr(pc.potype,1,1)= '5' " + condi + "";
                                    }
                                    else if (sgen.GetSession(MyGuid, "BDREJTYP").ToString().Trim().Equals("012"))  // Against Dispatch
                                    {

                                        string condi = " and pc.type='" + sgen.GetSession(MyGuid, "BDMRNINVTYPE").ToString() + "' and cl.vch_num = '" + sgen.GetSession(MyGuid, "KPOPARTY").ToString() + "' " +
                                            "and pc.dsp_no in ('" + sgen.GetSession(MyGuid, "BDINVDOCNO").ToString().Trim().TrimEnd(',').Replace(",", "','").Trim() + "')";
                                        cmd = "select distinct (it.icode || pc.type || pc.dsp_no || to_char(it.vch_date, 'yyyymmdd') || it.type) " +
                                            "as fstr,it.icode as icode,it.iname as iname,pc.dsp_no,nvl(to_char(DSP_DATE,'" + sgen.Getsqldateformat() + "'),'0') DSP_DATE, cl.c_name as Party_Name,it.cpartno partno" +
                                            ",pc.type,pc.dsp_qty,pc.bal_qty as bal_qty from item it " +
                                            "inner join (select a.dsp_no,a.type,a.type2,a.icode,a.acode,a.client_id,a.client_unit_id,a.dsp_date,a.dsp_qty, sum(a.inv_qty) as inv_qty," +
                                            "(a.dsp_qty - nvl(sum(a.inv_qty), '0')) as bal_qty from(select distinct ds.vch_num as dsp_no,ds.type,ds.type2,ds.acode," +
                                            "ds.icode,ds.client_id,ds.client_unit_id,ds.vch_date dsp_date,ds.qtyout as dsp_qty,nvl(iv.qtyout,'0') as inv_qty from itransaction ds " +
                                            "left join itransaction iv on iv.dspno = ds.vch_num and iv.type = '53' and iv.icode=ds.icode and " +
                                            "iv.client_unit_id = ds.client_unit_id where substr(ds.type,1,1)='6' and substr(ds.type2,1,1)='4' and " +
                                            "ds.client_unit_id = '" + unitid_mst + "' union all  select distinct ds.vch_num as dsp_no,ds.type,ds.type2,ds.acode,ds.icode," +
                                            "ds.client_id,ds.client_unit_id,ds.vch_date dsp_date,ds.qtyout as dsp_qty,nvl(co.col11, '0') as close_qty from itransaction ds " +
                                            "inner join enx_tab co on co.col7 = ds.icode and ds.vch_num = co.col12 and co.type = 'CPC' and co.client_unit_id = '" + unitid_mst + "' " +
                                            "where substr(ds.type,1,1)='6' and substr(ds.type2,1,1)='4' and ds.client_unit_id = '" + unitid_mst + "') a group by(a.dsp_no,a.type,a.type2, a.icode,a.acode,a.client_id,a.client_unit_id,a.dsp_date,a.dsp_qty)) pc on pc.icode = " +
                                            "it.icode inner join clients_mst cl on cl.vch_num = pc.acode and cl.type = 'BCD' and find_in_set(cl.client_unit_id,pc.client_unit_id)=1 where find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 and it.type='IT' and it.sale='Y' " + condi + "";
                                    }
                                    else // Without Reference
                                    {
                                        //cmd = "select it.icode||to_char(it.vch_date,'yyyymmdd')||it.type as fstr,it.icode as Icode,it.iname as Iname,it.cpartno Partno," +
                                        //      "um.master_name as UOM,hsn.master_name as hsn,hsn.group_name taxrate,s.closing as qty_in_stock from item it " +
                                        //      "left join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
                                        //      "left join master_setting hsn on hsn.master_id=it.hsno and hsn.type='HSN' and find_in_set(hsn.client_unit_id,it.client_unit_id)=1 " +
                                        //      "left join(select t.client_unit_id, t.icode, sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout, 0)) " +
                                        //      "as Issued,sum(nvl(t.qtyin, 0)) - sum(nvl(t.qtyout, 0)) as closing from itransaction t where trim(t.store) = 'Y' group by t.icode,t.client_unit_id )" +
                                        //      " s on it.icode = s.icode and find_in_set(s.client_unit_id,it.client_unit_id)=1 " +
                                        //      "where it.type='IT' and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 and it.sale='Y' and nvl(s.closing,'0') > 0 " + where + "";


                                        cmd = "select it.icode||to_char(it.vch_date,'yyyymmdd')||it.type as fstr,it.icode as Icode,it.iname as Iname,it.cpartno Partno," +
                                              "um.master_name as UOM,hsn.master_name as hsn,hsn.group_name taxrate,s.closing as qty_in_stock from item it " +
                                              "left join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
                                              "left join master_setting hsn on hsn.master_id=it.hsno and hsn.type='HSN' and find_in_set(hsn.client_unit_id,it.client_unit_id)=1 " +
                                              "left join (select icode,client_unit_id,sum(op) op,sum(pktop) pktop,sum(qtyin) qtyin,sum(qtyout) out,sum(op)+sum(qtyin)-sum(qtyout) closing,sum(pktop) + sum(pktno) pktno from " +
    "(select icode, client_unit_id, nvl(op_2019, 0) op, nvl(pkt_2019, 0) pktop, 0 qtyin, 0 qtyout, 0 pktno from itbal union all " +
    "select icode, client_unit_id, sum(to_number(qtyin)) - sum(to_number(qtyout)) op, sum((case when substr(type, 1, 1) in ('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktop," +
    "sum(to_number(qtyin)) qtyin,sum(to_number(qtyout)) qtyout,0 pktno from itransaction " +
    "where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') " +
    "and to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "')-1 group by icode,client_unit_id union all " +
    "select icode,client_unit_id,0 as op,0 as pktop,to_number(qtyin) qtyin,to_number(qtyout) qtyout," +
    "sum((case when substr(type, 1, 1) in ('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktno from itransaction " +
    "where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and " +
    "to_date('" + param2 + "','" + sgen.Getsqldateformat() + "') " +
    "group by icode,client_unit_id,to_number(qtyin),to_number(qtyout)) a group by icode, client_unit_id)" +
                                              " s on it.icode = s.icode and find_in_set(s.client_unit_id,it.client_unit_id)=1 " +
                                              "where it.type='IT' and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 and it.sale='Y' and nvl(s.closing,'0') > 0 " + where + "";
                                    }
                                }
                                else if (sgen.GetSession(MyGuid, "KMRNTYPE").ToString() == "02") // item list in case of with PO
                                {
                                    if (sgen.GetSession(MyGuid, "KPOPARTY") != null)
                                    {
                                        if (param1 != "") where = " and (p.client_id||p.client_unit_id||p.vch_num||p.icode||to_char(p.vch_date,'yyyymmdd')||p.type) not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','").Trim().ToString() + "')";
                                        cmd = "select (p.vch_num||p.icode||to_char(it.vch_date,'yyyymmdd')||it.type) fstr," +
                                            "p.vch_num PO_Number,to_char(p.vch_date,'" + sgen.Getsqldateformat() + "') PO_Date,p.icode ICode,it.iname," +
                                            "it.cpartno PartNo,um.master_name UOM," +
                                            "nvl(s.closing,'0') as stock,p.qtyord,p.bal_qty from item it " +
                                            "inner join (select a.vch_num,a.vch_date,a.type,a.acode,a.icode,a.client_unit_id,a.qtyord,sum(a.inv_qty) inv_qty," +
                                            "(a.qtyord - nvl(sum(a.inv_qty), '0')) as bal_qty from(select distinct po.vch_num,po.vch_date,po.type,po.acode,po.icode," +
                                            "po.client_unit_id,po.qtyord,nvl(iv.qtyrcvd,'0') as inv_qty from purchases po " +
                                            "left join itransaction iv on iv.pono = po.vch_num and to_char(iv.podate,'yyyymmdd')=to_char(po.vch_date,'yyyymmdd') and iv.icode=po.icode " +
                                            "and iv.type='02' and iv.client_unit_id = po.client_unit_id " +
                                            "where po.type in ('50','54','52') and po.client_unit_id = '" + unitid_mst + "' and po.approved='Y' " +
                                            "union all " +
                                            "select distinct po.vch_num,po.vch_date,po.type,po.acode,po.icode,po.client_unit_id,po.qtyord,nvl(to_number(iv.col11),'0') close_qty from purchases po " +
                                            "left join enx_tab iv on iv.col12 = po.vch_num and to_char(iv.date1,'yyyymmdd')=to_char(po.vch_date,'yyyymmdd') and iv.col7=po.icode " +
                                            "and iv.type='POR' and iv.client_unit_id = po.client_unit_id " +
                                            "where po.type in ('50','54','52') and po.client_unit_id = '" + unitid_mst + "' and po.approved='Y') a " +
                                            "group by(a.vch_num,a.vch_date,a.type,a.acode,a.icode,a.client_unit_id,a.qtyord)) p on p.icode=it.icode and " +
                                            "find_in_set(p.client_unit_id,it.client_unit_id)=1 and p.bal_qty>0 " + where + " " +
                                            "and p.acode = '" + sgen.GetSession(MyGuid, "KPOPARTY").ToString() + "' " +
                                            "left join master_setting um on um.master_id = it.uom  and um.type = 'UMM' and find_in_set(um.client_unit_id, it.client_unit_id)= 1 " +
                                            "left join(select t.client_unit_id, t.icode, sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout, 0)) as Issued,sum(nvl(t.qtyin, 0)) - sum(nvl(t.qtyout, 0)) as closing from itransaction t " +
                                            "where trim(t.store) = 'Y' group by t.icode,t.client_unit_id ) s on it.icode = s.icode and find_in_set(s.client_unit_id,it.client_unit_id)=1 " +
                                            "where it.type='IT' and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 ";
                                        //cmd = "select (p.client_id||p.client_unit_id||p.vch_num||p.icode||to_char(p.vch_date,'yyyymmdd')||p.type) as fstr,p.type,p.vch_num PO_Number," +
                                        //    "to_char(convert_tz(p.vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') PO_Date," +
                                        //    "pay_term PayTerm,price_term PriceTerm,tmode Transport," +
                                        //    "p.pur_type Purchase_Type," +
                                        //    "p.icode ItemCode,p.iname ItemName,p.cpartno PartNo,p.uom UOM,p.hsno HSN,p.qtystk Stock_Qty,p.qtyind Indent_Qty,p.qtyord Order_Qty,p.irate ItemRate," +
                                        //    "p.taxrate TaxRate,iamount Item_Amt,p.taxamt taxamt,p.disctype Discount_Type,p.discrate Discount_Rate,p.discamt Discount_Amt,p.lineamount LineAmt," +
                                        //    "to_char(convert_tz(p.dlv_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') Delivery_Date from purchases p " +
                                        //    "where p.client_id = '" + clientid_mst + "' and p.client_unit_id = '" + unitid_mst + "' and p.acode = '" + Session["KPOPARTY"].ToString() + "'" + where + "";
                                    }
                                }
                                else if (sgen.GetSession(MyGuid, "KMRNTYPE").ToString() == "01") // item list in case of without PO
                                {
                                    if (param1 != "") where = " and it.icode not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','").Trim().ToString() + "')";
                                    // remove hsn code and tax rate  17.04
                                    //cmd = "select (it.icode||to_char(it.vch_date,'yyyymmdd')||it.type) fstr,mg.master_name MainGrp," +
                                    //    "gp.master_name ItemGrp,it.icode as Icode,it.iname as Iname,it.cpartno Partno," +
                                    //    "um.master_name as UOM,hsn.master_name as hsn,hsn.group_name taxrate from item it " +
                                    //    "inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,'" + unitid_mst + "')=1 " +
                                    //    "inner join master_setting hsn on hsn.master_id=it.hsno and hsn.type='HSN' and find_in_set(hsn.client_unit_id,'" + unitid_mst + "')=1 " +
                                    //    "inner join master_setting mg on mg.classid=substr(it.icode,1,1) and mg.type='KGP'" +
                                    //    "inner join master_setting gp on gp.master_id=substr(it.icode,1,3) and gp.type='KIG' and find_in_set(gp.client_unit_id,'" + unitid_mst + "')=1 " +
                                    //    "inner join item sg on sg.icode=substr(it.icode,1,5) and sg.type='SG' and find_in_set(sg.client_unit_id,'" + unitid_mst + "')=1 " +
                                    //    "where it.type='IT' and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 " + where + "";

                                    cmd = "select (it.icode||to_char(it.vch_date,'yyyymmdd')||it.type) fstr,mg.master_name MainGrp," +
                                        "gp.master_name ItemGrp,it.icode as Icode,it.iname as Iname,it.cpartno Partno," +
                                        "um.master_name as UOM from item it " +
                                        "inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,'" + unitid_mst + "')=1 " +
                                        "inner join master_setting mg on mg.classid=substr(it.icode,1,1) and mg.type='KGP'" +
                                        "inner join master_setting gp on gp.master_id=substr(it.icode,1,3) and gp.type='KIG' and find_in_set(gp.client_unit_id,'" + unitid_mst + "')=1 " +
                                        "inner join item sg on sg.icode=substr(it.icode,1,5) and sg.type='SG' and find_in_set(sg.client_unit_id,'" + unitid_mst + "')=1 " +
                                        "where it.type='IT' and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 " + where + "";
                                }
                                else if (sgen.GetSession(MyGuid, "KMRNTYPE").ToString() == "09") // item list in case of MRN with RGP
                                {
                                    if (sgen.GetSession(MyGuid, "KPOPARTY") != null)
                                    {
                                        if (param1 != "") where = " and (p.client_id||p.client_unit_id||p.vch_num||p.icode||to_char(p.vch_date,'yyyymmdd')||p.type) not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','").Trim().ToString() + "')";
                                        cmd = "select (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) as fstr,p.type,p.vch_num RGP_Number," +
                                            "to_char(convert_tz(p.vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') Doc_Date,p.aname Sender_name,p.contactno," +
                                            "p.icode ItemCode,i.iname ItemName,i.cpartno PartNo,u.master_name uom,h.master_name hsno,p.qtystk Stock_Qty,p.qtychl,p.qtyin,s.Received," +
                                            "(to_number(p.qtyin)-to_number(s.Received)) bal from itransactionc p " +
                                            "inner join item i on i.icode=p.icode and i.type='IT' and find_in_set(p.client_unit_id,i.client_unit_id)=1 " +
                                            "inner join master_setting u on u.master_id=i.uom and u.type='UMM' and find_in_set(u.client_unit_id,p.client_unit_id)=1 " +
                                            "inner join master_setting h on h.master_id=i.hsno and h.type='HSN' and find_in_set(h.client_unit_id,p.client_unit_id)=1 " +
                                            "left join (select t.type,t.client_unit_id,t.icode, sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout, 0)) Issued from itransaction t " +
                                            "where trim(t.store) = 'Y' group by t.type,t.icode,t.client_unit_id) s on p.icode = s.icode and s.type = 'Q09' and p.client_unit_id = s.client_unit_id " +
                                            "where p.type='21' and p.client_unit_id = '" + unitid_mst + "' and p.store='Y' and p.acode = '" + sgen.GetSession(MyGuid, "KPOPARTY").ToString() + "'" + where + "";
                                    }
                                }
                                else if (sgen.GetSession(MyGuid, "KMRNTYPE").ToString() == "03")//job work po
                                {
                                    if (sgen.GetSession(MyGuid, "KPOPARTY") != null)
                                    {
                                        if (param1 != "") where = " and (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','").Trim().ToString() + "')";
                                        cmd = "select (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) as fstr,p.type,p.vch_num PO_Number," +
                                            "to_char(p.vch_date,'" + sgen.Getsqldateformat() + "') PO_Date," +
                                            "p.icode ItemCode,i.iname ItemName,i.cpartno PartNo,u.master_name uom,h.master_name hsn,p.qtystk Stock_Qty,p.qtyord Order_Qty,p.irate ItemRate," +
                                            "h.group_name taxrate,iamount Item_Amt,p.taxamt taxamt,p.disctype Discount_Type,p.discrate Discount_Rate,p.discamt Discount_Amt,p.lineamount LineAmt," +
                                            "to_char(p.dlv_date,'" + sgen.Getsqldateformat() + "') Delivery_Date from purchases p " +
                                            "inner join item i on i.icode=p.icode and i.type='IT' and find_in_set(p.client_unit_id,i.client_unit_id)=1 " +
                                            "inner join master_setting u on u.master_id=i.uom and u.type='UMM' and find_in_set(u.client_unit_id,p.client_unit_id)=1 " +
                                            "inner join master_setting h on h.master_id=i.hsno and h.type='HSN' and find_in_set(h.client_unit_id,p.client_unit_id)=1 " +
                                            "where p.type='54' and p.client_unit_id = '" + unitid_mst + "' and p.acode = '" + sgen.GetSession(MyGuid, "KPOPARTY").ToString() + "'" + where + "";
                                    }
                                }
                                else if (sgen.GetSession(MyGuid, "KMRNTYPE").ToString() == "08")//stn
                                {
                                    if (sgen.GetSession(MyGuid, "KPOPARTY") != null)
                                    {
                                        if (param1 != "") { { if (param1 != "-") where = " and (it.icode) not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','") + "')"; } }

                                        cmd = "select * from (select it.client_id || it.client_unit_id ||cl.interunit|| it.icode || to_char(it.vch_date, 'yyyymmdd') || it.type as fstr" +
      ",it.icode as Icode,it.iname as Iname,st.vch_num as stnout_no,to_char(st.vch_date,'" + sgen.Getsqldateformat() + "') as stnout_date," +
      "it.cpartno Partno, um.master_name as UOM,hsn.master_name as hsn,hsn.group_name taxrate ,(st.qtyout - nvl(sn.used_qty, 0)) bal_stk_to_trn," +
      "s.closing as qty_in_stock,st.qtyout,cl.c_name as party_name,cl.vch_num party_code,cl.interunit from itransaction st " +
      "inner join clients_mst cl on cl.vch_num = st.acode and find_in_set(st.client_unit_id,cl.client_unit_id)=1 and cl.vch_num = '" + sgen.GetSession(MyGuid, "KPOPARTY").ToString() + "' " +
      "inner join item it on it.icode = st.icode and find_in_set(it.client_unit_id, st.client_unit_id)=1 " + where + " " +
      "left join master_setting um on um.master_id = it.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, it.client_unit_id)= 1 " +
      "left join master_setting hsn on hsn.master_id = it.hsno and hsn.type = 'HSN' and find_in_set(hsn.client_unit_id, it.client_unit_id)= 1 " +
      "left join(select sum(qtychl) as used_qty,icode,pono from itransaction where type = '08' group by icode,pono) sn on sn.icode = st.icode and sn.pono = st.vch_num " +
      "left join (select icode,client_unit_id,sum(op) op,sum(pktop) pktop,sum(qtyin) qtyin,sum(qtyout) out,sum(op)+sum(qtyin)-sum(qtyout) closing,sum(pktop) + sum(pktno) pktno from " +
"(select icode, client_unit_id, nvl(op_2019, 0) op, nvl(pkt_2019, 0) pktop, 0 qtyin, 0 qtyout, 0 pktno from itbal union all " +
"select icode, client_unit_id, sum(to_number(qtyin)) - sum(to_number(qtyout)) op, sum((case when substr(type, 1, 1) in ('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktop," +
"sum(to_number(qtyin)) qtyin,sum(to_number(qtyout)) qtyout,0 pktno from itransaction " +
"where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') " +
"and to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "')-1 group by icode,client_unit_id union all " +
"select icode,client_unit_id,0 as op,0 as pktop,to_number(qtyin) qtyin,to_number(qtyout) qtyout," +
"sum((case when substr(type, 1, 1) in ('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktno from itransaction " +
"where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and " +
"to_date('" + param2 + "','" + sgen.Getsqldateformat() + "') " +
"group by icode,client_unit_id,to_number(qtyin),to_number(qtyout)) a group by icode, client_unit_id) s on it.icode = s.icode and it.client_unit_id = s.client_unit_id " +
      "where st.type = 'ST' and st.client_id = '" + clientid_mst + "') a " +
      "where a.interunit = '" + unitid_mst + "'";
                                    }
                                }
                            }
                            break;
                        // shiv
                        case "CHRGS":
                            cmd = "select (master_id||to_char(vch_date,'yyyymmdd')||type) fstr,master_id DocNo,master_name Charge " +
                                "from master_setting where type='MR0' and find_in_set(client_unit_id,'" + unitid_mst + "')=1";
                            break;
                        // shiv
                        case "RATE":
                            sgen.SetSession(MyGuid, "rtrno", param1.Trim());
                            cmd = "select (master_id||to_char(vch_date,'yyyymmdd')||type) fstr,master_id DocNo,group_name TaxRate " +
                                "from master_setting where type='HSN' and find_in_set(client_unit_id,'" + unitid_mst + "')=1";
                            break;
                        case "RGP":
                            cmd = "select (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) as fstr,p.vch_num Doc_no," +
                                "to_char(convert_tz(p.vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') Doc_Date,c.c_name Party_Name," +
                                "c.c_gstin Party_Gstin,c.addr Party_Address,p.aname Sender_Name,p.contactno Sender_Contact,p.icode ItemCode,i.iname ItemName," +
                                "p.qtychl Qty_Req,p.qtyin Qty_In,p.qtybal Qty_Req_Bal from itransactionc p " +
                                "inner join clients_mst c on p.acode = c.vch_num and find_in_set(c.client_unit_id,p.client_unit_id)=1 and substr(c.vch_num,0,3)='203' " +
                                "inner join item i on i.icode=p.icode and i.type='IT' and find_in_set(i.client_unit_id,p.client_unit_id)=1 " +
                                "where p.type='21' and p.client_unit_id = '" + unitid_mst + "'";
                            break;
                    }
                    break;
                #endregion
                #region mrnn
                case "mrnn":
                    switch (btnval.ToUpper())
                    {
                        case "PRINT":
                        case "EDIT":
                            cmd = "select distinct (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) as fstr,p.vch_num MRN_No," +
                                "to_char(convert_tz(p.vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') MRN_Date,tp.master_name as MRN_TYPE," +
                                "c.c_name as Party_Name,p.chlno Challan_No," +
                                "to_char(p.invdate, '" + sgen.Getsqldateformat() + "') as inv_date" +
                                ",p.invno Inv_No, p.pono from itransaction p " +
                                "inner join clients_mst c on p.acode = c.vch_num and find_in_set(c.client_unit_id,p.client_unit_id)=1 and c.type='BCD' " +
                                "inner join master_setting tp on tp.master_id=p.type and find_in_set(tp.client_unit_id, p.client_unit_id)= 1 and tp.type='KMR' " +
                                "where p.client_unit_id = '" + unitid_mst + "' and p.type in ('01', '02', '05', '07', '09','08') " + xprdrange.Replace("vch_date", "p.vch_date") + " order by p.vch_num desc";
                            break;

                        case "VIEW":
                            //cmd = "select (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) as fstr,p.vch_num MRN_No," +
                            //  "to_char(convert_tz(p.vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') MRN_Date,p.type MRN_Type," +
                            //  "c.c_name as Party_Name,c.c_gstin as Party_Gstin,c.addr as Party_Address,p.chlno Challan_No,p.ewayno Eway_BillNo,p.invno Inv_No,p.tmode Transport," +
                            //  "p.icode Item_Code,p.iname Item_Name,p.cpartno Part_No,p.uom UOM,p.hsno HSN,p.taxrate TaxRate,qtychl Challan_Qty,qtyrcvd In_Qty,p.irate ItemRate," +
                            //  "p.iamount ItemAmt,p.taxamt TaxAmt,p.lineamount LineAmt," +
                            //  "p.basicamt BasicAmt from itransaction p " +
                            //  "inner join clients_mst c on p.acode = c.vch_num and c.client_id = p.client_id and c.client_unit_id = p.client_unit_id and c.type = 'PVD' " +
                            //  "where p.client_id = '" + clientid_mst + "' and p.client_unit_id = '" + unitid_mst + "' and p.type in ('01','02','05','07','09')";
                            //brijesh
                            cmd = "select (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) as fstr,p.vch_num MRN_No," +
                                "to_char(convert_tz(p.vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') MRN_Date,p.type MRN_TYPE_CODE,tp.master_name as MRN_TYPE," +
                                "c.c_name as Party_Name,c.c_gstin as Party_Gstin,c.addr as Party_Address,p.chlno Challan_No, p.ewayno Eway_BillNo, nvl(kt.vch_num, '-') as gate_in_no," +
                                "to_char(p.ewaydate, '" + sgen.Getsqldateformat() + "') as Eway_BillDate,to_char(p.invdate, '" + sgen.Getsqldateformat() + "') as inv_date" +
                                ",p.invno Inv_No, p.tmode Transport, p.icode Item_Code, p.iname Item_Name, p.cpartno Part_No, p.uom UOM, p.hsno HSN, p.taxrate TaxRate, " +
                                "qtychl Challan_Qty,qtyrcvd In_Qty, p.irate ItemRate, p.disctype,p.discrate,p.iamount ItemAmt, p.taxamt TaxAmt, p.lineamount LineAmt," +
                                " p.basicamt MRN_BasicAmt,p.netamt as MRN_Net_amount,p.pktno as NOOFPKT_BOX,p.iremark remark, p.pono,to_char(p.podate, '" + sgen.Getsqldateformat() + "') as podate" +
                                ",p.btchno from itransaction p " +
                                "left join kc_tab kt on p.gatein_no = (kt.client_id || kt.vch_num || kt.type) and find_in_set(p.client_unit_id,kt.client_unit_id)=1 and kt.type = 'GIN' " +
                                "inner join clients_mst c on p.acode = c.vch_num and find_in_set(c.client_unit_id,p.client_unit_id)=1 and c.type='BCD' " +
                                "inner join master_setting tp on tp.master_id=p.type and find_in_set(tp.client_unit_id, p.client_unit_id)= 1 and tp.type='KMR' " +
                                "where p.client_unit_id = '" + unitid_mst + "' and p.type in ('01', '02', '05', '07', '09','08') " + xprdrange.Replace("vch_date", "p.vch_date") + " order by p.vch_num desc";
                            break;
                        // shiv
                        case "NEW":
                            cmd = "select (master_id||to_char(vch_date,'yyyymmdd')||type) fstr,master_id Mrn_Type,master_name Mrn_type_Name from master_setting " +
                                "where find_in_set(client_unit_id,'" + unitid_mst + "')=1 and type='KMR'";
                            break;
                        case "CUSREJTYPE":
                            cmd = "SELECT master_id FSTR,master_id,REJ_TYPE FROM (select '011' as master_id, 'AGAINST INVOIVE' as REJ_TYPE from dual Union all select '012'" +
                                " master_id,'AGAINST DISPATCH' as REJ_TYPE from dual union all select '013' master_id,'WITHOUT REFERENCE' as REJ_TYPE from dual)";
                            break;
                        case "BDDOCNO":
                            if (sgen.GetSession(MyGuid, "BDREJTYP").ToString().Trim().Equals("011"))
                            {

                                cmd = "select distinct (iv.client_id||iv.client_unit_id||iv.vch_num||to_char(iv.vch_date, 'yyyymmdd')||iv.type) fstr,iv.vch_num invoice_no," +
                                "to_char(iv.vch_date, '" + sgen.Getsqldateformat() + "') as invoice_date,iv.type from itransaction iv " +
                                "inner join clients_mst cl on iv.acode = cl.vch_num and find_in_set(iv.client_unit_id,cl.client_unit_id)=1 and cl.vch_num = '" + sgen.GetSession(MyGuid, "KPOPARTY").ToString() + "' " +
                                "where iv.type = '" + sgen.GetSession(MyGuid, "BDMRNINVTYPE").ToString() + "' and substr(iv.potype,1,1)= '5'";
                            }
                            else
                            {

                                cmd = "select distinct (iv.client_id||iv.client_unit_id||iv.vch_num||to_char(iv.vch_date, 'yyyymmdd')||iv.type) fstr,iv.vch_num invoice_no," +
                              "to_char(iv.vch_date, '" + sgen.Getsqldateformat() + "') as invoice_date,iv.type from itransaction iv " +
                              "inner join clients_mst cl on iv.acode = cl.vch_num and find_in_set(iv.client_unit_id,cl.client_unit_id)=1 and cl.vch_num = '" + sgen.GetSession(MyGuid, "KPOPARTY").ToString() + "' " +
                              "where iv.type = '" + sgen.GetSession(MyGuid, "BDMRNINVTYPE").ToString() + "' and substr(iv.type2,1,1)= '4'";
                            }
                            break;
                        //shiv
                        case "PARTY":
                            switch (param1.Trim())
                            {
                                case "09":
                                    cmd = @"select distinct (a.vch_num|| to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.vch_num vendor_code,a.c_name Name,
                                            a.addr address,a.c_gstin as GSTIN,(case when a.tor='C' then 'Composition' when a.tor='R' then 'Regular' else 'Not Registered' end) GSTType,
                                            a.type_desc as Search_text from clients_mst a 
                                            inner join itransactionc r on r.acode=a.vch_num and find_in_set(r.client_unit_id,a.client_unit_id)=1 and r.type='21' 
                                            where substr(a.vch_num,0,3)='203'  and find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 and a.type='BCD'";
                                    break;
                                case "02":
                                    cmd = "select distinct (a.vch_num|| to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.vch_num as vendor_code,a.c_name vendor_name," +
                                        "a.c_gstin as gstin,a.addr from clients_mst a " +
                                        "inner join purchases pc on pc.acode=a.vch_num and find_in_set(pc.client_unit_id,a.client_unit_id)=1 and pc.type in ('50','52') " +
                                        "where substr(a.vch_num,0,3)='203' and find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 and a.type='BCD'";
                                    break;
                                case "08":
                                    // brajesh 17.04 why clint unit is not here
                                    cmd = "select (a.vch_num|| to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.vch_num vendor_code,a.c_name Name," +
                                        "a.addr address,a.c_gstin as GSTIN,(case when a.tor = 'C' then " +
                                        "'Composition' when a.tor = 'R' then 'Regular' else 'Not Registered' end) GSTType,a.interunit from itransaction st " +
                                        "inner join clients_mst a on a.vch_num = st.acode and find_in_set(st.client_unit_id,a.client_unit_id)=1 and substr(a.vch_num,0,3)='103' " +
                                        "where st.client_id = '" + clientid_mst + "' and st.type = 'ST'";
                                    break;
                                case "05":
                                    if (sgen.GetSession(MyGuid, "BDREJTYP").ToString().Trim().Equals("011"))
                                    {
                                        cmd = "select distinct (a.vch_num||st.type|| to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.vch_num vendor_code," +
                                            "a.c_name Name, a.addr address, (case when a.tor = 'C' then 'Composition' when a.tor = 'R' then 'Regular' else 'Not Registered' end) GSTType from " +
                                            "itransaction st " +
                                            "inner join clients_mst a on a.vch_num = st.acode and find_in_set(st.client_unit_id,a.client_unit_id)=1 and substr(a.vch_num,0,3)= '303' " +
                                            "where substr(st.type,1,1)= '4' and substr(st.potype,1,1)= '5' and st.client_unit_id = '" + unitid_mst + "'";
                                    }
                                    else if (sgen.GetSession(MyGuid, "BDREJTYP").ToString().Trim().Equals("012"))
                                    {
                                        cmd = "select distinct (a.vch_num||st.type|| to_char(a.vch_date,'yyyymmdd')||a.type) as fstr ,a.vch_num vendor_code," +
                                         "a.c_name Name, a.addr address, a.c_gstin as GSTIN," +
                                         "(case when a.tor = 'C' then 'Composition' when a.tor = 'R' then 'Regular' else 'Not Registered' end) GSTType from " +
                                         "itransaction st " +
                                         "inner join clients_mst a on a.vch_num = st.acode and find_in_set(st.client_unit_id,a.client_unit_id)=1 and substr(a.vch_num,0,3)= '303' " +
                                         "where substr(st.type,1,1)= '6' and substr(st.type2,1,1)= '4' and st.client_unit_id = '" + unitid_mst + "'";
                                    }
                                    else
                                    {
                                        cmd = "select (a.vch_num|| to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.vch_num vendor_code,a.c_name Name," +
                                            "a.addr address,a.c_gstin as GSTIN,(case when a.tor='C' then " +
                                            "'Composition' when a.tor='R' then 'Regular' else 'Not Registered' end) GSTType,a.type_desc as Search_text from clients_mst a " +
                                            "where substr(a.vch_num,0,3)='203' and find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 and a.type='BCD'";
                                    }
                                    break;
                                default:
                                    cmd = "select (a.vch_num|| to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.vch_num vendor_code,a.c_name Name,a.addr address,a.pincode Pincode," +
                                        " a.c_gstin as GSTIN,(case when a.tor='C' then 'Composition' when a.tor='R' then 'Regular' else 'Not Registered' end) GSTType," +
                                        "a.type_desc as Search_text from clients_mst a where substr(a.vch_num,0,3)='203' and find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 and a.type='BCD'";
                                    break;
                            }
                            break;
                        case "ITEM":
                            if (sgen.GetSession(MyGuid, "KMRNTYPE") != null)
                            {
                                if (sgen.GetSession(MyGuid, "KMRNTYPE").ToString() == "05")   // item list in case Customer Rejection / Return
                                {
                                    if (sgen.GetSession(MyGuid, "BDREJTYP").ToString().Trim().Equals("011"))  // Against Invoice
                                    {
                                        string condi = " and pc.type='" + sgen.GetSession(MyGuid, "BDMRNINVTYPE").ToString() + "' and cl.vch_num = '" + sgen.GetSession(MyGuid, "KPOPARTY").ToString() + "' " +
                                                       "and pc.vch_num in ('" + sgen.GetSession(MyGuid, "BDINVDOCNO").ToString().Trim().TrimEnd(',').Replace(",", "','").Trim() + "')";
                                        cmd = "select distinct (it.icode || pc.type || pc.vch_num || to_char(it.vch_date, 'yyyymmdd') || it.type) as fstr," +
                                            "it.icode as icode,it.iname as iname,pc.vch_num as Doc_no,um.master_name as UOM,hsn.master_name as hsn," +
                                            "hsn.group_name taxrate,cl.c_name as Party_Name,it.cpartno partno, pc.qtyout from itransaction pc " +
                                            "inner join item it on it.icode = pc.icode and it.type = 'IT' and it.sale = 'Y' and find_in_set(it.client_unit_id, pc.client_unit_id) = 1 " +
                                            "left join master_setting um on um.master_id=it.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, it.client_unit_id) = 1 " +
                                            "left join master_setting hsn on hsn.master_id = it.hsno and hsn.type = 'HSN' and find_in_set(hsn.client_unit_id, it.client_unit_id) = 1 " +
                                            "inner join clients_mst cl on cl.vch_num = pc.acode and cl.type = 'BCD' and substr(cl.vch_num,0,3)= '303' and find_in_set(cl.client_unit_id,pc.client_unit_id)=1 " +
                                            "where pc.client_unit_id = '" + unitid_mst + "' and substr(pc.potype,1,1)= '5' " + condi + "";
                                    }
                                    else if (sgen.GetSession(MyGuid, "BDREJTYP").ToString().Trim().Equals("012"))  // Against Dispatch
                                    {
                                        string condi = " and pc.type='" + sgen.GetSession(MyGuid, "BDMRNINVTYPE").ToString() + "' and cl.vch_num = '" + sgen.GetSession(MyGuid, "KPOPARTY").ToString() + "' " +
                                           "and pc.dsp_no in ('" + sgen.GetSession(MyGuid, "BDINVDOCNO").ToString().Trim().TrimEnd(',').Replace(",", "','").Trim() + "')";
                                        cmd = "select distinct (it.icode || pc.type || pc.dsp_no || to_char(it.vch_date, 'yyyymmdd') || it.type) " +
                                            "as fstr,it.icode as icode,it.iname as iname,pc.dsp_no,nvl(to_char(DSP_DATE,'" + sgen.Getsqldateformat() + "'),'0') DSP_DATE, cl.c_name as Party_Name,it.cpartno partno" +
                                            ",pc.type,pc.dsp_qty,pc.bal_qty as bal_qty from item it " +
                                            "inner join (select a.dsp_no,a.type,a.type2,a.icode,a.acode,a.client_id,a.client_unit_id,a.dsp_date,a.dsp_qty, sum(a.inv_qty) as inv_qty" +
                                            ",(a.dsp_qty - nvl(sum(a.inv_qty), '0')) as bal_qty from(select distinct ds.vch_num as dsp_no,ds.type,ds.type2,ds.acode," +
                                            "ds.icode,ds.client_id,ds.client_unit_id,ds.vch_date dsp_date,ds.qtyout as dsp_qty,nvl(iv.qtyout,'0') as inv_qty from itransaction ds " +
                                            "left join itransaction iv on iv.dspno = ds.vch_num and iv.type = '53' and iv.icode=ds.icode and " +
                                            "iv.client_unit_id = ds.client_unit_id where substr(ds.type,1,1)='6' and substr(ds.type2,1,1)='4' and " +
                                            "ds.client_unit_id = '" + unitid_mst + "' union all  select distinct ds.vch_num as dsp_no,ds.type,ds.type2,ds.acode,ds.icode," +
                                            "ds.client_id,ds.client_unit_id,ds.vch_date dsp_date,ds.qtyout as dsp_qty,nvl(co.col11, '0') as close_qty from itransaction ds " +
                                            "inner join enx_tab co on co.col7 = ds.icode and ds.vch_num = co.col12 and co.type = 'CPC' and co.client_unit_id = '" + unitid_mst + "' " +
                                            "where substr(ds.type,1,1)='6' and substr(ds.type2,1,1)='4' and ds.client_unit_id = '" + unitid_mst + "') a group by(a.dsp_no,a.type,a.type2, a.icode,a.acode,a.client_id,a.client_unit_id,a.dsp_date,a.dsp_qty)) pc on pc.icode = " +
                                            "it.icode inner join clients_mst cl on cl.vch_num = pc.acode and cl.type = 'BCD' and find_in_set(cl.client_unit_id,pc.client_unit_id)=1 where find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 and it.type='IT' and it.sale='Y' " + condi + "";
                                    }
                                    else  // Without Reference
                                    {
                                        cmd = "select it.icode||to_char(it.vch_date,'yyyymmdd')||it.type as fstr,it.icode as Icode,it.iname as Iname,it.cpartno Partno," +
                                              "um.master_name as UOM,hsn.master_name as hsn,hsn.group_name taxrate,s.closing as qty_in_stock from item it " +
                                              "left join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
                                              "left join master_setting hsn on hsn.master_id=it.hsno and hsn.type='HSN' and find_in_set(hsn.client_unit_id,it.client_unit_id)=1 " +
                                              "left join(select icode,client_unit_id,sum(op) op,sum(pktop) pktop,sum(qtyin) qtyin,sum(qtyout) out,sum(op)+sum(qtyin)-sum(qtyout) closing,sum(pktop) + sum(pktno) pktno from " +
    "(select icode, client_unit_id, nvl(op_2019, 0) op, nvl(pkt_2019, 0) pktop, 0 qtyin, 0 qtyout, 0 pktno from itbal union all " +
    "select icode, client_unit_id, sum(to_number(qtyin)) - sum(to_number(qtyout)) op, sum((case when substr(type, 1, 1) in ('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktop," +
    "sum(to_number(qtyin)) qtyin,sum(to_number(qtyout)) qtyout,0 pktno from itransaction " +
    "where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') " +
    "and to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "')-1 group by icode,client_unit_id union all " +
    "select icode,client_unit_id,0 as op,0 as pktop,to_number(qtyin) qtyin,to_number(qtyout) qtyout," +
    "sum((case when substr(type, 1, 1) in ('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktno from itransaction " +
    "where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and " +
    "to_date('" + param2 + "','" + sgen.Getsqldateformat() + "') " +
    "group by icode,client_unit_id,to_number(qtyin),to_number(qtyout)) a group by icode, client_unit_id)" +
                                              " s on it.icode = s.icode and find_in_set(s.client_unit_id,it.client_unit_id)=1 " +
                                              "where it.type='IT' and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 and it.sale='Y' and nvl(s.closing,'0') > 0 " + where + "";
                                    }
                                }
                                else if (sgen.GetSession(MyGuid, "KMRNTYPE").ToString() == "02") // item list in case of with PO
                                {
                                    if (sgen.GetSession(MyGuid, "KPOPARTY") != null)
                                    {
                                        //if (param1 != "") where = " and (p.client_id||p.client_unit_id||p.vch_num||p.icode||to_char(p.vch_date,'yyyymmdd')||p.type) not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','").Trim().ToString() + "')";

                                        // remove client id, HSN and Location
                                        cmd = "select (p.vch_num||p.icode||to_char(it.vch_date,'yyyymmdd')||it.type) fstr," +
                                            "p.vch_num PO_Number,to_char(p.vch_date,'" + sgen.Getsqldateformat() + "') PO_Date,p.icode ICode,it.iname," +
                                            "it.cpartno PartNo,um.master_name UOM," +
                                            "nvl(s.closing,'0') as stock,p.qtyord,p.bal_qty from item it " +
                                            "inner join (select a.vch_num,a.vch_date,a.type,a.acode,a.icode,a.client_unit_id,a.qtyord,sum(a.inv_qty) inv_qty," +
                                            "(a.qtyord - nvl(sum(a.inv_qty), '0')) as bal_qty from(select distinct po.vch_num,po.vch_date,po.type,po.acode,po.icode," +
                                            "po.client_unit_id,po.qtyord,nvl(iv.qtyrcvd,'0') as inv_qty from purchases po " +
                                            "left join itransaction iv on iv.pono = po.vch_num and to_char(iv.podate,'yyyymmdd')=to_char(po.vch_date,'yyyymmdd') and iv.icode=po.icode " +
                                            "and iv.type='02' and iv.client_unit_id = po.client_unit_id " +
                                            "where po.type in ('50','54','52') and po.client_unit_id = '" + unitid_mst + "' " +
                                            "union all " +
                                            "select distinct po.vch_num,po.vch_date,po.type,po.acode,po.icode,po.client_unit_id,po.qtyord,nvl(to_number(iv.col11),'0') close_qty from purchases po " +
                                            "left join enx_tab iv on iv.col12 = po.vch_num and to_char(iv.date1,'yyyymmdd')=to_char(po.vch_date,'yyyymmdd') and iv.col7=po.icode " +
                                            "and iv.type='POR' and iv.client_unit_id = po.client_unit_id " +
                                            "where po.type in ('50','54','52') and po.client_unit_id = '" + unitid_mst + "') a " +
                                            "group by(a.vch_num,a.vch_date,a.type,a.acode,a.icode,a.client_unit_id,a.qtyord)) p on p.icode=it.icode and " +
                                            "find_in_set(p.client_unit_id,it.client_unit_id)=1 and p.bal_qty>0 " + where + " " +
                                            "and p.acode = '" + sgen.GetSession(MyGuid, "KPOPARTY").ToString() + "' " +
                                            "left join master_setting um on um.master_id = it.uom  and um.type = 'UMM' and find_in_set(um.client_unit_id, it.client_unit_id)= 1 " +
                                            "left join(select t.client_unit_id, t.icode, sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout, 0)) as Issued,sum(nvl(t.qtyin, 0)) - sum(nvl(t.qtyout, 0)) as closing from itransaction t " +
                                            "where trim(t.store) = 'Y' group by t.icode,t.client_unit_id ) s on it.icode = s.icode and find_in_set(s.client_unit_id,it.client_unit_id)=1 " +
                                            "where it.type='IT' and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 ";
                                        //cmd = "select (p.client_id||p.client_unit_id||p.vch_num||p.icode||to_char(p.vch_date,'yyyymmdd')||p.type) as fstr,p.type,p.vch_num PO_Number," +
                                        //    "to_char(convert_tz(p.vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') PO_Date," +
                                        //    "pay_term PayTerm,price_term PriceTerm,tmode Transport," +
                                        //    "p.pur_type Purchase_Type," +
                                        //    "p.icode ItemCode,p.iname ItemName,p.cpartno PartNo,p.uom UOM,p.hsno HSN,p.qtystk Stock_Qty,p.qtyind Indent_Qty,p.qtyord Order_Qty,p.irate ItemRate," +
                                        //    "p.taxrate TaxRate,iamount Item_Amt,p.taxamt taxamt,p.disctype Discount_Type,p.discrate Discount_Rate,p.discamt Discount_Amt,p.lineamount LineAmt," +
                                        //    "to_char(convert_tz(p.dlv_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') Delivery_Date from purchases p " +
                                        //    "where p.client_id = '" + clientid_mst + "' and p.client_unit_id = '" + unitid_mst + "' and p.acode = '" + Session["KPOPARTY"].ToString() + "'" + where + "";
                                    }
                                }
                                else if (sgen.GetSession(MyGuid, "KMRNTYPE").ToString() == "01") // item list in case of without PO
                                {
                                    //if (param1 != "") where = " and it.icode not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','").Trim().ToString() + "')";
                                    // remove hsn code and tax rate  17.04

                                    //cmd = "select (it.icode||to_char(it.vch_date,'yyyymmdd')||it.type) fstr,mg.master_name MainGrp," +
                                    //    "gp.master_name ItemGrp,it.icode as Icode,it.iname as Iname,it.cpartno Partno," +
                                    //    "um.master_name as UOM,hsn.master_name as hsn,hsn.group_name taxrate from item it " +
                                    //    "inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,'" + unitid_mst + "')=1 " +
                                    //    "inner join master_setting hsn on hsn.master_id=it.hsno and hsn.type='HSN' and find_in_set(hsn.client_unit_id,'" + unitid_mst + "')=1 " +
                                    //    "inner join master_setting mg on mg.classid=substr(it.icode,1,1) and mg.type='KGP'" +
                                    //    "inner join master_setting gp on gp.master_id=substr(it.icode,1,3) and gp.type='KIG' and find_in_set(gp.client_unit_id,'" + unitid_mst + "')=1 " +
                                    //    "inner join item sg on sg.icode=substr(it.icode,1,5) and sg.type='SG' and find_in_set(sg.client_unit_id,'" + unitid_mst + "')=1 " +
                                    //    "where it.type='IT' and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 " + where + "";

                                    cmd = "select (it.icode||to_char(it.vch_date,'yyyymmdd')||it.type) fstr,mg.master_name MainGrp," +
                                       "gp.master_name ItemGrp,it.icode as Icode,it.iname as Iname,it.cpartno Partno," +
                                       "um.master_name as UOM from item it " +
                                       "inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,'" + unitid_mst + "')=1 " +
                                       "inner join master_setting mg on mg.classid=substr(it.icode,1,1) and mg.type='KGP'" +
                                       "inner join master_setting gp on gp.master_id=substr(it.icode,1,3) and gp.type='KIG' and find_in_set(gp.client_unit_id,'" + unitid_mst + "')=1 " +
                                       "inner join item sg on sg.icode=substr(it.icode,1,5) and sg.type='SG' and find_in_set(sg.client_unit_id,'" + unitid_mst + "')=1 " +
                                       "where it.type='IT' and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 " + where + "";
                                }
                                else if (sgen.GetSession(MyGuid, "KMRNTYPE").ToString() == "09") // Item list in case of MRN with RGP
                                {
                                    if (sgen.GetSession(MyGuid, "KPOPARTY") != null)
                                    {
                                        //if (param1 != "") where = " and (p.client_id||p.client_unit_id||p.vch_num||p.icode||to_char(p.vch_date,'yyyymmdd')||p.type) not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','").Trim().ToString() + "')";
                                        cmd = "select (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) as fstr,p.type,p.vch_num RGP_Number," +
                                            "to_char(convert_tz(p.vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') Doc_Date,p.aname Sender_name,p.contactno," +
                                            "p.icode ItemCode,i.iname ItemName,i.cpartno PartNo,u.master_name uom,h.master_name hsno,p.qtystk Stock_Qty,p.qtychl,p.qtyin,,s.Received," +
                                            "(to_number(p.qtyin)-to_number(s.Received)) bal from itransactionc p " +
                                            "inner join item i on i.icode=p.icode and i.type='IT' and find_in_set(p.client_unit_id,i.client_unit_id)=1 " +
                                            "inner join master_setting u on u.master_id=i.uom and u.type='UMM' and find_in_set(u.client_unit_id,p.client_unit_id)=1 " +
                                            "inner join master_setting h on h.master_id=i.hsno and h.type='HSN' and find_in_set(h.client_unit_id,p.client_unit_id)=1 " +
                                            "left join (select t.type,t.client_unit_id,t.icode, sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout, 0)) Issued from itransaction t " +
                                            "where trim(t.store) = 'Y' group by t.type,t.icode,t.client_unit_id) s on p.icode = s.icode and s.type = 'Q09' and p.client_unit_id = s.client_unit_id" +
                                            "where p.type='21' and p.client_unit_id = '" + unitid_mst + "' and p.store='Y' and p.acode = '" + sgen.GetSession(MyGuid, "KPOPARTY").ToString() + "'" + where + "";
                                    }
                                }
                                else if (sgen.GetSession(MyGuid, "KMRNTYPE").ToString() == "03")//job work po
                                {
                                    if (sgen.GetSession(MyGuid, "KPOPARTY") != null)
                                    {
                                        //if (param1 != "") where = " and (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','").Trim().ToString() + "')";
                                        cmd = "select (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) as fstr,p.type,p.vch_num PO_Number," +
                                            "to_char(p.vch_date,'" + sgen.Getsqldateformat() + "') PO_Date," +
                                            "p.icode ItemCode,i.iname ItemName,i.cpartno PartNo,u.master_name uom,h.master_name hsn,p.qtystk Stock_Qty,p.qtyord Order_Qty,p.irate ItemRate," +
                                            "h.group_name taxrate,iamount Item_Amt,p.taxamt taxamt,p.disctype Discount_Type,p.discrate Discount_Rate,p.discamt Discount_Amt,p.lineamount LineAmt," +
                                            "to_char(p.dlv_date,'" + sgen.Getsqldateformat() + "') Delivery_Date from purchases p " +
                                            "inner join item i on i.icode=p.icode and i.type='IT' and find_in_set(p.client_unit_id,i.client_unit_id)=1 " +
                                            "inner join master_setting u on u.master_id=i.uom and u.type='UMM' and find_in_set(u.client_unit_id,p.client_unit_id)=1 " +
                                            "inner join master_setting h on h.master_id=i.hsno and h.type='HSN' and find_in_set(h.client_unit_id,p.client_unit_id)=1 " +
                                            "where p.type='54' and p.client_unit_id = '" + unitid_mst + "' and p.acode = '" + sgen.GetSession(MyGuid, "KPOPARTY").ToString() + "'" + where + "";
                                    }
                                }
                                else if (sgen.GetSession(MyGuid, "KMRNTYPE").ToString() == "08")//stn
                                {
                                    if (sgen.GetSession(MyGuid, "KPOPARTY") != null)
                                    {
                                        //if (param1 != "") { { if (param1 != "-") where = " and (it.icode) not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','") + "')"; } }
                                        cmd = "select * from (select it.client_id || it.client_unit_id ||cl.interunit|| it.icode || to_char(it.vch_date, 'yyyymmdd') || it.type as fstr" +
                                            ",it.icode as Icode,it.iname as Iname,st.vch_num as stnout_no,to_char(st.vch_date,'" + sgen.Getsqldateformat() + "') as stnout_date," +
                                            "it.cpartno Partno, um.master_name as UOM,hsn.master_name as hsn,hsn.group_name taxrate ,(st.qtyout - nvl(sn.used_qty, 0)) bal_stk_to_trn," +
                                            "s.closing as qty_in_stock,st.qtyout,cl.c_name as party_name,cl.vch_num party_code,cl.interunit from itransaction st " +
                                            "inner join clients_mst cl on cl.vch_num = st.acode and find_in_set(st.client_unit_id,cl.client_unit_id)=1 and cl.vch_num = '" + sgen.GetSession(MyGuid, "KPOPARTY").ToString() + "' " +
                                            "inner join item it on it.icode = st.icode and find_in_set(it.client_unit_id, st.client_unit_id)=1 " + where + " " +
                                            "left join master_setting um on um.master_id = it.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, it.client_unit_id)= 1 " +
                                            "left join master_setting hsn on hsn.master_id = it.hsno and hsn.type = 'HSN' and find_in_set(hsn.client_unit_id, it.client_unit_id)= 1 " +
                                            "left join(select sum(qtychl) as used_qty,icode,pono from itransaction where type = '08' group by icode,pono) sn on sn.icode = st.icode and sn.pono = st.vch_num " +
                                            "left join(select icode,client_unit_id,sum(op) op,sum(pktop) pktop,sum(qtyin) qtyin,sum(qtyout) out,sum(op)+sum(qtyin)-sum(qtyout) closing,sum(pktop) + sum(pktno) pktno from " +
    "(select icode, client_unit_id, nvl(op_2019, 0) op, nvl(pkt_2019, 0) pktop, 0 qtyin, 0 qtyout, 0 pktno from itbal union all " +
    "select icode, client_unit_id, sum(to_number(qtyin)) - sum(to_number(qtyout)) op, sum((case when substr(type, 1, 1) in ('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktop," +
    "sum(to_number(qtyin)) qtyin,sum(to_number(qtyout)) qtyout,0 pktno from itransaction " +
    "where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') " +
    "and to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "')-1 group by icode,client_unit_id union all " +
    "select icode,client_unit_id,0 as op,0 as pktop,to_number(qtyin) qtyin,to_number(qtyout) qtyout," +
    "sum((case when substr(type, 1, 1) in ('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktno from itransaction " +
    "where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and " +
    "to_date('" + param2 + "','" + sgen.Getsqldateformat() + "') " +
    "group by icode,client_unit_id,to_number(qtyin),to_number(qtyout)) a group by icode, client_unit_id) s on it.icode = s.icode and it.client_unit_id = s.client_unit_id " +
                                            "where st.type = 'ST' and st.client_id = '" + clientid_mst + "') a " +
                                            "where a.interunit = '" + unitid_mst + "'";
                                    }
                                }
                            }
                            break;
                        // shiv
                        case "CHRGS":
                            cmd = "select (master_id||to_char(vch_date,'yyyymmdd')||type) fstr,master_id DocNo,master_name Charge " +
                                "from master_setting where type='MR0' and find_in_set(client_unit_id,'" + unitid_mst + "')=1";
                            break;
                        // shiv
                        case "RATE":
                            sgen.SetSession(MyGuid, "rtrno", param1.Trim());
                            cmd = "select (master_id||to_char(vch_date,'yyyymmdd')||type) fstr,master_id DocNo,group_name TaxRate " +
                                "from master_setting where type='HSN' and find_in_set(client_unit_id,'" + unitid_mst + "')=1";
                            break;
                        case "RGP":
                            cmd = "select (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) as fstr,p.vch_num Doc_no," +
                                "to_char(convert_tz(p.vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') Doc_Date,c.c_name Party_Name," +
                                "c.c_gstin Party_Gstin,c.addr Party_Address,p.aname Sender_Name,p.contactno Sender_Contact,p.icode ItemCode,i.iname ItemName," +
                                "p.qtychl Qty_Req,p.qtyin Qty_In,p.qtybal Qty_Req_Bal from itransactionc p " +
                                "inner join clients_mst c on p.acode = c.vch_num and find_in_set(c.client_unit_id,p.client_unit_id)=1 and substr(c.vch_num,0,3)='203' " +
                                "inner join item i on i.icode=p.icode and i.type='IT' and find_in_set(i.client_unit_id,p.client_unit_id)=1 " +
                                "where p.type='21' and p.client_unit_id = '" + unitid_mst + "'";
                            break;
                    }
                    break;
                #endregion
                #region invreps
                case "invreps":
                    switch (btnval.ToUpper())
                    {
                        //case "ITWS":
                        //    //cmd = "select iv.icode as item_code,iv.iname as item_name,sum(iv.netamt) as net_amount from itransaction iv " +
                        //    //    "where substr(iv.type, 1, 1) = '5' and iv.client_id = '" + clientid_mst + "' and iv.client_unit_id = '" + unitid_mst + "' and " +
                        //    //    "to_date(iv.vch_date) between to_date('03/11/2019','" + sgen.Getsqldateformat() + "') and" +
                        //    //    " to_date('04/11/2019','" + sgen.Getsqldateformat() + "')  group by(iv.icode, iv.iname)";
                        //    cmd = "select '-' as fstr, iv.icode as item_code,iv.iname as item_name,sum(iv.basicamt) as basic_amt,sum(iv.ginstlchrg) GrossAmt,sum(iv.netamt) as net_amount from itransaction iv " +
                        //        "where substr(iv.type, 1, 1) = '5' and iv.client_id = '" + clientid_mst + "' and iv.client_unit_id = '" + unitid_mst + "' and " +
                        //        "to_date(iv.vch_date) between to_date('03/11/2019','" + sgen.Getsqldateformat() + "') and" +
                        //        " to_date('30/11/2019','" + sgen.Getsqldateformat() + "')  group by(iv.icode, iv.iname)";
                        //    //cmd = "select iv.icode as item_code,iv.iname as item_name,sum(iv.netamt) as net_amount from itransaction iv where substr(iv.type,1,1)= '5' and iv.client_id = '" + clientid_mst + "' and iv.client_unit_id = '" + unitid_mst + "' group by(iv.icode, iv.iname)";
                        //    break;
                        //case "PWS":
                        //    cmd = "select '-' as fstr, iv.acode as party_code,cl.C_name as Party_name,sum(iv.basicamt) as basic_amt,sum(iv.ginstlchrg) GrossAmt,sum(iv.netamt) as net_amount from itransaction " +
                        //        "iv inner join clients_mst cl on cl.vch_num = iv.acode and cl.client_id = iv.client_id and" +
                        //        " cl.client_unit_id = iv.client_unit_id and cl.type = 'BCD' where substr(iv.type,1,1)= '5'" +
                        //        " and iv.client_id = '" + clientid_mst + "' and iv.client_unit_id = '" + unitid_mst + "' " +
                        //        "and to_date(iv.vch_date) between to_date('03/11/2019','" + sgen.Getsqldateformat() + "') and" +
                        //        " to_date('30/11/2019','" + sgen.Getsqldateformat() + "') group by(iv.acode, cl.C_name)";
                        //    break;
                        //case "PSO":
                        //    cmd = "select '-' as fstr,pc.acode as prty_code,cl.c_name as party_name,pc.icode,pc.iname,pc.type ord_type,pc.vch_num as so_no,nvl(iv.invoice_no,'-') as invoice_no,to_char(pc.vch_date,'" + sgen.Getsqldateformat() + "') as so_date,nvl(to_char(iv.invoice_dt, '" + sgen.Getsqldateformat() + "'),'-') invoice_dt,pc.qtyord as order_qty,nvl(iv.used_qty,'0') as used_qty,pc.qtyord-nvl(used_qty,'0') as pending_so from purchasesc pc left join(select a.invoice_no, a.invoice_dt, acode, ord_type, icode,iname, so_no, sodate, sum(a.qtyout) as used_qty,a.client_id,a.client_unit_id from(select vch_num invoice_no, vch_date invoice_dt, acode, potype as ord_type,icode,iname,sono as so_no,sodate,qtyout,client_id,client_unit_id from itransaction where substr(type,1,1)='4' and potype = '51' union all select vch_num invoice_no,vch_date invoice_dt,acode, potype as ord_type,icode,iname,sono as so_no,sodate,qtyout,client_id,client_unit_id from itransaction where substr(type,1,1)='4' and potype='50' union all select vch_num, vch_date, acode, type2, icode,iname, VEHNO, INVDATE, qtyout, client_id, client_unit_id from itransaction where type = '60' union all select vch_num, vch_date, acode, type2, icode,iname, VEHNO, INVDATE, qtyout, client_id, client_unit_id from itransaction where type = '61') a group by(a.invoice_no, a.invoice_dt, acode, ord_type, icode,iname, so_no, sodate, client_id,client_unit_id)) iv on iv.so_no = pc.vch_num and iv.sodate = pc.vch_date and iv.acode = pc.acode and iv.icode = pc.icode and iv.ord_type = pc.type and pc.client_id = iv.client_id and pc.client_unit_id = iv.client_unit_id left join clients_mst cl on cl.vch_num = pc.acode and cl.type = 'BCD' and cl.client_id = pc.client_id and cl.client_unit_id = pc.client_unit_id where pc.pur_type = 'NPI' and substr(pc.type,1,1)= '4' and pc.client_id = '" + clientid_mst + "' and pc.client_unit_id = '" + unitid_mst + "' ";
                        //    break;
                        case "PDSP":
                            //cmd = "select a.icode as 'fstr,' a.icode,a.Iname,a.disp_no,a.dsp_date,a.Disp_type,sum(a.disp_qty)as disp_qty,sum(a.inv_qty) as inv_qty,(nvl(sum(a.Disp_qty), '0') - nvl(sum(a.inv_qty), '0'))" +
                            //    " as Pending_inv from(select distinct dc.icode as Icode,dc.iname as Iname, dc.vch_num as disp_no, to_char(dc.date2, '"+sgen.Getsqldateformat()+"') as Dsp_date," +
                            //    "dc.uom2 as Disp_type, (dc.qtyout) as disp_qty, '0' inv_qty from itransaction dc where dc.client_id = '" + clientid_mst + "' " +
                            //    "and dc.client_unit_id = '" + unitid_mst + "' and substr(dc.type, 1, 1) = '6' union all select dc.icode as Icode," +
                            //    "dc.iname as Iname, dc.dspno as disp_no, to_char(dc.dspdate, '"+ sgen.Getsqldateformat() + "') as dsp_date, '0' as Disp_type,'0' as Disp_qty," +
                            //    "dc.qtyout as inv_qty from itransaction dc where dc.client_id = '" + clientid_mst + "' and dc.client_unit_id = '" + unitid_mst + "' and substr(dc.type, 1, 1) = '5' " +
                            //    "and dc.chlno != '0') a group by(a.icode, a.Iname, a.disp_no, a.Dsp_date, a.Disp_type)";

                            cmd = "select '-' as fstr,nvl(iv.invoice_no,'-') as invoice_no,nvl(to_char(iv.invoice_dt, '" + sgen.Getsqldateformat() + "'),'-') as invoice_dt," +
                                "dp.acode,cl.c_name as party_name,dp.type2 ord_type,dp.icode,dp.vch_num as dsp_no,to_char(dp.vch_date,'" + sgen.Getsqldateformat() + "') as dsp_date,dp.qtychl as disp_qty," +
                                "nvl(iv.invoice_qty,'0') invoice_qty,dp.qtychl - nvl(iv.invoice_qty, '0') as pending_disp from itransaction dp " +
                                "left join (select a.invoice_no,a.invoice_dt,a.acode,a.ord_type,a.icode,a.dspno,a.dspdate,sum(a.qtyout) as invoice_qty,a.client_id," +
                                "a.client_unit_id from(select vch_num invoice_no, vch_date invoice_dt, acode,type as ord_type,icode,dspno,dspdate," +
                                "qtyout,client_id,client_unit_id from itransaction where potype = '53') a group by (a.invoice_no, a.invoice_dt, a.acode," +
                                "a.ord_type,a.icode,a.dspno,a.dspdate,a.client_id,a.client_unit_id)) iv on dp.vch_num = iv.dspno and dp.icode = iv.icode " +
                                "and dp.acode = iv.acode and iv.ord_type = dp.type2 and dp.client_unit_id=iv.client_unit_id and dp.vch_date = iv.dspdate " +
                                "inner join clients_mst cl on cl.vch_num = dp.acode and cl.type = 'BCD' and find_in_set(cl.client_unit_id,dp.client_unit_id)=1 " +
                                "and substr(cl.vch_num,0,3)='303' where substr(dp.type,1,1)= '6' and dp.client_unit_id = '" + unitid_mst + "'";
                            break;
                        //case "PDSC":
                        //    cmd = "select '-' as fstr,kt.col1 as prty_code,cl.c_name as party_name,kt.col5 as icode,kt.col27 as iname,kt.type ord_type," +
                        //        "(case when iv.ord_type = '52' then 'Invoiced' when iv.ord_type = '61' then 'Dispatched' else iv.ord_type end) as type,kt.col2 as sdl_no," +
                        //        "to_char(kt.date1, '" + sgen.Getsqldateformat() + "') as sdl_date,to_char(kt.date8, '" + sgen.Getsqldateformat() + "') as sdl_start_date,to_char(kt.date9, '" + sgen.Getsqldateformat() + "') as sdl_end_date" +
                        //        ",nvl(iv.invoice_no, '-') as invoice_no,nvl(to_char(iv.invoice_dt, '" + sgen.Getsqldateformat() + "'), '-') invoice_dt,kt.col10 as order_qty,nvl(iv.used_qty, '0') " +
                        //        "as used_qty,kt.col10 - nvl(iv.used_qty, '0') as pending_sdl from kc_tab kt inner join (select a.invoice_no,a.invoice_dt,a.acode,a.ord_type," +
                        //        "a.type,a.icode,a.iname,a.sdlno,a.sdldate, sum(a.qtyout) as used_qty,a.client_id,a.client_unit_id from(select vch_num invoice_no," +
                        //        " vch_date invoice_dt, acode, type, potype as ord_type,icode,iname,sdlno,to_char(sdldate, 'ddMMYYY') as sdldate,nvl(qtyout, '0') as qtyout" +
                        //        ",client_id,client_unit_id from itransaction where substr(type, 1, 1) = '4' and potype = '52' union all select vch_num, vch_date, acode," +
                        //        " type2, type, icode, iname, GDISC, to_char(EWAYDATE, 'ddMMYYYY') sdldate,nvl(qtyout, '0') as qtyout, client_id,client_unit_id from itransaction " +
                        //        "where type = '61' and substr(type2,1,1)= '4') a group by(a.invoice_no, a.invoice_dt, acode, a.ord_type, a.type, a.icode, a.iname, a.sdlno," +
                        //        " a.sdldate, a.client_id, a.client_unit_id)) iv on iv.sdlno = kt.col2 and iv.acode = kt.col1 and iv.icode = kt.col5 and iv.type = kt.type" +
                        //        " and kt.client_id = iv.client_id and kt.client_unit_id = iv.client_unit_id left join clients_mst cl on cl.vch_num = kt.col1 and cl.type =" +
                        //        " 'BCD' and cl.client_id = kt.client_id and cl.client_unit_id = kt.client_unit_id where substr(kt.type,1,1)= '4' and kt.col20 = 'DSC' " +
                        //        "and kt.client_id = '" + clientid_mst + "' and kt.client_unit_id = '" + unitid_mst + "' order by kt.vch_num ";
                        //    break;
                        case "ISUM":
                            #region
                            //cmd = "select (nvl(t.client_unit_id,'0')||i.icode) as fstr,i.icode AS Item_Code,i.iname as Item_Name,i.cpartno PartNo," +
                            //    "sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout,0)) Issued,sum(nvl(t.qtyin,0))-sum(nvl(t.qtyout,0)) Closing from item i " +
                            //    "left join itransaction t on t.icode=i.icode and t.client_unit_id='" + unitid_mst + "' " +
                            //    "where length(i.icode)>4 group by nvl(t.client_unit_id,'0'),i.icode,i.iname,i.cpartno order by i.icode";
                            //cmd = "select (nvl(t.client_unit_id,'0')||i.icode) as fstr,i.icode Item_Code,i.iname Item_Name,i.cpartno PartNo," +
                            //    "sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout,0)) Issued,sum(nvl(t.qtyin,0))-sum(nvl(t.qtyout,0)) Closing from item i " +
                            //    "left join (select client_id,client_unit_id,icode,iname,nvl(qtyin,0) qtyin,nvl(qtyout,0) qtyout,(case when nvl(qtyin,0)=0 then -(nvl(iamount,0)) else nvl(iamount,0) end) " +
                            //    "from itransaction) t on t.icode=i.icode and t.client_id=i.client_id and t.client_unit_id=i.client_unit_id " +
                            //    "where length(i.icode)>4 group by nvl(t.client_unit_id,'0'),i.icode,i.iname,i.cpartno order by i.icode";
                            //cmd = "select (nvl(t.client_unit_id,'0')||i.icode) as fstr,i.icode Item_Code,i.iname Item_Name,i.cpartno PartNo,sum(t.qtyin) as Received," +
                            //     "sum(t.qtyout) Issued,sum(t.qtyin) - sum(t.qtyout) Closing,round(case when sum(t.qtyin) - sum(t.qtyout) = 0 then 0 else (sum(t.iamount) / (sum(t.qtyin) - sum(t.qtyout))) end) Rate," +
                            //     "sum(t.iamount) Amount from item i " +
                            //     "left join (select client_id, client_unit_id, icode, iname, to_number(nvl(qtyin,0)) qtyin,to_number(nvl(qtyout, 0)) qtyout," +
                            //     "(case when to_number(nvl(qtyin, 0)) = 0 then - to_number(nvl(iamount, 0)) else to_number(nvl(iamount, 0)) end) iamount from itransaction " +
                            //     "where type in ('Q01', 'Q02', '36', '10', '11', '30', '32', '21', '22') and store = 'Y') t on t.icode = i.icode and t.client_id = i.client_id " +
                            //     "and t.client_unit_id = i.client_unit_id " +
                            //     "where i.type='IT' and i.client_id='" + clientid_mst + "' and i.client_unit_id='" + unitid_mst + "' " +
                            //     "group by nvl(t.client_unit_id, '0'),i.icode,i.iname,i.cpartno order by i.icode";
                            #endregion
                            //cmd = "select (nvl(t.client_unit_id,'0')||i.icode) as fstr,i.icode Item_Code,i.iname Item_Name,i.cpartno PartNo,sum(t.qtyin) as Received," +
                            //     "sum(t.qtyout) Issued,sum(t.qtyin) - sum(t.qtyout) Closing,round(case when sum(t.qtyin) - sum(t.qtyout) = 0 then 0 else (sum(t.iamount) / (sum(t.qtyin) - sum(t.qtyout))) end) Rate," +
                            //     "sum(t.iamount) Amount from item i " +
                            //     "left join (select client_id, client_unit_id, icode, iname, to_number(nvl(qtyin,0)) qtyin,to_number(nvl(qtyout, 0)) qtyout," +
                            //     "(case when to_number(nvl(qtyin, 0)) = 0 then - to_number(nvl(iamount, 0)) else to_number(nvl(iamount, 0)) end) iamount from itransaction " +
                            //     "where length(icode)>5 and store = 'Y') t on t.icode = i.icode and t.client_id = i.client_id " +
                            //     "and t.client_unit_id = i.client_unit_id " +
                            //     "where length(i.icode)>5 and i.client_id='" + clientid_mst + "' and find_in_set(i.client_unit_id, '" + unitid_mst + "')=1 " +
                            //     "group by nvl(t.client_unit_id, '0'),i.icode,i.iname,i.cpartno order by i.icode";
                            cmd = "select (nvl(t.client_unit_id,'0')||i.icode) as fstr,i.icode Item_Code,gd.master_name Maingrp,mg.master_name Itemgrp,sg.iname Itemsubgrp," +
                                "i.iname Item_Name,i.cpartno PartNo,um.master_name as UOM,sum(t.qtyin) as Received,sum(t.qtyout) Issued,sum(t.qtyin) - sum(t.qtyout) Closing," +
                                "round(case when sum(t.qtyin)- sum(t.qtyout) = 0 then 0 else (sum(t.iamount) / (sum(t.qtyin) - sum(t.qtyout))) end) Rate," +
                                "sum(t.iamount) Amount from item i " +
                                "left join(select client_id, client_unit_id, icode, iname, to_number(nvl(qtyin,0)) qtyin,to_number(nvl(qtyout, 0)) qtyout," +
                                "(case when to_number(nvl(qtyin, 0)) = 0 then - to_number(nvl(iamount, 0)) else to_number(nvl(iamount, 0)) end) iamount from itransaction " +
                                "where length(icode) > 5 and store = 'Y') t on t.icode = i.icode and t.client_unit_id = i.client_unit_id " +
                                "inner join master_setting gd on gd.classid = SUBSTR(i.icode, 1, 1) and gd.type = 'KGP' " +
                                "inner join master_setting mg on mg.master_id = substr(i.icode, 1, 3) and mg.type = 'KIG' and find_in_set(mg.client_unit_id,i.client_unit_id)=1 " +
                                "inner join item sg on sg.icode = substr(i.icode, 1, 5) and sg.type = 'SG' and find_in_set(sg.client_unit_id,i.client_unit_id)=1 " +
                                "inner join master_setting um on um.master_id = i.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, i.client_unit_id)= 1 " +
                                "where length(i.icode)> 5 and find_in_set(i.client_unit_id, '" + unitid_mst + "')= 1 " +
                                "group by nvl(t.client_unit_id, '0'),i.icode,gd.master_name,mg.master_name,sg.iname,i.iname,um.master_name,i.cpartno order by i.icode";
                            break;
                        case "IDET":
                            cmd = "select t.icode fstr,t.icode Item_Code,i.iname Item_Name,t.vch_num DocNo,to_char(t.vch_date,'" + sgen.Getsqldateformat() + "') Dated," +
                            "(case when substr(t.type,1,1)='Q' then substr(t.type,2,2) else t.type end) Type,nvl(m.master_name,'-') TypeDesc,t.qtyin Received,t.qtyout Issued," +
                            "t.irate Rate,t.iamount Amount,nvl(d.master_name,'-') Department,nvl(t.pktno,0) pktno from itransaction t " +
                            "inner join item i on t.icode=i.icode and find_in_set(i.client_unit_id,t.client_unit_id)=1 " +
                            "left join master_setting d on d.master_id=t.deptno and d.Type='MDP' and find_in_set(d.client_unit_id,t.client_unit_id)=1 " +
                            "left join (select master_id,master_name,client_id from master_setting where type in ('KMR','KSR','KIS','KRG','KPV','KPO','KDS','KPD','KRQ','KDP')) m " +
                            "on m.master_id=(case when substr(t.type,1,1)='Q' then substr(t.type,2,2) else t.type end) and m.client_id=t.client_id " +
                            "where concat(t.client_unit_id,t.icode)='" + param1 + "' and t.store='Y' and to_date(to_char(t.vch_date,'" + sgen.Getsqldateformat() + "'),'" + sgen.Getsqldateformat() + "') between " +
                            "to_date('" + param2.Split(new string[] { "!~!~!~!~!" }, StringSplitOptions.None)[0].Trim() + "','" + sgen.Getsqldateformat() + "') and " +
                            "to_date('" + param2.Split(new string[] { "!~!~!~!~!" }, StringSplitOptions.None)[1].Trim() + "','" + sgen.Getsqldateformat() + "') order by t.vch_date desc";
                            break;
                        case "IFIFO":
                        case "ILEDGER":
                            cmd = "select (it.icode||it.client_id||it.client_unit_id) fstr,it.icode,it.iname,it.cpartno,um.master_name Primary_Unit from item it " +
                                "inner join master_setting um on it.uom = um.master_id and um.type = 'UMM' and find_in_set(um.client_unit_id, it.client_unit_id) = 1 " +
                                "where it.type = 'IT' and find_in_set(it.client_unit_id, '" + unitid_mst + "')=1 and it.status = 'Y' and substr(icode,1,1) not in ('8', '9')";
                            break;
                        case "CISUM":
                            //cmd = "select icode,iname,uom,sum(to_number(qtyin)) qtyin,sum(to_number(qtyout)) qtyout,sum(to_number(qtyin))-sum(to_number(qtyout)) closing,client_id,client_unit_id from " +
                            //    "(select lc.icode, i.iname, um.master_name uom, ml.master_name loc, nvl(lc.qtyin, 0) qtyin, nvl(lc.qtyout, 0) qtyout,(case when lc.pono = '0' then 'C' else lc.pono end) store," +
                            //    "lc.type,lc.client_id,lc.client_unit_id from btchtrans lc " +
                            //    "inner join item i on i.icode = lc.icode and i.type = 'IT' and i.client_id = lc.client_id and i.client_unit_id = lc.client_unit_id " +
                            //    "inner join master_setting um on um.master_id = i.uom and um.type = 'UMM' and find_in_set(um.client_id, lc.client_id)= 1 and find_in_set(um.client_unit_id, lc.client_unit_id)= 1 " +
                            //    "inner join master_setting ml on ml.master_id = lc.loc and ml.type = 'LC6' and ml.client_id = lc.client_id and ml.client_unit_id = lc.client_unit_id " +
                            //    "where lc.type in ('Q01', 'Q02', '36', '10', '11', '30', '32', '21', '22') and lc.store = 'Y') a " +
                            //    "group by icode, iname, uom, client_id, client_unit_id order by icode asc";
                            cmd = "select '-' fstr,icode,iname,uom,sum(to_number(qtyin)) qtyin,sum(to_number(qtyout)) qtyout,sum(to_number(qtyin))-sum(to_number(qtyout)) closing,client_id,client_unit_id from " +
    "(select lc.icode, i.iname, um.master_name uom, ml.master_name loc, nvl(lc.qtyin, 0) qtyin, nvl(lc.qtyout, 0) qtyout,(case when lc.pono = '0' then 'C' else lc.pono end) store," +
    "lc.type,lc.client_id,lc.client_unit_id from btchtrans lc " +
    "inner join item i on i.icode = lc.icode and i.type = 'IT' and find_in_set(i.client_unit_id,lc.client_unit_id)=1 " +
    "inner join master_setting um on um.master_id = i.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, lc.client_unit_id)= 1 " +
    "inner join master_setting ml on ml.master_id = lc.loc and ml.type = 'LC6' and ind_in_set(ml.client_unit_id,lc.client_unit_id)=1 " +
    "where length(lc.icode)>5 and lc.store = 'Y') a " +
    "group by icode, iname, uom, client_id, client_unit_id order by icode asc";
                            break;
                        case "LOCISUM":
                            cmd = "select '-' fstr,icode,iname,uom,loc,sum(to_number(qtyin)) qtyin,sum(to_number(qtyout)) qtyout,sum(to_number(qtyin))-sum(to_number(qtyout)) closing,store,client_id,client_unit_id " +
                                "from (select lc.icode, i.iname, um.master_name uom, ml.master_name loc, nvl(lc.qtyin, 0) qtyin, nvl(lc.qtyout, 0) qtyout, (case when lc.pono = '0' then 'C' else lc.pono end) store," +
                                "lc.type,lc.client_id,lc.client_unit_id from btchtrans lc " +
                                "inner join item i on i.icode = lc.icode and i.type = 'IT' and find_in_set(i.client_unit_id,lc.client_unit_id)=1 " +
                                "inner join master_setting um on um.master_id = i.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, lc.client_unit_id)=1 " +
                                "inner join master_setting ml on ml.master_id = lc.loc and ml.type = 'LC6' and find_in_set(ml.client_unit_id,lc.client_unit_id)=1 " +
                                "where length(lc.icode)>5 and lc.store = 'Y') a group by icode, iname, uom, loc, store,client_id, client_unit_id order by icode asc";
                            break;
                        case "GRPSUM":
                            cmd = "select '-' fstr, mg_code,mg,sg_code,sg,sum(to_number(iamount)) iamount from " +
                                "(select lc.icode, mg.master_name mg,mg.master_id as mg_code, sg.iname sg,sg.icode as sg_code, i.iname, um.master_name uom, ml.master_name loc, nvl(lc.qtyin, 0) qtyin, nvl(lc.qtyout, 0) qtyout," +
                                "(case when lc.pono = '0' then 'C' else lc.pono end) store,nvl(lc.irate, 0) irate,nvl(lc.iamount, 0) iamount,lc.type,lc.client_id," +
                                "lc.client_unit_id from btchtrans lc " +
                                "inner join item i on i.icode = lc.icode and i.type = 'IT' and find_in_set(lc.client_unit_id,i.client_unit_id)=1 " +
                                "inner join master_setting um on um.master_id = i.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, lc.client_unit_id)= 1 " +
                                "inner join master_setting ml on ml.master_id = lc.loc and ml.type = 'LC6' and find_in_set(ml.client_unit_id,lc.client_unit_id)=1 " +
                                "inner join master_setting mg on mg.master_id = substr(lc.icode, 1, 3) and mg.type = 'KIG' and find_in_set(mg.client_unit_id,lc.client_unit_id)=1 " +
                                "inner join item sg on sg.icode = substr(lc.icode, 1, 5) and sg.type = 'SG' and find_in_set(sg.client_unit_id,lc.client_unit_id)=1 " +
                                "where length(lc.icode)> 5 and lc.store = 'Y' and lc.client_unit_id = '" + unitid_mst + "') a " +
                                "group by mg, sg,mg_code,sg_code";
                            break;
                        case "PPO":
                            cmd = "select (pono||podate||potype) fstr,pono,podate,potype,icode,iname,partycode,partyname,max(to_number(qtyord)) qtyord,sum(to_number(qtyin)) qtyin," +
                                "(max(to_number(qtyord))-sum(to_number(qtyin))) qtybalance,sum(to_number(iamount)) iamount " +
                                "from (select p.vch_num pono,to_char(p.vch_date,'" + sgen.Getsqldateformat() + "') podate,p.type potype," +
                                "p.icode,it.iname,p.acode Partycode,cl.c_name Partyname,nvl(p.qtyord, 0) qtyord,nvl(i.qtyin, 0) qtyin,nvl(i.irate, 0) irate," +
                                "nvl(i.iamount, 0) iamount,i.vch_num mrnno,to_char(i.vch_date,'" + sgen.Getsqldateformat() + "') mrndate," +
                                "i.type mrntype,i.invno,to_char(i.invdate,'" + sgen.Getsqldateformat() + "') invdate,i.chlno," +
                                "to_char(i.chldate,'" + sgen.Getsqldateformat() + "') chldate,utol,ltol " +
                                "from purchases p " +
                                "inner join itransaction i on i.pono = p.vch_num and to_char(i.podate, 'ddmmyyyy') = to_char(p.vch_date, 'ddmmyyyy') " +
                                "and i.client_unit_id = p.client_unit_id and i.acode = p.acode and i.store = 'Y' " +
                                "inner join item it on it.icode = p.icode and it.type = 'IT' and find_in_set(p.client_unit_id,it.client_unit_id)=1 " +
                                "inner join clients_mst cl on cl.vch_num = p.acode and substr(cl.vch_num,0,3)='203' and cl.type='BCD' and find_in_set(cl.client_unit_id,p.client_unit_id)=1 " +
                                "where p.type in ('50', '51', '52', '53') and p.client_unit_id = '" + unitid_mst + "') " +
                                //"group by pono,podate,potype,icode,iname,partycode,partyname having (max(to_number(qtyord))-sum(to_number(qtyin)))> 0";
                                "group by pono,podate,potype,icode,iname,partycode,partyname,ltol having sum(to_number(qtyin))<(max(to_number(qtyord))-round((max(to_number(qtyord))*to_number(ltol))/100))";
                            break;
                        case "PPODET":
                            cmd = "select (p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) fstr,p.vch_num pono,to_char(convert_tz(p.vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') podate,p.type potype," +
                                "p.icode,it.iname,p.acode Partycode,cl.c_name Partyname,nvl(p.qtyord, 0) qtyord,nvl(i.qtyin, 0) qtyin,nvl(i.irate, 0) irate," +
                                "nvl(i.iamount, 0) iamount,i.vch_num mrnno,to_char(i.vch_date,'" + sgen.Getsqldateformat() + "') mrndate," +
                                "i.type mrntype,i.invno,to_char(i.invdate,'" + sgen.Getsqldateformat() + "') invdate,i.chlno," +
                                "to_char(i.chldate,'" + sgen.Getsqldateformat() + "') chldate " +
                                "from purchases p " +
                                "inner join itransaction i on i.pono = p.vch_num and to_char(i.podate, 'ddmmyyyy') = to_char(p.vch_date, 'ddmmyyyy') " +
                                "and i.client_unit_id = p.client_unit_id and i.acode = p.acode and i.store = 'Y' " +
                                "inner join item it on it.icode = p.icode and it.type = 'IT' and find_in_set(p.client_unit_id,it.client_unit_id)=1 " +
                                "inner join clients_mst cl on cl.vch_num = p.acode and substr(cl.vch_num,0,3)='203' and cl.type='BCD' and find_in_set(cl.client_unit_id,p.client_unit_id)=1 " +
                                "where p.type in ('50', '51', '52', '53') and p.client_unit_id = '" + unitid_mst + "' and " +
                                "(p.vch_num||to_char(p.vch_date,'" + sgen.Getsqldateformat() + "')||p.type)='" + param1.Trim() + "'";
                            break;
                    }
                    break;
                #endregion  
                #region item_issued
                case "item_issued":
                    if (sgen.GetSession(MyGuid, "KISTYPE") != null) { type = sgen.GetSession(MyGuid, "KISTYPE").ToString().Trim(); }
                    else { type = "30','32"; }  // item issued without requestion or with req.
                    switch (btnval.ToUpper())
                    {
                        case "NEW":
                            cmd = "select (master_id||to_char(vch_date,'yyyymmdd')||type) fstr,master_id Type,master_name Name " +
                                "from master_setting where type='KIS' and find_in_set(client_unit_id,'" + unitid_mst + "')=1";
                            break;
                        case "EDIT":
                        case "PRINT":
                            cmd = "select distinct (i.client_id||i.client_unit_id||i.vch_num||to_char(i.vch_date,'yyyymmdd')||i.type) as fstr,i.vch_num as Issue_no,i.type Type," +
                                "to_char(convert_tz(i.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') as Issue_date, i.cond Order_Id from itransaction i " +
                                "where i.type in ('" + type + "') and i.client_unit_id = '" + unitid_mst + "' " + xprdrange.Replace("vch_date", "i.vch_date") + "";
                            break;

                        case "VIEW":
                            cmd = "select (i.client_id||i.client_unit_id||i.vch_num||to_char(i.vch_date,'yyyymmdd')||i.type) as fstr,i.vch_num as Issue_no," +
                                "to_char(convert_tz(i.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), " + "'" + sgen.Getsqldateformat() + "') as Issue_date,d.master_name as Dept_name," +
                                "dg.master_name as desig,i.icode as Icode,i.iname as Item_Name,i.cpartno Partno,i.qtystk Qty_In_Stock,i.qtychl Qty_Req,i.qtyout Qty_Issue," +
                                "i.qtybal Qty_Req_Bal,i.pono OrderId,i.totremark remark from itransaction i " +
                                "inner join master_setting d on d.master_id=i.deptno and d.type='MDP' and find_in_set(d.client_unit_id,'" + unitid_mst + "')=1 " +
                                "inner join master_setting dg on dg.master_id=i.desig and dg.type='MDG' and find_in_set(dg.client_unit_id,'" + unitid_mst + "')=1 " +
                                "where i.type in ('" + type + "') and i.client_unit_id='" + unitid_mst + "' " + xprdrange.Replace("vch_date", "i.vch_date") + "";
                            break;
                        case "ITEM":
                            if (type.Equals("30"))
                            {
                                if (param1.Split(new string[] { "!~~!~~!~~!" }, StringSplitOptions.None)[0].Trim() != "") where = " and (it.client_unit_id||it.icode) not in ('" + param1.Trim().Split(new string[] { "!~~!~~!~~!" }, StringSplitOptions.None)[0].Trim().TrimEnd(',').Replace(",", "','") + "')";
                                //kc
                                //cmd = "select (it.client_unit_id||it.icode) fstr,it.icode as Icode,it.iname as Iname,it.cpartno Partno,um.master_name as UOM,s.closing " +
                                //    "from item it " +
                                //    "inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_id,it.client_id)=1 and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
                                //    "left join (select t.client_unit_id,t.icode,sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout,0)) as Issued," +
                                //    "sum(nvl(t.qtyin,0))-sum(nvl(t.qtyout,0)) as closing from itransaction t where trim(t.store)='Y' group by t.icode,t.client_unit_id) s " +
                                //    "on it.icode=s.icode and find_in_set(s.client_unit_id,it.client_unit_id)=1 " +
                                //    "where length(trim(it.icode))>8 and it.client_id='" + clientid_mst + "' and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 " + where + "";                                
                                //cmd = "select (it.client_unit_id||it.icode) fstr,it.icode as Icode,it.iname as Iname,it.cpartno Partno,um.master_name as UOM," +
                                //    "nvl(s.closing,0) closing,nvl(s.pktno,0) pktno from item it " +
                                //    "inner join master_setting um on um.master_id = it.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, it.client_unit_id)= 1 " +
                                //    "left join (select t.client_unit_id, t.icode, sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout, 0)) Issued," +
                                //    "sum(nvl(t.qtyin, 0)) - sum(nvl(t.qtyout, 0)) closing,sum(nvl(t.pktno, 0)) pktno from " +
                                //    "(select client_unit_id, client_id, icode, qtyin, qtyout, (case when substr(type, 1, 1) in ('0', '1') then pktno when type = '36' " +
                                //    "then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end) pktno,store,vch_date from itransaction) t " +
                                //    "where trim(t.store) = 'Y' and to_date(to_char(t.vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between " +
                                //    "to_date('" + year_from.Split(' ')[0].Trim() + "','" + sgen.Getsqldateformat() + "') and " +
                                //    "to_date('" + param1.Split(new string[] { "!~~!~~!~~!" }, StringSplitOptions.None)[1].Trim() + "','" + sgen.Getsqldateformat() + "') " +
                                //    "group by t.icode,t.client_unit_id) s on it.icode = s.icode and find_in_set(s.client_unit_id, it.client_unit_id)= 1 " +
                                //    "where length(trim(it.icode))> 8 and find_in_set(it.client_unit_id,'" + unitid_mst + "')= 1 " + where + "";

                                //                            cmd = "select (it.client_unit_id||it.icode) fstr,it.icode as Icode,it.iname as Iname,it.cpartno Partno,um.master_name as UOM," +
                                //"nvl(s.closing,0) closing,nvl(s.pktno,0) pktno from item it " +
                                //"inner join master_setting um on um.master_id = it.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, it.client_unit_id)= 1 " +
                                //"left join (select icode,client_unit_id,sum(op) op,sum(pktop) pktop,sum(qtyin) qtyin,sum(qtyout) out,sum(op)+sum(qtyin)-sum(qtyout) closing,sum(pktop) + sum(pktno) pktno from " +
                                //"(select icode, client_unit_id, nvl(op_2019, 0) op, nvl(pkt_2019, 0) pktop, 0 qtyin, 0 qtyout, 0 pktno from itbal union all " +
                                //"select icode, client_unit_id, sum(to_number(qtyin)) - sum(to_number(qtyout)) op, sum((case when substr(type, 1, 1) in ('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktop," +
                                //"sum(to_number(qtyin)) qtyin,sum(to_number(qtyout)) qtyout,0 pktno from itransaction " +
                                //"where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') " +
                                //"and to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "')-1 group by icode,client_unit_id union all " +
                                //"select icode,client_unit_id,0 as op,0 as pktop,sum(to_number(qtyin)) qtyin,sum(to_number(qtyout)) qtyout," +
                                //"sum((case when substr(type, 1, 1) in ('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktno from itransaction " +
                                //"where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and " +
                                //"to_date('" + param1.Split(new string[] { "!~~!~~!~~!" }, StringSplitOptions.None)[1].Trim() + "','" + sgen.Getsqldateformat() + "') " +
                                //"group by icode,client_unit_id) a group by icode, client_unit_id) s on it.icode = s.icode and find_in_set(s.client_unit_id, it.client_unit_id)= 1 " +
                                //"where length(trim(it.icode))> 8 and find_in_set(it.client_unit_id,'" + unitid_mst + "')= 1 " + where + "";


                                cmd = "select (it.client_unit_id||it.icode) fstr,it.icode as Icode,it.iname as Iname,it.cpartno Partno from item it " +
        "where length(trim(it.icode))> 8 and find_in_set(it.client_unit_id,'" + unitid_mst + "')= 1 " + where + "";
                            }
                            else if (type.Equals("32"))
                            {
                                //brijesh
                                cmd = "select distinct (mr.client_id||mr.client_unit_id||mr.vch_num||to_char(mr.vch_date,'yyyymmdd')||mr.type) fstr," +
                                    "mr.vch_num Mrs_No,to_char(convert_tz(mr.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') Req_Date,nvl(dp.master_name,'-') dept, " +
                                    "nvl(dg.master_name,'-') desig, mr.pono Order_Id,mr.type Mrs_Type from itransactionc mr " +
                                    "left join master_setting dp on dp.master_id = mr.deptno and dp.type = 'MDP' and " +
                                    "find_in_set(dp.client_unit_id,'" + unitid_mst + "')= 1 left join master_setting dg on dg.master_id = mr.desig and dg.type = 'MDG' and " +
                                    "find_in_set(dg.client_unit_id,'" + unitid_mst + "')= 1 left join(select sum(to_number(nvl(qtyout,'0'))) as used_qty,icode,chlno,client_id,client_unit_id,to_char(chldate, 'ddmmyyyy') as chldate from itransaction " +
                                    "where type = '32' group by icode,chlno,client_id,client_unit_id,to_char(chldate, 'ddmmyyyy')) a on mr.icode = a.icode and mr.vch_num = " +
                                    "a.chlno and a.client_unit_id = mr.client_unit_id and a.chldate = to_char(mr.vch_date, 'ddmmyyyy') where UPPER(mr.type) in ('3A', '3B') and mr.client_unit_id = '" + unitid_mst + "' and (to_number(nvl(mr.qtychl,'0')) - to_number(nvl(a.used_qty,'0'))) > 0";
                                //cmd = "select distinct (mr.client_id||mr.client_unit_id||mr.vch_num||to_char(mr.vch_date,'yyyymmdd')||mr.type) fstr,mr.vch_num Mrs_No," +
                                //    "to_char(convert_tz(mr.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') Req_Date,dp.master_name dept,dg.master_name desig," +
                                //    "mr.pono Order_Id,mr.type Mrs_Type from itransactionc mr " +
                                //    "inner join master_setting dp on dp.master_id = mr.deptno and dp.type = 'MDP' and find_in_set(dp.client_id,'" + clientid_mst + "')=1 and find_in_set(dp.client_unit_id,'" + unitid_mst + "')=1 " +
                                //    "inner join master_setting dg on dg.master_id = mr.desig and dg.type = 'MDG' and find_in_set(dg.client_id,'" + clientid_mst + "')=1 and find_in_set(dg.client_unit_id,'" + unitid_mst + "')=1 " +
                                //    "where UPPER(mr.type) in ('3A', '3B') and mr.client_id = '" + clientid_mst + "' and mr.client_unit_id = '" + unitid_mst + "'";
                            }
                            break;
                        case "IMRS":
                            if (param1 != "") where = " and (mr.client_id||mr.client_unit_id||mr.vch_num||it.icode||to_char(mr.vch_date,'yyyymmdd')||mr.type) not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','") + "')";
                            if (param2.Trim() != "") cond = " and (mr.client_id||mr.client_unit_id||mr.vch_num||to_char(mr.vch_date,'yyyymmdd')||mr.type)='" + param2.Trim() + "'";
                            if (type.Equals("32"))
                            {
                                //cmd = "select (mr.client_id||mr.client_unit_id||mr.vch_num||to_char(mr.vch_date,'yyyymmdd')||mr.type) fstr,mr.vch_num Mrs_No," +
                                //    "to_char(convert_tz(mr.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') Req_Date,dp.master_name dept,dg.master_name desig," +
                                //    "mr.pono Order_Id from itransactionc mr " +
                                //    "inner join master_setting dp on dp.master_id = mr.deptno and dp.type = 'MDP' " +
                                //    "inner join master_setting dg on dg.master_id = mr.desig and dg.type = 'MDG' " +
                                //    "where mr.type in ('3a', '3b') and mr.client_id = '" + clientid_mst + "' and mr.client_unit_id = '" + unitid_mst + "'";                                
                                //cmd = "select (mr.client_id||mr.client_unit_id||mr.vch_num||it.icode||to_char(mr.vch_date,'yyyymmdd')||mr.type) fstr,mr.vch_num MrsNo," +
                                // "to_char(convert_tz(mr.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), " + "'" + sgen.Getsqldateformat() + "') as Req_Date,dp.master_name Dept,dg.master_name Desig," +
                                // "it.icode Icode,it.iname Iname,it.cpartno PartNo,um.master_name as uom,s.closing Qty_Stk,mr.qtychl Qty_Req,'0' Qty_issue,'0' Qty_Req_bal,mr.pono Order_Id " +
                                // "from itransactionc mr inner join item it on mr.icode=it.icode and it.type='IT' and mr.client_id=it.client_id and mr.client_unit_id=it.client_unit_id " +
                                // "inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_id,it.client_id)=1 and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
                                // "inner join (select t.client_unit_id,t.icode,sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout,0)) as Issued,sum(nvl(t.qtyin,0))-sum(nvl(t.qtyout,0)) " +
                                // "as closing from itransaction t where trim(t.store)='Y' group by t.icode,t.client_unit_id ) s on it.icode=s.icode and it.client_unit_id=s.client_unit_id " +
                                // "inner join master_setting dp on dp.master_id = mr.deptno and dp.type = 'MDP' and find_in_set(dp.client_id,'" + clientid_mst + "')=1 and find_in_set(dp.client_unit_id,'" + unitid_mst + "')=1 " +
                                // "inner join master_setting dg on dg.master_id = mr.desig and dg.type = 'MDG' and find_in_set(dg.client_id,'" + clientid_mst + "')=1 and find_in_set(dg.client_unit_id,'" + unitid_mst + "')=1 " +
                                // "where upper(mr.type) in ('3A', '3B') and mr.client_id = '" + clientid_mst + "' and mr.client_unit_id = '" + unitid_mst + "'" + where + "" + cond + "";
                                //brijesh
                                //cmd = "select (mr.client_id||mr.client_unit_id||mr.vch_num||it.icode||to_char(mr.vch_date,'yyyymmdd')||mr.type) fstr," +
                                //    "mr.vch_num MrsNo, to_char(convert_tz(mr.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') as Req_Date,dp.master_name Dept," +
                                //    "dg.master_name Desig, it.icode Icode, it.iname Iname, it.cpartno PartNo, um.master_name as uom,s.closing Qty_Stk, " +
                                //    "mr.qtychl Qty_Req,nvl(a.used_qty, '0') Qty_issue,(mr.qtychl - nvl(a.used_qty, 0)) Qty_Req_bal,mr.pono Order_Id from " +
                                //    "itransactionc mr inner join item it on mr.icode = it.icode and it.type = 'IT' and mr.client_id = it.client_id and " +
                                //    "mr.client_unit_id = it.client_unit_id inner join master_setting um on um.master_id = it.uom and um.type = 'UMM' and " +
                                //    "find_in_set(um.client_id, it.client_id)= 1 and find_in_set(um.client_unit_id, it.client_unit_id)= 1 inner " +
                                //    "join(select t.client_unit_id, t.icode, sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout, 0)) as Issued,sum(nvl(t.qtyin, 0))" +
                                //    " - sum(nvl(t.qtyout, 0)) as closing from itransaction t where trim(t.store) = 'Y' group by t.icode,t.client_unit_id ) s on " +
                                //    "it.icode = s.icode and it.client_unit_id = s.client_unit_id inner join master_setting dp on dp.master_id = mr.deptno and" +
                                //    " dp.type = 'MDP' and find_in_set(dp.client_id,'" + clientid_mst + "')= 1 and find_in_set(dp.client_unit_id,'" + unitid_mst + "')" +
                                //    "= 1 inner join master_setting dg on dg.master_id = mr.desig and dg.type = 'MDG' and " +
                                //    "find_in_set(dg.client_id,'" + clientid_mst + "')= 1 and find_in_set(dg.client_unit_id, '" + unitid_mst + "') = 1 left" +
                                //    " join(select sum(qtyout) as used_qty,icode,chlno,client_id,client_unit_id,to_char(chldate, 'ddmmyyyy') as chldate from " +
                                //    "itransaction where type = '32' group by icode,chlno,client_id,client_unit_id,to_char(chldate, 'ddmmyyyy')) a on mr.icode =" +
                                //    " a.icode and mr.vch_num = a.chlno and a.client_id = mr.client_id and a.client_unit_id = mr.client_unit_id and a.chldate = to_char(mr.vch_date, 'ddmmyyyy') where" +
                                //    " upper(mr.type) in ('3A', '3B') and mr.client_id = '" + clientid_mst + "' and mr.client_unit_id = '" + unitid_mst + "' " + where + "" + cond + " and (mr.qtychl-nvl(a.used_qty,0)) > 0";


                                //brijesh  bal qty with closing

                                cmd = "select (it.client_id||it.client_unit_id||mr.vch_num||it.icode||mr.type||to_char(it.vch_date,'yyyymmdd')||it.type) as fstr, mr.icode,it.iname," +
                                    "it.cpartno PartNo,mr.vch_num mrs_no,to_char(mr.vch_date,'" + sgen.Getsqldateformat() + "') Req_Date,um.master_name as uom,nvl(dp.master_name,'-') Dept,nvl(dg.master_name,'-') Desig," +
                                    "nvl(s.closing,'0') as qty_in_stock,mr.Qty_Req,mr.issued_qty,mr.bal_qty from item it " +
                                    "inner join (select distinct a.vch_num,a.type,a.icode,a.client_id,a.client_unit_id,a.vch_date,a.Qty_Req,a.desig,a.deptno,sum(a.issued_qty) as issued_qty," +
                                    "(a.Qty_Req - nvl(sum(a.issued_qty), '0')) as bal_qty from(select mr.vch_num,mr.type,mr.icode,mr.client_id,mr.client_unit_id,mr.vch_date," +
                                    "mr.desig,mr.deptno, mr.qtychl Qty_Req,to_number(nvl(iv.qtyout,'0')) as issued_qty from itransactionc mr " +
                                    "left join itransaction iv on iv.icode=mr.icode and iv.chlno = mr.vch_num and iv.type = '32' and " +
                                    "iv.client_unit_id = '" + unitid_mst + "' where upper(mr.type) in ('3A', '3B') and mr.client_unit_id = '" + unitid_mst + "' " +
                                    "union all select mr.vch_num,mr.type,mr.icode,mr.client_id,mr.client_unit_id,mr.vch_date,mr.desig,mr.deptno,mr.qtychl Qty_Req," +
                                    "to_number(nvl(iv.col11,'0')) as closed_qty from itransactionc mr left join enx_tab iv on iv.col7=mr.icode and iv.col12 = mr.vch_num and " +
                                    "iv.type = 'CPM' and iv.client_unit_id = '" + unitid_mst + "'  where upper(mr.type) in ('3A', '3B') and mr.client_unit_id = '" + unitid_mst + "') a group by " +
                                    "(a.vch_num,a.type,a.icode,a.client_id,a.client_unit_id,a.vch_date,a.desig,a.deptno,a.Qty_Req)) mr on " +
                                    "mr.icode=it.icode and find_in_set(mr.client_unit_id,it.client_unit_id)=1 and mr.bal_qty > 0 " +
                                    "left join master_setting dp on dp.master_id = mr.deptno and dp.type = 'MDP' and find_in_set(dp.client_unit_id,'" + unitid_mst + "')= 1 " +
                                    "left join master_setting dg on dg.master_id = mr.desig and dg.type = 'MDG' and find_in_set(dg.client_unit_id, '" + unitid_mst + "') = 1 " +
                                    "left join master_setting um on um.master_id = it.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, it.client_unit_id)= 1 " +
                                    "left join(select t.client_unit_id, t.icode, sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout, 0)) as Issued,sum(nvl(t.qtyin, 0)) - sum(nvl(t.qtyout, 0)) as closing from itransaction t " +
                                    "where trim(t.store) = 'Y' group by t.icode,t.client_unit_id ) s on it.icode = s.icode and find_in_set(s.client_unit_id ,it.client_unit_id)=1 " +
                                    "where it.type='IT' and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 " + where + "  " + cond + "";
                            }
                            break;
                        case "ITEM2":
                            if (param1 != "") where = " and (it.client_unit_id||it.icode||s.loc) not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','") + "')";
                            cmd = "select (it.client_unit_id||it.icode||s.loc) fstr,it.icode as Icode,it.iname as Iname,it.cpartno Partno,um.master_name as UOM," +
  "location_name(s.loc) as LocName,s.closing from item it " +
  "inner join itbal itb on it.icode=itb.icode and it.type=itb.type and find_in_set(itb.client_unit_id,it.client_unit_id)=1 " +
  "inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
  "inner join (select t.client_unit_id,t.loc,t.icode,sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout,0)) as Issued," +
  "sum(nvl(t.qtyin,0))-sum(nvl(t.qtyout,0)) as closing from btchtrans t where length(trim(t.loc))>6 and trim(t.store)='Y' group by t.icode,t.client_unit_id,t.loc " +
  "having sum(nvl(t.qtyin,0))-sum(nvl(t.qtyout,0))>0 ) s on itb.icode=s.icode and itb.client_unit_id=s.client_unit_id " +
  "where length(trim(it.icode))>8 and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 " +
  "and it.icode in ('" + param2.Trim().TrimEnd(',').Replace(",", "','").Trim() + "') " + where + "";
                            break;
                        case "FUN":
                            cmd = "select distinct (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr," +
                                " a.vch_num as Doc_No, to_char( convert_tz( a.date1,'UTC','" + sgen.Gettimezone() + "')," +
                                 "'" + sgen.Getsqldateformat() + "')as   Date_Of_Function, b.master_name Function_Type , a.col3 Name_Of_Party ,a.col2 as no_of_paxes,sum(a.col10*a.col9) Total_AMount" +
                                 " ,nvl(s.master_name,'-') as Service_type,nvl(m.master_name,'-') as Menu_Type   from enx_tab2 a " +
                                 "inner join master_setting  b on a. col5=b.master_id and b.type='FUN' and a.client_unit_id= b.client_unit_id " +
                                 "left Join master_setting s on a.col11=s.master_id and b.type='TBS' and find_in_set(s.client_unit_id,'" + unitid_mst + "')=1 left Join master_setting m" +
                                 " on a.col17=s.master_id and b.type='TBM' and find_in_set(m.client_unit_id,'" + unitid_mst + "')=1" +
                                " where a.type in ('FUN')and a.client_unit_id='" + unitid_mst + "'" +
                                " group by (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) ,a.vch_num ,to_char(convert_tz(a.date1," +
                                " 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "'),b.master_name, a.col3,a.col2,s.master_name,m.master_name" +
                                "  order by a.vch_num desc";
                            break;
                    }
                    break;
                #endregion
                #region item_issuedn
                case "item_issuedn":
                    if (sgen.GetSession(MyGuid, "KISTYPE") != null) { type = sgen.GetSession(MyGuid, "KISTYPE").ToString().Trim(); }
                    else { type = "30','32"; }  // item issued without requestion or with req.
                    switch (btnval.ToUpper())
                    {
                        case "NEW":
                            cmd = "select (master_id||to_char(vch_date,'yyyymmdd')||type) fstr,master_id Type,master_name Name " +
                                "from master_setting where type='KIS' and find_in_set(client_unit_id,'" + unitid_mst + "')=1";
                            break;
                        case "EDIT":
                        case "PRINT":
                            cmd = "select distinct (i.client_id||i.client_unit_id||i.vch_num||to_char(i.vch_date,'yyyymmdd')||i.type) as fstr,i.vch_num as Issue_no,i.type Type," +
                                "to_char(convert_tz(i.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') as Issue_date,i.cond Order_Id from itransaction i " +
                                "where i.type in ('" + type + "') and i.client_unit_id = '" + unitid_mst + "' " + xprdrange.Replace("vch_date", "i.vch_date") + "";
                            break;
                        case "VIEW":
                            cmd = "select (i.client_id||i.client_unit_id||i.vch_num||to_char(i.vch_date,'yyyymmdd')||i.type) as fstr,i.vch_num as Issue_no," +
                                "to_char(convert_tz(i.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), " + "'" + sgen.Getsqldateformat() + "') as Issue_date,d.master_name as Dept_name," +
                                "dg.master_name as desig,i.icode as Icode,i.iname as Item_Name,i.cpartno Partno,i.qtystk Qty_In_Stock,i.qtychl Qty_Req,i.qtyout Qty_Issue," +
                                "i.qtybal Qty_Req_Bal,i.pono OrderId,i.totremark remark from itransaction i " +
                                "inner join master_setting d on d.master_id=i.deptno and d.type='MDP' and find_in_set(d.client_unit_id,'" + unitid_mst + "')=1 " +
                                "inner join master_setting dg on dg.master_id=i.desig and dg.type='MDG' and find_in_set(dg.client_unit_id,'" + unitid_mst + "')=1 " +
                                "where i.type in ('" + type + "') and i.client_unit_id='" + unitid_mst + "' " + xprdrange.Replace("vch_date", "i.vch_date") + "";
                            break;
                        case "ITEM":
                            if (type.Equals("30"))
                            {
                                cmd = "select (it.client_unit_id||it.icode||nvl(s.btchno, '0')) fstr,it.icode,it.iname,it.cpartno Partno,um.master_name UOM,nvl(s.closing,0) closing," +
                                    "nvl(s.pktno,0) pktno,nvl(s.btchno, 0) batchno from item it " +
                                    "inner join master_setting um on um.master_id = it.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, it.client_unit_id)= 1 " +
                                    "left join(select icode, client_unit_id, sum(qtyin) qtyin, sum(qtyout) out, sum(qtyin)-sum(qtyout) closing,sum(pktno) pktno,btchno from " +
                                    "(select icode, client_unit_id, to_number(qtyin) qtyin, to_number(qtyout) qtyout, (case when substr(type, 1, 1) in ('0', '1') then pktno " +
                                    "when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end) pktno,btchno from itransaction where trim(store) = 'Y') a group by " +
                                    "icode, client_unit_id, btchno) s on it.icode = s.icode and find_in_set(s.client_unit_id, it.client_unit_id)= 1 " +
                                    "where length(trim(it.icode))> 8 and find_in_set(it.client_unit_id,'" + unitid_mst + "')= 1 " + where + "";
                            }
                            else if (type.Equals("32"))
                            {
                                //brijesh
                                cmd = "select distinct (mr.client_id||mr.client_unit_id||mr.vch_num||to_char(mr.vch_date,'yyyymmdd')||mr.type) fstr," +
                                    "mr.vch_num Mrs_No,to_char(convert_tz(mr.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') Req_Date,nvl(dp.master_name,'-') dept, " +
                                    "nvl(dg.master_name,'-') desig, mr.pono Order_Id,mr.type Mrs_Type from itransactionc mr " +
                                    "left join master_setting dp on dp.master_id = mr.deptno and dp.type = 'MDP' and " +
                                    "find_in_set(dp.client_unit_id,'" + unitid_mst + "')= 1 left join master_setting dg on dg.master_id = mr.desig and dg.type = 'MDG' and " +
                                    "find_in_set(dg.client_unit_id,'" + unitid_mst + "')= 1 left join(select sum(to_number(nvl(qtyout,'0'))) as used_qty,icode,chlno,client_id,client_unit_id,to_char(chldate, 'ddmmyyyy') as chldate from itransaction " +
                                    "where type = '32' group by icode,chlno,client_id,client_unit_id,to_char(chldate, 'ddmmyyyy')) a on mr.icode = a.icode and mr.vch_num = " +
                                    "a.chlno and a.client_unit_id = mr.client_unit_id and a.chldate = to_char(mr.vch_date, 'ddmmyyyy') where UPPER(mr.type) in ('3A', '3B') and mr.client_unit_id = '" + unitid_mst + "' and (to_number(nvl(mr.qtychl,'0')) - to_number(nvl(a.used_qty,'0'))) > 0";
                            }
                            break;
                        case "IMRS":
                            if (param1 != "") where = " and (mr.client_id||mr.client_unit_id||mr.vch_num||it.icode||to_char(mr.vch_date,'yyyymmdd')||mr.type) not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','") + "')";
                            if (param2.Trim() != "") cond = " and (mr.client_id||mr.client_unit_id||mr.vch_num||to_char(mr.vch_date,'yyyymmdd')||mr.type)='" + param2.Trim() + "'";
                            if (type.Equals("32"))
                            {
                                cmd = "select (it.client_id||it.client_unit_id||mr.vch_num||it.icode||mr.type||to_char(it.vch_date,'yyyymmdd')||it.type) as fstr, mr.icode,it.iname," +
                                    "it.cpartno PartNo,mr.vch_num mrs_no,to_char(mr.vch_date,'" + sgen.Getsqldateformat() + "') Req_Date,um.master_name as uom,nvl(dp.master_name,'-') Dept,nvl(dg.master_name,'-') Desig," +
                                    "nvl(s.closing,'0') as qty_in_stock,mr.Qty_Req,mr.issued_qty,mr.bal_qty from item it " +
                                    "inner join (select distinct a.vch_num,a.type,a.icode,a.client_id,a.client_unit_id,a.vch_date,a.Qty_Req,a.desig,a.deptno,sum(a.issued_qty) as issued_qty," +
                                    "(a.Qty_Req - nvl(sum(a.issued_qty), '0')) as bal_qty from(select mr.vch_num,mr.type,mr.icode,mr.client_id,mr.client_unit_id,mr.vch_date," +
                                    "mr.desig,mr.deptno, mr.qtychl Qty_Req,to_number(nvl(iv.qtyout,'0')) as issued_qty from itransactionc mr " +
                                    "left join itransaction iv on iv.icode=mr.icode and iv.chlno = mr.vch_num and iv.type = '32' and " +
                                    "iv.client_unit_id = '" + unitid_mst + "' where upper(mr.type) in ('3A', '3B') and mr.client_unit_id = '" + unitid_mst + "' " +
                                    "union all select mr.vch_num,mr.type,mr.icode,mr.client_id,mr.client_unit_id,mr.vch_date,mr.desig,mr.deptno,mr.qtychl Qty_Req," +
                                    "to_number(nvl(iv.col11,'0')) as closed_qty from itransactionc mr left join enx_tab iv on iv.col7=mr.icode and iv.col12 = mr.vch_num and " +
                                    "iv.type = 'CPM' and iv.client_unit_id = '" + unitid_mst + "'  where upper(mr.type) in ('3A', '3B') and mr.client_unit_id = '" + unitid_mst + "') a group by " +
                                    "(a.vch_num,a.type,a.icode,a.client_id,a.client_unit_id,a.vch_date,a.desig,a.deptno,a.Qty_Req)) mr on " +
                                    "mr.icode=it.icode and find_in_set(mr.client_unit_id,it.client_unit_id)=1 and mr.bal_qty > 0 " +
                                    "left join master_setting dp on dp.master_id = mr.deptno and dp.type = 'MDP' and find_in_set(dp.client_unit_id,'" + unitid_mst + "')= 1 " +
                                    "left join master_setting dg on dg.master_id = mr.desig and dg.type = 'MDG' and find_in_set(dg.client_unit_id, '" + unitid_mst + "') = 1 " +
                                    "left join master_setting um on um.master_id = it.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, it.client_unit_id)= 1 " +
                                    "left join(select t.client_unit_id, t.icode, sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout, 0)) as Issued,sum(nvl(t.qtyin, 0)) - sum(nvl(t.qtyout, 0)) as closing from itransaction t " +
                                    "where trim(t.store) = 'Y' group by t.icode,t.client_unit_id ) s on it.icode = s.icode and find_in_set(s.client_unit_id ,it.client_unit_id)=1 " +
                                    "where it.type='IT' and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 " + where + "  " + cond + "";
                            }
                            break;
                        //case "IMRSBTCH":
                        //    if (param1 != "") where = " and (mr.client_id||mr.client_unit_id||mr.vch_num||it.icode||to_char(mr.vch_date,'yyyymmdd')||mr.type) not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','") + "')";
                        //    if (param2.Trim() != "") cond = " and (mr.client_id||mr.client_unit_id||mr.vch_num||to_char(mr.vch_date,'yyyymmdd')||mr.type)='" + param2.Trim() + "'";
                        //    if (type.Equals("32"))
                        //    {
                        //        cmd = "select (it.client_id||it.client_unit_id||mr.vch_num||it.icode||mr.type||to_char(it.vch_date,'yyyymmdd')||it.type) as fstr, mr.icode,it.iname," +
                        //            "it.cpartno PartNo,mr.vch_num mrs_no,to_char(mr.vch_date,'" + sgen.Getsqldateformat() + "') Req_Date,um.master_name as uom,nvl(dp.master_name,'-') Dept,nvl(dg.master_name,'-') Desig," +
                        //            "nvl(s.closing,'0') as qty_in_stock,mr.Qty_Req,mr.issued_qty,mr.bal_qty from item it " +
                        //            "inner join (select a.vch_num,a.type,a.icode,a.client_id,a.client_unit_id,a.vch_date,a.Qty_Req,a.desig,a.deptno,sum(a.issued_qty) as issued_qty," +
                        //            "(a.Qty_Req - nvl(sum(a.issued_qty), '0')) as bal_qty from(select distinct mr.vch_num,mr.type,mr.icode,mr.client_id,mr.client_unit_id,mr.vch_date," +
                        //            "mr.desig,mr.deptno, mr.qtychl Qty_Req,to_number(nvl(iv.qtyout,'0')) as issued_qty from itransactionc mr " +
                        //            "left join itransaction iv on iv.icode=mr.icode and iv.chlno = mr.vch_num and iv.type = '32' and " +
                        //            "iv.client_unit_id = '" + unitid_mst + "' where upper(mr.type) in ('3A', '3B') and mr.client_unit_id = '" + unitid_mst + "' " +
                        //            "union all select distinct mr.vch_num,mr.type,mr.icode,mr.client_id,mr.client_unit_id,mr.vch_date,mr.desig,mr.deptno,mr.qtychl Qty_Req," +
                        //            "to_number(nvl(iv.col11,'0')) as closed_qty from itransactionc mr left join enx_tab iv on iv.col7=mr.icode and iv.col12 = mr.vch_num and " +
                        //            "iv.type = 'CPM' and iv.client_unit_id = '" + unitid_mst + "'  where upper(mr.type) in ('3A', '3B') and mr.client_unit_id = '" + unitid_mst + "') a group by " +
                        //            "(a.vch_num,a.type,a.icode,a.client_id,a.client_unit_id,a.vch_date,a.desig,a.deptno,a.Qty_Req)) mr on " +
                        //            "mr.icode=it.icode and find_in_set(mr.client_unit_id,it.client_unit_id)=1 and mr.bal_qty > 0 " +
                        //            "left join master_setting dp on dp.master_id = mr.deptno and dp.type = 'MDP' and find_in_set(dp.client_unit_id,'" + unitid_mst + "')= 1 " +
                        //            "left join master_setting dg on dg.master_id = mr.desig and dg.type = 'MDG' and find_in_set(dg.client_unit_id, '" + unitid_mst + "') = 1 " +
                        //            "left join master_setting um on um.master_id = it.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, it.client_unit_id)= 1 " +
                        //            "left join(select t.client_unit_id, t.icode, sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout, 0)) as Issued,sum(nvl(t.qtyin, 0)) - sum(nvl(t.qtyout, 0)) as closing from itransaction t " +
                        //            "where trim(t.store) = 'Y' group by t.icode,t.client_unit_id ) s on it.icode = s.icode and find_in_set(s.client_unit_id ,it.client_unit_id)=1 " +
                        //            "where it.type='IT' and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 " + where + "  " + cond + "";
                        //    }
                        //break;
                        case "ITEM2":
                            if (param1 != "") where = " and (it.client_unit_id||it.icode||s.loc) not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','") + "')";
                            cmd = "select (it.client_unit_id||it.icode||s.loc) fstr,it.icode as Icode,it.iname as Iname,it.cpartno Partno,um.master_name as UOM," +
  "location_name(s.loc) as LocName,s.closing from item it " +
  "inner join itbal itb on it.icode=itb.icode and it.type=itb.type and find_in_set(itb.client_unit_id,it.client_unit_id)=1 " +
  "inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
  "inner join (select t.client_unit_id,t.loc,t.icode,sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout,0)) as Issued," +
  "sum(nvl(t.qtyin,0))-sum(nvl(t.qtyout,0)) as closing from btchtrans t where length(trim(t.loc))>6 and trim(t.store)='Y' group by t.icode,t.client_unit_id,t.loc " +
  "having sum(nvl(t.qtyin,0))-sum(nvl(t.qtyout,0))>0 ) s on itb.icode=s.icode and itb.client_unit_id=s.client_unit_id " +
  "where length(trim(it.icode))>8 and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 " +
  "and it.icode in ('" + param2.Trim().TrimEnd(',').Replace(",", "','").Trim() + "') " + where + "";
                            break;
                        case "FUN":
                            cmd = "select distinct (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr," +
                                " a.vch_num as Doc_No, to_char( convert_tz( a.date1,'UTC','" + sgen.Gettimezone() + "')," +
                                 "'" + sgen.Getsqldateformat() + "')as   Date_Of_Function, b.master_name Function_Type , a.col3 Name_Of_Party ,a.col2 as no_of_paxes,sum(a.col10*a.col9) Total_AMount" +
                                 " ,nvl(s.master_name,'-') as Service_type,nvl(m.master_name,'-') as Menu_Type   from enx_tab2 a " +
                                 "inner join master_setting  b on a. col5=b.master_id and b.type='FUN' and a.client_unit_id= b.client_unit_id " +
                                 "left Join master_setting s on a.col11=s.master_id and b.type='TBS' and find_in_set(s.client_unit_id,'" + unitid_mst + "')=1 left Join master_setting m" +
                                 " on a.col17=s.master_id and b.type='TBM' and find_in_set(m.client_unit_id,'" + unitid_mst + "')=1" +
                                " where a.type in ('FUN')and a.client_unit_id='" + unitid_mst + "'" +
                                " group by (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) ,a.vch_num ,to_char(convert_tz(a.date1," +
                                " 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "'),b.master_name, a.col3,a.col2,s.master_name,m.master_name" +
                                "  order by a.vch_num desc";
                            break;
                    }
                    break;
                #endregion
                #region store_return
                case "store_return":
                    if (sgen.GetSession(MyGuid, "KSRTYPE") != null) { type = sgen.GetSession(MyGuid, "KSRTYPE").ToString().Trim(); }
                    else { type = "10','11"; }
                    switch (btnval.ToUpper())
                    {
                        case "NEW":
                            cmd = "select (master_id||to_char(vch_date,'yyyymmdd')||type) fstr,master_id Type,master_name Name " +
                                "from master_setting where type='KSR' and find_in_set(client_unit_id,'" + unitid_mst + "')=1";
                            break;
                        case "EDIT":
                            cmd = @"select (i.client_id||i.client_unit_id||i.vch_num||to_char(i.vch_date,'yyyymmdd')||i.type) as fstr,i.vch_num as Return_no,
                        to_char(convert_tz(i.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), " + "'" + sgen.Getsqldateformat() + "') as Return_date,i.type, " +
                        "i.icode as Icode,i.iname as Item_Name,i.cpartno Partno,i.qtystk Qty_In_Stock,i.qtychl Qty_Ret_Req,i.qtyin Qty_Act_Ret,i.qtybal Qty_Req_Bal from itransaction i " +
                         "where i.type in ('" + type + "') and i.client_unit_id='" + unitid_mst + "' " + xprdrange.Replace("vch_date", "i.vch_date") + "";
                            break;
                        case "VIEW":
                            cmd = @"select (i.client_id||i.client_unit_id||i.vch_num||to_char(i.vch_date,'yyyymmdd')||i.type) as fstr,i.vch_num as Return_no,to_char(convert_tz(i.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), " + "'" + sgen.Getsqldateformat() + "') as Return_date,i.type,d.master_name as Dept_name,dg.master_name as desig," +
                          "i.icode as Icode,i.iname as Item_Name,i.cpartno Partno,i.qtystk Qty_In_Stock,i.qtychl Qty_Ret_Req,i.qtyin Qty_Act_Ret,i.qtybal Qty_Req_Bal," +
                          "(b.First_name|| ' '|| nvl(b.middle_name, '')|| ' '|| b.last_name) as Ent_By," +
                          "to_char(convert_tz(i.ent_date, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') as Ent_Date from itransaction i " +
                          "inner join master_setting d on d.master_id=i.deptno and d.type='MDP' and find_in_set(d.client_unit_id,'" + unitid_mst + "')=1 " +
                          "inner join master_setting dg on  dg.master_id  = i.desig and dg.type='MDG' and find_in_set(dg.client_unit_id,'" + unitid_mst + "')=1 " +
                          "inner join user_details b on i.ent_by = b.vch_num and b.type = 'CPR' " +
                          "where i.type in ('" + type + "') and i.client_unit_id='" + unitid_mst + "' " + xprdrange.Replace("vch_date", "i.vch_date") + "";
                            break;
                        case "ITEM":
                            if (type.Equals("10"))
                            {
                                if (param2.Split(new string[] { "!~~!~~!~~!" }, StringSplitOptions.None)[0].Trim().Trim().Equals("001"))
                                {
                                    if (param1 != "") where = " and (it.client_unit_id||it.icode) not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','") + "')";
                                    //kc
                                    //cmd = "select (it.client_unit_id||it.icode) fstr,it.icode as Icode,it.iname as Iname,it.cpartno Partno,um.master_name as UOM,s.closing " +
                                    //    "from item it inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_id,it.client_id)=1 and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
                                    //    "inner join (select t.client_unit_id,t.icode,sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout,0)) as Issued," +
                                    //    "sum(nvl(t.qtyout,0))-sum(nvl(t.qtyin,0)) as closing from itransaction t where trim(t.store)='Y' and substr(trim(t.type),1,1) in ('1','3') and trim(t.type) not in ('36','37') group by t.icode," +
                                    //    "t.client_unit_id ) s on it.icode=s.icode and find_in_set(s.client_unit_id,it.client_unit_id)=1 where length(trim(it.icode))>8 and it.client_id='" + clientid_mst + "' " +
                                    //    "and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 " + where + "";
                                    cmd = "select (it.client_unit_id||it.icode) fstr,it.icode as Icode,it.iname as Iname,it.cpartno Partno,um.master_name as UOM," +
                                        "nvl(s.closing,0) closing,nvl(s.pktno,0) pktno from item it " +
                                       "inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
                                       "left join (select t.client_unit_id,t.icode,sum(nvl(t.qtyin,0)) Received,sum(nvl(t.qtyout,0)) Issued," +
                                       "sum(nvl(t.qtyout,0))-sum(nvl(t.qtyin,0)) closing,sum(nvl(t.pktno, 0)) pktno from " +
                                       "(select client_unit_id,client_id,icode,type,qtyin, qtyout,(case when substr(type, 1, 2) in ('10','11','12','13','14') " +
                                       "then - pktno when substr(type,1,2) in ('30', '32') then pktno else 0 end) pktno,store from itransaction where trim(store) = 'Y' " +
                                       "and substr(trim(type),1,2) in ('10', '11', '12', '13', '14', '30', '32')) t " +
                                       "group by t.icode,t.client_unit_id) s on it.icode=s.icode and find_in_set(s.client_unit_id,it.client_unit_id)=1 " +
                                       "where length(trim(it.icode))>8 and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 " + where + "";
                                }
                                else if (param2.Split(new string[] { "!~~!~~!~~!" }, StringSplitOptions.None)[0].Trim().Trim().Equals("002"))
                                {
                                    cmd = "select (i.client_unit_id||i.icode) fstr,i.icode, i.iname, i.cpartno Partno, um.master_name uom, sum(nvl(a.qtyin, 0)) qtyin, " +
                                        "sum(nvl(a.qtyout, 0)) qtyout, sum(nvl(a.qtyin, 0)) - sum(nvl(a.qtyout, 0)) closing,nvl(a.fstg, '001') fstgCode,st.master_name fstg " +
                                        "from item i " +
                                        "left join (select icode, (case when type='100' then 0 else qtyin end)  qtyin, qtyout qtyout, stage fstg, type, " +
                                        "client_id, client_unit_id,vch_num,vch_date from iprod where (type like '3%' or type = '10P') " +
                                        "union " +
                                        "select acode icode, (to_number(max(qtyin))+to_number(max(qtyrw))) qtyin, 0 qtyout, stage1 fstg, type, client_id, client_unit_id ,vch_num,vch_date from iprod " +
                                        "where type = '100' group by acode, stage1, type, client_id, client_unit_id ,vch_num,vch_date " +
                                        "union " +
                                        "select acode icode, to_number(max(qtyrej)) qtyin, 0 qtyout, '101' fstg, type, client_id, client_unit_id,vch_num,vch_date from iprod where type = '100' " +
                                        "group by acode, type, client_id, client_unit_id,vch_num,vch_date " +
                                        "union " +
                                        "select icode, sum(qtyin) qtyin, 0 qtyout, stage1 fstg, type, client_id, client_unit_id ,vch_num,vch_date from iprod where type = '10R' " +
                                        "group by icode, stage1, type, client_id, client_unit_id,vch_num,vch_date " +
                                        "union " +
                                        "select icode, 0 qtyin, sum(qtyout) qtyout, stage fstg, type,client_id, client_unit_id,vch_num,vch_date from iprod where type = '10R' " +
                                        "group by icode, stage, type, client_id, client_unit_id,vch_num,vch_date " +
                                        "union " +
                                        "select icode, sum(qtyout) qtyin, 0 qtyout, stage1 fstg, type,client_id, client_unit_id,vch_num,vch_date from iprod where type = '10R' " +
                                        "group by icode, stage1, type, client_id, client_unit_id,vch_num,vch_date) a on a.icode = i.icode and find_in_set(a.client_unit_id, i.client_unit_id)=1 " +
                                        "inner join master_setting um on um.master_id = i.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, i.client_unit_id)= 1 " +
                                        "inner join master_setting st on st.master_id=nvl(a.fstg, '001') and st.type='KPS' and find_in_set(st.client_unit_id,i.client_unit_id)=1 " +
                                        "where i.type = 'IT' and find_in_set(i.client_unit_id,'" + unitid_mst + "')=1 and substr(i.icode,1,1)<>'9' and nvl(a.fstg, '001')='001' " +
                                        "group by i.icode,i.iname,um.master_name,nvl(a.fstg, '001'),st.master_name,i.client_unit_id, i.cpartno";
                                }
                            }
                            else if (type.Equals("11"))
                            {
                                //cmd = "select distinct (mr.client_id||mr.client_unit_id||mr.vch_num||to_char(mr.vch_date,'yyyymmdd')||mr.type) fstr,mr.vch_num Issue_No," +
                                //"to_char(convert_tz(mr.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') Issue_Date," +
                                //"mr.type Issue_Type,dp.master_name dept,dg.master_name desig," +
                                //"mr.pono Order_Id from itransaction mr " +
                                //"inner join master_setting dp on dp.master_id = mr.deptno and dp.type = 'MDP' and find_in_set(dp.client_id,'" + clientid_mst + "')=1 and find_in_set(dp.client_unit_id,'" + unitid_mst + "')=1 " +
                                //"inner join master_setting dg on dg.master_id = mr.desig and dg.type = 'MDG' and find_in_set(dg.client_id,'" + clientid_mst + "')=1 and find_in_set(dg.client_unit_id,'" + unitid_mst + "')=1 " +
                                //"where mr.type in ('30', '32') and mr.client_id = '" + clientid_mst + "' and mr.client_unit_id = '" + unitid_mst + "'";
                                cmd = "select distinct (mr.client_id||mr.client_unit_id||mr.vch_num||to_char(mr.vch_date,'yyyymmdd')||mr.type) fstr,mr.vch_num Issue_No," +
                                    "to_char(convert_tz(mr.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') Issue_Date,mr.type Issue_Type, " +
                                    "dp.master_name dept, dg.master_name desig,mr.pono Order_Id, nvl(p.pflag, 'C') flg from itransaction mr " +
                                    "inner join master_setting dp on dp.master_id = mr.deptno and dp.type = 'MDP' and find_in_set(dp.client_unit_id,mr.client_unit_id)= 1 " +
                                    "inner join master_setting dg on dg.master_id = mr.desig and dg.type = 'MDG' and find_in_set(dg.client_unit_id,mr.client_unit_id)= 1 " +
                                    "left join iprod p on p.vch_num = mr.vch_num and p.vch_date = mr.vch_date and p.type = mr.type and p.client_unit_id = mr.client_unit_id " +
                                    "where mr.type in ('30', '32') and mr.client_unit_id = '" + unitid_mst + "' order by mr.vch_num asc";
                            }
                            break;
                        case "IISS":
                            if (param1 != "") where = " and (mr.client_id||mr.client_unit_id||mr.vch_num||it.icode||to_char(mr.vch_date,'yyyymmdd')||mr.type) not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','") + "')";
                            if (param2.Trim() != "") cond = " and (mr.client_id||mr.client_unit_id||mr.vch_num||to_char(mr.vch_date,'yyyymmdd')||mr.type)='" + param2.Trim() + "'";
                            if (type.Trim().TrimEnd(',').Replace(",", "','").Contains("11"))
                            {
                                cmd = "select (mr.client_id||mr.client_unit_id||mr.vch_num||it.icode||to_char(mr.vch_date,'yyyymmdd')||mr.type) fstr,mr.vch_num IssueNo," +
                                 "to_char(convert_tz(mr.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), " + "'" + sgen.Getsqldateformat() + "') as IssueDate,dp.master_name Dept,dg.master_name Desig," +
                                 "it.icode Icode,it.iname Iname,it.cpartno PartNo,um.master_name as uom,s.closing Qty_Stk,mr.qtyout Qty_Ret_Req,'0' Qty_Act_Ret,'0' Qty_Req_bal,mr.iremark IRemark " +
                                 "from itransaction mr " +
                                 "inner join item it on mr.icode=it.icode and it.type='IT' and find_in_set(mr.client_unit_id,it.client_unit_id)=1 " +
                                 "inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
                                 "inner join (select t.client_unit_id,t.icode,sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout,0)) as Issued,sum(nvl(t.qtyout,0))-sum(nvl(t.qtyin,0)) " +
                                 "as closing from itransaction t where trim(t.store)='Y' and substr(trim(t.type),1,1) in ('1','3') and trim(t.type) not in ('36','37') group by t.icode,t.client_unit_id ) s on it.icode=s.icode and find_in_set(s.client_unit_id,it.client_unit_id)=1 " +
                                 "inner join master_setting dp on dp.master_id = mr.deptno and dp.type = 'MDP' and find_in_set(dp.client_unit_id,'" + unitid_mst + "')=1 " +
                                 "inner join master_setting dg on dg.master_id = mr.desig and dg.type = 'MDG' and find_in_set(dg.client_unit_id,'" + unitid_mst + "')=1 " +
                                 "where mr.type in ('30', '32') and mr.client_unit_id = '" + unitid_mst + "'" + where + cond + "";
                            }
                            break;
                        case "ITEM2":
                            if (param1 != "") where = " and (it.client_unit_id||it.icode||s.loc) not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','") + "')";
                            cmd = "select (it.client_unit_id||it.icode||s.loc) fstr,it.icode as Icode,it.iname as Iname,it.cpartno Partno,um.master_name as UOM " +
  ",location_name('" + clientid_mst + "||" + unitid_mst + "||s.loc) as LocName,s.loc,s.closing from item it " +
  "inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
  "inner join (select t.client_unit_id,t.loc,t.icode,sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout,0)) as Issued," +
  "sum(nvl(t.qtyout,0))-sum(nvl(t.qtyin,0)) as closing from btchtrans t where length(trim(t.loc))>6 and trim(t.store)='Y' and substr(trim(t.type),1,1) in ('1','3') and trim(t.type) not in ('36','37') group by t.icode,t.client_unit_id,t.loc ) s on " +
  "it.icode=s.icode and find_in_set(s.client_unit_id,it.client_unit_id)=1 where length(trim(it.icode))>8 and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 " +
  "and it.icode in ('" + param2.Trim().TrimEnd(',').Replace(",", "','").Trim() + "') " + where + "";
                            break;
                    }
                    break;
                #endregion
                #region store_returnn
                case "store_returnn":
                    if (sgen.GetSession(MyGuid, "KSRTYPE") != null) { type = sgen.GetSession(MyGuid, "KSRTYPE").ToString().Trim(); }
                    else { type = "10','11"; }
                    switch (btnval.ToUpper())
                    {
                        case "NEW":
                            cmd = "select (master_id||to_char(vch_date,'yyyymmdd')||type) fstr,master_id Type,master_name Name " +
                                "from master_setting where type='KSR' and find_in_set(client_unit_id,'" + unitid_mst + "')=1";
                            break;
                        case "EDIT":
                            cmd = @"select (i.client_id||i.client_unit_id||i.vch_num||to_char(i.vch_date,'yyyymmdd')||i.type) as fstr,i.vch_num as Return_no,
                        to_char(convert_tz(i.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), " + "'" + sgen.Getsqldateformat() + "') as Return_date,i.type, i.icode as Icode," +
                        "i.iname as Item_Name,i.cpartno Partno,i.qtystk Qty_In_Stock,i.qtychl Qty_Ret_Req,i.qtyin Qty_Act_Ret,i.qtybal Qty_Req_Bal from itransaction i " +
                         "where i.type in ('" + type + "') and i.client_unit_id='" + unitid_mst + "' " + xprdrange.Replace("vch_date", "i.vch_date") + "";
                            break;
                        case "VIEW":
                            cmd = @"select (i.client_id||i.client_unit_id||i.vch_num||to_char(i.vch_date,'yyyymmdd')||i.type) as fstr,i.vch_num as Return_no,to_char(convert_tz(i.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), " + "'" + sgen.Getsqldateformat() + "') as Return_date,i.type,d.master_name as Dept_name,dg.master_name as desig," +
                          "i.icode as Icode,i.iname as Item_Name,i.cpartno Partno,i.qtystk Qty_In_Stock,i.qtychl Qty_Ret_Req,i.qtyin Qty_Act_Ret,i.qtybal Qty_Req_Bal," +
                          "(b.First_name|| ' '|| nvl(b.middle_name, '')|| ' '|| b.last_name) as Ent_By," +
                          "to_char(convert_tz(i.ent_date, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') as Ent_Date from itransaction i " +
                          "inner join master_setting d on d.master_id=i.deptno and d.type='MDP' and find_in_set(d.client_unit_id,'" + unitid_mst + "')=1 " +
                          "inner join master_setting dg on  dg.master_id  = i.desig and dg.type='MDG' and find_in_set(dg.client_unit_id,'" + unitid_mst + "')=1 " +
                          "inner join user_details b on i.ent_by = b.vch_num and b.type = 'CPR' " +
                          "where i.type in ('" + type + "') and i.client_unit_id='" + unitid_mst + "' " + xprdrange.Replace("vch_date", "i.vch_date") + "";
                            break;
                        case "ITEM":
                            if (type.Equals("10"))
                            {
                                if (param2.Split(new string[] { "!~~!~~!~~!" }, StringSplitOptions.None)[0].Trim().Trim().Equals("001"))
                                {
                                    //if (param1 != "") where = " and (it.client_unit_id||it.icode) not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','") + "')";
                                    //kc
                                    //cmd = "select (it.client_unit_id||it.icode) fstr,it.icode as Icode,it.iname as Iname,it.cpartno Partno,um.master_name as UOM,s.closing " +
                                    //    "from item it inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_id,it.client_id)=1 and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
                                    //    "inner join (select t.client_unit_id,t.icode,sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout,0)) as Issued," +
                                    //    "sum(nvl(t.qtyout,0))-sum(nvl(t.qtyin,0)) as closing from itransaction t where trim(t.store)='Y' and substr(trim(t.type),1,1) in ('1','3') and trim(t.type) not in ('36','37') group by t.icode," +
                                    //    "t.client_unit_id ) s on it.icode=s.icode and find_in_set(s.client_unit_id,it.client_unit_id)=1 where length(trim(it.icode))>8 and it.client_id='" + clientid_mst + "' " +
                                    //    "and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 " + where + "";
                                    //cmd = "select (it.client_unit_id||it.icode) fstr,it.icode as Icode,it.iname as Iname,it.cpartno Partno,um.master_name as UOM," +
                                    //    "nvl(s.closing,0) closing,nvl(s.pktno,0) pktno from item it " +
                                    //   "inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
                                    //   "left join (select t.client_unit_id,t.icode,t.btchno,sum(nvl(t.qtyin,0)) Received,sum(nvl(t.qtyout,0)) Issued," +
                                    //   "sum(nvl(t.qtyout,0))-sum(nvl(t.qtyin,0)) closing,sum(nvl(t.pktno, 0)) pktno from " +
                                    //   "(select client_unit_id,client_id,icode,btchno,type,qtyin, qtyout,(case when substr(type, 1, 1) in ('0', '1') then pktno when type='36' then " +
                                    //   "pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end) pktno,store from itransaction) t " +
                                    //   "where trim(t.store)='Y' and substr(trim(t.type),1,1) in ('1','3') and trim(t.type) not in ('36','37') " +
                                    //   "group by t.icode,t.client_unit_id,t.btchno) s on it.icode=s.icode and find_in_set(s.client_unit_id,it.client_unit_id)=1 " +
                                    //   "where length(trim(it.icode))>8 and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 " + where + "";


                                    //cmd = "select (it.client_unit_id||it.icode) fstr,it.icode as Icode,it.iname as Iname,it.cpartno Partno,um.master_name as UOM,nvl(s.closing,0) closing," +
                                    //    "nvl(s.pktno, 0) pktno,nvl(s.btchno, '0') batchno from item it " +
                                    //    "inner join master_setting um on um.master_id = it.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, it.client_unit_id)= 1 " +
                                    //    "left join(select t.client_unit_id, t.icode, sum(nvl(t.qtyin,0)) Received,sum(nvl(t.qtyout, 0)) Issued,sum(nvl(t.qtyout, 0)) - sum(nvl(t.qtyin, 0)) closing," +
                                    //    "sum(nvl(t.pktno, 0)) pktno,t.btchno from " +
                                    //    "(select client_unit_id, client_id, icode, type, qtyin, qtyout, (case when substr(type, 1, 2) in ('10', '11', '12', '13', '14') then - pktno when " +
                                    //    "substr(type, 1, 2) in ('30', '32') then pktno else 0 end) pktno,store,btchno from itransaction " +
                                    //    "where trim(store) = 'Y' and substr(trim(type),1,2) in ('10', '11', '12', '13', '14', '30', '32')) t group by t.icode,t.client_unit_id,t.btchno) s " +
                                    //    "on it.icode = s.icode and find_in_set(s.client_unit_id, it.client_unit_id)= 1 " +
                                    //    "where length(trim(it.icode))> 8 and find_in_set(it.client_unit_id,'" + unitid_mst + "')= 1 " + where + "";

                                    cmd = "select (it.client_unit_id||it.icode||nvl(s.btchno,'0')) fstr,it.icode as Icode,it.iname as Iname,it.cpartno Partno,um.master_name as UOM," +
                                     "nvl(s.closing,0) closing,nvl(s.pktno,0) pktno,nvl(s.btchno,'0') batchno from item it " +
                                    "inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
                                    "left join (select t.client_unit_id,t.icode,sum(nvl(t.qtyin,0)) Received,sum(nvl(t.qtyout,0)) Issued," +
                                    "sum(nvl(t.qtyout,0))-sum(nvl(t.qtyin,0)) closing,sum(nvl(t.pktno, 0)) pktno,t.btchno from " +
                                    "(select client_unit_id,client_id,icode,type,qtyin, qtyout,(case when substr(type, 1, 2) in ('10','11','12','13','14') " +
                                    "then - pktno when substr(type,1,2) in ('30', '32') then pktno else 0 end) pktno,store,btchno from itransaction where trim(store) = 'Y' " +
                                    "and substr(trim(type),1,2) in ('10', '11', '12', '13', '14', '30', '32')) t " +
                                    "group by t.icode,t.client_unit_id,t.btchno) s on it.icode=s.icode and find_in_set(s.client_unit_id,it.client_unit_id)=1 " +
                                    "where length(trim(it.icode))>8 and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 " + where + "";


                                    //cmd = "select (it.client_unit_id||it.icode|| nvl(s.btchno,'-')) fstr,it.icode as Icode,it.iname as Iname,it.cpartno Partno,um.master_name as UOM," +
                                    //    "nvl(s.closing,0) closing,nvl(s.pktno,0) pktno,s.btchno batchno from item it " +
                                    //   "inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
                                    //   "left join (select icode,client_unit_id,sum(op) op,sum(pktop) pktop,sum(qtyin) qtyin,sum(qtyout) out,sum(op)+sum(qtyin)-sum(qtyout) closing" +
                                    //   ",sum(pktno) pktno,btchno from (select icode, client_unit_id, nvl(op_2019, 0) op, nvl(pkt_2019, 0) pktop, 0 qtyin, 0 qtyout, 0 pktno,'' btchno from " +
                                    //   "itbal union all select icode, client_unit_id, sum(to_number(qtyin)) - sum(to_number(qtyout)) op, sum((case when substr(type, 1, 1) in ('0', '1') then " +
                                    //   "pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktop,sum(to_number(qtyin)) qtyin,sum(to_number(qtyout)) qtyout,0 pktno," +
                                    //   "btchno from itransaction where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') " +
                                    //   "and to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "')-1 group by icode,client_unit_id,btchno union all select icode,client_unit_id,0 as op,0 as pktop,to_number(qtyin) qtyin,to_number(qtyout) qtyout,sum((case when substr(type, 1, 1) in ('0', '1') " +
                                    //   "then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktno,btchno from itransaction where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') " +
                                    //   "between to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and to_date('" + param2.Split(new string[] { "!~~!~~!~~!" }, StringSplitOptions.None)[1].Trim() + "','" + sgen.Getsqldateformat() + "') group by icode,client_unit_id,to_number(qtyin),to_number(qtyout),btchno) a group by icode, client_unit_id,btchno) " +
                                    //   "s on it.icode=s.icode and find_in_set(s.client_unit_id,it.client_unit_id)=1 " +
                                    //   "where length(trim(it.icode))>8 and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 " + where + "";

                                    //                                cmd = "select (it.client_unit_id||it.icode) fstr,it.icode as Icode,it.iname as Iname,it.cpartno Partno,um.master_name as UOM," +
                                    //                                    "nvl(s.closing,0) closing,nvl(s.pktno,0) pktno,s.btchno batchno from item it " +
                                    //                                   "inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
                                    //                                   "left join (select icode,pktno,client_unit_id,sum(op) op,sum(pktop) pktop,sum(qtyin) qtyin,sum(qtyout) out,sum(op)+sum(qtyout)-sum(qtyin) closing,btchno from " +
                                    //"(select icode, client_unit_id, nvl(op_2019, 0) op, nvl(pkt_2019, 0) pktop, 0 qtyin, 0 qtyout, 0 pktno,'' btchno from itbal union all " +
                                    //"select icode, client_unit_id, sum(to_number(qtyout)) - sum(to_number(qtyin)) op, sum((case when substr(type, 1, 1) in ('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktop," +
                                    //"sum(to_number(qtyin)) qtyin,sum(to_number(qtyout)) qtyout,0 pktno,btchno from itransaction " +
                                    //"where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') " +
                                    //"and to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "')-1 group by icode,client_unit_id,btchno union all " +
                                    //"select icode,client_unit_id,0 as op,0 as pktop,to_number(qtyin) qtyin,to_number(qtyout) qtyout," +
                                    //"sum((case when substr(type, 1, 1) in ('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktno,btchno from itransaction " +
                                    //"where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and " +
                                    //"to_date('" + param2.Split(new string[] { "!~~!~~!~~!" }, StringSplitOptions.None)[1].Trim() + "','" + sgen.Getsqldateformat() + "') " +
                                    //"group by icode,pktno,client_unit_id,to_number(qtyin),to_number(qtyout),btchno) a group by icode, client_unit_id,btchno,pktno) s on it.icode=s.icode and find_in_set(s.client_unit_id,it.client_unit_id)=1 " +
                                    //                                   "where length(trim(it.icode))>8 and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 " + where + "";

                                }
                                else if (param2.Split(new string[] { "!~~!~~!~~!" }, StringSplitOptions.None)[0].Trim().Trim().Equals("002"))
                                {
                                    cmd = "select (i.client_unit_id||i.icode) fstr,i.icode, i.iname, i.cpartno Partno, um.master_name uom, sum(nvl(a.qtyin, 0)) qtyin, " +
                                        "sum(nvl(a.qtyout, 0)) qtyout, sum(nvl(a.qtyin, 0)) - sum(nvl(a.qtyout, 0)) closing,nvl(a.fstg, '001') fstgCode,st.master_name fstg " +
                                        "from item i " +
                                        "left join (select icode, (case when type='100' then 0 else qtyin end)  qtyin, qtyout qtyout, stage fstg, type, " +
                                        "client_id, client_unit_id,vch_num,vch_date from iprod where (type like '3%' or type = '10P') " +
                                        "union " +
                                        "select acode icode, (to_number(max(qtyin))+to_number(max(qtyrw))) qtyin, 0 qtyout, stage1 fstg, type, client_id, client_unit_id ,vch_num,vch_date from iprod " +
                                        "where type = '100' group by acode, stage1, type, client_id, client_unit_id ,vch_num,vch_date " +
                                        "union " +
                                        "select acode icode, to_number(max(qtyrej)) qtyin, 0 qtyout, '101' fstg, type, client_id, client_unit_id,vch_num,vch_date from iprod where type = '100' " +
                                        "group by acode, type, client_id, client_unit_id,vch_num,vch_date " +
                                        "union " +
                                        "select icode, sum(qtyin) qtyin, 0 qtyout, stage1 fstg, type, client_id, client_unit_id ,vch_num,vch_date from iprod where type = '10R' " +
                                        "group by icode, stage1, type, client_id, client_unit_id,vch_num,vch_date " +
                                        "union " +
                                        "select icode, 0 qtyin, sum(qtyout) qtyout, stage fstg, type,client_id, client_unit_id,vch_num,vch_date from iprod where type = '10R' " +
                                        "group by icode, stage, type, client_id, client_unit_id,vch_num,vch_date " +
                                        "union " +
                                        "select icode, sum(qtyout) qtyin, 0 qtyout, stage1 fstg, type,client_id, client_unit_id,vch_num,vch_date from iprod where type = '10R' " +
                                        "group by icode, stage1, type, client_id, client_unit_id,vch_num,vch_date) a on a.icode = i.icode and find_in_set(a.client_unit_id, i.client_unit_id)=1 " +
                                        "inner join master_setting um on um.master_id = i.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, i.client_unit_id)= 1 " +
                                        "inner join master_setting st on st.master_id=nvl(a.fstg, '001') and st.type='KPS' and find_in_set(st.client_unit_id,i.client_unit_id)=1 " +
                                        "where i.type = 'IT' and find_in_set(i.client_unit_id,'" + unitid_mst + "')=1 and substr(i.icode,1,1)<>'9' and nvl(a.fstg, '001')='001' " +
                                        "group by i.icode,i.iname,um.master_name,nvl(a.fstg, '001'),st.master_name,i.client_unit_id, i.cpartno";
                                }
                            }
                            else if (type.Equals("11"))
                            {
                                //cmd = "select distinct (mr.client_id||mr.client_unit_id||mr.vch_num||to_char(mr.vch_date,'yyyymmdd')||mr.type) fstr,mr.vch_num Issue_No," +
                                //"to_char(convert_tz(mr.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') Issue_Date," +
                                //"mr.type Issue_Type,dp.master_name dept,dg.master_name desig," +
                                //"mr.pono Order_Id from itransaction mr " +
                                //"inner join master_setting dp on dp.master_id = mr.deptno and dp.type = 'MDP' and find_in_set(dp.client_id,'" + clientid_mst + "')=1 and find_in_set(dp.client_unit_id,'" + unitid_mst + "')=1 " +
                                //"inner join master_setting dg on dg.master_id = mr.desig and dg.type = 'MDG' and find_in_set(dg.client_id,'" + clientid_mst + "')=1 and find_in_set(dg.client_unit_id,'" + unitid_mst + "')=1 " +
                                //"where mr.type in ('30', '32') and mr.client_id = '" + clientid_mst + "' and mr.client_unit_id = '" + unitid_mst + "'";
                                cmd = "select distinct (mr.client_id||mr.client_unit_id||mr.vch_num||to_char(mr.vch_date,'yyyymmdd')||mr.type) fstr,mr.vch_num Issue_No," +
                                    "to_char(convert_tz(mr.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') Issue_Date,mr.type Issue_Type, " +
                                    "dp.master_name dept, dg.master_name desig,mr.pono Order_Id, nvl(p.pflag, 'C') flg,btchno batchno from itransaction mr " +
                                    "inner join master_setting dp on dp.master_id = mr.deptno and dp.type = 'MDP' and find_in_set(dp.client_unit_id,mr.client_unit_id)= 1 " +
                                    "inner join master_setting dg on dg.master_id = mr.desig and dg.type = 'MDG' and find_in_set(dg.client_unit_id,mr.client_unit_id)= 1 " +
                                    "left join iprod p on p.vch_num = mr.vch_num and p.vch_date = mr.vch_date and p.type = mr.type and p.client_unit_id = mr.client_unit_id " +
                                    "where mr.type in ('30', '32') and mr.client_unit_id = '" + unitid_mst + "' order by mr.vch_num asc";
                            }
                            break;
                        case "IISS":
                            if (param1 != "") where = " and (mr.client_id||mr.client_unit_id||mr.vch_num||it.icode||to_char(mr.vch_date,'yyyymmdd')||mr.type) not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','") + "')";
                            if (param2.Trim() != "") cond = " and (mr.client_id||mr.client_unit_id||mr.vch_num||to_char(mr.vch_date,'yyyymmdd')||mr.type)='" + param2.Split(new string[] { "!~~!~~!~~!" }, StringSplitOptions.None)[0].Trim() + "'";
                            if (type.Trim().TrimEnd(',').Replace(",", "','").Contains("11"))
                            {
                                cmd = "select (mr.client_id||mr.client_unit_id||mr.vch_num||it.icode||to_char(mr.vch_date,'yyyymmdd')||mr.type) fstr,mr.vch_num IssueNo," +
                                 "to_char(convert_tz(mr.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), " + "'" + sgen.Getsqldateformat() + "') as IssueDate,dp.master_name Dept,dg.master_name Desig," +
                                 "it.icode Icode,it.iname Iname,it.cpartno PartNo,um.master_name as uom,s.closing Qty_Stk,mr.qtyout Qty_Ret_Req,'0' Qty_Act_Ret,'0' Qty_Req_bal,mr.iremark IRemark " +
                                 "from itransaction mr " +
                                 "inner join item it on mr.icode=it.icode and it.type='IT' and find_in_set(mr.client_unit_id,it.client_unit_id)=1 " +
                                 "inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
                                 "inner join (select t.client_unit_id,t.icode,sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout,0)) as Issued,sum(nvl(t.qtyout,0))-sum(nvl(t.qtyin,0)) " +
                                 "as closing from itransaction t where trim(t.store)='Y' and substr(trim(t.type),1,1) in ('1','3') and trim(t.type) not in ('36','37') group by t.icode,t.client_unit_id ) s on it.icode=s.icode and find_in_set(s.client_unit_id,it.client_unit_id)=1 " +
                                 "inner join master_setting dp on dp.master_id = mr.deptno and dp.type = 'MDP' and find_in_set(dp.client_unit_id,'" + unitid_mst + "')=1 " +
                                 "inner join master_setting dg on dg.master_id = mr.desig and dg.type = 'MDG' and find_in_set(dg.client_unit_id,'" + unitid_mst + "')=1 " +
                                 "where mr.type in ('30', '32') and mr.client_unit_id = '" + unitid_mst + "'" + where + cond + "";
                            }
                            break;
                        case "ITEM2":
                            if (param1 != "") where = " and (it.client_unit_id||it.icode||s.loc) not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','") + "')";
                            cmd = "select (it.client_unit_id||it.icode||s.loc) fstr,it.icode as Icode,it.iname as Iname,it.cpartno Partno,um.master_name as UOM " +
  ",location_name('" + clientid_mst + "||" + unitid_mst + "||s.loc) as LocName,s.loc,s.closing from item it " +
  "inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
  "inner join (select t.client_unit_id,t.loc,t.icode,sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout,0)) as Issued," +
  "sum(nvl(t.qtyout,0))-sum(nvl(t.qtyin,0)) as closing from btchtrans t where length(trim(t.loc))>6 and trim(t.store)='Y' and substr(trim(t.type),1,1) in ('1','3') and trim(t.type) not in ('36','37') group by t.icode,t.client_unit_id,t.loc ) s on " +
  "it.icode=s.icode and find_in_set(s.client_unit_id,it.client_unit_id)=1 where length(trim(it.icode))>8 and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 " +
  "and it.icode in ('" + param2.Trim().TrimEnd(',').Replace(",", "','").Trim() + "') " + where + "";
                            break;
                    }
                    break;
                #endregion
                #region rgp_challan
                case "rgp_challan":
                    if (sgen.GetSession(MyGuid, "KRGTYPE") != null) { type = sgen.GetSession(MyGuid, "KRGTYPE").ToString().Trim(); }
                    else { type = "21"; }
                    switch (btnval.ToUpper())
                    {
                        case "PRINT":
                        case "EDIT":
                            cmd = "select (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) as fstr,p.vch_num Doc_no," +
                                 "c.c_name as Party_Name,p.aname as Sender_Name,p.contactno Sender_Contact," +
                                 "to_char(p.date2,'" + sgen.Getsqldateformat() + "') Exp_Ret_Date,p.totremark Remark " +
                                 " from itransaction p " +
                                 "inner join clients_mst c on p.acode = c.vch_num and find_in_set(c.client_unit_id,p.client_unit_id)=1 and substr(c.vch_num,0,3)='203' and c.type='BCD' " +
                                 "where p.client_unit_id = '" + unitid_mst + "' and p.type in ('" + type + "') " + xprdrange.Replace("vch_date", "p.vch_date") + "";
                            break;

                        case "VIEW":

                            cmd = "select (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) as fstr,p.vch_num Doc_no," +
                                  "c.c_name as Party_Name,c.c_gstin as Party_Gstin,c.addr as Party_Address,p.aname as Sender_Name,p.contactno Sender_Contact," +
                                  "to_char(p.date2,'" + sgen.Getsqldateformat() + "') Exp_Ret_Date,p.totremark Remark " +
                                  " from itransaction p " +
                                  "inner join clients_mst c on p.acode = c.vch_num and find_in_set(c.client_unit_id,p.client_unit_id)=1 and substr(c.vch_num,0,3)='203' and c.type='BCD' " +
                                  "where p.client_unit_id = '" + unitid_mst + "' and p.type in ('" + type + "') " + xprdrange.Replace("vch_date", "p.vch_date") + "";
                            break;
                        case "NEW":
                            cmd = "select (master_id||to_char(vch_date,'yyyymmdd')||type) fstr,master_id Type,master_name Name " +
                                "from master_setting where type='KRG' and find_in_set(client_unit_id,'" + unitid_mst + "')=1 and master_id='21'";
                            break;
                        case "PARTY":
                            cmd = @"select (a.vch_num|| to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.vch_num as party_code,a.c_name Name,
a.addr address,a.pincode Pincode,a.isgstr IsGST,a.c_gstin as GSTIN,(case when a.tor='C' then 'Composition' when a.tor='R' then 'Regular' else 'Not Registered' end) GSTType,
a.type_desc as Search_text,a.cpname as PerName,(case when a.cpcont='0000000000' then '-' else a.cpcont end) as ContactNo,(case when a.cpaltcont='0000000000' then '-' else a.cpaltcont end) as AltContNo,(case when a.cpemail='ab@ab.ab' then '-' else a.cpemail end) as Email,a.cpaddr PerAddress,
a.cpdesig Designation from clients_mst a where substr(a.vch_num,0,3)='203' and a.type='BCD' and find_in_set(a.client_unit_id,'" + unitid_mst + "')=1";
                            break;
                        case "ITEM":
                        case "ITEMIN":
                            if (type.Equals("21"))
                            {
                                if (param1 != "") where = " and (it.client_unit_id||it.icode) not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','") + "')";
                                //cmd = "select (it.client_unit_id||it.icode) fstr,it.icode as Icode,it.iname as Iname,it.cpartno Partno,um.master_name as UOM,s.closing " +
                                //    "from item it " +
                                //    "inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
                                //    "inner join (select t.client_unit_id,t.icode,sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout,0)) as Issued," +
                                //    "sum(nvl(t.qtyin,0))-sum(nvl(t.qtyout,0)) as closing from itransaction t where trim(t.store)='Y' group by t.icode," +
                                //    "t.client_unit_id ) s on it.icode=s.icode and find_in_set(s.client_unit_id,it.client_unit_id)=1 " +
                                //    "where length(trim(it.icode))>8 and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 " + where + "";

                                cmd = "select (it.client_unit_id||it.icode) fstr,it.icode as Icode,it.iname as Iname,it.cpartno Partno,um.master_name as UOM,s.closing " +
                                    "from item it " +
                                    "inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
                                    "inner join (select icode,client_unit_id,sum(op) op,sum(pktop) pktop,sum(qtyin) qtyin,sum(qtyout) out,sum(op)+sum(qtyin)-sum(qtyout) closing from " +
                                    "(select icode, client_unit_id, nvl(op_2019, 0) op, nvl(pkt_2019, 0) pktop, 0 qtyin, 0 qtyout, 0 pktno from itbal union all " +
                                    "select icode, client_unit_id, sum(to_number(qtyin)) - sum(to_number(qtyout)) op, sum((case when substr(type, 1, 1) in ('0', '1') then " +
                                    "pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktop,sum(to_number(qtyin)) qtyin,sum(to_number(qtyout)) qtyout," +
                                    "0 pktno from itransaction where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between " +
                                    "to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "')-1 " +
                                    "group by icode,client_unit_id union all " +
                                    "select icode,client_unit_id,0 as op,0 as pktop,sum(to_number(qtyin)) qtyin,sum(to_number(qtyout)) qtyout,sum((case when substr(type, 1, 1) in " +
                                    "('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktno from itransaction where trim(store) = 'Y' " +
                                    "and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') " +
                                    "and to_date('" + param2.Split(new string[] { "!~~!~~!~~!" }, StringSplitOptions.None)[1].Trim() + "','" + sgen.Getsqldateformat() + "') " +
                                    "group by icode,client_unit_id) a group by icode, client_unit_id) s on it.icode=s.icode and find_in_set(s.client_unit_id,it.client_unit_id)=1 " +
                                    "where length(trim(it.icode))>8 and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 " + where + "";
                            }
                            break;
                        case "ITEM2":
                            if (param1 != "") where = " and (it.client_unit_id||it.icode||s.loc) not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','") + "')";
                            cmd = "select (it.client_unit_id||it.icode||s.loc) fstr,it.icode as Icode,it.iname as Iname,it.cpartno Partno,um.master_name as UOM," +
  "location_name('" + clientid_mst + "||" + unitid_mst + "||s.loc') as LocName,s.closing from item it " +
  "inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
  "inner join (select t.client_unit_id,t.loc,t.icode,sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout,0)) as Issued," +
  "sum(nvl(t.qtyin,0))-sum(nvl(t.qtyout,0)) as closing from btchtrans t where length(trim(t.loc))>6 and trim(t.store)='Y' group by t.icode,t.client_unit_id,t.loc " +
  "having sum(nvl(t.qtyin,0))-sum(nvl(t.qtyout,0))>0 ) s on it.icode=s.icode and find_in_set(it.client_unit_id,s.client_unit_id)=1 " +
  "where length(trim(it.icode))>8 and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 " +
  "and it.icode in ('" + param2.Trim().TrimEnd(',').Replace(",", "','").Trim() + "') " + where + "";
                            break;
                    }
                    break;
                #endregion
                #region mat_req
                case "mat_req":
                    switch (btnval.ToUpper())
                    {
                        case "NEW":
                            cmd = "select (master_id||to_char(vch_date,'yyyymmdd')||type) fstr,master_id Type,master_name Name " +
                                "from master_setting where type='KRQ' and find_in_set(client_unit_id,'" + unitid_mst + "')=1";
                            break;
                        case "EDIT":
                        case "PRINT":
                            if (sgen.GetSession(MyGuid, "KRQTYPE") != null) { type = sgen.GetSession(MyGuid, "KRQTYPE").ToString().Trim(); }
                            else { type = "3A','3B"; }
                            cmd = @"select distinct (i.client_id||i.client_unit_id||i.vch_num||to_char(i.vch_date,'yyyymmdd')||i.type) as fstr,i.vch_num as Issue_no,
                          to_char(convert_tz(i.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), " + "'" + sgen.Getsqldateformat() + "') as Issue_date,i.type as Type,i.pono OrderId from itransactionc i " +
                          "where upper(i.type) in ('" + type.ToUpper() + "') and i.client_unit_id='" + unitid_mst + "' " + xprdrange.Replace("vch_date", "i.vch_date") + "";
                            break;
                        case "VIEW":
                            if (sgen.GetSession(MyGuid, "KRQTYPE") != null) { type = sgen.GetSession(MyGuid, "KRQTYPE").ToString().Trim(); }
                            else { type = "3A','3B"; }
                            cmd = @"select (i.client_id||i.client_unit_id||i.vch_num||to_char(i.vch_date,'yyyymmdd')||i.type) as fstr,i.vch_num as Issue_no,
                          to_char(convert_tz(i.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), " + "'" + sgen.Getsqldateformat() + "') as Issue_date,d.master_name as Dept_name" +
                          ",dg.master_name as desig,i.pono OrderId," +
                          "i.icode as Icode,i.iname as Item_Name,i.cpartno Partno,i.qtystk Qty_In_Stock,i.qtychl Qty_Req,i.qtyout Qty_Issue,i.qtybal Qty_Req_Bal," +
                          "(b.First_name|| ' '|| nvl(b.middle_name, '')|| ' '|| b.last_name) as Ent_By," +
                          "to_char(convert_tz(i.ent_date, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') as Ent_Date from itransactionc i " +
                          "inner join master_setting d on d.master_id=i.deptno and d.type='MDP' and find_in_set(d.client_unit_id,'" + unitid_mst + "')=1 " +
                          "inner join master_setting dg on  dg.master_id  = i.desig and dg.type='MDG' and find_in_set(dg.client_unit_id,'" + unitid_mst + "')=1 " +
                          "inner join user_details b on i.ent_by = b.vch_num and b.type = 'CPR' " +
                          "where upper(i.type) in ('" + type.ToUpper() + "') and i.client_unit_id='" + unitid_mst + "' " + xprdrange.Replace("vch_date", "i.vch_date") + "";
                            break;
                        case "ITEM":


                            if (param1 != "") where = " and it.icode not in (" + param1.Trim().TrimEnd(',') + ")";
                            //                        cmd = "select (it.icode||to_char(it.vch_date,'yyyymmdd')||it.type) fstr,it.icode as Icode,it.iname as Iname,it.cpartno Partno," +
                            //"um.master_name as UOM,hsn.master_name as hsn,hsn.group_name taxrate,s.closing from item it " +
                            //                            "inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,'" + unitid_mst + "')=1 " +
                            //                            "inner join master_setting hsn on hsn.master_id=it.hsno and hsn.type='HSN' and find_in_set(hsn.client_unit_id,'" + unitid_mst + "')=1 " +
                            //                            "left join (select icode,client_unit_id,sum(op) op,sum(pktop) pktop,sum(qtyin) qtyin,sum(qtyout) out,sum(op)+sum(qtyin)-sum(qtyout) closing from " +
                            //                            "(select icode, client_unit_id, nvl(op_2019, 0) op, nvl(pkt_2019, 0) pktop, 0 qtyin, 0 qtyout, 0 pktno from itbal union all " +
                            //                            "select icode, client_unit_id, sum(to_number(qtyin)) - sum(to_number(qtyout)) op, sum((case when substr(type, 1, 1) in ('0', '1') then " +
                            //                            "pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktop,sum(to_number(qtyin)) qtyin,sum(to_number(qtyout)) qtyout," +
                            //                            "0 pktno from itransaction where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between " +
                            //                            "to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "')-1 " +
                            //                            "group by icode,client_unit_id union all select icode,client_unit_id,0 as op,0 as pktop,to_number(qtyin) qtyin,to_number(qtyout) qtyout," +
                            //                            "sum((case when substr(type, 1, 1) in ('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktno from " +
                            //                            "itransaction where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between to_date('" + year_from.Split(' ')[0] + "', '" + sgen.Getsqldateformat() + "') " +
                            //                            "and to_date('" + param2.Trim() + "','" + sgen.Getsqldateformat() + "') group by icode,client_unit_id,to_number(qtyin),to_number(qtyout)) a group by icode, client_unit_id) s on it.icode=s.icode " +
                            //                            "where it.type='IT' and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 " + where + "";


                            cmd = "select (it.icode||to_char(it.vch_date,'yyyymmdd')||it.type) fstr,it.icode as ITEM_code,it.iname as ITEM_name,it.cpartno Part_no " +
                            "from item it where it.type='IT' and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 " + where + "";


                            break;
                    }
                    break;
                #endregion
                #region Quality
                case "quality":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "VIEW":
                            cmd = "";
                            break;
                        case "ITEM":
                            //cmd = "select (p.client_id||p.client_unit_id||p.icode||to_char(p.vch_date,'yyyymmdd')||p.type||p.pono||to_char(p.podate,'yyyymmdd')||p.invno||to_char(p.invdate,'yyyymmdd')) as fstr," +
                            //    "p.vch_num MRN_Number,to_char(convert_tz(p.vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') MRN_Date,p.type MRN_Type,c.c_name as Party_Name," +
                            //    "c.c_gstin as Party_Gstin,c.addr Party_Address,p.icode ItemCode,it.iname ItemName,it.cpartno PartNo,um.master_name UOM,p.chlno Challan_No," +
                            //    "to_char(convert_tz(p.chldate,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') Challan_Date,p.invno InvoiceNo," +
                            //    "to_char(convert_tz(p.invdate,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') Invoice_Date,p.pono PoNO," +
                            //    "to_char(convert_tz(p.podate,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') Po_Date," +
                            //    "p.qtychl Qty_Chl,p.qtyrcvd Qty_Rcvd,p.btchno BatchNo from itransaction p " +
                            //    "inner join clients_mst c on p.acode = c.vch_num and c.type ='PVD' and c.client_id = p.client_id and c.client_unit_id = p.client_unit_id " +
                            //    "inner join item it on it.icode = p.icode and it.type = 'IT' and it.client_id = p.client_id and it.client_unit_id = p.client_unit_id " +
                            //    "inner join master_setting um on um.master_id = it.uom and um.type = 'UMM' and um.client_id = p.client_id and um.client_unit_id = p.client_unit_id " +                                
                            //    "where p.type='" + Regex.Split(param2, "!~!~!~!~!")[0].Trim() + "' and p.client_id = '" + clientid_mst + "' and p.client_unit_id = '" + unitid_mst + "' and p.vch_num='" + Regex.Split(param2, "!~!~!~!~!")[1].Trim() + "'";
                            //cmd = "select (p.rec_id) as fstr,p.vch_num MRN_Number,to_char(convert_tz(p.vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') MRN_Date," +
                            //    "p.type MRN_Type,c.c_name Party_Name,c.c_gstin as Party_Gstin,c.addr Party_Address,p.icode ItemCode,it.iname ItemName,it.cpartno PartNo," +
                            //    "um.master_name UOM, p.chlno Challan_No,to_char(convert_tz(p.chldate, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') Challan_Date," +
                            //    "p.invno InvoiceNo, to_char(convert_tz(p.invdate, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') Invoice_Date," +
                            //    "p.pono PoNO, to_char(convert_tz(p.podate, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') Po_Date,p.qtychl Qty_Chl," +
                            //    "p.qtyrcvd Qty_Rcvd, p.btchno BatchNo from itransaction p " +
                            //    "inner join clients_mst c on p.acode = c.vch_num and substr(c.vch_num, 0, 3) = '203' and c.type = 'BCD' and find_in_set(c.client_id, p.client_id)= 1 and find_in_set(c.client_unit_id, p.client_unit_id)= 1 " +
                            //    "inner join item it on it.icode = p.icode and it.type = 'IT' and find_in_set(it.client_id, p.client_id)= 1 and find_in_set(p.client_unit_id, it.client_unit_id)= 1 and it.qa = 'Y' " +
                            //    "inner join master_setting um on um.master_id = it.uom and um.type = 'UMM' and find_in_set(um.client_id, p.client_id)= 1 and find_in_set(um.client_unit_id, p.client_unit_id)= 1 " +
                            //    "where p.inspected <> 'Y' and p.store = 'N' and p.type = '" + Regex.Split(param2, "!~!~!~!~!")[0].Trim() + "' and p.client_id = '" + clientid_mst + "' and " +
                            //    "p.client_unit_id = '" + unitid_mst + "' and p.vch_num = '" + Regex.Split(param2, "!~!~!~!~!")[1].Trim() + "'";
                            if (param1 != "-") where = "(p.client_id||p.client_unit_id||p.icode||to_char(p.vch_date,'yyyymmdd')||p.type||p.pono||to_char(p.podate,'yyyymmdd')||p.invno||to_char(p.invdate,'yyyymmdd')) not in '" + param1.Replace(",", "','").Trim() + "'";
                            cmd = "select (p.client_id||p.client_unit_id||p.icode||to_char(p.vch_date,'yyyymmdd')||p.type||p.pono||to_char(p.podate,'yyyymmdd')||p.invno||to_char(p.invdate,'yyyymmdd')) fstr," +
                                "p.vch_num MRN_Number,to_char(convert_tz(p.vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') MRN_Date," +
                                "p.type MRN_Type,c.c_name Party_Name,c.c_gstin as Party_Gstin,c.addr Party_Address,p.icode ItemCode,it.iname ItemName,it.cpartno PartNo," +
                                "um.master_name UOM, p.chlno Challan_No,to_char(convert_tz(p.chldate, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') Challan_Date," +
                                "p.invno InvoiceNo, to_char(convert_tz(p.invdate, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') Invoice_Date," +
                                "p.pono PoNO, to_char(convert_tz(p.podate, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') Po_Date,p.qtychl Qty_Chl," +
                                "p.qtyrcvd Qty_Rcvd, p.btchno BatchNo from itransaction p " +
                                "inner join clients_mst c on p.acode = c.vch_num and substr(c.vch_num, 0, 3) = '203' and c.type = 'BCD' and find_in_set(c.client_unit_id, p.client_unit_id)= 1 " +
                                "inner join item it on it.icode = p.icode and it.type = 'IT' and find_in_set(p.client_unit_id, it.client_unit_id)= 1 and it.qa = 'Y' " +
                                "inner join master_setting um on um.master_id = it.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, p.client_unit_id)= 1 " +
                                "where p.inspected <> 'Y' and p.store = 'N' and p.type = '" + Regex.Split(param2, "!~!~!~!~!")[0].Trim() + "' and " +
                                "p.client_unit_id = '" + unitid_mst + "' and p.vch_num = '" + Regex.Split(param2, "!~!~!~!~!")[1].Trim() + "'";
                            break;
                        case "NEW":
                            //cmd = "select distinct (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) as fstr,p.vch_num MRN_Number," +
                            //    "to_char(convert_tz(p.vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') MRN_Date,p.type MRN_Type,c.c_name as Party_Name," +
                            //    "c.c_gstin as Party_Gstin,c.addr Party_Address,p.chlno Challan_No,to_char(convert_tz(p.chldate,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') Challan_Date," +
                            //    "p.ewayno Eway_BillNo,p.invno InvoiceNo,to_char(convert_tz(p.invdate,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') Invoice_Date,p.tmode Transport " +
                            //    "from itransaction p " +
                            //    "inner join clients_mst c on p.acode = c.vch_num and c.type ='PVD' and c.client_id = p.client_id and c.client_unit_id = p.client_unit_id " +                                
                            //    "where p.type in ('01', '02', '05', '07', '09') and p.client_id = '" + clientid_mst + "' and p.client_unit_id = '" + unitid_mst + "'" + where + "";                           
                            cmd = "select (p.client_id || p.client_unit_id || p.vch_num || to_char(p.vch_date, 'yyyymmdd') || p.type) as fstr,p.vch_num MRN_Number," +
                                "to_char(convert_tz(p.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') MRN_Date,p.type MRN_Type, c.c_name Party_Name," +
                                "c.c_gstin as Party_Gstin,c.addr Party_Address, p.chlno Challan_No, to_char(convert_tz(p.chldate, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') Challan_Date," +
                                "p.ewayno Eway_BillNo,p.invno InvoiceNo, to_char(convert_tz(p.invdate, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') Invoice_Date," +
                                "p.tmode Transport, min(p.store) store from itransaction p " +
                                "inner join clients_mst c on p.acode = c.vch_num and substr(c.vch_num,0,3)= '203' and c.type = 'BCD' and c.client_unit_id = p.client_unit_id " +
                                "inner join item it on it.icode = p.icode and it.type = 'IT' and find_in_set(it.client_unit_id,p.client_unit_id)= 1 " +
                                "where p.type in ('01', '02', '05', '07', '09') and p.client_unit_id = '" + unitid_mst + "' " +
                                "group by (p.client_id|| p.client_unit_id || p.vch_num || to_char(p.vch_date, 'yyyymmdd') || p.type),p.vch_num," +
                                "to_char(convert_tz(p.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "'),p.type,c.c_name," +
                                "c.c_gstin,c.addr,p.chlno,to_char(convert_tz(p.chldate, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "'),p.ewayno," +
                                "p.invno,to_char(convert_tz(p.invdate, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "'),p.tmode " +
                                "having min(p.store) = 'N' and max(it.qa)= 'Y'";
                            break;
                    }
                    break;
                #endregion
                #region Quality batchwise
                case "qualityn":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "VIEW":
                            cmd = "";
                            break;
                        case "ITEM":
                            if (param1 != "-") where = "(p.client_id||p.client_unit_id||p.icode||to_char(p.vch_date,'yyyymmdd')||p.type||p.pono||to_char(p.podate,'yyyymmdd')||p.invno||to_char(p.invdate,'yyyymmdd')) not in '" + param1.Replace(",", "','").Trim() + "'";
                            cmd = "select (p.client_id||p.client_unit_id||p.icode||to_char(p.vch_date,'yyyymmdd')||p.type||p.pono||to_char(p.podate,'yyyymmdd')||p.invno||to_char(p.invdate,'yyyymmdd')||p.btchno) fstr," +
                                "p.vch_num MRN_Number,to_char(convert_tz(p.vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') MRN_Date," +
                                "p.type MRN_Type,c.c_name Party_Name,c.c_gstin as Party_Gstin,c.addr Party_Address,p.icode ItemCode,it.iname ItemName,it.cpartno PartNo," +
                                "um.master_name UOM, p.chlno Challan_No,to_char(convert_tz(p.chldate, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') Challan_Date," +
                                "p.invno InvoiceNo, to_char(convert_tz(p.invdate, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') Invoice_Date," +
                                "p.pono PoNO, to_char(convert_tz(p.podate, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') Po_Date,p.qtychl Qty_Chl," +
                                "p.qtyrcvd Qty_Rcvd, p.btchno BatchNo from itransaction p " +
                                "inner join clients_mst c on p.acode = c.vch_num and substr(c.vch_num, 0, 3) = '203' and c.type = 'BCD' and find_in_set(c.client_unit_id, p.client_unit_id)= 1 " +
                                "inner join item it on it.icode = p.icode and it.type = 'IT' and find_in_set(p.client_unit_id, it.client_unit_id)= 1 and it.qa = 'Y' " +
                                "inner join master_setting um on um.master_id = it.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, p.client_unit_id)= 1 " +
                                "where p.inspected <> 'Y' and p.store = 'N' and p.type = '" + Regex.Split(param2, "!~!~!~!~!")[0].Trim() + "' and " +
                                "p.client_unit_id = '" + unitid_mst + "' and p.vch_num = '" + Regex.Split(param2, "!~!~!~!~!")[1].Trim() + "'";
                            break;
                        case "NEW":
                            cmd = "select (p.client_id || p.client_unit_id || p.vch_num || to_char(p.vch_date, 'yyyymmdd') || p.type) as fstr,p.vch_num MRN_Number," +
                                "to_char(convert_tz(p.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') MRN_Date,p.type MRN_Type, c.c_name Party_Name," +
                                "c.c_gstin as Party_Gstin,c.addr Party_Address, p.chlno Challan_No, to_char(convert_tz(p.chldate, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') Challan_Date," +
                                "p.ewayno Eway_BillNo,p.invno InvoiceNo, to_char(convert_tz(p.invdate, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') Invoice_Date," +
                                "p.tmode Transport, min(p.store) store from itransaction p " +
                                "inner join clients_mst c on p.acode = c.vch_num and substr(c.vch_num,0,3)= '203' and c.type = 'BCD' and c.client_unit_id = p.client_unit_id " +
                                "inner join item it on it.icode = p.icode and it.type = 'IT' and find_in_set(it.client_unit_id,p.client_unit_id)= 1 " +
                                "where p.type in ('01', '02', '05', '07', '09') and p.client_unit_id = '" + unitid_mst + "' " +
                                "group by (p.client_id|| p.client_unit_id || p.vch_num || to_char(p.vch_date, 'yyyymmdd') || p.type),p.vch_num," +
                                "to_char(convert_tz(p.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "'),p.type,c.c_name," +
                                "c.c_gstin,c.addr,p.chlno,to_char(convert_tz(p.chldate, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "'),p.ewayno," +
                                "p.invno,to_char(convert_tz(p.invdate, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "'),p.tmode " +
                                "having min(p.store) = 'N' and max(it.qa)= 'Y'";
                            break;
                    }
                    break;
                #endregion
                #region phy_verify
                case "phy_verify":
                    type = "'36','37'";
                    switch (btnval.ToUpper())
                    {
                        //case "NEW":
                        //    cmd = "select (master_id||to_char(vch_date,'yyyymmdd')||type) fstr,master_id Type,master_name Name from master_setting " +
                        //        "where type='KPV' and find_in_set(client_unit_id,'" + unitid_mst + "')=1";
                        //    break;
                        case "EDIT":
                            cmd = @"select (i.client_id||i.client_unit_id||i.vch_num||to_char(i.vch_date,'yyyymmdd')||i.type) as fstr,i.vch_num Docno,i.type," +
                         "to_char(convert_tz(i.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), " + "'" + sgen.Getsqldateformat() + "') Verification_date, " +
                         "i.icode as Icode,i.iname as Item_Name,i.cpartno Partno,i.qtystk Qty_In_Stock,i.qtychl Qty_Phy," +
                         "i.qtyin Qty_In,i.qtyout Qty_Out,pktno from itransaction i " +
                         "where i.type in (" + type + ") and i.client_unit_id='" + unitid_mst + "' " + xprdrange.Replace("vch_date", "i.vch_date") + "";
                            break;
                        case "VIEW":
                            cmd = @"select (i.client_id||i.client_unit_id||i.vch_num||to_char(i.vch_date,'yyyymmdd')||i.type) as fstr,i.vch_num Docno,i.type," +
                          "to_char(convert_tz(i.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), " + "'" + sgen.Getsqldateformat() + "') Verification_date," +
                          "d.master_name as Dept_name,dg.master_name as desig,i.icode as Icode,i.iname as Item_Name,i.cpartno Partno,i.qtystk Qty_In_Stock,i.qtychl Qty_Phy," +
                          "i.qtyin Qty_In,i.qtyout Qty_Out,pktno from itransaction i " +
                          "inner join master_setting d on d.master_id=i.deptno and d.type='MDP' and find_in_set(d.client_unit_id,'" + unitid_mst + "')=1 " +
                          "inner join master_setting dg on dg.master_id  = i.desig and dg.type='MDG' and find_in_set(dg.client_unit_id,'" + unitid_mst + "')=1 " +
                          "where i.type in (" + type + ") and i.client_unit_id='" + unitid_mst + "' " + xprdrange.Replace("vch_date", "i.vch_date") + "";
                            break;
                        case "ITEM":
                            if (param1 != "") where = " and (it.icode||to_char(it.vch_date,'yyyymmdd')||it.type) not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','") + "')";
                            //cmd = "select (it.icode||to_char(it.vch_date,'yyyymmdd')||it.type) fstr,it.icode as Icode,it.iname as Iname,it.cpartno Partno," +
                            //    "um.master_name as UOM,s.closing from item it " +
                            //    "inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
                            //    "left join (select (nvl(t.client_unit_id,'0')||i.icode) as fstr,i.icode,i.iname as Item_Name,sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout,0)) as Issued," +
                            //    "sum(nvl(t.qtyin,0))-sum(nvl(t.qtyout,0)) as closing from item i left join itransaction t on t.icode=i.icode and T.client_unit_id='" + unitid_mst + "' where " +
                            //    "length(i.icode)>4 group by i.icode,t.icode,t.client_unit_id,i.iname order by t.icode) s on it.icode=s.icode " +
                            //    "where it.type='IT' and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 " + where + "";
                            //var ttype = sgen.GetSession(MyGuid, "TTYPE").ToString().Trim();
                            //if (ttype == "36")
                            //{
                            //    cmd = "select (it.icode||to_char(it.vch_date,'yyyymmdd')||it.type) fstr,SUBSTR(it.icode,1,1) GGRP," +
                            //        "gd.master_name G_grp,SUBSTR(it.icode,1,3) MGRP,mg.master_name M_grp,SUBSTR(it.icode, 1, 5) SGRP,sg.iname S_grp," +
                            //        "it.icode as Icode,it.iname as Iname,it.cpartno Partno, um.master_name as UOM,s.closing from item it " +
                            //        "inner join master_setting um on um.master_id = it.uom and um.type = 'UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
                            //        "inner join master_setting gd on gd.classid = SUBSTR(it.icode, 1, 1) and gd.type = 'KGP' " +
                            //        "inner join master_setting mg on mg.master_id = SUBSTR(it.icode, 1, 3) and mg.type = 'KIG' and find_in_set(mg.client_unit_id,it.client_unit_id)=1 " +
                            //        "inner join item sg on sg.icode = SUBSTR(it.icode, 1, 5) and sg.type = 'SG' and find_in_set(sg.client_unit_id,it.client_unit_id)=1 " +
                            //        "left join(select (nvl(t.client_unit_id,'0')|| i.icode) fstr,i.icode,i.iname as Item_Name,sum(nvl(t.qtyin, 0)) " +
                            //        "Received,sum(nvl(t.qtyout, 0)) as Issued,sum(nvl(t.qtyin, 0)) - sum(nvl(t.qtyout, 0)) closing from item i " +
                            //        "left join itransaction t on t.icode = i.icode and t.client_unit_id = i.client_unit_id where length(i.icode)> 4 group by i.icode," +
                            //        "t.icode,t.client_unit_id,i.iname order by t.icode) s on it.icode = s.icode " +
                            //        "where it.type = 'IT' and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 and " +
                            //        "it.icode not in (select icode from itransaction where type='36' and client_unit_id='" + unitid_mst + "') " + where + "";
                            //}
                            //else if (ttype == "37")
                            //{
                            //cmd = "select (it.client_id||it.client_unit_id||it.icode||to_char(it.vch_date,'yyyymmdd')||it.type||nvl(s.loc,itb.loc)) fstr" +
                            //    ",it.icode as Icode,it.iname as Iname,it.cpartno,um.master_name as uom,s.closing as qty_in_stock,'0' as Qty_Phy," +
                            //    "'0' Variation,'' remark,nvl(s.loc,itb.loc) loccode,location_name(it.client_id||it.client_unit_id||nvl(s.loc,itb.loc)) loc_name from item it " +
                            //    "inner join itbal itb on itb.client_id='" + clientid_mst + "' and itb.client_unit_id='" + unitid_mst + "' and itb.type='IT' and  it.icode=itb.icode " +
                            //    "inner join master_setting um on um.master_id=it.uom and um.type='UMM' and um.client_id='" + clientid_mst + "' and um.client_unit_id='" + unitid_mst + "' " +
                            //    "inner join master_setting hsn on hsn.master_id=it.hsno and hsn.type='HSN' and hsn.client_id='" + clientid_mst + "' and hsn.client_unit_id='" + unitid_mst + "' " +
                            //    "inner join (select (nvl(t.client_unit_id,'0')||i.icode) as fstr,i.icode,i.iname as Item_Name ," +
                            //    "sum(nvl(t.qtyin,0))-sum(nvl(t.qtyout,0)) as closing,t.loc  from item i " +
                            //    "inner join btchtrans t on t.icode=i.icode and T.client_unit_id='" + unitid_mst + "' where " +
                            //    "length(i.icode)>4 group by t.client_unit_id,i.icode,i.iname,t.loc order by i.icode) s on it.icode=s.icode " +
                            //    "where it.type='IT' and it.client_id='" + clientid_mst + "' and it.client_unit_id='" + unitid_mst + "'";
                            //kc
                            //cmd = "select (it.client_id||it.client_unit_id||it.icode||to_char(it.vch_date,'yyyymmdd')||it.type||nvl(s.loc,itb.loc)) fstr,it.icode as Icode," +
                            //    "it.iname as Iname,it.cpartno,um.master_name as uom,nvl(s.closing,0) as qty_in_stock,'0' as Qty_Phy,'0' Variation,'-' remark,nvl(s.loc,itb.loc) loccode," +
                            //    "location_name(it.client_id||it.client_unit_id||nvl(s.loc,itb.loc)) loc_name from item it " +
                            //    "inner join itbal itb on it.icode = itb.icode and itb.type = 'IT' and itb.client_id = it.client_id and itb.client_unit_id = it.client_unit_id " +
                            //    "inner join master_setting um on um.master_id = it.uom and um.type = 'UMM' and find_in_set(um.client_id, it.client_id)= 1 and find_in_set(um.client_unit_id, it.client_unit_id)= 1 " +
                            //    "inner join master_setting hsn on hsn.master_id = it.hsno and hsn.type = 'HSN' and find_in_set(hsn.client_id, it.client_id)= 1 and find_in_set(hsn.client_unit_id, it.client_unit_id)= 1 " +
                            //    "left join(select (nvl(t.client_unit_id,'0')|| i.icode) as fstr,i.icode,i.iname as Item_Name ,sum(nvl(t.qtyin, 0)) - sum(nvl(t.qtyout, 0)) as closing,t.loc from item i " +
                            //    "inner join btchtrans t on t.icode = i.icode and t.client_unit_id = i.client_unit_id where length(i.icode)> 4 group by t.client_unit_id,i.icode,i.iname,t.loc order by i.icode) s on it.icode = s.icode " +
                            //    "where it.type = 'IT' and it.client_id = '" + clientid_mst + "' and it.client_unit_id = '" + unitid_mst + "'";
                            //cmd = "select (it.icode||to_char(it.vch_date,'yyyymmdd')||it.type||nvl(s.loc,itb.loc)) fstr,it.icode Icode," +
                            //    "it.iname Iname,it.cpartno,um.master_name uom, nvl(s.closing, 0) qty_in_stock,nvl(s.pktno, 0) No_of_pkt,'0' as Qty_Phy,'0' Variation," +
                            //    "'-' remark,nvl(s.loc, itb.loc) loccode,lc.master_name loc_name from item it " +
                            //    "inner join itbal itb on it.icode = itb.icode and itb.type = 'IT' and find_in_set(itb.client_unit_id,it.client_unit_id)=1 " +
                            //    "inner join master_setting um on um.master_id = it.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, it.client_unit_id)= 1 " +
                            //    "inner join master_setting hsn on hsn.master_id = it.hsno and hsn.type = 'HSN' and find_in_set(hsn.client_unit_id, it.client_unit_id)= 1 " +
                            //    "left join (select (nvl(t.client_unit_id,'0')|| i.icode) as fstr,i.icode,i.iname as Item_Name ,sum(nvl(t.qtyin, 0)) - sum(nvl(t.qtyout, 0)) closing," +
                            //    "sum(nvl(t.pktno, 0)) pktno,t.loc from item i " +
                            //    "inner join(select icode, type, client_id, loc, client_unit_id, qtyin, qtyout, (case when substr(type, 1, 1) in ('0', '1') then " +
                            //    "pktno when type = '36' then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end) pktno from btchtrans) t on " +
                            //    "t.icode = i.icode and t.client_unit_id = i.client_unit_id " +
                            //    "where length(i.icode)> 4 group by t.client_unit_id,i.icode,i.iname,t.loc order by i.icode) s " +
                            //    "on it.icode = s.icode " +
                            //    "inner join master_setting lc on lc.master_id = nvl(s.loc, itb.loc) and lc.type = 'LC6' and find_in_set(lc.client_unit_id, it.client_unit_id)= 1 " +
                            //    "where it.type = 'IT' and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1";

                            cmd = "select (it.icode||to_char(it.vch_date,'yyyymmdd')||it.type||nvl(s.loc,itb.loc)) fstr,it.icode Icode," +
                                "it.iname Iname,it.cpartno,um.master_name uom, nvl(s.closing, 0) qty_in_stock,nvl(s.pktno, 0) No_of_pkt,'0' as Qty_Phy,'0' Variation," +
                                "'-' remark,nvl(s.loc, itb.loc) loccode,lc.master_name loc_name from item it " +
                                "inner join itbal itb on it.icode = itb.icode and itb.type = 'IT' and find_in_set(itb.client_unit_id,it.client_unit_id)=1 " +
                                "inner join master_setting um on um.master_id = it.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, it.client_unit_id)= 1 " +
                                "inner join master_setting hsn on hsn.master_id = it.hsno and hsn.type = 'HSN' and find_in_set(hsn.client_unit_id, it.client_unit_id)= 1 " +
                                "left join (select icode,loc,client_unit_id,sum(op) op,sum(pktop) pktop,sum(qtyin) qtyin,sum(qtyout) out,sum(op)+sum(qtyin)-sum(qtyout) closing,sum(pktno) pktno from " +
                                "(select icode, loc, client_unit_id, nvl(op_2019, 0) op, nvl(pkt_2019, 0) pktop, 0 qtyin, 0 qtyout, 0 pktno from itbal_enx " +
                                "union all " +
                                "select icode, loc, client_unit_id, sum(to_number(qtyin)) - sum(to_number(qtyout)) op, sum((case when substr(type, 1, 1) in " +
                                "('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktop,sum(to_number(qtyin)) qtyin," +
                                "sum(to_number(qtyout)) qtyout,0 pktno from btchtrans where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between " +
                                "to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and to_date('" + year_from.Split(' ')[0].Trim() + "','" + sgen.Getsqldateformat() + "')-1 group by icode,loc,client_unit_id " +
                                "union all select icode,loc,client_unit_id,0 op,0 pktop,to_number(qtyin) qtyin,to_number(qtyout) qtyout," +
                                "nvl(sum((case when substr(type, 1, 1) in ('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)),0) pktno " +
                                "from btchtrans where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between " +
                                "to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and to_date('" + param2.Trim() + "','" + sgen.Getsqldateformat() + "') " +
                                "group by icode,loc,client_unit_id,to_number(qtyin),to_number(qtyout)) a group by icode, loc, client_unit_id) s " +
                                "on it.icode = s.icode " +
                                "inner join master_setting lc on lc.master_id = nvl(s.loc, itb.loc) and lc.type = 'LC6' and find_in_set(lc.client_unit_id, it.client_unit_id)= 1 " +
                                "where it.type = 'IT' and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1";
                            //}
                            break;
                    }
                    break;
                #endregion
                #region phy_verifyn
                case "phy_verifyn":
                    type = "'36','37'";
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            cmd = @"select (i.client_id||i.client_unit_id||i.vch_num||to_char(i.vch_date,'yyyymmdd')||i.type) as fstr,i.vch_num Docno,i.type," +
                         "to_char(convert_tz(i.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), " + "'" + sgen.Getsqldateformat() + "') Verification_date, " +
                         "i.icode as Icode,i.iname as Item_Name,i.cpartno Partno,i.qtystk Qty_In_Stock,i.qtychl Qty_Phy," +
                         "i.qtyin Qty_In,i.qtyout Qty_Out,pktno from itransaction i " +
                         "where i.type in (" + type + ") and i.client_unit_id='" + unitid_mst + "' " + xprdrange.Replace("vch_date", "i.vch_date") + "";
                            break;
                        case "VIEW":
                            cmd = @"select (i.client_id||i.client_unit_id||i.vch_num||to_char(i.vch_date,'yyyymmdd')||i.type) as fstr,i.vch_num Docno,i.type," +
                          "to_char(convert_tz(i.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), " + "'" + sgen.Getsqldateformat() + "') Verification_date," +
                          "d.master_name as Dept_name,dg.master_name as desig,i.icode as Icode,i.iname as Item_Name,i.cpartno Partno,i.qtystk Qty_In_Stock,i.qtychl Qty_Phy," +
                          "i.qtyin Qty_In,i.qtyout Qty_Out,pktno from itransaction i " +
                          "inner join master_setting d on d.master_id=i.deptno and d.type='MDP' and find_in_set(d.client_unit_id,'" + unitid_mst + "')=1 " +
                          "inner join master_setting dg on dg.master_id  = i.desig and dg.type='MDG' and find_in_set(dg.client_unit_id,'" + unitid_mst + "')=1 " +
                          "where i.type in (" + type + ") and i.client_unit_id='" + unitid_mst + "' " + xprdrange.Replace("vch_date", "i.vch_date") + "";
                            break;
                        case "ITEM":
                            cmd = "select (it.icode||to_char(it.vch_date,'yyyymmdd')||it.type||nvl(s.loc,itb.loc)) fstr,it.icode Icode,it.iname Iname,it.cpartno," +
                                "um.master_name uom,nvl(s.closing, 0) qty_in_stock,nvl(s.pktno, 0) No_of_pkt,'0' Qty_Phy,'0' Variation,'-' remark,nvl(s.loc, itb.loc) loccode," +
                                "lc.master_name loc_name, s.btchno batchno from item it " +
                                "inner join itbal itb on it.icode = itb.icode and itb.type = 'IT' and find_in_set(itb.client_unit_id, it.client_unit_id)= 1 " +
                                "inner join master_setting um on um.master_id = it.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, it.client_unit_id)= 1 " +
                                "inner join master_setting hsn on hsn.master_id = it.hsno and hsn.type = 'HSN' and find_in_set(hsn.client_unit_id, it.client_unit_id)= 1 " +
                                "left join(select (nvl(t.client_unit_id,'0')|| i.icode) fstr,t.btchno,i.icode,i.iname as Item_Name,sum(nvl(t.qtyin, 0)) - sum(nvl(t.qtyout, 0)) closing," +
                                "sum(nvl(t.pktno, 0)) pktno,t.loc from item i inner join(select btchno, icode, type, client_id, loc, client_unit_id, qtyin, qtyout," +
                                "(case when substr(type, 1, 1) in ('0', '1') then pktno when type = '36' then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno " +
                                "else pktno end) pktno from btchtrans) t on t.icode = i.icode and t.client_unit_id = i.client_unit_id where length(i.icode)> 4 group by " +
                                "t.btchno,t.client_unit_id,i.icode,i.iname,t.loc order by i.icode) s on it.icode = s.icode " +
                                "inner join master_setting lc on lc.master_id = nvl(s.loc, itb.loc) and lc.type = 'LC6' and find_in_set(lc.client_unit_id, it.client_unit_id)= 1 " +
                                "where it.type = 'IT' and find_in_set(it.client_unit_id,'" + unitid_mst + "')= 1";
                            break;
                    }
                    break;
                #endregion
                #region location_tfr
                case "location_tfr":
                    type = "'86'";
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            cmd = "select (it.client_unit_id||it.icode||s.loc) fstr,it.icode as Icode,it.iname as Iname,location_name(s.loc) as LocName,s.closing " +
                                "from item it inner join (select t.client_unit_id,t.loc,t.icode,sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout,0)) as Issued, sum(nvl(t.qtyin,0))-sum(nvl(t.qtyout,0)) as closing " +
                                "from btchtrans t where length(trim(t.loc))>6 and trim(t.store)='Y' group by t.icode,t.client_unit_id,t.loc ) s on " +
                                "it.icode=s.icode and it.client_unit_id=s.client_unit_id where length(trim(it.icode))>8 and it.client_unit_id='" + unitid_mst + "'";
                            break;
                        case "VIEW":
                            cmd = "select (it.client_unit_id||it.icode||s.loc) fstr,it.icode as Icode,it.iname as Iname,it.cpartno Partno,um.master_name as UOM " +
                                ",location_name(s.loc) as LocName,s.closing from item it inner join master_setting um on um.master_id=it.uom and um.type='UMM' " +
                                "and um.client_unit_id=it.client_unit_id inner join (select t.client_unit_id,t.loc,t.icode,sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout,0)) as Issued," +
                                "sum(nvl(t.qtyin,0))-sum(nvl(t.qtyout,0)) as closing from btchtrans t  where length(trim(t.loc))>6 and trim(t.store)='Y' group by t.icode,t.client_unit_id,t.loc ) s on " +
                                "it.icode=s.icode and it.client_unit_id=s.client_unit_id where length(trim(it.icode))>8 and it.client_unit_id='" + unitid_mst + "'";
                            break;
                        case "ITEM":
                            cmd = "select (it.client_unit_id||it.icode||s.loc) fstr,it.icode as Icode,it.iname as Iname,it.cpartno Partno,um.master_name as UOM " +
                              ",location_name(s.loc) as LocName,s.closing from item it inner join master_setting um on um.master_id=it.uom and um.type='UMM' " +
                              "and um.client_unit_id=it.client_unit_id inner join (select t.client_unit_id,t.loc,t.icode,sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout,0)) as Issued," +
                              "sum(nvl(t.qtyin,0))-sum(nvl(t.qtyout,0)) as closing from btchtrans t  where length(trim(t.loc))>6 and trim(t.store)='Y' group by t.icode,t.client_unit_id,t.loc ) s on " +
                              "it.icode=s.icode and it.client_unit_id=s.client_unit_id where length(trim(it.icode))>8 and it.client_unit_id='" + unitid_mst + "'";
                            break;
                    }
                    break;
                #endregion
                #region dpr
                case "dpr":
                    if (sgen.GetSession(MyGuid, "KDPTYPE") != null) { type = sgen.GetSession(MyGuid, "KDPTYPE").ToString().Trim(); }
                    else { type = "16','17"; }
                    switch (btnval.ToUpper())
                    {
                        case "NEW":
                            cmd = "select (master_id||to_char(vch_date,'yyyymmdd')||type) fstr,master_id Type,master_name Name " +
                                "from master_setting where type='KDP' and find_in_set(client_unit_id,'" + unitid_mst + "')=1";
                            break;
                        case "EDIT":
                            cmd = @"select (i.client_id||i.client_unit_id||i.vch_num||to_char(i.vch_date,'yyyymmdd')||i.type) as fstr,i.vch_num as Production_no," +
                          "to_char(convert_tz(i.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), " + "'" + sgen.Getsqldateformat() + "') Production_Date, i.icode Icode,i.iname Item_Name,i.qtystk Qty_In_Stock," +
                          "i.qtychl Qty_Produce,i.qtyin Qty_Act_Rec,i.qtybal Qty_Req_Bal from itransaction i " +
                          "where i.type in ('" + type + "') and i.client_unit_id='" + unitid_mst + "' " + xprdrange.Replace("vch_date", "i.vch_date") + "";
                            break;
                        case "VIEW":
                            cmd = @"select (i.client_id||i.client_unit_id||i.vch_num||to_char(i.vch_date,'yyyymmdd')||i.type) as fstr,i.vch_num as Production_no," +
                          "to_char(convert_tz(i.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), " + "'" + sgen.Getsqldateformat() + "') Production_Date," +
                          "d.master_name Dept_name,dg.master_name Desig,i.icode Icode,i.iname Item_Name,i.cpartno Partno,i.qtystk Qty_In_Stock," +
                          "i.qtychl Qty_Produce,i.qtyin Qty_Act_Rec,i.qtybal Qty_Req_Bal," +
                          "to_char(convert_tz(i.ent_date, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') as Ent_Date from itransaction i " +
                          "inner join master_setting d on d.master_id=i.deptno and d.type='MDP' and find_in_set(d.client_unit_id,'" + unitid_mst + "')=1 " +
                          "inner join master_setting dg on  dg.master_id  = i.desig and dg.type='MDG' and find_in_set(dg.client_unit_id,'" + unitid_mst + "')=1 " +
                          "where i.type in ('" + type + "') and i.client_unit_id='" + unitid_mst + "' " + xprdrange.Replace("vch_date", "i.vch_date") + "";
                            break;
                        case "ITEM":
                            if (type.Equals("16"))
                            {
                                if (param1 != "") where = " and (it.client_unit_id||it.icode) not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','") + "')";
                                //cmd = "select (it.client_unit_id||it.icode) fstr,it.icode as Icode,it.iname as Iname,it.cpartno Partno,um.master_name as UOM,nvl(s.closing,0) closing " +
                                //  "from item it " +
                                //  "inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_id,it.client_id)=1 and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
                                //  "left join (select t.client_unit_id,t.icode,sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout,0)) as Issued," +
                                //  "sum(nvl(t.qtyin,0))-sum(nvl(t.qtyout,0)) as closing from itransaction t where trim(t.store)='Y' group by t.icode," +
                                //  "t.client_unit_id ) s on it.icode=s.icode and it.client_unit_id=s.client_unit_id " +
                                //  "where length(trim(it.icode))>8 and it.client_id='" + clientid_mst + "' and it.client_unit_id='" + unitid_mst + "' and (substr(it.icode,1,1)='9' or substr(it.icode,1,1)='8')" + where + "";
                                cmd = "select (it.client_unit_id||it.icode) fstr,it.icode as Icode,it.iname as Iname,it.cpartno Partno,um.master_name as UOM,nvl(s.closing,0) closing " +
                                  "from item it " +
                                  "inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
                                  "left join (select icode,client_unit_id,sum(op) op,sum(pktop) pktop,sum(qtyin) qtyin,sum(qtyout) out,sum(op)+sum(qtyin)-sum(qtyout) closing from " +
                                  "(select icode, client_unit_id, nvl(op_2019, 0) op, nvl(pkt_2019, 0) pktop, 0 qtyin, 0 qtyout, 0 pktno from itbal union all " +
                                  "select icode, client_unit_id, sum(to_number(qtyin)) - sum(to_number(qtyout)) op, sum((case when substr(type, 1, 1) in ('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktop," +
                                  "sum(to_number(qtyin)) qtyin,sum(to_number(qtyout)) qtyout,0 pktno from itransaction where trim(store) = 'Y' and " +
                                  "to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') " +
                                  "and to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "')-1 group by icode,client_unit_id union all select icode,client_unit_id,0 as op,0 as pktop," +
                                  "to_number(qtyin) qtyin,to_number(qtyout) qtyout,sum((case when substr(type, 1, 1) in ('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') " +
                                  "then - pktno else pktno end)) pktno from itransaction where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between " +
                                  "to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and to_date('" + param2.Trim() + "', '" + sgen.Getsqldateformat() + "') " +
                                  "group by icode,client_unit_id,to_number(qtyin),to_number(qtyout)) a group by icode, client_unit_id) s on it.icode=s.icode and it.client_unit_id=s.client_unit_id " +
                                  "where length(trim(it.icode))>8 and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 and it.sale='Y'" + where + "";
                            }
                            else if (type.Equals("17"))
                            {
                                cmd = "select distinct (mr.client_id||mr.client_unit_id||mr.vch_num||to_char(mr.vch_date,'yyyymmdd')||mr.type) fstr,mr.vch_num Issue_No," +
                                    "to_char(convert_tz(mr.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') Issue_Date," +
                                    "mr.type Issue_Type,dp.master_name dept,dg.master_name desig," +
                                    "mr.pono Order_Id from itransaction mr " +
                                    "inner join master_setting dp on dp.master_id = mr.deptno and dp.type = 'MDP' and find_in_set(dp.client_unit_id,'" + unitid_mst + "')=1 " +
                                    "inner join master_setting dg on dg.master_id = mr.desig and dg.type = 'MDG' and find_in_set(dg.client_unit_id,'" + unitid_mst + "')=1 " +
                                    "where mr.type in ('30', '32') and mr.client_unit_id = '" + unitid_mst + "'";
                            }
                            break;
                        case "ITEM2":
                            if (param1 != "") where = " and (it.client_unit_id||it.icode||s.loc) not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','") + "')";
                            cmd = "select (it.client_unit_id||it.icode||s.loc) fstr,it.icode as Icode,it.iname as Iname,it.cpartno Partno,um.master_name as UOM " +
  ",location_name(s.loc) as LocName,s.loc,s.closing from item it " +
  "inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
  "inner join (select t.client_unit_id,t.loc,t.icode,sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout,0)) as Issued," +
  "sum(nvl(t.qtyout,0))-sum(nvl(t.qtyin,0)) as closing from btchtrans t where length(trim(t.loc))>6 and trim(t.store)='Y' and substr(trim(t.type),1,1) in ('1','3') and trim(t.type) not in ('36','37') group by t.icode,t.client_unit_id,t.loc ) s on " +
  "it.icode=s.icode and it.client_unit_id=s.client_unit_id where length(trim(it.icode))>8 and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 " +
  "and it.icode in ('" + param2.Trim().TrimEnd(',').Replace(",", "','").Trim() + "') " + where + "";
                            break;
                    }
                    break;
                #endregion
                #region nrgp_challan
                case "nrgp_challan":
                    if (sgen.GetSession(MyGuid, "KNRGTYPE") != null) { type = sgen.GetSession(MyGuid, "KNRGTYPE").ToString().Trim(); }
                    else { type = "22"; }
                    switch (btnval.ToUpper())
                    {
                        case "NEW":
                            cmd = "select (master_id||to_char(vch_date,'yyyymmdd')||type) fstr,master_id Type,master_name Name " +
                                "from master_setting where type='KRG' and find_in_set(client_unit_id,'" + unitid_mst + "')=1 and master_id='22'";
                            break;
                        case "PRINT":
                        case "EDIT":
                            cmd = "select (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) as fstr,p.vch_num Doc_no," +
                                "to_char(convert_tz(p.vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') Doc_Date," +
                             "c.c_name as Party_Name,c.c_gstin as Party_Gstin,p.aname as Sender_Name,p.contactno Sender_Contact " +
                             "from itransaction p " +
                             "inner join clients_mst c on p.acode = c.vch_num and find_in_set(c.client_unit_id,p.client_unit_id)=1 and substr(c.vch_num,0,3)='203' and c.type='BCD' " +
                             "where p.client_unit_id = '" + unitid_mst + "' and p.type in ('" + type + "') " + xprdrange.Replace("vch_date", "p.vch_date") + "";
                            break;

                        case "VIEW":
                            cmd = "select (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) as fstr,p.vch_num Doc_no,to_char(convert_tz(p.vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') Doc_Date," +
                              "c.c_name as Party_Name,c.c_gstin as Party_Gstin,c.addr as Party_Address,p.aname as Sender_Name,p.contactno Sender_Contact," +
                              "p.totremark Remark from itransaction p " +
                              "inner join clients_mst c on p.acode = c.vch_num and find_in_set(c.client_unit_id,p.client_unit_id)=1 and substr(c.vch_num,0,3)='203' and c.type='BCD' " +
                              "where p.client_unit_id = '" + unitid_mst + "' and p.type in ('" + type + "') " + xprdrange.Replace("vch_date", "p.vch_date") + "";
                            break;
                        case "PARTY":
                            cmd = @"select (a.vch_num|| to_char(a.vch_date,'yyyymmdd')||a.type) as fstr ,a.vch_num as party_code,a.c_name Name,
a.addr address,a.pincode Pincode,a.isgstr IsGST,a.c_gstin as GSTIN,(case when a.tor='C' then 'Composition' when a.tor='R' then 'Regular' else 'Not Registered' end) GSTType,
a.type_desc as Search_text,a.cpname as PerName,(case when a.cpcont='0000000000' then '-' else a.cpcont end) as ContactNo,(case when a.cpaltcont='0000000000' then '-' else a.cpaltcont end) as AltContNo,(case when a.cpemail='ab@ab.ab' then '-' else a.cpemail end) as Email,a.cpaddr PerAddress,
a.cpdesig Designation from clients_mst a where substr(a.vch_num,0,3)='203' and a.type='BCD' and find_in_set(a.client_unit_id,'" + unitid_mst + "')=1";
                            break;
                        case "ITEM":
                            if (type.Equals("22"))
                            {
                                if (param1 != "") where = " and (it.client_unit_id||it.icode) not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','") + "')";
                                cmd = "select (it.client_unit_id||it.icode) fstr,it.icode as Icode,it.iname as Iname,it.cpartno Partno,um.master_name as UOM,s.closing " +
                                    "from item it " +
                                    "inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
                                    "inner join (select t.client_unit_id,t.icode,sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout,0)) as Issued,sum(nvl(t.qtyin,0))-sum(nvl(t.qtyout,0)) as closing from itransaction t " +
                                    "where trim(t.store)='Y' group by t.icode,t.client_unit_id ) s on it.icode=s.icode and it.client_unit_id=s.client_unit_id " +
                                    "where length(trim(it.icode))>8 and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1" + where + "";
                            }
                            break;
                        case "ITEM2":
                            if (param1 != "") where = " and (it.client_unit_id||it.icode||s.loc) not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','") + "')";
                            cmd = "select (it.client_unit_id||it.icode||s.loc) fstr,it.icode as Icode,it.iname as Iname,it.cpartno Partno,um.master_name as UOM " +
  ",location_name('" + clientid_mst + "||" + unitid_mst + "||s.loc') as LocName,s.closing from item it " +
  "inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
  "inner join (select t.client_unit_id,t.loc,t.icode,sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout,0)) as Issued," +
  "sum(nvl(t.qtyin,0))-sum(nvl(t.qtyout,0)) as closing from btchtrans t where length(trim(t.loc))>6 and trim(t.store)='Y' group by t.icode,t.client_unit_id,t.loc " +
  "having sum(nvl(t.qtyin,0))-sum(nvl(t.qtyout,0))>0 ) s on it.icode=s.icode and it.client_unit_id=s.client_unit_id " +
  "where length(trim(it.icode))>8 and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 and it.icode in ('" + param2.Trim().TrimEnd(',').Replace(",", "','").Trim() + "') " + where + "";
                            break;
                    }
                    break;
                #endregion
                #region dispatch
                case "dispatch":
                    if (sgen.GetSession(MyGuid, "KDSTYPE") != null) { type = sgen.GetSession(MyGuid, "KDSTYPE").ToString().Trim(); }
                    else { /*type = "27";*/ }
                    switch (btnval.ToUpper())
                    {
                        case "SOTYPE":
                            cmd = "select master_id||to_char(vch_date,'yyyymmdd')||type fstr,master_id as Type,master_name Name " +
                                "from master_setting where type='KPO' and master_id in ('40','41','42','43','44','ST') and find_in_set(client_unit_id,'" + unitid_mst + "')=1";
                            break;
                        case "NEW":
                            cmd = "select (master_id||to_char(vch_date,'yyyymmdd')||type) fstr, master_id,master_name from master_setting " +
                                "where type='KDS' and find_in_set(client_unit_id,'" + unitid_mst + "')=1";
                            break;

                        case "VIEW":
                            cmd = "select (p.client_id||p.client_unit_id||p.vch_num||c.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) as fstr,p.vch_num Doc_no,p.dspno as manual_dispatch_no," +
                               "to_char(convert_tz(p.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') as dispatch_date," +
                               "to_char(convert_tz(p.dspdate, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') as manual_dispatch_date," +
                             "p.icode as item_code,p.iname as Item_name,p.qtyout as disp_qty,c.c_name as Party_Name,(case when p.type = '60' then 'SALES ORDER' when p.type = '61' then 'DISPATCH SCHEDULE' when p.type = '62' then 'WITHOUT SO' when p.type = 'ST' then 'STN OUT' else '-' end) as Dispatched_with," +
                             "c.c_gstin as Party_Gstin,c.addr as Party_Address,p.deptname as term_of_del,p.rgptype as veh_no,p.aname as Sender_Name,p.contactno Sender_Contact," +
                             "p.totremark Remark from itransaction p inner join clients_mst c on p.acode = c.vch_num and find_in_set(c.client_unit_id,p.client_unit_id)=1 and c.type = 'BCD' " +
                             "where p.client_unit_id = '" + unitid_mst + "' and p.type in ('60','61','62','ST')  " + xprdrange.Replace("vch_date", "p.vch_date") + " order by p.vch_num desc";
                            break;

                        case "EDIT":
                        case "PRINT":
                            cmd = "select (p.client_id||p.client_unit_id||p.vch_num||c.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) as fstr,p.vch_num Doc_no,p.dspno as manual_dispatch_no," +
                                "to_char(convert_tz(p.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') as dispatch_date," +
                              "c.c_name as Party_Name,c.addr as Party_Address,(case when p.type = '60' then 'SALES ORDER' when p.type = '61' then 'DISPATCH SCHEDULE' when p.type = '62' then 'WITHOUT SO' when p.type = 'ST' then 'STN OUT' else '-' end) as Dispatched_with," +
                              "p.deptname as term_of_del,p.rgptype as veh_no,p.aname as Sender_Name,p.contactno Sender_Contact," +
                              "p.totremark Remark from itransaction p left join clients_mst c on p.acode = c.vch_num and find_in_set(c.client_unit_id,p.client_unit_id)=1 and c.type = 'BCD' " +
                              "where p.client_unit_id = '" + unitid_mst + "' and p.type in ('60','61','62','ST')  " + xprdrange.Replace("vch_date", "p.vch_date") + " order by p.vch_num desc";
                            break;
                        case "PARTY":
                            if (sgen.GetSession(MyGuid, "KDSTYPE") != null)
                            {
                                if (sgen.GetSession(MyGuid, "KDSTYPE").ToString() == "60")//with sales order
                                {
                                    string con2 = " and p.type = '" + sgen.GetSession(MyGuid, "SO_TYP") + "' ";
                                    cmd = "select distinct (a.vch_num|| to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.vch_num as Party_code,a.c_name Name,a.addr address,a.pincode Pincode," +
                                          "a.isgstr IsGST,a.c_gstin as GSTIN,(case when a.tor='C' then 'Composition' when a.tor='R' then 'Regular' else 'Not Registered' end) GSTType," +
                                          "a.type_desc as Search_text,a.cpname as PerName,(case when a.cpcont='0000000000' then '-' else a.cpcont end) as ContactNo,(case when a.cpaltcont='0000000000' then '-' else a.cpaltcont end) as AltContNo,(case when a.cpemail='ab@ab.ab' then '-' else a.cpemail end) as Email,a.addr PerAddress," +
                                          "a.cpdesig Designation from clients_mst a " +
                                          "inner join purchasesc p on p.acode = a.vch_num and a.client_unit_id = p.client_unit_id and p.pur_type='NPI' " +
                                          "where a.type='BCD' and find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 " + con2 + " and substr(a.vch_num,0,3)='303'";
                                }
                                else if (sgen.GetSession(MyGuid, "KDSTYPE").ToString() == "61") //with dispatch schedule
                                {
                                    string con2 = " and dsc.type = '" + sgen.GetSession(MyGuid, "SO_TYP") + "' ";
                                    cmd = "  select distinct (a.vch_num|| to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.vch_num as Party_code,a.c_name Name,a.addr address," +
                                          "a.pincode Pincode, a.isgstr IsGST, a.c_gstin as GSTIN" +
                                          ",(case when a.tor = 'C' then 'Composition' when a.tor = 'R' then 'Regular' else 'Not Registered' end) GSTType,a.type_desc as Search_text,a.cpname as PerName," +
                                          "(case when a.cpcont='0000000000' then '-' else a.cpcont end) as ContactNo ,(case when a.cpaltcont='0000000000' then '-' else a.cpaltcont end) as AltContNo,(case when a.cpemail='ab@ab.ab' then '-' else a.cpemail end) as Email,a.addr PerAddress, a.cpdesig Designation from clients_mst a " +
                                          "inner join kc_tab dsc on dsc.col1 = a.vch_num and substr(dsc.type,1,1)='4' and dsc.client_unit_id = a.client_unit_id where a.type = 'BCD' and find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 " + con2 + " and substr(a.vch_num,0,3)='303'";
                                }
                                else if (sgen.GetSession(MyGuid, "KDSTYPE").ToString() == "62")  //without so
                                {
                                    cmd = "select (a.vch_num|| to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.vch_num as Party_code,a.c_name as Name,a.addr address,a.pincode as Pincode,a.c_gstin as GSTIN," +
                                       "a.type_desc as Search_text,a.cpname as PerName,(case when a.cpcont='0000000000' then '-' else a.cpcont end) ContactNo,(case when a.cpaltcont='0000000000' then '-' else a.cpaltcont end) as AltContactNo,(case when a.cpemail='ab@ab.ab' then '-' else a.cpemail end) as Email,a.addr as PerAddr,a.cpdesig Designation " +
                                       "from clients_mst a where find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 AND a.type='BCD' and substr(a.vch_num,0,3)='303' ";
                                }
                                else//others
                                {
                                    cmd = "select (a.vch_num|| to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.vch_num as Party_code,a.c_name as Name,a.addr address,a.pincode as Pincode,a.c_gstin as GSTIN," +
                                          "a.type_desc as Search_text,a.cpname as PerName,(case when a.cpcont='0000000000' then '-' else a.cpcont end) ContactNo,(case when a.cpaltcont='0000000000' then '-' else a.cpaltcont end) as AltContactNo,(case when a.cpemail='ab@ab.ab' then '-' else a.cpemail end) as Email,a.addr as PerAddr,a.cpdesig Designation " +
                                          "from clients_mst a where find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 AND a.type='BCD' and substr(a.vch_num,0,3)='103' ";
                                }
                            }
                            else
                            {
                                cmd = "select (a.vch_num|| to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.vch_num as Party_code,a.c_name as Name,a.addr address,a.pincode as Pincode,a.c_gstin as GSTIN," +
                       "a.type_desc as Search_text,a.cpname as PerName,(case when a.cpcont='0000000000' then '-' else a.cpcont end) ContactNo,(case when a.cpaltcont='0000000000' then '-' else a.cpaltcont end) as AltContactNo,(case when a.cpemail='ab@ab.ab' then '-' else a.cpemail end) as Email,a.addr as PerAddr,a.cpdesig Designation " +
                       "from clients_mst a where find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 AND a.type='BCD' and substr(a.vch_num,0,3)='303' ";
                            }
                            break;
                        case "ITEM":
                            cond = " and cl.vch_num = '" + sgen.GetSession(MyGuid, "CST_ID").ToString() + "' ";
                            if (sgen.GetSession(MyGuid, "KDSTYPE") != null)
                            {
                                if (sgen.GetSession(MyGuid, "KDSTYPE").ToString() == "60") //with sales order
                                {
                                    if (param1 != "") { if (param1 != "-") { where = " and (it.icode || pc.vch_num) not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','") + "')"; } }
                                    string cond2 = " and pc.type  = '" + sgen.GetSession(MyGuid, "SO_TYP").ToString() + "'";
                                    #region Command With HSN and Stock
                                    //cmd = "select (it.icode || pc.type || pc.vch_num || to_char(it.vch_date, 'yyyymmdd') || it.type) as fstr" +
                                    //    ",it.icode as Icode,it.iname as Iname,cl.c_name as party,it.cpartno Partno,hsn.master_name as HSN,nvl(pc.bal_qty, '0') as Order_qty" +
                                    //    ",s.closing as qty_stock,um.master_name as UOM,pc.po_no as po_num,to_char(pc.date1, '" + sgen.Getsqldateformat() + "') as po_date,to_char(pc.vch_date, '" + sgen.Getsqldateformat() + "') as so_date," +
                                    //    "pc.vch_num as so_no from item it inner join (select a.po_no, a.vch_num, a.icode, a.type, a.so_qty,a.vch_date, a.date1,a.acode,a.client_id,a.client_unit_id," +
                                    //    "nvl(sum(a.invoice_qty), '0') as used_qty,a.so_qty - nvl(sum(a.invoice_qty), '0') as bal_qty from (select pc.vch_num, pc.gothrchrg as po_no, pc.date1," +
                                    //    " pc.vch_date, pc.icode, pc.type, pc.qtyord as so_qty,iv.qtyout as invoice_qty,pc.acode,pc.client_id,pc.client_unit_id from purchasesc pc left join" +
                                    //    " itransaction iv on iv.sono = pc.vch_num and iv.potype = '51' and pc.icode=iv.icode and iv.client_unit_id = pc.client_unit_id " +
                                    //    "where pc.pur_type = 'NPI' and substr(pc.type, 1, 1) = '4' and pc.client_unit_id = '" + unitid_mst + "' union all " +
                                    //    "select pc.vch_num, pc.gothrchrg as po_no, pc.date1, pc.vch_date, pc.icode, pc.type, pc.qtyord as so_qty, dp.qtyout as dsp_qty,pc.acode,pc.client_id," +
                                    //    "pc.client_unit_id from purchasesc pc left join itransaction dp on dp.VEHNO = pc.vch_num and dp.type = '60' and pc.icode=dp.icode and dp.client_unit_id = pc.client_unit_id where pc.pur_type = 'NPI' and substr(pc.type, 1, 1) = '4' union all select pc.vch_num, " +
                                    //    "pc.gothrchrg as po_no,pc.date1,pc.vch_date, pc.icode, pc.type, pc.qtyord as so_qty, ds.col10 as dsp_qty,pc.acode,pc.client_id,pc.client_unit_id from" +
                                    //    " purchasesc pc left join kc_tab ds on ds.col13 = pc.vch_num and pc.icode=ds.col5 and ds.col20 = 'DSC' and" +
                                    //    " ds.client_unit_id =pc.client_unit_id where pc.pur_type = 'NPI' and substr(pc.type, 1, 1) = '4' union all select pc.vch_num, pc.gothrchrg as po_no," +
                                    //    " pc.date1, pc.vch_date, pc.icode, pc.type, pc.qtyord as so_qty,co.col11 as invoice_qty,pc.acode,pc.client_id,pc.client_unit_id from purchasesc" +
                                    //    " pc left join enx_tab co on co.col7=pc.icode and pc.vch_num = co.col5 and co.type='CPS' and " +
                                    //    "co.client_unit_id='" + unitid_mst + "' where pc.pur_type = 'NPI' and substr(pc.type, 1, 1) = '4') a group by(a.vch_num, a.icode,a.type, a.so_qty,a.po_no, " +
                                    //    "a.vch_date, a.date1,a.acode,a.client_id,a.client_unit_id)) pc on pc.icode = it.icode and pc.bal_qty > 0" +
                                    //    " and pc.vch_num || pc.icode || pc.type not in (select col4 || col5 || type from kc_tab kt where substr(kt.type,1,1)='4' and kt.col20='DSC' and " +
                                    //    "kt.client_unit_id = '" + unitid_mst + "') " +
                                    //    "inner join clients_mst cl on cl.vch_num = pc.acode and cl.type='BCD' and find_in_set(cl.client_unit_id,pc.client_unit_id)=1 " + cond + " " +
                                    //    "left join master_setting um on um.master_id = it.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, it.client_unit_id)= 1 " +
                                    //    "left join master_setting hsn on hsn.master_id = it.hsno and hsn.type = 'HSN' and find_in_set(hsn.client_unit_id, it.client_unit_id)= 1 " +
                                    //    "left join(select icode,client_unit_id,sum(op) op,sum(pktop) pktop,sum(qtyin) qtyin,sum(qtyout) out," +
                                    //  "sum(op)+sum(qtyin)-sum(qtyout) closing from (select icode, client_unit_id, nvl(op_2019, 0) op," +
                                    //  " nvl(pkt_2019, 0) pktop, 0 qtyin, 0 qtyout, 0 pktno from itbal union all select icode, client_unit_id, " +
                                    //  "sum(to_number(qtyin)) - sum(to_number(qtyout)) op, sum((case when substr(type, 1, 1) in ('0', '1') then" +
                                    //  " pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktop,sum(to_number(qtyin)) " +
                                    //  "qtyin,sum(to_number(qtyout)) qtyout,0 pktno from itransaction where trim(store) = 'Y' and " +
                                    //  "to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and " +
                                    //  "to_date('" + year_from.Split(' ')[0].Trim() + "','" + sgen.Getsqldateformat() + "')-1 group by icode,client_unit_id union all select icode,client_unit_id," +
                                    //  "0 as op,0 as pktop,to_number(qtyin) qtyin,to_number(qtyout) qtyout,sum((case when substr(type, 1, 1) in " +
                                    //  "('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktno from " +
                                    //  "itransaction where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between " +
                                    //  "to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and to_date('" + param2.Trim() + "','" + sgen.Getsqldateformat() + "') group by icode,client_unit_id," +
                                    //  "to_number(qtyin),to_number(qtyout)) a group by icode, client_unit_id) s on it.icode = s.icode and find_in_set(s.client_unit_id,it.client_unit_id)=1   and s.closing > 0 " +
                                    //    "where it.type='IT' and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1"; 
                                    #endregion
                                    cmd = "select (it.icode || pc.type || pc.vch_num || to_char(it.vch_date, 'yyyymmdd') || it.type) as fstr" +
                                        ",it.icode as Icode,it.iname as Iname,cl.c_name as party,it.cpartno Partno,nvl(pc.bal_qty, '0') as Order_qty" +
                                        ",um.master_name as UOM,pc.po_no as po_num,to_char(pc.date1, '" + sgen.Getsqldateformat() + "') as po_date,to_char(pc.vch_date, '" + sgen.Getsqldateformat() + "') as so_date," +
                                        "pc.vch_num as so_no from item it inner join (select a.po_no, a.vch_num, a.icode, a.type, a.so_qty,a.vch_date, a.date1,a.acode,a.client_id,a.client_unit_id," +
                                        "nvl(sum(a.invoice_qty), '0') as used_qty,a.so_qty - nvl(sum(a.invoice_qty), '0') as bal_qty from (select pc.vch_num, pc.gothrchrg as po_no, pc.date1," +
                                        " pc.vch_date, pc.icode, pc.type, pc.qtyord as so_qty,iv.qtyout as invoice_qty,pc.acode,pc.client_id,pc.client_unit_id from purchasesc pc left join" +
                                        " itransaction iv on iv.sono = pc.vch_num and iv.potype = '51' and pc.icode=iv.icode and iv.client_unit_id = pc.client_unit_id " +
                                        "where pc.pur_type = 'NPI' and substr(pc.type, 1, 1) = '4' and pc.client_unit_id = '" + unitid_mst + "' union all " +
                                        "select pc.vch_num, pc.gothrchrg as po_no, pc.date1, pc.vch_date, pc.icode, pc.type, pc.qtyord as so_qty, dp.qtyout as dsp_qty,pc.acode,pc.client_id," +
                                        "pc.client_unit_id from purchasesc pc left join itransaction dp on dp.VEHNO = pc.vch_num and dp.type = '60' and pc.icode=dp.icode and dp.client_unit_id = pc.client_unit_id where pc.pur_type = 'NPI' and substr(pc.type, 1, 1) = '4' union all select pc.vch_num, " +
                                        "pc.gothrchrg as po_no,pc.date1,pc.vch_date, pc.icode, pc.type, pc.qtyord as so_qty, ds.col10 as dsp_qty,pc.acode,pc.client_id,pc.client_unit_id from" +
                                        " purchasesc pc left join kc_tab ds on ds.col13 = pc.vch_num and pc.icode=ds.col5 and ds.col20 = 'DSC' and" +
                                        " ds.client_unit_id =pc.client_unit_id where pc.pur_type = 'NPI' and substr(pc.type, 1, 1) = '4' union all select pc.vch_num, pc.gothrchrg as po_no," +
                                        " pc.date1, pc.vch_date, pc.icode, pc.type, pc.qtyord as so_qty,co.col11 as invoice_qty,pc.acode,pc.client_id,pc.client_unit_id from purchasesc" +
                                        " pc left join enx_tab co on co.col7=pc.icode and pc.vch_num = co.col5 and co.type='CPS' and co.client_unit_id='" + unitid_mst + "' where pc.pur_type = 'NPI' and substr(pc.type, 1, 1) = '4') a group by(a.vch_num, a.icode,a.type, a.so_qty,a.po_no, " +
                                        "a.vch_date, a.date1,a.acode,a.client_id,a.client_unit_id)) pc on pc.icode = it.icode and pc.bal_qty > 0" +
                                        " and pc.vch_num || pc.icode || pc.type not in (select col4 || col5 || type from kc_tab kt where substr(kt.type,1,1)='4' and kt.col20='DSC' and " +
                                        "kt.client_unit_id = '" + unitid_mst + "') inner join clients_mst cl on cl.vch_num = pc.acode and cl.type='BCD' and find_in_set(cl.client_unit_id,pc.client_unit_id)=1 " + cond + " " +
                                        "left join master_setting um on um.master_id = it.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, it.client_unit_id)= 1 " +
                                        "where it.type='IT' and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1";
                                }
                                else if (sgen.GetSession(MyGuid, "KDSTYPE").ToString() == "61") //with dispatch schedule
                                {
                                    if (param1 != "") { if (param1 != "-") { where = " and (it.icode || kt.sdl_no) not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','") + "')"; } }
                                    string cond2 = " and pc.typ = '" + sgen.GetSession(MyGuid, "SO_TYP").ToString() + "'";
                                    #region Command With HSN ,Stock
                                    //cmd = "select distinct (it.icode || pc.col20 || pc.sdl_no || to_char(it.vch_date, 'yyyymmdd') || it.type) as fstr," +
                                    //    "it.icode as icode,it.iname as iname,cl.c_name as party,pc.pending_sdl as Pending_sdl_qty,it.cpartno partno,to_char(pc.date5,'" + sgen.Getsqldateformat() + "') as po_date," +
                                    //    "to_char(pc.date6,'" + sgen.Getsqldateformat() + "') as so_date,pc.col11 as po_no,pc.col13 as so_no,hsn.master_name as hsn,to_char(pc.date1,'" + sgen.Getsqldateformat() + "') sdl_date," +
                                    //    "hsn.group_name taxrate,pc.sdl_no,nvl(s.closing, 0) as qty_in_stock,um.master_name as UOM from item it " +
                                    //    "inner join (select a.sdl_no,a.typ, a.icode,a.col1,a.client_id,a.client_unit_id, a.col20, a.date1,a.date5, a.date6, a.col11, a.col13, a.sdl_qty," +
                                    //    "sum(a.dsp_qty) as dsp_qty,(a.sdl_qty - nvl(sum(a.dsp_qty), '0')) as pending_sdl from(select ds.vch_num as sdl_no,ds.type typ,ds.col1,ds.client_id," +
                                    //    "ds.client_unit_id, ds.col20,ds.date1,ds.date5, ds.date6,ds.col11, ds.col13,ds.col5 as icode, ds.col10 as sdl_qty,dp.qtyout as dsp_qty from kc_tab ds " +
                                    //    "left join itransaction dp on dp.GDISC = ds.vch_num and dp.type = '61'  and dp.icode=ds.col5 and dp.client_unit_id = " +
                                    //    "ds.client_unit_id where substr(ds.type,1,1)='4' and ds.col20='DSC' and ds.client_unit_id = '" + unitid_mst + "' union all select ds.vch_num " +
                                    //    "as sdl_no,ds.type typ,ds.col1,ds.client_id,ds.client_unit_id, ds.col20,ds.date1,ds.date5, ds.date6, ds.col11, ds.col13, ds.col5 as icode,ds.col10 as " +
                                    //    "sdl_qty, iv.qtyout as inv_qty from kc_tab ds left join itransaction iv on iv.sdlno = ds.vch_num and iv.potype = '52'  and iv.icode=ds.col5 and " +
                                    //    "iv.client_unit_id = ds.client_unit_id where substr(ds.type,1,1)='4' and ds.col20='DSC' " +
                                    //    "and ds.client_unit_id = '" + unitid_mst + "' union all select ds.vch_num as sdl_no,ds.type typ,ds.col1,ds.client_id,ds.client_unit_id,ds.col20,ds.date1,ds.date5," +
                                    //    "ds.date6, ds.col11, ds.col13, ds.col5 as icode, ds.col10 as sdl_qty,co.col11 as close_qty from kc_tab ds left join enx_tab co on co.col7 = ds.col5 " +
                                    //    "and ds.vch_num = co.col5 and co.type = 'CPD' and co.client_unit_id = '" + unitid_mst + "' where substr(ds.type,1,1)='4' and ds.col20='DSC' " +
                                    //    "and ds.client_unit_id = '" + unitid_mst + "') a group by(a.sdl_no,a.typ, a.icode,a.col1,a.client_id,a.client_unit_id, a.col20,a.date1," +
                                    //    "a.date5, a.date6, a.col11, a.col13, a.sdl_qty)) pc on pc.icode = it.icode " + cond2 + " left join master_setting um on um.master_id = it.uom" +
                                    //    " and um.type = 'UMM' and find_in_set(um.client_unit_id, it.client_unit_id)= 1 left join master_setting" +
                                    //    " hsn on hsn.master_id = it.hsno and hsn.type = 'HSN' and find_in_set(hsn.client_unit_id," +
                                    //    "it.client_unit_id)= 1 left join(select icode,client_unit_id,sum(op) op,sum(pktop) pktop,sum(qtyin) qtyin,sum(qtyout) out," +
                                    //  "sum(op)+sum(qtyin)-sum(qtyout) closing from (select icode, client_unit_id, nvl(op_2019, 0) op," +
                                    //  " nvl(pkt_2019, 0) pktop, 0 qtyin, 0 qtyout, 0 pktno from itbal union all select icode, client_unit_id, " +
                                    //  "sum(to_number(qtyin)) - sum(to_number(qtyout)) op, sum((case when substr(type, 1, 1) in ('0', '1') then" +
                                    //  " pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktop,sum(to_number(qtyin)) " +
                                    //  "qtyin,sum(to_number(qtyout)) qtyout,0 pktno from itransaction where trim(store) = 'Y' and " +
                                    //  "to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and " +
                                    //  "to_date('" + year_from.Split(' ')[0].Trim() + "','" + sgen.Getsqldateformat() + "')-1 group by icode,client_unit_id union all select icode,client_unit_id," +
                                    //  "0 as op,0 as pktop,to_number(qtyin) qtyin,to_number(qtyout) qtyout,sum((case when substr(type, 1, 1) in " +
                                    //  "('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktno from " +
                                    //  "itransaction where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between " +
                                    //  "to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and to_date('" + param2.Trim() + "','" + sgen.Getsqldateformat() + "') group by icode,client_unit_id," +
                                    //  "to_number(qtyin),to_number(qtyout)) a group by icode, client_unit_id) s on it.icode = s.icode" +
                                    //    " and it.client_unit_id = s.client_unit_id " +
                                    //    "inner join clients_mst cl on cl.vch_num = pc.col1 and find_in_set(cl.client_unit_id,pc.client_unit_id)=1 and cl.type = 'BCD' " + cond + "" +
                                    //    " where find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 and it.type='IT' " + where + " and s.closing > 0";

                                    #endregion
                                    cmd = "select distinct (it.icode || pc.col20 || pc.sdl_no || to_char(it.vch_date, 'yyyymmdd') || it.type) as fstr," +
                                        "it.icode as icode,it.iname as iname,cl.c_name as party,pc.pending_sdl as Pending_sdl_qty,it.cpartno partno,to_char(pc.date5,'" + sgen.Getsqldateformat() + "') as po_date," +
                                        "to_char(pc.date6,'" + sgen.Getsqldateformat() + "') as so_date,pc.col11 as po_no,pc.col13 as so_no,to_char(pc.date1,'" + sgen.Getsqldateformat() + "') sdl_date," +
                                        "um.master_name as UOM from item it inner join (select a.sdl_no,a.typ, a.icode,a.col1,a.client_id,a.client_unit_id, a.col20, a.date1,a.date5, a.date6, a.col11, a.col13, a.sdl_qty," +
                                        "sum(a.dsp_qty) as dsp_qty,(a.sdl_qty - nvl(sum(a.dsp_qty), '0')) as pending_sdl from(select ds.vch_num as sdl_no,ds.type typ,ds.col1,ds.client_id," +
                                        "ds.client_unit_id, ds.col20,ds.date1,ds.date5, ds.date6,ds.col11, ds.col13,ds.col5 as icode, ds.col10 as sdl_qty,dp.qtyout as dsp_qty from kc_tab ds " +
                                        "left join itransaction dp on dp.GDISC = ds.vch_num and dp.type = '61'  and dp.icode=ds.col5 and dp.client_unit_id = " +
                                        "ds.client_unit_id where substr(ds.type,1,1)='4' and ds.col20='DSC' and ds.client_unit_id = '" + unitid_mst + "' union all select ds.vch_num " +
                                        "as sdl_no,ds.type typ,ds.col1,ds.client_id,ds.client_unit_id, ds.col20,ds.date1,ds.date5, ds.date6, ds.col11, ds.col13, ds.col5 as icode,ds.col10 as " +
                                        "sdl_qty, iv.qtyout as inv_qty from kc_tab ds left join itransaction iv on iv.sdlno = ds.vch_num and iv.potype = '52'  and iv.icode=ds.col5 and " +
                                        "iv.client_unit_id = ds.client_unit_id where substr(ds.type,1,1)='4' and ds.col20='DSC' " +
                                        "and ds.client_unit_id = '" + unitid_mst + "' union all select ds.vch_num as sdl_no,ds.type typ,ds.col1,ds.client_id,ds.client_unit_id,ds.col20,ds.date1,ds.date5," +
                                        "ds.date6, ds.col11, ds.col13, ds.col5 as icode, ds.col10 as sdl_qty,co.col11 as close_qty from kc_tab ds left join enx_tab co on co.col7 = ds.col5 " +
                                        "and ds.vch_num = co.col5 and co.type = 'CPD' and co.client_unit_id = '" + unitid_mst + "' where substr(ds.type,1,1)='4' and ds.col20='DSC' " +
                                        "and ds.client_unit_id = '" + unitid_mst + "') a group by(a.sdl_no,a.typ, a.icode,a.col1,a.client_id,a.client_unit_id, a.col20,a.date1," +
                                        "a.date5, a.date6, a.col11, a.col13, a.sdl_qty)) pc on pc.icode = it.icode " + cond2 + " left join master_setting um on um.master_id = it.uom" +
                                        " and um.type = 'UMM' and find_in_set(um.client_unit_id, it.client_unit_id)= 1 inner join clients_mst cl on cl.vch_num = pc.col1 and find_in_set(cl.client_unit_id,pc.client_unit_id)=1 and cl.type = 'BCD' " + cond + "" +
                                        " where find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 and it.type='IT' " + where + "";
                                }
                                else if (sgen.GetSession(MyGuid, "KDSTYPE").ToString() == "62")//without so
                                {
                                    if (param1 != "") { { if (param1 != "-") where = " and (it.icode) not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','") + "')"; } }
                                    #region Command With Hsn.stock
                                    //  cmd = "select it.icode||to_char(it.vch_date,'yyyymmdd')||it.type as fstr,it.icode as Icode,it.iname as Iname,it.cpartno Partno," +
                                    //"um.master_name as UOM,hsn.master_name as hsn,hsn.group_name taxrate,s.closing as qty_in_stock from item it " +
                                    //"left join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
                                    //"left join master_setting hsn on hsn.master_id=it.hsno and hsn.type='HSN' and find_in_set(hsn.client_unit_id,it.client_unit_id)=1 " +
                                    //"left join(select icode,client_unit_id,sum(op) op,sum(pktop) pktop,sum(qtyin) qtyin,sum(qtyout) out," +
                                    //    "sum(nvl(op,0))+sum(nvl(qtyin,0))-sum(nvl(qtyout,0)) closing from (select icode, client_unit_id, nvl(op_2019, 0) op," +
                                    //    " nvl(pkt_2019, 0) pktop, 0 qtyin, 0 qtyout, 0 pktno from itbal union all select icode, client_unit_id, " +
                                    //    "sum(to_number(qtyin)) - sum(to_number(qtyout)) op, sum((case when substr(type, 1, 1) in ('0', '1') then" +
                                    //    " pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktop,sum(to_number(qtyin)) " +
                                    //    "qtyin,sum(to_number(qtyout)) qtyout,0 pktno from itransaction where trim(store) = 'Y' and " +
                                    //    "to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and " +
                                    //    "to_date('" + year_from.Split(' ')[0].Trim() + "','" + sgen.Getsqldateformat() + "')-1 group by icode,client_unit_id union all select icode,client_unit_id," +
                                    //    "0 as op,0 as pktop,to_number(qtyin) qtyin,to_number(qtyout) qtyout,sum((case when substr(type, 1, 1) in " +
                                    //    "('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktno from " +
                                    //    "itransaction where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between " +
                                    //    "to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and to_date('" + param2.Trim() + "','" + sgen.Getsqldateformat() + "') group by icode,client_unit_id," +
                                    //    "to_number(qtyin),to_number(qtyout)) a group by icode, client_unit_id)" +
                                    //      " s on it.icode = s.icode and it.client_unit_id = s.client_unit_id where it.type='IT' and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 and it.sale='Y' and s.closing > 0 " + where + "";
                                    #endregion
                                    cmd = "select it.icode||to_char(it.vch_date,'yyyymmdd')||it.type as fstr,it.icode as Icode,it.iname as Iname,it.cpartno Partno," +
                                  "um.master_name as UOM from item it left join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
                                  " where it.type='IT' and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 and it.sale='Y' " + where + "";
                                }
                                else //others
                                {
                                    if (param1 != "") { { if (param1 != "-") where = " and (it.icode) not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','") + "')"; } }
                                    #region Command With hsn,taxrae
                                    //cmd = "select it.icode||to_char(it.vch_date,'yyyymmdd')||it.type as fstr,it.icode as Icode,it.iname as Iname,it.cpartno Partno," +
                                    //                    "um.master_name as UOM,hsn.master_name as hsn,hsn.group_name taxrate,s.closing as qty_in_stock from item it " +
                                    //                    "left join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
                                    //                    "left join master_setting hsn on hsn.master_id=it.hsno and hsn.type='HSN' and find_in_set(hsn.client_unit_id,it.client_unit_id)=1 " +
                                    //                    "left join(select icode,client_unit_id,sum(op) op,sum(pktop) pktop,sum(qtyin) qtyin,sum(qtyout) out," +
                                    //                        "sum(nvl(op,0))+sum(nvl(qtyin,0))-sum(nvl(qtyout,0)) closing from (select icode, client_unit_id, nvl(op_2019, 0) op," +
                                    //                        " nvl(pkt_2019, 0) pktop, 0 qtyin, 0 qtyout, 0 pktno from itbal union all select icode, client_unit_id, " +
                                    //                        "sum(to_number(qtyin)) - sum(to_number(qtyout)) op, sum((case when substr(type, 1, 1) in ('0', '1') then" +
                                    //                        " pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktop,sum(to_number(qtyin)) " +
                                    //                        "qtyin,sum(to_number(qtyout)) qtyout,0 pktno from itransaction where trim(store) = 'Y' and " +
                                    //                        "to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and " +
                                    //                        "to_date('" + year_from.Split(' ')[0].Trim() + "','" + sgen.Getsqldateformat() + "')-1 group by icode,client_unit_id union all select icode,client_unit_id," +
                                    //                        "0 as op,0 as pktop,to_number(qtyin) qtyin,to_number(qtyout) qtyout,sum((case when substr(type, 1, 1) in " +
                                    //                        "('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktno from " +
                                    //                        "itransaction where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between " +
                                    //                        "to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and to_date('" + param2.Trim() + "','" + sgen.Getsqldateformat() + "') group by icode,client_unit_id," +
                                    //                        "to_number(qtyin),to_number(qtyout)) a group by icode, client_unit_id)" +
                                    //                          " s on it.icode = s.icode and it.client_unit_id = s.client_unit_id " +
                                    //                          "where it.type='IT' and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 and it.sale='Y' and s.closing > 0 " + where + "";
                                    #endregion
                                    cmd = "select it.icode||to_char(it.vch_date,'yyyymmdd')||it.type as fstr,it.icode as Icode,it.iname as Iname,it.cpartno Partno," +
                                  "um.master_name as UOM,hsn.master_name as hsn,hsn.group_name taxrate,s.closing as qty_in_stock from item it " +
                                  "left join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
                                  "where it.type='IT' and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 and it.sale='Y' " + where + "";
                                }
                            }
                            else
                            {
                                if (param1 != "") { { if (param1 != "-") where = " and (it.icode) not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','") + "')"; } }
                                cmd = "select it.icode||to_char(it.vch_date,'yyyymmdd')||it.type as fstr,it.icode as Icode,it.iname as Iname,it.cpartno Partno," +
                              "um.master_name as UOM from item it left join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
                              "where it.type='IT' and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 and it.sale='Y' " + where + "";
                            }
                            break;
                        case "ITEM2":
                            if (param1 != "") where = " and (it.icode||s.loc) not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','") + "')";
                            cmd = "select (it.icode||s.loc) fstr,it.icode as Icode,it.iname as Iname,it.cpartno Partno,um.master_name as UOM," +
                                  "nvl(location_name(s.loc),'0') as LocName,nvl(s.closing,0) as Qty_in_stock from item it " +
                                  "inner join itbal itb on it.icode=itb.icode and it.type=itb.type and it.client_unit_id=itb.client_unit_id " +
                                  "left join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
                                  "left join (select t.client_unit_id,t.loc,t.icode,sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout,0)) as Issued," +
                                  "sum(nvl(t.qtyin,0))-sum(nvl(t.qtyout,0)) as closing from btchtrans t where length(trim(t.loc))>6 and trim(t.store)='Y' group by t.icode,t.client_unit_id,t.loc " +
                                  "having sum(nvl(t.qtyin,0))-sum(nvl(t.qtyout,0))>0 ) s on itb.icode=s.icode and itb.client_unit_id=s.client_unit_id " +
                                  "where length(trim(it.icode))>8 and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 " +
                                  "and it.icode in ('" + param2.Trim().TrimEnd(',').Replace(",", "','").Trim() + "') " + where + "";
                            break;
                    }
                    break;
                #endregion
                #region dispatch shedule
                case "dis_sch":
                    switch (btnval.ToUpper())
                    {
                        case "NEW":
                            cmd = "select master_id||to_char(vch_date,'yyyymmdd')||type fstr,master_id as Type,master_name Name " +
                                "from master_setting where type = 'KPO' and find_in_set(client_unit_id,'" + unitid_mst + "')=1" +
                                " and substr(master_id,1,1)='4'";
                            break;
                        case "GETSO":
                            cond = " and a.type='" + sgen.GetSession(MyGuid, "SO_type").ToString() + "' and c.vch_num = '" + sgen.GetSession(MyGuid, "PRTY_ID").ToString() + "'";
                            cmd = "select distinct (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr, " +
                                "a.vch_num as so_no,c.c_name as Party_Name,c.c_gstin as Party_Gstin,c.addr as Party_Address from purchasesc " +
                                "a inner join clients_mst c on a.acode = c.vch_num and " +
                                "find_in_set(c.client_unit_id,a.client_unit_id)=1 and c.type = 'BCD' and substr(c.vch_num,0,3)='303' " +
                                "where a.client_unit_id = '" + unitid_mst + "' " + cond + " and a.pur_type = 'NPI'";
                            break;
                        case "PRINT":
                        case "VIEW":
                        case "EDIT":
                            cmd = " select (sd.client_id||sd.client_unit_id||sd.vch_num||to_char(sd.vch_date,'yyyymmdd')||sd.col20) as fstr, sd.vch_num as Doc_no ," +
                                "cl.c_name as name,(case when sd.type='40' then 'Domestic Invoice' when sd.type='45' then 'Domestic Invoice Amortization' when sd.type='41' then 'Export Invoice' when sd.type='42' " +
                                "then 'FA Sale' when sd.type='43' then 'Service Invoice' when sd.type='44' then 'Purchase Return' else '-' end) as Against,cl.c_gstin as gstin," +
                                "cl.addr,to_char(sd.date1,'" + sgen.Getsqldateformat() + "') as Doc_date," +
                                "sd.vch_num as Sdl_no,sd.col3 as PO_no,sd.col4 as So_no,sd.col21 as Remark," +
                                "to_char(sd.date2,'" + sgen.Getsqldateformat() + "') as sdl_st_date," +
                                "to_char(sd.date3,'" + sgen.Getsqldateformat() + "') as sdl_end_date" +
                                ",to_char(sd.date4,'" + sgen.Getsqldateformat() + "') as po_date," +
                                "to_char(sd.date5,'" + sgen.Getsqldateformat() + "') as po_dt2,to_char(sd.date7,'" + sgen.Getsqldateformat() + "') as So_dt1," +
                                "to_char(sd.date6,'" + sgen.Getsqldateformat() + "') as So_dt2,sd.col5 as Icode,sd.col27 as IName," +
                                "sd.col7 as PartNo, sd.col8 as UOM, sd.col9 as Order_qty,sd.col10 as Plan_qty,sd.col11 as PO_No_grd,sd.col12 as remark2,sd.col13 as So_no2 from kc_tab" +
                                " sd inner join clients_mst cl on cl.vch_num = sd.col1 and cl.type = 'BCD' and substr(cl.vch_num,0,3)='303' and find_in_set(cl.client_unit_id,sd.client_unit_id)=1 " +
                                "where sd.col20 = 'DSC' and substr(sd.type,1,1)='4' and sd.client_unit_id = '" + unitid_mst + "' " + xprdrange.Replace("vch_date", "sd.vch_date") + "";
                            break;
                        case "PARTY":
                            string condi = " and p.type='" + sgen.GetSession(MyGuid, "SO_type").ToString() + "'";
                            cmd = "select distinct (a.vch_num|| to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.vch_num as Party_code,a.c_name Name,a.addr address,a.pincode Pincode," +
                                "(case when a.tor='C' then 'Composition' when a.tor='R' then 'Regular' else 'Not Registered' end) GSTType," +
                                "a.type_desc as Search_text,(case when a.cpcont='0000000000' then '-' else a.cpcont end) as ContactNo,(case when a.cpemail='ab@ab.ab' then '-' else a.cpemail end) as Email," +
                                "a.cpdesig Designation from clients_mst a " +
                                "inner join purchasesc p on p.acode = a.vch_num and a.client_unit_id = p.client_unit_id and p.pur_type='NPI'" +
                                "where a.type='BCD' and find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 " + condi + " and substr(a.vch_num,0,3)='303'";
                            break;
                        case "ITEM":
                            if (param1 != null) { if (param1 != "") where = " and it.icode||pc.vch_num not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','").Trim().ToString() + "')"; }
                            condi = " and pc.type='" + sgen.GetSession(MyGuid, "SO_type").ToString() + "' and cl.vch_num = '" + sgen.GetSession(MyGuid, "PRTY_ID").ToString() + "' and pc.vch_num in ('" + sgen.GetSession(MyGuid, "So_num").ToString().Trim().TrimEnd(',').Replace(",", "','").Trim().ToString() + "')";
                            cmd = "select (it.icode || pc.type || pc.vch_num || to_char(it.vch_date, 'yyyymmdd') || it.type) as fstr,it.icode as " +
                                "Icode,it.iname as Iname,it.cpartno Partno,hsn.master_name as HSN,nvl(pc.bal_qty, '0') as Order_qty,um.master_name as UOM,pc.po_no as po_num," +
                                "to_char(pc.date1, '" + sgen.Getsqldateformat() + "') as po_date,to_char(pc.vch_date, '" + sgen.Getsqldateformat() + "') as so_date,pc.vch_num as so_no from item it inner join " +
                                "(select a.po_no, a.vch_num, a.icode, a.type, a.so_qty,a.vch_date, a.date1,a.acode,a.client_id,a.client_unit_id,nvl(sum(a.invoice_qty), '0') " +
                                "as used_qty,a.so_qty - nvl(sum(a.invoice_qty), '0') as bal_qty from (select pc.vch_num, pc.gothrchrg as po_no, pc.date1, pc.vch_date, pc.icode," +
                                " pc.type, pc.qtyord as so_qty,iv.qtyout as invoice_qty,pc.acode,pc.client_id,pc.client_unit_id from purchasesc pc left join itransaction iv on " +
                                "iv.sono = pc.vch_num and iv.potype = '51' and pc.icode=iv.icode and iv.client_unit_id = pc.client_unit_id where " +
                                "pc.pur_type = 'NPI' and substr(pc.type, 1, 1) = '4' and pc.client_unit_id = '" + unitid_mst + "' union all select pc.vch_num, " +
                                "pc.gothrchrg as po_no, pc.date1, pc.vch_date, pc.icode, pc.type, pc.qtyord as so_qty, dp.qtyout as dsp_qty,pc.acode,pc.client_id,pc.client_unit_id " +
                                "from purchasesc pc left join itransaction dp on dp.VEHNO = pc.vch_num and dp.type = '60' and pc.icode=dp.icode and " +
                                "dp.client_unit_id = pc.client_unit_id where pc.pur_type = 'NPI' and substr(pc.type, 1, 1) = '4' union all select pc.vch_num, pc.gothrchrg as po_no," +
                                "pc.date1,pc.vch_date, pc.icode, pc.type, pc.qtyord as so_qty, ds.col10 as dsp_qty,pc.acode,pc.client_id,pc.client_unit_id from purchasesc pc left" +
                                " join kc_tab ds on ds.col13 = pc.vch_num and pc.icode=ds.col5 and ds.col20 = 'DSC' and ds.client_unit_id" +
                                " =pc.client_unit_id where pc.pur_type = 'NPI' and substr(pc.type, 1, 1) = '4' union all select pc.vch_num, pc.gothrchrg as po_no, pc.date1, " +
                                "pc.vch_date, pc.icode, pc.type, pc.qtyord as so_qty,co.col11 as invoice_qty,pc.acode,pc.client_id,pc.client_unit_id from purchasesc pc left join " +
                                "enx_tab co on co.col7=pc.icode and pc.vch_num = co.col5 and co.type='CPS' and co.client_unit_id='" + unitid_mst + "' where pc.pur_type" +
                                " = 'NPI' and substr(pc.type, 1, 1) = '4') a group by(a.vch_num, a.icode, a.type, a.so_qty,a.po_no, a.vch_date, a.date1,a.acode,a.client_id," +
                                "a.client_unit_id)) pc on pc.icode = it.icode inner join clients_mst cl on cl.vch_num = pc.acode and cl.type='BCD' and substr(cl.vch_num,0,3)='303' and cl.client_unit_id=pc.client_unit_id left join master_setting um on um.master_id = it.uom and um.type = 'UMM' " +
                                "and find_in_set(um.client_unit_id, it.client_unit_id)= 1 left join master_setting hsn on hsn.master_id = it.hsno and hsn.type " +
                                "= 'HSN' and find_in_set(hsn.client_unit_id, it.client_unit_id)= 1 where it.type='IT' " +
                                "and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 and it.sale='Y' " + condi + " " + where + "";
                            break;
                    }
                    break;
                #endregion
                #region gate in
                case "g_in":
                    switch (btnval.ToUpper())
                    {

                        case "VIEW":
                            cmd = "select (client_id||client_unit_id||vch_num||to_char(vch_date,'yyyymmdd')||type) as fstr ,vch_num as doc_no," +
                                "to_char(date1,'" + sgen.Getsqldateformat() + "') as doc_date,col12 as person_name,col14 as buyer_ref_no," +
                                "col13  per_mob,col32 as vendor_name,col31 as vendor_add,col11 as gst_no,col21 as Document,col4 as ewaybill_no," +
                                "(case when to_char(date2,'" + sgen.Getsqldateformat() + "')='01/01/1900' then '-' else to_char(date2,'" + sgen.Getsqldateformat() + "') end) as eway_date," +
                                "col5 as Document_no,(case when to_char(date3,'" + sgen.Getsqldateformat() + "')='01/01/1900' then '-' else to_char(date3,'" + sgen.Getsqldateformat() + "') end) as Document_date," +
                                "col9 Document_value,col7 chl_no,(case when to_char(date4,'" + sgen.Getsqldateformat() + "')='01/01/1900' then '-' else to_char(date4,'" + sgen.Getsqldateformat() + "') end) as chl_date, " +
                                "col8 Number_Of_Pkt,col48 as Remark " +
                                "from kc_tab where type = 'GIN' and client_unit_id = '" + unitid_mst + "' " + xprdrange + "";

                            break;
                        case "PRINT":
                        case "EDIT":
                            cmd = "select (client_id||client_unit_id||vch_num||to_char(vch_date,'yyyymmdd')||type) as fstr ,vch_num as doc_no," +
                               "to_char(date1,'" + sgen.Getsqldateformat() + "') as doc_date,col12 as person_name,col14 as buyer_ref_no, col32 as vendor_name,col21 as Document," +
                               "col5 as Document_no,(case when to_char(date3,'" + sgen.Getsqldateformat() + "')='01/01/1900' then '-' else to_char(date3,'" + sgen.Getsqldateformat() + "') end) as Document_date," +
                               "col9 Document_value,col7 chl_no,col8 Number_Of_Pkt from kc_tab where type = 'GIN' and client_unit_id = '" + unitid_mst + "' " + xprdrange + "";
                            break;
                        case "PARTY":
                            //cmd = "select (a.client_id||a.client_unit_id||a.vch_num||a.vchdate||a.type||potype) as fstr,a.Invoice_Number,(case when substr(a.type,1,1)='4' then 'INVOICE' when substr(a.type,1,1)='6' then 'DISPATCH CHALLAN' end) as Document,a.Invoice_Date,c.c_name as Party_Name,c.c_gstin as Party_Gstin,c.addr as Party_Address from(select p.client_id, p.client_unit_id, p.vch_num, to_char(p.vch_date, 'yyyymmdd') vchdate, p.type, p.potype, p.vch_num Invoice_Number,to_char(p.vch_date, '" + sgen.Getsqldateformat() + "') Invoice_Date, acode from itransaction p  where p.client_id = '" + clientid_mst + "' and p.client_unit_id = '" + unitid_mst + "' and SUBSTR(p.type, 1, 1) = '4' and substr(p.potype, 1, 1) = '5' union all select d.client_id, d.client_unit_id, d.vch_num, to_char(d.vch_date, 'yyyymmdd') vchdate, d.type, d.type2, d.vch_num Invoice_Number, to_char(d.vch_date, '" + sgen.Getsqldateformat() + "') Invoice_Date, acode from itransaction d where substr(d.type, 1, 1) = '6' and substr(d.type2, 1, 1) = '4' and d.client_id = '" + clientid_mst + "' and d.client_unit_id = '" + unitid_mst + "') a inner join clients_mst c on a.acode = c.vch_num and c.client_id = a.client_id and c.client_unit_id = a.client_unit_id and c.type = 'BCD' where a.client_id = '" + clientid_mst + "' and a.client_unit_id = '" + unitid_mst + "'";
                            cmd = "select (a.vch_num|| to_char(a.vch_date,'yyyymmdd')||a.type) as fstr ,a.vch_num vendor_code,a.c_name as Vendor_Name,a.addr address,a.pincode as Pincode,a.c_gstin as GSTIN " +
                                "from clients_mst a where find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 and a.type = 'BCD' and substr(a.vch_num,0,3) in ('303','203') ";
                            break;
                        case "DOC":
                            if (sgen.GetSession(MyGuid, "BGINPARTY") != null) { cond = " where a.ptcode='" + sgen.GetSession(MyGuid, "BGINPARTY").ToString() + "'"; }
                            else
                            {
                                cond = "";
                            }
                            cmd = "select a.fstr,a.Doc_no,a.Doc_Date,a.type,(case when a.type='22' then 'RGP CHALLAN' when a.type='54' then 'JOB WORK PO' when a.type " +
                                "IN ('50','52') then 'WITH PO' else '-' end) as doc_type from " +
                                "(select distinct (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) as fstr,p.type,p.vch_num Doc_no,p.acode as ptcode," +
                                "to_char(p.vch_date,'" + sgen.Getsqldateformat() + "') as Doc_Date from itransaction p where p.type='22' and" +
                                " p.client_unit_id='" + unitid_mst + "' union all select distinct " +
                                "(p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) as fstr,p.type,p.vch_num PO_Number,p.acode as ptcode," +
                                "to_char(p.vch_date,'" + sgen.Getsqldateformat() + "') PO_Date from purchases p where p.type in ('50','54','52') and " +
                                "p.client_unit_id='" + unitid_mst + "') a " + cond + "";
                            break;
                    }
                    break;
                #endregion
                #region gate Out
                case "g_out":
                    switch (btnval.ToUpper())
                    {
                        case "PRINT":
                        case "VIEW":
                        case "EDIT":
                            cmd = "select (client_id||client_unit_id||vch_num||to_char(vch_date,'yyyymmdd')||type) as fstr ,vch_num as doc_no," +
                                "to_char(date1,'" + sgen.Getsqldateformat() + "') as doc_date,col12 as person_name," +
                                "col13  per_mob,col32 as party_name,col31 as pty_add,col11 as gst_no,col21 as Document,to_char(date2,'" + sgen.Getsqldateformat() + "') as eway_date," +
                                "to_char(date3,'" + sgen.Getsqldateformat() + "') as inovice_date,to_char(date4,'" + sgen.Getsqldateformat() + "') as chl_date,col4 as ewaybill_no,col5 as inv_no,col7 chl_no, col8 Number_Of_Pkt,col9 inv_value " +
                                "from kc_tab where type = 'GOT' and client_unit_id = '" + unitid_mst + "' " + xprdrange + "";
                            break;
                        case "PARTY":
                            cmd = "select distinct (a.client_id||a.client_unit_id||a.vch_num||a.vchdate||a.type||potype) as fstr,a.Invoice_Number Document_no" +
                                ",(case when substr(a.type,1,1)='4' then 'INVOICE' when substr(a.type,1,1)='6' then 'DISPATCH CHALLAN' else '-' end) as Document," +
                                "a.Invoice_Date,c.c_name as Party_Name,c.c_gstin as Party_Gstin,c.addr as Party_Address from(select distinct p.client_id," +
                                " p.client_unit_id, p.vch_num, to_char(p.vch_date, 'yyyymmdd') vchdate, p.type, p.potype, p.vch_num Invoice_Number," +
                                "to_char(p.vch_date, '" + sgen.Getsqldateformat() + "') Invoice_Date, acode from itransaction p  where " +
                                " p.client_unit_id = '" + unitid_mst + "' and SUBSTR(p.type, 1, 1) = '4' and substr(p.potype, 1, 1) = '5' " +
                                "union all select distinct d.client_id, d.client_unit_id, d.vch_num, to_char(d.vch_date, 'yyyymmdd') vchdate," +
                                " d.type, d.type2, d.vch_num Invoice_Number, to_char(d.vch_date, '" + sgen.Getsqldateformat() + "') Invoice_Date, acode from" +
                                " itransaction d where substr(d.type, 1, 1) = '6' and substr(d.type2, 1, 1) = '4'" +
                                " and d.client_unit_id = '" + unitid_mst + "') a " +
                                "inner join clients_mst c on a.acode = c.vch_num and find_in_set(c.client_unit_id,a.client_unit_id)=1 " +
                                "and c.type = 'BCD' and substr(c.vch_num,0,3)='303' where " +
                                "a.client_unit_id = '" + unitid_mst + "' and a.Invoice_Number||a.type not in (select distinct col6||col5 from kc_tab where type='PGO' and client_unit_id='" + unitid_mst + "')";
                            break;
                    }
                    break;
                #endregion
                #region p_g_out
                case "p_g_out":
                    switch (btnval.ToUpper())
                    {
                        case "PRINT":
                        case "VIEW":
                        case "EDIT":
                            cmd = "select client_id||client_unit_id||vch_num||to_char(vch_date,'yyyymmdd')||type as fstr, vch_num as Doc_no," +
                                "to_char(vch_date,'" + sgen.Getsqldateformat() + "') as created_date,to_char(date1,'" + sgen.Getsqldateformat() + "') as Doc_date,to_char(date2,'" + sgen.Getsqldateformat() + "') as Closer_date" +
                                ",to_char(date3, '" + sgen.Getsqldateformat() + "') as Document_date,col10 as remark,col5 as doc_type,col6 as document_no," +
                                "col8 as party,col9 as doc_value from kc_tab where type = 'PGO' and " +
                                "client_unit_id = '" + unitid_mst + "' " + xprdrange + "";
                            break;
                        case "ITEM":
                            if (param1 != null) { if (param1 != "") where = " and a.vch_num||c.c_name not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','").Trim().ToString() + "')"; }
                            cmd = "select distinct (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type||a.potype) as fstr,a.vch_num Invoice_Number," +
                                "to_char(a.vch_date, '" + sgen.Getsqldateformat() + "') Invoice_Date,a.netamt,c.c_name as Party_Name,c.c_gstin as Party_Gstin,c.addr as Party_Address from " +
                                "itransaction a inner join clients_mst c on a.acode = c.vch_num and find_in_set(c.client_unit_id,a.client_unit_id)=1 and" +
                                " c.type = 'BCD' and substr(c.vch_num,0,3)='303' where a.client_unit_id = '" + unitid_mst + "' and SUBSTR(a.type, 1, 1) = '4' and " +
                                "substr(a.potype,1,1)= '5' and a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.type not in (select col5 || to_char(date3, 'yyyymmdd') || col42 " +
                                "from kc_tab kt where kt.type = 'GOT' and kt.client_unit_id = '" + unitid_mst + "') and a.vch_num||a.type" +
                                " not in (select distinct col6||col5 from kc_tab where type = 'PGO' and client_unit_id = '" + unitid_mst + "')" + where + "";
                            break;
                    }
                    break;
                #endregion
                #region p_g_in
                case "p_g_in":
                    switch (btnval.ToUpper())
                    {
                        case "PRINT":
                        case "VIEW":
                        case "EDIT":
                            cmd = "select client_id||client_unit_id||vch_num||to_char(vch_date,'yyyymmdd')||type as fstr, vch_num as Doc_no," +
                                "to_char(vch_date,'" + sgen.Getsqldateformat() + "') as created_date,to_char(date1,'" + sgen.Getsqldateformat() + "') as Doc_date,to_char(date2,'" + sgen.Getsqldateformat() + "') as Closer_date" +
                                ",to_char(date3, '" + sgen.Getsqldateformat() + "') as Document_date,col10 as remark,col5 as doc_type,col6 as document_no," +
                                "col8 as party,col9 as doc_value from kc_tab where type = 'PGN' and " +
                                "client_unit_id = '" + unitid_mst + "' " + xprdrange + "";
                            break;
                        case "ITEM":
                            if (param1 != null) { if (param1 != "") where = " and vch_num||col32 not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','").Trim().ToString() + "')"; }
                            cmd = "select distinct (client_id||client_unit_id||vch_num||to_char(vch_date,'yyyymmdd')||type) as fstr,vch_num as doc_no," +
                                "to_char(date1,'" + sgen.Getsqldateformat() + "') as doc_date,col12 as person_name,col13 per_mob, col32 as party_name,col31 as pty_add,col11 as gst_no" +
                                ",col21 as Document,to_char(date3, '" + sgen.Getsqldateformat() + "') as Document_date,to_char(date4, '" + sgen.Getsqldateformat() + "') as chl_date,col5 as Document_no" +
                                ",col9 Doc_value from kc_tab where type = 'GIN' and" +
                                " client_unit_id = '" + unitid_mst + "' and client_id|| vch_num || type not in (select gatein_no from itransaction where" +
                                " type in ('01', '03', '02', '05', '09') and client_unit_id = '" + unitid_mst + "' and " +
                                "gatein_no is not null and gatein_no<> '0') and client_id||vch_num||type not in (select client_id || col6 || col5 from kc_tab where" +
                                " type = 'PGN' and client_unit_id = '" + unitid_mst + "') " + where + " and vch_date <= to_date('" + year_to + "','" + sgen.Getsqldatetimeformat() + "')";
                            break;
                    }
                    break;
                #endregion
                #region close pending
                case "p_close":
                    switch (btnval.ToUpper())
                    {
                        case "VIEW":
                        case "EDIT":
                            switch (sgen.GetSession(MyGuid, "MENUID").ToString())
                            {
                                case "21009.4"://pending so
                                    cmd = "select (client_id||client_unit_id||vch_num||to_char(vch_date,'yyyymmdd')||type) as fstr, vch_num as doc_no," +
                                        "to_char(vch_date,'" + sgen.Getsqldateformat() + "') as doc_date,col7 as icode,col8 iname,col9 partno,col10 bal_qty,col11 close_qty," +
                                        "col12 as Document_No,to_char(date1,'" + sgen.Getsqldateformat() + "') as Document_date,col13 as remark from enx_tab where type='CPS' " +
                                        "and client_unit_id = '" + unitid_mst + "' " + xprdrange + "";
                                    break;
                                case "17003.8"://pending mrs
                                    cmd = "select (client_id||client_unit_id||vch_num||to_char(vch_date,'yyyymmdd')||type) as fstr, vch_num as doc_no," +
                                        "to_char(vch_date,'" + sgen.Getsqldateformat() + "') as doc_date,col7 as icode,col8 as iname,col9 as partno,col10 as bal_qty,col11 close_qty," +
                                        "col12 as Document_No,to_char(date1,'" + sgen.Getsqldateformat() + "') as Document_date,col13 as remark from enx_tab " +
                                        "where type = 'CPM' and client_unit_id = '" + unitid_mst + "' " + xprdrange + "";
                                    break;
                                case "17003.9"://pending dispatch
                                    cmd = "select (client_id||client_unit_id||vch_num||to_char(vch_date,'yyyymmdd')||type) as fstr, vch_num as doc_no," +
                                        "to_char(vch_date,'" + sgen.Getsqldateformat() + "') as doc_date,col7 as icode,col8 as iname,col9 as partno,col10 as bal_qty,col11 as close_qty," +
                                        "col12 as Document_No,to_char(date1,'" + sgen.Getsqldateformat() + "') as Document_date,col13 as remark from enx_tab " +
                                        "where type = 'CPC' and client_unit_id = '" + unitid_mst + "' " + xprdrange + "";
                                    break;
                                case "17004.2":
                                    //  model[0].Col9 = "CLOSE PENDING INDENT";
                                    cmd = "select (client_id||client_unit_id||vch_num||to_char(vch_date,'yyyymmdd')||type) as fstr, vch_num as doc_no," +
                                        "to_char(vch_date,'" + sgen.Getsqldateformat() + "') as doc_date,col7 as icode,col8 as iname,col9 as partno,col10 as bal_qty,col11 as close_qty," +
                                        "col12 as Document_No,to_char(date1,'" + sgen.Getsqldateformat() + "') as Document_date,col13 as remark from enx_tab " +
                                        "where type = 'CPI' and client_unit_id = '" + unitid_mst + "' " + xprdrange + "";
                                    break;
                                case "17002.6":
                                    // model[0].Col9 = "CLOSE PENDING MRN";
                                    cmd = "select (client_id||client_unit_id||vch_num||to_char(vch_date,'yyyymmdd')||type) as fstr, vch_num as doc_no," +
                                        "to_char(vch_date,'" + sgen.Getsqldateformat() + "') as doc_date,col7 as icode,col8 as iname,col9 as partno,col10 as bal_qty,col11 as close_qty," +
                                        "col12 as Document_No,to_char(date1,'" + sgen.Getsqldateformat() + "') as Document_date,col13 as remark from enx_tab " +
                                        "where type = 'CMR' and client_unit_id = '" + unitid_mst + "' " + xprdrange + "";
                                    break;
                                case "21002.3":
                                    //pending schedule
                                    cmd = "select (client_id||client_unit_id||vch_num||to_char(vch_date,'yyyymmdd')||type) as fstr, vch_num as doc_no," +
                                        "to_char(vch_date,'" + sgen.Getsqldateformat() + "') as doc_date,col7 as icode,col8 as iname,col9 as partno,col10 as bal_qty,col11 as close_qty," +
                                        "col12 as Document_No,to_char(date1,'" + sgen.Getsqldateformat() + "') as Document_date,col13 as remark from enx_tab " +
                                        "where type = 'CPD' and client_unit_id = '" + unitid_mst + "' " + xprdrange + "";
                                    break;
                                case "28002.3":
                                    // "CLOSE PENDING PUR ORDER";
                                    cmd = "select (client_id||client_unit_id||vch_num||to_char(vch_date,'yyyymmdd')||type) as fstr, vch_num as doc_no," +
                                        "to_char(vch_date,'" + sgen.Getsqldateformat() + "') as doc_date,col7 as icode,col8 as iname,col9 as partno,col10 as bal_qty,col11 as close_qty," +
                                        "col12 as Document_No,to_char(date1,'" + sgen.Getsqldateformat() + "') as Document_date,col13 as remark from enx_tab " +
                                        "where type = 'POR' and client_unit_id = '" + unitid_mst + "' " + xprdrange + "";
                                    break;
                                case "39008.2":
                                    //model[0].Col9 = "CLOSE PENDING PRD ORDER";
                                    cmd = "select (client_id||client_unit_id||vch_num||to_char(vch_date,'yyyymmdd')||type) as fstr, vch_num as doc_no," +
                                        "to_char(vch_date,'" + sgen.Getsqldateformat() + "') as doc_date,col7 as icode,col8 as iname,col9 as partno,col10 as bal_qty,col11 as close_qty," +
                                        "col12 as Document_No,to_char(date1,'" + sgen.Getsqldateformat() + "') as Document_date,col13 as remark from enx_tab " +
                                        "where type = 'COR' and client_unit_id = '" + unitid_mst + "' " + xprdrange + "";
                                    break;
                                case "21009.6":
                                    //model[0].Col9 = "CLOSE PENDING PI";
                                    cmd = "select (client_id||client_unit_id||vch_num||to_char(vch_date,'yyyymmdd')||type) as fstr, vch_num as doc_no," +
                                        "to_char(vch_date,'" + sgen.Getsqldateformat() + "') as doc_date,col7 as icode,col8 as iname,col9 as partno,col10 as bal_qty,col11 as close_qty," +
                                        "col12 as Document_No,to_char(date1,'" + sgen.Getsqldateformat() + "') as Document_date,col13 as remark from enx_tab " +
                                        "where type = 'PRI' and client_unit_id = '" + unitid_mst + "' " + xprdrange + "";
                                    break;
                                case "21009.7":
                                    //model[0].Col9 = "CLOSE PENDING QUOT";
                                    cmd = "select (client_id||client_unit_id||vch_num||to_char(vch_date,'yyyymmdd')||type) as fstr, vch_num as doc_no," +
                                        "to_char(vch_date,'" + sgen.Getsqldateformat() + "') as doc_date,col7 as icode,col8 as iname,col9 as partno,col10 as bal_qty,col11 as close_qty," +
                                        "col12 as Document_No,to_char(date1,'" + sgen.Getsqldateformat() + "') as Document_date,col13 as remark from enx_tab " +
                                        "where type = 'CPQ' and client_unit_id = '" + unitid_mst + "' " + xprdrange + "";
                                    break;
                            }
                            break;
                        case "DOCNO":
                            if (sgen.GetSession(MyGuid, "MENUID").ToString() == null)
                            {
                                sgen.SetSession(MyGuid, "MENUID", mid_mst);
                            }
                            switch (sgen.GetSession(MyGuid, "MENUID").ToString())
                            {
                                case "21009.4":
                                    //close pending so
                                    cmd = "select distinct (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr, " +
                                      "a.vch_num as so_no,c.c_name as Party_Name,c.c_gstin as Party_Gstin,c.addr as Party_Address from purchasesc " +
                                      "a inner join clients_mst c on a.acode = c.vch_num and " +
                                      "find_in_set(c.client_unit_id,a.client_unit_id)=1 and c.type = 'BCD' and substr(c.vch_num,0,3)='303' " +
                                      "where a.client_unit_id = '" + unitid_mst + "' and substr(a.type,1,1)='4' and a.pur_type = 'NPI'";
                                    break;
                                case "17003.8":
                                    // model[0].Col9 = "CLOSE PENDING MRS";
                                    cmd = "select distinct (a.client_id|| a.client_unit_id || a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.type) as fstr,a.vch_num as mrs_no," +
                                        "to_char(a.vch_date, '" + sgen.Getsqldateformat() + "') as mrs_date" +
                                        " from itransactionc a where UPPER(a.type) in ('3A', '3B') and a.client_unit_id = '" + unitid_mst + "'";
                                    break;
                                case "17003.9":
                                    // model[0].Col9 = "CLOSE PENDING dispatch";
                                    cmd = "select distinct (a.client_id|| a.client_unit_id || a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.type) as fstr,a.vch_num as dsp_no," +
                                        "to_char(a.vch_date, '" + sgen.Getsqldateformat() + "') as dsp_date ,a.type" +
                                        " from itransaction a where substr(a.type,1,1)='6' and substr(a.type2,1,1)='4' and a.client_unit_id = '" + unitid_mst + "'";
                                    break;
                                case "17004.2":
                                    //  model[0].Col9 = "CLOSE PENDING INDENT";
                                    cmd = "select distinct (client_id||client_unit_id||vch_num||to_char(vch_date,'yyyymmdd')||type) as fstr,vch_num as indent_no," +
                                        "to_char(vch_date, '" + sgen.Getsqldateformat() + "')  as indent_date from purchases where type in ('66') and client_unit_id = '" + unitid_mst + "'";
                                    break;
                                case "17002.6":
                                    // model[0].Col9 = "CLOSE PENDING MRN";
                                    break;
                                case "21002.3":
                                    //schedule
                                    cmd = "select distinct (dsc.client_id||dsc.client_unit_id||dsc.vch_num||to_char(dsc.vch_date,'yyyymmdd')||dsc.type) as fstr," +
                                        "dsc.vch_num as shedule_no,to_char(dsc.date1, '" + sgen.Getsqldateformat() + "') as sdl_date," +
                                        "a.c_name as Party_Name from kc_tab dsc " +
                                        "inner join clients_mst a on dsc.col1 = a.vch_num and a.type = 'BCD' and substr(a.vch_num,0,3)='303' and" +
                                        " find_in_set(dsc.client_unit_id,a.client_unit_id)=1 and find_in_set(dsc.client_id,a.client_id)=1 " +
                                        "where dsc.client_unit_id = '" + unitid_mst + "' and dsc.col20='DSC' and dsc.type = '40'";
                                    break;
                                case "28002.3":
                                    // "CLOSE PENDING PUR ORDER";
                                    cmd = "select distinct(a.client_id|| a.client_unit_id || a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.type) as fstr,a.vch_num as Po_no," +
                                        "to_char(a.vch_date,'" + sgen.Getsqldateformat() + "') as po_dtate from purchases a where a.client_unit_id = '" + unitid_mst + "'" +
                                        " and a.type in ('50', '52')";
                                    break;
                                case "39008.2":
                                    //model[0].Col9 = "CLOSE PENDING PRD ORDER";
                                    cmd = "SELECT distinct (w.client_id||w.client_unit_id||w.vch_num||to_char(w.vch_date,'yyyymmdd')||w.type) fstr, w.vch_num as Doc_no," +
                                        "to_char(w.vch_date,'" + sgen.Getsqldateformat() + "') as doc_date from kc_tab w where w.type = 'PSO' and w.client_unit_id = '" + unitid_mst + "' ";
                                    break;
                                case "21009.6":
                                    //CLOSE PENDING PI
                                    cmd = "select distinct (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.pur_type),p.vch_num as Doc_no," +
                                        "to_char(p.vch_date,'" + sgen.Getsqldateformat() + "') as doc_date from itransactionc p where SUBSTR(p.type,1,1)= '4' and p.pur_type = 'BPI' and p.client_unit_id = '" + unitid_mst + "' ";
                                    break;
                                case "21009.7":
                                    //CLOSE PENDING QUOTATION
                                    cmd = "select distinct (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.pur_type),p.vch_num as Doc_no," +
                                        "to_char(p.vch_date,'" + sgen.Getsqldateformat() + "') as doc_date from itransactionc p where SUBSTR(p.type,1,1)= '4' and p.pur_type = 'QTN' and p.client_unit_id = '" + unitid_mst + "' ";
                                    break;
                            }
                            break;
                        case "ITEM":
                            switch (sgen.GetSession(MyGuid, "MENUID").ToString())
                            {
                                case "21009.4":
                                    if (param1 != "" && param1 != "-") where = " and (it.icode || pc.vch_num) not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','") + "')";
                                    string cond2 = " and pc.vch_num in ('" + sgen.GetSession(MyGuid, "DOCSO").ToString().Trim().TrimEnd(',').Replace(",", "','").Trim().ToString() + "')";
                                    cmd = "select (it.icode || pc.type || pc.vch_num || to_char(it.vch_date, 'yyyymmdd') || it.type) as fstr,it.icode as " +
                           "Icode,it.iname as Iname,it.cpartno Partno,cl.c_name as Party,nvl(pc.bal_qty, '0') as Order_qty,pc.po_no as po_no," +
                           "to_char(pc.date1, '" + sgen.Getsqldateformat() + "') as po_date,to_char(pc.vch_date, '" + sgen.Getsqldateformat() + "') as so_date,pc.vch_num as so_no from item it inner join " +
                           "(select a.po_no, a.vch_num, a.icode, a.type, a.so_qty,a.vch_date, a.date1,a.acode,a.client_id,a.client_unit_id,nvl(sum(a.invoice_qty), '0') " +
                           "as used_qty,a.so_qty - nvl(sum(a.invoice_qty), '0') as bal_qty from (select pc.vch_num, pc.gothrchrg as po_no, pc.date1, pc.vch_date, pc.icode," +
                           " pc.type, pc.qtyord as so_qty,iv.qtyout as invoice_qty,pc.acode,pc.client_id,pc.client_unit_id from purchasesc pc left join itransaction iv on " +
                           "iv.sono = pc.vch_num and iv.potype = '51' and pc.icode=iv.icode and iv.client_unit_id = pc.client_unit_id where " +
                           "pc.pur_type = 'NPI' and substr(pc.type, 1, 1) = '4' and pc.client_unit_id = '" + unitid_mst + "' union all select pc.vch_num, " +
                           "pc.gothrchrg as po_no, pc.date1, pc.vch_date, pc.icode, pc.type, pc.qtyord as so_qty, dp.qtyout as dsp_qty,pc.acode,pc.client_id,pc.client_unit_id " +
                           "from purchasesc pc left join itransaction dp on dp.VEHNO = pc.vch_num and dp.type = '60' and pc.icode=dp.icode and " +
                           "dp.client_unit_id = pc.client_unit_id where pc.pur_type = 'NPI' and substr(pc.type, 1, 1) = '4' union all select pc.vch_num, pc.gothrchrg as po_no," +
                           "pc.date1,pc.vch_date, pc.icode, pc.type, pc.qtyord as so_qty, ds.col10 as dsp_qty,pc.acode,pc.client_id,pc.client_unit_id from purchasesc pc left" +
                           " join kc_tab ds on ds.col13 = pc.vch_num and pc.icode=ds.col5 and ds.col20 = 'DSC' and ds.client_unit_id" +
                           " =pc.client_unit_id where pc.pur_type = 'NPI' and substr(pc.type, 1, 1) = '4' union all select pc.vch_num, pc.gothrchrg as po_no, pc.date1, " +
                           "pc.vch_date, pc.icode, pc.type, pc.qtyord as so_qty,co.col11 as invoice_qty,pc.acode,pc.client_id,pc.client_unit_id from purchasesc pc left join " +
                           "enx_tab co on co.col7=pc.icode and pc.vch_num = co.col5 and co.type='CPS' and co.client_id='" + clientid_mst + "' and co.client_unit_id='" + unitid_mst + "' where pc.pur_type" +
                           " = 'NPI' and substr(pc.type, 1, 1) = '4') a group by(a.vch_num, a.icode, a.type, a.so_qty,a.po_no, a.vch_date, a.date1,a.acode,a.client_id," +
                           "a.client_unit_id)) pc on pc.icode = it.icode " + cond2 + " inner join clients_mst cl on cl.vch_num = pc.acode and cl.type='BCD' and substr(cl.vch_num,0,3)='303' " +
                           "and cl.client_unit_id=pc.client_unit_id where it.type='IT' and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 and it.sale='Y' and nvl(pc.bal_qty,'0') > 0 " + where + "";
                                    //cmd = "select distinct (it.client_id||it.client_unit_id||it.icode|| pc.type|| pc.vch_num ||to_char(it.vch_date,'yyyymmdd')||it.type) as fstr,pc.type," +
                                    //    "it.icode as Icode,it.iname as Iname,it.cpartno Partno, cl.c_name as Party,s.closing as qty_in_stock," +
                                    //    "to_char(pc.vch_date, '" + sgen.Getsqldateformat() + "') as so_date,pc.vch_num as so_no from item it " +
                                    //    "inner join purchasesc pc on pc.icode = it.icode and pc.pur_type = 'NPI' and pc.client_unit_id = it.client_unit_id and pc.client_id = " +
                                    //    "it.client_id and pc.INDNO = 'fix' inner join clients_mst cl on cl.vch_num = pc.acode and cl.type = 'BCD' and " +
                                    //    "cl.client_unit_id = pc.client_unit_id and cl.client_id = pc.client_id " + cond2 + " left join(select t.client_unit_id, t.icode, sum(nvl(t.qtyin,0)) " +
                                    //    "as Received,sum(nvl(t.qtyout, 0)) as Issued,sum(nvl(t.qtyin, 0)) - sum(nvl(t.qtyout, 0)) as closing from itransaction t where " +
                                    //    "trim(t.store) = 'Y' group by t.icode,t.client_unit_id ) s on it.icode = s.icode and it.client_unit_id = s.client_unit_id " +
                                    //    "where it.type = 'IT' and it.client_id = '" + clientid_mst + "' and it.client_unit_id = '" + unitid_mst + "' and " +
                                    //    "it.sale = 'Y' ";
                                    break;
                                case "17003.8":
                                    // model[0].Col9 = "CLOSE PENDING MRS";
                                    //  if (param1 != "") { if (param1 != "-") { where = " and (it.icode || pc.vch_num) not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','") + "')"; } }
                                    if (param1 != "" && param1 != "-") where = " and (it.icode||mr.vch_num) not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','") + "')";

                                    cond2 = " and mr.vch_num in ('" + sgen.GetSession(MyGuid, "DOCSO").ToString().Trim().TrimEnd(',').Replace(",", "','").Trim().ToString() + "')";
                                    cmd = "select (mr.vch_num||it.icode||mr.type||to_char(it.vch_date,'yyyymmdd')||it.type) as fstr," +
                                        " mr.icode,it.iname, it.cpartno PartNo,(case when mr.type='3A' then 'With WO' when mr.type='3B' then 'WIthout WO' else '-' end) as Mrs_type,mr.vch_num mrs_no,to_char(mr.vch_date,'" + sgen.Getsqldateformat() + "') Req_Date,um.master_name as uom," +
                                        "dp.master_name Dept,dg.master_name Desig,nvl(s.closing,'0') as qty_in_stock,mr.Qty_Req,mr.issued_qty,mr.bal_qty from item " +
                                        "it inner join (select distinct a.vch_num,a.type,a.icode,a.client_id,a.client_unit_id,a.vch_date,a.Qty_Req,a.desig,a.deptno," +
                                        "sum(a.issued_qty) as issued_qty,(a.Qty_Req - nvl(sum(a.issued_qty), '0')) as bal_qty from(select mr.vch_num" +
                                        ",mr.type,mr.icode,mr.client_id,mr.client_unit_id,mr.vch_date,mr.desig,mr.deptno, mr.qtychl Qty_Req,nvl(iv.qtyout,'0')" +
                                        " as issued_qty from itransactionc mr left join itransaction iv on iv.icode=mr.icode and iv.chlno = mr.vch_num and iv.type" +
                                        " = '32' and iv.client_unit_id = '" + unitid_mst + "'  " +
                                        "where upper(mr.type) in ('3A', '3B') and mr.client_unit_id = '" + unitid_mst + "'" +
                                        " union all select mr.vch_num,mr.type,mr.icode,mr.client_id,mr.client_unit_id,mr.vch_date,mr.desig,mr.deptno" +
                                        ",mr.qtychl Qty_Req,nvl(iv.col11,'0') as closed_qty from itransactionc mr left join enx_tab iv on iv.col7=mr.icode and" +
                                        " iv.col12 = mr.vch_num and iv.type = 'CPM' and iv.client_unit_id = '" + unitid_mst + "'  where upper(mr.type) " +
                                        "in ('3A', '3B') and mr.client_unit_id = '" + unitid_mst + "') a group " +
                                        "by(a.vch_num,a.type,a.icode,a.client_id,a.client_unit_id,a.vch_date,a.desig,a.deptno,a.Qty_Req)) mr on mr.icode=it.icode" +
                                        " and find_in_set(mr.client_unit_id,it.client_unit_id)=1 and mr.bal_qty > 0 inner join" +
                                        " master_setting dp on dp.master_id = mr.deptno and dp.type = 'MDP' " +
                                        " and find_in_set(dp.client_unit_id,'" + unitid_mst + "')= 1 inner join master_setting dg on dg.master_id = mr.desig" +
                                        " and dg.type = 'MDG' and find_in_set(dg.client_unit_id, " +
                                        "'" + unitid_mst + "') = 1 left join master_setting um on um.master_id = it.uom and um.type = 'UMM' " +
                                        "and find_in_set(um.client_unit_id, it.client_unit_id)= 1 left " +
                                        "join(select t.client_unit_id, t.icode, sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout, 0)) as Issued," +
                                        "sum(nvl(t.qtyin, 0)) - sum(nvl(t.qtyout, 0)) as closing from itransaction t where trim(t.store) = 'Y' group" +
                                        " by t.icode,t.client_unit_id ) s on it.icode = s.icode and find_in_set(s.client_unit_id,it.client_unit_id)=1" +
                                        " where it.type='IT' and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 " +
                                        "" + cond2 + " " + where + "";
                                    //cmd = "select(mr.client_id || mr.client_unit_id || mr.vch_num || it.icode || to_char(mr.vch_date, 'yyyymmdd') || mr.type)" +
                                    //    " fstr,mr.vch_num MrsNo, to_char(convert_tz(mr.vch_date, 'UTC', '+05:30'), '" + sgen.Getsqldateformat() + "') as Req_Date," +
                                    //    "it.icode Icode, it.iname Iname, it.cpartno PartNo," +
                                    //    "mr.qtychl Qty_Req, nvl(a.used_qty, '0') Qty_issue" +
                                    //    ",(mr.qtychl - nvl(a.used_qty, 0)) Qty_Req_bal,mr.pono Order_Id from itransactionc mr" +
                                    //    " inner join item it on mr.icode = it.icode and it.type = 'IT' and mr.client_id = it.client_id and mr.client_unit_id = it.client_unit_id " +
                                    //    "left join(select sum(qtyout) as used_qty,icode,chlno,client_id,client_unit_id,to_char(chldate, 'ddmmyyyy') as chldate from itransaction " +
                                    //    "where type = '32' group by icode,chlno,client_id,client_unit_id,to_char(chldate, 'ddmmyyyy')) a on mr.icode = a.icode and " +
                                    //    "mr.vch_num = a.chlno and a.client_id = mr.client_id and a.client_unit_id = mr.client_unit_id and a.chldate = " +
                                    //    "to_char(mr.vch_date, 'ddmmyyyy') where upper(mr.type) in ('3A', '3B') and mr.client_id = '" + clientid_mst + "' and mr.client_unit_id = '" + unitid_mst + "' " + cond2 + "" +
                                    //    " and(mr.qtychl - nvl(a.used_qty, 0)) > 0";
                                    break;
                                case "17003.9":
                                    // model[0].Col9 = "CLOSE PENDING dispatch";
                                    if (param1 != "" && param1 != "-") where = " and (it.icode || pc.dsp_no ) not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','") + "')";
                                    cond2 = " and pc.dsp_no in ('" + sgen.GetSession(MyGuid, "DOCSO").ToString().Trim().TrimEnd(',').Replace(",", "','").Trim().ToString() + "')";
                                    cmd = "select distinct (it.icode || pc.type || pc.dsp_no || to_char(it.vch_date, 'yyyymmdd') || it.type) fstr," +
                                        "it.icode as icode,pc.dsp_no,pc.dsp_date,it.iname as iname,cl.c_name as Party_Name,it.cpartno partno,pc.type,pc.dsp_qty,pc.bal_qty as bal_qty from item it " +
                                        "inner join (select a.dsp_no,a.po_no,a.sdl_no,a.so_no,a.type,a.type2, a.icode,a.acode,a.client_id,a.client_unit_id,a.dsp_date,a.po_date,a.sdl_date," +
                                        "a.so_date,a.dsp_qty, sum(a.inv_qty) as inv_qty,(a.dsp_qty - nvl(sum(a.inv_qty), '0')) as bal_qty from(select distinct ds.vch_num as dsp_no,ds.type," +
                                        "ds.type2,ds.acode,ds.icode,ds.client_id,ds.client_unit_id,to_char(ds.vch_date, '" + sgen.Getsqldateformat() + "') dsp_date,to_char(ds.chldate, '" + sgen.Getsqldateformat() + "') po_date," +
                                        "to_char(ds.ewaydate, '" + sgen.Getsqldateformat() + "') sdl_date,to_char(ds.invdate, '" + sgen.Getsqldateformat() + "') so_date,ds.tmode as po_no,ds.gdisc as sdl_no,ds.vehno as so_no," +
                                        "ds.qtyout as dsp_qty,nvl(iv.qtyout,'0') as inv_qty from itransaction ds left join itransaction iv on iv.dspno = ds.vch_num and " +
                                        "iv.potype = '53' and iv.icode=ds.icode and iv.client_unit_id = ds.client_unit_id where " +
                                        "substr(ds.type,1,1)='6' and substr(ds.type2,1,1)='4' and ds.client_unit_id = '" + unitid_mst + "' union all " +
                                        "select distinct ds.vch_num as dsp_no,ds.type,ds.type2,ds.acode,ds.icode,ds.client_id,ds.client_unit_id,to_char(ds.vch_date, '" + sgen.Getsqldateformat() + "') dsp_date," +
                                        "to_char(ds.chldate, '" + sgen.Getsqldateformat() + "') po_date,to_char(ds.ewaydate, '" + sgen.Getsqldateformat() + "') sdl_date,to_char(ds.invdate, '" + sgen.Getsqldateformat() + "') so_date,ds.tmode as po_no,ds.gdisc sdl_no," +
                                        "ds.vehno as so_no,ds.qtyout as dsp_qty,nvl(co.col11, '0') as close_qty from itransaction ds inner join enx_tab co on co.col7 = ds.icode and ds.vch_num = co.col12 and " +
                                        "co.type = 'CPC' and co.client_unit_id = '" + unitid_mst + "' where substr(ds.type, 1, 1) = '6' and substr(ds.type2,1,1)= '4' and ds.client_unit_id = '" + unitid_mst + "') a group by(a.dsp_no,a.po_no,a.sdl_no,a.so_no,a.type,a.type2, a.icode,a.acode,a.client_id,a.client_unit_id,a.dsp_date, a.po_date,a.sdl_date,a.so_date, a.dsp_qty)) pc on pc.icode = it.icode " + cond2 + " inner join clients_mst cl on cl.vch_num = pc.acode and cl.type = 'BCD' and substr(cl.vch_num,0,3)='303' and find_in_set(cl.client_unit_id,pc.client_unit_id)=1 and find_in_set(cl.client_id,pc.client_id)=1 " +
                                        "where find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 and it.type='IT' and it.sale='Y' " + where + "";
                                    break;
                                case "17004.2":
                                    if (param1 != "" && param1 != "-") where = " and (it.icode||pc.ind_no) not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','") + "')";

                                    cond2 = " and pc.ind_no in ('" + sgen.GetSession(MyGuid, "DOCSO").ToString().Trim().TrimEnd(',').Replace(",", "','").Trim().ToString() + "')";
                                    cmd = "select distinct (it.icode||to_char(it.vch_date,'yyyymmdd')||it.type||pc.ind_no||to_char(pc.vch_date, 'yyyymmdd')) fstr,pc.ind_no,to_char(pc.vch_date, '" + sgen.Getsqldateformat() + "') as ind_date,pc.icode as Icode,it.iname as Iname,it.cpartno Partno, um.master_name as UOM,hsn.master_name as hsn,hsn.group_name taxrate, pc.type,pc.ind_qty,pc.Bal_qty from item it inner join(select a.ind_no, a.vch_date, a.type, a.icode, a.client_id, a.client_unit_id, a.ind_qty, sum(a.po_qty) as used,(a.ind_qty - nvl(sum(a.po_qty), '0')) as Bal_qty from(select nd.vch_num as ind_no, nd.vch_date, nd.type, nd.icode, nd.client_id,nd.client_unit_id, nd.qtyord as ind_qty, nvl(b.qtyord, '0') as po_qty from purchases nd left join purchases b on b.icode = nd.icode and b.indno = nd.vch_num and b.type not in ('66') and b.pur_type = '001' and nd.client_unit_id = b.client_unit_id where nd.type = '66' and nd.client_unit_id = '" + unitid_mst + "' union all select nd.vch_num as ind_no, nd.vch_date, nd.type, nd.icode, nd.client_id, nd.client_unit_id, nd.qtyord as ind_qty, nvl(b.col11, '0') as close_qty from purchases nd left join enx_tab b on b.col7 = nd.icode and b.col12 = nd.vch_num and b.type = 'CPI' and nd.client_unit_id = b.client_unit_id where nd.type = '66' and nd.client_unit_id = '" + unitid_mst + "') a group by(a.ind_no, a.vch_date, a.type, a.icode, a.client_id, a.client_unit_id, a.ind_qty)) pc on pc.icode = it.icode and find_in_set(pc.client_unit_id,it.client_unit_id)=1 " + cond2 + "  inner join master_setting um on um.master_id = it.uom and um.type = 'UMM' and find_in_set(um.client_unit_id,'" + unitid_mst + "')= 1 inner join master_setting hsn on hsn.master_id = it.hsno and hsn.type = 'HSN' and find_in_set(hsn.client_unit_id, '" + unitid_mst + "') = 1 " +
                                        "where it.type = 'IT' and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 " + where + "";
                                    break;
                                case "17002.6":
                                    //  model[0].Col9 = "CLOSE PENDING MRN";
                                    break;
                                case "21002.3":
                                    if (param1 != "" && param1 != "-") where = " and (it.icode|| pc.sdl_no) not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','") + "')";
                                    cond2 = " and pc.sdl_no in ('" + sgen.GetSession(MyGuid, "DOCSO").ToString().Trim().TrimEnd(',').Replace(",", "','").Trim().ToString() + "') ";
                                    //cmd = "select (it.client_id||it.client_unit_id||it.icode|| kt.col20||kt.col2 ||to_char(it.vch_date,'yyyymmdd')||it.type) as fstr," +
                                    //      "it.icode as Icode,it.iname as Iname,it.cpartno Partno,kt.col2 as shedule_no from" +
                                    //      " item it inner join kc_tab kt on kt.col5 = it.icode and kt.col20 = 'DSC' and kt.client_unit_id =" +
                                    //      " it.client_unit_id and kt.client_id = it.client_id inner join clients_mst cl on cl.vch_num =" +
                                    //      " kt.col1 and cl.type = 'BCD' and kt.client_unit_id = cl.client_unit_id and kt.client_id = " +
                                    //      "cl.client_id "+ cond2 + " where it.type = 'IT' and it.client_id = '" + clientid_mst + "' and" +
                                    //      " it.client_unit_id = '" + unitid_mst + "' and it.sale='Y'";
                                    cmd = "select distinct (it.icode || pc.col20 || pc.sdl_no || to_char(it.vch_date, 'yyyymmdd') || it.type) as fstr," +
                              "it.icode as icode,it.iname as iname,cl.c_name as party,pc.pending_sdl as Pending_sdl_qty,it.cpartno partno,to_char(pc.date5,'" + sgen.Getsqldateformat() + "') as po_date," +
                              "to_char(pc.date6,'" + sgen.Getsqldateformat() + "') as so_date,pc.col11 as po_no,pc.col13 as so_no,to_char(pc.date1,'" + sgen.Getsqldateformat() + "') sdl_date," +
                              "pc.sdl_no,nvl(s.closing, 0) as qty_in_stock from item it " +
                              "inner join (select a.sdl_no,a.typ, a.icode,a.col1,a.client_id,a.client_unit_id, a.col20, a.date1,a.date5, a.date6, a.col11, a.col13, a.sdl_qty," +
                              "sum(a.dsp_qty) as dsp_qty,(a.sdl_qty - nvl(sum(a.dsp_qty), '0')) as pending_sdl from(select ds.vch_num as sdl_no,ds.type typ,ds.col1,ds.client_id," +
                              "ds.client_unit_id, ds.col20,ds.date1,ds.date5, ds.date6,ds.col11, ds.col13,ds.col5 as icode, ds.col10 as sdl_qty,dp.qtyout as dsp_qty from kc_tab ds " +
                              "left join itransaction dp on dp.GDISC = ds.vch_num and dp.type = '61'  and dp.icode=ds.col5 and dp.client_unit_id = " +
                              "ds.client_unit_id where substr(ds.type,1,1)='4' and ds.col20='DSC' and ds.client_unit_id = '" + unitid_mst + "' union all select ds.vch_num " +
                              "as sdl_no,ds.type typ,ds.col1,ds.client_id,ds.client_unit_id, ds.col20,ds.date1,ds.date5, ds.date6, ds.col11, ds.col13, ds.col5 as icode,ds.col10 as " +
                              "sdl_qty, iv.qtyout as inv_qty from kc_tab ds left join itransaction iv on iv.sdlno = ds.vch_num and iv.potype = '52'  and iv.icode=ds.col5 and " +
                              "iv.client_unit_id = ds.client_unit_id where substr(ds.type,1,1)='4' and ds.col20='DSC' " +
                              "and ds.client_unit_id = '" + unitid_mst + "' union all select ds.vch_num as sdl_no,ds.type typ,ds.col1,ds.client_id,ds.client_unit_id,ds.col20,ds.date1,ds.date5," +
                              "ds.date6, ds.col11, ds.col13, ds.col5 as icode, ds.col10 as sdl_qty,co.col11 as close_qty from kc_tab ds left join enx_tab co on co.col7 = ds.col5 " +
                              "and ds.vch_num = co.col5 and co.type = 'CPD' and co.client_unit_id = '" + unitid_mst + "' where substr(ds.type,1,1)='4' and ds.col20='DSC' " +
                              "and ds.client_unit_id = '" + unitid_mst + "') a group by(a.sdl_no,a.typ, a.icode,a.col1,a.client_id,a.client_unit_id, a.col20,a.date1," +
                              "a.date5, a.date6, a.col11, a.col13, a.sdl_qty)) pc on pc.icode = it.icode " + cond2 + " left join(select t.client_unit_id, t.icode, sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout, 0)) as Issued,sum(nvl(t.qtyin, 0))" +
                              " - sum(nvl(t.qtyout, 0)) as closing from itransaction t where trim(t.store) = 'Y' group by t.icode,t.client_unit_id ) s on it.icode = s.icode" +
                              " and find_in_set(s.client_unit_id,it.client_unit_id)=1 " +
                              "inner join clients_mst cl on cl.vch_num = pc.col1 and find_in_set(cl.client_unit_id,pc.client_unit_id)=1 and cl.type = 'BCD' " + cond + "" +
                              " where find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 and it.type='IT' " + where + " and s.closing > 0 and it.sale='Y' " + where + "";
                                    break;
                                case "28002.3":
                                    if (param1 != "" && param1 != "-") where = " and (p.icode||p.vch_num) not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','") + "')";

                                    cond2 = " and p.vch_num in ('" + sgen.GetSession(MyGuid, "DOCSO").ToString().Trim().TrimEnd(',').Replace(",", "','").Trim().ToString() + "') ";
                                    cmd = "select (p.vch_num||p.icode||to_char(it.vch_date,'yyyymmdd')||it.type) as fstr, p.vch_num PO_Number," +
                                        "to_char(p.vch_date,'" + sgen.Getsqldateformat() + "') PO_Date,p.icode ICode,it.iname,it.cpartno PartNo" +
                                        ",um.master_name UOM,hsn.master_name HSN,location_name('" + clientid_mst + "'||'" + unitid_mst + "'||itb.loc) " +
                                        "as location,nvl(s.closing,'0') as stock,p.qtyord,p.bal_qty from item it inner join " +
                                        "(select a.vch_num,a.vch_date,a.type,a.acode,a.icode,a.client_id,a.client_unit_id ,a.qtyord, sum(a.inv_qty) " +
                                        "as inv_qty,(a.qtyord - nvl(sum(a.inv_qty), '0')) as bal_qty from(select po.vch_num,po.vch_date,po.type," +
                                        "po.acode,po.icode,po.client_id,po.client_unit_id,po.qtyord,nvl(iv.qtyrcvd,'0') as inv_qty from purchases po " +
                                        "left join itransaction iv on iv.pono = po.vch_num and to_char(iv.podate,'yyyymmdd')=" +
                                        "to_char(po.vch_date,'yyyymmdd') and iv.icode=po.icode and iv.type='02' and " +
                                        "iv.client_unit_id = po.client_unit_id where po.type in ('50','54','52') " +
                                        "and po.client_unit_id = '" + unitid_mst + "' union all select po.vch_num," +
                                        "po.vch_date,po.type,po.acode,po.icode,po.client_id,po.client_unit_id,po.qtyord,nvl(to_number(iv.col11),'0')" +
                                        " as close_qty from purchases po left join enx_tab iv on iv.col12 = po.vch_num and iv.col7=po.icode and" +
                                        " iv.type='POR' and iv.client_unit_id = po.client_unit_id where po.type " +
                                        "in ('50','54','52') and po.client_unit_id = '" + unitid_mst + "')" +
                                        " a group by(a.vch_num,a.vch_date,a.type,a.acode,a.icode,a.client_id,a.client_unit_id,a.qtyord)) p on" +
                                        " p.icode=it.icode and find_in_set(p.client_unit_id,it.client_unit_id)=1" +
                                        " and p.bal_qty>0 " + cond2 + " left join master_setting um on um.master_id = it.uom  and um.type = 'UMM'" +
                                        " and find_in_set(um.client_unit_id, it.client_unit_id)= 1 " +
                                        "left join master_setting hsn on hsn.master_id = it.hsno and hsn.type = 'HSN' and " +
                                        "find_in_set(hsn.client_unit_id, it.client_unit_id)= 1 " +
                                        "inner join itbal itb on it.icode=itb.icode and it.type=itb.type and find_in_set(itb.client_unit_id,it.client_unit_id)=1 left join(select t.client_unit_id, t.icode, " +
                                        "sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout, 0)) as Issued,sum(nvl(t.qtyin, 0)) - sum(nvl(t.qtyout, 0))" +
                                        " as closing from itransaction t where trim(t.store) = 'Y' group by t.icode,t.client_unit_id ) s on " +
                                        "it.icode = s.icode and find_in_set(s.client_unit_id,it.client_unit_id)=1 where it.type='IT' and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 " + where + "";
                                    //cmd = "select distinct (p.client_id||p.client_unit_id||p.vch_num||p.icode||to_char(p.vch_date,'yyyymmdd')||p.type) as fstr,p.vch_num PO_Number,p.icode,p.iname,p.cpartno" +
                                    //    ",p.qtyord Order_Qty,nvl(i.qtyrcvd,'0') used_qty,(to_number(nvl(p.qtyord, 0)) - to_number(nvl(i.qtyrcvd, 0))) qtychl,p.type," +
                                    //    "to_char(p.vch_date, '" + sgen.Getsqldateformat() + "') PO_Date from purchases p left join itransaction i on " +
                                    //    "i.icode = p.icode and i.pono = p.vch_num and to_char(i.podate,'yyyymmdd')= to_char(p.vch_date, 'yyyymmdd') and i.acode = " +
                                    //    "p.acode and i.client_id = p.client_id and i.client_unit_id = p.client_unit_id and i.type = '02' where p.client_id = '" + clientid_mst + "' " +
                                    //    "and p.client_unit_id = '" + unitid_mst + "' and p.type in ('50', '52') and(to_number(nvl(p.qtyord, 0)) - to_number(nvl(i.qtyrcvd, 0))) > '0'"+ cond2 + "";
                                    break;
                                case "39008.2":
                                    // model[0].Col9 = "CLOSE PENDING PRD ORDER";
                                    if (param1 != "" && param1 != "-") where = " and (it.icode||w.vch_num) not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','") + "')";
                                    cond2 = " and w.vch_num in ('" + sgen.GetSession(MyGuid, "DOCSO").ToString().Trim().TrimEnd(',').Replace(",", "','").Trim().ToString() + "') ";
                                    cmd = "select (it.icode||w.vch_num ||to_char(it.vch_date,'yyyymmdd')||it.type ) fstr,w.vch_num as ord_no,to_char(w.vch_date,'" + sgen.Getsqldateformat() + "') as ord_date,w.icode as Icode,it.iname as Iname,it.cpartno as partno,w.ord_qty,w.Bal_qty from item it inner join (select a.vch_num,a.vch_date,a.type,a.icode,a.client_id,a.client_unit_id,a.ord_qty,sum(to_number(a.used_qty)) as used_qty,(a.ord_qty - nvl(sum(a.used_qty), '0')) as Bal_qty from(select w.vch_num,w.vch_date,w.col5 as icode,w.client_id,w.client_unit_id,w.type,(case when w.col10='-' then '0' else w.col10 end) as ord_qty,nvl(ex.qtyin,'0') used_qty from kc_tab w left join iprod ex on ex.pdono = w.vch_num and ex.type='101' and ex.client_id=w.client_id and ex.client_unit_id=w.client_unit_id where w.type='PSO' and w.client_unit_id='" + unitid_mst + "' union all select w.vch_num,w.vch_date,w.col5 as icode,w.client_id,w.client_unit_id,w.type,(case when w.col10='-' then '0' else w.col10 end) as ord_qty,nvl(to_number(ex.col11),'0') as close_qty from kc_tab w left join enx_tab ex on ex.col12 = w.vch_num and ex.type='COR' and ex.client_id=w.client_id and ex.client_unit_id=w.client_unit_id where w.type='PSO' and w.client_id='" + clientid_mst + "' and w.client_unit_id='" + unitid_mst + "') a group by (a.vch_num,a.vch_date,a.type,a.icode,a.client_id,a.client_unit_id,a.ord_qty)) w on it.icode=w.icode and find_in_set(it.client_id,w.client_id)=1 and find_in_set(w.client_unit_id,it.client_unit_id)=1 " + cond2 + " where it.type='IT' and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 " + where + "";
                                    //cmd = "SELECT distinct (it.client_id||it.client_unit_id||it.icode||to_char(it.vch_date,'yyyymmdd')||it.type||w.vch_num||to_char(w.vch_date,'yyyymmdd')) " +
                                    //    "as fstr,it.icode,it.iname,it.cpartno as partno,w.col10-nvl(pp.col11,'0') as ord_qty,w.vch_num as Doc_no,to_char(w.vch_date,'" + sgen.Getsqldateformat() + "') " +
                                    //    "as doc_date FROM item it inner join kc_tab w on w.col5=it.icode and w.type='PSO' and w.client_id=it.client_id and w.client_unit_id=" +
                                    //    "it.client_unit_id " + cond2 + " left join enx_tab pp on pp.col12=w.vch_num and w.vch_date = pp.date1 and " +
                                    //    "pp.client_id=w.client_id and pp.client_unit_id=w.client_unit_id where it.type='IT' and it.client_id='" + clientid_mst + "' and " +
                                    //    "it.client_unit_id='" + unitid_mst + "'";
                                    //    cmd = "select distinct (bm.client_id||bm.client_unit_id||bm.acode||bm.type) fstr,bm.acode,it.iname,it.cpartno Partno," +
                                    //        "w.col10-nvl(pp.col11,'0') as ord_qty,w.vch_num as Doc_no,to_char(w.vch_date,'" + sgen.Getsqldateformat() + "') as doc_date" +
                                    //        " from itransactionc bm inner join item it on it.icode = bm.acode and it.type = 'IT' and" +
                                    //        " it.client_id = bm.client_id and it.client_unit_id = bm.client_unit_id " +
                                    //"inner join kc_tab w on w.col5=bm.acode and w.type='PSO' and w.client_id=bm.client_id and w.client_unit_id=bm.client_unit_id " + cond2 + "" +
                                    //"left join enx_tab pp on pp.col12=w.vch_num and w.vch_date = pp.date1 and pp.client_id=w.client_id and pp.client_unit_id=w.client_unit_id" +
                                    //"where bm.type = 'BOM' and bm.client_id = '" + clientid_mst + "' and bm.client_unit_id = '" + unitid_mst + "'";
                                    break;
                                case "21009.6":
                                    // CLOSE PENDING PI
                                    if (param1 != "" && param1 != "-") where = " and (pc.icode||pc.PI_NO) not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','") + "')";
                                    cond2 = " and pi.vch_num in ('" + sgen.GetSession(MyGuid, "DOCSO").ToString().Trim().TrimEnd(',').Replace(",", "','").Trim().ToString() + "') ";
                                    cmd = "select distinct (it.icode || pc.type || pc.PI_NO || to_char(it.vch_date, 'yyyymmdd') || it.type) fstr,it.icode as icode,pc.PI_NO,pc.pi_date,it.iname as iname," +
                                        "it.cpartno partno,pc.type,pc.pi_qty,pc.bal_qty as bal_qty from item it inner join (select a.PI_NO,a.pi_date,a.type,a.icode,a.client_id,a.client_unit_id,max(a.pi_qty) pi_qty," +
                                        "sum(a.inv_qty) as inv_qty,(max(a.pi_qty) - nvl(sum(a.inv_qty), '0')) as bal_qty from(select pi.vch_num as PI_NO,to_char(pi.vch_date, '" + sgen.Getsqldateformat() + "') pi_date,pi.type," +
                                        "pi.icode,pi.client_id,pi.client_unit_id,pi.ORDQTY as pi_qty,nvl(iv.qtyout,'0') as inv_qty from itransactionc pi left join itransaction iv on iv.pi_no = pi.vch_num and " +
                                        "iv.potype = '55' and iv.icode=pi.icode and iv.client_unit_id = pi.client_unit_id where substr(pi.type,1,1)='4' and pi.pur_type='BPI' and pi.client_unit_id = '" + unitid_mst + "' " +
                                        "" + cond2 + " union all select pi.vch_num as PI_NO,to_char(pi.vch_date, '" + sgen.Getsqldateformat() + "') pi_date,pi.type,pi.icode,pi.client_id,pi.client_unit_id,pi.ORDQTY as pi_qty,nvl(iv.col11, '0') as " +
                                        "close_qty from itransactionc pi left join enx_tab iv on iv.col12 = pi.vch_num and iv.type = 'PRI' and iv.col7=pi.icode and iv.client_unit_id = pi.client_unit_id where " +
                                        "substr(pi.type,1,1)='4' and pi.pur_type='BPI' and pi.client_unit_id = '" + unitid_mst + "' " + cond2 + ") a group by (a.PI_NO,a.pi_date,a.type,a.icode,a.client_id,a.client_unit_id)) pc on " +
                                        "pc.icode = it.icode " + where + " where find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 and it.type='IT' and it.sale='Y'";
                                    break;
                                case "21009.7":
                                    // CLOSE PENDING quot
                                    if (param1 != "" && param1 != "-") where = " and (qt.icode||qt.PI_NO) not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','") + "')";
                                    cond2 = " and qt.vch_num in ('" + sgen.GetSession(MyGuid, "DOCSO").ToString().Trim().TrimEnd(',').Replace(",", "','").Trim().ToString() + "') ";
                                    cmd = "select distinct (it.icode || pc.type || pc.qt_NO || to_char(it.vch_date, 'yyyymmdd') || it.type) fstr,it.icode as icode,pc.qt_NO,pc.qt_date,it.iname as iname,it.cpartno partno" +
                                        ",pc.type,pc.qt_qty,pc.bal_qty as bal_qty from item it inner join (select a.qt_NO,a.qt_date,a.type,a.icode,a.client_id,a.client_unit_id,max(a.qt_qty) qt_qty, sum(a.inv_qty) as inv_qty" +
                                        ",(max(a.qt_qty) - nvl(sum(a.inv_qty), '0')) as bal_qty from(select qt.vch_num as qt_NO,to_char(qt.vch_date, '" + sgen.Getsqldateformat() + "') qt_date,qt.type,qt.icode,qt.client_id,qt.client_unit_id" +
                                        ",qt.ORDQTY as qt_qty,nvl(iv.ORDQTY,'0') as inv_qty from itransactionc qt left join itransactionc iv on iv.pi_no = qt.vch_num and substr(iv.type,1,1)='4' and iv.gdisc = '77' " +
                                        "and iv.icode=qt.icode and iv.pur_type='BPI'and iv.client_unit_id = qt.client_unit_id where substr(qt.type,1,1)='4' and qt.pur_type='QTN' and qt.client_unit_id = '" + unitid_mst + "' " +
                                        "" + cond2 + " union all select qt.vch_num as qt_NO,to_char(qt.vch_date, '" + sgen.Getsqldateformat() + "') qt_date,qt.type,qt.icode,qt.client_id,qt.client_unit_id,qt.ORDQTY as qt_qty,nvl(iv.col11, '0') as close_qty " +
                                        "from itransactionc qt left join enx_tab iv on iv.col12 = qt.vch_num and iv.type = 'CPQ' and iv.col7=qt.icode and iv.client_unit_id = qt.client_unit_id where substr(qt.type,1,1)='4' " +
                                        "and qt.pur_type='QTN' and qt.client_unit_id = '" + unitid_mst + "'" + cond2 + ") a group by(a.qt_NO,a.qt_date,a.type,a.icode,a.client_id,a.client_unit_id)) pc on pc.icode = it.icode " + where + " where " +
                                        "find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 and it.type='IT' and it.sale='Y'";
                                    break;
                            }
                            break;
                    }
                    break;
                #endregion
                #region pdi
                case "pdi":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            cmd = "select (pd.client_id||pd.client_unit_id||pd.vch_num||to_char(pd.vch_date,'yyyymmdd')) as fstr, pd.vch_num as doc_no," +
                               "to_char(pd.vch_date,'" + sgen.Getsqldateformat() + "') as doc_date,pd.icode,pd.iname,pd.deptname as subgrp,pd.qtystk as Qty_Stock," +
                               "pd.qtyout as PDI_Qty,pd.qtyin as OK_Qty,pd.aname as operator_name" +
                               " from itransaction pd " +
                              "where pd.type = '19' and pd.client_unit_id = '" + unitid_mst + "' " + xprdrange.Replace("vch_date", "pd.vch_date") + "";
                            break;
                        case "VIEW":
                            //cmd = "select (pd.client_id||pd.client_unit_id||pd.vch_num||to_char(pd.vch_date,'yyyymmdd') || pd.type) as fstr," +
                            //    " pd.vch_num as doc_no,to_char(convert_tz(pd.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') as doc_date,pd.icode,pd.iname,pd.deptname as subgrp," +
                            //    "pd.qtystk as Qty_Stock,pd.qtyout as PDI_Qty,pd.qtyin as OK_Qty,pd.aname as operator_name,dpt.master_name " +
                            //    "as department,dsg.master_name as desig from itransaction pd left join master_setting dpt on dpt.master_id" +
                            //    " = pd.deptno and  dpt.type = 'MDP' and find_in_set(dpt.client_id, pd.client_id)= 1 and " +
                            //    "find_in_set(dpt.client_unit_id, pd.client_unit_id)= 1 left join master_setting dsg on " +
                            //    "dsg.master_id = pd.desig and dsg.type = 'MDG' and find_in_set(dsg.client_id, pd.client_id)= 1 and " +
                            //    "find_in_set(dsg.client_unit_id, pd.client_unit_id)= 1 where pd.type = '19' and pd.client_id = '" + clientid_mst + "' " +
                            //    "and pd.client_unit_id = '" + unitid_mst + "'";
                            cmd = "select (pd.client_id||pd.client_unit_id||pd.vch_num||to_char(pd.vch_date,'yyyymmdd')) as fstr, pd.vch_num as doc_no," +
                                "to_char(pd.vch_date,'" + sgen.Getsqldateformat() + "') as doc_date,pd.icode,pd.iname,pd.deptname as subgrp,pd.qtystk as Qty_Stock," +
                                "pd.qtyout as PDI_Qty,pd.qtyin as OK_Qty,pd.aname as operator_name,ms.master_id as opr_id,dep.master_name as dep_name,des.master_name as designation" +
                                " from itransaction pd inner join master_setting ms on ms.master_id = pd.acode and ms.type = 'OPR' and find_in_set(ms.client_unit_id, pd.client_unit_id)= '1' inner join master_setting dep on dep.master_id = ms.classid and dep.type = 'MDP' " +
                                "and find_in_set(dep.client_unit_id, ms.client_unit_id)= 1 " +
                                "inner join master_setting des on des.master_id = ms.sectionid and des.type = 'MDG' and find_in_set(des.client_unit_id,ms.client_unit_id)= 1  where pd.type = '19' and pd.client_unit_id = '" + unitid_mst + "' " + xprdrange.Replace("vch_date", "pd.vch_date") + "";
                            break;
                        case "ITEM":
                            if (param1 != "") where = " and (i.client_unit_id||i.icode) not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','") + "')";
                            //cmd = "select (it.client_id || it.client_unit_id || it.icode|| to_char(it.vch_date, 'yyyymmdd') || it.type) as fstr, " +
                            //    "it.iname,it.icode,it.cpartno Partno, sg.iname as sub_grp from item it inner join item sg on sg.icode =" +
                            //    " substr(it.icode, 1, 5) and sg.type = 'SG' and sg.client_id = '" + clientid_mst + "' and sg.client_unit_id = '" + unitid_mst + "'" +
                            //    " where it.type = 'IT' and it.client_id = '" + clientid_mst + "' and it.client_unit_id = '" + unitid_mst + "' and it.sale = 'Y' " +
                            //    "and it.pdi = 'Y' ";
                            cmd = "select i.icode as fstr, i.icode, i.iname,sg.iname SubG,i.cpartno partno,um.master_name uom, sum(nvl(a.qtyin, 0)) - sum(nvl(a.qtyout, 0)) qtystk," +
                                "nvl(a.fstg, '001') fstg,i.client_id, i.client_unit_id from item i inner join(select icode, (case when type= '100' then 0 else qtyin end)  qtyin," +
                                "qtyout qtyout, stage fstg, type, client_id, client_unit_id,vch_num,vch_date from iprod where(type like '3%' or type = '100' or type = '10P') union select acode icode," +
                                " to_number(max(qtyin)) qtyin, 0 qtyout, stage1 fstg, type, client_id, client_unit_id, vch_num, vch_date from iprod where type = '100' group by acode, stage1," +
                                "type, client_id, client_unit_id ,vch_num,vch_date union select acode icode, to_number(max(qtyrej)) qtyin, 0 qtyout, '101' fstg, type, client_id," +
                                "client_unit_id,vch_num,vch_date from iprod where type = '100' group by acode, type, client_id, client_unit_id,vch_num,vch_date union select icode," +
                                "sum(qtyin) qtyin, 0 qtyout, stage1 fstg, type, client_id, client_unit_id, vch_num, vch_date from iprod where type = '10R' group by icode, stage1, " +
                                "type, client_id, client_unit_id,vch_num,vch_date union select icode, 0 qtyin, sum(qtyout) qtyout, stage fstg, type, client_id, client_unit_id, vch_num, vch_date" +
                                " from iprod where type = '10R' group by icode, stage, type, client_id, client_unit_id,vch_num,vch_date union select icode, sum(qtyout) qtyin, 0 qtyout, stage1 fstg," +
                                "type, client_id, client_unit_id, vch_num, vch_date from iprod where type = '10R' group by icode, stage1, type, client_id, client_unit_id,vch_num,vch_date " +
                                "union " +
                                "select icode, sum(qtyin) qtyin, 0 qtyout, stage1 fstg, type, client_id, client_unit_id, vch_num, vch_date from iprod where type = '10W' " +
                                "group by icode, stage1, type, client_id, client_unit_id,vch_num,vch_date) a " +
                                "on a.icode = i.icode and find_in_set(a.client_unit_id, i.client_unit_id)=1 inner join master_setting um on um.master_id = i.uom " +
                                "and um.type = 'UMM' and find_in_set(um.client_unit_id, i.client_unit_id)= 1 " +
                                "inner join item sg on sg.icode = substr(i.icode, 1, 5) and sg.type = 'SG' and sg.client_unit_id = '" + unitid_mst + "' " +
                                "where i.type = 'IT' and substr(i.icode,1,1)='9' and find_in_set(i.client_unit_id, '" + unitid_mst + "')=1 and fstg = '100' and i.sale='Y' and i.pdi = 'Y' " + where + " " +
                                "group by i.icode,i.iname,i.cpartno,um.master_name,nvl(a.fstg, '001'),i.type,i.client_id,i.client_unit_id ,sg.iname having(sum(nvl(a.qtyin, 0)) -sum(nvl(a.qtyout, 0)))<> 0";
                            break;
                        case "OPRNAME":
                            cmd = "select (ms.client_id||ms.client_unit_id||ms.master_id||to_char(ms.vch_date,'yyyymmdd')||ms.type) fstr," +
                                "ms.master_name as opr_name,ms.master_id as opr_id,dep.master_name as dep_name,dep.master_id as dep_id,des.master_name as designation" +
                                " from master_setting ms inner join master_setting dep on dep.master_id = ms.classid and dep.type = 'MDP' and " +
                                "find_in_set(dep.client_unit_id, ms.client_unit_id)= 1 " +
                                "inner join master_setting des on des.master_id = ms.sectionid and des.type = 'MDG' and " +
                                "find_in_set(des.client_unit_id, ms.client_unit_id)= 1 where ms.type = 'OPR' and find_in_set(ms.client_unit_id,'" + unitid_mst + "')=1" +
                                " and ms.status = 'Y'";
                            break;
                    }
                    break;
                #endregion
                #region pdin
                case "pdin":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            cmd = "select (pd.client_id||pd.client_unit_id||pd.vch_num||to_char(pd.vch_date,'yyyymmdd')) as fstr, pd.vch_num as doc_no," +
                                "to_char(pd.vch_date,'" + sgen.Getsqldateformat() + "') as doc_date,pd.icode,pd.iname,pd.deptname as subgrp,pd.qtystk as Qty_Stock," +
                                "pd.qtyout as PDI_Qty,pd.qtyin as OK_Qty,pd.aname as operator_name from itransaction pd " +
                                "where pd.type = '19' and pd.client_unit_id = '" + unitid_mst + "' " + xprdrange.Replace("vch_date", "pd.vch_date") + "";
                            break;
                        case "VIEW":
                            //cmd = "select (pd.client_id||pd.client_unit_id||pd.vch_num||to_char(pd.vch_date,'yyyymmdd') || pd.type) as fstr," +
                            //    " pd.vch_num as doc_no,to_char(convert_tz(pd.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') as doc_date,pd.icode,pd.iname,pd.deptname as subgrp," +
                            //    "pd.qtystk as Qty_Stock,pd.qtyout as PDI_Qty,pd.qtyin as OK_Qty,pd.aname as operator_name,dpt.master_name " +
                            //    "as department,dsg.master_name as desig from itransaction pd left join master_setting dpt on dpt.master_id" +
                            //    " = pd.deptno and  dpt.type = 'MDP' and find_in_set(dpt.client_id, pd.client_id)= 1 and " +
                            //    "find_in_set(dpt.client_unit_id, pd.client_unit_id)= 1 left join master_setting dsg on " +
                            //    "dsg.master_id = pd.desig and dsg.type = 'MDG' and find_in_set(dsg.client_id, pd.client_id)= 1 and " +
                            //    "find_in_set(dsg.client_unit_id, pd.client_unit_id)= 1 where pd.type = '19' and pd.client_id = '" + clientid_mst + "' " +
                            //    "and pd.client_unit_id = '" + unitid_mst + "'";
                            cmd = "select (pd.client_id||pd.client_unit_id||pd.vch_num||to_char(pd.vch_date,'yyyymmdd')) as fstr, pd.vch_num as doc_no," +
                                "to_char(pd.vch_date,'" + sgen.Getsqldateformat() + "') as doc_date,pd.icode,pd.iname,pd.deptname as subgrp,pd.qtystk as Qty_Stock," +
                                "pd.qtyout as PDI_Qty,pd.qtyin as OK_Qty,pd.aname as operator_name,ms.master_id as opr_id,dep.master_name as dep_name,des.master_name as designation" +
                                " from itransaction pd inner join master_setting ms on ms.master_id = pd.acode and ms.type = 'OPR' and find_in_set(ms.client_unit_id, pd.client_unit_id)= '1' inner join master_setting dep on dep.master_id = ms.classid and dep.type = 'MDP' " +
                                "and find_in_set(dep.client_unit_id, ms.client_unit_id)= 1 " +
                                "inner join master_setting des on des.master_id = ms.sectionid and des.type = 'MDG' and find_in_set(des.client_unit_id,ms.client_unit_id)= 1  where pd.type = '19' and pd.client_unit_id = '" + unitid_mst + "' " + xprdrange.Replace("vch_date", "pd.vch_date") + "";
                            break;
                        case "ITEM":
                            if (param1 != "") where = " and (i.client_unit_id||i.icode) not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','") + "')";
                            //cmd = "select (it.client_id || it.client_unit_id || it.icode|| to_char(it.vch_date, 'yyyymmdd') || it.type) as fstr, " +
                            //    "it.iname,it.icode,it.cpartno Partno, sg.iname as sub_grp from item it inner join item sg on sg.icode =" +
                            //    " substr(it.icode, 1, 5) and sg.type = 'SG' and sg.client_id = '" + clientid_mst + "' and sg.client_unit_id = '" + unitid_mst + "'" +
                            //    " where it.type = 'IT' and it.client_id = '" + clientid_mst + "' and it.client_unit_id = '" + unitid_mst + "' and it.sale = 'Y' " +
                            //    "and it.pdi = 'Y' ";
                            //cmd = "select i.icode as fstr, i.icode, i.iname,sg.iname SubG,i.cpartno partno,um.master_name uom, sum(nvl(a.qtyin, 0)) - sum(nvl(a.qtyout, 0)) qtystk," +
                            //    "nvl(a.fstg, '001') fstg,i.client_id, i.client_unit_id from item i inner join(select icode, (case when type= '100' then 0 else qtyin end)  qtyin," +
                            //    "qtyout qtyout, stage fstg, type, client_id, client_unit_id,vch_num,vch_date from iprod where(type like '3%' or type = '100' or type = '10P') union select acode icode," +
                            //    " to_number(max(qtyin)) qtyin, 0 qtyout, stage1 fstg, type, client_id, client_unit_id, vch_num, vch_date from iprod where type = '100' group by acode, stage1," +
                            //    "type, client_id, client_unit_id ,vch_num,vch_date union select acode icode, to_number(max(qtyrej)) qtyin, 0 qtyout, '101' fstg, type, client_id," +
                            //    "client_unit_id,vch_num,vch_date from iprod where type = '100' group by acode, type, client_id, client_unit_id,vch_num,vch_date union select icode," +
                            //    "sum(qtyin) qtyin, 0 qtyout, stage1 fstg, type, client_id, client_unit_id, vch_num, vch_date from iprod where type = '10R' group by icode, stage1, " +
                            //    "type, client_id, client_unit_id,vch_num,vch_date union select icode, 0 qtyin, sum(qtyout) qtyout, stage fstg, type, client_id, client_unit_id, vch_num, vch_date" +
                            //    " from iprod where type = '10R' group by icode, stage, type, client_id, client_unit_id,vch_num,vch_date union select icode, sum(qtyout) qtyin, 0 qtyout, stage1 fstg," +
                            //    "type, client_id, client_unit_id, vch_num, vch_date from iprod where type = '10R' group by icode, stage1, type, client_id, client_unit_id,vch_num,vch_date " +
                            //    "union " +
                            //    "select icode, sum(qtyin) qtyin, 0 qtyout, stage1 fstg, type, client_id, client_unit_id, vch_num, vch_date from iprod where type = '10W' " +
                            //    "group by icode, stage1, type, client_id, client_unit_id,vch_num,vch_date) a " +
                            //    "on a.icode = i.icode and find_in_set(a.client_unit_id, i.client_unit_id)=1 inner join master_setting um on um.master_id = i.uom " +
                            //    "and um.type = 'UMM' and find_in_set(um.client_unit_id, i.client_unit_id)= 1 " +
                            //    "inner join item sg on sg.icode = substr(i.icode, 1, 5) and sg.type = 'SG' and sg.client_unit_id = '" + unitid_mst + "' " +
                            //    "where i.type = 'IT' and substr(i.icode,1,1)='9' and find_in_set(i.client_unit_id, '" + unitid_mst + "')=1 and fstg = '100' and i.sale='Y' and i.pdi = 'Y' " + where + " " +
                            //    "group by i.icode,i.iname,i.cpartno,um.master_name,nvl(a.fstg, '001'),i.type,i.client_id,i.client_unit_id ,sg.iname having(sum(nvl(a.qtyin, 0)) -sum(nvl(a.qtyout, 0)))<> 0";

                            cmd = "select i.icode as fstr, i.icode, i.iname,sg.iname SubG,i.cpartno partno,um.master_name uom, sum(nvl(a.qtyin, 0)) - sum(nvl(a.qtyout, 0)) qtystk," +
                                "nvl(a.fstg, '001') fstg,i.client_id, i.client_unit_id from item i " +
                                "inner join(select icode, (case when type= '100' then 0 else qtyin end)  qtyin,qtyout qtyout, stage fstg, type, client_id, client_unit_id,vch_num," +
                                "vch_date from iprod where(type like '3%' or type = '100' or type = '10P') " +
                                "union " +
                                "select acode icode, to_number(max(qtyin)) qtyin, 0 qtyout, stage1 fstg, type, client_id, client_unit_id, vch_num, vch_date from iprod where " +
                                "type = '100' group by acode, stage1,type, client_id, client_unit_id ,vch_num,vch_date " +
                                "union " +
                                "select acode icode, to_number(max(qtyrej)) qtyin, 0 qtyout, '101' fstg, type, client_id,client_unit_id,vch_num,vch_date from iprod where " +
                                "type = '100' group by acode, type, client_id, client_unit_id,vch_num,vch_date " +
                                "union " +
                                "select icode, sum(qtyin) qtyin, 0 qtyout, stage1 fstg, type, client_id, client_unit_id, vch_num, vch_date from iprod where type = '10R' " +
                                "group by icode, stage1, type, client_id, client_unit_id,vch_num,vch_date " +
                                "union " +
                                "select icode, 0 qtyin, sum(qtyout) qtyout, stage fstg, type, client_id, client_unit_id, vch_num, vch_date from iprod where type = '10R' " +
                                "group by icode, stage, type, client_id, client_unit_id,vch_num,vch_date " +
                                "union " +
                                "select icode, sum(qtyout) qtyin, 0 qtyout, stage1 fstg, type, client_id, client_unit_id, vch_num, vch_date from iprod where type = '10R' " +
                                "group by icode, stage1, type, client_id, client_unit_id,vch_num,vch_date " +
                                "union " +
                                "select icode, sum(qtyin) qtyin, 0 qtyout, stage1 fstg, type, client_id, client_unit_id, vch_num, vch_date from iprod where type = '10W' " +
                                "group by icode, stage1, type, client_id, client_unit_id,vch_num,vch_date) a on a.icode = i.icode and find_in_set(a.client_unit_id, i.client_unit_id)= 1 " +
                                "inner join master_setting um on um.master_id = i.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, i.client_unit_id)= 1 " +
                                "inner join item sg on sg.icode = substr(i.icode, 1, 5) and sg.type = 'SG' and find_in_set(sg.client_unit_id, '" + unitid_mst + "')=1 " +
                                "where i.type = 'IT' and substr(i.icode,1,1)= '9' and find_in_set(i.client_unit_id, '" + unitid_mst + "')= 1 and a.fstg = '" + param2.Trim() + "' " + where + "" +
                                "group by i.icode,i.iname,i.cpartno,um.master_name,nvl(a.fstg, '001'),i.type,i.client_id,i.client_unit_id ,sg.iname having(sum(nvl(a.qtyin, 0)) -sum(nvl(a.qtyout, 0)))<> 0";
                            break;
                        case "OPRNAME":
                            cmd = "select (ms.client_id||ms.client_unit_id||ms.master_id||to_char(ms.vch_date,'yyyymmdd')||ms.type) fstr," +
                                "ms.master_name as opr_name,ms.master_id as opr_id,dep.master_name as dep_name,dep.master_id as dep_id,des.master_name as designation" +
                                " from master_setting ms inner join master_setting dep on dep.master_id = ms.classid and dep.type = 'MDP' and " +
                                "find_in_set(dep.client_unit_id, ms.client_unit_id)= 1 " +
                                "inner join master_setting des on des.master_id = ms.sectionid and des.type = 'MDG' and " +
                                "find_in_set(des.client_unit_id, ms.client_unit_id)= 1 where ms.type = 'OPR' and find_in_set(ms.client_unit_id,'" + unitid_mst + "')=1" +
                                " and ms.status = 'Y'";
                            break;
                    }
                    break;
                #endregion
                #region sms mail template
                case "sms_mail_tmp":
                    switch (btnval.ToUpper())
                    {
                        case "VIEW":
                        case "EDIT":
                            cmd = "select distinct (client_id||client_unit_id|| vch_num || to_char(vch_date, 'yyyymmdd') || type||trim(col2)) as fstr,col2 as Temp_Set_For from enx_tab " +
                                "where type = 'ETP' and client_unit_id = '" + unitid_mst + "' " + xprdrange + "";
                            //cmd = "select (client_id||client_unit_id|| vch_num || to_char(vch_date, 'yyyymmdd') || type) as fstr,col2 as Temp_Set_For,nvl(col5,'-') as email_id,nvl(col6,'-') as mobile_no," +
                            //    "col1 as Body_Text,col8 as Email_Heading from enx_tab " +
                            //    "where type = 'ETP' and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "'";
                            break;
                            //case "NEW":
                            //    cmd = "select * from (select '011' as master_id, 'GATE IN' as set_For from dual Union all select '012' " +
                            //        "master_id,'GATE OUT' as set_For from dual union all select '013' master_id,'MRN' as set_For from dual " +
                            //        "union all select '014' master_id,'INDENT' as set_For from dual UNION ALL select '015' master_id,'PUR ORDER' " +
                            //        "as set_For from dual) where master_id|| set_For not in (select col13 || col2 from enx_tab where type = 'ETP' " +
                            //        "and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "')";
                            //    break;
                    }
                    break;
                #endregion
                #region qctemp
                case "qctemp":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "VIEW":
                        case "PRINT":
                            cmd = "select distinct (ex.client_id||ex.client_unit_id||ex.vch_num||to_char(ex.vch_date,'yyyymmdd')||ex.type) fstr,ex.vch_num DocNo," +
                                "to_char(convert_tz(ex.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') vch_Date,ex.icode MainItem," +
                                "it.iname MainItemName,um.master_name Uom from inspvch ex " +
                                "inner join item it on ex.icode = it.icode and it.type = 'IT' and find_in_set(ex.client_unit_id, it.client_unit_id)=1 " +
                                "inner join master_setting um on um.master_id = it.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, it.client_unit_id)= 1 " +
                                "where ex.type = 'QCT' and ex.client_unit_id = '" + unitid_mst + "' " + xprdrange.Replace("vch_date", "ex.vch_date") + "";
                            break;
                        case "ITEM":
                            cmd = "select (it.icode) fstr,it.icode,it.iname,it.cpartno Partno,pum.master_name as UOM," +
                                "mg.master_name MainGrp, gp.master_name ItemGrp,sg.iname SubGrp from item it " +
                                "inner join master_setting pum on pum.master_id = it.uom and pum.type = 'UMM' and find_in_set(pum.client_unit_id,'" + unitid_mst + "')=1 " +
                                "inner join master_setting mg on mg.classid = substr(it.icode, 1, 1) and mg.type = 'KGP' " +
                                "inner join master_setting gp on gp.master_id = substr(it.icode, 1, 3) and gp.type = 'KIG' and find_in_set(gp.client_unit_id,'" + unitid_mst + "')=1 " +
                                "inner join item sg on sg.icode = substr(it.icode, 1, 5) and sg.type = 'SG' and find_in_set(sg.client_unit_id,'" + unitid_mst + "')=1 " +
                                "where it.type = 'IT' and find_in_set(it.client_unit_id, '" + unitid_mst + "')=1 and it.qa='Y'";
                            break;
                    }
                    break;
                #endregion
                #region qcinsp
                case "qcinsp":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "VIEW":
                        case "PRINT":
                            cmd = "select distinct (ex.client_id||ex.client_unit_id||ex.vch_num||to_char(ex.vch_date,'yyyymmdd')||ex.type) fstr,ex.vch_num DocNo," +
                                "to_char(ex.vch_date, '" + sgen.Getsqldateformat() + "') vch_Date,ex.icode MrnItemCode,it.iname ItemName,ex.mrnno," +
                                "to_char(ex.mrndate,'" + sgen.Getsqldateformat() + "'),ex.mrntype,ex.chlno,to_char(ex.chldate, '" + sgen.Getsqldateformat() + "') chldate " +
                                "ex.invno,to_char(ex.invdate,'" + sgen.Getsqldateformat() + "') invdate from inspvch ex " +
                                "inner join item it on ex.icode = it.icode and it.type = 'IT' and find_in_set(ex.client_unit_id, it.client_unit_id)=1 " +
                                "where ex.type = 'QCI' and ex.client_unit_id = '" + unitid_mst + "' " + xprdrange.Replace("vch_date", "ex.vch_date") + "";
                            break;
                        case "ITEM":
                            //cmd = "select (n.client_id||n.client_unit_id||n.vch_num||to_char(n.vch_date,'yyyymmdd')||n.type) fstr,n.vch_num Docno," +
                            //    "to_char(n.vch_date,'" + sgen.Getsqldateformat() + "') Docdate,n.icode itemcode,i.iname ItemName from itransaction n " +
                            //    "inner join item i on i.icode = n.icode and i.type = 'IT' and i.client_id = n.client_id and i.client_unit_id = n.client_unit_id " +
                            //    "inner join inspvch v on v.icode=n.icode and v.type='QCT' and v.client_id=n.client_id and v.client_unit_id=n.client_unit_id " +
                            //    "where n.type in ('01','02','03','05','07','08','09') and n.client_id='" + clientid_mst + "' and n.client_unit_id='" + unitid_mst + "'";
                            //cmd = "select (n.client_id||n.client_unit_id||n.vch_num||to_char(n.vch_date,'yyyymmdd')||n.type) fstr,n.vch_num Docno,to_char(n.vch_date,'" + sgen.Getsqldateformat() + "') Docdate," +
                            //    "n.icode itemcode, i.iname ItemName, n.type,m.master_name from itransaction n " +
                            //    "inner join item i on i.icode = n.icode and i.type = 'IT' and i.client_id = n.client_id and i.client_unit_id = n.client_unit_id " +
                            //    "inner join master_setting m on m.master_id = n.type and m.type = 'KMR' and find_in_set(m.client_id, n.client_id)= 1 and find_in_set(m.client_unit_id, n.client_unit_id)= 1 " +
                            //    "inner join inspvch v on v.icode=n.icode and v.type='QCT' and v.client_id=n.client_id and v.client_unit_id=n.client_unit_id " +
                            //    "where n.type in ('01', '02', '03', '05', '07', '08', '09') and n.client_id = '" + clientid_mst + "' and n.client_unit_id = '" + unitid_mst + "' order by n.vch_date,i.icode asc";
                            cmd = "select distinct (n.client_id||n.client_unit_id||n.vch_num||to_char(n.vch_date,'yyyymmdd')||n.type) fstr,n.icode itemcode," +
                                "i.iname ItemName,n.vch_num Mrnno,to_char(n.vch_date, '" + sgen.Getsqldateformat() + "') Mrndate,n.type Mrntype," +
                                "m.master_name Typename,n.chlno Chlno,to_char(n.chldate, '" + sgen.Getsqldateformat() + "') Chldate,n.invno Invno," +
                                "to_char(n.invdate, '" + sgen.Getsqldateformat() + "') Invdate,c.c_name Partyname " +
                                "from itransaction n " +
                                "inner join item i on i.icode = n.icode and i.type = 'IT' and find_in_set(i.client_unit_id,n.client_unit_id)=1 " +
                                "inner join master_setting m on m.master_id = n.type and m.type = 'KMR' and find_in_set(m.client_unit_id, n.client_unit_id)= 1 " +
                                "inner join clients_mst c on c.vch_num = n.acode and c.type = 'BCD' and find_in_set(c.client_unit_id,n.client_unit_id)=1 " +
                                "inner join inspvch v on v.icode = n.icode and v.type = 'QCT' and v.client_unit_id = n.client_unit_id " +
                                "where n.type in ('01', '02', '03', '05', '07', '08', '09') and n.client_unit_id = '" + unitid_mst + "'";
                            //cmd = "select distinct (n.client_id||n.client_unit_id||n.vch_num||to_char(n.vch_date,'yyyymmdd')||n.type) fstr,n.vch_num Docno," +
                            //    "to_char(n.vch_date,'" + sgen.Getsqldateformat() + "') Docdate,n.icode itemcode,i.iname ItemName from inspvch n " +
                            //    "inner join item i on i.icode = n.icode and i.type = 'IT' and i.client_id = n.client_id and i.client_unit_id = n.client_unit_id " +
                            //    "where n.type='QCT' and n.client_id='" + clientid_mst + "' and n.client_unit_id='" + unitid_mst + "'";
                            //cmd = "select (p.client_id||p.client_unit_id||p.icode||to_char(p.vch_date,'yyyymmdd')||p.type||p.mrnno||p.type2) as fstr," +
                            //    "p.vch_num MRN_Number,to_char(convert_tz(p.vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') MRN_Date," +
                            //    "p.type2 MRN_Type,c.c_name as Party_Name,p.icode ItemCode,it.iname ItemName," +
                            //    "p.chlno Challan_No,to_char(convert_tz(p.chldate,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') Challan_Date," +
                            //    "p.invno InvoiceNo,to_char(convert_tz(p.invdate,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') Invoice_Date," +
                            //    "p.ewayno BillNO,to_char(convert_tz(p.ewaydate,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') Bill_Date " +
                            //    "from itransaction p " +
                            //    "inner join clients_mst c on p.acode = c.vch_num and c.type ='PVD' and c.client_id = p.client_id and c.client_unit_id = p.client_unit_id " +
                            //    "inner join item it on it.icode = p.icode and it.type = 'IT' and it.client_id = p.client_id and it.client_unit_id = p.client_unit_id and it.qa='Y' " +
                            //    "inner join master_setting um on um.master_id = it.uom and um.type = 'UMM' and find_in_set(um.client_id,p.client_id)=1 and find_in_set(um.client_unit_id,p.client_unit_id)=1 " +
                            //    "where p.type in ('01','02','03','05','07','08','09') and p.client_id = '" + clientid_mst + "' and p.client_unit_id = '" + unitid_mst + "'";
                            break;
                    }
                    break;
                #endregion
                #region apprv_config
                case "apprv_config":
                    if (sgen.GetSession(MyGuid, "APPRTYPE").ToString() != null && sgen.GetSession(MyGuid, "APPRMID").ToString() != null)
                    {
                        type = sgen.GetSession(MyGuid, "APPRTYPE").ToString().Trim();
                        mid = sgen.GetSession(MyGuid, "APPRMID").ToString().Trim();
                        mq = sgen.GetSession(MyGuid, "APPRPARAM").ToString().Trim();
                        if (mid.Trim() == "17001.30")
                        {
                            if (mq == "1")
                            {
                                joinmst = " inner join master_setting d on find_in_set(d.master_id,a.col1)=1 and d.type='MDP' and find_in_set(a.client_id,d.client_id)=1 and find_in_set(a.client_unit_id,d.client_unit_id)=1 ";
                                colmst = "group_concat(d.master_name) as Department ";
                            }
                            else if (mq == "2")
                            {
                                joinmst = " inner join master_setting m on find_in_set(m.master_id,a.col2)=1 and m.type = 'KIG' and find_in_set(m.client_id,a.client_id)=1 and find_in_set(m.client_unit_id,a.client_unit_id)=1 ";
                                colmst = "group_concat(m.master_name) as Item_Grp ";
                            }
                            else if (mq == "3")
                            {
                                joinmst = " inner join master_setting d on find_in_set(d.master_id,a.col1)=1 and d.type='MDP' and find_in_set(a.client_id,d.client_id)=1 and find_in_set(a.client_unit_id,d.client_unit_id)=1 " +
                                    "inner join master_setting m on find_in_set(m.master_id,a.col2)=1 and m.type = 'KIG' and find_in_set(m.client_id,a.client_id)=1 and find_in_set(m.client_unit_id,a.client_unit_id)=1 ";
                                colmst = "group_concat(d.master_name) as Department,group_concat(m.master_name) as Item_Grp ";
                            }
                        }
                        else if (mid.Trim() == "28004.16" || mid.Trim() == "21001.15")
                        {
                            if (mq == "1")
                            {
                                joinmst = "";
                                colmst = "a.col4 Amount ";
                                grpmst = ",a.col4";
                            }
                            else if (mq == "2")
                            {
                                joinmst = " inner join master_setting m on find_in_set(m.master_id,a.col2)=1 and m.type = 'KIG' and find_in_set(m.client_id,a.client_id)=1 and find_in_set(m.client_unit_id,a.client_unit_id)=1 ";
                                colmst = "group_concat(m.master_name) as Item_Grp ";
                            }
                            else if (mq == "3")
                            {
                                joinmst = " left join master_setting m on find_in_set(m.master_id,a.col2)=1 and m.type = 'KIG' and find_in_set(m.client_id,a.client_id)=1 and find_in_set(m.client_unit_id,a.client_unit_id)=1 ";
                                colmst = "group_concat(m.master_name) as Item_Grp,a.col4 Amount ";
                                grpmst = ",a.col4";
                            }
                        }
                        switch (btnval.ToUpper())
                        {
                            case "EDIT":
                            case "VIEW":
                                cmd = "select (a.client_id||a.client_unit_id||a.vch_num||TO_CHAR(a.vch_date,'yyyymmdd')||a.type) fstr,a.vch_num Doc_no," +
                                    "to_char(a.vch_date,'" + sgen.Getsqldateformat() + "') Doc_Date,u.user_id," + colmst + "" +
                                    "from enx_tab a " +
                                    "inner join user_details u on u.vch_num=a.col3 and u.type='CPR'" + joinmst + "" +
                                    "where a.type='" + type + "' and a.client_unit_id='" + unitid_mst + "' " +
                                    "group by (a.client_id||a.client_unit_id||a.vch_num||TO_CHAR(a.vch_date,'yyyymmdd')||a.type),a.vch_num," +
                                    "to_char(a.vch_date,'" + sgen.Getsqldateformat() + "'),u.user_id" + grpmst + "";
                                break;
                        }
                    }
                    break;
                #endregion
                #region invreps2
                case "invreps2":
                    switch (btnval.ToUpper())
                    {
                        //case "ITWS":
                        //    //cmd = "select iv.icode as item_code,iv.iname as item_name,sum(iv.netamt) as net_amount from itransaction iv " +
                        //    //    "where substr(iv.type, 1, 1) = '5' and iv.client_id = '" + clientid_mst + "' and iv.client_unit_id = '" + unitid_mst + "' and " +
                        //    //    "to_date(iv.vch_date) between to_date('03/11/2019','" + sgen.Getsqldateformat() + "') and" +
                        //    //    " to_date('04/11/2019','" + sgen.Getsqldateformat() + "')  group by(iv.icode, iv.iname)";
                        //    cmd = "select '-' as fstr, iv.icode as item_code,iv.iname as item_name,sum(iv.basicamt) as basic_amt,sum(iv.ginstlchrg) GrossAmt,sum(iv.netamt) as net_amount from itransaction iv " +
                        //        "where substr(iv.type, 1, 1) = '5' and iv.client_id = '" + clientid_mst + "' and iv.client_unit_id = '" + unitid_mst + "' and " +
                        //        "to_date(iv.vch_date) between to_date('03/11/2019','" + sgen.Getsqldateformat() + "') and" +
                        //        " to_date('30/11/2019','" + sgen.Getsqldateformat() + "')  group by(iv.icode, iv.iname)";
                        //    //cmd = "select iv.icode as item_code,iv.iname as item_name,sum(iv.netamt) as net_amount from itransaction iv where substr(iv.type,1,1)= '5' and iv.client_id = '" + clientid_mst + "' and iv.client_unit_id = '" + unitid_mst + "' group by(iv.icode, iv.iname)";
                        //    break;
                        //case "PWS":
                        //    cmd = "select '-' as fstr, iv.acode as party_code,cl.C_name as Party_name,sum(iv.basicamt) as basic_amt,sum(iv.ginstlchrg) GrossAmt,sum(iv.netamt) as net_amount from itransaction " +
                        //        "iv inner join clients_mst cl on cl.vch_num = iv.acode and cl.client_id = iv.client_id and" +
                        //        " cl.client_unit_id = iv.client_unit_id and cl.type = 'BCD' where substr(iv.type,1,1)= '5'" +
                        //        " and iv.client_id = '" + clientid_mst + "' and iv.client_unit_id = '" + unitid_mst + "' " +
                        //        "and to_date(iv.vch_date) between to_date('03/11/2019','" + sgen.Getsqldateformat() + "') and" +
                        //        " to_date('30/11/2019','" + sgen.Getsqldateformat() + "') group by(iv.acode, cl.C_name)";
                        //    break;
                        //case "PSO":
                        //    cmd = "select '-' as fstr,pc.acode as prty_code,cl.c_name as party_name,pc.icode,pc.iname,pc.type ord_type,pc.vch_num as so_no,nvl(iv.invoice_no,'-') as invoice_no,to_char(pc.vch_date,'" + sgen.Getsqldateformat() + "') as so_date,nvl(to_char(iv.invoice_dt, '" + sgen.Getsqldateformat() + "'),'-') invoice_dt,pc.qtyord as order_qty,nvl(iv.used_qty,'0') as used_qty,pc.qtyord-nvl(used_qty,'0') as pending_so from purchasesc pc left join(select a.invoice_no, a.invoice_dt, acode, ord_type, icode,iname, so_no, sodate, sum(a.qtyout) as used_qty,a.client_id,a.client_unit_id from(select vch_num invoice_no, vch_date invoice_dt, acode, potype as ord_type,icode,iname,sono as so_no,sodate,qtyout,client_id,client_unit_id from itransaction where substr(type,1,1)='4' and potype = '51' union all select vch_num invoice_no,vch_date invoice_dt,acode, potype as ord_type,icode,iname,sono as so_no,sodate,qtyout,client_id,client_unit_id from itransaction where substr(type,1,1)='4' and potype='50' union all select vch_num, vch_date, acode, type2, icode,iname, VEHNO, INVDATE, qtyout, client_id, client_unit_id from itransaction where type = '60' union all select vch_num, vch_date, acode, type2, icode,iname, VEHNO, INVDATE, qtyout, client_id, client_unit_id from itransaction where type = '61') a group by(a.invoice_no, a.invoice_dt, acode, ord_type, icode,iname, so_no, sodate, client_id,client_unit_id)) iv on iv.so_no = pc.vch_num and iv.sodate = pc.vch_date and iv.acode = pc.acode and iv.icode = pc.icode and iv.ord_type = pc.type and pc.client_id = iv.client_id and pc.client_unit_id = iv.client_unit_id left join clients_mst cl on cl.vch_num = pc.acode and cl.type = 'BCD' and cl.client_id = pc.client_id and cl.client_unit_id = pc.client_unit_id where pc.pur_type = 'NPI' and substr(pc.type,1,1)= '4' and pc.client_id = '" + clientid_mst + "' and pc.client_unit_id = '" + unitid_mst + "' ";
                        //    break;
                        case "PDSP":
                            //cmd = "select a.icode as 'fstr,' a.icode,a.Iname,a.disp_no,a.dsp_date,a.Disp_type,sum(a.disp_qty)as disp_qty,sum(a.inv_qty) as inv_qty,(nvl(sum(a.Disp_qty), '0') - nvl(sum(a.inv_qty), '0'))" +
                            //    " as Pending_inv from(select distinct dc.icode as Icode,dc.iname as Iname, dc.vch_num as disp_no, to_char(dc.date2, '"+sgen.Getsqldateformat()+"') as Dsp_date," +
                            //    "dc.uom2 as Disp_type, (dc.qtyout) as disp_qty, '0' inv_qty from itransaction dc where dc.client_id = '" + clientid_mst + "' " +
                            //    "and dc.client_unit_id = '" + unitid_mst + "' and substr(dc.type, 1, 1) = '6' union all select dc.icode as Icode," +
                            //    "dc.iname as Iname, dc.dspno as disp_no, to_char(dc.dspdate, '"+ sgen.Getsqldateformat() + "') as dsp_date, '0' as Disp_type,'0' as Disp_qty," +
                            //    "dc.qtyout as inv_qty from itransaction dc where dc.client_id = '" + clientid_mst + "' and dc.client_unit_id = '" + unitid_mst + "' and substr(dc.type, 1, 1) = '5' " +
                            //    "and dc.chlno != '0') a group by(a.icode, a.Iname, a.disp_no, a.Dsp_date, a.Disp_type)";
                            cmd = "select '-' as fstr,nvl(iv.invoice_no,'-') as invoice_no,nvl(to_char(iv.invoice_dt, '" + sgen.Getsqldateformat() + "'),'-') as invoice_dt," +
                                "dp.acode,cl.c_name as party_name,dp.type2 ord_type,dp.icode,dp.vch_num as dsp_no,to_char(dp.vch_date,'" + sgen.Getsqldateformat() + "') as dsp_date,dp.qtychl as disp_qty," +
                                "nvl(iv.invoice_qty,'0') invoice_qty,dp.qtychl - nvl(iv.invoice_qty, '0') as pending_disp from itransaction dp " +
                                "left join (select a.invoice_no,a.invoice_dt,a.acode,a.ord_type,a.icode,a.dspno,a.dspdate,sum(a.qtyout) as invoice_qty,a.client_id," +
                                "a.client_unit_id from(select vch_num invoice_no, vch_date invoice_dt, acode,type as ord_type,icode,dspno,dspdate," +
                                "qtyout,client_id,client_unit_id from itransaction where potype = '53') a group by (a.invoice_no, a.invoice_dt, a.acode," +
                                "a.ord_type,a.icode,a.dspno,a.dspdate,a.client_id,a.client_unit_id)) iv on dp.vch_num = iv.dspno and dp.icode = iv.icode " +
                                "and dp.acode = iv.acode and iv.ord_type = dp.type2 and dp.client_unit_id=iv.client_unit_id and dp.vch_date = iv.dspdate " +
                                "inner join clients_mst cl on cl.vch_num = dp.acode and cl.type = 'BCD' and find_in_set(cl.client_unit_id,dp.client_unit_id)=1 " +
                                "and substr(cl.vch_num,0,3)='303' where substr(dp.type,1,1)= '6' and dp.client_unit_id = '" + unitid_mst + "'";
                            break;
                        //case "PDSC":
                        //    cmd = "select '-' as fstr,kt.col1 as prty_code,cl.c_name as party_name,kt.col5 as icode,kt.col27 as iname,kt.type ord_type," +
                        //        "(case when iv.ord_type = '52' then 'Invoiced' when iv.ord_type = '61' then 'Dispatched' else iv.ord_type end) as type,kt.col2 as sdl_no," +
                        //        "to_char(kt.date1, '" + sgen.Getsqldateformat() + "') as sdl_date,to_char(kt.date8, '" + sgen.Getsqldateformat() + "') as sdl_start_date,to_char(kt.date9, '" + sgen.Getsqldateformat() + "') as sdl_end_date" +
                        //        ",nvl(iv.invoice_no, '-') as invoice_no,nvl(to_char(iv.invoice_dt, '" + sgen.Getsqldateformat() + "'), '-') invoice_dt,kt.col10 as order_qty,nvl(iv.used_qty, '0') " +
                        //        "as used_qty,kt.col10 - nvl(iv.used_qty, '0') as pending_sdl from kc_tab kt inner join (select a.invoice_no,a.invoice_dt,a.acode,a.ord_type," +
                        //        "a.type,a.icode,a.iname,a.sdlno,a.sdldate, sum(a.qtyout) as used_qty,a.client_id,a.client_unit_id from(select vch_num invoice_no," +
                        //        " vch_date invoice_dt, acode, type, potype as ord_type,icode,iname,sdlno,to_char(sdldate, 'ddMMYYY') as sdldate,nvl(qtyout, '0') as qtyout" +
                        //        ",client_id,client_unit_id from itransaction where substr(type, 1, 1) = '4' and potype = '52' union all select vch_num, vch_date, acode," +
                        //        " type2, type, icode, iname, GDISC, to_char(EWAYDATE, 'ddMMYYYY') sdldate,nvl(qtyout, '0') as qtyout, client_id,client_unit_id from itransaction " +
                        //        "where type = '61' and substr(type2,1,1)= '4') a group by(a.invoice_no, a.invoice_dt, acode, a.ord_type, a.type, a.icode, a.iname, a.sdlno," +
                        //        " a.sdldate, a.client_id, a.client_unit_id)) iv on iv.sdlno = kt.col2 and iv.acode = kt.col1 and iv.icode = kt.col5 and iv.type = kt.type" +
                        //        " and kt.client_id = iv.client_id and kt.client_unit_id = iv.client_unit_id left join clients_mst cl on cl.vch_num = kt.col1 and cl.type =" +
                        //        " 'BCD' and cl.client_id = kt.client_id and cl.client_unit_id = kt.client_unit_id where substr(kt.type,1,1)= '4' and kt.col20 = 'DSC' " +
                        //        "and kt.client_id = '" + clientid_mst + "' and kt.client_unit_id = '" + unitid_mst + "' order by kt.vch_num ";
                        //    break;
                        case "ISUM":
                            #region
                            //cmd = "select (nvl(t.client_unit_id,'0')||i.icode) as fstr,i.icode AS Item_Code,i.iname as Item_Name,i.cpartno PartNo," +
                            //    "sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout,0)) Issued,sum(nvl(t.qtyin,0))-sum(nvl(t.qtyout,0)) Closing from item i " +
                            //    "left join itransaction t on t.icode=i.icode and t.client_unit_id='" + unitid_mst + "' " +
                            //    "where length(i.icode)>4 group by nvl(t.client_unit_id,'0'),i.icode,i.iname,i.cpartno order by i.icode";
                            //cmd = "select (nvl(t.client_unit_id,'0')||i.icode) as fstr,i.icode Item_Code,i.iname Item_Name,i.cpartno PartNo," +
                            //    "sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout,0)) Issued,sum(nvl(t.qtyin,0))-sum(nvl(t.qtyout,0)) Closing from item i " +
                            //    "left join (select client_id,client_unit_id,icode,iname,nvl(qtyin,0) qtyin,nvl(qtyout,0) qtyout,(case when nvl(qtyin,0)=0 then -(nvl(iamount,0)) else nvl(iamount,0) end) " +
                            //    "from itransaction) t on t.icode=i.icode and t.client_id=i.client_id and t.client_unit_id=i.client_unit_id " +
                            //    "where length(i.icode)>4 group by nvl(t.client_unit_id,'0'),i.icode,i.iname,i.cpartno order by i.icode";
                            //cmd = "select (nvl(t.client_unit_id,'0')||i.icode) as fstr,i.icode Item_Code,i.iname Item_Name,i.cpartno PartNo,sum(t.qtyin) as Received," +
                            //     "sum(t.qtyout) Issued,sum(t.qtyin) - sum(t.qtyout) Closing,round(case when sum(t.qtyin) - sum(t.qtyout) = 0 then 0 else (sum(t.iamount) / (sum(t.qtyin) - sum(t.qtyout))) end) Rate," +
                            //     "sum(t.iamount) Amount from item i " +
                            //     "left join (select client_id, client_unit_id, icode, iname, to_number(nvl(qtyin,0)) qtyin,to_number(nvl(qtyout, 0)) qtyout," +
                            //     "(case when to_number(nvl(qtyin, 0)) = 0 then - to_number(nvl(iamount, 0)) else to_number(nvl(iamount, 0)) end) iamount from itransaction " +
                            //     "where type in ('Q01', 'Q02', '36', '10', '11', '30', '32', '21', '22') and store = 'Y') t on t.icode = i.icode and t.client_id = i.client_id " +
                            //     "and t.client_unit_id = i.client_unit_id " +
                            //     "where i.type='IT' and i.client_id='" + clientid_mst + "' and i.client_unit_id='" + unitid_mst + "' " +
                            //     "group by nvl(t.client_unit_id, '0'),i.icode,i.iname,i.cpartno order by i.icode";
                            #endregion
                            //cmd = "select (nvl(t.client_unit_id,'0')||i.icode) as fstr,i.icode Item_Code,i.iname Item_Name,i.cpartno PartNo,sum(t.qtyin) as Received," +
                            //     "sum(t.qtyout) Issued,sum(t.qtyin) - sum(t.qtyout) Closing,round(case when sum(t.qtyin) - sum(t.qtyout) = 0 then 0 else (sum(t.iamount) / (sum(t.qtyin) - sum(t.qtyout))) end) Rate," +
                            //     "sum(t.iamount) Amount from item i " +
                            //     "left join (select client_id, client_unit_id, icode, iname, to_number(nvl(qtyin,0)) qtyin,to_number(nvl(qtyout, 0)) qtyout," +
                            //     "(case when to_number(nvl(qtyin, 0)) = 0 then - to_number(nvl(iamount, 0)) else to_number(nvl(iamount, 0)) end) iamount from itransaction " +
                            //     "where length(icode)>5 and store = 'Y') t on t.icode = i.icode and t.client_id = i.client_id " +
                            //     "and t.client_unit_id = i.client_unit_id " +
                            //     "where length(i.icode)>5 and i.client_id='" + clientid_mst + "' and find_in_set(i.client_unit_id, '" + unitid_mst + "')=1 " +
                            //     "group by nvl(t.client_unit_id, '0'),i.icode,i.iname,i.cpartno order by i.icode";
                            cmd = "select (nvl(t.client_unit_id,'0')||i.icode) as fstr,i.icode Item_Code,gd.master_name Maingrp,mg.master_name Itemgrp,sg.iname Itemsubgrp," +
                                "i.iname Item_Name,i.cpartno PartNo,um.master_name as UOM,sum(t.qtyin) as Received,sum(t.qtyout) Issued,sum(t.qtyin) - sum(t.qtyout) Closing," +
                                "round(case when sum(t.qtyin)- sum(t.qtyout) = 0 then 0 else (sum(t.iamount) / (sum(t.qtyin) - sum(t.qtyout))) end) Rate," +
                                "sum(t.iamount) Amount from item i " +
                                "left join(select client_id, client_unit_id, icode, iname, to_number(nvl(qtyin,0)) qtyin,to_number(nvl(qtyout, 0)) qtyout," +
                                "(case when to_number(nvl(qtyin, 0)) = 0 then - to_number(nvl(iamount, 0)) else to_number(nvl(iamount, 0)) end) iamount from itransaction " +
                                "where length(icode) > 5 and store = 'Y') t on t.icode = i.icode and t.client_unit_id = i.client_unit_id " +
                                "inner join master_setting gd on gd.classid = SUBSTR(i.icode, 1, 1) and gd.type = 'KGP' " +
                                "inner join master_setting mg on mg.master_id = substr(i.icode, 1, 3) and mg.type = 'KIG' and find_in_set(mg.client_unit_id,i.client_unit_id)=1 " +
                                "inner join item sg on sg.icode = substr(i.icode, 1, 5) and sg.type = 'SG' and find_in_set(sg.client_unit_id,i.client_unit_id)=1 " +
                                "inner join master_setting um on um.master_id = i.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, i.client_unit_id)= 1 " +
                                "where length(i.icode)> 5 and find_in_set(i.client_unit_id, '" + unitid_mst + "')= 1 " +
                                "group by nvl(t.client_unit_id, '0'),i.icode,gd.master_name,mg.master_name,sg.iname,i.iname,um.master_name,i.cpartno order by i.icode";
                            break;
                        case "IDET":
                            //cmd = "select t.icode fstr,t.icode Item_Code,i.iname Item_Name,t.vch_num DocNo,to_char(t.vch_date,'" + sgen.Getsqldateformat() + "') Dated," +
                            //    "(case when substr(t.type,1,1)='Q' then substr(t.type,2,2) else t.type end) Type,nvl(m.master_name,'-') TypeDesc,t.qtyin Received,t.qtyout Issued," +
                            //    "t.irate Rate,t.iamount Amount,nvl(d.master_name,'-') Department,nvl(t.pktno,0) pktno from itransaction t " +
                            //    "inner join item i on t.icode=i.icode and find_in_set(i.client_unit_id,t.client_unit_id)=1 " +
                            //    "left join master_setting d on d.master_id=t.deptno and d.Type='MDP' and find_in_set(d.client_unit_id,t.client_unit_id)=1 " +
                            //    "left join (select master_id,master_name,client_id from master_setting where type in ('KMR','KSR','KIS','KRG','KPV','KPO','KDS','KPD','KRQ','KDP')) m " +
                            //    "on m.master_id=(case when substr(t.type,1,1)='Q' then substr(t.type,2,2) else t.type end) and find_in_set(m.client_id,t.client_id)=1 " +
                            //    "where concat(t.client_unit_id,t.icode)='" + param1 + "' and t.store='Y' and to_date(to_char(t.vch_date,'" + sgen.Getsqldateformat() + "'),'" + sgen.Getsqldateformat() + "') between " +
                            //    "to_date('" + param2.Split(new string[] { "!~!~!~!~!" }, StringSplitOptions.None)[0].Trim() + "','" + sgen.Getsqldateformat() + "') and " +
                            //    "to_date('" + param2.Split(new string[] { "!~!~!~!~!" }, StringSplitOptions.None)[1].Trim() + "','" + sgen.Getsqldateformat() + "') order by t.vch_date desc";

                            cmd = "select t.icode fstr,t.icode Item_Code,i.iname Item_Name,t.vch_num DocNo,to_char(t.vch_date,'" + sgen.Getsqldateformat() + "') Dated," +
                                "(case when substr(t.type, 1, 1) = 'Q' then substr(t.type,2,2) else t.type end) Type,(CASE WHEN substr(t.type,1,2)= '37' THEN 'Physical Verification' else nvl(m.master_name, '-') end) TypeDesc," +
                                "t.qtyin Received, t.qtyout Issued, t.irate Rate, t.iamount Amount, nvl(d.master_name, '-') Department,nvl(t.pktno, 0) pktno from itransaction t " +
                                "inner join item i on t.icode = i.icode and find_in_set(i.client_unit_id, t.client_unit_id)= 1 " +
                                "left join master_setting d on d.master_id = t.deptno and d.Type = 'MDP' and find_in_set(d.client_unit_id, t.client_unit_id)= 1 " +
                                "left join(select master_id, master_name, client_id, CLIENT_UNIT_ID from master_setting where type in ('KMR','KSR','KIS','KRG','KPO','KDS','KPD','KRQ','KDP')) m " +
                                "on m.master_id = (case when substr(t.type, 1, 1) = 'Q' then substr(t.type,2,2) else t.type end) and find_in_set(m.client_id, t.client_id)= 1 and find_in_set(m.client_unit_id, t.client_unit_id)= 1 " +
                                "where concat(t.client_unit_id, t.icode)= '" + param1 + "' and t.store = 'Y' and to_date(to_char(t.vch_date,'" + sgen.Getsqldateformat() + "'),'" + sgen.Getsqldateformat() + "') " +
                                "between to_date('" + param2.Split(new string[] { "!~!~!~!~!" }, StringSplitOptions.None)[0].Trim() + "','" + sgen.Getsqldateformat() + "') and " +
                                "to_date('" + param2.Split(new string[] { "!~!~!~!~!" }, StringSplitOptions.None)[1].Trim() + "','" + sgen.Getsqldateformat() + "') order by t.created_date desc";

                            break;
                        case "IFIFO":
                        case "ILEDGER":
                            cmd = "select (it.icode||it.client_id||it.client_unit_id) fstr,it.icode,it.iname,it.cpartno,um.master_name Primary_Unit from item it " +
                                "inner join master_setting um on it.uom = um.master_id and um.type = 'UMM' and find_in_set(um.client_unit_id, it.client_unit_id) = 1 " +
                                "where it.type = 'IT' and find_in_set(it.client_unit_id, '" + unitid_mst + "')=1 and it.status = 'Y' and substr(icode,1,1) not in ('8', '9')";
                            break;
                        case "CISUM":
                            //cmd = "select icode,iname,uom,sum(to_number(qtyin)) qtyin,sum(to_number(qtyout)) qtyout,sum(to_number(qtyin))-sum(to_number(qtyout)) closing,client_id,client_unit_id from " +
                            //    "(select lc.icode, i.iname, um.master_name uom, ml.master_name loc, nvl(lc.qtyin, 0) qtyin, nvl(lc.qtyout, 0) qtyout,(case when lc.pono = '0' then 'C' else lc.pono end) store," +
                            //    "lc.type,lc.client_id,lc.client_unit_id from btchtrans lc " +
                            //    "inner join item i on i.icode = lc.icode and i.type = 'IT' and i.client_id = lc.client_id and i.client_unit_id = lc.client_unit_id " +
                            //    "inner join master_setting um on um.master_id = i.uom and um.type = 'UMM' and find_in_set(um.client_id, lc.client_id)= 1 and find_in_set(um.client_unit_id, lc.client_unit_id)= 1 " +
                            //    "inner join master_setting ml on ml.master_id = lc.loc and ml.type = 'LC6' and ml.client_id = lc.client_id and ml.client_unit_id = lc.client_unit_id " +
                            //    "where lc.type in ('Q01', 'Q02', '36', '10', '11', '30', '32', '21', '22') and lc.store = 'Y') a " +
                            //    "group by icode, iname, uom, client_id, client_unit_id order by icode asc";
                            cmd = "select '-' fstr,icode,iname,uom,sum(to_number(qtyin)) qtyin,sum(to_number(qtyout)) qtyout,sum(to_number(qtyin))-sum(to_number(qtyout)) closing,client_id,client_unit_id from " +
    "(select lc.icode, i.iname, um.master_name uom, ml.master_name loc, nvl(lc.qtyin, 0) qtyin, nvl(lc.qtyout, 0) qtyout,(case when lc.pono = '0' then 'C' else lc.pono end) store," +
    "lc.type,lc.client_id,lc.client_unit_id from btchtrans lc " +
    "inner join item i on i.icode = lc.icode and i.type = 'IT' and find_in_set(i.client_unit_id,lc.client_unit_id)=1 " +
    "inner join master_setting um on um.master_id = i.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, lc.client_unit_id)= 1 " +
    "inner join master_setting ml on ml.master_id = lc.loc and ml.type = 'LC6' and find_in_set(ml.client_unit_id,lc.client_unit_id)=1 " +
    "where length(lc.icode)>5 and lc.store = 'Y' and lc.client_unit_id='" + unitid_mst + "') a " +
    "group by icode, iname, uom, client_id, client_unit_id order by icode asc";
                            break;
                        case "LOCISUM":
                            cmd = "select '-' fstr,icode,iname,uom,loc,sum(to_number(qtyin)) qtyin,sum(to_number(qtyout)) qtyout,sum(to_number(qtyin))-sum(to_number(qtyout)) closing,store,client_id,client_unit_id " +
                                "from (select lc.icode, i.iname, um.master_name uom, ml.master_name loc, nvl(lc.qtyin, 0) qtyin, nvl(lc.qtyout, 0) qtyout, (case when lc.pono = '0' then 'C' else lc.pono end) store," +
                                "lc.type,lc.client_id,lc.client_unit_id from btchtrans lc " +
                                "inner join item i on i.icode = lc.icode and i.type = 'IT' and find_in_set(i.client_unit_id,lc.client_unit_id)=1 " +
                                "inner join master_setting um on um.master_id = i.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, lc.client_unit_id)=1 " +
                                "inner join master_setting ml on ml.master_id = lc.loc and ml.type = 'LC6' and find_in_set(ml.client_unit_id,lc.client_unit_id)=1 " +
                                "where length(lc.icode)>5 and lc.store = 'Y') a group by icode, iname, uom, loc, store,client_id, client_unit_id order by icode asc";
                            break;
                        case "GRPSUM":
                            cmd = "select '-' fstr, mg_code,mg,sg_code,sg,sum(to_number(iamount)) iamount from " +
                                "(select lc.icode, mg.master_name mg,mg.master_id as mg_code, sg.iname sg,sg.icode as sg_code, i.iname, um.master_name uom, ml.master_name loc, nvl(lc.qtyin, 0) qtyin, nvl(lc.qtyout, 0) qtyout," +
                                "(case when lc.pono = '0' then 'C' else lc.pono end) store,nvl(lc.irate, 0) irate,nvl(lc.iamount, 0) iamount,lc.type,lc.client_id," +
                                "lc.client_unit_id from btchtrans lc " +
                                "inner join item i on i.icode = lc.icode and i.type = 'IT' and find_in_set(lc.client_unit_id,i.client_unit_id)=1 " +
                                "inner join master_setting um on um.master_id = i.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, lc.client_unit_id)= 1 " +
                                "inner join master_setting ml on ml.master_id = lc.loc and ml.type = 'LC6' and find_in_set(ml.client_unit_id,lc.client_unit_id)=1 " +
                                "inner join master_setting mg on mg.master_id = substr(lc.icode, 1, 3) and mg.type = 'KIG' and find_in_set(mg.client_unit_id,lc.client_unit_id)=1 " +
                                "inner join item sg on sg.icode = substr(lc.icode, 1, 5) and sg.type = 'SG' and find_in_set(sg.client_unit_id,lc.client_unit_id)=1 " +
                                "where length(lc.icode)> 5 and lc.store = 'Y' and lc.client_unit_id = '" + unitid_mst + "') a " +
                                "group by mg, sg,mg_code,sg_code";
                            break;
                        case "PPO":
                            cmd = "select (pono||podate||potype) fstr,pono,podate,potype,icode,iname,partycode,partyname,max(to_number(qtyord)) qtyord,sum(to_number(qtyin)) qtyin," +
                                "(max(to_number(qtyord))-sum(to_number(qtyin))) qtybalance,sum(to_number(iamount)) iamount " +
                                "from (select p.vch_num pono,to_char(p.vch_date,'" + sgen.Getsqldateformat() + "') podate,p.type potype," +
                                "p.icode,it.iname,p.acode Partycode,cl.c_name Partyname,nvl(p.qtyord, 0) qtyord,nvl(i.qtyin, 0) qtyin,nvl(i.irate, 0) irate," +
                                "nvl(i.iamount, 0) iamount,i.vch_num mrnno,to_char(i.vch_date,'" + sgen.Getsqldateformat() + "') mrndate," +
                                "i.type mrntype,i.invno,to_char(i.invdate,'" + sgen.Getsqldateformat() + "') invdate,i.chlno," +
                                "to_char(i.chldate,'" + sgen.Getsqldateformat() + "') chldate,utol,ltol " +
                                "from purchases p " +
                                "inner join itransaction i on i.pono = p.vch_num and to_char(i.podate, 'ddmmyyyy') = to_char(p.vch_date, 'ddmmyyyy') " +
                                "and i.client_unit_id = p.client_unit_id and i.acode = p.acode and i.store = 'Y' " +
                                "inner join item it on it.icode = p.icode and it.type = 'IT' and find_in_set(p.client_unit_id,it.client_unit_id)=1 " +
                                "inner join clients_mst cl on cl.vch_num = p.acode and substr(cl.vch_num,0,3)='203' and cl.type='BCD' and find_in_set(cl.client_unit_id,p.client_unit_id)=1 " +
                                "where p.type in ('50', '51', '52', '53') and p.client_unit_id = '" + unitid_mst + "') " +
                                //"group by pono,podate,potype,icode,iname,partycode,partyname having (max(to_number(qtyord))-sum(to_number(qtyin)))> 0";
                                "group by pono,podate,potype,icode,iname,partycode,partyname,ltol having sum(to_number(qtyin))<(max(to_number(qtyord))-round((max(to_number(qtyord))*to_number(ltol))/100))";
                            break;
                        case "PPODET":
                            cmd = "select (p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) fstr,p.vch_num pono,to_char(convert_tz(p.vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') podate,p.type potype," +
                                "p.icode,it.iname,p.acode Partycode,cl.c_name Partyname,nvl(p.qtyord, 0) qtyord,nvl(i.qtyin, 0) qtyin,nvl(i.irate, 0) irate," +
                                "nvl(i.iamount, 0) iamount,i.vch_num mrnno,to_char(i.vch_date,'" + sgen.Getsqldateformat() + "') mrndate," +
                                "i.type mrntype,i.invno,to_char(i.invdate,'" + sgen.Getsqldateformat() + "') invdate,i.chlno," +
                                "to_char(i.chldate,'" + sgen.Getsqldateformat() + "') chldate " +
                                "from purchases p " +
                                "inner join itransaction i on i.pono = p.vch_num and to_char(i.podate, 'ddmmyyyy') = to_char(p.vch_date, 'ddmmyyyy') " +
                                "and i.client_unit_id = p.client_unit_id and i.acode = p.acode and i.store = 'Y' " +
                                "inner join item it on it.icode = p.icode and it.type = 'IT' and find_in_set(p.client_unit_id,it.client_unit_id)=1 " +
                                "inner join clients_mst cl on cl.vch_num = p.acode and substr(cl.vch_num,0,3)='203' and cl.type='BCD' and find_in_set(cl.client_unit_id,p.client_unit_id)=1 " +
                                "where p.type in ('50', '51', '52', '53') and p.client_unit_id = '" + unitid_mst + "' and " +
                                "(p.vch_num||to_char(p.vch_date,'" + sgen.Getsqldateformat() + "')||p.type)='" + param1.Trim() + "'";
                            break;
                    }
                    break;
                #endregion  
                #region gate in item
                case "g_in_item":
                    switch (btnval.ToUpper())
                    {
                        case "PRINT":
                        case "EDIT":
                            cmd = "select (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) as fstr,p.vch_num DOC_No," +
                                "to_char(convert_tz(p.vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') DOC_Date,p.type TYPE_CODE," +
                                "c.c_name as Party_Name,p.chlno Challan_No, p.invno incoming_doc_no, p.tmode Transport, p.pktno as NOOFPKT_BOX, p.pono from itransaction p " +
                                "inner join clients_mst c on p.acode = c.vch_num and find_in_set(c.client_unit_id,p.client_unit_id)=1 and c.type='BCD' " +
                                "where p.client_unit_id = '" + unitid_mst + "' and p.type in ('401','402')  " + xprdrange.Replace("vch_date", "p.vch_date") + " order by p.vch_num desc";
                            break;

                        case "VIEW":
                            cmd = "select (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) as fstr,p.vch_num DOC_No," +
                                "to_char(convert_tz(p.vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') DOC_Date,p.type TYPE_CODE," +
                                "c.c_name as Party_Name,c.c_gstin as Party_Gstin,c.addr as Party_Address,p.chlno Challan_No, p.ewayno Eway_BillNo," +
                                "(case when to_char(p.ewaydate, '" + sgen.Getsqldateformat() + "')='01/01/1900' then '-' else to_char(p.ewaydate, '" + sgen.Getsqldateformat() + "') end) as Eway_BillDate," +
                                "(case when to_char(p.invdate, '" + sgen.Getsqldateformat() + "')='01/01/1900' then '-' else to_char(p.invdate, '" + sgen.Getsqldateformat() + "') end)as incoming_doc_date" +
                                ",p.invno incoming_doc_no, p.tmode Transport, p.icode Item_Code, p.iname Item_Name, p.cpartno Part_No, p.uom UOM, p.hsno HSN,qtychl Challan_Qty,qtyrcvd In_Qty, " +
                                "p.pktno as NOOFPKT_BOX,p.iremark remark, p.pono,(case when to_char(p.podate, '" + sgen.Getsqldateformat() + "')='01/01/1900' then '-' else to_char(p.podate, '" + sgen.Getsqldateformat() + "') end) as podate from itransaction p " +
                                 "inner join clients_mst c on p.acode = c.vch_num and find_in_set(c.client_unit_id,p.client_unit_id)=1 and c.type='BCD' " +
                                "where p.client_unit_id = '" + unitid_mst + "' and p.type in ('401','402')  " + xprdrange.Replace("vch_date", "p.vch_date") + " order by p.vch_num desc";

                            //cmd = "select (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) as fstr,p.vch_num DOC_No," +
                            //    "to_char(convert_tz(p.vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') DOC_Date,p.type TYPE_CODE," +
                            //    "c.c_name as Party_Name,c.c_gstin as Party_Gstin,c.addr as Party_Address,p.chlno Challan_No, p.ewayno Eway_BillNo,to_char(p.ewaydate, '" + sgen.Getsqldateformat() + "') as Eway_BillDate,to_char(p.invdate, '" + sgen.Getsqldateformat() + "') as incoming_doc_date" +
                            //    ",p.invno incoming_doc_no, p.tmode Transport, p.icode Item_Code, p.iname Item_Name, p.cpartno Part_No, p.uom UOM, p.hsno HSN,qtychl Challan_Qty,qtyrcvd In_Qty, " +
                            //    "p.pktno as NOOFPKT_BOX,p.iremark remark, p.pono,to_char(p.podate, '" + sgen.Getsqldateformat() + "') as podate from itransaction p " +
                            //    "left join kc_tab kt on p.gatein_no = (kt.client_id || kt.vch_num || kt.type) and find_in_set(p.client_unit_id,kt.client_unit_id)=1 and kt.type = 'GIN' " +
                            //    "inner join clients_mst c on p.acode = c.vch_num and find_in_set(c.client_unit_id,p.client_unit_id)=1 and c.type='BCD' " +
                            //    "where p.client_unit_id = '" + unitid_mst + "' and p.type in ('401','402')  " + xprdrange.Replace("vch_date", "p.vch_date") + " order by p.vch_num desc";
                            break;
                        // shiv
                        case "NEW":
                            cmd = "SELECT master_id FSTR,master_id,GATE_IN_TYPE FROM (select '401' as master_id, 'WITH PURCHASE ORDER' as GATE_IN_TYPE from dual Union all select '402' master_id,'WITHOUT PURCHASE ORDER' as REJ_TYPE from dual)";
                            break;
                        case "PARTY":
                            switch (sgen.GetSession(MyGuid, "BGINTYPE").ToString().Trim())
                            {
                                case "401":
                                    cmd = "select distinct (a.vch_num|| to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.vch_num vendor_code,a.c_name vendor_name," +
                                        "a.c_gstin as gstin,a.addr,a.pincode Pincode from clients_mst a " +
                                        "inner join purchases pc on pc.acode=a.vch_num and find_in_set(pc.client_unit_id,a.client_unit_id)=1 and pc.type in ('50','52') " +
                                        "where substr(a.vch_num,0,3)='203' and find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 and a.type='BCD'";
                                    break;
                                default:
                                    cmd = "select (a.vch_num|| to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.vch_num vendor_code,a.c_name Vendor_Name," +
                                        "a.addr address,a.pincode Pincode, a.c_gstin as GSTIN,a.cpname as PerName,(case when a.cpcont='0000000000' then '-' else a.cpcont end) as ContactNo " +
                                        "from clients_mst a where substr(a.vch_num,0,3)='203' and find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 and a.type='BCD'";
                                    break;
                            }
                            break;
                        case "ITEM":
                            if (sgen.GetSession(MyGuid, "BGINTYPE") != null)
                            {
                                if (sgen.GetSession(MyGuid, "BGINTYPE").ToString() == "401")
                                {
                                    if (sgen.GetSession(MyGuid, "BGIN2PARTY") != null)
                                    {
                                        if (param1 != "") where = " and (p.client_id||p.client_unit_id||p.vch_num||p.icode||to_char(p.vch_date,'yyyymmdd')||p.type) not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','").Trim().ToString() + "')";
                                        cmd = "select (p.vch_num||p.icode||to_char(it.vch_date,'yyyymmdd')||it.type) fstr," +
                                            "p.vch_num PO_Number,to_char(p.vch_date,'" + sgen.Getsqldateformat() + "') PO_Date,p.icode ICode,it.iname," +
                                            "it.cpartno PartNo,um.master_name UOM,hsn.master_name HSN,location_name('" + clientid_mst + "'||'" + unitid_mst + "'||itb.loc) location," +
                                            "nvl(s.closing,'0') as stock,p.qtyord,p.bal_qty from item it " +
                                            "inner join (select a.vch_num,a.vch_date,a.type,a.acode,a.icode,a.client_id,a.client_unit_id,a.qtyord,sum(a.inv_qty) inv_qty," +
                                            "(a.qtyord - nvl(sum(a.inv_qty), '0')) as bal_qty from(select distinct po.vch_num,po.vch_date,po.type,po.acode,po.icode,po.client_id," +
                                            "po.client_unit_id,po.qtyord,nvl(iv.qtyrcvd,'0') as inv_qty from purchases po " +
                                            "left join itransaction iv on iv.pono = po.vch_num and to_char(iv.podate,'yyyymmdd')=to_char(po.vch_date,'yyyymmdd') and iv.icode=po.icode " +
                                            "and iv.type='02' and iv.client_unit_id = po.client_unit_id " +
                                            "where po.type in ('50','54','52') and po.client_unit_id = '" + unitid_mst + "' " +
                                            "union all " +
                                            "select distinct po.vch_num,po.vch_date,po.type,po.acode,po.icode,po.client_id,po.client_unit_id,po.qtyord,nvl(to_number(iv.col11),'0') close_qty from purchases po " +
                                            "left join enx_tab iv on iv.col12 = po.vch_num and to_char(iv.date1,'yyyymmdd')=to_char(po.vch_date,'yyyymmdd') and iv.col7=po.icode " +
                                            "and iv.type='POR' and iv.client_unit_id = po.client_unit_id " +
                                            "where po.type in ('50','54','52') and po.client_unit_id = '" + unitid_mst + "') a " +
                                            "group by(a.vch_num,a.vch_date,a.type,a.acode,a.icode,a.client_id,a.client_unit_id,a.qtyord)) p on p.icode=it.icode and " +
                                            "find_in_set(p.client_unit_id,it.client_unit_id)=1 " + where + " " +
                                            "and p.acode = '" + sgen.GetSession(MyGuid, "BGIN2PARTY").ToString() + "' and to_number(nvl(p.bal_qty,'0')) > 0 " +
                                            "left join master_setting um on um.master_id = it.uom  and um.type = 'UMM' and find_in_set(um.client_unit_id, it.client_unit_id)= 1 " +
                                            "left join master_setting hsn on hsn.master_id = it.hsno and hsn.type = 'HSN' and find_in_set(hsn.client_unit_id, it.client_unit_id)= 1 " +
                                            "inner join itbal itb on it.icode=itb.icode and it.type=itb.type and find_in_set(it.client_unit_id,itb.client_unit_id)=1 " +
                                            "left join(select t.client_unit_id, t.icode, sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout, 0)) as Issued,sum(nvl(t.qtyin, 0)) - sum(nvl(t.qtyout, 0)) as closing from itransaction t " +
                                            "where trim(t.store) = 'Y' group by t.icode,t.client_unit_id ) s on it.icode = s.icode and find_in_set(s.client_unit_id,it.client_unit_id)=1 " +
                                            "where it.type='IT' and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 ";
                                        //cmd = "select (p.client_id||p.client_unit_id||p.vch_num||p.icode||to_char(p.vch_date,'yyyymmdd')||p.type) as fstr,p.type,p.vch_num PO_Number," +
                                        //    "to_char(convert_tz(p.vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') PO_Date," +
                                        //    "pay_term PayTerm,price_term PriceTerm,tmode Transport," +
                                        //    "p.pur_type Purchase_Type," +
                                        //    "p.icode ItemCode,p.iname ItemName,p.cpartno PartNo,p.uom UOM,p.hsno HSN,p.qtystk Stock_Qty,p.qtyind Indent_Qty,p.qtyord Order_Qty,p.irate ItemRate," +
                                        //    "p.taxrate TaxRate,iamount Item_Amt,p.taxamt taxamt,p.disctype Discount_Type,p.discrate Discount_Rate,p.discamt Discount_Amt,p.lineamount LineAmt," +
                                        //    "to_char(convert_tz(p.dlv_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') Delivery_Date from purchases p " +
                                        //    "where p.client_id = '" + clientid_mst + "' and p.client_unit_id = '" + unitid_mst + "' and p.acode = '" + Session["KPOPARTY"].ToString() + "'" + where + "";
                                    }
                                }
                                else
                                {
                                    cmd = "select (it.icode||to_char(it.vch_date,'yyyymmdd')||it.type),it.icode as icode,it.iname as iname,it.cpartno partno,um.master_name as UOM,hsn.master_name as hsn,hsn.group_name taxrate,'0' qtychl," +
                                        "'0' qtyin,'-' iremark,'0' PO_Number,'-' PO_Date,location_name('" + clientid_mst + "'||'" + unitid_mst + "'||itb.loc) as location from item it " +
                                        "inner join itbal itb on it.icode=itb.icode and it.type=itb.type and find_in_set(itb.client_unit_id,it.client_unit_id)=1 " +
                                        "inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,'" + unitid_mst + "')=1 " +
                                        "inner join master_setting hsn on hsn.master_id=it.hsno and hsn.type='HSN' and find_in_set(hsn.client_unit_id,'" + unitid_mst + "')=1 " +
                                        "where it.type='IT' and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 ";
                                }
                            }
                            break;
                    }
                    break;
                #endregion
                #region item_issued2
                case "item_isd":
                    if (sgen.GetSession(MyGuid, "KISTYPE") != null) { type = sgen.GetSession(MyGuid, "KISTYPE").ToString().Trim(); }
                    else { type = "30','32"; }  // item issued without requestion or with req.
                    switch (btnval.ToUpper())
                    {
                        case "NEW":
                            cmd = "select (master_id||to_char(vch_date,'yyyymmdd')||type) fstr,master_id Type,master_name Name " +
                                "from master_setting where type='KIS' and find_in_set(client_unit_id,'" + unitid_mst + "')=1";
                            break;
                        case "EDIT":
                        case "PRINT":
                            cmd = "select distinct (i.client_id||i.client_unit_id||i.vch_num||to_char(i.vch_date,'yyyymmdd')||i.type) as fstr,i.vch_num as Issue_no,i.type Type," +
                                "to_char(convert_tz(i.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') as Issue_date, i.cond Order_Id from itransaction i " +
                                "where i.type in ('" + type + "') and i.client_unit_id = '" + unitid_mst + "' " + xprdrange.Replace("vch_date", "i.vch_date") + "";
                            break;

                        case "VIEW":
                            cmd = "select (i.client_id||i.client_unit_id||i.vch_num||to_char(i.vch_date,'yyyymmdd')||i.type) as fstr,i.vch_num as Issue_no," +
                                "to_char(convert_tz(i.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), " + "'" + sgen.Getsqldateformat() + "') as Issue_date,d.master_name as Dept_name," +
                                "dg.master_name as desig,i.icode as Icode,i.iname as Item_Name,i.cpartno Partno,i.qtystk Qty_In_Stock,i.qtychl Qty_Req,i.qtyout Qty_Issue," +
                                "i.qtybal Qty_Req_Bal,i.pono OrderId,i.totremark remark from itransaction i " +
                                "inner join master_setting d on d.master_id=i.deptno and d.type='MDP' and find_in_set(d.client_unit_id,'" + unitid_mst + "')=1 " +
                                "inner join master_setting dg on dg.master_id=i.desig and dg.type='MDG' and find_in_set(dg.client_unit_id,'" + unitid_mst + "')=1 " +
                                "where i.type in ('" + type + "') and i.client_unit_id='" + unitid_mst + "'";
                            break;
                        case "ITEM":
                            if (type.Equals("30"))
                            {
                                if (param1.Split(new string[] { "!~~!~~!~~!" }, StringSplitOptions.None)[0].Trim() != "") where = " and (it.client_unit_id||it.icode) not in ('" + param1.Trim().Split(new string[] { "!~~!~~!~~!" }, StringSplitOptions.None)[0].Trim().TrimEnd(',').Replace(",", "','") + "')";
                                //cmd = "select (it.client_unit_id||it.icode) fstr,it.icode as Icode,it.iname as Iname,it.cpartno Partno,um.master_name as UOM," +
                                //       "nvl(s.closing,0) closing,nvl(s.pktno,0) pktno from item it " +
                                //       "inner join master_setting um on um.master_id = it.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, it.client_unit_id)= 1 " +
                                //       "left join (select t.client_unit_id, t.icode, sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout, 0)) Issued," +
                                //       "sum(nvl(t.qtyin, 0)) - sum(nvl(t.qtyout, 0)) closing,sum(nvl(t.pktno, 0)) pktno from " +
                                //       "(select client_unit_id, client_id, icode, qtyin, qtyout, (case when substr(type, 1, 1) in ('0', '1') then pktno when type = '36' " +
                                //       "then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end) pktno,store,vch_date from itransaction) t " +
                                //       "where trim(t.store) = 'Y' and to_date(to_char(t.vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between " +
                                //       "to_date('" + year_from.Split(' ')[0].Trim() + "','" + sgen.Getsqldateformat() + "') and " +
                                //       "to_date('" + param1.Split(new string[] { "!~~!~~!~~!" }, StringSplitOptions.None)[1].Trim() + "','" + sgen.Getsqldateformat() + "') " +
                                //       "group by t.icode,t.client_unit_id) s on it.icode = s.icode and find_in_set(s.client_unit_id, it.client_unit_id)= 1 " +
                                //       "where length(trim(it.icode))> 8 and find_in_set(it.client_unit_id,'" + unitid_mst + "')= 1 " + where + "";

                                cmd = "select (it.client_unit_id||it.icode) fstr,it.icode as Icode,it.iname as Iname,it.cpartno Partno,um.master_name as UOM," +
                                        "nvl(s.closing,0) closing,nvl(s.pktno,0) pktno from item it " +
                                        "inner join master_setting um on um.master_id = it.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, it.client_unit_id)= 1 " +
                                        "left join (select icode,client_unit_id,sum(op) op,sum(pktop) pktop,sum(qtyin) qtyin,sum(qtyout) out,sum(op)+sum(qtyin)-sum(qtyout) closing,sum(pktno) pktno from " +
    "(select icode, client_unit_id, nvl(op_2019, 0) op, nvl(pkt_2019, 0) pktop, 0 qtyin, 0 qtyout, 0 pktno from itbal union all " +
    "select icode, client_unit_id, sum(to_number(qtyin)) - sum(to_number(qtyout)) op, sum((case when substr(type, 1, 1) in ('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktop," +
    "sum(to_number(qtyin)) qtyin,sum(to_number(qtyout)) qtyout,0 pktno from itransaction " +
    "where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') " +
    "and to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "')-1 group by icode,client_unit_id union all " +
    "select icode,client_unit_id,0 as op,0 as pktop,to_number(qtyin) qtyin,to_number(qtyout) qtyout," +
    "sum((case when substr(type, 1, 1) in ('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktno from itransaction " +
    "where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and " +
    "to_date('" + param1.Split(new string[] { "!~~!~~!~~!" }, StringSplitOptions.None)[1].Trim() + "','" + sgen.Getsqldateformat() + "') " +
    "group by icode,client_unit_id,to_number(qtyin),to_number(qtyout)) a group by icode, client_unit_id) s on it.icode = s.icode and find_in_set(s.client_unit_id, it.client_unit_id)= 1 " +
                                        "where length(trim(it.icode))> 8 and find_in_set(it.client_unit_id,'" + unitid_mst + "')= 1 " + where + "";
                            }
                            else if (type.Equals("32"))
                            {
                                //brijesh
                                cmd = "select distinct (mr.client_id||mr.client_unit_id||mr.vch_num||to_char(mr.vch_date,'yyyymmdd')||mr.type) fstr," +
                                    "mr.vch_num Mrs_No,to_char(convert_tz(mr.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') Req_Date,dp.master_name dept, " +
                                    "dg.master_name desig, mr.pono Order_Id,mr.type Mrs_Type from itransactionc mr " +
                                    "inner join master_setting dp on dp.master_id = mr.deptno and dp.type = 'MDP' and " +
                                    "find_in_set(dp.client_unit_id,'" + unitid_mst + "')= 1 " +
                                    "inner join master_setting dg on dg.master_id = mr.desig and dg.type = 'MDG' and " +
                                    "find_in_set(dg.client_unit_id,'" + unitid_mst + "')= 1 " +
                                    "left join(select sum(qtyout) as used_qty,icode,chlno,client_id,client_unit_id,to_char(chldate, 'ddmmyyyy') as chldate from itransaction " +
                                    "where type = '32' group by icode,chlno,client_id,client_unit_id,to_char(chldate, 'ddmmyyyy')) a on mr.icode = a.icode and mr.vch_num = " +
                                    "a.chlno and a.client_unit_id = mr.client_unit_id and a.chldate = " +
                                    "to_char(mr.vch_date, 'ddmmyyyy') where UPPER(mr.type) in ('3A', '3B') and mr.client_unit_id = '" + unitid_mst + "' and (to_number(nvl(mr.qtychl,'0')) - to_number(nvl(a.used_qty,'0'))) > 0";
                            }
                            break;
                        case "IMRS":
                            if (param1 != "") where = " and (mr.client_id||mr.client_unit_id||mr.vch_num||it.icode||to_char(mr.vch_date,'yyyymmdd')||mr.type) not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','") + "')";
                            if (param2.Trim() != "") cond = " and (mr.client_id||mr.client_unit_id||mr.vch_num||to_char(mr.vch_date,'yyyymmdd')||mr.type)='" + param2.Trim() + "'";
                            if (type.Equals("32"))
                            {
                                cmd = "select (it.client_id||it.client_unit_id||mr.vch_num||it.icode||mr.type||to_char(it.vch_date,'yyyymmdd')||it.type) as fstr, mr.icode,it.iname," +
                                    "it.cpartno PartNo,mr.vch_num mrs_no,to_char(mr.vch_date,'" + sgen.Getsqldateformat() + "') Req_Date,um.master_name as uom,dp.master_name Dept,dg.master_name Desig," +
                                    "nvl(s.closing,'0') as qty_in_stock,mr.Qty_Req,mr.issued_qty,mr.bal_qty from item it " +
                                    "inner join (select a.vch_num,a.type,a.icode,a.client_id,a.client_unit_id,a.vch_date,a.Qty_Req,a.desig,a.deptno,sum(a.issued_qty) as issued_qty," +
                                    "(a.Qty_Req - nvl(sum(a.issued_qty), '0')) as bal_qty from(select distinct mr.vch_num,mr.type,mr.icode,mr.client_id,mr.client_unit_id,mr.vch_date," +
                                    "mr.desig,mr.deptno, mr.qtychl Qty_Req,nvl(iv.qtyout,'0') as issued_qty from itransactionc mr " +
                                    "left join itransaction iv on iv.icode=mr.icode and iv.chlno = mr.vch_num and iv.type = '32' and " +
                                    "iv.client_unit_id = '" + unitid_mst + "' where upper(mr.type) in ('3A', '3B') and mr.client_unit_id = '" + unitid_mst + "' " +
                                    "union all select distinct mr.vch_num,mr.type,mr.icode,mr.client_id,mr.client_unit_id,mr.vch_date,mr.desig,mr.deptno,mr.qtychl Qty_Req," +
                                    "nvl(iv.col11,'0') as closed_qty from itransactionc mr left join enx_tab iv on iv.col7=mr.icode and iv.col12 = mr.vch_num and " +
                                    "iv.type = 'CPM' and iv.client_unit_id = '" + unitid_mst + "'  where upper(mr.type) in ('3A', '3B') and mr.client_unit_id = '" + unitid_mst + "') a group by " +
                                    "(a.vch_num,a.type,a.icode,a.client_id,a.client_unit_id,a.vch_date,a.desig,a.deptno,a.Qty_Req)) mr on " +
                                    "mr.icode=it.icode and find_in_set(mr.client_unit_id,it.client_unit_id)=1 and mr.bal_qty > 0 " +
                                    "inner join master_setting dp on dp.master_id = mr.deptno and dp.type = 'MDP' and find_in_set(dp.client_unit_id,'" + unitid_mst + "')= 1 " +
                                    "inner join master_setting dg on dg.master_id = mr.desig and dg.type = 'MDG' and find_in_set(dg.client_unit_id, '" + unitid_mst + "') = 1 " +
                                    "left join master_setting um on um.master_id = it.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, it.client_unit_id)= 1 " +
                                    "left join(select t.client_unit_id, t.icode, sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout, 0)) as Issued,sum(nvl(t.qtyin, 0)) - sum(nvl(t.qtyout, 0)) as closing from itransaction t " +
                                    "where trim(t.store) = 'Y' group by t.icode,t.client_unit_id ) s on it.icode = s.icode and find_in_set(s.client_unit_id ,it.client_unit_id)=1 " +
                                    "where it.type='IT' and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 " + where + "  " + cond + "";
                            }
                            break;
                        case "ITEM2":
                            if (param1 != "") where = " and (it.client_unit_id||it.icode||s.loc) not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','") + "')";
                            cmd = "select (it.client_unit_id||it.icode||s.loc) fstr,it.icode as Icode,it.iname as Iname,it.cpartno Partno,um.master_name as UOM," +
  "location_name(s.loc) as LocName,s.closing from item it " +
  "inner join itbal itb on it.icode=itb.icode and it.type=itb.type and find_in_set(itb.client_unit_id,it.client_unit_id)=1 " +
  "inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
  "inner join (select t.client_unit_id,t.loc,t.icode,sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout,0)) as Issued," +
  "sum(nvl(t.qtyin,0))-sum(nvl(t.qtyout,0)) as closing from btchtrans t where length(trim(t.loc))>6 and trim(t.store)='Y' group by t.icode,t.client_unit_id,t.loc " +
  "having sum(nvl(t.qtyin,0))-sum(nvl(t.qtyout,0))>0 ) s on itb.icode=s.icode and itb.client_unit_id=s.client_unit_id " +
  "where length(trim(it.icode))>8 and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 " +
  "and it.icode in ('" + param2.Trim().TrimEnd(',').Replace(",", "','").Trim() + "') " + where + "";
                            break;
                        case "FUN":
                            cmd = "select distinct (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr," +
                                " a.vch_num as Doc_No, to_char( convert_tz( a.date1,'UTC','" + sgen.Gettimezone() + "')," +
                                 "'" + sgen.Getsqldateformat() + "')as   Date_Of_Function, b.master_name Function_Type , a.col3 Name_Of_Party ,a.col2 as no_of_paxes,sum(a.col10*a.col9) Total_AMount" +
                                 " ,nvl(s.master_name,'-') as Service_type,nvl(m.master_name,'-') as Menu_Type   from enx_tab2 a " +
                                 "inner join master_setting  b on a. col5=b.master_id and b.type='FUN' and a.client_unit_id= b.client_unit_id " +
                                 "left Join master_setting s on a.col11=s.master_id and b.type='TBS' and find_in_set(s.client_unit_id,'" + unitid_mst + "')=1 left Join master_setting m" +
                                 " on a.col17=s.master_id and b.type='TBM' and find_in_set(m.client_unit_id,'" + unitid_mst + "')=1" +
                                " where a.type in ('FUN')and a.client_unit_id='" + unitid_mst + "'" +
                                " group by (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) ,a.vch_num ,to_char(convert_tz(a.date1," +
                                " 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "'),b.master_name, a.col3,a.col2,s.master_name,m.master_name" +
                                "  order by a.vch_num desc";
                            break;
                    }
                    break;
                #endregion
                #region item_opening
                case "item_opening":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "VIEW":
                            cmd = "select (i.client_unit_id||i.vch_num||to_char(i.vch_date,'yyyymmdd')||i.type) as fstr,i.vch_num Docno,to_char(i.vch_date, '" + sgen.Getsqldateformat() + "') doc_date," +
                                "i.icode,lc.master_name as location,i.OP_2019 as opening_qty from itbal_enx i " +
                                "inner join master_setting lc on lc.master_id = i.loc and lc.type = 'LC6' and find_in_set(lc.client_unit_id,'" + unitid_mst + "')= 1 where i.type = 'IT' and i.client_unit_id = '" + unitid_mst + "' " + xprdrange.Replace("vch_date", "i.vch_date") + "";
                            break;
                        case "ITEM":
                            if (param1 != "") where = " and (it.icode||to_char(it.vch_date,'yyyymmdd')||it.type) not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','") + "')";
                            mq1 = "select (it.icode||to_char(it.vch_date,'yyyymmdd')||it.type) fstr,it.icode as Icode,it.iname as Iname,it.cpartno Partno,um.master_name as uom  from item it" +
                                " inner join master_setting um on um.master_id=it.uom and find_in_set(it.uom,um.master_id)=1 and um.type='UMM' where it.type = 'IT' and" +
                                " find_in_set(it.client_unit_id,'" + unitid_mst + "')= 1 " + where + "";

                            mq2 = "select itb.icode from itbal_enx itb where itb.type='IT' and itb.loc='" + param2 + "' and " +
                                "acyear='" + year_from.Substring(6, 4) + "'";

                            cmd = "select * from (" + mq1 + ") a where a.icode not in (" + mq2 + ")";
                            break;
                    }
                    break;
                #endregion
                #region item_openingn
                case "item_openingn":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "VIEW":
                            cmd = "select (i.client_unit_id||i.vch_num||to_char(i.vch_date,'yyyymmdd')||i.type) as fstr,i.vch_num Docno,to_char(i.vch_date, '" + sgen.Getsqldateformat() + "') doc_date," +
                                "i.icode,lc.master_name as location,i.OP_2019 as opening_qty from itbal_enx i " +
                                "inner join master_setting lc on lc.master_id = i.loc and lc.type = 'LC6' and find_in_set(lc.client_unit_id,'" + unitid_mst + "')= 1 where i.type = 'IT' and i.client_unit_id = '" + unitid_mst + "' " + xprdrange.Replace("vch_date", "i.vch_date") + "";
                            break;
                        case "ITEM":
                            if (param1 != "") where = " and (it.icode||to_char(it.vch_date,'yyyymmdd')||it.type) not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','") + "')";
                            mq1 = "select (it.icode||to_char(it.vch_date,'yyyymmdd')||it.type) fstr,it.icode as Icode,it.iname as Iname,it.cpartno Partno,um.master_name as uom  from item it" +
                                " inner join master_setting um on um.master_id=it.uom and find_in_set(it.uom,um.master_id)=1 and um.type='UMM' where it.type = 'IT' and" +
                                " find_in_set(it.client_unit_id,'" + unitid_mst + "')= 1 " + where + "";

                            mq2 = "select itb.icode from itbal_enx itb where itb.type='IT' and itb.loc='" + param2 + "' and " +
                                "acyear='" + year_from.Substring(6, 4) + "'";

                            cmd = "select * from (" + mq1 + ") a where a.icode not in (" + mq2 + ")";
                            break;
                    }
                    break;
                    #endregion
            }
            sgen.open_grid(title, cmd, sgen.Make_int(seektype));
            ViewBag.pageurl = sgen.GetSession(MyGuid, "pageurl").ToString();
        }
        #endregion
        //========================callback==============
        #region call back
        public List<Tmodelmain> CallbackFun(string btnval, string edmode, string viewName, string controllerName, List<Tmodelmain> model)
        {
            string year = year_from.Substring(6, 4);
            String URL = sgen.GetSession(MyGuid, "SSEEKVAL").ToString();
            FillMst(MyGuid);
            List<SelectListItem> mod1 = new List<SelectListItem>();
            List<SelectListItem> mod2 = new List<SelectListItem>();
            List<SelectListItem> mod3 = new List<SelectListItem>();
            List<SelectListItem> mod4 = new List<SelectListItem>();
            DataTable dtt = new DataTable();
            DataTable dt = new DataTable();
            string defcall = "";
            // string defval = "";
            var tm = model.FirstOrDefault();
            string fdt = "", tdt = "";
            switch (viewName.ToLower())
            {
                #region item_issued
                case "item_issued":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            mq = "select (i.client_id||i.client_unit_id||i.vch_num||i.icode|| to_char(i.vch_date, 'yyyymmdd')||i.type) fstr,i.vch_num,to_char(convert_tz(i.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), " + "'" + sgen.Getsqldateformat() + "') as vch_date," +
                                "i.deptno,i.desig,i.cond ordid,i.totremark,i.chlno mrsno,to_char(convert_tz(i.chldate, 'UTC', '" + sgen.Gettimezone() + "'), " + "'" + sgen.Getsqldateformat() + "') as mrs_date," +
                                "i.icode,it.iname,it.cpartno,um.master_name uom,i.qtystk,i.qtychl,i.qtyout,i.qtybal,i.iremark,i.pono iord,i.client_id,i.client_unit_id,i.ent_by,i.ent_date,i.type,ks.master_name typename," +
                                "i.irate,i.iamount,i.mmt,i.btchno locid,i.cond locname,i.pktno from itransaction i " +
                                "inner join master_setting ks on ks.master_id=i.type and find_in_set(ks.client_unit_id,i.client_unit_id)=1 " +
                                "inner join item it on it.icode=i.icode and it.type='IT' and find_in_set(i.client_unit_id,it.client_unit_id)=1 " +
                                "inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
                                "where (i.client_id||i.client_unit_id||i.vch_num|| to_char(i.vch_date, 'yyyymmdd')||i.type)='" + URL + "' and i.inspected='C'";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                // shiv
                                DataTable dtg = sgen.getdata(userCode, "select '-' as SNo ,'-' as Icode,'-' as IName,'-' PartNo,'-' as UOM,'0' as Qty_in_stock,'0' as Qty_Req,'0' as Qty_issue," +
                                    "'0' Qty_Req_Bal,'0' as Rate,'0' as Amount,'-' as Remark,'0' Order_Id,'' No_of_pkt  from dual");
                                model[0].dt1 = dtg;
                                sgen.SetSession(MyGuid, "dtbase1", dtg);
                                // shiv
                                dtg = sgen.getdata(userCode, "select '-' as SNo ,'-' as Icode,'-' as IName,'-' PartNo,'-' as UOM,'0' as Qty_in_stock,'0' as Qty_issue,'-' as Remark,'0' LocCode,'-' Loc from dual");
                                model[0].dt2 = dtg;
                                sgen.SetSession(MyGuid, "dtbase2", dtg);
                                sgen.SetSession(MyGuid, "EDMODE", "Y");
                                DataTable dt2 = new DataTable();
                                #region getdept
                                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.dept(userCode, clientid_mst, unitid_mst);
                                #endregion
                                #region getdesig
                                TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2 = cmd_Fun.desig(userCode, unitid_mst);
                                #endregion
                                #region getloc
                                defval = "";
                                TempData[MyGuid + "_TList3"] = model[0].TList3 = mod3 = cmd_Fun.iloc(userCode, unitid_mst, out defval);
                                #endregion
                                #region getmmt                                
                                mod4.Add(new SelectListItem { Text = "Consume", Value = "001" });
                                mod4.Add(new SelectListItem { Text = "WIP", Value = "002" });
                                TempData[MyGuid + "_TList4"] = model[0].TList4 = mod4;
                                #endregion
                                model[0].Col1 = dt.Rows[0]["client_id"].ToString();
                                model[0].Col2 = dt.Rows[0]["client_unit_id"].ToString();
                                model[0].Col3 = dt.Rows[0]["ent_by"].ToString();
                                model[0].Col4 = dt.Rows[0]["ent_date"].ToString();
                                model[0].Col8 = "(client_id||client_unit_id||vch_num|| to_char(vch_date, 'yyyymmdd')||type) = '" + URL + "'";
                                model[0].Col10 = tm.Col10;
                                model[0].Col11 = tm.Col11;
                                model[0].Col12 = dt.Rows[0]["type"].ToString();
                                model[0].Col13 = "Update";
                                model[0].Col100 = "Update & New";
                                model[0].Col121 = "U";
                                model[0].Col122 = "<u>U</u>pdate";
                                model[0].Col123 = "Update & Ne<u>w</u>";
                                model[0].Col14 = tm.Col14;
                                model[0].Col15 = tm.Col15;
                                model[0].Col18 = dt.Rows[0]["vch_num"].ToString();
                                model[0].Col20 = dt.Rows[0]["vch_date"].ToString();
                                model[0].Col26 = dt.Rows[0]["vch_date"].ToString();
                                model[0].Col21 = dt.Rows[0]["totremark"].ToString();
                                model[0].Col22 = dt.Rows[0]["ordid"].ToString();
                                model[0].Col23 = dt.Rows[0]["mrsno"].ToString();
                                model[0].Col24 = dt.Rows[0]["mrs_date"].ToString();
                                model[0].Col9 = dt.Rows[0]["typename"].ToString();
                                sgen.SetSession(MyGuid, "KISTYPE", dt.Rows[0]["type"].ToString());
                                model[0].SelectedItems1 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["deptno"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems2 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["desig"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems3 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["locid"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems4 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["mmt"].ToString()).Distinct()).Split(',');
                                model[0].dt1 = model[0].dt1.Clone();
                                //model[0].dt1 = ((DataTable)Session["dtbase"]).Clone();
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    if (model[0].Col12.Trim() == "30") dr["sno"] = dt.Rows[i]["client_unit_id"].ToString().Trim() + dt.Rows[i]["icode"].ToString().Trim();
                                    else if (model[0].Col12.Trim() == "32") dr["sno"] = dt.Rows[i]["fstr"].ToString().Trim();
                                    dr["IName"] = dt.Rows[i]["iname"].ToString();
                                    dr["Icode"] = dt.Rows[i]["icode"].ToString();
                                    dr["UOM"] = dt.Rows[i]["uom"].ToString();
                                    dr["partno"] = dt.Rows[i]["cpartno"].ToString();
                                    dr["Qty_in_stock"] = dt.Rows[i]["qtystk"].ToString();
                                    dr["Qty_Req"] = dt.Rows[i]["qtychl"].ToString();
                                    dr["Qty_Issue"] = dt.Rows[i]["qtyout"].ToString();
                                    dr["Qty_Req_Bal"] = dt.Rows[i]["qtybal"].ToString();
                                    dr["Remark"] = dt.Rows[i]["iremark"].ToString();
                                    dr["Order_Id"] = dt.Rows[i]["iord"].ToString();//orderid
                                    dr["No_of_pkt"] = dt.Rows[i]["pktno"].ToString();//pktno
                                    dr["rate"] = dt.Rows[i]["irate"].ToString();//rate
                                    dr["amount"] = dt.Rows[i]["iamount"].ToString();//amount
                                    model[0].dt1.Rows.Add(dr);
                                }
                                mq1 = "select (i.client_unit_id||i.icode||i.loc) fstr,i.icode,it.iname,it.cpartno,um.master_name uom,i.qtystk,i.qtyout,i.iremark,i.loc," +
                                    "location_name(i.client_id||i.client_unit_id||i.loc) locname from btchtrans i " +
                                    "inner join item it on it.icode=i.icode and it.type='IT' and find_in_set(i.client_unit_id,it.client_unit_id)=1 " +
                                    "inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
                               "where (i.client_id||i.client_unit_id||i.vch_num|| to_char(i.vch_date, 'yyyymmdd')||i.type)='" + URL + "' and i.pono='C'";
                                dtt = sgen.getdata(userCode, mq1);
                                if (dtt.Rows.Count > 0)
                                {
                                    model[0].dt2 = model[0].dt2.Clone();
                                    for (int i = 0; i < dtt.Rows.Count; i++)
                                    {
                                        DataRow dr = model[0].dt2.NewRow();
                                        dr["sno"] = dtt.Rows[i]["fstr"].ToString();
                                        dr["IName"] = dtt.Rows[i]["iname"].ToString();
                                        dr["Icode"] = dtt.Rows[i]["icode"].ToString();
                                        dr["UOM"] = dtt.Rows[i]["uom"].ToString();
                                        dr["partno"] = dtt.Rows[i]["cpartno"].ToString();
                                        dr["Qty_in_stock"] = dtt.Rows[i]["qtystk"].ToString();
                                        dr["Qty_Issue"] = dtt.Rows[i]["qtyout"].ToString();
                                        dr["Remark"] = dtt.Rows[i]["iremark"].ToString();
                                        dr["Loc"] = dtt.Rows[i]["locname"].ToString();
                                        dr["LocCode"] = dtt.Rows[i]["loc"].ToString();
                                        model[0].dt2.Rows.Add(dr);
                                    }
                                }
                                if (model[0].Col28 == "bhmain")
                                {
                                    mq = "select group_concat(distinct a.vch_num) as fun_id, sum(a.col9) as no_of_paxes,sum(a.col10*a.col9) Total_AMount from enx_tab2 a" +
                               " where a.client_unit_id ='" + unitid_mst + "' and a.vch_num in (" + model[0].Col22 + ") and a.type='FUN'";
                                    dt = sgen.getdata(userCode, mq);
                                    if (dt.Rows.Count > 0)
                                    {
                                        model[0].Col22 = dt.Rows[0]["fun_id"].ToString();
                                        model[0].Col25 = dt.Rows[0]["no_of_paxes"].ToString();
                                        model[0].Col26 = dt.Rows[0]["Total_AMount"].ToString();
                                        decimal cal = 0;
                                        try
                                        {
                                            cal = sgen.Make_decimal(dt.Rows[0]["Total_AMount"].ToString()) / sgen.Make_decimal(dt.Rows[0]["no_of_paxes"].ToString());
                                        }
                                        catch (Exception err) { cal = 0; }
                                        model[0].Col27 = (cal).ToString();
                                    }
                                }
                            }
                            break;
                        case "NEW":
                            mq = "select master_id,upper(master_name) master_name,to_char(convert_tz(utc_timestamp(),'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') issued_date " +
                                "from master_Setting where find_in_set(client_unit_id,'" + unitid_mst + "')=1 and (master_id||to_char(vch_date, 'yyyymmdd')||type) = '" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "EDMODE", "N");
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                                ViewBag.vfill = "";
                                ViewBag.scripCall = "enableForm();";
                                // string defval = "";
                                mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + dtt.Rows[0]["master_id"].ToString() + "'" + model[0].Col11.Trim() + "";
                                vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                                model[0].Col18 = vch_num;
                                model[0].Col20 = dtt.Rows[0]["issued_date"].ToString();
                                model[0].Col12 = dtt.Rows[0]["master_id"].ToString();
                                sgen.SetSession(MyGuid, "KISTYPE", dtt.Rows[0]["master_id"].ToString());
                                model[0].Col17 = "1";
                                model[0].Col9 = dtt.Rows[0]["master_name"].ToString();
                                #region getdept
                                defval = "";
                                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.dept(userCode, unitid_mst, out defval);
                                model[0].SelectedItems1 = new string[] { defval };
                                #endregion
                                #region getdesig
                                defval = "";
                                TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2 = cmd_Fun.desig(userCode, unitid_mst, out defval);
                                model[0].SelectedItems2 = new string[] { defval };
                                #endregion
                                #region getloc
                                TempData[MyGuid + "_TList3"] = model[0].TList3 = mod3 = cmd_Fun.iloc(userCode, unitid_mst, out defcall);
                                model[0].SelectedItems3 = new string[] { "" };
                                #endregion
                                #region getmmt                                
                                mod4.Add(new SelectListItem { Text = "Consume", Value = "001" });
                                mod4.Add(new SelectListItem { Text = "WIP", Value = "002" });
                                TempData[MyGuid + "_TList4"] = model[0].TList4 = mod4;
                                model[0].SelectedItems4 = new string[] { "001" };
                                #endregion
                                model[0].Chk1 = true;
                                if (model[0].Col12 == "32")
                                {
                                    Make_query(viewName.ToLower(), "Select MRS", "ITEM", "1", "", "");
                                    ViewBag.scripCall = "callFoo('Select MRS');";
                                }
                                DataTable dtg = sgen.getdata(userCode, "select '-' as SNo ,'-' as Icode,'-' as IName,'-' PartNo,'-' as UOM,'0' as Qty_in_stock,'0' as Qty_Req,'0' as Qty_issue," +
                               "'0' Qty_Req_Bal,'0' as Rate,'0' as Amount,'-' as Remark,'0' Order_Id,'0' No_of_pkt  from dual");
                                model[0].dt1 = dtg;
                                sgen.SetSession(MyGuid, "dtbase1", dtg);
                                dtg = sgen.getdata(userCode, "select '-' as SNo ,'-' as Icode,'-' as IName,'-' PartNo,'-' as UOM,'0' as Qty_in_stock,'0' as Qty_issue,'-' as Remark,'0' LocCode,'-' Loc from dual");
                                model[0].dt2 = dtg;
                                sgen.SetSession(MyGuid, "dtbase2", dtg);
                                model[0].Col60 = sgen.seekval(userCode, "select master_name from master_setting where type='CF1' and client_unit_id='" + unitid_mst + "'", "master_name");
                            }
                            break;
                        case "ITEM":
                            string vchdate = (model[0].Col126 == "" || model[0].Col126 == null) ? model[0].Col20 : model[0].Col126;
                            var cond2 = "and client_unit_id||vch_num||to_char(vch_date,'" + sgen.Getsqldateformat() + "')||type not in (" +
                                  "'" + unitid_mst + model[0].Col16 + vchdate + model[0].Col12 + "')";

                            if (model[0].Col12 == "30")
                            {
                                //mq = "select (it.client_unit_id||it.icode) fstr,it.icode as Icode,it.iname as Iname,mg.master_name as ItemGrp,it.cpartno,um.master_name as uom," +
                                //    "s.closing qtystk,'0' as Qty_Req,'0' Qty_issue,'0' Qty_Req_bal,'-' remark,'0' Order_Id from item it " +
                                //    "left join master_setting mg on mg.master_id = substr(it.icode, 1, 3) and mg.type = 'KIG' and find_in_set(mg.client_unit_id, it.client_unit_id)=1 " +
                                //    "inner join master_setting um on um.master_id = it.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, it.client_unit_id)= 1 " +
                                //    "inner join (select t.client_unit_id, t.icode, sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout, 0)) as Issued,sum(nvl(t.qtyin, 0)) - sum(nvl(t.qtyout, 0)) as closing from itransaction t " +
                                //    "where trim(t.store) = 'Y' and to_date(to_char(t.vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between " +
                                //    "to_date('" + year_from.Split(' ')[0].Trim() + "','" + sgen.Getsqldateformat() + "') and " +
                                //    "to_date('" + model[0].Col20.Trim() + "','" + sgen.Getsqldateformat() + "') group by t.icode,t.client_unit_id ) s on it.icode = s.icode and find_in_set(s.client_unit_id, it.client_unit_id)=1 " +
                                //    "where (it.client_unit_id || it.icode) in ('" + URL + "')";                          

                                mq = "select DISTINCT (it.client_unit_id||it.icode) fstr,it.icode as Icode,it.iname as Iname,mg.master_name as ItemGrp,it.cpartno,um.master_name as uom," +
                                    "s.closing qtystk,'0' as Qty_Req,'0' Qty_issue,'0' Qty_Req_bal,'-' remark,'0' Order_Id from item it " +
                                    "left join master_setting mg on mg.master_id = substr(it.icode, 1, 3) and mg.type = 'KIG' and find_in_set(mg.client_unit_id, it.client_unit_id)=1 " +
                                    "inner join master_setting um on um.master_id = it.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, it.client_unit_id)= 1 " +
                                    "inner join (select icode,client_unit_id,sum(op) op,sum(pktop) pktop,sum(qtyin) qtyin,sum(qtyout) out,sum(op)+sum(qtyin)-sum(qtyout) closing,sum(pktop) + sum(pktno) pktno from " +
    "(select icode, client_unit_id, nvl(op_2019, 0) op, nvl(pkt_2019, 0) pktop, 0 qtyin, 0 qtyout, 0 pktno from itbal union all " +
    "select icode, client_unit_id, sum(to_number(qtyin)) - sum(to_number(qtyout)) op, sum((case when substr(type, 1, 1) in ('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktop," +
    "sum(to_number(qtyin)) qtyin,sum(to_number(qtyout)) qtyout,0 pktno from itransaction " +
    "where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') " +
    "and to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "')-1 group by icode,client_unit_id union all " +
    "select icode,client_unit_id,0 as op,0 as pktop,sum(to_number(qtyin)) qtyin,sum(to_number(qtyout)) qtyout," +
    "sum((case when substr(type, 1, 1) in ('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktno from itransaction " +
    "where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and " +
    "to_date('" + model[0].Col20.Trim() + "','" + sgen.Getsqldateformat() + "') " + cond2 + "" +
    "group by icode,client_unit_id) a group by icode, client_unit_id) s on it.icode = s.icode and find_in_set(s.client_unit_id, it.client_unit_id)=1 " +
                                    "where (it.client_unit_id || it.icode) in ('" + URL + "')";
                            }
                            else if (model[0].Col12 == "32")
                            {
                                mq = "select (mr.client_id||mr.client_unit_id||mr.vch_num||to_char(mr.vch_date,'yyyymmdd')||mr.type) fstr,mr.vch_num,mr.totremark remark," +
                                    "mr.pono Order_Id,to_char(convert_tz(mr.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), " + "'" + sgen.Getsqldateformat() + "') vch_date," +
                                    "mr.deptno,mr.desig from itransactionc mr where (mr.client_id || mr.client_unit_id || mr.vch_num || to_char(mr.vch_date, 'yyyymmdd') || mr.type) in ('" + URL + "')";
                            }
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                string ordid = "";
                                if (model[0].Col12 == "30") { ordid = model[0].Col22; }
                                else if (model[0].Col12 == "32")
                                {
                                    model[0].Col22 = dt.Rows[0]["Order_Id"].ToString().Trim();
                                    model[0].Col21 = dt.Rows[0]["remark"].ToString().Trim();
                                    model[0].Col23 = dt.Rows[0]["vch_num"].ToString().Trim();
                                    model[0].Col24 = dt.Rows[0]["vch_date"].ToString().Trim();
                                    model[0].Col50 = dt.Rows[0]["fstr"].ToString().Trim();
                                    ordid = dt.Rows[0]["Order_Id"].ToString().Trim();
                                    model[0].SelectedItems1 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["deptno"].ToString()).Distinct()).Split(',');
                                    model[0].SelectedItems2 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["desig"].ToString()).Distinct()).Split(',');
                                }
                                if (model[0].Col12 == "30")
                                {
                                    if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt1.Rows.RemoveAt(0); }
                                    for (int i = 0; i < dt.Rows.Count; i++)
                                    {
                                        DataRow dr = model[0].dt1.NewRow();
                                        dr["SNo"] = dt.Rows[i]["fstr"].ToString();
                                        dr["Icode"] = dt.Rows[i]["icode"].ToString();
                                        dr["IName"] = dt.Rows[i]["iname"].ToString();
                                        //dr["IGroup"] = dt.Rows[i]["ItemGrp"].ToString();
                                        dr["PARTNO"] = dt.Rows[i]["cpartno"].ToString();
                                        dr["UOM"] = dt.Rows[i]["uom"].ToString();
                                        dr["Qty_in_stock"] = dt.Rows[i]["qtystk"].ToString();
                                        dr["Qty_Req"] = dt.Rows[i]["Qty_Req"].ToString();
                                        dr["Qty_issue"] = dt.Rows[i]["Qty_Req"].ToString();
                                        dr["Qty_Req_Bal"] = dt.Rows[i]["Qty_Req_bal"].ToString();
                                        dr["rate"] = dt.Rows[i]["Qty_Req_bal"].ToString();
                                        dr["Remark"] = "-";
                                        dr["Order_Id"] = ordid;
                                        model[0].dt1.Rows.Add(dr);
                                    }
                                }
                            }
                            break;
                        case "IMRS":
                            if (model[0].Col12 == "32")
                            {
                                //mq = "select (mr.client_id||mr.client_unit_id||mr.vch_num||it.icode||to_char(mr.vch_date,'yyyymmdd')||mr.type) fstr,mr.vch_num,it.icode,it.iname,it.cpartno," +
                                //    "to_char(convert_tz(mr.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), " + "'" + sgen.Getsqldateformat() + "') as vch_date," +
                                //    "um.master_name as uom,s.closing qtystk,mr.qtychl Qty_Req,'0' Qty_issue,'0' Qty_Req_bal,mr.totremark remark,mr.pono Order_Id,mr.deptno,mr.desig " +
                                //    "from itransactionc mr " +
                                //    "inner join item it on mr.icode=it.icode and it.type='IT' and mr.client_id=it.client_id and mr.client_unit_id=it.client_unit_id " +
                                //    "inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_id,it.client_id)=1 and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
                                //    "inner join (select t.client_unit_id,t.icode,sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout,0)) as Issued," +
                                //    "sum(nvl(t.qtyin,0))-sum(nvl(t.qtyout,0)) as closing from itransaction t where trim(t.store)='Y' group by t.icode," +
                                //    "t.client_unit_id ) s on it.icode=s.icode and it.client_unit_id=s.client_unit_id " +
                                //    "where (mr.client_id || mr.client_unit_id || mr.vch_num || it.icode||to_char(mr.vch_date, 'yyyymmdd') || mr.type) in ('" + URL + "')";
                                //brijesh
                                //mq = "select (mr.client_id||mr.client_unit_id||mr.vch_num||it.icode||to_char(mr.vch_date,'yyyymmdd')||mr.type) fstr" +
                                //    ",mr.vch_num,it.icode,it.iname,it.cpartno,to_char(convert_tz(mr.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') as " +
                                //    "vch_date,um.master_name as uom,s.closing qtystk,mr.qtychl Qty_Reqbefore,'0' Qty_issue,nvl(a.used_qty,0)" +
                                //    " used_qty,'0' Qty_Req_bal,(mr.qtychl-nvl(a.used_qty,0)) as Qty_Req,mr.totremark remark,mr.pono Order_Id," +
                                //    "mr.deptno,mr.desig from itransactionc mr inner join item it on mr.icode=it.icode and it.type='IT' and " +
                                //    "mr.client_id=it.client_id and mr.client_unit_id=it.client_unit_id inner join master_setting um on " +
                                //    "um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_id,it.client_id)=1 and" +
                                //    " find_in_set(um.client_unit_id,it.client_unit_id)=1 inner join (select t.client_unit_id,t.icode," +
                                //    "sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout,0)) as Issued,sum(nvl(t.qtyin,0))-sum(nvl(t.qtyout,0)) as" +
                                //    " closing from itransaction t where trim(t.store)='Y' group by t.icode,t.client_unit_id ) s on it.icode" +
                                //    "=s.icode and it.client_unit_id=s.client_unit_id left join (select sum(qtyout) as used_qty,icode,chlno," +
                                //    "client_id,client_unit_id,to_char(chldate,'ddmmyyyy') as chldate from itransaction where type = '32' " +
                                //    "group by icode,chlno,client_id,client_unit_id,to_char(chldate,'ddmmyyyy')) a on mr.icode = a.icode and" +
                                //    " mr.vch_num = a.chlno and a.client_id=mr.client_id and a.client_unit_id=mr.client_unit_id and " +
                                //    "a.chldate=to_char(mr.vch_date,'ddmmyyyy') where (mr.client_id || mr.client_unit_id || mr.vch_num || it.icode||to_char(mr.vch_date, 'yyyymmdd') || mr.type) in ('" + URL + "')";
                                mq = "select (mr.client_id||mr.client_unit_id||mr.vch_num||it.icode||to_char(mr.vch_date,'yyyymmdd')||mr.type) as fstr, mr.icode ,it.iname, it.cpartno,mr.vch_num mrs_no,to_char(mr.vch_date,'" + sgen.Getsqldateformat() + "') Req_Date,um.master_name as uom," +
                                    "dp.master_name Dept,dg.master_name Desig,nvl(s.closing,'0') as qtystk,mr.pono as Order_Id,mr.issued_qty,mr.bal_qty Qty_Req " +
                                    "from item it " +
                                    "inner join (select distinct a.vch_num,a.type,a.icode,a.pono,a.client_id,a.client_unit_id,a.vch_date,a.Qty_Req,a.desig,a.deptno,sum(a.issued_qty) issued_qty," +
                                    "(a.Qty_Req - nvl(sum(a.issued_qty), '0')) as bal_qty from " +
                                    "(select mr.vch_num,mr.type,mr.icode,mr.pono,mr.client_id,mr.client_unit_id,mr.vch_date,mr.desig,mr.deptno, mr.qtychl Qty_Req," +
                                    "to_number(nvl(iv.qtyout,'0')) as issued_qty from itransactionc mr " +
                                    "left join itransaction iv on iv.icode=mr.icode and iv.chlno = mr.vch_num and iv.type = '32' and iv.client_unit_id = '" + unitid_mst + "' " +
                                    "where upper(mr.type) in ('3A', '3B') and mr.client_unit_id = '" + unitid_mst + "' " +
                                    "union all select mr.vch_num,mr.type,mr.icode,mr.pono,mr.client_id,mr.client_unit_id,mr.vch_date,mr.desig,mr.deptno," +
                                    "mr.qtychl Qty_Req,to_number(nvl(iv.col11,'0')) as closed_qty from itransactionc mr left join enx_tab iv on iv.col7=mr.icode and " +
                                    "iv.col12 = mr.vch_num and iv.type = 'CPM' and iv.client_unit_id = " +
                                    "'" + unitid_mst + "'  where upper(mr.type) in ('3A', '3B') and mr.client_unit_id = '" + unitid_mst + "') " +
                                    "a group by(a.vch_num,a.type,a.icode,a.pono,a.client_id,a.client_unit_id,a.vch_date,a.desig,a.deptno,a.Qty_Req)) mr on " +
                                    "mr.icode=it.icode and find_in_set(mr.client_unit_id,it.client_unit_id)=1 left join master_setting dp" +
                                    " on dp.master_id = mr.deptno and dp.type = 'MDP' and " +
                                    "find_in_set(dp.client_unit_id,'" + unitid_mst + "')= 1 left join master_setting dg on dg.master_id = mr.desig and dg.type" +
                                    " = 'MDG' and find_in_set(dg.client_unit_id, '" + unitid_mst + "')" +
                                    " = 1 left join master_setting um on um.master_id = it.uom and um.type = 'UMM' " +
                                    "and find_in_set(um.client_unit_id, it.client_unit_id)= 1 left join(select t.client_unit_id, t.icode, sum(nvl(t.qtyin,0))" +
                                    " as Received,sum(nvl(t.qtyout, 0)) as Issued,sum(nvl(t.qtyin, 0)) - sum(nvl(t.qtyout, 0)) as closing from itransaction t" +
                                    " where trim(t.store) = 'Y' group by t.icode,t.client_unit_id ) s on it.icode = s.icode and find_in_set(s.client_unit_id,it.client_unit_id)=1 where " +
                                    "(it.client_id||it.client_unit_id||mr.vch_num||it.icode||mr.type||to_char(it.vch_date,'yyyymmdd')||it.type) in ('" + URL + "')";
                            }
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt1.Rows.RemoveAt(0); }
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["SNo"] = dt.Rows[i]["fstr"].ToString();
                                    dr["Icode"] = dt.Rows[i]["icode"].ToString();
                                    dr["IName"] = dt.Rows[i]["iname"].ToString();
                                    dr["PARTNO"] = dt.Rows[i]["cpartno"].ToString();
                                    dr["UOM"] = dt.Rows[i]["uom"].ToString();
                                    dr["Qty_in_stock"] = dt.Rows[i]["qtystk"].ToString();
                                    dr["Qty_Req"] = dt.Rows[i]["Qty_Req"].ToString();
                                    //dr["Qty_issue"] = dt.Rows[i]["Qty_issue"].ToString();
                                    //dr["Qty_Req_Bal"] = dt.Rows[i]["Qty_Req_bal"].ToString();
                                    dr["Qty_issue"] = "0";
                                    dr["Qty_Req_Bal"] = "0";
                                    dr["Remark"] = "-";
                                    dr["Order_Id"] = dt.Rows[i]["Order_Id"].ToString(); ;
                                    model[0].dt1.Rows.Add(dr);
                                }
                            }
                            break;
                        case "PRINT":
                            //ViewBag.vnew = "";
                            //ViewBag.vedit = "";
                            //ViewBag.vsave = "disabled='disabled'";
                            //ViewBag.vsavenew = "disabled='disabled'";
                            //ViewBag.scripCall = "disableForm();";
                            mq = "select a.totremark, REPLACE(ud.FIRST_NAME|| ' '|| ud.MIDDLE_NAME|| ' '|| ud.last_name,'0','') as created_by ,it.partname," +
                                "nvl(d.master_name,'-') as deptname, location_name(a.client_id||a.client_unit_id||bt.loc) loc,a.vch_num,a.icode,it.iname,it.cpartno," +
                                "um.master_name UOM,um.master_name as UOM2,hsn.master_name hsn," +
                                "to_char(convert_tz(a.vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') vch_date1," +
                                "to_char(a.chldate,'" + sgen.Getsqldateformat() + "') chldate,a.chlno,a.pono,it.cuom," +
                                "a.qtychl,a.qtyout,a.qtybal " +
                                "from itransaction a " +
                                "inner join item it on a.icode=it.icode and it.type='IT' and find_in_set(a.client_unit_id,it.client_unit_id)=1 " +
                                "inner join btchtrans bt on a.icode=bt.icode and a.vch_num=bt.vch_num and a.type=bt.type and a.client_unit_id=bt.client_unit_id " +
                                "inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,'" + unitid_mst + "')=1 " +
                                "left join master_setting um2 on um2.master_id=it.uom2 and um2.type='UMM' and find_in_set(um2.client_unit_id,'" + unitid_mst + "')=1 " +
                                "inner join master_setting hsn on hsn.master_id=it.hsno and hsn.type='HSN' and find_in_set(hsn.client_unit_id,'" + unitid_mst + "')=1 " +
                                "left join master_setting d on d.master_id=a.deptno and d.type='MDP' and find_in_set(d.client_unit_id,'" + unitid_mst + "')=1 " +
                                "inner join user_details ud on a.ent_by = ud.vch_num and ud.type = 'CPR' " +
                                "where (a.client_id||a.client_unit_id||a.vch_num|| to_char(a.vch_date, 'yyyymmdd')||a.type)='" + URL + "'";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                DataTable dt2 = new DataTable();
                                DataTable qrdt = new DataTable();
                                qrdt = dt.Copy();
                                qrdt.Columns.Add("qrimg", typeof(Byte[]));
                                foreach (DataRow dr in qrdt.Rows)
                                {
                                    string code = dr["icode"].ToString() + "\n" + dr["iname"].ToString();
                                    QRCodeGenerator qrGenerator = new QRCodeGenerator();
                                    QRCodeGenerator.QRCode qrCode = qrGenerator.CreateQrCode(code, QRCodeGenerator.ECCLevel.Q);
                                    System.Web.UI.WebControls.Image imgBarCode = new System.Web.UI.WebControls.Image();
                                    imgBarCode.Height = 150;
                                    imgBarCode.Width = 150;
                                    using (Bitmap bitMap = qrCode.GetGraphic(20))
                                    {
                                        using (MemoryStream ms = new MemoryStream())
                                        {
                                            bitMap.Save(ms, System.Drawing.Imaging.ImageFormat.Png);
                                            byte[] byteImage = ms.ToArray();
                                            dr["qrimg"] = byteImage;
                                            //imgBarCode.ImageUrl = "data:image/png;base64," + Convert.ToBase64String(byteImage);
                                        }
                                        //plBarCode.Controls.Add(imgBarCode);
                                    }
                                }
                                qrdt.AcceptChanges();
                                qrdt.TableName = "prepcur";
                                sgen.open_report_bydt_xml(userCode, qrdt, "issue_1", "Issue Detail");
                                //ViewBag.scripCall = "OpenSingle('../../../../../erp/schoolReports_Rpts/Filter_Report_xml.aspx','95%','900px','Reports');";
                                ViewBag.scripCall += "showRptnew('Report');disableForm();";
                            }
                            break;
                        case "ITEM2":
                             vchdate = (model[0].Col126 == "" || model[0].Col126 == null) ? model[0].Col20 : model[0].Col126;
                             cond2 = "and client_unit_id||vch_num||to_char(vch_date,'" + sgen.Getsqldateformat() + "')||type not in (" +
                                  "'" + unitid_mst + model[0].Col16 + vchdate + model[0].Col12 + "')";

                            mq = "select (it.client_unit_id||it.icode||s.loc) fstr,it.icode as Icode,it.iname as Iname,it.cpartno,um.master_name as uom," +
"location_name('" + clientid_mst + "'||'" + unitid_mst + "'||s.loc) as LocName,s.loc,s.closing,'0' qtyissue,'-' remark from item it " +
"inner join itbal itb on it.icode=itb.icode and it.type=itb.type and find_in_set(itb.client_unit_id,it.client_unit_id)=1 " +
"inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
"inner join (select icode,loc,client_unit_id,sum(op) op,sum(pktop) pktop,sum(qtyin) qtyin,sum(qtyout) out,sum(op)+sum(qtyin)-sum(qtyout) closing,sum(pktno) pktno from " +
"(select icode, loc, client_unit_id, nvl(op_2019, 0) op, nvl(pkt_2019, 0) pktop, 0 qtyin, 0 qtyout, 0 pktno from itbal_enx union all " +
"select icode, loc, client_unit_id, sum(to_number(qtyin)) - sum(to_number(qtyout)) op, sum((case when substr(type, 1, 1) in " +
"('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktop,sum(to_number(qtyin)) qtyin," +
"sum(to_number(qtyout)) qtyout,0 pktno from btchtrans where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between " +
"to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and to_date('" + year_from.Split(' ')[0].Trim() + "','" + sgen.Getsqldateformat() + "')-1 group by icode,loc,client_unit_id " +
"union all select icode,loc,client_unit_id,0 op,0 pktop,to_number(qtyin) qtyin,to_number(qtyout) qtyout," +
"nvl(sum((case when substr(type, 1, 1) in ('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)),0) pktno " +
"from btchtrans where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between " +
"to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and to_date('" + model[0].Col20.Trim() + "','" + sgen.Getsqldateformat() + "') " + cond2 + "" +
"group by icode,loc,client_unit_id,to_number(qtyin),to_number(qtyout)) a group by icode, loc, client_unit_id) s on " +
"it.icode=s.icode and find_in_set(s.client_unit_id,it.client_unit_id)=1 where length(trim(it.icode))>8 and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 " +
"and (it.client_unit_id||it.icode||s.loc) in ('" + URL + "')";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                if (model[0].dt2.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt2.Rows.RemoveAt(0); }
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt2.NewRow();
                                    dr["SNo"] = dt.Rows[i]["fstr"].ToString();
                                    dr["ICode"] = dt.Rows[i]["icode"].ToString();
                                    dr["IName"] = dt.Rows[i]["iname"].ToString();
                                    dr["PartNo"] = dt.Rows[i]["cpartno"].ToString();
                                    dr["Uom"] = dt.Rows[i]["uom"].ToString();
                                    dr["Qty_In_Stock"] = dt.Rows[i]["closing"].ToString();
                                    dr["Qty_Issue"] = dt.Rows[i]["qtyissue"].ToString();
                                    dr["Remark"] = dt.Rows[i]["remark"].ToString();
                                    dr["LocCode"] = dt.Rows[i]["loc"].ToString();
                                    dr["Loc"] = dt.Rows[i]["LocName"].ToString();
                                    model[0].dt2.Rows.Add(dr);
                                }
                                model[0].dt2.AcceptChanges();
                            }
                            break;
                        case "FUN":
                            //mq = "select group_concat(distinct a.vch_num) as fun_id,  sum(a.col9) as no_of_paxes,sum(a.col10*a.col9) Total_AMount from enx_tab2 a" +
                            //    " where (a.client_id||a.client_unit_id||a.vch_num|| to_char(a.vch_date, 'yyyymmdd')||a.type) in ('"+URL+"') ";
                            mq = "select group_concat(distinct a.vch_num) as fun_id,  sum(a.col9) as no_of_paxes,sum(a.col10*a.col9) Total_AMount," +
                                "ROUND((sum(a.col10 * a.col9) / sum(a.col9)), 2) as cost_perpax from enx_tab2 a" +
                                " where (a.client_id || a.client_unit_id || a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.type) in ('" + URL + "') ";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                model[0].Col22 = dt.Rows[0]["fun_id"].ToString();
                                model[0].Col25 = dt.Rows[0]["no_of_paxes"].ToString();
                                model[0].Col26 = dt.Rows[0]["Total_AMount"].ToString();
                                model[0].Col27 = dt.Rows[0]["cost_perpax"].ToString();
                                //model[0].Col27 = (sgen.Make_decimal( dt.Rows[0]["Total_AMount"].ToString())/ sgen.Make_decimal(dt.Rows[0]["no_of_paxes"].ToString())).ToString();
                                //model[0].Col27 = Convert.ToDouble((sgen.Make_decimal( dt.Rows[0]["Total_AMount"].ToString())/ sgen.Make_decimal(dt.Rows[0]["no_of_paxes"].ToString()))).ToString();
                            }
                            break;
                    }
                    break;
                #endregion
                #region item_issuedn
                case "item_issuedn":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            mq = "select (i.client_id||i.client_unit_id||i.vch_num||i.icode|| to_char(i.vch_date, 'yyyymmdd')||i.type) fstr,i.vch_num,to_char(convert_tz(i.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), " + "'" + sgen.Getsqldateformat() + "') as vch_date," +
                                "i.deptno,i.desig,i.cond ordid,i.totremark,i.chlno mrsno,to_char(convert_tz(i.chldate, 'UTC', '" + sgen.Gettimezone() + "'), " + "'" + sgen.Getsqldateformat() + "') as mrs_date," +
                                "i.icode,it.iname,it.cpartno,um.master_name uom,i.qtystk,i.qtychl,i.qtyout,i.qtybal,i.iremark,i.pono iord,i.client_id,i.client_unit_id,i.ent_by,i.ent_date,i.type,ks.master_name typename," +
                                "i.irate,i.iamount,i.mmt,i.btchno locid,i.btchno,i.cond locname,i.pktno from itransaction i " +
                                "inner join master_setting ks on ks.master_id=i.type and find_in_set(ks.client_unit_id,i.client_unit_id)=1 " +
                                "inner join item it on it.icode=i.icode and it.type='IT' and find_in_set(i.client_unit_id,it.client_unit_id)=1 " +
                                "inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
                                "where (i.client_id||i.client_unit_id||i.vch_num|| to_char(i.vch_date, 'yyyymmdd')||i.type)='" + URL + "' and i.inspected='C'";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                DataTable dtg = sgen.getdata(userCode, "select '-' as SNo ,'-' as Icode,'-' as IName,'-' PartNo,'-' as UOM,'0' as Qty_in_stock,'0' as Qty_Req,'0' as Qty_issue," +
                               "'0' Qty_Req_Bal,'0' as Rate,'0' as Amount,'-' as Remark,'0' Order_Id,'0' No_of_pkt,'0' batchno  from dual");
                                model[0].dt1 = dtg;
                                sgen.SetSession(MyGuid, "dtbase1", dtg);
                                dtg = sgen.getdata(userCode, "select '-' as SNo ,'-' as Icode,'-' as IName,'-' PartNo,'-' as UOM,'0' as Qty_in_stock,'0' as Qty_issue,'-' as Remark,'0' LocCode,'-' Loc,'0' batchno from dual");
                                model[0].dt2 = dtg;
                                sgen.SetSession(MyGuid, "dtbase2", dtg);
                                sgen.SetSession(MyGuid, "EDMODE", "Y");
                                DataTable dt2 = new DataTable();
                                #region getdept
                                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.dept(userCode, clientid_mst, unitid_mst);
                                #endregion
                                #region getdesig
                                TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2 = cmd_Fun.desig(userCode, unitid_mst);
                                #endregion
                                #region getloc
                                defval = "";
                                TempData[MyGuid + "_TList3"] = model[0].TList3 = mod3 = cmd_Fun.iloc(userCode, unitid_mst, out defval);
                                #endregion
                                #region getmmt                                
                                mod4.Add(new SelectListItem { Text = "Consume", Value = "001" });
                                mod4.Add(new SelectListItem { Text = "WIP", Value = "002" });
                                TempData[MyGuid + "_TList4"] = model[0].TList4 = mod4;
                                #endregion
                                model[0].Col1 = dt.Rows[0]["client_id"].ToString();
                                model[0].Col2 = dt.Rows[0]["client_unit_id"].ToString();
                                model[0].Col3 = dt.Rows[0]["ent_by"].ToString();
                                model[0].Col4 = dt.Rows[0]["ent_date"].ToString();
                                model[0].Col8 = "(client_id||client_unit_id||vch_num|| to_char(vch_date, 'yyyymmdd')||type) = '" + URL + "'";
                                model[0].Col10 = tm.Col10;
                                model[0].Col11 = tm.Col11;
                                model[0].Col12 = dt.Rows[0]["type"].ToString();
                                model[0].Col13 = "Update";
                                model[0].Col100 = "Update & New";
                                model[0].Col121 = "U";
                                model[0].Col122 = "<u>U</u>pdate";
                                model[0].Col123 = "Update & Ne<u>w</u>";
                                model[0].Col14 = tm.Col14;
                                model[0].Col15 = tm.Col15;
                                model[0].Col18 = dt.Rows[0]["vch_num"].ToString();
                                model[0].Col20 = dt.Rows[0]["vch_date"].ToString();
                                model[0].Col21 = dt.Rows[0]["totremark"].ToString();
                                model[0].Col22 = dt.Rows[0]["ordid"].ToString();
                                model[0].Col23 = dt.Rows[0]["mrsno"].ToString();
                                model[0].Col24 = dt.Rows[0]["mrs_date"].ToString();
                                model[0].Col9 = dt.Rows[0]["typename"].ToString();
                                sgen.SetSession(MyGuid, "KISTYPE", dt.Rows[0]["type"].ToString());
                                model[0].SelectedItems1 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["deptno"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems2 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["desig"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems3 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["locid"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems4 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["mmt"].ToString()).Distinct()).Split(',');
                                model[0].dt1 = model[0].dt1.Clone();
                                //model[0].dt1 = ((DataTable)Session["dtbase"]).Clone();
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    if (model[0].Col12.Trim() == "30") dr["sno"] = dt.Rows[i]["client_unit_id"].ToString().Trim() + dt.Rows[i]["icode"].ToString().Trim();
                                    else if (model[0].Col12.Trim() == "32") dr["sno"] = dt.Rows[i]["fstr"].ToString().Trim();
                                    dr["IName"] = dt.Rows[i]["iname"].ToString();
                                    dr["Icode"] = dt.Rows[i]["icode"].ToString();
                                    dr["UOM"] = dt.Rows[i]["uom"].ToString();
                                    dr["partno"] = dt.Rows[i]["cpartno"].ToString();
                                    dr["Qty_in_stock"] = dt.Rows[i]["qtystk"].ToString();
                                    dr["Qty_Req"] = dt.Rows[i]["qtychl"].ToString();
                                    dr["Qty_Issue"] = dt.Rows[i]["qtyout"].ToString();
                                    dr["Qty_Req_Bal"] = dt.Rows[i]["qtybal"].ToString();
                                    dr["Remark"] = dt.Rows[i]["iremark"].ToString();
                                    dr["Order_Id"] = dt.Rows[i]["iord"].ToString();//orderid
                                    dr["No_of_pkt"] = dt.Rows[i]["pktno"].ToString();//pktno
                                    dr["BATCHNO"] = dt.Rows[i]["btchno"].ToString();//pktno
                                    dr["rate"] = dt.Rows[i]["irate"].ToString();//rate
                                    dr["amount"] = dt.Rows[i]["iamount"].ToString();//amount
                                    model[0].dt1.Rows.Add(dr);
                                }
                                mq1 = "select (i.client_unit_id||i.icode||i.loc) fstr,i.icode,it.iname,it.cpartno,um.master_name uom,i.qtystk,i.qtyout,i.iremark,i.btchno,i.loc,location_name(i.client_id||i.client_unit_id||i.loc) locname from btchtrans i " +
                                    "inner join item it on it.icode=i.icode and it.type='IT' and find_in_set(i.client_unit_id,it.client_unit_id)=1 " +
                                    "inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
                               "where (i.client_id||i.client_unit_id||i.vch_num|| to_char(i.vch_date, 'yyyymmdd')||i.type)='" + URL + "' and i.pono='C'";
                                dtt = sgen.getdata(userCode, mq1);
                                if (dtt.Rows.Count > 0)
                                {
                                    model[0].dt2 = model[0].dt2.Clone();
                                    for (int i = 0; i < dtt.Rows.Count; i++)
                                    {
                                        DataRow dr = model[0].dt2.NewRow();
                                        dr["sno"] = dtt.Rows[i]["fstr"].ToString();
                                        dr["IName"] = dtt.Rows[i]["iname"].ToString();
                                        dr["Icode"] = dtt.Rows[i]["icode"].ToString();
                                        dr["UOM"] = dtt.Rows[i]["uom"].ToString();
                                        dr["partno"] = dtt.Rows[i]["cpartno"].ToString();
                                        dr["Qty_in_stock"] = dtt.Rows[i]["qtystk"].ToString();
                                        dr["Qty_Issue"] = dtt.Rows[i]["qtyout"].ToString();
                                        dr["Remark"] = dtt.Rows[i]["iremark"].ToString();
                                        dr["Loc"] = dtt.Rows[i]["locname"].ToString();
                                        dr["LocCode"] = dtt.Rows[i]["loc"].ToString();
                                        dr["BATCHNO"] = dtt.Rows[i]["btchno"].ToString();
                                        model[0].dt2.Rows.Add(dr);
                                    }
                                }
                                if (model[0].Col28 == "bhmain")
                                {
                                    mq = "select group_concat(distinct a.vch_num) as fun_id, sum(a.col9) as no_of_paxes,sum(a.col10*a.col9) Total_AMount from enx_tab2 a" +
                               " where a.client_unit_id ='" + unitid_mst + "' and a.vch_num in (" + model[0].Col22 + ") and a.type='FUN'";
                                    dt = sgen.getdata(userCode, mq);
                                    if (dt.Rows.Count > 0)
                                    {
                                        model[0].Col22 = dt.Rows[0]["fun_id"].ToString();
                                        model[0].Col25 = dt.Rows[0]["no_of_paxes"].ToString();
                                        model[0].Col26 = dt.Rows[0]["Total_AMount"].ToString();
                                        decimal cal = 0;
                                        try
                                        {
                                            cal = sgen.Make_decimal(dt.Rows[0]["Total_AMount"].ToString()) / sgen.Make_decimal(dt.Rows[0]["no_of_paxes"].ToString());
                                        }
                                        catch (Exception err) { cal = 0; }
                                        model[0].Col27 = (cal).ToString();
                                    }
                                }
                            }
                            break;
                        case "NEW":
                            mq = "select master_id,upper(master_name) master_name,to_char(convert_tz(utc_timestamp(),'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') issued_date " +
                                "from master_Setting where (master_id||to_char(vch_date, 'yyyymmdd')||type) = '" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "EDMODE", "N");
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                                ViewBag.vfill = "";
                                ViewBag.scripCall = "enableForm();";
                                // string defval = "";
                                mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + dtt.Rows[0]["master_id"].ToString() + "'" + model[0].Col11.Trim() + "";
                                vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                                model[0].Col18 = vch_num;
                                model[0].Col20 = dtt.Rows[0]["issued_date"].ToString();
                                model[0].Col12 = dtt.Rows[0]["master_id"].ToString();
                                sgen.SetSession(MyGuid, "KISTYPE", dtt.Rows[0]["master_id"].ToString());
                                model[0].Col17 = "1";
                                model[0].Col9 = dtt.Rows[0]["master_name"].ToString();
                                #region getdept
                                defval = "";
                                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.dept(userCode, unitid_mst, out defval);
                                model[0].SelectedItems1 = new string[] { defval };
                                #endregion
                                #region getdesig
                                defval = "";
                                TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2 = cmd_Fun.desig(userCode, unitid_mst, out defval);
                                model[0].SelectedItems2 = new string[] { defval };
                                #endregion
                                #region getloc
                                TempData[MyGuid + "_TList3"] = model[0].TList3 = mod3 = cmd_Fun.iloc(userCode, unitid_mst, out defcall);
                                model[0].SelectedItems3 = new string[] { "" };
                                #endregion
                                #region getmmt                                
                                mod4.Add(new SelectListItem { Text = "Consume", Value = "001" });
                                mod4.Add(new SelectListItem { Text = "WIP", Value = "002" });
                                TempData[MyGuid + "_TList4"] = model[0].TList4 = mod4;
                                model[0].SelectedItems4 = new string[] { "001" };
                                #endregion
                                model[0].Chk1 = true;
                                if (model[0].Col12 == "32")
                                {
                                    Make_query(viewName.ToLower(), "Select MRS", "ITEM", "1", "", "");
                                    ViewBag.scripCall = "callFoo('Select MRS');";
                                }
                                DataTable dtg = sgen.getdata(userCode, "select '-' as SNo ,'-' as Icode,'-' as IName,'-' PartNo,'-' as UOM,'0' as Qty_in_stock,'0' as Qty_Req,'0' as Qty_issue," +
                               "'0' Qty_Req_Bal,'0' as Rate,'0' as Amount,'-' as Remark,'0' Order_Id,'0' No_of_pkt,'0' batchno  from dual");
                                model[0].dt1 = dtg;
                                sgen.SetSession(MyGuid, "dtbase1", dtg);
                                //if (model[0].Col12 == "32")
                                //{
                                //    dtg = sgen.getdata(userCode, "select '-' as SNo ,'-' as Icode,'-' as IName,'-' PartNo,'-' as UOM,'0' as Qty_in_stock,'0' as Qty_Req,'0' as Qty_issue," +
                                //    "'0' Qty_Req_Bal,'0' as Rate,'0' as Amount,'-' as Remark,'0' Order_Id,'0' No_of_pkt,'0' batchno  from dual");
                                //    model[0].dt2 = dtg;
                                //    sgen.SetSession(MyGuid, "dtbase2", dtg);
                                //}
                                dtg = sgen.getdata(userCode, "select '-' as SNo ,'-' as Icode,'-' as IName,'-' PartNo,'-' as UOM,'0' as Qty_in_stock,'0' as Qty_issue,'-' as Remark,'0' LocCode,'-' Loc,'0' batchno from dual");
                                //model[0].dt3 = dtg;
                                model[0].dt2 = dtg;
                                //sgen.SetSession(MyGuid, "dtbase3", dtg);
                                sgen.SetSession(MyGuid, "dtbase2", dtg);
                                model[0].Col60 = sgen.seekval(userCode, "select master_name from master_setting where type='CF1' and client_unit_id='" + unitid_mst + "'", "master_name");
                            }
                            break;
                        case "ITEM":
                            if (model[0].Col12 == "30")
                            {
                                mq = "select (it.client_unit_id||it.icode) fstr,it.icode as Icode,it.iname as Iname,mg.master_name as ItemGrp,it.cpartno,um.master_name as uom," +
                                   "nvl(s.closing,0) qtystk,'0' as Qty_Req,'0' Qty_issue,'0' Qty_Req_bal,'-' remark,'0' Order_Id,nvl(s.btchno,0) batchno from item it " +
                                   "inner join master_setting mg on mg.master_id = substr(it.icode, 1, 3) and mg.type = 'KIG' and find_in_set(mg.client_unit_id, it.client_unit_id)=1 " +
                                   "inner join master_setting um on um.master_id = it.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, it.client_unit_id)= 1 " +
                                   "left join (select icode,client_unit_id,btchno,sum(qtyin) qtyin,sum(qtyout) out,sum(qtyin)-sum(qtyout) closing,sum(pktno) pktno from " +
                                   "(select icode,client_unit_id,to_number(qtyin) qtyin,to_number(qtyout) qtyout,(case when substr(type, 1, 1) in ('0', '1') then pktno " +
                                   "when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end) pktno,btchno from itransaction " +
                                   "where trim(store) = 'Y') a group by icode, client_unit_id,btchno) s " +
                                   "on it.icode = s.icode and find_in_set(s.client_unit_id, it.client_unit_id)=1 " +
                                   "where (it.client_unit_id || it.icode||nvl(s.btchno, '0')) in ('" + URL + "')";
                            }
                            else if (model[0].Col12 == "32")
                            {
                                mq = "select (mr.client_id||mr.client_unit_id||mr.vch_num||to_char(mr.vch_date,'yyyymmdd')||mr.type) fstr,mr.vch_num,mr.totremark remark," +
                                    "mr.pono Order_Id,to_char(convert_tz(mr.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), " + "'" + sgen.Getsqldateformat() + "') vch_date," +
                                    "mr.deptno,mr.desig from itransactionc mr where (mr.client_id || mr.client_unit_id || mr.vch_num || to_char(mr.vch_date, 'yyyymmdd') || mr.type) in ('" + URL + "')";
                            }
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                string ordid = "";
                                if (model[0].Col12 == "30") { ordid = model[0].Col22; }
                                else if (model[0].Col12 == "32")
                                {
                                    model[0].Col22 = dt.Rows[0]["Order_Id"].ToString().Trim();
                                    model[0].Col21 = dt.Rows[0]["remark"].ToString().Trim();
                                    model[0].Col23 = dt.Rows[0]["vch_num"].ToString().Trim();
                                    model[0].Col24 = dt.Rows[0]["vch_date"].ToString().Trim();
                                    model[0].Col50 = dt.Rows[0]["fstr"].ToString().Trim();
                                    ordid = dt.Rows[0]["Order_Id"].ToString().Trim();
                                    model[0].SelectedItems1 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["deptno"].ToString()).Distinct()).Split(',');
                                    model[0].SelectedItems2 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["desig"].ToString()).Distinct()).Split(',');
                                }
                                if (model[0].Col12 == "30")
                                {
                                    if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt1.Rows.RemoveAt(0); }
                                    for (int i = 0; i < dt.Rows.Count; i++)
                                    {
                                        DataRow dr = model[0].dt1.NewRow();
                                        dr["SNo"] = dt.Rows[i]["fstr"].ToString();
                                        dr["Icode"] = dt.Rows[i]["icode"].ToString();
                                        dr["IName"] = dt.Rows[i]["iname"].ToString();
                                        dr["PARTNO"] = dt.Rows[i]["cpartno"].ToString();
                                        dr["UOM"] = dt.Rows[i]["uom"].ToString();
                                        dr["Qty_in_stock"] = dt.Rows[i]["qtystk"].ToString();
                                        dr["Qty_Req"] = dt.Rows[i]["Qty_Req"].ToString();
                                        dr["Qty_issue"] = dt.Rows[i]["Qty_Req"].ToString();
                                        dr["Qty_Req_Bal"] = dt.Rows[i]["Qty_Req_bal"].ToString();
                                        dr["rate"] = dt.Rows[i]["Qty_Req_bal"].ToString();
                                        dr["Remark"] = "-";
                                        dr["Order_Id"] = ordid;
                                        dr["batchno"] = dt.Rows[i]["batchno"].ToString();
                                        model[0].dt1.Rows.Add(dr);
                                    }
                                }
                            }
                            break;
                        case "IMRS":
                            if (model[0].Col12 == "32")
                            {
                                mq = "select (mr.client_id||mr.client_unit_id||mr.vch_num||it.icode||to_char(mr.vch_date,'yyyymmdd')||mr.type) as fstr, mr.icode ,it.iname, it.cpartno,mr.vch_num mrs_no,to_char(mr.vch_date,'" + sgen.Getsqldateformat() + "') Req_Date,um.master_name as uom," +
                                    "dp.master_name Dept,dg.master_name Desig,nvl(s.closing,'0') as qtystk,mr.pono as Order_Id,mr.issued_qty,mr.bal_qty Qty_Req " +
                                    "from item it inner join (select distinct a.vch_num,a.type,a.icode,a.pono,a.client_id,a.client_unit_id,a.vch_date,a.Qty_Req,a.desig," +
                                    "a.deptno,sum(a.issued_qty) as issued_qty,(a.Qty_Req - nvl(sum(a.issued_qty), '0')) as bal_qty from(select " +
                                    "mr.vch_num,mr.type,mr.icode,mr.pono,mr.client_id,mr.client_unit_id,mr.vch_date,mr.desig,mr.deptno, mr.qtychl Qty_Req," +
                                    "to_number(nvl(iv.qtyout,'0')) as issued_qty from itransactionc mr left join itransaction iv on iv.icode=mr.icode and iv.chlno " +
                                    "= mr.vch_num and iv.type = '32' and iv.client_unit_id = '" + unitid_mst + "' " +
                                    " where upper(mr.type) in ('3A', '3B') and mr.client_unit_id = '" + unitid_mst + "' " +
                                    "union all select mr.vch_num,mr.type,mr.icode,mr.pono,mr.client_id,mr.client_unit_id,mr.vch_date,mr.desig,mr.deptno," +
                                    "mr.qtychl Qty_Req,to_number(nvl(iv.col11,'0')) as closed_qty from itransactionc mr left join enx_tab iv on iv.col7=mr.icode and " +
                                    "iv.col12 = mr.vch_num and iv.type = 'CPM' and iv.client_unit_id = " +
                                    "'" + unitid_mst + "'  where upper(mr.type) in ('3A', '3B') and mr.client_unit_id = '" + unitid_mst + "') " +
                                    "a group by(a.vch_num,a.type,a.icode,a.pono,a.client_id,a.client_unit_id,a.vch_date,a.desig,a.deptno,a.Qty_Req)) mr on " +
                                    "mr.icode=it.icode and find_in_set(mr.client_unit_id,it.client_unit_id)=1 left join master_setting dp" +
                                    " on dp.master_id = mr.deptno and dp.type = 'MDP' and " +
                                    "find_in_set(dp.client_unit_id,'" + unitid_mst + "')= 1 left join master_setting dg on dg.master_id = mr.desig and dg.type" +
                                    " = 'MDG' and find_in_set(dg.client_unit_id, '" + unitid_mst + "')" +
                                    " = 1 left join master_setting um on um.master_id = it.uom and um.type = 'UMM' " +
                                    "and find_in_set(um.client_unit_id, it.client_unit_id)= 1 left join(select t.client_unit_id, t.icode, sum(nvl(t.qtyin,0))" +
                                    " as Received,sum(nvl(t.qtyout, 0)) as Issued,sum(nvl(t.qtyin, 0)) - sum(nvl(t.qtyout, 0)) as closing from itransaction t" +
                                    " where trim(t.store) = 'Y' group by t.icode,t.client_unit_id ) s on it.icode = s.icode and find_in_set(s.client_unit_id,it.client_unit_id)=1 where " +
                                    "(it.client_id||it.client_unit_id||mr.vch_num||it.icode||mr.type||to_char(it.vch_date,'yyyymmdd')||it.type) in ('" + URL + "')";
                            }
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt1.Rows.RemoveAt(0); }
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["SNo"] = dt.Rows[i]["fstr"].ToString();
                                    dr["Icode"] = dt.Rows[i]["icode"].ToString();
                                    dr["IName"] = dt.Rows[i]["iname"].ToString();
                                    dr["PARTNO"] = dt.Rows[i]["cpartno"].ToString();
                                    dr["UOM"] = dt.Rows[i]["uom"].ToString();
                                    dr["Qty_in_stock"] = dt.Rows[i]["qtystk"].ToString();
                                    dr["Qty_Req"] = dt.Rows[i]["Qty_Req"].ToString();
                                    //dr["Qty_issue"] = dt.Rows[i]["Qty_issue"].ToString();
                                    //dr["Qty_Req_Bal"] = dt.Rows[i]["Qty_Req_bal"].ToString();
                                    dr["Qty_issue"] = "0";
                                    dr["Qty_Req_Bal"] = "0";
                                    dr["Remark"] = "-";
                                    dr["Order_Id"] = dt.Rows[i]["Order_Id"].ToString(); ;
                                    model[0].dt1.Rows.Add(dr);
                                }
                            }
                            break;
                        case "PRINT":
                            mq = "select a.totremark, REPLACE(ud.FIRST_NAME|| ' '|| ud.MIDDLE_NAME|| ' '|| ud.last_name,'0','') as created_by ,it.partname," +
                                "nvl(d.master_name,'-') as deptname, location_name(a.client_id||a.client_unit_id||bt.loc) loc,a.vch_num,a.icode,it.iname,it.cpartno," +
                                "um.master_name UOM,um.master_name as UOM2,hsn.master_name hsn," +
                                "to_char(convert_tz(a.vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') vch_date1," +
                                "to_char(a.chldate,'" + sgen.Getsqldateformat() + "') chldate,a.chlno,a.pono,it.cuom," +
                                "a.qtychl,a.qtyout,a.qtybal " +
                                "from itransaction a " +
                                "inner join item it on a.icode=it.icode and it.type='IT' and find_in_set(a.client_unit_id,it.client_unit_id)=1 " +
                                "inner join btchtrans bt on a.icode=bt.icode and a.vch_num=bt.vch_num and a.type=bt.type and a.client_unit_id=bt.client_unit_id AND trim(a.btchno)=trim(bt.btchno) " +
                                "inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,'" + unitid_mst + "')=1 " +
                                "left join master_setting um2 on um2.master_id=it.uom2 and um2.type='UMM' and find_in_set(um2.client_unit_id,'" + unitid_mst + "')=1 " +
                                "inner join master_setting hsn on hsn.master_id=it.hsno and hsn.type='HSN' and find_in_set(hsn.client_unit_id,'" + unitid_mst + "')=1 " +
                                "left join master_setting d on d.master_id=a.deptno and d.type='MDP' and find_in_set(d.client_unit_id,'" + unitid_mst + "')=1 " +
                                "inner join user_details ud on a.ent_by = ud.vch_num and ud.type = 'CPR' " +
                                "where (a.client_id||a.client_unit_id||a.vch_num|| to_char(a.vch_date, 'yyyymmdd')||a.type)='" + URL + "'";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                DataTable dt2 = new DataTable();
                                DataTable qrdt = new DataTable();
                                qrdt = dt.Copy();
                                qrdt.Columns.Add("qrimg", typeof(Byte[]));
                                foreach (DataRow dr in qrdt.Rows)
                                {
                                    string code = dr["icode"].ToString() + "\n" + dr["iname"].ToString();
                                    QRCodeGenerator qrGenerator = new QRCodeGenerator();
                                    QRCodeGenerator.QRCode qrCode = qrGenerator.CreateQrCode(code, QRCodeGenerator.ECCLevel.Q);
                                    System.Web.UI.WebControls.Image imgBarCode = new System.Web.UI.WebControls.Image();
                                    imgBarCode.Height = 150;
                                    imgBarCode.Width = 150;
                                    using (Bitmap bitMap = qrCode.GetGraphic(20))
                                    {
                                        using (MemoryStream ms = new MemoryStream())
                                        {
                                            bitMap.Save(ms, System.Drawing.Imaging.ImageFormat.Png);
                                            byte[] byteImage = ms.ToArray();
                                            dr["qrimg"] = byteImage;
                                            //imgBarCode.ImageUrl = "data:image/png;base64," + Convert.ToBase64String(byteImage);
                                        }
                                        //plBarCode.Controls.Add(imgBarCode);
                                    }
                                }
                                qrdt.AcceptChanges();
                                qrdt.TableName = "prepcur";
                                sgen.open_report_bydt_xml(userCode, qrdt, "issue_1", "Issue Detail");
                                //ViewBag.scripCall = "OpenSingle('../../../../../erp/schoolReports_Rpts/Filter_Report_xml.aspx','95%','900px','Reports');";
                                //ViewBag.scripCall += "disableForm();";
                                ViewBag.scripCall += "showRptnew('Issue Detail');disableForm();";
                            }
                            break;
                        case "ITEM2":
                            mq = "select (it.client_unit_id||it.icode||s.loc) fstr,it.icode as Icode,it.iname as Iname,it.cpartno,um.master_name as uom," +
"location_name('" + clientid_mst + "'||'" + unitid_mst + "'||s.loc) as LocName,s.loc,s.closing,'0' qtyissue,'-' remark,nvl(s.btchno,0) batchno from item it " +
"inner join itbal itb on it.icode=itb.icode and it.type=itb.type and find_in_set(itb.client_unit_id,it.client_unit_id)=1 " +
"inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
"inner join (select icode,loc,client_unit_id,btchno,sum(op) op,sum(pktop) pktop,sum(qtyin) qtyin,sum(qtyout) out,sum(op)+sum(qtyin)-sum(qtyout) closing,sum(pktno) pktno from " +
    "(select icode, loc, client_unit_id, nvl(op_2019, 0) op, nvl(pkt_2019, 0) pktop, 0 qtyin, 0 qtyout, 0 pktno,'' btchno from itbal_enx " +
    "union all " +
    "select icode, loc, client_unit_id, sum(to_number(qtyin)) - sum(to_number(qtyout)) op, sum((case when substr(type, 1, 1) in " +
    "('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktop,sum(to_number(qtyin)) qtyin," +
    "sum(to_number(qtyout)) qtyout,0 pktno,btchno from btchtrans where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between " +
    "to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and to_date('" + year_from.Split(' ')[0].Trim() + "','" + sgen.Getsqldateformat() + "')-1 group by icode,loc,client_unit_id,btchno " +
    "union all select icode,loc,client_unit_id,0 op,0 pktop,to_number(qtyin) qtyin,to_number(qtyout) qtyout," +
    "nvl(sum((case when substr(type, 1, 1) in ('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)),0) pktno,btchno " +
    "from btchtrans where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between " +
    "to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and to_date('" + model[0].Col20.Trim() + "','" + sgen.Getsqldateformat() + "') " +
    "group by icode,loc,client_unit_id,to_number(qtyin),to_number(qtyout),btchno) a group by icode, loc, client_unit_id,btchno) s on " +
"it.icode=s.icode and find_in_set(s.client_unit_id,it.client_unit_id)=1 where length(trim(it.icode))>8 and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 " +
"and (it.client_unit_id||it.icode||s.loc) in ('" + URL + "')";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                if (model[0].dt2.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt2.Rows.RemoveAt(0); }
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt2.NewRow();
                                    dr["SNo"] = dt.Rows[i]["fstr"].ToString();
                                    dr["ICode"] = dt.Rows[i]["icode"].ToString();
                                    dr["IName"] = dt.Rows[i]["iname"].ToString();
                                    dr["PartNo"] = dt.Rows[i]["cpartno"].ToString();
                                    dr["Uom"] = dt.Rows[i]["uom"].ToString();
                                    dr["Qty_In_Stock"] = dt.Rows[i]["closing"].ToString();
                                    dr["Qty_Issue"] = dt.Rows[i]["qtyissue"].ToString();
                                    dr["Remark"] = dt.Rows[i]["remark"].ToString();
                                    dr["LocCode"] = dt.Rows[i]["loc"].ToString();
                                    dr["Loc"] = dt.Rows[i]["LocName"].ToString();
                                    dr["batchno"] = dt.Rows[i]["batchno"].ToString();
                                    model[0].dt2.Rows.Add(dr);
                                }
                                model[0].dt2.AcceptChanges();
                            }
                            break;
                        case "FUN":
                            mq = "select group_concat(distinct a.vch_num) as fun_id,  sum(a.col9) as no_of_paxes,sum(a.col10*a.col9) Total_AMount," +
                                "ROUND((sum(a.col10 * a.col9) / sum(a.col9)), 2) as cost_perpax from enx_tab2 a" +
                                " where (a.client_id || a.client_unit_id || a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.type) in ('" + URL + "') ";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                model[0].Col22 = dt.Rows[0]["fun_id"].ToString();
                                model[0].Col25 = dt.Rows[0]["no_of_paxes"].ToString();
                                model[0].Col26 = dt.Rows[0]["Total_AMount"].ToString();
                                model[0].Col27 = dt.Rows[0]["cost_perpax"].ToString();
                            }
                            break;
                    }
                    break;
                #endregion
                #region store_return
                case "store_return":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            mq = @"select a.*,to_char(convert_tz(vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') vch_date1," +
                                "to_char(convert_tz(chldate,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') chldate1," +
                                "(client_id||client_unit_id||vch_num|| to_char(vch_date, 'yyyymmdd')||type) fstr from itransaction a " +
                                "where (client_id||client_unit_id||vch_num|| to_char(vch_date, 'yyyymmdd')||type)='" + URL + "' and a.inspected='C'";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "EDMODE", "Y");
                                DataTable dt2 = new DataTable();
                                #region getdept
                                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.dept(userCode, clientid_mst, unitid_mst);
                                #endregion
                                #region getdesig
                                TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2 = cmd_Fun.desig(userCode, unitid_mst);
                                #endregion
                                #region getloc
                                TempData[MyGuid + "_TList3"] = model[0].TList3 = mod3 = cmd_Fun.iloc(userCode, unitid_mst, out defcall);
                                #endregion
                                #region getmmt                                
                                mod4.Add(new SelectListItem { Text = "Consume", Value = "001" });
                                mod4.Add(new SelectListItem { Text = "WIP", Value = "002" });
                                TempData[MyGuid + "_TList4"] = model[0].TList4 = mod4;
                                #endregion                   
                                model[0].Col1 = dt.Rows[0]["client_id"].ToString();
                                model[0].Col2 = dt.Rows[0]["client_unit_id"].ToString();
                                model[0].Col3 = dt.Rows[0]["ent_by"].ToString();
                                model[0].Col4 = dt.Rows[0]["ent_date"].ToString();
                                model[0].Col5 = dt.Rows[0]["edit_by"].ToString();
                                model[0].Col6 = dt.Rows[0]["edit_date"].ToString();
                                model[0].Col8 = "(client_id||client_unit_id||vch_num|| to_char(vch_date, 'yyyymmdd')||type) = '" + URL + "'";
                                model[0].Col9 = tm.Col9;
                                model[0].Col10 = tm.Col10;
                                model[0].Col11 = tm.Col11;
                                model[0].Col12 = dt.Rows[0]["type"].ToString();
                                sgen.SetSession(MyGuid, "KSRTYPE", model[0].Col12);
                                model[0].Col13 = "Update";
                                model[0].Col100 = "Update & New";
                                model[0].Col121 = "U";
                                model[0].Col122 = "<u>U</u>pdate";
                                model[0].Col123 = "Update & Ne<u>w</u>";
                                model[0].Col14 = tm.Col14;
                                model[0].Col15 = tm.Col15;
                                model[0].Col18 = dt.Rows[0]["vch_num"].ToString();
                                model[0].Col20 = dt.Rows[0]["vch_date1"].ToString();
                                model[0].Col21 = dt.Rows[0]["totremark"].ToString();
                                model[0].Col55 = sgen.GetSession(MyGuid, "RELOCCHK").ToString();

                                model[0].SelectedItems1 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["deptno"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems2 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["desig"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems3 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["btchno"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems4 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["mmt"].ToString()).Distinct()).Split(',');
                                if (model[0].Col12.Trim().Equals("11"))
                                {
                                    model[0].Col22 = dt.Rows[0]["chlno"].ToString().Trim();//issueno
                                    model[0].Col23 = dt.Rows[0]["chldate1"].ToString().Trim();//issuedate
                                }
                                model[0].dt1 = model[0].dt1.Clone();
                                //model[0].dt1 = ((DataTable)Session["dtbase"]).Clone();
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    if (model[0].Col12.Trim() == "10") dr["sno"] = dt.Rows[i]["client_unit_id"].ToString().Trim() + dt.Rows[i]["icode"].ToString().Trim();
                                    else if (model[0].Col12.Trim() == "11") dr["sno"] = dt.Rows[i]["fstr"].ToString().Trim();
                                    dr["IName"] = dt.Rows[i]["iname"].ToString();
                                    dr["Icode"] = dt.Rows[i]["icode"].ToString();
                                    //dr["HSN"] = dt.Rows[i]["hsno"].ToString();
                                    dr["UOM"] = dt.Rows[i]["uom"].ToString();
                                    dr["partno"] = dt.Rows[i]["cpartno"].ToString();
                                    dr["Qty_in_stock"] = dt.Rows[i]["qtystk"].ToString();
                                    dr["Qty_Ret_Req"] = dt.Rows[i]["qtychl"].ToString();
                                    dr["Qty_Act_Ret"] = dt.Rows[i]["qtyin"].ToString();
                                    dr["Qty_Req_Bal"] = dt.Rows[i]["qtybal"].ToString();
                                    dr["Remark"] = dt.Rows[i]["iremark"].ToString();
                                    dr["No_of_pkt"] = dt.Rows[i]["pktno"].ToString();
                                    model[0].dt1.Rows.Add(dr);
                                }
                                mq1 = "select (i.client_unit_id||i.icode||i.loc) fstr,i.icode,i.iname,i.cpartno,i.uom,i.qtystk,i.qtyin,i.iremark,i.loc,location_name(i.client_id||i.client_unit_id||i.loc) locname " +
                                    "from btchtrans i where (i.client_id||i.client_unit_id||i.vch_num|| to_char(i.vch_date, 'yyyymmdd')||i.type)='" + URL + "' and i.pono='C'";
                                dtt = sgen.getdata(userCode, mq1);
                                if (dtt.Rows.Count > 0)
                                {
                                    model[0].dt2 = model[0].dt2.Clone();
                                    for (int i = 0; i < dtt.Rows.Count; i++)
                                    {
                                        DataRow dr = model[0].dt2.NewRow();
                                        dr["sno"] = dtt.Rows[i]["fstr"].ToString();
                                        dr["IName"] = dtt.Rows[i]["iname"].ToString();
                                        dr["Icode"] = dtt.Rows[i]["icode"].ToString();
                                        dr["UOM"] = dtt.Rows[i]["uom"].ToString();
                                        dr["partno"] = dtt.Rows[i]["cpartno"].ToString();
                                        dr["Qty_in_stock"] = dtt.Rows[i]["qtystk"].ToString();
                                        dr["Qty_Act"] = dtt.Rows[i]["qtyin"].ToString();
                                        dr["Remark"] = dtt.Rows[i]["iremark"].ToString();
                                        dr["Loc"] = dtt.Rows[i]["locname"].ToString();
                                        dr["LocCode"] = dtt.Rows[i]["loc"].ToString();
                                        model[0].dt2.Rows.Add(dr);
                                    }
                                }
                            }
                            break;
                        case "NEW":
                            mq = "select master_id,upper(master_name) master_name,to_char(convert_tz(utc_timestamp(),'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') return_date " +
                                "from master_Setting where (master_id||to_char(vch_date, 'yyyymmdd')||type) = '" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "EDMODE", "N");
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                                ViewBag.scripCall = "enableForm();";
                                mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + dtt.Rows[0]["master_id"].ToString() + "'" + model[0].Col11.Trim() + "";
                                vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                                model[0].Col18 = vch_num;
                                model[0].Col20 = dtt.Rows[0]["return_date"].ToString();
                                model[0].Col12 = dtt.Rows[0]["master_id"].ToString();
                                sgen.SetSession(MyGuid, "KSRTYPE", dtt.Rows[0]["master_id"].ToString());
                                model[0].Col17 = "1";
                                model[0].Col9 = dtt.Rows[0]["master_name"].ToString();
                                model[0].Chk1 = true;
                                #region getdept
                                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.dept(userCode, clientid_mst, unitid_mst);
                                #endregion
                                #region getdesig
                                TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2 = cmd_Fun.desig(userCode, unitid_mst);
                                #endregion
                                #region getloc
                                TempData[MyGuid + "_TList3"] = model[0].TList3 = mod3 = cmd_Fun.iloc(userCode, unitid_mst, out defcall);
                                #endregion
                                #region getmmt                                
                                mod4.Add(new SelectListItem { Text = "Consume", Value = "001" });
                                mod4.Add(new SelectListItem { Text = "WIP", Value = "002" });
                                TempData[MyGuid + "_TList4"] = model[0].TList4 = mod4;
                                #endregion     
                                model[0].SelectedItems1 = new string[] { "" };
                                model[0].SelectedItems2 = new string[] { "" };
                                model[0].SelectedItems3 = new string[] { "" };
                                model[0].SelectedItems4 = new string[] { "" };
                                if (model[0].Col12 == "11")
                                {
                                    Make_query(viewName.ToLower(), "Select Issue Item", "ITEM", "1", "", "");
                                    ViewBag.scripCall = "callFoo('Select Issue Item');";
                                }
                            }
                            break;
                        case "ITEM":
                            if (model[0].Col12 == "10")
                            {
                                if (model[0].SelectedItems4.FirstOrDefault() == "001")
                                {
                                    //mq = "select (it.client_unit_id||it.icode) fstr,it.icode,it.iname,it.cpartno,um.master_name uom,s.closing qtystk," +
                                    //     "'0' as Qty_Ret_Req,'0' Qty_issue,'0'  Qty_Req_bal,'-' remark " +
                                    //     "from item it inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
                                    //     "inner join (select t.client_unit_id,t.icode,sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout,0)) as Issued," +
                                    //     "sum(nvl(t.qtyout,0))-sum(nvl(t.qtyin,0)) as closing from itransaction t where trim(t.store)='Y' and substr(trim(t.type),1,1) in ('1','3') and trim(t.type) not in ('36','37') group by t.icode," +
                                    //     "t.client_unit_id ) s on it.icode=s.icode and find_in_set(s.client_unit_id,it.client_unit_id)=1 where (it.client_unit_id||it.icode) in ('" + URL + "')";

                                    mq = "select (it.client_unit_id||it.icode) fstr,it.icode,it.iname,it.cpartno,um.master_name UOM,nvl(s.closing,0) qtystk," +
                                        "nvl(s.pktno, 0) pktno,'0' as Qty_Ret_Req,'0' Qty_issue,'0'  Qty_Req_bal,'-' remark from item it " +
                                        "inner join master_setting um on um.master_id = it.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, it.client_unit_id)= 1 " +
                                        "left join(select t.client_unit_id, t.icode, sum(nvl(t.qtyin,0)) Received,sum(nvl(t.qtyout, 0)) Issued,sum(nvl(t.qtyout, 0)) - sum(nvl(t.qtyin, 0)) closing," +
                                        "sum(nvl(t.pktno, 0)) pktno from (select client_unit_id, client_id, icode, type, qtyin, qtyout, (case when substr(type, 1, 2) in ('10', '11', '12', '13', '14') " +
                                        "then - pktno when substr(type,1,2) in ('30', '32') then pktno else 0 end) pktno,store from itransaction where trim(store) = 'Y' and " +
                                        "substr(trim(type),1,2) in ('10', '11', '12', '13', '14', '30', '32')) t group by t.icode,t.client_unit_id) s on it.icode = s.icode and " +
                                        "find_in_set(s.client_unit_id, it.client_unit_id)= 1 where(it.client_unit_id || it.icode) in ('" + URL + "')";
                                }
                                else if (model[0].SelectedItems4.FirstOrDefault() == "002")
                                {
                                    mq = "select (i.client_unit_id||i.icode) fstr,i.icode, i.iname, i.cpartno, um.master_name uom, sum(nvl(a.qtyin, 0)) - sum(nvl(a.qtyout, 0)) qtystk," +
                                        "nvl(a.fstg, '001') fstgCode,st.master_name fstg,'0' as Qty_Ret_Req,'0' Qty_issue,'0'  Qty_Req_bal,'-' remark  " +
                                        "from item i " +
                                        "left join (select icode, (case when type='100' then 0 else qtyin end)  qtyin, qtyout qtyout, stage fstg, type, " +
                                        "client_id, client_unit_id,vch_num,vch_date from iprod where (type like '3%' or type = '10P') " +
                                        "union " +
                                        "select acode icode, (to_number(max(qtyin))+to_number(max(qtyrw))) qtyin, 0 qtyout, stage1 fstg, type, client_id, client_unit_id ,vch_num,vch_date from iprod " +
                                        "where type = '100' group by acode, stage1, type, client_id, client_unit_id ,vch_num,vch_date " +
                                        "union " +
                                        "select acode icode, to_number(max(qtyrej)) qtyin, 0 qtyout, '101' fstg, type, client_id, client_unit_id,vch_num,vch_date from iprod where type = '100' " +
                                        "group by acode, type, client_id, client_unit_id,vch_num,vch_date " +
                                        "union " +
                                        "select icode, sum(qtyin) qtyin, 0 qtyout, stage1 fstg, type, client_id, client_unit_id ,vch_num,vch_date from iprod where type = '10R' " +
                                        "group by icode, stage1, type, client_id, client_unit_id,vch_num,vch_date " +
                                        "union " +
                                        "select icode, 0 qtyin, sum(qtyout) qtyout, stage fstg, type,client_id, client_unit_id,vch_num,vch_date from iprod where type = '10R' " +
                                        "group by icode, stage, type, client_id, client_unit_id,vch_num,vch_date " +
                                        "union " +
                                        "select icode, sum(qtyout) qtyin, 0 qtyout, stage1 fstg, type,client_id, client_unit_id,vch_num,vch_date from iprod where type = '10R' " +
                                        "group by icode, stage1, type, client_id, client_unit_id,vch_num,vch_date) a on a.icode = i.icode and find_in_set(a.client_unit_id, i.client_unit_id)=1 " +
                                        "inner join master_setting um on um.master_id = i.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, i.client_unit_id)= 1 " +
                                        "inner join master_setting st on st.master_id=nvl(a.fstg, '001') and st.type='KPS' and find_in_set(st.client_unit_id,i.client_unit_id)=1 " +
                                        "where i.type = 'IT' and find_in_set(i.client_unit_id, '" + unitid_mst + "')=1 and substr(i.icode,1,1)<>'9' " +
                                        "and nvl(a.fstg, '001')='001' and (i.client_unit_id||i.icode) in ('" + URL + "') " +
                                        "group by i.icode,i.iname,um.master_name,nvl(a.fstg, '001'),st.master_name,i.client_unit_id, i.cpartno";
                                }
                            }
                            else if (model[0].Col12 == "11")
                            {
                                //mq = "select (mr.client_id||mr.client_unit_id||mr.vch_num||to_char(mr.vch_date,'yyyymmdd')||mr.type) fstr,mr.vch_num,mr.totremark remark,mr.pono Order_Id," +
                                //    "to_char(convert_tz(mr.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), " + "'" + sgen.Getsqldateformat() + "') vch_date,mr.deptno,mr.desig " +
                                //    "from itransaction mr where (mr.client_id || mr.client_unit_id || mr.vch_num || to_char(mr.vch_date, 'yyyymmdd') || mr.type) in ('" + URL + "')";
                                mq = "select (mr.client_id||mr.client_unit_id||mr.vch_num||to_char(mr.vch_date,'yyyymmdd')||mr.type) fstr,mr.vch_num,mr.totremark remark,mr.pono Order_Id," +
                                    "to_char(convert_tz(mr.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') vch_date,mr.deptno,mr.desig," +
                                    "mr.type,nvl(p.pflag, 'C') flg from itransaction mr " +
                                    "left join iprod p on p.vch_num = mr.vch_num and p.vch_date = mr.vch_date and p.type = mr.type and p.client_unit_id = mr.client_unit_id " +
                                    "where (mr.client_id || mr.client_unit_id || mr.vch_num || to_char(mr.vch_date, 'yyyymmdd') || mr.type) in ('" + URL + "') order by mr.vch_num asc";
                            }
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                if (model[0].Col12 == "11")
                                {
                                    model[0].Col21 = dt.Rows[0]["remark"].ToString().Trim();
                                    model[0].Col22 = dt.Rows[0]["vch_num"].ToString().Trim();//issueno
                                    model[0].Col23 = dt.Rows[0]["vch_date"].ToString().Trim();//issuedate
                                    model[0].Col50 = dt.Rows[0]["fstr"].ToString().Trim();
                                    model[0].SelectedItems1 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["deptno"].ToString()).Distinct()).Split(',');
                                    model[0].SelectedItems2 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["desig"].ToString()).Distinct()).Split(',');
                                }
                                if (model[0].Col12 == "10")
                                {
                                    if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt1.Rows.RemoveAt(0); }
                                    for (int i = 0; i < dt.Rows.Count; i++)
                                    {
                                        DataRow dr = model[0].dt1.NewRow();
                                        dr["SNo"] = dt.Rows[i]["fstr"].ToString();
                                        dr["Icode"] = dt.Rows[i]["icode"].ToString();
                                        dr["IName"] = dt.Rows[i]["iname"].ToString();
                                        dr["PARTNO"] = dt.Rows[i]["cpartno"].ToString();
                                        dr["UOM"] = dt.Rows[i]["uom"].ToString();
                                        dr["Qty_in_stock"] = dt.Rows[i]["qtystk"].ToString();
                                        dr["Qty_Ret_Req"] = dt.Rows[i]["Qty_Ret_Req"].ToString();
                                        dr["Qty_Act_Ret"] = dt.Rows[i]["Qty_issue"].ToString();
                                        dr["Qty_Req_Bal"] = dt.Rows[i]["Qty_Req_bal"].ToString();
                                        dr["Remark"] = dt.Rows[i]["remark"].ToString();
                                        model[0].dt1.Rows.Add(dr);
                                    }
                                }
                            }
                            break;
                        case "IISS":
                            if (model[0].Col12 == "11")
                            {
                                mq = "select (mr.client_id||mr.client_unit_id||mr.vch_num||it.icode||to_char(mr.vch_date,'yyyymmdd')||mr.type) fstr,mr.vch_num,it.icode,it.iname,it.cpartno," +
                                    "to_char(convert_tz(mr.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), " + "'" + sgen.Getsqldateformat() + "') as vch_date," +
                                    "um.master_name as uom,s.closing qtystk,mr.qtyout Qty_Ret_Req,'0' Qty_Act_Ret,'0' Qty_Req_bal,mr.totremark remark,mr.deptno,mr.desig " +
                                    "from itransaction mr inner join item it on mr.icode=it.icode and it.type='IT' and find_in_set(it.client_unit_id,mr.client_unit_id)=1 " +
                                    "inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
                                    "inner join (select t.client_unit_id,t.icode,sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout,0)) as Issued," +
                                    "sum(nvl(t.qtyout,0))-sum(nvl(t.qtyin,0)) as closing from itransaction t where trim(t.store)='Y' and substr(trim(t.type),1,1) in ('1','3') and trim(t.type) not in ('36','37') group by t.icode," +
                                    "t.client_unit_id ) s on it.icode=s.icode and find_in_set(s.client_unit_id,it.client_unit_id)=1 " +
                                    "where (mr.client_id || mr.client_unit_id || mr.vch_num || it.icode||to_char(mr.vch_date, 'yyyymmdd') || mr.type) in ('" + URL + "')";
                            }
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt1.Rows.RemoveAt(0); }
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["SNo"] = dt.Rows[i]["fstr"].ToString();
                                    dr["Icode"] = dt.Rows[i]["icode"].ToString();
                                    dr["IName"] = dt.Rows[i]["iname"].ToString();
                                    dr["PARTNO"] = dt.Rows[i]["cpartno"].ToString();
                                    dr["UOM"] = dt.Rows[i]["uom"].ToString();
                                    dr["Qty_in_stock"] = dt.Rows[i]["qtystk"].ToString();
                                    dr["Qty_Ret_Req"] = dt.Rows[i]["Qty_Ret_Req"].ToString();
                                    dr["Qty_Act_Ret"] = dt.Rows[i]["Qty_Act_Ret"].ToString();
                                    dr["Qty_Req_Bal"] = dt.Rows[i]["Qty_Req_bal"].ToString();
                                    dr["Remark"] = "-";
                                    model[0].dt1.Rows.Add(dr);
                                }
                            }
                            break;
                        case "ITEM2":
                            mq = "select (it.client_unit_id||it.icode||s.loc) fstr,it.icode as Icode,it.iname as Iname,it.cpartno,um.master_name as uom," +
"location_name(it.client_id||it.client_unit_id||s.loc) as LocName,s.loc,s.closing,'0' qty_act,'-' remark from item it " +
"inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
"inner join (select t.client_unit_id,t.loc,t.icode,sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout,0)) as Issued," +
"sum(nvl(t.qtyout,0))-sum(nvl(t.qtyin,0)) as closing from btchtrans t where length(trim(t.loc))>6 and trim(t.store)='Y' and substr(trim(t.type),1,1) in ('1','3') and trim(t.type) not in ('36','37')  group by t.icode,t.client_unit_id,t.loc ) s on " +
"it.icode=s.icode and it.client_unit_id=s.client_unit_id where length(trim(it.icode))>8 and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 " +
"and (it.client_unit_id||it.icode||s.loc) in ('" + URL + "')";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                if (model[0].dt2.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt2.Rows.RemoveAt(0); }
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt2.NewRow();
                                    dr["SNo"] = dt.Rows[i]["fstr"].ToString();
                                    dr["ICode"] = dt.Rows[i]["icode"].ToString();
                                    dr["IName"] = dt.Rows[i]["iname"].ToString();
                                    dr["PartNo"] = dt.Rows[i]["cpartno"].ToString();
                                    dr["Uom"] = dt.Rows[i]["uom"].ToString();
                                    dr["Qty_In_Stock"] = dt.Rows[i]["closing"].ToString();
                                    dr["Qty_Act"] = dt.Rows[i]["qty_act"].ToString();
                                    dr["Remark"] = dt.Rows[i]["remark"].ToString();
                                    dr["LocCode"] = dt.Rows[i]["loc"].ToString();
                                    dr["Loc"] = dt.Rows[i]["LocName"].ToString();
                                    model[0].dt2.Rows.Add(dr);
                                }
                                model[0].dt2.AcceptChanges();
                            }
                            break;
                    }
                    break;
                #endregion
                #region store_returnn
                case "store_returnn":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            mq = @"select a.*,to_char(convert_tz(vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') vch_date1," +
                                "to_char(convert_tz(chldate,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') chldate1," +
                                "(client_id||client_unit_id||vch_num|| to_char(vch_date, 'yyyymmdd')||type) fstr from itransaction a " +
                                "where (client_id||client_unit_id||vch_num|| to_char(vch_date, 'yyyymmdd')||type)='" + URL + "' and a.inspected='C'";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "EDMODE", "Y");
                                DataTable dt2 = new DataTable();
                                #region getdept
                                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.dept(userCode, clientid_mst, unitid_mst);
                                #endregion
                                #region getdesig
                                TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2 = cmd_Fun.desig(userCode, unitid_mst);
                                #endregion
                                #region getloc
                                TempData[MyGuid + "_TList3"] = model[0].TList3 = mod3 = cmd_Fun.iloc(userCode, unitid_mst, out defcall);
                                #endregion
                                #region getmmt                                
                                mod4.Add(new SelectListItem { Text = "Consume", Value = "001" });
                                mod4.Add(new SelectListItem { Text = "WIP", Value = "002" });
                                TempData[MyGuid + "_TList4"] = model[0].TList5 = mod4;
                                #endregion                   
                                model[0].Col1 = dt.Rows[0]["client_id"].ToString();
                                model[0].Col2 = dt.Rows[0]["client_unit_id"].ToString();
                                model[0].Col3 = dt.Rows[0]["ent_by"].ToString();
                                model[0].Col4 = dt.Rows[0]["ent_date"].ToString();
                                model[0].Col5 = dt.Rows[0]["edit_by"].ToString();
                                model[0].Col6 = dt.Rows[0]["edit_date"].ToString();
                                model[0].Col8 = "(client_id||client_unit_id||vch_num|| to_char(vch_date, 'yyyymmdd')||type) = '" + URL + "'";
                                model[0].Col9 = tm.Col9;
                                model[0].Col10 = tm.Col10;
                                model[0].Col11 = tm.Col11;
                                model[0].Col12 = dt.Rows[0]["type"].ToString();
                                model[0].Col13 = "Update";
                                model[0].Col100 = "Update & New";
                                model[0].Col121 = "U";
                                model[0].Col122 = "<u>U</u>pdate";
                                model[0].Col123 = "Update & Ne<u>w</u>";
                                model[0].Col14 = tm.Col14;
                                model[0].Col15 = tm.Col15;
                                model[0].Col18 = dt.Rows[0]["vch_num"].ToString();
                                model[0].Col20 = dt.Rows[0]["vch_date1"].ToString();
                                model[0].Col21 = dt.Rows[0]["totremark"].ToString();
                                model[0].Col55 = sgen.GetSession(MyGuid, "RELOCCHK").ToString();

                                model[0].SelectedItems1 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["deptno"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems2 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["desig"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems3 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["btchno"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems4 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["mmt"].ToString()).Distinct()).Split(',');
                                if (model[0].Col12.Trim().Equals("11"))
                                {
                                    model[0].Col22 = dt.Rows[0]["chlno"].ToString().Trim();//issueno
                                    model[0].Col23 = dt.Rows[0]["chldate1"].ToString().Trim();//issuedate
                                }
                                model[0].dt1 = model[0].dt1.Clone();
                                //model[0].dt1 = ((DataTable)Session["dtbase"]).Clone();
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    if (model[0].Col12.Trim() == "10") dr["sno"] = dt.Rows[i]["client_unit_id"].ToString().Trim() + dt.Rows[i]["icode"].ToString().Trim();
                                    else if (model[0].Col12.Trim() == "11") dr["sno"] = dt.Rows[i]["fstr"].ToString().Trim();
                                    dr["IName"] = dt.Rows[i]["iname"].ToString();
                                    dr["Icode"] = dt.Rows[i]["icode"].ToString();
                                    //dr["HSN"] = dt.Rows[i]["hsno"].ToString();
                                    dr["UOM"] = dt.Rows[i]["uom"].ToString();
                                    dr["partno"] = dt.Rows[i]["cpartno"].ToString();
                                    dr["Qty_in_stock"] = dt.Rows[i]["qtystk"].ToString();
                                    dr["Qty_Ret_Req"] = dt.Rows[i]["qtychl"].ToString();
                                    dr["Qty_Act_Ret"] = dt.Rows[i]["qtyin"].ToString();
                                    dr["Qty_Req_Bal"] = dt.Rows[i]["qtybal"].ToString();
                                    dr["Remark"] = dt.Rows[i]["iremark"].ToString();
                                    dr["No_of_pkt"] = dt.Rows[i]["pktno"].ToString();
                                    model[0].dt1.Rows.Add(dr);
                                }
                                mq1 = "select (i.client_unit_id||i.icode||i.loc) fstr,i.icode,i.iname,i.cpartno,i.uom,i.qtystk,i.qtyin,i.iremark,i.loc,location_name(i.client_id||i.client_unit_id||i.loc) locname " +
                                    "from btchtrans i where (i.client_id||i.client_unit_id||i.vch_num|| to_char(i.vch_date, 'yyyymmdd')||i.type)='" + URL + "' and i.pono='C'";
                                dtt = sgen.getdata(userCode, mq1);
                                if (dtt.Rows.Count > 0)
                                {
                                    model[0].dt2 = model[0].dt2.Clone();
                                    for (int i = 0; i < dtt.Rows.Count; i++)
                                    {
                                        DataRow dr = model[0].dt2.NewRow();
                                        dr["sno"] = dtt.Rows[i]["fstr"].ToString();
                                        dr["IName"] = dtt.Rows[i]["iname"].ToString();
                                        dr["Icode"] = dtt.Rows[i]["icode"].ToString();
                                        dr["UOM"] = dtt.Rows[i]["uom"].ToString();
                                        dr["partno"] = dtt.Rows[i]["cpartno"].ToString();
                                        dr["Qty_in_stock"] = dtt.Rows[i]["qtystk"].ToString();
                                        dr["Qty_Act"] = dtt.Rows[i]["qtyin"].ToString();
                                        dr["Remark"] = dtt.Rows[i]["iremark"].ToString();
                                        dr["Loc"] = dtt.Rows[i]["locname"].ToString();
                                        dr["LocCode"] = dtt.Rows[i]["loc"].ToString();
                                        model[0].dt2.Rows.Add(dr);
                                    }
                                }
                            }
                            break;
                        case "NEW":
                            mq = "select master_id,upper(master_name) master_name,to_char(convert_tz(utc_timestamp(),'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') return_date " +
                                "from master_Setting where (master_id||to_char(vch_date, 'yyyymmdd')||type) = '" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "EDMODE", "N");
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                                ViewBag.scripCall = "enableForm();";
                                mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + dtt.Rows[0]["master_id"].ToString() + "'" + model[0].Col11.Trim() + "";
                                vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                                model[0].Col18 = vch_num;
                                model[0].Col20 = dtt.Rows[0]["return_date"].ToString();
                                model[0].Col12 = dtt.Rows[0]["master_id"].ToString();
                                sgen.SetSession(MyGuid, "KSRTYPE", dtt.Rows[0]["master_id"].ToString());
                                model[0].Col17 = "1";
                                model[0].Col9 = dtt.Rows[0]["master_name"].ToString();
                                model[0].Chk1 = true;
                                #region getdept
                                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.dept(userCode, clientid_mst, unitid_mst);
                                #endregion
                                #region getdesig
                                TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2 = cmd_Fun.desig(userCode, unitid_mst);
                                #endregion
                                #region getloc
                                TempData[MyGuid + "_TList3"] = model[0].TList3 = mod3 = cmd_Fun.iloc(userCode, unitid_mst, out defcall);
                                #endregion
                                #region getmmt                                
                                mod4.Add(new SelectListItem { Text = "Consume", Value = "001" });
                                mod4.Add(new SelectListItem { Text = "WIP", Value = "002" });
                                TempData[MyGuid + "_TList4"] = model[0].TList4 = mod4;
                                #endregion     
                                model[0].SelectedItems1 = new string[] { "" };
                                model[0].SelectedItems2 = new string[] { "" };
                                model[0].SelectedItems3 = new string[] { "" };
                                model[0].SelectedItems4 = new string[] { "" };
                                if (model[0].Col12 == "11")
                                {
                                    Make_query(viewName.ToLower(), "Select Issue Item", "ITEM", "1", "", "");
                                    ViewBag.scripCall = "callFoo('Select Issue Item');";
                                }
                            }
                            break;
                        case "ITEM":
                            if (model[0].Col12 == "10")
                            {
                                if (model[0].SelectedItems4.FirstOrDefault() == "001")
                                {
                                    //    mq = "select (it.client_unit_id||it.icode) fstr,it.icode,it.iname,it.cpartno,um.master_name uom,s.closing qtystk," +
                                    //         "'0' as Qty_Ret_Req,'0' Qty_issue,'0'  Qty_Req_bal,'-' remark,s.btchno batchno " +
                                    //         "from item it inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
                                    //         "inner join (select t.client_unit_id,t.icode,t.btchno,sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout,0)) as Issued," +
                                    //         "sum(nvl(t.qtyout,0))-sum(nvl(t.qtyin,0)) as closing from itransaction t where trim(t.store)='Y' and substr(trim(t.type),1,1) in ('1','3') and trim(t.type) not in ('36','37') group by t.icode," +
                                    //         "t.client_unit_id,t.btchno) s on it.icode=s.icode and find_in_set(s.client_unit_id,it.client_unit_id)=1 where (it.client_unit_id||it.icode) in ('" + URL + "')";

                                    //mq = "select (it.client_unit_id||it.icode||nvl(s.btchno,'-')) fstr,it.icode,it.iname,it.cpartno,um.master_name uom,s.closing qtystk," +
                                    //     "'0' as Qty_Ret_Req,'0' Qty_issue,'0'  Qty_Req_bal,'-' remark,s.btchno batchno " +
                                    //     "from item it inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
                                    //     "inner join (select icode,client_unit_id,sum(op) op,sum(pktop) pktop,sum(qtyin) qtyin,sum(qtyout) out,sum(op)+sum(qtyin)-sum(qtyout) closing" +
                                    //   ",sum(pktno) pktno,btchno from (select icode, client_unit_id, nvl(op_2019, 0) op, nvl(pkt_2019, 0) pktop, 0 qtyin, 0 qtyout, 0 pktno,'' btchno from " +
                                    //   "itbal union all select icode, client_unit_id, sum(to_number(qtyin)) - sum(to_number(qtyout)) op, sum((case when substr(type, 1, 1) in ('0', '1') then " +
                                    //   "pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktop,sum(to_number(qtyin)) qtyin,sum(to_number(qtyout)) qtyout,0 pktno," +
                                    //   "btchno from itransaction where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') " +
                                    //   "and to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "')-1 group by icode,client_unit_id,btchno union all select icode,client_unit_id,0 as op,0 as pktop,to_number(qtyin) qtyin,to_number(qtyout) qtyout,sum((case when substr(type, 1, 1) in ('0', '1') " +
                                    //   "then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktno,btchno from itransaction where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') " +
                                    //   "between to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and to_date('" + model[0].Col20 + "','" + sgen.Getsqldateformat() + "') " +
                                    //   "group by icode,client_unit_id,to_number(qtyin),to_number(qtyout),btchno) a group by icode, client_unit_id,btchno) s on it.icode=s.icode and find_in_set(s.client_unit_id,it.client_unit_id)=1 where (it.client_unit_id||it.icode||nvl(s.btchno,'-')) in ('" + URL + "')";

                                    mq = "select (it.client_unit_id||it.icode||nvl(s.btchno,'0')) fstr,it.icode,it.iname,it.cpartno,um.master_name UOM,nvl(s.closing,0) qtystk," +
    "nvl(s.pktno, 0) pktno,'0' as Qty_Ret_Req,'0' Qty_issue,'0'  Qty_Req_bal,'-' remark,nvl(s.btchno,'0') batchno from item it " +
    "inner join master_setting um on um.master_id = it.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, it.client_unit_id)= 1 " +
    "left join(select t.client_unit_id, t.icode, sum(nvl(t.qtyin,0)) Received,sum(nvl(t.qtyout, 0)) Issued,sum(nvl(t.qtyout, 0)) - sum(nvl(t.qtyin, 0)) closing," +
    "sum(nvl(t.pktno, 0)) pktno,t.btchno from (select client_unit_id, client_id, icode, type, qtyin, qtyout, (case when substr(type, 1, 2) in ('10', '11', '12', '13', '14') " +
    "then - pktno when substr(type,1,2) in ('30', '32') then pktno else 0 end) pktno,store,btchno from itransaction where trim(store) = 'Y' and " +
    "substr(trim(type),1,2) in ('10', '11', '12', '13', '14', '30', '32')) t group by t.icode,t.client_unit_id,t.btchno) s on it.icode = s.icode and " +
    "find_in_set(s.client_unit_id, it.client_unit_id)= 1 where(it.client_unit_id || it.icode||nvl(s.btchno,'0')) in ('" + URL + "')";
                                }
                                else if (model[0].SelectedItems4.FirstOrDefault() == "002")
                                {
                                    mq = "select (i.client_unit_id||i.icode) fstr,i.icode, i.iname, i.cpartno, um.master_name uom, sum(nvl(a.qtyin, 0)) - sum(nvl(a.qtyout, 0)) qtystk," +
                                        "nvl(a.fstg, '001') fstgCode,st.master_name fstg,'0' as Qty_Ret_Req,'0' Qty_issue,'0'  Qty_Req_bal,'-' remark  " +
                                        "from item i " +
                                        "left join (select icode, (case when type='100' then 0 else qtyin end)  qtyin, qtyout qtyout, stage fstg, type, " +
                                        "client_id, client_unit_id,vch_num,vch_date from iprod where (type like '3%' or type = '10P') " +
                                        "union " +
                                        "select acode icode, (to_number(max(qtyin))+to_number(max(qtyrw))) qtyin, 0 qtyout, stage1 fstg, type, client_id, client_unit_id ,vch_num,vch_date from iprod " +
                                        "where type = '100' group by acode, stage1, type, client_id, client_unit_id ,vch_num,vch_date " +
                                        "union " +
                                        "select acode icode, to_number(max(qtyrej)) qtyin, 0 qtyout, '101' fstg, type, client_id, client_unit_id,vch_num,vch_date from iprod where type = '100' " +
                                        "group by acode, type, client_id, client_unit_id,vch_num,vch_date " +
                                        "union " +
                                        "select icode, sum(qtyin) qtyin, 0 qtyout, stage1 fstg, type, client_id, client_unit_id ,vch_num,vch_date from iprod where type = '10R' " +
                                        "group by icode, stage1, type, client_id, client_unit_id,vch_num,vch_date " +
                                        "union " +
                                        "select icode, 0 qtyin, sum(qtyout) qtyout, stage fstg, type,client_id, client_unit_id,vch_num,vch_date from iprod where type = '10R' " +
                                        "group by icode, stage, type, client_id, client_unit_id,vch_num,vch_date " +
                                        "union " +
                                        "select icode, sum(qtyout) qtyin, 0 qtyout, stage1 fstg, type,client_id, client_unit_id,vch_num,vch_date from iprod where type = '10R' " +
                                        "group by icode, stage1, type, client_id, client_unit_id,vch_num,vch_date) a on a.icode = i.icode and find_in_set(a.client_unit_id, i.client_unit_id)=1 " +
                                        "inner join master_setting um on um.master_id = i.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, i.client_unit_id)= 1 " +
                                        "inner join master_setting st on st.master_id=nvl(a.fstg, '001') and st.type='KPS' and find_in_set(st.client_unit_id,i.client_unit_id)=1 " +
                                        "where i.type = 'IT' and find_in_set(i.client_unit_id, '" + unitid_mst + "')=1 and substr(i.icode,1,1)<>'9' " +
                                        "and nvl(a.fstg, '001')='001' and (i.client_unit_id||i.icode) in ('" + URL + "') " +
                                        "group by i.icode,i.iname,um.master_name,nvl(a.fstg, '001'),st.master_name,i.client_unit_id, i.cpartno";
                                }
                            }
                            else if (model[0].Col12 == "11")
                            {
                                //mq = "select (mr.client_id||mr.client_unit_id||mr.vch_num||to_char(mr.vch_date,'yyyymmdd')||mr.type) fstr,mr.vch_num,mr.totremark remark,mr.pono Order_Id," +
                                //    "to_char(convert_tz(mr.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), " + "'" + sgen.Getsqldateformat() + "') vch_date,mr.deptno,mr.desig " +
                                //    "from itransaction mr where (mr.client_id || mr.client_unit_id || mr.vch_num || to_char(mr.vch_date, 'yyyymmdd') || mr.type) in ('" + URL + "')";
                                mq = "select (mr.client_id||mr.client_unit_id||mr.vch_num||to_char(mr.vch_date,'yyyymmdd')||mr.type) fstr,mr.vch_num,mr.totremark remark,mr.pono Order_Id," +
                                    "to_char(convert_tz(mr.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') vch_date,mr.deptno,mr.desig," +
                                    "mr.type,nvl(p.pflag, 'C') flg from itransaction mr " +
                                    "left join iprod p on p.vch_num = mr.vch_num and p.vch_date = mr.vch_date and p.type = mr.type and p.client_unit_id = mr.client_unit_id " +
                                    "where (mr.client_id || mr.client_unit_id || mr.vch_num || to_char(mr.vch_date, 'yyyymmdd') || mr.type) in ('" + URL + "') order by mr.vch_num asc";
                            }
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                if (model[0].Col12 == "11")
                                {
                                    model[0].Col21 = dt.Rows[0]["remark"].ToString().Trim();
                                    model[0].Col22 = dt.Rows[0]["vch_num"].ToString().Trim();//issueno
                                    model[0].Col23 = dt.Rows[0]["vch_date"].ToString().Trim();//issuedate
                                    model[0].Col50 = dt.Rows[0]["fstr"].ToString().Trim();
                                    model[0].SelectedItems1 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["deptno"].ToString()).Distinct()).Split(',');
                                    model[0].SelectedItems2 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["desig"].ToString()).Distinct()).Split(',');
                                }
                                if (model[0].Col12 == "10")
                                {
                                    if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt1.Rows.RemoveAt(0); }
                                    for (int i = 0; i < dt.Rows.Count; i++)
                                    {
                                        DataRow dr = model[0].dt1.NewRow();
                                        dr["SNo"] = dt.Rows[i]["fstr"].ToString();
                                        dr["Icode"] = dt.Rows[i]["icode"].ToString();
                                        dr["IName"] = dt.Rows[i]["iname"].ToString();
                                        dr["PARTNO"] = dt.Rows[i]["cpartno"].ToString();
                                        dr["UOM"] = dt.Rows[i]["uom"].ToString();
                                        dr["Qty_in_stock"] = dt.Rows[i]["qtystk"].ToString();
                                        dr["Qty_Ret_Req"] = dt.Rows[i]["Qty_Ret_Req"].ToString();
                                        dr["Qty_Act_Ret"] = dt.Rows[i]["Qty_issue"].ToString();
                                        dr["Qty_Req_Bal"] = dt.Rows[i]["Qty_Req_bal"].ToString();
                                        dr["Remark"] = dt.Rows[i]["remark"].ToString();
                                        dr["batchno"] = dt.Rows[i]["batchno"].ToString();
                                        model[0].dt1.Rows.Add(dr);
                                    }
                                }
                            }
                            break;
                        case "IISS":
                            if (model[0].Col12 == "11")
                            {
                                mq = "select (mr.client_id||mr.client_unit_id||mr.vch_num||it.icode||to_char(mr.vch_date,'yyyymmdd')||mr.type) fstr,mr.vch_num,it.icode,it.iname,it.cpartno," +
                                    "to_char(convert_tz(mr.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), " + "'" + sgen.Getsqldateformat() + "') as vch_date," +
                                    "um.master_name as uom,s.closing qtystk,mr.qtyout Qty_Ret_Req,'0' Qty_Act_Ret,'0' Qty_Req_bal,mr.totremark remark,mr.deptno,mr.desig,s.btchno batchno " +
                                    "from itransaction mr inner join item it on mr.icode=it.icode and it.type='IT' and find_in_set(it.client_unit_id,mr.client_unit_id)=1 " +
                                    "inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
                                    "inner join (select t.client_unit_id,t.icode,t.btchno,sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout,0)) as Issued," +
                                    "sum(nvl(t.qtyout,0))-sum(nvl(t.qtyin,0)) as closing from itransaction t where trim(t.store)='Y' and substr(trim(t.type),1,1) in ('1','3') and trim(t.type) not in ('36','37') group by t.icode," +
                                    "t.client_unit_id,t.btchno) s on it.icode=s.icode and find_in_set(s.client_unit_id,it.client_unit_id)=1 " +
                                    "where (mr.client_id || mr.client_unit_id || mr.vch_num || it.icode||to_char(mr.vch_date, 'yyyymmdd') || mr.type) in ('" + URL + "')";
                            }
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt1.Rows.RemoveAt(0); }
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["SNo"] = dt.Rows[i]["fstr"].ToString();
                                    dr["Icode"] = dt.Rows[i]["icode"].ToString();
                                    dr["IName"] = dt.Rows[i]["iname"].ToString();
                                    dr["PARTNO"] = dt.Rows[i]["cpartno"].ToString();
                                    dr["UOM"] = dt.Rows[i]["uom"].ToString();
                                    dr["Qty_in_stock"] = dt.Rows[i]["qtystk"].ToString();
                                    dr["Qty_Ret_Req"] = dt.Rows[i]["Qty_Ret_Req"].ToString();
                                    dr["Qty_Act_Ret"] = dt.Rows[i]["Qty_Act_Ret"].ToString();
                                    dr["Qty_Req_Bal"] = dt.Rows[i]["Qty_Req_bal"].ToString();
                                    dr["Remark"] = "-";
                                    dr["batchno"] = dt.Rows[i]["batchno"].ToString();
                                    model[0].dt1.Rows.Add(dr);
                                }
                            }
                            break;
                        case "ITEM2":
                            mq = "select (it.client_unit_id||it.icode||s.loc) fstr,it.icode as Icode,it.iname as Iname,it.cpartno,um.master_name as uom," +
"location_name(it.client_id||it.client_unit_id||s.loc) as LocName,s.loc,s.closing,'0' qty_act,'-' remark,s.btchno batchno from item it " +
"inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
"inner join (select t.client_unit_id,t.loc,t.icode,t.btchno,sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout,0)) as Issued," +
"sum(nvl(t.qtyout,0))-sum(nvl(t.qtyin,0)) as closing from btchtrans t where length(trim(t.loc))>6 and trim(t.store)='Y' and substr(trim(t.type),1,1) in ('1','3') and trim(t.type) not in ('36','37')  group by t.icode,t.client_unit_id,t.loc,t.btchno) s on " +
"it.icode=s.icode and it.client_unit_id=s.client_unit_id where length(trim(it.icode))>8 and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 " +
"and (it.client_unit_id||it.icode||s.loc) in ('" + URL + "')";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                if (model[0].dt2.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt2.Rows.RemoveAt(0); }
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt2.NewRow();
                                    dr["SNo"] = dt.Rows[i]["fstr"].ToString();
                                    dr["ICode"] = dt.Rows[i]["icode"].ToString();
                                    dr["IName"] = dt.Rows[i]["iname"].ToString();
                                    dr["PartNo"] = dt.Rows[i]["cpartno"].ToString();
                                    dr["Uom"] = dt.Rows[i]["uom"].ToString();
                                    dr["Qty_In_Stock"] = dt.Rows[i]["closing"].ToString();
                                    dr["Qty_Act"] = dt.Rows[i]["qty_act"].ToString();
                                    dr["Remark"] = dt.Rows[i]["remark"].ToString();
                                    dr["LocCode"] = dt.Rows[i]["loc"].ToString();
                                    dr["Loc"] = dt.Rows[i]["LocName"].ToString();
                                    dr["batchno"] = dt.Rows[i]["batchno"].ToString();
                                    model[0].dt2.Rows.Add(dr);
                                }
                                model[0].dt2.AcceptChanges();
                            }
                            break;
                    }
                    break;
                #endregion
                #region rgp_challan
                case "rgp_challan":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            mq = "select i.vch_num,i.acode,c.c_name,c.c_gstin,c.addr," +
                                "to_char(convert_tz(i.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), " + "'" + sgen.Getsqldateformat() + "') as vch_date," +
                                "to_char(convert_tz(i.date2, 'UTC', '" + sgen.Gettimezone() + "'), " + "'" + sgen.Getsqldateformat() + "') as expret_date," +
                                "i.aname,(case when i.contactno='0000000000' then '-' else i.contactno end) contactno,i.totremark,i.icode,it.iname,it.cpartno,um.master_name uom,i.qtystk,i.qtychl,i.qtyout,i.qtybal,i.iremark," +
                                "i.pono iord,i.client_id,i.client_unit_id,i.ent_by,i.ent_date,i.type,ks.master_name typename " +
                                "from itransaction i " +
                                "inner join master_setting ks on ks.master_id=i.type and ks.type='KRG' and find_in_set(ks.client_unit_id,i.client_unit_id)=1 " +
                                "inner join item it on it.icode=i.icode and it.type='IT' and find_in_set(it.client_unit_id,i.client_unit_id)=1 " +
                                "inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
                                "inner join clients_mst c on c.vch_num=i.acode and substr(c.vch_num,0,3)='203' and c.type='BCD' and c.client_unit_id=i.client_unit_id " +
                                "where (i.client_id||i.client_unit_id||i.vch_num|| to_char(i.vch_date, 'yyyymmdd')||i.type)='" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                // shiv               
                                dt = sgen.getdata(userCode, "select '-' as SNo ,'-' as Icode,'-' as IName,'-' PartNo,'-' as UOM,'0' as Qty_in_stock,'0' as Qty_Req,'0' as Qty_Out,'0' Qty_Req_Bal,'-' as Remark,'0' Order_Id from dual");
                                model[0].dt1 = dt;
                                sgen.SetSession(MyGuid, "KRGP_DT1", model[0].dt1);
                                // shiv
                                dt = sgen.getdata(userCode, "select '-' as SNo ,'-' as Icode,'-' as IName,'-' PartNo,'-' as UOM,'0' as Qty_in_stock,'0' as Qty_Out,'-' as Remark,'0' LocCode,'-' Loc from dual");
                                model[0].dt2 = dt;
                                sgen.SetSession(MyGuid, "KRGP_DT2", model[0].dt2);
                                // shiv
                                dt = sgen.getdata(userCode, "select '-' as SNo ,'-' as Icode,'-' as IName,'-' PartNo,'-' as UOM,'0' as Qty_in_stock,'0' as Qty_Req,'0' as Qty_In,'0' Qty_Req_Bal,'-' as Remark,'0' Order_Id from dual");
                                model[0].dt3 = dt;
                                sgen.SetSession(MyGuid, "KRGP_DT3", model[0].dt3);
                                sgen.SetSession(MyGuid, "EDMODE", "Y");
                                model[0].Col1 = dtt.Rows[0]["client_id"].ToString();
                                model[0].Col2 = dtt.Rows[0]["client_unit_id"].ToString();
                                model[0].Col3 = dtt.Rows[0]["ent_by"].ToString();
                                model[0].Col4 = dtt.Rows[0]["ent_date"].ToString();
                                model[0].Col8 = "(client_id||client_unit_id||vch_num|| to_char(vch_date, 'yyyymmdd')||type) = '" + URL + "'";
                                model[0].Col9 = dtt.Rows[0]["typename"].ToString().ToUpper();
                                model[0].Col10 = tm.Col10;
                                model[0].Col11 = tm.Col11;
                                model[0].Col12 = dtt.Rows[0]["type"].ToString();
                                model[0].Col13 = "Update";
                                model[0].Col100 = "Update & New";
                                model[0].Col121 = "U";
                                model[0].Col122 = "<u>U</u>pdate";
                                model[0].Col123 = "Update & Ne<u>w</u>";
                                model[0].Col14 = tm.Col14;
                                model[0].Col15 = tm.Col15;
                                model[0].Col16 = tm.Col16;
                                model[0].Col17 = "(client_id||client_unit_id||vch_num|| to_char(vch_date, 'yyyymmdd')||type) = '" + URL + "'";
                                sgen.SetSession(MyGuid, "KNRGPTYPE", dtt.Rows[0]["type"].ToString());
                                model[0].Col18 = dtt.Rows[0]["vch_num"].ToString();
                                model[0].Col19 = dtt.Rows[0]["c_name"].ToString();
                                model[0].Col49 = dtt.Rows[0]["acode"].ToString();
                                model[0].Col20 = dtt.Rows[0]["c_gstin"].ToString();
                                model[0].Col21 = dtt.Rows[0]["addr"].ToString();
                                model[0].Col22 = dtt.Rows[0]["expret_date"].ToString();
                                model[0].Col23 = dtt.Rows[0]["aname"].ToString();
                                model[0].Col24 = dtt.Rows[0]["contactno"].ToString();
                                model[0].Col25 = dtt.Rows[0]["totremark"].ToString();
                                model[0].Col27 = dtt.Rows[0]["vch_date"].ToString();
                                model[0].dt1 = model[0].dt1.Clone();
                                for (int i = 0; i < dtt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    if (model[0].Col12.Trim() == "21") dr["sno"] = dtt.Rows[i]["client_unit_id"].ToString().Trim() + dtt.Rows[i]["icode"].ToString().Trim();
                                    dr["IName"] = dtt.Rows[i]["iname"].ToString();
                                    dr["Icode"] = dtt.Rows[i]["icode"].ToString();
                                    dr["UOM"] = dtt.Rows[i]["uom"].ToString();
                                    dr["partno"] = dtt.Rows[i]["cpartno"].ToString();
                                    dr["Qty_in_stock"] = dtt.Rows[i]["qtystk"].ToString();
                                    dr["Qty_Req"] = dtt.Rows[i]["qtychl"].ToString();
                                    dr["Qty_Out"] = dtt.Rows[i]["qtyout"].ToString();
                                    dr["Qty_Req_Bal"] = dtt.Rows[i]["qtybal"].ToString();
                                    dr["Remark"] = dtt.Rows[i]["iremark"].ToString();
                                    dr["Order_Id"] = dtt.Rows[i]["iord"].ToString();//orderid
                                    model[0].dt1.Rows.Add(dr);
                                }
                                mq1 = "select (i.client_unit_id||i.icode||i.loc) fstr,i.icode,it.iname,it.cpartno,um.master_name uom,i.qtystk,i.qtyout,i.iremark," +
                                    "i.loc,location_name(i.client_id||i.client_unit_id||i.loc) locname from btchtrans i " +
                                    "inner join item it on it.icode=i.icode and it.type='IT' and find_in_set(i.client_unit_id,it.client_unit_id)=1 " +
                                    "inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
                               "where (i.client_id||i.client_unit_id||i.vch_num|| to_char(i.vch_date, 'yyyymmdd')||i.type)='" + URL + "'";
                                dt = sgen.getdata(userCode, mq1);
                                if (dt.Rows.Count > 0)
                                {
                                    model[0].dt2 = model[0].dt2.Clone();
                                    for (int i = 0; i < dt.Rows.Count; i++)
                                    {
                                        DataRow dr = model[0].dt2.NewRow();
                                        dr["sno"] = dt.Rows[i]["fstr"].ToString();
                                        dr["IName"] = dt.Rows[i]["iname"].ToString();
                                        dr["Icode"] = dt.Rows[i]["icode"].ToString();
                                        dr["UOM"] = dt.Rows[i]["uom"].ToString();
                                        dr["partno"] = dt.Rows[i]["cpartno"].ToString();
                                        dr["Qty_in_stock"] = dt.Rows[i]["qtystk"].ToString();
                                        dr["Qty_Out"] = dt.Rows[i]["qtyout"].ToString();
                                        dr["Remark"] = dt.Rows[i]["iremark"].ToString();
                                        dr["Loc"] = dt.Rows[i]["locname"].ToString();
                                        dr["LocCode"] = dt.Rows[i]["loc"].ToString();
                                        model[0].dt2.Rows.Add(dr);
                                    }
                                }
                                mq1 = "select (i.client_id||i.client_unit_id||i.vch_num||to_char(i.vch_date, 'yyyymmdd')||i.type) fstr," +
                                      "i.icode,it.iname,it.cpartno,um.master_name uom,i.qtystk,i.qtychl,i.qtyin,i.qtybal,i.iremark," +
                                      "i.pono iord " +
                                      "from itransactionc i " +
                                      "inner join master_setting ks on ks.master_id=i.type and find_in_set(ks.client_unit_id,i.client_unit_id)=1 " +
                                      "inner join item it on it.icode=i.icode and it.type='IT' and find_in_set(i.client_unit_id,it.client_unit_id)=1 " +
                                      "inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
                                      "inner join clients_mst c on c.vch_num=i.acode and substr(c.vch_num,0,3)='203' and c.type='BCD' and find_in_set(c.client_unit_id,i.client_unit_id)=1 " +
                                      "where (i.client_id||i.client_unit_id||i.vch_num|| to_char(i.vch_date, 'yyyymmdd')||i.type)='" + URL + "'";
                                dt = sgen.getdata(userCode, mq1);
                                if (dt.Rows.Count > 0)
                                {
                                    model[0].dt3 = model[0].dt3.Clone();
                                    for (int i = 0; i < dt.Rows.Count; i++)
                                    {
                                        DataRow dr = model[0].dt3.NewRow();
                                        dr["sno"] = dt.Rows[i]["fstr"].ToString();
                                        dr["IName"] = dt.Rows[i]["iname"].ToString();
                                        dr["Icode"] = dt.Rows[i]["icode"].ToString();
                                        dr["UOM"] = dt.Rows[i]["uom"].ToString();
                                        dr["partno"] = dt.Rows[i]["cpartno"].ToString();
                                        dr["Qty_in_stock"] = dt.Rows[i]["qtystk"].ToString();
                                        dr["Qty_Req"] = dt.Rows[i]["qtychl"].ToString();
                                        dr["Qty_In"] = dt.Rows[i]["qtyin"].ToString();
                                        dr["Qty_Req_Bal"] = dt.Rows[i]["qtybal"].ToString();
                                        dr["Remark"] = dt.Rows[i]["iremark"].ToString();
                                        dr["Order_Id"] = dt.Rows[i]["iord"].ToString();//orderid
                                        model[0].dt3.Rows.Add(dr);
                                    }
                                }
                            }
                            break;
                        case "NEW":
                            mq = "select master_id,upper(master_name) master_name from master_Setting where (master_id||to_char(vch_date, 'yyyymmdd')||type) = '" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "EDMODE", "N");
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                                ViewBag.vfill = "disabled='disabled'";
                                ViewBag.scripCall = "enableForm();";
                                mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + dtt.Rows[0]["master_id"].ToString() + "'" + model[0].Col11.Trim() + "";
                                vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                                sgen.SetSession(MyGuid, "KRGTYPE", dtt.Rows[0]["master_id"].ToString());
                                model[0].Col9 = dtt.Rows[0]["master_name"].ToString();
                                model[0].Col12 = dtt.Rows[0]["master_id"].ToString();
                                model[0].Col18 = vch_num;
                                model[0].Col27 = sgen.server_datetime_local(userCode);
                                // shiv               
                                dt = sgen.getdata(userCode, "select '-' as SNo ,'-' as Icode,'-' as IName,'-' PartNo,'-' as UOM,'0' as Qty_in_stock,'0' as Qty_Req,'0' as Qty_Out,'0' Qty_Req_Bal,'-' as Remark,'0' Order_Id from dual");
                                model[0].dt1 = dt;
                                sgen.SetSession(MyGuid, "KRGP_DT1", model[0].dt1);
                                // shiv
                                dt = sgen.getdata(userCode, "select '-' as SNo ,'-' as Icode,'-' as IName,'-' PartNo,'-' as UOM,'0' as Qty_in_stock,'0' as Qty_Out,'-' as Remark,'0' LocCode,'-' Loc from dual");
                                model[0].dt2 = dt;
                                sgen.SetSession(MyGuid, "KRGP_DT2", model[0].dt2);
                                // shiv
                                dt = sgen.getdata(userCode, "select '-' as SNo ,'-' as Icode,'-' as IName,'-' PartNo,'-' as UOM,'0' as Qty_in_stock,'0' as Qty_Req,'0' as Qty_In,'0' Qty_Req_Bal,'-' as Remark,'0' Order_Id from dual");
                                model[0].dt3 = dt;
                                sgen.SetSession(MyGuid, "KRGP_DT3", model[0].dt3);
                            }
                            break;
                        case "PARTY":
                            mq = "select a.c_name as name,a.c_gstin as gstin,a.addr,a.vch_num,a.tor from clients_mst a " +
                                "where (a.vch_num||to_char(a.vch_date, 'yyyymmdd')|| a.type) = '" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                model[0].Col49 = dtt.Rows[0]["vch_num"].ToString();
                                model[0].Col19 = dtt.Rows[0]["name"].ToString();
                                model[0].Col20 = dtt.Rows[0]["gstin"].ToString();
                                model[0].Col21 = dtt.Rows[0]["addr"].ToString();
                            }
                            break;
                        case "ITEM":
                            if (model[0].Col12 == "21")
                            {
                                mq = "select (it.client_unit_id||it.icode) fstr,it.icode as Icode,it.iname as Iname,it.cpartno,um.master_name as uom,s.closing qtystk," +
                                     "'0' as Qty_Req,'0' Qty_Out,'0' Qty_Req_bal,'-' remark,'0' Order_Id " +
                                     "from item it inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
                                     "inner join (select icode,client_unit_id,sum(op) op,sum(pktop) pktop,sum(qtyin) qtyin,sum(qtyout) out,sum(op)+sum(qtyin)-sum(qtyout) closing,sum(pktop) + sum(pktno) pktno from " +
    "(select icode, client_unit_id, nvl(op_2019, 0) op, nvl(pkt_2019, 0) pktop, 0 qtyin, 0 qtyout, 0 pktno from itbal union all " +
    "select icode, client_unit_id, sum(to_number(qtyin)) - sum(to_number(qtyout)) op, sum((case when substr(type, 1, 1) in ('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktop," +
    "sum(to_number(qtyin)) qtyin,sum(to_number(qtyout)) qtyout,0 pktno from itransaction " +
    "where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') " +
    "and to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "')-1 group by icode,client_unit_id union all " +
    "select icode,client_unit_id,0 as op,0 as pktop,sum(to_number(qtyin)) qtyin,sum(to_number(qtyout)) qtyout," +
    "sum((case when substr(type, 1, 1) in ('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktno from itransaction " +
    "where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and " +
    "to_date('" + model[0].Col22.Trim() + "','" + sgen.Getsqldateformat() + "') " +
    "group by icode,client_unit_id) a group by icode, client_unit_id) s on it.icode=s.icode and find_in_set(s.client_unit_id,it.client_unit_id)=1 where (it.client_unit_id||it.icode) in ('" + URL + "')";
                            }
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt1.Rows.RemoveAt(0); }
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["SNo"] = dt.Rows[i]["fstr"].ToString();
                                    dr["Icode"] = dt.Rows[i]["icode"].ToString();
                                    dr["IName"] = dt.Rows[i]["iname"].ToString();
                                    dr["PARTNO"] = dt.Rows[i]["cpartno"].ToString();
                                    dr["UOM"] = dt.Rows[i]["uom"].ToString();
                                    dr["Qty_in_stock"] = dt.Rows[i]["qtystk"].ToString();
                                    dr["Qty_Req"] = dt.Rows[i]["Qty_Req"].ToString();
                                    dr["Qty_Out"] = dt.Rows[i]["Qty_Out"].ToString();
                                    dr["Qty_Req_Bal"] = dt.Rows[i]["Qty_Req_bal"].ToString();
                                    dr["Remark"] = "-";
                                    dr["Order_Id"] = "-";
                                    model[0].dt1.Rows.Add(dr);
                                }
                            }
                            break;
                        case "ITEMIN":
                            if (model[0].Col12 == "21")
                            {
                                mq = "select (it.client_unit_id||it.icode) fstr,it.icode as Icode,it.iname as Iname,it.cpartno,um.master_name as uom,s.closing qtystk," +
                                     "'0' as Qty_Req,'0' Qty_In,'0' Qty_Req_bal,'-' remark,'0' Order_Id " +
                                     "from item it inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
                                     "inner join (select icode,client_unit_id,sum(op) op,sum(pktop) pktop,sum(qtyin) qtyin,sum(qtyout) out,sum(op)+sum(qtyin)-sum(qtyout) closing,sum(pktop) + sum(pktno) pktno from " +
    "(select icode, client_unit_id, nvl(op_2019, 0) op, nvl(pkt_2019, 0) pktop, 0 qtyin, 0 qtyout, 0 pktno from itbal union all " +
    "select icode, client_unit_id, sum(to_number(qtyin)) - sum(to_number(qtyout)) op, sum((case when substr(type, 1, 1) in ('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktop," +
    "sum(to_number(qtyin)) qtyin,sum(to_number(qtyout)) qtyout,0 pktno from itransaction " +
    "where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') " +
    "and to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "')-1 group by icode,client_unit_id union all " +
    "select icode,client_unit_id,0 as op,0 as pktop,sum(to_number(qtyin)) qtyin,sum(to_number(qtyout)) qtyout," +
    "sum((case when substr(type, 1, 1) in ('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktno from itransaction " +
    "where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and " +
    "to_date('" + model[0].Col22.Trim() + "','" + sgen.Getsqldateformat() + "') " +
    "group by icode,client_unit_id) a group by icode, client_unit_id) s on it.icode=s.icode and find_in_set(s.client_unit_id,it.client_unit_id)=1 where (it.client_unit_id||it.icode) in ('" + URL + "')";
                            }
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                if (model[0].dt3.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt3.Rows.RemoveAt(0); }
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt3.NewRow();
                                    dr["SNo"] = dt.Rows[i]["fstr"].ToString();
                                    dr["Icode"] = dt.Rows[i]["icode"].ToString();
                                    dr["IName"] = dt.Rows[i]["iname"].ToString();
                                    dr["PARTNO"] = dt.Rows[i]["cpartno"].ToString();
                                    dr["UOM"] = dt.Rows[i]["uom"].ToString();
                                    dr["Qty_in_stock"] = dt.Rows[i]["qtystk"].ToString();
                                    dr["Qty_Req"] = dt.Rows[i]["Qty_Req"].ToString();
                                    dr["Qty_In"] = dt.Rows[i]["Qty_In"].ToString();
                                    dr["Qty_Req_Bal"] = dt.Rows[i]["Qty_Req_bal"].ToString();
                                    dr["Remark"] = "-";
                                    dr["Order_Id"] = "-";
                                    model[0].dt3.Rows.Add(dr);
                                }
                            }
                            break;
                        case "ITEM2":
                            mq = "select (it.client_unit_id||it.icode||s.loc) fstr,it.icode as Icode,it.iname as Iname,it.cpartno,um.master_name as uom " +
",location_name(it.client_unit_id||it.client_unit_id||s.loc) as LocName,s.loc,s.closing,'0' qtyout,'-' remark from item it " +
"inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
"inner join (select icode,loc,client_unit_id,sum(op) op,sum(pktop) pktop,sum(qtyin) qtyin,sum(qtyout) out,sum(op)+sum(qtyin)-sum(qtyout) closing,sum(pktno)+sum(pktno) pktno from " +
    "(select icode, loc, client_unit_id, nvl(op_2019, 0) op, nvl(pkt_2019, 0) pktop, 0 qtyin, 0 qtyout, 0 pktno from itbal_enx " +
    "union all " +
    "select icode, loc, client_unit_id, sum(to_number(qtyin)) - sum(to_number(qtyout)) op, sum((case when substr(type, 1, 1) in " +
    "('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktop,sum(to_number(qtyin)) qtyin," +
    "sum(to_number(qtyout)) qtyout,0 pktno from btchtrans where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between " +
    "to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and to_date('" + year_from.Split(' ')[0].Trim() + "','" + sgen.Getsqldateformat() + "')-1 group by icode,loc,client_unit_id " +
    "union all select icode,loc,client_unit_id,0 op,0 pktop,to_number(qtyin) qtyin,to_number(qtyout) qtyout," +
    "nvl(sum((case when substr(type, 1, 1) in ('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)),0) pktno " +
    "from btchtrans where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between " +
    "to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and to_date('" + model[0].Col22.Trim() + "','" + sgen.Getsqldateformat() + "') " +
    "group by icode,loc,client_unit_id,to_number(qtyin),to_number(qtyout)) a group by icode, loc, client_unit_id) s on " +
"it.icode=s.icode and find_in_set(s.client_unit_id,it.client_unit_id)=1 " +
"where length(trim(it.icode))>8 and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 " +
"and (it.client_unit_id||it.icode||s.loc) in ('" + URL + "')";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                if (model[0].dt2.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt2.Rows.RemoveAt(0); }
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt2.NewRow();
                                    dr["SNo"] = dt.Rows[i]["fstr"].ToString();
                                    dr["ICode"] = dt.Rows[i]["icode"].ToString();
                                    dr["IName"] = dt.Rows[i]["iname"].ToString();
                                    dr["PartNo"] = dt.Rows[i]["cpartno"].ToString();
                                    dr["Uom"] = dt.Rows[i]["uom"].ToString();
                                    dr["Qty_In_Stock"] = dt.Rows[i]["closing"].ToString();
                                    dr["Qty_Out"] = dt.Rows[i]["qtyout"].ToString();
                                    dr["Remark"] = dt.Rows[i]["remark"].ToString();
                                    dr["LocCode"] = dt.Rows[i]["loc"].ToString();
                                    dr["Loc"] = dt.Rows[i]["LocName"].ToString();
                                    model[0].dt2.Rows.Add(dr);
                                }
                                model[0].dt2.AcceptChanges();
                            }
                            break;
                    }
                    break;
                #endregion             
                #region mrn
                case "mrn":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            mq = "select a.*,to_char(convert_tz(a.vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') vch_date1," +
                                "to_char(a.chldate,'" + sgen.Getsqldateformat() + "') chldate1," +
                                "to_char(a.invdate,'" + sgen.Getsqldateformat() + "') invdate1, " +
                                "to_char(a.ewaydate,'" + sgen.Getsqldateformat() + "') ewaydate1, " +
                                "to_char(a.podate,'" + sgen.Getsqldateformat() + "') podate1," +
                                "to_char(convert_tz(a.dt1,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') dte1," +
                                "to_char(convert_tz(a.dt2,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') dte2," +
                                "to_char(convert_tz(a.dt3,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') dte3," +
                                "nvl(location_name(a.client_id||a.client_unit_id||bt.loc),'-') loc_name from itransaction a " +
                                "left join btchtrans bt on a.vch_num=bt.vch_num and to_char(a.vch_date,'yyyymmdd')=to_char(bt.vch_date,'yyyymmdd') " +
                                "and bt.type=('Q'||a.type) and a.client_unit_id=bt.client_unit_id and a.icode=bt.icode " +
                                "where (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date, 'yyyymmdd')|| a.type) = '" + URL + "' and a.inspected in ('N','A')";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.gin_no2(userCode, unitid_mst);
                                DateTime serverdate = sgen.server_datetime_dt(userCode);
                                DateTime vdate = (DateTime)dtt.Rows[0]["vch_date"];
                                mq0 = sgen.seekval(userCode, "select param1 from controls where type='CTL' and id='000004' ", "param1");
                                int rdays = sgen.Make_int(mq0);
                                int diff = (serverdate - vdate).Days;
                                if (diff > rdays)
                                {
                                    ViewBag.scripCall += "showmsgJS(1, 'MRR is freezed of this Period', 2);";
                                    return model;
                                }
                                sgen.SetSession(MyGuid, "EDMODE", "Y");
                                model[0].Col1 = dtt.Rows[0]["client_id"].ToString();
                                model[0].Col2 = dtt.Rows[0]["client_unit_id"].ToString();
                                model[0].Col3 = dtt.Rows[0]["ent_by"].ToString();
                                model[0].Col4 = dtt.Rows[0]["ent_date"].ToString();
                                model[0].Col5 = dtt.Rows[0]["edit_by"].ToString();
                                model[0].Col6 = dtt.Rows[0]["edit_date"].ToString();
                                model[0].Col7 = dtt.Rows[0]["rec_id"].ToString();
                                string turl = URL.Substring(0, URL.Length - 2);
                                string ttype = URL.Substring(URL.Length - 2, 2);
                                model[0].Col8 = "(client_id||client_unit_id||vch_num||to_char(vch_date, 'yyyymmdd'))='" + turl + "' " +
                                    "and type in ('" + ttype + "','Q" + ttype + "')";
                                model[0].Col10 = model[0].Col10;
                                model[0].Col11 = model[0].Col11;
                                //model[0].Col12 = model[0].Col12;
                                model[0].Col12 = dtt.Rows[0]["type"].ToString();
                                model[0].Col13 = "Update";
                                model[0].Col100 = "Update & New";
                                model[0].Col121 = "U";
                                model[0].Col122 = "<u>U</u>pdate";
                                model[0].Col123 = "Update & Ne<u>w</u>";
                                model[0].Col14 = model[0].Col14;
                                model[0].Col15 = model[0].Col15;

                                String[] L1 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["gatein_no"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems1 = L1;
                                model[0].Col16 = dtt.Rows[0]["vch_num"].ToString();
                                model[0].Col47 = dtt.Rows[0]["vch_num"].ToString();
                                model[0].Col48 = dtt.Rows[0]["vch_date1"].ToString();
                                if (model[0].Col12 != "08")
                                {
                                    model[0].Col9 = sgen.seekval(userCode, "select upper(master_name) master_name from master_setting where client_name='" + dtt.Rows[0]["type"].ToString() + "'", "master_name");
                                }
                                else
                                {
                                    model[0].Col9 = "STN IN";
                                }
                                sgen.SetSession(MyGuid, "KMRNTYPE", dtt.Rows[0]["type"].ToString());
                                DataTable dtp = new DataTable();
                                mq1 = "select a.c_name as name,a.c_gstin as gstin,a.addr as Address,a.vch_num,a.tor,nvl(ba.country_name,'-') as country_name," +
"nvl(ba.state_name,'-') state_name,nvl(ba.city_name,'-') as city_name,a.pincode_2 from clients_mst a left join country_state ba on ba.rec_id = a.city2 where a.vch_num='" + dtt.Rows[0]["acode"].ToString() + "' " +
                                    "and find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 and a.type='BCD'";
                                dtp = sgen.getdata(userCode, mq1);
                                if (dtp.Rows.Count > 0)
                                {
                                    model[0].Col49 = dtp.Rows[0]["vch_num"].ToString();
                                    model[0].Col20 = dtp.Rows[0]["name"].ToString();
                                    model[0].Col21 = dtp.Rows[0]["Address"].ToString();
                                    model[0].Col22 = dtp.Rows[0]["gstin"].ToString();
                                    model[0].Col75 = dtp.Rows[0]["city_name"].ToString();
                                    model[0].Col76 = dtp.Rows[0]["state_name"].ToString();
                                    model[0].Col77 = dtp.Rows[0]["country_name"].ToString();
                                    model[0].Col78 = dtp.Rows[0]["pincode_2"].ToString();
                                    // 17.04 shiv remobe from above mq1
                                    // model[0].Col52 = dtp.Rows[0]["tor"].ToString();
                                }
                                model[0].Col23 = dtt.Rows[0]["chlno"].ToString();
                                model[0].Col24 = dtt.Rows[0]["chldate1"].ToString();
                                model[0].Col25 = dtt.Rows[0]["tmode"].ToString();
                                model[0].Col26 = dtt.Rows[0]["ewayno"].ToString();
                                model[0].Col27 = dtt.Rows[0]["ewaydate1"].ToString();
                                model[0].Col28 = dtt.Rows[0]["invno"].ToString();
                                model[0].Col29 = dtt.Rows[0]["invdate1"].ToString();
                                model[0].Col31 = dtt.Rows[0]["totremark"].ToString();
                                model[0].Col32 = dtt.Rows[0]["cond"].ToString();
                                model[0].Col33 = dtt.Rows[0]["basicamt"].ToString();
                                model[0].Col34 = dtt.Rows[0]["igst"].ToString();
                                model[0].Col35 = dtt.Rows[0]["cgst"].ToString();
                                model[0].Col36 = dtt.Rows[0]["sgst"].ToString();
                                model[0].Col37 = dtt.Rows[0]["gamt"].ToString();
                                model[0].Col38 = dtt.Rows[0]["gigst"].ToString();
                                model[0].Col39 = dtt.Rows[0]["gcgst"].ToString();
                                model[0].Col40 = dtt.Rows[0]["gsgst"].ToString();
                                model[0].Col53 = dtt.Rows[0]["vehno"].ToString();
                                model[0].Col60 = dtt.Rows[0]["col1"].ToString();
                                model[0].Col61 = dtt.Rows[0]["col2"].ToString();
                                model[0].Col62 = dtt.Rows[0]["col3"].ToString();
                                model[0].Col63 = dtt.Rows[0]["dte1"].ToString();
                                model[0].Col64 = dtt.Rows[0]["dte2"].ToString();
                                model[0].Col65 = dtt.Rows[0]["dte3"].ToString();
                                model[0].Col66 = dtt.Rows[0]["col4"].ToString();
                                model[0].Col67 = dtt.Rows[0]["col5"].ToString();
                                model[0].Col68 = dtt.Rows[0]["col6"].ToString();
                                model[0].Col80 = dtt.Rows[0]["deptno"].ToString();
                                if (model[0].Col12 == "05")
                                {
                                    if (model[0].Col80 == "011")
                                    {
                                        model[0].Col81 = "AGAINST INVOIVE";
                                    }
                                    else if (model[0].Col80 == "012")
                                    {
                                        model[0].Col81 = "AGAINST DISPATCH";
                                    }
                                    else
                                    {
                                        model[0].Col81 = "WITHOUT REFERENCE";
                                    }
                                }
                                model[0].dt1 = (DataTable)sgen.GetSession(MyGuid, "KMRN_DT");
                                model[0].dt1 = model[0].dt1.Clone();
                                for (int i = 0; i < dtt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    // dr["SNo"] = i + 1;
                                    dr["SNo"] = dtt.Rows[i]["rno"].ToString();
                                    dr["Icode"] = dtt.Rows[i]["icode"].ToString();
                                    dr["IName"] = dtt.Rows[i]["iname"].ToString();
                                    dr["PARTNO"] = dtt.Rows[i]["cpartno"].ToString();
                                    dr["HSN"] = dtt.Rows[i]["hsno"].ToString();
                                    dr["UOM"] = dtt.Rows[i]["uom"].ToString();
                                    dr["taxrate"] = dtt.Rows[i]["taxrate"].ToString();
                                    dr["Qty_chl"] = dtt.Rows[i]["qtychl"].ToString();
                                    dr["Qty_in"] = dtt.Rows[i]["qtyrcvd"].ToString();
                                    dr["Disc_type"] = dtt.Rows[i]["disctype"].ToString();
                                    dr["Disc_rate"] = dtt.Rows[i]["discrate"].ToString();
                                    dr["Discamount"] = dtt.Rows[i]["discamt"].ToString();
                                    dr["iRate"] = dtt.Rows[i]["irate"].ToString();
                                    dr["iamount"] = dtt.Rows[i]["iamount"].ToString();
                                    dr["taxamount"] = dtt.Rows[i]["taxamt"].ToString();
                                    dr["lineamount"] = dtt.Rows[i]["lineamount"].ToString();
                                    dr["NoOfPKT_Box"] = dtt.Rows[i]["pktno"].ToString();
                                    dr["Remark"] = dtt.Rows[i]["iremark"].ToString();
                                    dr["PO_Number"] = dtt.Rows[i]["pono"].ToString();
                                    dr["Po_Date"] = dtt.Rows[i]["podate1"].ToString();
                                    dr["Batchno"] = dtt.Rows[i]["btchno"].ToString();
                                    dr["Location"] = dtt.Rows[i]["loc_name"].ToString();
                                    dr["Qtystk"] = sgen.seekval(userCode, "select closing from (select icode,client_unit_id,sum(op) op,sum(pktop) pktop,sum(qtyin) qtyin,sum(qtyout) out,sum(op)+sum(qtyin)-sum(qtyout) closing,sum(pktop) + sum(pktno) pktno from " +
    "(select icode, client_unit_id, nvl(op_2019, 0) op, nvl(pkt_2019, 0) pktop, 0 qtyin, 0 qtyout, 0 pktno from itbal union all " +
    "select icode, client_unit_id, sum(to_number(qtyin)) - sum(to_number(qtyout)) op, sum((case when substr(type, 1, 1) in ('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktop," +
    "sum(to_number(qtyin)) qtyin,sum(to_number(qtyout)) qtyout,0 pktno from itransaction " +
    "where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') " +
    "and to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "')-1 group by icode,client_unit_id union all " +
    "select icode,client_unit_id,0 as op,0 as pktop,sum(to_number(qtyin)) qtyin,sum(to_number(qtyout)) qtyout," +
    "sum((case when substr(type, 1, 1) in ('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktno from itransaction " +
    "where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and " +
    "to_date('" + model[0].Col48.Trim() + "','" + sgen.Getsqldateformat() + "') " +
    "group by icode,client_unit_id) a where a.icode='" + dtt.Rows[i]["icode"].ToString() + "' group by a.icode, a.client_unit_id)", "closing");
                                    model[0].dt1.Rows.Add(dr);
                                }
                                model[0].dt1.AcceptChanges();
                                //other charges LTM
                                mq1 = "select ch.master_name chrgname,en.col1,en.col2,en.col3,en.col4,en.col5,en.col6,en.col7,en.col8,en.col9,en.r_no from enx_tab en " +
                                    "inner join master_setting ch on en.col1=ch.master_id and ch.type='MR0' and find_in_set(ch.client_unit_id,en.client_unit_id)=1 " +
                                    "where (en.client_id||en.client_unit_id||en.vch_num||to_char(en.vch_date, 'yyyymmdd')|| en.type) = '" + URL + "'";
                                dt = sgen.getdata(userCode, mq1);
                                if (dt.Rows.Count > 0)
                                {
                                    model[0].LTM1 = new List<Tmodelmain>();
                                    foreach (DataRow dr in dt.Rows)
                                    {
                                        model[0].LTM1.Add(new Tmodelmain
                                        {
                                            Col13 = dr["col3"].ToString(),//chrgrtid
                                            Col14 = dr["r_no"].ToString(),//rno
                                            Col15 = dr["col1"].ToString(),//chrgid
                                            Col16 = dr["col2"].ToString(),//chrgamt
                                            Col17 = dr["col4"].ToString(),//igstrt
                                            Col18 = dr["col5"].ToString(),//igstamt
                                            Col19 = dr["col6"].ToString(),//cgstrt
                                            Col20 = dr["col7"].ToString(),//cgstamt
                                            Col21 = dr["col8"].ToString(),//sgstrt
                                            Col22 = dr["col9"].ToString(),//sgstamt
                                            Col23 = dr["chrgname"].ToString(),//chrgname
                                        });
                                    }
                                }
                            }
                            break;
                        case "CUSREJTYPE":
                            mq = "SELECT master_id,REJ_TYPE FROM (select '011' as master_id, 'AGAINST INVOIVE' as REJ_TYPE from dual Union all select '012' " +
                                "master_id,'AGAINST DISPATCH' as REJ_TYPE from dual union all select '013' master_id,'WITHOUT REFERENCE' as REJ_TYPE from dual) " +
                                "WHERE MASTER_ID = '" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                model[0].Col80 = dtt.Rows[0]["master_id"].ToString();
                                model[0].Col81 = dtt.Rows[0]["REJ_TYPE"].ToString();
                                sgen.SetSession(MyGuid, "BDREJTYP", dtt.Rows[0]["master_id"].ToString());

                                Make_query(viewName.ToLower(), "Select Customer", "PARTY", "1", model[0].Col12, "");
                                ViewBag.scripCall = "callFoo('Select Vendor');";
                            }
                            break;
                        // shiv
                        case "NEW":
                            mq = "select master_id,upper(master_name) master_name,to_char(convert_tz(utc_timestamp(),'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') mrn_date " +
                                "from master_Setting where (master_id||to_char(vch_date, 'yyyymmdd')||type) = '" + URL + "'";
                            if (model[0].Col133 == "N")
                            {
                                ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for new entry, please contact your admin', 2);";
                                return model;
                            }
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "EDMODE", "N");
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                                ViewBag.scripCall = "enableForm();";
                                mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + dtt.Rows[0]["master_id"].ToString() + "'" + model[0].Col11.Trim() + "";
                                vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                                model[0].Col47 = vch_num;
                                model[0].Col16 = vch_num;
                                model[0].Col48 = dtt.Rows[0]["mrn_date"].ToString();
                                model[0].Col12 = dtt.Rows[0]["master_id"].ToString();
                                sgen.SetSession(MyGuid, "KMRNTYPE", dtt.Rows[0]["master_id"].ToString());
                                model[0].Col17 = "1";
                                model[0].Col9 = dtt.Rows[0]["master_name"].ToString();
                                TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1 = cmd_Fun.gin_no(userCode, unitid_mst);
                                model[0].SelectedItems1 = new string[] { "" };
                                if (model[0].Col12 == "05")
                                {
                                    //brijesh
                                    Make_query(viewName.ToLower(), "Select Rejection Reference", "CUSREJTYPE", "1", "", "");
                                    ViewBag.scripCall = "callFoo('Select Rejection Reference');";
                                }
                                else
                                {
                                    //brijesh
                                    Make_query(viewName.ToLower(), "Select Vendor", "PARTY", "1", model[0].Col12, "");
                                    ViewBag.scripCall = "callFoo('Select Vendor');";
                                }
                            }
                            break;
                        // shiv
                        case "PARTY":
                            if (model[0].Col12 == "05")
                            {
                                if (sgen.GetSession(MyGuid, "BDREJTYP").ToString() != null && sgen.GetSession(MyGuid, "BDREJTYP").ToString() != "013")
                                {
                                    // remove tor
                                    mq = "select distinct st.type as invtype,a.c_name as name,a.c_gstin as gstin,a.addr,a.vch_num,a.tor,nvl(ba.country_name,'-') as country_name," +
"nvl(ba.state_name,'-') state_name,nvl(ba.city_name,'-') as city_name,a.pincode_2 from itransaction st inner join clients_mst a on a.vch_num = st.acode and find_in_set(st.client_unit_id,a.client_unit_id)=1 " +
                                 " and substr(a.vch_num,0,3)= '303' left join country_state ba on ba.rec_id = a.city2 where (a.vch_num||st.type|| to_char(a.vch_date,'yyyymmdd')||a.type) = '" + URL + "'";
                                }
                                else
                                {
                                    // remove tor
                                    mq = "select a.c_name as name,a.c_gstin as gstin,a.addr,a.vch_num,a.tor,nvl(ba.country_name,'-') as country_name," +
"nvl(ba.state_name,'-') state_name,nvl(ba.city_name,'-') as city_name,a.pincode_2 from clients_mst a left join country_state ba on ba.rec_id = a.city2 where (a.vch_num||to_char(a.vch_date, 'yyyymmdd')|| a.type) = '" + URL + "'";
                                }
                            }
                            else
                            {
                                mq = "select a.c_name as name,a.c_gstin as gstin,a.addr,a.vch_num,a.tor,nvl(ba.country_name,'-') as country_name," +
"nvl(ba.state_name,'-') state_name,nvl(ba.city_name,'-') as city_name,a.pincode_2 from clients_mst a " +
                                    "left join country_state ba on ba.rec_id = a.city2 where (a.vch_num||to_char(a.vch_date, 'yyyymmdd')|| a.type) = '" + URL + "'";
                            }
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                model[0].Col49 = dtt.Rows[0]["vch_num"].ToString();
                                model[0].Col20 = dtt.Rows[0]["name"].ToString();
                                model[0].Col21 = dtt.Rows[0]["addr"].ToString();
                                model[0].Col22 = dtt.Rows[0]["gstin"].ToString();
                                model[0].Col75 = dtt.Rows[0]["city_name"].ToString();
                                model[0].Col76 = dtt.Rows[0]["state_name"].ToString();
                                model[0].Col77 = dtt.Rows[0]["country_name"].ToString();
                                model[0].Col78 = dtt.Rows[0]["pincode_2"].ToString();
                                //17.04 shiv remove from above mq
                                // model[0].Col52 = dtt.Rows[0]["tor"].ToString();
                                if (model[0].Col12 == "02" || model[0].Col12 == "09" || model[0].Col12 == "03" || model[0].Col12 == "08") sgen.SetSession(MyGuid, "KPOPARTY", dtt.Rows[0]["vch_num"].ToString());
                                if (model[0].Col12 == "05")
                                {
                                    if (sgen.GetSession(MyGuid, "BDREJTYP").ToString() != null && sgen.GetSession(MyGuid, "BDREJTYP").ToString() != "013")
                                    {
                                        sgen.SetSession(MyGuid, "KPOPARTY", dtt.Rows[0]["vch_num"].ToString());
                                        sgen.SetSession(MyGuid, "BDMRNINVTYPE", dtt.Rows[0]["invtype"].ToString());
                                        Make_query(viewName.ToLower(), "Select Reference Doc No.", "BDDOCNO", "2", "", "");
                                        ViewBag.scripCall = "callFoo('Select Reference Doc No.');";
                                    }
                                }
                            }
                            break;
                        case "BDDOCNO":
                            mq = "select group_concat(distinct iv.vch_num) as invoice_no from itransaction iv " +
                                "inner join clients_mst cl on iv.acode = cl.vch_num and find_in_set(iv.client_unit_id, cl.client_unit_id)=1 " +
                                "where (iv.client_id||iv.client_unit_id||iv.vch_num||to_char(iv.vch_date, 'yyyymmdd')||iv.type) in ('" + URL + "')";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "BDINVDOCNO", dtt.Rows[0]["invoice_no"].ToString());
                                model[0].Col28 = dtt.Rows[0]["invoice_no"].ToString();
                                //DataTable dt2 = sgen.getdata(userCode, "select '' Item,'1' as  SNo ,'-' as Icode,'-' as IName,'-' PARTNO,'-'  HSN,'-' as UOM,'0' as TaxRate,'0' Qty_Chl,'0' Qty_In,'0' as IRate," +
                                //       "'-' disc_type,'0' as disc_rate,'0' IAmount,'0' TaxAmount,'0' discAmount,'0' LineAmount,'-' as Remark,'-' as Doc_no,'-' Doc_date,'-' as Batchno,'-' as Location from dual");
                                //model[0].dt1 = dt2;
                                //Session["KMRN_DT"] = dt2.Copy();
                            }
                            break;
                        case "ITEM":
                        case "ITEM2":
                            if (model[0].Col12 == "02")//with po
                            {
                                mq = "select '-' as iremark, p.vch_num PO_Number,to_char(p.vch_date,'" + sgen.Getsqldateformat() + "') PO_Date,p.icode ICode,it.iname,it.cpartno PartNo,um.master_name UOM,hsn.master_name HSN,nvl(location_name('" + clientid_mst + "'||'" + unitid_mst + "'||itb.loc),'-') as location,p.irate IRate,p.taxrate TaxRate,p.iamount iamount,p.taxamt taxamount,p.disctype disc_type,p.discrate disc_rate,p.discamt discamount,p.lineamount,nvl(s.closing,'0') as qtystk,p.qtyord,p.bal_qty as qtychl,p.bal_qty as qtyin from item it inner join (select a.vch_num,a.vch_date,a.type,a.acode,a.icode,a.client_id,a.client_unit_id,a.dlv_date,a.lineamount,a.discamt,a.discrate,a.disctype,a.irate,a.taxrate,a.iamount,a.taxamt,a.qtyord, sum(a.inv_qty) as inv_qty,(a.qtyord - nvl(sum(a.inv_qty), '0')) as bal_qty from(select distinct po.vch_num,po.vch_date,po.type,po.acode,po.icode,po.client_id,po.client_unit_id,po.dlv_date,po.lineamount,po.discamt,po.discrate,po.disctype,po.irate,po.taxrate,po.iamount,po.taxamt,po.qtyord,nvl(iv.qtyrcvd,'0') as inv_qty from purchases po left join itransaction iv on iv.pono = po.vch_num and to_char(iv.podate,'yyyymmdd')=to_char(po.vch_date,'yyyymmdd') and iv.icode=po.icode and iv.type='02' and iv.client_unit_id = po.client_unit_id where po.type in ('50','54','52') and po.client_unit_id = '" + unitid_mst + "' union all select distinct po.vch_num,po.vch_date,po.type,po.acode,po.icode,po.client_id,po.client_unit_id,po.dlv_date,po.lineamount,po.discamt,po.discrate,po.disctype,po.irate,po.taxrate,po.iamount,po.taxamt,po.qtyord,nvl(to_number(iv.col11),'0') as close_qty from purchases po left join enx_tab iv on iv.col12 = po.vch_num and to_char(iv.date1,'yyyymmdd')=to_char(po.vch_date,'yyyymmdd') and iv.col7=po.icode and iv.type='POR' and iv.client_unit_id = po.client_unit_id where po.type in ('50','54','52') and po.client_unit_id = '" + unitid_mst + "') a group by(a.vch_num,a.vch_date,a.type,a.acode,a.icode,a.client_id,a.client_unit_id,a.dlv_date,a.lineamount,a.discamt,a.discrate,a.disctype,a.irate,a.taxrate,a.iamount,a.taxamt,a.qtyord)) p on p.icode=it.icode and it.client_id=p.client_id and p.client_unit_id=it.client_unit_id left join master_setting um on um.master_id = it.uom  and um.type = 'UMM' and find_in_set(um.client_id, it.client_id) = 1 and find_in_set(um.client_unit_id,it.client_unit_id)= 1 left join master_setting hsn on hsn.master_id = it.hsno and hsn.type = 'HSN' and find_in_set(hsn.client_id, it.client_id)= 1 and find_in_set(hsn.client_unit_id, it.client_unit_id)= 1 inner join itbal itb on it.icode=itb.icode and it.type=itb.type and find_in_set(it.client_id,itb.client_id)=1 and find_in_set(it.client_unit_id,itb.client_unit_id)=1 left join(select t.client_unit_id, t.icode, sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout, 0)) as Issued,sum(nvl(t.qtyin, 0)) - sum(nvl(t.qtyout, 0)) as closing from itransaction t where trim(t.store) = 'Y' group by t.icode,t.client_unit_id ) s on it.icode = s.icode and it.client_unit_id = s.client_unit_id where (p.vch_num||p.icode||to_char(it.vch_date,'yyyymmdd')||it.type) in ('" + URL + "') ";
                                //                        mq = "select p.vch_num PO_Number,to_char(convert_tz(p.vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') PO_Date,p.icode ICode,it.iname IName," +
                                //"it.cpartno PartNo,um.master_name UOM,hsn.master_name HSN,(to_number(nvl(p.qtyord,0))-to_number(nvl(i.qtyin,0))) qtychl,p.qtyind,(to_number(nvl(p.qtyord,0))-to_number(nvl(i.qtyin,0))) qtyin,p.irate IRate,p.taxrate TaxRate,p.iamount iamount,p.taxamt taxamount,p.disctype disc_type,p.discrate disc_rate," +
                                //"p.discamt discamount,p.lineamount,to_char(convert_tz(p.dlv_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') Delivery_Date,p.iremark iremark,location_name('" + clientid_mst + "'||'" + unitid_mst + "'||itb.loc) as location from purchases p " +
                                //"inner join item it on it.icode=p.icode and it.type='IT' and it.client_id=p.client_id and it.client_unit_id=p.client_unit_id " +
                                //"inner join itbal itb on it.icode=itb.icode and it.type=itb.type and it.client_id=itb.client_id and it.client_unit_id=itb.client_unit_id " +
                                //"inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_id,'" + clientid_mst + "')=1 and find_in_set(um.client_unit_id,'" + unitid_mst + "')=1 " +
                                //"inner join master_setting hsn on hsn.master_id=it.hsno and hsn.type='HSN' and find_in_set(hsn.client_id,'" + clientid_mst + "')=1 and find_in_set(hsn.client_unit_id,'" + unitid_mst + "')=1 " +
                                //"left join itransaction i on i.icode=p.icode and i.pono=p.vch_num and to_char(i.podate,'yyyymmdd')=to_char(p.vch_date,'yyyymmdd') and i.acode=p.acode and i.client_id=p.client_id " +
                                //"and i.client_unit_id=p.client_unit_id " +
                                //"where (p.client_id||p.client_unit_id||p.vch_num||p.icode||to_char(p.vch_date,'yyyymmdd')||p.type) in ('" + URL + "')";
                            }
                            else if (model[0].Col12 == "05")
                            {
                                if (sgen.GetSession(MyGuid, "BDREJTYP").ToString() != null)
                                {
                                    if (sgen.GetSession(MyGuid, "BDREJTYP").ToString() == "012")
                                    {
                                        mq = "select distinct it.icode as icode,it.iname as iname,'0' qtyord,'0' lineamount,'-' iremark,'-' disc_type,'0' irate,0 disc_rate,'0' iamount,nvl(location_name('" + clientid_mst + "'||'" + unitid_mst + "'||itb.loc),'-') as location,'0' taxamount,'0' discamount" +
                                            ",pc.dsp_date PO_Date,um.master_name as UOM,hsn.master_name as hsn,hsn.group_name taxrate, cl.c_name as Party_Name,s.closing as qtystk,pc.dsp_no PO_Number,it.cpartno partno,pc.type,pc.dsp_qty,pc.bal_qty as qtychl,pc.bal_qty as qtyin from item it " +
                                          "inner join (select a.dsp_no,a.type,a.type2, a.icode,a.acode,a.client_id,a.client_unit_id,a.dsp_date,a.dsp_qty," +
                                          " sum(a.inv_qty) as inv_qty,(a.dsp_qty - nvl(sum(a.inv_qty), '0')) as bal_qty from(select distinct ds.vch_num as dsp_no,ds.type,ds.type2,ds.acode,ds.icode,ds.client_id," +
                                          "ds.client_unit_id,to_char(ds.vch_date, '" + sgen.Getsqldateformat() + "') dsp_date,ds.qtyout as dsp_qty,nvl(iv.qtyout,'0') as inv_qty " +
                                          "from itransaction ds left join itransaction iv on iv.dspno = ds.vch_num and iv.type = '53' and iv.icode=ds.icode and " +
                                          "iv.client_unit_id = ds.client_unit_id where substr(ds.type,1,1)='6' and substr(ds.type2,1,1)='4' and " +
                                          "ds.client_unit_id = '" + unitid_mst + "' union all  select distinct ds.vch_num as dsp_no,ds.type,ds.type2,ds.acode,ds.icode,ds.client_id," +
                                          "ds.client_unit_id,to_char(ds.vch_date, '" + sgen.Getsqldateformat() + "') dsp_date,ds.qtyout as dsp_qty,nvl(co.col11, '0') as close_qty" +
                                          " from itransaction ds inner join enx_tab co on co.col7 = ds.icode and ds.vch_num = co.col12 and co.type = 'CPC' and " +
                                          "co.client_unit_id = '" + unitid_mst + "' where substr(ds.type, 1, 1) = '6' and substr(ds.type2,1,1)= '4' and ds.client_unit_id = '" + unitid_mst + "')" +
                                          " a group by(a.dsp_no,a.type,a.type2, a.icode,a.acode,a.client_id,a.client_unit_id,a.dsp_date,a.dsp_qty)) pc on pc.icode = it.icode " +
                                          "inner join clients_mst cl on cl.vch_num = pc.acode and cl.type = 'BCD' and substr(cl.vch_num,0,3)='303' and cl.client_unit_id = pc.client_unit_id" +
                                          " left join master_setting um on um.master_id = it.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, it.client_unit_id) = 1 left join " +
                                          "master_setting hsn on hsn.master_id = it.hsno and hsn.type = 'HSN' and " +
                                          "find_in_set(hsn.client_unit_id, it.client_unit_id)= 1 left join(select t.client_unit_id, t.icode,sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout, 0)) as Issued,sum(nvl(t.qtyin, 0)) " +
                                          "- sum(nvl(t.qtyout, 0)) as closing from itransaction t where trim(t.store) = 'Y' group by t.icode,t.client_unit_id ) s on " +
                                          "it.icode = s.icode and it.client_unit_id = s.client_unit_id " +
                                          "inner join itbal itb on it.icode=itb.icode and it.type=itb.type and find_in_set(itb.client_unit_id,it.client_unit_id)=1 " +
                                          "where ( it.icode || pc.type || pc.dsp_no || to_char(it.vch_date, 'yyyymmdd') || it.type) in ('" + URL + "')";
                                    }
                                    else if (sgen.GetSession(MyGuid, "BDREJTYP").ToString() == "011")
                                    {
                                        mq = "select DISTINCT it.icode as icode,it.iname as iname,pc.vch_num as PO_Number,to_char(pc.vch_date,'" + sgen.Getsqldateformat() + "') as PO_Date,um.master_name as UOM,hsn.master_name as hsn,hsn.group_name taxrate,cl.c_name as Party_Name," +
                                            "it.cpartno partno, pc.qtyout qtychl,pc.qtyout qtyin,'0' qtyord,pc.lineamount,'-' iremark,pc.disctype disc_type,pc.irate,pc.discrate disc_rate,pc.Iamount,pc.taxamt taxamount,nvl(location_name('" + clientid_mst + "'||'" + unitid_mst + "'||itb.loc),'-') as location,pc.discamt discamount " +
                                            "from itransaction pc inner join item it on it.icode = pc.icode and it.type = 'IT' and it.sale = 'Y' and " +
                                            "find_in_set(it.client_unit_id, pc.client_unit_id) = 1 left join master_setting um on um.master_id = it.uom and um.type = 'UMM' and " +
                                            "find_in_set(um.client_id, it.client_id) = 1 and find_in_set(um.client_unit_id, it.client_unit_id) = 1 left join master_setting  hsn on " +
                                            "hsn.master_id = it.hsno and hsn.type = 'HSN' and find_in_set(hsn.client_unit_id, it.client_unit_id) = 1" +
                                            " inner join clients_mst cl on cl.vch_num = pc.acode and cl.type = 'BCD' and substr(cl.vch_num,0,3)= '303' and cl.client_unit_id = pc.client_unit_id " +
                                            "inner join itbal itb on it.icode=itb.icode and it.type=itb.type and find_in_set(itb.client_unit_id,it.client_unit_id)=1" +
                                            " where (it.icode || pc.type || pc.vch_num || to_char(it.vch_date, 'yyyymmdd') || it.type) " +
                                            "in ('" + URL + "')";
                                    }
                                    else
                                    {
                                        mq = "select it.icode as icode,it.iname as iname,it.cpartno partno,um.master_name as UOM,hsn.master_name as hsn,hsn.group_name taxrate,'0' qtychl," +
                               "'0' qtyin,'0' irate,'-' disc_type,0 disc_rate,'0' iamount,'0' taxamount,'0' discamount,'0' lineamount,'-' iremark,'0' PO_Number,'-' PO_Date,nvl(location_name('" + clientid_mst + "'||'" + unitid_mst + "'||itb.loc),'-') as location from item it " +
                               "inner join itbal itb on it.icode=itb.icode and it.type=itb.type and find_in_set(itb.client_unit_id,it.client_unit_id)=1 " +
                               "inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,'" + unitid_mst + "')=1 " +
                               "inner join master_setting hsn on hsn.master_id=it.hsno and hsn.type='HSN' and find_in_set(hsn.client_unit_id,'" + unitid_mst + "')=1 " +
                               "where (it.icode||to_char(it.vch_date,'yyyymmdd')||it.type) in ('" + URL + "')";
                                    }
                                }
                            }
                            else if (model[0].Col12 == "03")//with jobwork po
                            {
                                mq = "select p.vch_num PO_Number,to_char(convert_tz(p.vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') PO_Date,p.icode ICode,it.iname IName," +
                                     "it.cpartno PartNo,um.master_name UOM,hsn.master_name HSN,(to_number(nvl(p.qtyord,0))-to_number(nvl(i.qtyin,0))) qtychl,p.qtyind,(to_number(nvl(p.qtyord,0))-to_number(nvl(i.qtyin,0))) qtyin,p.irate IRate,p.taxrate TaxRate,p.iamount iamount,p.taxamt taxamount,p.disctype disc_type,p.discrate disc_rate," +
                                     "p.discamt discamount,p.lineamount,to_char(convert_tz(p.dlv_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') Delivery_Date,p.iremark iremark,nvl(location_name('" + clientid_mst + "'||'" + unitid_mst + "'||itb.loc),'-') as location from purchases p " +
                                     "inner join item it on it.icode=p.icode and it.type='IT' and find_in_set(p.client_unit_id,it.client_unit_id)=1 " +
                                     "inner join itbal itb on it.icode=itb.icode and it.type=itb.type and find_in_set(itb.client_unit_id,it.client_unit_id)=1 " +
                                     "inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,'" + unitid_mst + "')=1 " +
                                     "inner join master_setting hsn on hsn.master_id=it.hsno and hsn.type='HSN' and find_in_set(hsn.client_unit_id,'" + unitid_mst + "')=1 " +
                                     "left join itransaction i on i.icode=p.icode and i.pono=p.vch_num and to_char(i.podate,'yyyymmdd')=to_char(p.vch_date,'yyyymmdd') and i.acode=p.acode and i.client_id=p.client_id " +
                                     "and i.client_unit_id=p.client_unit_id " +
                                     "where (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) in ('" + URL + "')";
                            }
                            else if (model[0].Col12 == "09")//with rgp
                            {
                                mq = "select p.vch_num po_Number,to_char(convert_tz(p.vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') po_Date,p.icode ICode,it.iname IName," +
                                   "it.cpartno PartNo,um.master_name UOM,hsn.master_name HSN,hsn.group_name TaxRate,p.iremark iremark,nvl(location_name('" + clientid_mst + "'||'" + unitid_mst + "'||itb.loc),'-') location," +
                                   "'0' irate,'-' disc_type,'0' disc_rate,'0' iamount,'0' taxamount,'0' discamount,'0' lineamount,'0' as qtystk," +
                                   "(case when to_number(nvl(s.Received,0))=0 then to_number(p.qtychl) else (to_number(p.qtyin)-to_number(s.Received)) end) qtychl," +
                                   "(case when to_number(nvl(s.Received,0)) = 0 then to_number(p.qtyin) else (to_number(p.qtyin) - to_number(s.Received)) end) qtyin " +
                                   "from itransactionc p " +
                                   "inner join item it on it.icode=p.icode and it.type='IT' and find_in_set(p.client_unit_id,it.client_unit_id)=1 " +
                                   "inner join itbal itb on it.icode=itb.icode and it.type=itb.type and find_in_set(itb.client_unit_id,it.client_unit_id)=1 " +
                                   "inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,'" + unitid_mst + "')=1 " +
                                   "inner join master_setting hsn on hsn.master_id=it.hsno and hsn.type='HSN' and find_in_set(hsn.client_unit_id,'" + unitid_mst + "')=1 " +
                                   "left join (select t.type,t.client_unit_id,t.icode, sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout, 0)) Issued from itransaction t " +
                                   "where trim(t.store) = 'Y' group by t.type,t.icode,t.client_unit_id) s on p.icode = s.icode and s.type = 'Q09' and p.client_unit_id = s.client_unit_id " +
                                   "where (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) in ('" + URL + "') and p.store='Y'";
                            }
                            else if (model[0].Col12 == "08")//stn
                            {
                                mq = "select a.*,'0' qtyord,'0' ind_no,'0' lineamount,'-' iremark,'-' ind_date,'0' qtyin,'0' Qty_Req_bal,'0' irate,'-' disc_type,'0' irate,0 disc_rate,'0' iamount,'0' taxamount,'0' discamount from " +
                                    "(select it.client_id || it.client_unit_id||cl.interunit || it.icode || to_char(it.vch_date, 'yyyymmdd') || it.type as fstr," +
                                    "it.icode as Icode,it.iname as Iname,nvl(location_name('" + clientid_mst + "'||'" + unitid_mst + "'||itb.loc),'0') as location,it.cpartno Partno, um.master_name as UOM,hsn.master_name as hsn,hsn.group_name taxrate," +
                                    "(st.qtyout - nvl(sn.used_qty, 0)) as qtychl,s.closing as qty_in_stock,st.vch_num as PO_Number,to_char(st.vch_date,'" + sgen.Getsqldateformat() + "') as PO_Date, st.qtyout,cl.c_name as party_name,cl.vch_num as party_code," +
                                    "cl.interunit from itransaction st inner join clients_mst cl on cl.vch_num = st.acode and" +
                                    " find_in_set(st.client_unit_id,cl.client_unit_id)=1 inner join item it on it.icode = st.icode and find_in_set(it.client_unit_id " +
                                    ",st.client_unit_id)=1 left join master_setting um on um.master_id = it.uom and um.type = 'UMM' and" +
                                    " find_in_set(um.client_unit_id, it.client_unit_id)= 1" +
                                    " left join master_setting hsn on hsn.master_id = it.hsno and hsn.type = 'HSN' and find_in_set(hsn.client_id, it.client_id)= 1" +
                                    " and find_in_set(hsn.client_unit_id, it.client_unit_id)= 1 left join(select sum(qtychl) as used_qty ,icode,pono from " +
                                    "itransaction where client_id = '" + clientid_mst + "' and type = '08' group by icode,pono) sn on sn.icode = st.icode" +
                                    " and sn.pono=st.vch_num left join(select t.client_unit_id, t.icode, sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout, 0)) as Issued,sum(nvl(t.qtyin, 0)) " +
                                    "- sum(nvl(t.qtyout, 0)) as closing from itransaction t where trim(t.store) = 'Y' group by" +
                                    " t.icode,t.client_unit_id ) s on it.icode = s.icode and find_in_set(it.client_unit_id, s.client_unit_id)=1" +
                                    " inner join itbal itb on it.icode=itb.icode and it.type=itb.type and find_in_set(itb.client_unit_id,it.client_unit_id)=1" +
                                    " where st.type = 'ST' and st.client_id = '" + clientid_mst + "') a where a.fstr in '" + URL + "'";
                            }
                            else
                            {
                                if (btnval.ToUpper().Equals("ITEM"))
                                {
                                    mq = "select it.icode as icode,it.iname as iname,it.cpartno partno,um.master_name as UOM,hsn.master_name as hsn,hsn.group_name taxrate,'0' qtychl,'0' qtystk," +
                                        "'0' qtyin,'0' irate,'-' disc_type,0 disc_rate,'0' iamount,'0' taxamount,'0' discamount,'0' lineamount,'-' iremark,'0' PO_Number,'-' PO_Date,nvl(location_name('" + clientid_mst + "'||'" + unitid_mst + "'||itb.loc),'-') as location from item it " +
                                        "left join itbal itb on it.icode=itb.icode and it.type=itb.type and find_in_set(itb.client_unit_id,it.client_unit_id)=1 " +
                                        "left join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,'" + unitid_mst + "')=1 " +
                                        "left join master_setting hsn on hsn.master_id=it.hsno and hsn.type='HSN' and find_in_set(hsn.client_unit_id,'" + unitid_mst + "')=1 " +
                                        "where (it.icode||to_char(it.vch_date,'yyyymmdd')||it.type) in ('" + URL + "') AND nvl(location_name('" + clientid_mst + "'||'" + unitid_mst + "'||itb.loc),'-') <>'-'";
                                }
                                else
                                {
                                    mq = "select it.icode as icode,it.iname as iname,it.cpartno partno,um.master_name as UOM,hsn.master_name as hsn,hsn.group_name taxrate,'0' qtychl,nvl(s.closing,'0') qtystk," +
        "'0' qtyin,'0' irate,'-' disc_type,0 disc_rate,'0' iamount,'0' taxamount,'0' discamount,'0' lineamount,'-' iremark,'0' PO_Number,'-' PO_Date,nvl(location_name('" + clientid_mst + "'||'" + unitid_mst + "'||itb.loc),'-') as location from item it " +
        "left join itbal itb on it.icode=itb.icode and it.type=itb.type and find_in_set(itb.client_unit_id,it.client_unit_id)=1 " +
        "left join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,'" + unitid_mst + "')=1 " +
        "left join master_setting hsn on hsn.master_id=it.hsno and hsn.type='HSN' and find_in_set(hsn.client_unit_id,'" + unitid_mst + "')=1 " +
        "left join (select icode,client_unit_id,sum(op) op,sum(pktop) pktop,sum(qtyin) qtyin,sum(qtyout) out,sum(op)+sum(qtyin)-sum(qtyout) closing,sum(pktop) + sum(pktno) pktno from " +
    "(select icode, client_unit_id, nvl(op_2019, 0) op, nvl(pkt_2019, 0) pktop, 0 qtyin, 0 qtyout, 0 pktno from itbal union all " +
    "select icode, client_unit_id, sum(to_number(qtyin)) - sum(to_number(qtyout)) op, sum((case when substr(type, 1, 1) in ('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktop," +
    "sum(to_number(qtyin)) qtyin,sum(to_number(qtyout)) qtyout,0 pktno from itransaction " +
    "where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') " +
    "and to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "')-1 group by icode,client_unit_id union all " +
    "select icode,client_unit_id,0 as op,0 as pktop,sum(to_number(qtyin)) qtyin,sum(to_number(qtyout)) qtyout," +
    "sum((case when substr(type, 1, 1) in ('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktno from itransaction " +
    "where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and " +
    "to_date('" + model[0].Col48.Trim() + "','" + sgen.Getsqldateformat() + "') " +
    "group by icode,client_unit_id) a group by icode, client_unit_id) s on it.icode = s.icode and find_in_set(s.client_unit_id, it.client_unit_id)=1 " +
        "where (it.icode||to_char(it.vch_date,'yyyymmdd')||it.type) in ('" + URL + "')";
                                }
                                //                                mq = "select it.icode as icode,it.iname as iname,it.cpartno partno,um.master_name as UOM,hsn.master_name as hsn,hsn.group_name taxrate,'0' qtychl,nvl(s.closing,'0') qtystk," +
                                //                                   "'0' qtyin,'0' irate,'-' disc_type,0 disc_rate,'0' iamount,'0' taxamount,'0' discamount,'0' lineamount,'-' iremark,'0' PO_Number,'-' PO_Date,nvl(location_name('" + clientid_mst + "'||'" + unitid_mst + "'||itb.loc),'-') as location from item it " +

                                //<<<<<<< HEAD
                                //                                                                   "left join itbal itb on it.icode=itb.icode and it.type=itb.type and find_in_set(it.client_id,itb.client_id)=1 and find_in_set(itb.client_unit_id,it.client_unit_id)=1 " +
                                //                                                                   "left join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_id,'" + clientid_mst + "')=1 and find_in_set(um.client_unit_id,'" + unitid_mst + "')=1 " +
                                //                                                                   "left join master_setting hsn on hsn.master_id=it.hsno and hsn.type='HSN' and find_in_set(hsn.client_id,'" + clientid_mst + "')=1 and find_in_set(hsn.client_unit_id,'" + unitid_mst + "')=1 " +

                                //                               =======
                                //                                                                   "inner join itbal itb on it.icode=itb.icode and it.type=itb.type and find_in_set(it.client_id,itb.client_id)=1 and find_in_set(itb.client_unit_id,it.client_unit_id)=1 " +
                                //                                                                   "inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_id,'" + clientid_mst + "')=1 and find_in_set(um.client_unit_id,'" + unitid_mst + "')=1 " +
                                //                                                                   "inner join master_setting hsn on hsn.master_id=it.hsno and hsn.type='HSN' and find_in_set(hsn.client_id,'" + clientid_mst + "')=1 and find_in_set(hsn.client_unit_id,'" + unitid_mst + "')=1 " +
                                //                                                                   "inner join (select t.client_unit_id, t.icode, sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout, 0)) as Issued,sum(nvl(t.qtyin, 0)) - sum(nvl(t.qtyout, 0)) closing from itransaction t " +
                                //                                                                   "where trim(t.store) = 'Y' group by t.icode,t.client_unit_id ) s on it.icode = s.icode and find_in_set(s.client_unit_id, it.client_unit_id)=1 " +

                                //                               >>>>>>> 2efd5d4ee19dc9e95b22b46e8eb9786b240a3076
                                //                                                                    "where (it.icode||to_char(it.vch_date,'yyyymmdd')||it.type) in ('" + URL + "')";
                            }
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                try
                                {
                                    if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt1.Rows.RemoveAt(0); }
                                    for (int i = 0; i < dtt.Rows.Count; i++)
                                    {
                                        DataRow dr = model[0].dt1.NewRow();
                                        dr["SNo"] = i + 1;
                                        dr["Icode"] = dtt.Rows[i]["icode"].ToString();
                                        dr["IName"] = dtt.Rows[i]["iname"].ToString();
                                        dr["PARTNO"] = dtt.Rows[i]["partno"].ToString();
                                        dr["HSN"] = dtt.Rows[i]["hsn"].ToString();
                                        dr["UOM"] = dtt.Rows[i]["uom"].ToString();
                                        dr["taxrate"] = dtt.Rows[i]["taxrate"].ToString();
                                        dr["Qty_chl"] = dtt.Rows[i]["qtychl"].ToString();
                                        dr["qty_in"] = dtt.Rows[i]["qtyin"].ToString();
                                        dr["iRate"] = dtt.Rows[i]["irate"].ToString();
                                        dr["disc_type"] = dtt.Rows[i]["disc_type"].ToString();
                                        dr["disc_rate"] = dtt.Rows[i]["disc_rate"].ToString();
                                        dr["iamount"] = dtt.Rows[i]["iamount"].ToString();
                                        dr["taxamount"] = dtt.Rows[i]["taxamount"].ToString();
                                        dr["discamount"] = dtt.Rows[i]["discamount"].ToString();
                                        dr["lineamount"] = dtt.Rows[i]["lineamount"].ToString();
                                        dr["Remark"] = dtt.Rows[i]["iremark"].ToString();
                                        dr["PO_Number"] = dtt.Rows[i]["PO_Number"].ToString();
                                        dr["PO_Date"] = dtt.Rows[i]["PO_Date"].ToString();
                                        dr["location"] = dtt.Rows[i]["location"].ToString();
                                        if (btnval.ToUpper().Equals("ITEM2"))
                                        {
                                            dr["Qtystk"] = dtt.Rows[i]["qtystk"].ToString();
                                        }
                                        dr["Noofpkt_box"] = "0";
                                        model[0].dt1.Rows.Add(dr);
                                    }
                                    model[0].dt1.AcceptChanges();
                                }
                                catch (Exception ex) { ViewBag.scripCall = "showmsgJS(1," + ex.Message.ToString().Replace('\'', ' ') + ",0);"; }
                            }
                            break;
                        case "PRINT":
                            mq = "select p.invno,location_name(itb.client_id||itb.client_unit_id||itb.loc) loc,REPLACE(ud.FIRST_NAME|| ' '|| ud.MIDDLE_NAME|| ' '|| ud.last_name,'0','') created_by,p.totremark," +
                                "p.vch_num,p.vehno,p.type,m.master_name as mrntype,p.qtyrcvd,p.ewayno,p.chlno,p.icode,p.taxrate,p.qtychl,p.qtyin,p.pono,to_char(convert_tz(p.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') vch_date1," +
                                "to_char(convert_tz(p.chldate, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') chldate1," +
                                "to_char(convert_tz(p.invdate, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') invdate1," +
                                "to_char(convert_tz(p.ewaydate, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') ewaydate1," +
                                "to_char(convert_tz(p.podate, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') podate1,c_name name," +
                                "i.cpartno,i.iname,i.partname,um.master_name UOM,hsn.master_name hsn from itransaction p " +
                                "inner join item i on p.icode=i.icode and i.type='IT' and find_in_set(i.client_unit_id,p.client_unit_id)=1 " +
                                "inner join itbal itb on i.icode=itb.icode and i.type=itb.type and find_in_set(itb.client_unit_id,i.client_unit_id)=1 " +
                                "inner join clients_mst c on p.acode=c.vch_num and find_in_set(c.client_unit_id,p.client_unit_id)=1 and c.type='BCD' " +
                                "inner join master_setting um on um.master_id=i.uom and um.type='UMM' and find_in_set(um.client_unit_id,'" + unitid_mst + "')=1 " +
                                "inner join master_setting hsn on hsn.master_id=i.hsno and hsn.type='HSN' and find_in_set(hsn.client_unit_id,'" + unitid_mst + "')=1 " +
                                "inner join user_details ud on p.ent_by = ud.vch_num and ud.type = 'CPR' " +
                                "inner join master_setting m on m.master_id = p.type and m.type = 'KMR' and find_in_set(m.client_unit_id,p.client_unit_id)= 1 " +
                                "where (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date, 'yyyymmdd')||p.type) = '" + URL + "'";
                            DataSet ds = new DataSet();
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                DataTable qrdt = new DataTable();
                                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.gin_no2(userCode, unitid_mst);
                                qrdt = dtt.Copy();
                                qrdt.Columns.Add("qrimg", typeof(Byte[]));
                                foreach (DataRow dr in qrdt.Rows)
                                {
                                    string code = dr["icode"].ToString() + "\n" + dr["iname"].ToString();
                                    QRCodeGenerator qrGenerator = new QRCodeGenerator();
                                    QRCodeGenerator.QRCode qrCode = qrGenerator.CreateQrCode(code, QRCodeGenerator.ECCLevel.Q);
                                    System.Web.UI.WebControls.Image imgBarCode = new System.Web.UI.WebControls.Image();
                                    imgBarCode.Height = 150;
                                    imgBarCode.Width = 150;
                                    using (Bitmap bitMap = qrCode.GetGraphic(20))
                                    {
                                        using (MemoryStream ms = new MemoryStream())
                                        {
                                            bitMap.Save(ms, System.Drawing.Imaging.ImageFormat.Png);
                                            byte[] byteImage = ms.ToArray();
                                            dr["qrimg"] = byteImage;
                                            //imgBarCode.ImageUrl = "data:image/png;base64," + Convert.ToBase64String(byteImage);
                                        }
                                        //plBarCode.Controls.Add(imgBarCode);
                                    }
                                }
                                qrdt.AcceptChanges();
                                qrdt.TableName = "prepcur";
                                ds.Tables.Add(qrdt);
                                sgen.open_report_byDs_xml(userCode, ds, "mrn_report", "MRN Detail");
                                //ViewBag.scripCall = "OpenSingle('../../../../../erp/schoolReports_Rpts/Filter_Report_xml.aspx','95%','900px','Reports');";
                                //ViewBag.scripCall += "disableForm();";
                                ViewBag.scripCall += "showRptnew('MRN Detail');disableForm();";
                                ViewBag.vnew = "";
                                ViewBag.vedit = "";
                                ViewBag.vsave = "disabled='disabled'";
                            }
                            break;
                        case "CHRGS":
                            mq = "select master_id,master_name from master_setting where (master_id||to_char(vch_date,'yyyymmdd')||type) in ('" + URL + "')";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                int i = 0;
                                if (model[0].LTM1 == null) { model[0].LTM1 = new List<Tmodelmain>(); }
                                if (model[0].LTM1.Count == 0) { model[0].LTM1 = new List<Tmodelmain>(); }
                                else i = model[0].LTM1.Count;
                                foreach (DataRow dr in dtt.Rows)
                                {
                                    i++;
                                    model[0].LTM1.Add(new Tmodelmain
                                    {
                                        Col14 = i.ToString(),
                                        Col15 = dr["master_id"].ToString(),
                                        Col23 = dr["master_name"].ToString(),
                                        Col16 = "0",
                                        Col17 = "0",
                                        Col18 = "0",
                                        Col19 = "0",
                                        Col20 = "0",
                                        Col21 = "0",
                                        Col22 = "0",
                                    });
                                }
                            }
                            break;
                        case "CHRGDEL":
                            if (sgen.GetSession(MyGuid, "mrndelrno") != null)
                            {
                                var mrno = sgen.GetSession(MyGuid, "mrndelrno").ToString();
                                var LTM = model[0].LTM1;
                                for (int d = 0; d < LTM.Count; d++)
                                {
                                    string chrgno = LTM[d].Col14;
                                    if (chrgno.Trim() == mrno.Trim()) { model[0].LTM1.RemoveAt(d); }
                                }
                                sgen.SetSession(MyGuid, "mrndelrno", null);
                            }
                            break;
                        case "RATE":
                            if (sgen.GetSession(MyGuid, "rtrno") == null)
                            {
                                ViewBag.scripCall += "showmsgJS(1,'Rno not defined', 0);";
                                return model;
                            }
                            var rno = sgen.Make_int(sgen.GetSession(MyGuid, "rtrno").ToString());
                            mq = "select master_id DocNo,group_name TaxRate from master_setting where (master_id||to_char(vch_date,'yyyymmdd')||type)='" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                var utgst = "";
                                model[0].LTM1[rno - 1].Col13 = dtt.Rows[0]["DocNo"].ToString().Trim();
                                try { utgst = model[0].Col18.Substring(0, 2).Trim(); }
                                catch (Exception ex) { utgst = model[0].Col18; }
                                var pgst = model[0].Col22.Substring(0, 2).Trim();
                                if (utgst == pgst)
                                {
                                    var amt = sgen.Make_decimal(model[0].LTM1[rno - 1].Col16);
                                    var rt = sgen.Make_decimal(dtt.Rows[0]["TaxRate"].ToString().Trim().Split('%')[0].Trim());
                                    var amtrt = (amt * rt) / 100;
                                    model[0].LTM1[rno - 1].Col19 = (rt / 2).ToString() + "%";
                                    model[0].LTM1[rno - 1].Col20 = (amtrt / 2).ToString();
                                    model[0].LTM1[rno - 1].Col21 = (rt / 2).ToString() + "%";
                                    model[0].LTM1[rno - 1].Col22 = (amtrt / 2).ToString();
                                }
                                else
                                {
                                    var amt = sgen.Make_decimal(model[0].LTM1[rno - 1].Col16);
                                    var rt = sgen.Make_decimal(dtt.Rows[0]["TaxRate"].ToString().Trim().Split('%')[0].Trim());
                                    var amtrt = (amt * rt) / 100;
                                    model[0].LTM1[rno - 1].Col17 = rt.ToString() + "%";
                                    model[0].LTM1[rno - 1].Col18 = amtrt.ToString();
                                }
                                decimal bamt = sgen.Make_decimal(model[0].Col33);//basicamt
                                decimal bigst = sgen.Make_decimal(model[0].Col34);//basicigst
                                decimal bcgst = sgen.Make_decimal(model[0].Col35);//basiccgst
                                decimal bsgst = sgen.Make_decimal(model[0].Col36);//basicsgst
                                decimal tamt = 0, tigst = 0, tcgst = 0, tsgst = 0;
                                for (int i = 0; i < model[0].LTM1.Count; i++)
                                {
                                    tamt = tamt + sgen.Make_decimal(model[0].LTM1[i].Col16);//chrgamt
                                    tigst = tigst + sgen.Make_decimal(model[0].LTM1[i].Col18);//chrgigst
                                    tcgst = tcgst + sgen.Make_decimal(model[0].LTM1[i].Col20);//chrgcgst
                                    tsgst = tsgst + sgen.Make_decimal(model[0].LTM1[i].Col22);//chrgsgst
                                }
                                model[0].Col37 = (bamt + tamt).ToString();//totamount
                                model[0].Col38 = (bigst + tigst).ToString();//totigst
                                model[0].Col39 = (bcgst + tcgst).ToString();//totcgst
                                model[0].Col40 = (bsgst + tsgst).ToString();//totsgst
                                model[0].Col50 = (bamt + tamt + bigst + tigst + bcgst + tcgst + bsgst + tsgst).ToString();//netamt
                            }
                            break;
                        case "RGP":
                            mq = "select p.vch_num from itransactionc p where (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type)='" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                //model[0].Col71;
                            }
                            break;
                    }
                    break;
                #endregion
                #region mrnn
                case "mrnn":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            mq = "select a.*,to_char(convert_tz(a.vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') vch_date1," +
                                "to_char(a.chldate,'" + sgen.Getsqldateformat() + "') chldate1," +
                                "to_char(a.invdate,'" + sgen.Getsqldateformat() + "') invdate1, " +
                                "to_char(a.ewaydate,'" + sgen.Getsqldateformat() + "') ewaydate1, " +
                                "to_char(a.podate,'" + sgen.Getsqldateformat() + "') podate1," +
                                "to_char(convert_tz(a.dt1,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') dte1," +
                                "to_char(convert_tz(a.dt2,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') dte2," +
                                "to_char(convert_tz(a.dt3,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') dte3," +
                                "nvl(location_name(a.client_id||a.client_unit_id||bt.loc),'-') loc_name from itransaction a " +
                                "left join btchtrans bt on a.vch_num=bt.vch_num and to_char(a.vch_date,'yyyymmdd')=to_char(bt.vch_date,'yyyymmdd') " +
                                "and bt.type=('Q'||a.type) and a.client_unit_id=bt.client_unit_id and a.icode=bt.icode " +
                                "where (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date, 'yyyymmdd')|| a.type) = '" + URL + "' and a.inspected in ('N','A')";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.gin_no2(userCode, unitid_mst);
                                DateTime serverdate = sgen.server_datetime_dt(userCode);
                                DateTime vdate = (DateTime)dtt.Rows[0]["vch_date"];
                                mq0 = sgen.seekval(userCode, "select param1 from controls where type='CTL' and id='000004' ", "param1");
                                int rdays = sgen.Make_int(mq0);
                                int diff = (serverdate - vdate).Days;
                                if (diff > rdays)
                                {
                                    ViewBag.scripCall += "showmsgJS(1, 'MRR is freezed of this Period', 2);";
                                    return model;
                                }
                                sgen.SetSession(MyGuid, "EDMODE", "Y");
                                model[0].Col1 = dtt.Rows[0]["client_id"].ToString();
                                model[0].Col2 = dtt.Rows[0]["client_unit_id"].ToString();
                                model[0].Col3 = dtt.Rows[0]["ent_by"].ToString();
                                model[0].Col4 = dtt.Rows[0]["ent_date"].ToString();
                                model[0].Col5 = dtt.Rows[0]["edit_by"].ToString();
                                model[0].Col6 = dtt.Rows[0]["edit_date"].ToString();
                                model[0].Col7 = dtt.Rows[0]["rec_id"].ToString();
                                string turl = URL.Substring(0, URL.Length - 2);
                                string ttype = URL.Substring(URL.Length - 2, 2);
                                model[0].Col8 = "(client_id||client_unit_id||vch_num||to_char(vch_date, 'yyyymmdd'))='" + turl + "' " +
                                    "and type in ('" + ttype + "','Q" + ttype + "')";
                                model[0].Col10 = model[0].Col10;
                                model[0].Col11 = model[0].Col11;
                                //model[0].Col12 = model[0].Col12;
                                model[0].Col12 = dtt.Rows[0]["type"].ToString();
                                model[0].Col13 = "Update";
                                model[0].Col100 = "Update & New";
                                model[0].Col121 = "U";
                                model[0].Col122 = "<u>U</u>pdate";
                                model[0].Col123 = "Update & Ne<u>w</u>";
                                model[0].Col14 = model[0].Col14;
                                model[0].Col15 = model[0].Col15;

                                String[] L1 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["gatein_no"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems1 = L1;
                                model[0].Col16 = dtt.Rows[0]["vch_num"].ToString();
                                model[0].Col47 = dtt.Rows[0]["vch_num"].ToString();
                                model[0].Col48 = dtt.Rows[0]["vch_date1"].ToString();
                                if (model[0].Col12 != "08")
                                {
                                    model[0].Col9 = sgen.seekval(userCode, "select upper(master_name) master_name from master_setting where client_name='" + dtt.Rows[0]["type"].ToString() + "'", "master_name");
                                }
                                else
                                {
                                    model[0].Col9 = "STN IN";
                                }
                                sgen.SetSession(MyGuid, "KMRNTYPE", dtt.Rows[0]["type"].ToString());
                                DataTable dtp = new DataTable();
                                mq1 = "select a.c_name as name,a.c_gstin as gstin,a.addr,a.vch_num from clients_mst a where a.vch_num='" + dtt.Rows[0]["acode"].ToString() + "' " +
                                    "and find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 and a.type='BCD'";
                                dtp = sgen.getdata(userCode, mq1);
                                if (dtp.Rows.Count > 0)
                                {
                                    model[0].Col49 = dtp.Rows[0]["vch_num"].ToString();
                                    model[0].Col20 = dtp.Rows[0]["name"].ToString();
                                    model[0].Col21 = dtp.Rows[0]["addr"].ToString();
                                    model[0].Col22 = dtp.Rows[0]["gstin"].ToString();
                                    // 17.04 shiv remove from above mq1
                                    //model[0].Col52 = dtp.Rows[0]["tor"].ToString();
                                }
                                model[0].Col23 = dtt.Rows[0]["chlno"].ToString();
                                model[0].Col24 = dtt.Rows[0]["chldate1"].ToString();
                                model[0].Col25 = dtt.Rows[0]["tmode"].ToString();
                                model[0].Col26 = dtt.Rows[0]["ewayno"].ToString();
                                model[0].Col27 = dtt.Rows[0]["ewaydate1"].ToString();
                                model[0].Col28 = dtt.Rows[0]["invno"].ToString();
                                model[0].Col29 = dtt.Rows[0]["invdate1"].ToString();
                                model[0].Col31 = dtt.Rows[0]["totremark"].ToString();
                                model[0].Col32 = dtt.Rows[0]["cond"].ToString();
                                model[0].Col33 = dtt.Rows[0]["basicamt"].ToString();
                                model[0].Col34 = dtt.Rows[0]["igst"].ToString();
                                model[0].Col35 = dtt.Rows[0]["cgst"].ToString();
                                model[0].Col36 = dtt.Rows[0]["sgst"].ToString();
                                model[0].Col37 = dtt.Rows[0]["gamt"].ToString();
                                model[0].Col38 = dtt.Rows[0]["gigst"].ToString();
                                model[0].Col39 = dtt.Rows[0]["gcgst"].ToString();
                                model[0].Col40 = dtt.Rows[0]["gsgst"].ToString();
                                model[0].Col53 = dtt.Rows[0]["vehno"].ToString();
                                model[0].Col60 = dtt.Rows[0]["col1"].ToString();
                                model[0].Col61 = dtt.Rows[0]["col2"].ToString();
                                model[0].Col62 = dtt.Rows[0]["col3"].ToString();
                                model[0].Col63 = dtt.Rows[0]["dte1"].ToString();
                                model[0].Col64 = dtt.Rows[0]["dte2"].ToString();
                                model[0].Col65 = dtt.Rows[0]["dte3"].ToString();
                                model[0].Col66 = dtt.Rows[0]["col4"].ToString();
                                model[0].Col67 = dtt.Rows[0]["col5"].ToString();
                                model[0].Col68 = dtt.Rows[0]["col6"].ToString();
                                model[0].dt1 = model[0].dt1.Clone();
                                for (int i = 0; i < dtt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    // dr["SNo"] = i + 1;
                                    dr["SNo"] = dtt.Rows[i]["rno"].ToString();
                                    dr["Icode"] = dtt.Rows[i]["icode"].ToString();
                                    dr["IName"] = dtt.Rows[i]["iname"].ToString();
                                    dr["PARTNO"] = dtt.Rows[i]["cpartno"].ToString();
                                    dr["HSN"] = dtt.Rows[i]["hsno"].ToString();
                                    dr["UOM"] = dtt.Rows[i]["uom"].ToString();
                                    dr["taxrate"] = dtt.Rows[i]["taxrate"].ToString();
                                    dr["Qty_chl"] = dtt.Rows[i]["qtychl"].ToString();
                                    dr["Qty_in"] = dtt.Rows[i]["qtyrcvd"].ToString();
                                    dr["Disc_type"] = dtt.Rows[i]["disctype"].ToString();
                                    dr["Disc_rate"] = dtt.Rows[i]["discrate"].ToString();
                                    dr["Discamount"] = dtt.Rows[i]["discamt"].ToString();
                                    dr["iRate"] = dtt.Rows[i]["irate"].ToString();
                                    dr["iamount"] = dtt.Rows[i]["iamount"].ToString();
                                    dr["taxamount"] = dtt.Rows[i]["taxamt"].ToString();
                                    dr["lineamount"] = dtt.Rows[i]["lineamount"].ToString();
                                    dr["NoOfPKT_Box"] = dtt.Rows[i]["pktno"].ToString();
                                    dr["Remark"] = dtt.Rows[i]["iremark"].ToString();
                                    dr["PO_Number"] = dtt.Rows[i]["pono"].ToString();
                                    dr["Po_Date"] = dtt.Rows[i]["podate1"].ToString();
                                    dr["Batchno"] = dtt.Rows[i]["btchno"].ToString();
                                    dr["Location"] = dtt.Rows[i]["loc_name"].ToString();
                                    dr["Qtystk"] = dtt.Rows[i]["qtystk"].ToString();
                                    model[0].dt1.Rows.Add(dr);
                                }
                                model[0].dt1.AcceptChanges();
                                //other charges LTM
                                mq1 = "select ch.master_name chrgname,en.col1,en.col2,en.col3,en.col4,en.col5,en.col6,en.col7,en.col8,en.col9,en.r_no from enx_tab en " +
                                    "inner join master_setting ch on en.col1=ch.master_id and ch.type='MR0' and find_in_set(ch.client_unit_id,en.client_unit_id)=1 " +
                                    "where (en.client_id||en.client_unit_id||en.vch_num||to_char(en.vch_date, 'yyyymmdd')|| en.type) = '" + URL + "'";
                                dt = sgen.getdata(userCode, mq1);
                                if (dt.Rows.Count > 0)
                                {
                                    model[0].LTM1 = new List<Tmodelmain>();
                                    foreach (DataRow dr in dt.Rows)
                                    {
                                        model[0].LTM1.Add(new Tmodelmain
                                        {
                                            Col13 = dr["col3"].ToString(),//chrgrtid
                                            Col14 = dr["r_no"].ToString(),//rno
                                            Col15 = dr["col1"].ToString(),//chrgid
                                            Col16 = dr["col2"].ToString(),//chrgamt
                                            Col17 = dr["col4"].ToString(),//igstrt
                                            Col18 = dr["col5"].ToString(),//igstamt
                                            Col19 = dr["col6"].ToString(),//cgstrt
                                            Col20 = dr["col7"].ToString(),//cgstamt
                                            Col21 = dr["col8"].ToString(),//sgstrt
                                            Col22 = dr["col9"].ToString(),//sgstamt
                                            Col23 = dr["chrgname"].ToString(),//chrgname
                                        });
                                    }
                                }
                            }
                            break;
                        case "CUSREJTYPE":
                            mq = "SELECT master_id,REJ_TYPE FROM (select '011' as master_id, 'AGAINST INVOIVE' as REJ_TYPE from dual Union all select '012' " +
                                "master_id,'AGAINST DISPATCH' as REJ_TYPE from dual union all select '013' master_id,'WITHOUT REFERENCE' as REJ_TYPE from dual) " +
                                "WHERE MASTER_ID = '" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "BDREJTYP", dtt.Rows[0]["master_id"].ToString());
                                Make_query(viewName.ToLower(), "Select Vendor", "PARTY", "1", model[0].Col12, "");
                                ViewBag.scripCall = "callFoo('Select Vendor');";
                            }
                            break;
                        // shiv
                        case "NEW":
                            mq = "select master_id,upper(master_name) master_name,to_char(convert_tz(utc_timestamp(),'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') mrn_date " +
                                "from master_Setting where (master_id||to_char(vch_date, 'yyyymmdd')||type) = '" + URL + "'";
                            if (model[0].Col133 == "N")
                            {
                                ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for new entry, please contact your admin', 2);";
                                return model;
                            }
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "EDMODE", "N");
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                                ViewBag.scripCall = "enableForm();";
                                mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + dtt.Rows[0]["master_id"].ToString() + "'" + model[0].Col11.Trim() + "";
                                vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                                model[0].Col47 = vch_num;
                                model[0].Col16 = vch_num;
                                model[0].Col48 = dtt.Rows[0]["mrn_date"].ToString();
                                model[0].Col12 = dtt.Rows[0]["master_id"].ToString();
                                sgen.SetSession(MyGuid, "KMRNTYPE", dtt.Rows[0]["master_id"].ToString());
                                model[0].Col17 = "1";
                                model[0].Col9 = dtt.Rows[0]["master_name"].ToString();
                                TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1 = cmd_Fun.gin_no(userCode, unitid_mst);
                                model[0].SelectedItems1 = new string[] { "" };
                                if (model[0].Col12 == "05")
                                {
                                    //brijesh
                                    Make_query(viewName.ToLower(), "Select Rejection Reference", "CUSREJTYPE", "1", "", "");
                                    ViewBag.scripCall = "callFoo('Select Rejection Reference');";
                                }
                                else
                                {
                                    //brijesh
                                    Make_query(viewName.ToLower(), "Select Vendor", "PARTY", "1", model[0].Col12, "");
                                    ViewBag.scripCall = "callFoo('Select Vendor');";
                                }
                            }
                            break;
                        // shiv
                        case "PARTY":
                            if (model[0].Col12 == "05")
                            {
                                if (sgen.GetSession(MyGuid, "BDREJTYP").ToString() != null && sgen.GetSession(MyGuid, "BDREJTYP").ToString() != "013")
                                {
                                    mq = "select distinct st.type as invtype,a.vch_num,a.c_name Name,a.addr, a.isgstr IsGST, a.c_gstin as gstin,a.tor from " +
                                 "itransaction st inner join clients_mst a on a.vch_num = st.acode and find_in_set(st.client_unit_id,a.client_unit_id)=1 " +
                                 " and substr(a.vch_num,0,3)= '303' where (a.vch_num||st.type|| to_char(a.vch_date,'yyyymmdd')||a.type) = '" + URL + "'";
                                }
                                else
                                {
                                    mq = "select a.c_name as name,a.c_gstin as gstin,a.addr,a.vch_num,a.tor from clients_mst a " +
                                         "where (a.vch_num||to_char(a.vch_date, 'yyyymmdd')|| a.type) = '" + URL + "'";
                                }
                            }
                            else
                            {
                                mq = "select a.c_name as name,a.c_gstin as gstin,a.addr,a.vch_num from clients_mst a where (a.vch_num||to_char(a.vch_date, 'yyyymmdd')|| a.type) = '" + URL + "'";
                            }
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                model[0].Col49 = dtt.Rows[0]["vch_num"].ToString();
                                model[0].Col20 = dtt.Rows[0]["name"].ToString();
                                model[0].Col21 = dtt.Rows[0]["addr"].ToString();
                                model[0].Col22 = dtt.Rows[0]["gstin"].ToString();
                                // 17.04 shiv remove from above mq
                                // model[0].Col52 = dtt.Rows[0]["tor"].ToString();
                                if (model[0].Col12 == "02" || model[0].Col12 == "09" || model[0].Col12 == "03" || model[0].Col12 == "08") sgen.SetSession(MyGuid, "KPOPARTY", dtt.Rows[0]["vch_num"].ToString());
                                if (model[0].Col12 == "05")
                                {
                                    if (sgen.GetSession(MyGuid, "BDREJTYP").ToString() != null && sgen.GetSession(MyGuid, "BDREJTYP").ToString() != "013")
                                    {
                                        sgen.SetSession(MyGuid, "KPOPARTY", dtt.Rows[0]["vch_num"].ToString());
                                        sgen.SetSession(MyGuid, "BDMRNINVTYPE", dtt.Rows[0]["invtype"].ToString());
                                        Make_query(viewName.ToLower(), "Select Reference Doc No.", "BDDOCNO", "2", "", "");
                                        ViewBag.scripCall = "callFoo('Select Reference Doc No.');";
                                    }
                                }
                            }
                            break;
                        case "BDDOCNO":
                            //mq = "select distinct '-' as fstr,iv.vch_num as invoice_no,to_char(iv.vch_date, '" + sgen.Getsqldateformat() + "') as invoice_date,iv.type from itransaction iv inner join clients_mst cl on iv.acode = cl.vch_num" +
                            //" and iv.client_id = cl.client_id and iv.client_unit_id = cl.client_unit_id" +
                            //" where (iv.client_id||iv.client_unit_id||iv.vch_num||to_char(iv.vch_date, 'yyyymmdd')||iv.type) in ('" + URL + "')";
                            mq = "select group_concat(distinct iv.vch_num) as invoice_no from itransaction iv " +
                                "inner join clients_mst cl on iv.acode = cl.vch_num and find_in_set(iv.client_unit_id, cl.client_unit_id)=1 " +
                                "where (iv.client_id||iv.client_unit_id||iv.vch_num||to_char(iv.vch_date, 'yyyymmdd')||iv.type) in ('" + URL + "')";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "BDINVDOCNO", dtt.Rows[0]["invoice_no"].ToString());
                                //DataTable dt2 = sgen.getdata(userCode, "select '' Item,'1' as  SNo ,'-' as Icode,'-' as IName,'-' PARTNO,'-'  HSN,'-' as UOM,'0' as TaxRate,'0' Qty_Chl,'0' Qty_In,'0' as IRate," +
                                //       "'-' disc_type,'0' as disc_rate,'0' IAmount,'0' TaxAmount,'0' discAmount,'0' LineAmount,'-' as Remark,'-' as Doc_no,'-' Doc_date,'-' as Batchno,'-' as Location from dual");
                                //model[0].dt1 = dt2;
                                //Session["KMRN_DT"] = dt2.Copy();
                            }
                            break;
                        case "ITEM":
                            if (model[0].Col12 == "02")//with po
                            {
                                mq = "select '-' as iremark, p.vch_num PO_Number,to_char(p.vch_date,'" + sgen.Getsqldateformat() + "') PO_Date,p.icode ICode,it.iname,it.cpartno PartNo,um.master_name UOM,hsn.master_name HSN,nvl(location_name('" + clientid_mst + "'||'" + unitid_mst + "'||itb.loc),'-') as location,p.irate IRate,p.taxrate TaxRate,p.iamount iamount,p.taxamt taxamount,p.disctype disc_type,p.discrate disc_rate,p.discamt discamount,p.lineamount,nvl(s.closing,'0') as qtystk,p.qtyord,p.bal_qty as qtychl,p.bal_qty as qtyin from item it inner join (select a.vch_num,a.vch_date,a.type,a.acode,a.icode,a.client_id,a.client_unit_id,a.dlv_date,a.lineamount,a.discamt,a.discrate,a.disctype,a.irate,a.taxrate,a.iamount,a.taxamt,a.qtyord, sum(a.inv_qty) as inv_qty,(a.qtyord - nvl(sum(a.inv_qty), '0')) as bal_qty from(select distinct po.vch_num,po.vch_date,po.type,po.acode,po.icode,po.client_id,po.client_unit_id,po.dlv_date,po.lineamount,po.discamt,po.discrate,po.disctype,po.irate,po.taxrate,po.iamount,po.taxamt,po.qtyord,nvl(iv.qtyrcvd,'0') as inv_qty from purchases po left join itransaction iv on iv.pono = po.vch_num and to_char(iv.podate,'yyyymmdd')=to_char(po.vch_date,'yyyymmdd') and iv.icode=po.icode and iv.type='02' and iv.client_unit_id = po.client_unit_id where po.type in ('50','54','52') and po.client_unit_id = '" + unitid_mst + "' union all select distinct po.vch_num,po.vch_date,po.type,po.acode,po.icode,po.client_id,po.client_unit_id,po.dlv_date,po.lineamount,po.discamt,po.discrate,po.disctype,po.irate,po.taxrate,po.iamount,po.taxamt,po.qtyord,nvl(to_number(iv.col11),'0') as close_qty from purchases po left join enx_tab iv on iv.col12 = po.vch_num and to_char(iv.date1,'yyyymmdd')=to_char(po.vch_date,'yyyymmdd') and iv.col7=po.icode and iv.type='POR' and iv.client_unit_id = po.client_unit_id where po.type in ('50','54','52') and po.client_unit_id = '" + unitid_mst + "') a group by(a.vch_num,a.vch_date,a.type,a.acode,a.icode,a.client_id,a.client_unit_id,a.dlv_date,a.lineamount,a.discamt,a.discrate,a.disctype,a.irate,a.taxrate,a.iamount,a.taxamt,a.qtyord)) p on p.icode=it.icode and it.client_id=p.client_id and p.client_unit_id=it.client_unit_id left join master_setting um on um.master_id = it.uom  and um.type = 'UMM' and find_in_set(um.client_id, it.client_id) = 1 and find_in_set(um.client_unit_id,it.client_unit_id)= 1 left join master_setting hsn on hsn.master_id = it.hsno and hsn.type = 'HSN' and find_in_set(hsn.client_id, it.client_id)= 1 and find_in_set(hsn.client_unit_id, it.client_unit_id)= 1 inner join itbal itb on it.icode=itb.icode and it.type=itb.type and find_in_set(it.client_id,itb.client_id)=1 and find_in_set(it.client_unit_id,itb.client_unit_id)=1 left join(select t.client_unit_id, t.icode, sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout, 0)) as Issued,sum(nvl(t.qtyin, 0)) - sum(nvl(t.qtyout, 0)) as closing from itransaction t where trim(t.store) = 'Y' group by t.icode,t.client_unit_id ) s on it.icode = s.icode and it.client_unit_id = s.client_unit_id where (p.vch_num||p.icode||to_char(it.vch_date,'yyyymmdd')||it.type) in ('" + URL + "') ";
                                //                        mq = "select p.vch_num PO_Number,to_char(convert_tz(p.vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') PO_Date,p.icode ICode,it.iname IName," +
                                //"it.cpartno PartNo,um.master_name UOM,hsn.master_name HSN,(to_number(nvl(p.qtyord,0))-to_number(nvl(i.qtyin,0))) qtychl,p.qtyind,(to_number(nvl(p.qtyord,0))-to_number(nvl(i.qtyin,0))) qtyin,p.irate IRate,p.taxrate TaxRate,p.iamount iamount,p.taxamt taxamount,p.disctype disc_type,p.discrate disc_rate," +
                                //"p.discamt discamount,p.lineamount,to_char(convert_tz(p.dlv_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') Delivery_Date,p.iremark iremark,location_name('" + clientid_mst + "'||'" + unitid_mst + "'||itb.loc) as location from purchases p " +
                                //"inner join item it on it.icode=p.icode and it.type='IT' and it.client_id=p.client_id and it.client_unit_id=p.client_unit_id " +
                                //"inner join itbal itb on it.icode=itb.icode and it.type=itb.type and it.client_id=itb.client_id and it.client_unit_id=itb.client_unit_id " +
                                //"inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_id,'" + clientid_mst + "')=1 and find_in_set(um.client_unit_id,'" + unitid_mst + "')=1 " +
                                //"inner join master_setting hsn on hsn.master_id=it.hsno and hsn.type='HSN' and find_in_set(hsn.client_id,'" + clientid_mst + "')=1 and find_in_set(hsn.client_unit_id,'" + unitid_mst + "')=1 " +
                                //"left join itransaction i on i.icode=p.icode and i.pono=p.vch_num and to_char(i.podate,'yyyymmdd')=to_char(p.vch_date,'yyyymmdd') and i.acode=p.acode and i.client_id=p.client_id " +
                                //"and i.client_unit_id=p.client_unit_id " +
                                //"where (p.client_id||p.client_unit_id||p.vch_num||p.icode||to_char(p.vch_date,'yyyymmdd')||p.type) in ('" + URL + "')";
                            }
                            else if (model[0].Col12 == "05")
                            {
                                if (sgen.GetSession(MyGuid, "BDREJTYP").ToString() != null)
                                {
                                    if (sgen.GetSession(MyGuid, "BDREJTYP").ToString() == "012")
                                    {
                                        mq = "select distinct it.icode as icode,it.iname as iname,'0' qtyord,'0' lineamount,'-' iremark,'-' disc_type,'0' irate,0 disc_rate,'0' iamount,nvl(location_name('" + clientid_mst + "'||'" + unitid_mst + "'||itb.loc),'-') as location,'0' taxamount,'0' discamount" +
                                            ",pc.dsp_date PO_Date,um.master_name as UOM,hsn.master_name as hsn,hsn.group_name taxrate, cl.c_name as Party_Name,s.closing as qtystk,pc.dsp_no PO_Number,it.cpartno partno,pc.type,pc.dsp_qty,pc.bal_qty as qtychl,pc.bal_qty as qtyin from item it " +
                                          "inner join (select a.dsp_no,a.type,a.type2, a.icode,a.acode,a.client_id,a.client_unit_id,a.dsp_date,a.dsp_qty," +
                                          " sum(a.inv_qty) as inv_qty,(a.dsp_qty - nvl(sum(a.inv_qty), '0')) as bal_qty from(select distinct ds.vch_num as dsp_no,ds.type,ds.type2,ds.acode,ds.icode,ds.client_id," +
                                          "ds.client_unit_id,to_char(ds.vch_date, '" + sgen.Getsqldateformat() + "') dsp_date,ds.qtyout as dsp_qty,nvl(iv.qtyout,'0') as inv_qty " +
                                          "from itransaction ds left join itransaction iv on iv.dspno = ds.vch_num and iv.type = '53' and iv.icode=ds.icode and " +
                                          "iv.client_unit_id = ds.client_unit_id where substr(ds.type,1,1)='6' and substr(ds.type2,1,1)='4' and " +
                                          "ds.client_unit_id = '" + unitid_mst + "' union all  select distinct ds.vch_num as dsp_no,ds.type,ds.type2,ds.acode,ds.icode,ds.client_id," +
                                          "ds.client_unit_id,to_char(ds.vch_date, '" + sgen.Getsqldateformat() + "') dsp_date,ds.qtyout as dsp_qty,nvl(co.col11, '0') as close_qty" +
                                          " from itransaction ds inner join enx_tab co on co.col7 = ds.icode and ds.vch_num = co.col12 and co.type = 'CPC' and " +
                                          "co.client_unit_id = '" + unitid_mst + "' where substr(ds.type, 1, 1) = '6' and substr(ds.type2,1,1)= '4' and ds.client_unit_id = '" + unitid_mst + "')" +
                                          " a group by(a.dsp_no,a.type,a.type2, a.icode,a.acode,a.client_id,a.client_unit_id,a.dsp_date,a.dsp_qty)) pc on pc.icode = it.icode " +
                                          "inner join clients_mst cl on cl.vch_num = pc.acode and cl.type = 'BCD' and substr(cl.vch_num,0,3)='303' and cl.client_unit_id = pc.client_unit_id" +
                                          " left join master_setting um on um.master_id = it.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, it.client_unit_id) = 1 left join " +
                                          "master_setting hsn on hsn.master_id = it.hsno and hsn.type = 'HSN' and " +
                                          "find_in_set(hsn.client_unit_id, it.client_unit_id)= 1 left join(select t.client_unit_id, t.icode,sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout, 0)) as Issued,sum(nvl(t.qtyin, 0)) " +
                                          "- sum(nvl(t.qtyout, 0)) as closing from itransaction t where trim(t.store) = 'Y' group by t.icode,t.client_unit_id ) s on " +
                                          "it.icode = s.icode and it.client_unit_id = s.client_unit_id " +
                                          "inner join itbal itb on it.icode=itb.icode and it.type=itb.type and find_in_set(itb.client_unit_id,it.client_unit_id)=1 " +
                                          "where ( it.icode || pc.type || pc.dsp_no || to_char(it.vch_date, 'yyyymmdd') || it.type) in ('" + URL + "')";
                                    }
                                    else if (sgen.GetSession(MyGuid, "BDREJTYP").ToString() == "011")
                                    {
                                        mq = "select distinct it.icode as icode,it.iname as iname,pc.vch_num as PO_Number,to_char(pc.vch_date,'" + sgen.Getsqldateformat() + "') as PO_Date,um.master_name as UOM,hsn.master_name as hsn,hsn.group_name taxrate,cl.c_name as Party_Name," +
                                            "it.cpartno partno, pc.qtyout qtychl,pc.qtyout qtyin,'0' qtyord,'0' lineamount,'-' iremark,'-' disc_type,'0' irate,0 disc_rate,'0' iamount,'0' taxamount,nvl(location_name('" + clientid_mst + "'||'" + unitid_mst + "'||itb.loc),'-') as location,'0' discamount " +
                                            "from itransaction pc inner join item it on it.icode = pc.icode and it.type = 'IT' and it.sale = 'Y' and " +
                                            "find_in_set(it.client_unit_id, pc.client_unit_id) = 1 left join master_setting um on um.master_id = it.uom and um.type = 'UMM' and " +
                                            "find_in_set(um.client_id, it.client_id) = 1 and find_in_set(um.client_unit_id, it.client_unit_id) = 1 left join master_setting  hsn on " +
                                            "hsn.master_id = it.hsno and hsn.type = 'HSN' and find_in_set(hsn.client_unit_id, it.client_unit_id) = 1" +
                                            " inner join clients_mst cl on cl.vch_num = pc.acode and cl.type = 'BCD' and substr(cl.vch_num,0,3)= '303' and cl.client_unit_id = pc.client_unit_id " +
                                            "inner join itbal itb on it.icode=itb.icode and it.type=itb.type and find_in_set(itb.client_unit_id,it.client_unit_id)=1" +
                                            " where (it.icode || pc.type || pc.vch_num || to_char(it.vch_date, 'yyyymmdd') || it.type) " +
                                            "in ('" + URL + "')";
                                    }
                                    else
                                    {
                                        mq = "select it.icode as icode,it.iname as iname,it.cpartno partno,um.master_name as UOM,hsn.master_name as hsn,hsn.group_name taxrate,'0' qtychl," +
                               "'0' qtyin,'0' irate,'-' disc_type,0 disc_rate,'0' iamount,'0' taxamount,'0' discamount,'0' lineamount,'-' iremark,'0' PO_Number,'-' PO_Date,nvl(location_name('" + clientid_mst + "'||'" + unitid_mst + "'||itb.loc),'-') as location from item it " +
                               "inner join itbal itb on it.icode=itb.icode and it.type=itb.type and find_in_set(itb.client_unit_id,it.client_unit_id)=1 " +
                               "inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,'" + unitid_mst + "')=1 " +
                               "inner join master_setting hsn on hsn.master_id=it.hsno and hsn.type='HSN' and find_in_set(hsn.client_unit_id,'" + unitid_mst + "')=1 " +
                               "where (it.icode||to_char(it.vch_date,'yyyymmdd')||it.type) in ('" + URL + "')";
                                    }
                                }
                            }
                            else if (model[0].Col12 == "03")//with jobwork po
                            {
                                mq = "select p.vch_num PO_Number,to_char(convert_tz(p.vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') PO_Date,p.icode ICode,it.iname IName," +
                                     "it.cpartno PartNo,um.master_name UOM,hsn.master_name HSN,(to_number(nvl(p.qtyord,0))-to_number(nvl(i.qtyin,0))) qtychl,p.qtyind,(to_number(nvl(p.qtyord,0))-to_number(nvl(i.qtyin,0))) qtyin,p.irate IRate,p.taxrate TaxRate,p.iamount iamount,p.taxamt taxamount,p.disctype disc_type,p.discrate disc_rate," +
                                     "p.discamt discamount,p.lineamount,to_char(convert_tz(p.dlv_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') Delivery_Date,p.iremark iremark,nvl(location_name('" + clientid_mst + "'||'" + unitid_mst + "'||itb.loc),'-') as location from purchases p " +
                                     "inner join item it on it.icode=p.icode and it.type='IT' and find_in_set(p.client_unit_id,it.client_unit_id)=1 " +
                                     "inner join itbal itb on it.icode=itb.icode and it.type=itb.type and find_in_set(itb.client_unit_id,it.client_unit_id)=1 " +
                                     "inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,'" + unitid_mst + "')=1 " +
                                     "inner join master_setting hsn on hsn.master_id=it.hsno and hsn.type='HSN' and find_in_set(hsn.client_unit_id,'" + unitid_mst + "')=1 " +
                                     "left join itransaction i on i.icode=p.icode and i.pono=p.vch_num and to_char(i.podate,'yyyymmdd')=to_char(p.vch_date,'yyyymmdd') and i.acode=p.acode and i.client_id=p.client_id " +
                                     "and i.client_unit_id=p.client_unit_id " +
                                     "where (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) in ('" + URL + "')";
                            }
                            else if (model[0].Col12 == "09")//with rgp
                            {
                                mq = "select p.vch_num po_Number,to_char(convert_tz(p.vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') po_Date,p.icode ICode,it.iname IName," +
                                   "it.cpartno PartNo,um.master_name UOM,hsn.master_name HSN,hsn.group_name TaxRate,p.iremark iremark,nvl(location_name('" + clientid_mst + "'||'" + unitid_mst + "'||itb.loc),'-') location," +
                                   "'0' irate,'-' disc_type,'0' disc_rate,'0' iamount,'0' taxamount,'0' discamount,'0' lineamount,'0' as qtystk," +
                                   "(case when to_number(s.Received)=0 then to_number(p.qtychl) else (to_number(p.qtyin)-to_number(s.Received)) end) qtychl," +
                                   "(case when to_number(s.Received) = 0 then to_number(p.qtyin) else (to_number(p.qtyin) - to_number(s.Received)) end) qtyin " +
                                   "from itransactionc p " +
                                   "inner join item it on it.icode=p.icode and it.type='IT' and find_in_set(p.client_unit_id,it.client_unit_id)=1 " +
                                   "inner join itbal itb on it.icode=itb.icode and it.type=itb.type and find_in_set(itb.client_unit_id,it.client_unit_id)=1 " +
                                   "inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,'" + unitid_mst + "')=1 " +
                                   "inner join master_setting hsn on hsn.master_id=it.hsno and hsn.type='HSN' and find_in_set(hsn.client_unit_id,'" + unitid_mst + "')=1 " +
                                   "left join (select t.type,t.client_unit_id,t.icode, sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout, 0)) Issued from itransaction t " +
                                   "where trim(t.store) = 'Y' group by t.type,t.icode,t.client_unit_id) s on p.icode = s.icode and s.type = 'Q09' and p.client_unit_id = s.client_unit_id " +
                                   "where (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) in ('" + URL + "') and p.store='Y'";
                            }
                            else if (model[0].Col12 == "08")//stn
                            {
                                mq = "select a.*,'0' qtyord,'0' ind_no,'0' lineamount,'-' iremark,'-' ind_date,'0' qtyin,'0' Qty_Req_bal,'0' irate,'-' disc_type,'0' irate,0 disc_rate,'0' iamount,'0' taxamount,'0' discamount from " +
                                    "(select it.client_id || it.client_unit_id||cl.interunit || it.icode || to_char(it.vch_date, 'yyyymmdd') || it.type as fstr," +
                                    "it.icode as Icode,it.iname as Iname,nvl(location_name('" + clientid_mst + "'||'" + unitid_mst + "'||itb.loc),'0') as location,it.cpartno Partno, um.master_name as UOM,hsn.master_name as hsn,hsn.group_name taxrate," +
                                    "(st.qtyout - nvl(sn.used_qty, 0)) as qtychl,s.closing as qty_in_stock,st.vch_num as PO_Number,to_char(st.vch_date,'" + sgen.Getsqldateformat() + "') as PO_Date, st.qtyout,cl.c_name as party_name,cl.vch_num as party_code," +
                                    "cl.interunit from itransaction st inner join clients_mst cl on cl.vch_num = st.acode and" +
                                    " find_in_set(st.client_unit_id,cl.client_unit_id)=1 inner join item it on it.icode = st.icode and find_in_set(it.client_unit_id " +
                                    ",st.client_unit_id)=1 left join master_setting um on um.master_id = it.uom and um.type = 'UMM' and" +
                                    " find_in_set(um.client_unit_id, it.client_unit_id)= 1" +
                                    " left join master_setting hsn on hsn.master_id = it.hsno and hsn.type = 'HSN' and find_in_set(hsn.client_id, it.client_id)= 1" +
                                    " and find_in_set(hsn.client_unit_id, it.client_unit_id)= 1 left join(select sum(qtychl) as used_qty ,icode,pono from " +
                                    "itransaction where client_id = '" + clientid_mst + "' and type = '08' group by icode,pono) sn on sn.icode = st.icode" +
                                    " and sn.pono=st.vch_num left join(select t.client_unit_id, t.icode, sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout, 0)) as Issued,sum(nvl(t.qtyin, 0)) " +
                                    "- sum(nvl(t.qtyout, 0)) as closing from itransaction t where trim(t.store) = 'Y' group by" +
                                    " t.icode,t.client_unit_id ) s on it.icode = s.icode and find_in_set(it.client_unit_id, s.client_unit_id)=1" +
                                    " inner join itbal itb on it.icode=itb.icode and it.type=itb.type and find_in_set(itb.client_unit_id,it.client_unit_id)=1" +
                                    " where st.type = 'ST' and st.client_id = '" + clientid_mst + "') a where a.fstr in '" + URL + "'";
                            }
                            else
                            {
                                mq = "select it.icode as icode,it.iname as iname,it.cpartno partno,um.master_name as UOM,hsn.master_name as hsn,hsn.group_name taxrate,'0' qtychl,nvl(s.closing,'0') qtystk," +
                                    "'0' qtyin,'0' irate,'-' disc_type,0 disc_rate,'0' iamount,'0' taxamount,'0' discamount,'0' lineamount,'-' iremark,'0' PO_Number,'-' PO_Date,nvl(location_name('" + clientid_mst + "'||'" + unitid_mst + "'||itb.loc),'-') as location,s.btchno batchno from item it " +
                                    "left join itbal itb on it.icode=itb.icode and it.type=itb.type and find_in_set(itb.client_unit_id,it.client_unit_id)=1 " +
                                    "left join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,'" + unitid_mst + "')=1 " +
                                    "left join master_setting hsn on hsn.master_id=it.hsno and hsn.type='HSN' and find_in_set(hsn.client_unit_id,'" + unitid_mst + "')=1 " +
                                    "left join (select icode,client_unit_id,btchno,sum(qtyin) qtyin,sum(qtyout) out,sum(qtyin)-sum(qtyout) closing,sum(pktno) pktno from " +
                                    "(select icode,client_unit_id,to_number(qtyin) qtyin,to_number(qtyout) qtyout,(case when substr(type, 1, 1) in " +
                                    "('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end) pktno,btchno from itransaction " +
                                    "where trim(store) = 'Y') a group by icode, client_unit_id,btchno) s on it.icode = s.icode and find_in_set(s.client_unit_id, it.client_unit_id)=1 " +
                                    "where (it.icode||to_char(it.vch_date,'yyyymmdd')||it.type) in ('" + URL + "')";

                                //                                mq = "select it.icode as icode,it.iname as iname,it.cpartno partno,um.master_name as UOM,hsn.master_name as hsn,hsn.group_name taxrate,'0' qtychl,nvl(s.closing,'0') qtystk," +
                                //                                   "'0' qtyin,'0' irate,'-' disc_type,0 disc_rate,'0' iamount,'0' taxamount,'0' discamount,'0' lineamount,'-' iremark,'0' PO_Number,'-' PO_Date,nvl(location_name('" + clientid_mst + "'||'" + unitid_mst + "'||itb.loc),'-') as location from item it " +

                                //<<<<<<< HEAD
                                //                                                                   "left join itbal itb on it.icode=itb.icode and it.type=itb.type and find_in_set(it.client_id,itb.client_id)=1 and find_in_set(itb.client_unit_id,it.client_unit_id)=1 " +
                                //                                                                   "left join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_id,'" + clientid_mst + "')=1 and find_in_set(um.client_unit_id,'" + unitid_mst + "')=1 " +
                                //                                                                   "left join master_setting hsn on hsn.master_id=it.hsno and hsn.type='HSN' and find_in_set(hsn.client_id,'" + clientid_mst + "')=1 and find_in_set(hsn.client_unit_id,'" + unitid_mst + "')=1 " +

                                //                               =======
                                //                                                                   "inner join itbal itb on it.icode=itb.icode and it.type=itb.type and find_in_set(it.client_id,itb.client_id)=1 and find_in_set(itb.client_unit_id,it.client_unit_id)=1 " +
                                //                                                                   "inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_id,'" + clientid_mst + "')=1 and find_in_set(um.client_unit_id,'" + unitid_mst + "')=1 " +
                                //                                                                   "inner join master_setting hsn on hsn.master_id=it.hsno and hsn.type='HSN' and find_in_set(hsn.client_id,'" + clientid_mst + "')=1 and find_in_set(hsn.client_unit_id,'" + unitid_mst + "')=1 " +
                                //                                                                   "inner join (select t.client_unit_id, t.icode, sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout, 0)) as Issued,sum(nvl(t.qtyin, 0)) - sum(nvl(t.qtyout, 0)) closing from itransaction t " +
                                //                                                                   "where trim(t.store) = 'Y' group by t.icode,t.client_unit_id ) s on it.icode = s.icode and find_in_set(s.client_unit_id, it.client_unit_id)=1 " +

                                //                               >>>>>>> 2efd5d4ee19dc9e95b22b46e8eb9786b240a3076
                                //                                                                    "where (it.icode||to_char(it.vch_date,'yyyymmdd')||it.type) in ('" + URL + "')";
                            }
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                try
                                {
                                    if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt1.Rows.RemoveAt(0); }
                                    for (int i = 0; i < dtt.Rows.Count; i++)
                                    {
                                        DataRow dr = model[0].dt1.NewRow();
                                        dr["SNo"] = i + 1;
                                        dr["Icode"] = dtt.Rows[i]["icode"].ToString();
                                        dr["IName"] = dtt.Rows[i]["iname"].ToString();
                                        dr["PARTNO"] = dtt.Rows[i]["partno"].ToString();
                                        dr["HSN"] = dtt.Rows[i]["hsn"].ToString();
                                        dr["UOM"] = dtt.Rows[i]["uom"].ToString();
                                        dr["taxrate"] = dtt.Rows[i]["taxrate"].ToString();
                                        dr["Qty_chl"] = dtt.Rows[i]["qtychl"].ToString();
                                        dr["qty_in"] = dtt.Rows[i]["qtyin"].ToString();
                                        dr["iRate"] = dtt.Rows[i]["irate"].ToString();
                                        dr["disc_type"] = dtt.Rows[i]["disc_type"].ToString();
                                        dr["disc_rate"] = dtt.Rows[i]["disc_rate"].ToString();
                                        dr["iamount"] = dtt.Rows[i]["iamount"].ToString();
                                        dr["taxamount"] = dtt.Rows[i]["taxamount"].ToString();
                                        dr["discamount"] = dtt.Rows[i]["discamount"].ToString();
                                        dr["lineamount"] = dtt.Rows[i]["lineamount"].ToString();
                                        dr["Remark"] = dtt.Rows[i]["iremark"].ToString();
                                        dr["PO_Number"] = dtt.Rows[i]["PO_Number"].ToString();
                                        dr["PO_Date"] = dtt.Rows[i]["PO_Date"].ToString();
                                        dr["location"] = dtt.Rows[i]["location"].ToString();
                                        dr["Qtystk"] = dtt.Rows[i]["qtystk"].ToString();
                                        dr["Noofpkt_box"] = "0";
                                        model[0].dt1.Rows.Add(dr);
                                    }
                                    model[0].dt1.AcceptChanges();
                                }
                                catch (Exception ex) { ViewBag.scripCall = "showmsgJS(1," + ex.Message.ToString().Replace('\'', ' ') + ",0);"; }
                            }
                            break;
                        case "PRINT":
                            mq = "select p.invno,location_name(itb.client_id||itb.client_unit_id||itb.loc) loc,REPLACE(ud.FIRST_NAME|| ' '|| ud.MIDDLE_NAME|| ' '|| ud.last_name,'0','') created_by,p.totremark," +
                                "p.vch_num,p.vehno,p.type,m.master_name as mrntype,p.qtyrcvd,p.ewayno,p.chlno,p.icode,p.taxrate,p.qtychl,p.qtyin,p.pono,to_char(convert_tz(p.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') vch_date1," +
                                "to_char(convert_tz(p.chldate, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') chldate1," +
                                "to_char(convert_tz(p.invdate, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') invdate1," +
                                "to_char(convert_tz(p.ewaydate, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') ewaydate1," +
                                "to_char(convert_tz(p.podate, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') podate1,c_name name," +
                                "i.cpartno,i.iname,i.partname,um.master_name UOM,hsn.master_name hsn from itransaction p " +
                                "inner join item i on p.icode=i.icode and i.type='IT' and find_in_set(i.client_unit_id,p.client_unit_id)=1 " +
                                "inner join itbal itb on i.icode=itb.icode and i.type=itb.type and find_in_set(itb.client_unit_id,i.client_unit_id)=1 " +
                                "inner join clients_mst c on p.acode=c.vch_num and find_in_set(c.client_unit_id,p.client_unit_id)=1 and substr(c.vch_num,0,3)='203' and c.type='BCD' " +
                                "inner join master_setting um on um.master_id=i.uom and um.type='UMM' and find_in_set(um.client_unit_id,'" + unitid_mst + "')=1 " +
                                "inner join master_setting hsn on hsn.master_id=i.hsno and hsn.type='HSN' and find_in_set(hsn.client_unit_id,'" + unitid_mst + "')=1 " +
                                "inner join user_details ud on p.ent_by = ud.vch_num and ud.type = 'CPR' " +
                                "inner join master_setting m on m.master_id = p.type and m.type = 'KMR' and find_in_set(m.client_unit_id,p.client_unit_id)= 1 " +
                                "where (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date, 'yyyymmdd')||p.type) = '" + URL + "'";
                            DataSet ds = new DataSet();
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                DataTable qrdt = new DataTable();
                                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.gin_no2(userCode, unitid_mst);
                                qrdt = dtt.Copy();
                                qrdt.Columns.Add("qrimg", typeof(Byte[]));
                                foreach (DataRow dr in qrdt.Rows)
                                {
                                    string code = dr["icode"].ToString() + "\n" + dr["iname"].ToString();
                                    QRCodeGenerator qrGenerator = new QRCodeGenerator();
                                    QRCodeGenerator.QRCode qrCode = qrGenerator.CreateQrCode(code, QRCodeGenerator.ECCLevel.Q);
                                    System.Web.UI.WebControls.Image imgBarCode = new System.Web.UI.WebControls.Image();
                                    imgBarCode.Height = 150;
                                    imgBarCode.Width = 150;
                                    using (Bitmap bitMap = qrCode.GetGraphic(20))
                                    {
                                        using (MemoryStream ms = new MemoryStream())
                                        {
                                            bitMap.Save(ms, System.Drawing.Imaging.ImageFormat.Png);
                                            byte[] byteImage = ms.ToArray();
                                            dr["qrimg"] = byteImage;
                                            //imgBarCode.ImageUrl = "data:image/png;base64," + Convert.ToBase64String(byteImage);
                                        }
                                        //plBarCode.Controls.Add(imgBarCode);
                                    }
                                }
                                qrdt.AcceptChanges();
                                qrdt.TableName = "prepcur";
                                ds.Tables.Add(qrdt);
                                sgen.open_report_byDs_xml(userCode, ds, "mrn_report", "MRN Detail");
                                //ViewBag.scripCall = "OpenSingle('../../../../../erp/schoolReports_Rpts/Filter_Report_xml.aspx','95%','900px','Reports');";
                                //ViewBag.scripCall += "disableForm();";
                                ViewBag.scripCall += "showRptnew('MRN Detail');disableForm();";
                                ViewBag.vnew = "";
                                ViewBag.vedit = "";
                                ViewBag.vsave = "disabled='disabled'";
                            }
                            break;
                        case "CHRGS":
                            mq = "select master_id,master_name from master_setting where (master_id||to_char(vch_date,'yyyymmdd')||type) in ('" + URL + "')";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                int i = 0;
                                if (model[0].LTM1 == null) { model[0].LTM1 = new List<Tmodelmain>(); }
                                if (model[0].LTM1.Count == 0) { model[0].LTM1 = new List<Tmodelmain>(); }
                                else i = model[0].LTM1.Count;
                                foreach (DataRow dr in dtt.Rows)
                                {
                                    i++;
                                    model[0].LTM1.Add(new Tmodelmain
                                    {
                                        Col14 = i.ToString(),
                                        Col15 = dr["master_id"].ToString(),
                                        Col23 = dr["master_name"].ToString(),
                                        Col16 = "0",
                                        Col17 = "0",
                                        Col18 = "0",
                                        Col19 = "0",
                                        Col20 = "0",
                                        Col21 = "0",
                                        Col22 = "0",
                                    });
                                }
                            }
                            break;
                        case "CHRGDEL":
                            if (sgen.GetSession(MyGuid, "mrndelrno") != null)
                            {
                                var mrno = sgen.GetSession(MyGuid, "mrndelrno").ToString();
                                var LTM = model[0].LTM1;
                                for (int d = 0; d < LTM.Count; d++)
                                {
                                    string chrgno = LTM[d].Col14;
                                    if (chrgno.Trim() == mrno.Trim()) { model[0].LTM1.RemoveAt(d); }
                                }
                                sgen.SetSession(MyGuid, "mrndelrno", null);
                            }
                            break;
                        case "RATE":
                            if (sgen.GetSession(MyGuid, "rtrno") == null)
                            {
                                ViewBag.scripCall += "showmsgJS(1,'Rno not defined', 0);";
                                return model;
                            }
                            var rno = sgen.Make_int(sgen.GetSession(MyGuid, "rtrno").ToString());
                            mq = "select master_id DocNo,group_name TaxRate from master_setting where (master_id||to_char(vch_date,'yyyymmdd')||type)='" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                var utgst = "";
                                model[0].LTM1[rno - 1].Col13 = dtt.Rows[0]["DocNo"].ToString().Trim();
                                try { utgst = model[0].Col18.Substring(0, 2).Trim(); }
                                catch (Exception ex) { utgst = model[0].Col18; }
                                var pgst = model[0].Col22.Substring(0, 2).Trim();
                                if (utgst == pgst)
                                {
                                    var amt = sgen.Make_decimal(model[0].LTM1[rno - 1].Col16);
                                    var rt = sgen.Make_decimal(dtt.Rows[0]["TaxRate"].ToString().Trim().Split('%')[0].Trim());
                                    var amtrt = (amt * rt) / 100;
                                    model[0].LTM1[rno - 1].Col19 = (rt / 2).ToString() + "%";
                                    model[0].LTM1[rno - 1].Col20 = (amtrt / 2).ToString();
                                    model[0].LTM1[rno - 1].Col21 = (rt / 2).ToString() + "%";
                                    model[0].LTM1[rno - 1].Col22 = (amtrt / 2).ToString();
                                }
                                else
                                {
                                    var amt = sgen.Make_decimal(model[0].LTM1[rno - 1].Col16);
                                    var rt = sgen.Make_decimal(dtt.Rows[0]["TaxRate"].ToString().Trim().Split('%')[0].Trim());
                                    var amtrt = (amt * rt) / 100;
                                    model[0].LTM1[rno - 1].Col17 = rt.ToString() + "%";
                                    model[0].LTM1[rno - 1].Col18 = amtrt.ToString();
                                }
                                decimal bamt = sgen.Make_decimal(model[0].Col33);//basicamt
                                decimal bigst = sgen.Make_decimal(model[0].Col34);//basicigst
                                decimal bcgst = sgen.Make_decimal(model[0].Col35);//basiccgst
                                decimal bsgst = sgen.Make_decimal(model[0].Col36);//basicsgst
                                decimal tamt = 0, tigst = 0, tcgst = 0, tsgst = 0;
                                for (int i = 0; i < model[0].LTM1.Count; i++)
                                {
                                    tamt = tamt + sgen.Make_decimal(model[0].LTM1[i].Col16);//chrgamt
                                    tigst = tigst + sgen.Make_decimal(model[0].LTM1[i].Col18);//chrgigst
                                    tcgst = tcgst + sgen.Make_decimal(model[0].LTM1[i].Col20);//chrgcgst
                                    tsgst = tsgst + sgen.Make_decimal(model[0].LTM1[i].Col22);//chrgsgst
                                }
                                model[0].Col37 = (bamt + tamt).ToString();//totamount
                                model[0].Col38 = (bigst + tigst).ToString();//totigst
                                model[0].Col39 = (bcgst + tcgst).ToString();//totcgst
                                model[0].Col40 = (bsgst + tsgst).ToString();//totsgst
                                model[0].Col50 = (bamt + tamt + bigst + tigst + bcgst + tcgst + bsgst + tsgst).ToString();//netamt
                            }
                            break;
                        case "RGP":
                            mq = "select p.vch_num from itransactionc p where (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type)='" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                //model[0].Col71;
                            }
                            break;
                    }
                    break;
                #endregion
                #region invreps
                case "invreps":
                    try
                    {
                        fdt = sgen.GetSession(MyGuid, "KPDFDT").ToString();
                        tdt = sgen.GetSession(MyGuid, "KPDTDT").ToString();
                    }
                    catch (Exception er) { }
                    switch (btnval.ToUpper())
                    {
                        case "ISUM":
                            Make_query(viewName, "Detailed Item Transactions", "IDET", "0", URL, fdt + "!~!~!~!~!" + tdt);
                            ViewBag.scripCall = "callFoo('Detailed Item Transactions');";
                            break;
                        case "IFIFO":
                            DataTable dtin = new DataTable();
                            DataTable dtout = new DataTable();
                            DataTable dtavg = new DataTable();
                            decimal qtyout = 0, qtyin = 0, cl = 0, bal = 0, rt = 0, totamt = 0, totqty = 0, myrate = 0, amt = 0;
                            mq1 = "select group_name evaltype from master_setting mg where md.subjectid='" + URL.Substring(0, 1).Trim() + "'";
                            mq1 = sgen.seekval(userCode, mq1, "evaltype");//evaluation type
                            if (mq1.Trim() == "0")
                            {
                                mq1 = "select master_name evaltype from master_setting where type='CF0' and client_unit_id='" + unitid_mst + "'";
                                mq1 = sgen.seekval(userCode, mq1, "evaltype");//evaluation type
                                if (mq1.Trim() == "0")
                                {
                                    ViewBag.scripCall += "mytoast('warning', 'toast-top-right', 'Please create master of inventory evaluation');";
                                    return model;
                                }
                            }
                            if (mq1.Trim() == "002")
                            {
                                mq = "select i.rec_id,i.vch_num,i.vch_date,i.type,i.icode,i.qtyin,i.qtyout,i.irate,i.iamount,'0' cl,'0' bal from itransaction i " +
                                    "where (it.icode||it.client_id||it.client_unit_id)='" + URL + "' and i.type in ('Q01','Q02','36','10','11','30','32','21','22') and i.store='Y' " +
                                    "order by i.vch_date,i.type asc"; //mrn_w_po,w/o_po,openg,return both,issue both,rgp,nrgp
                                dtavg = sgen.getdata(userCode, mq); //in
                                if (dtavg.Rows.Count <= 0)
                                {
                                    ViewBag.scripCall += "mytoast('warning', 'toast-top-right', 'No data found for IN OUT Stock');";
                                    return model;
                                }
                            }
                            else if (mq1.Trim() == "001")
                            {
                                mq = "select i.rec_id,i.vch_num,i.vch_date,i.type,i.icode,i.qtyin,i.qtyout,i.irate,i.iamount,'0' cl,'0' bal from itransaction i " +
                                    "where (i.icode||i.client_id||i.client_unit_id)='" + URL + "' and i.type in ('Q01','Q02','36') and i.store='Y' " +
                                    "order by i.vch_date,i.type asc"; //mrn_w_po,w/o_po,openg
                                dtin = sgen.getdata(userCode, mq); //in
                                if (dtin.Rows.Count <= 0)
                                {
                                    ViewBag.scripCall += "mytoast('warning', 'toast-top-right', 'No data found for IN Stock');";
                                    return model;
                                }
                                mq0 = "select i.rec_id,i.vch_num,i.vch_date,i.type,i.icode,i.qtyin,i.qtyout,i.irate,i.iamount,'0' cl,'0' bal from itransaction i " +
                                    "where (i.icode||i.client_id||i.client_unit_id) in ('" + URL + "') and type in ('10','11','30','32','21','22') and i.store='Y' " +
                                    "order by i.vch_date,i.type asc";//gen_ret,agnst_issue,w_req,w/o_req,rgp,nrgp
                                dtout = sgen.getdata(userCode, mq0); //out
                                if (dtout.Rows.Count <= 0)
                                {
                                    ViewBag.scripCall += "mytoast('warning', 'toast-top-right', 'No data found for OUT Stock');";
                                    return model;
                                }
                            }
                            //fifo
                            if (mq1.Trim() == "001")
                            {
                                List<string> recs = new List<string>();
                                mq = "UPDATE itransaction SET irate = CASE";
                                mq1 = "UPDATE itransaction SET iamount = CASE";
                                for (int o = 0; o < dtout.Rows.Count; o++) //out dt
                                {
                                    if (dtout.Rows[o]["type"].ToString().StartsWith("1"))
                                    {
                                        totamt = 0; totqty = 0;
                                        qtyin = sgen.Make_decimal(dtout.Rows[o]["qtyin"].ToString());
                                        for (int i = 0; i < dtout.Rows.Count; i++) //in dt
                                        {
                                            qtyout = sgen.Make_decimal(dtout.Rows[i]["qtyout"].ToString());
                                            cl = sgen.Make_decimal(dtout.Rows[i]["cl"].ToString());
                                            rt = sgen.Make_decimal(dtout.Rows[i]["irate"].ToString());
                                            bal = qtyout - cl;
                                            if (bal == qtyin)
                                            {
                                                totqty = totqty + qtyin;
                                                dtout.Rows[i]["cl"] = qtyout;//in bal
                                                totamt += rt * qtyin;
                                                qtyin = 0;
                                            }
                                            else if (bal > qtyin)
                                            {
                                                totqty += qtyin;
                                                dtout.Rows[i]["cl"] = cl + qtyin;//in bal
                                                totamt += rt * qtyin;
                                                qtyin = 0;
                                            }
                                            else if (bal < qtyin)
                                            {
                                                totqty += bal;
                                                dtout.Rows[i]["cl"] = cl + bal;//in bal
                                                totamt += rt * bal;
                                                qtyin = qtyin - bal;
                                            }
                                            if (qtyin == 0) break;
                                        }
                                        myrate = totamt / totqty;
                                        dtout.Rows[o]["irate"] = myrate;
                                        dtout.Rows[o]["iamount"] = totamt;//out amt
                                    }
                                    else
                                    {
                                        totamt = 0; totqty = 0;
                                        qtyout = sgen.Make_decimal(dtout.Rows[o]["qtyout"].ToString());
                                        for (int i = 0; i < dtin.Rows.Count; i++) //in dt
                                        {
                                            qtyin = sgen.Make_decimal(dtin.Rows[i]["qtyin"].ToString());
                                            cl = sgen.Make_decimal(dtin.Rows[i]["cl"].ToString());
                                            rt = sgen.Make_decimal(dtin.Rows[i]["irate"].ToString());
                                            bal = qtyin - cl;
                                            if (bal == qtyout)
                                            {
                                                totqty = totqty + qtyout;
                                                dtin.Rows[i]["cl"] = qtyin;//in bal
                                                totamt += rt * qtyout;
                                                qtyout = 0;
                                            }
                                            else if (bal > qtyout)
                                            {
                                                totqty += qtyout;
                                                dtin.Rows[i]["cl"] = cl + qtyout;//in bal
                                                totamt += rt * qtyout;
                                                qtyout = 0;
                                            }
                                            else if (bal < qtyout)
                                            {
                                                totqty += bal;
                                                dtin.Rows[i]["cl"] = cl + bal;//in bal
                                                totamt += rt * bal;
                                                qtyout = qtyout - bal;
                                            }
                                            if (qtyout == 0) break;
                                        }
                                        myrate = totamt / totqty;
                                        dtout.Rows[o]["irate"] = myrate;
                                        dtout.Rows[o]["iamount"] = totamt;//out amt
                                    }
                                    string rec = dtout.Rows[o]["recid"].ToString();
                                    recs.Add(rec);
                                    mq += " WHEN rec_id = '" + rec + "' THEN " + myrate + "";
                                    mq1 += " WHEN rec_id = '" + rec + "' THEN " + totamt + "";
                                }
                                mq += " where rec_id in (" + string.Join("','", recs) + "'";
                                mq1 += " where rec_id in (" + string.Join("','", recs) + "'";
                                sgen.execute_cmd(userCode, mq);
                                sgen.execute_cmd(userCode, mq1);
                            }
                            //average moving price
                            else if (mq1.Trim() == "002")
                            {
                                dtin = dtavg.Select("type in ('Q01','Q02','36')").CopyToDataTable();
                                dtout = dtavg.Select("type in ('10','11','30','32','21','22')").CopyToDataTable();
                                List<string> recs = new List<string>();
                                mq = "UPDATE itransaction SET irate = CASE";
                                mq1 = "UPDATE itransaction SET iamount = CASE";
                                for (int o = 0; o < dtout.Rows.Count; o++) //out dt
                                {
                                    var dtin_t = dtin.AsEnumerable().Where(w => w.Field<DateTime>("vch_date") <= ((DateTime)dtout.Rows[o]["vch_date"])).CopyToDataTable();
                                    DataTable dtttt = new DataTable();
                                    dtttt.Columns.Add("totqty");
                                    dtttt.Columns.Add("totamt");
                                    var t1 = dtin_t.AsEnumerable().GroupBy(k => new
                                    {
                                        icode = k.Field<string>("icode")
                                    });
                                    var t2 = t1.Select(c =>
                                    {
                                        var row = dtttt.NewRow();
                                        row["icode"] = c.Key.icode;
                                        row["totqty"] = c.Sum(k => k.Field<decimal>("qtyin"));
                                        row["totamt"] = c.Sum(k => k.Field<decimal>("iamount"));
                                        return row;
                                    });
                                    dtttt = t2.CopyToDataTable();
                                    totamt = 0; totqty = 0;
                                    qtyout = sgen.Make_decimal(dtout.Rows[o]["qtyout"].ToString());
                                    bal = sgen.Make_decimal(dtttt.Rows[0][0].ToString());
                                    amt = sgen.Make_decimal(dtttt.Rows[0][1].ToString());
                                    rt = amt / bal;
                                    //myrate = totamt / totqty;
                                    dtout.Rows[o]["irate"] = rt;
                                    dtout.Rows[o]["iamount"] = qtyout * rt;//out amt
                                    string rec = dtout.Rows[o]["recid"].ToString();
                                    recs.Add(rec);
                                    mq += " WHEN rec_id = '" + rec + "' THEN " + myrate + "";
                                    mq1 += " WHEN rec_id = '" + rec + "' THEN " + totamt + "";
                                }
                                mq += " where rec_id in (" + string.Join("','", recs) + "'";
                                mq1 += " where rec_id in (" + string.Join("','", recs) + "'";
                                sgen.execute_cmd(userCode, mq);
                                sgen.execute_cmd(userCode, mq1);
                            }
                            break;
                        case "ILEDGER":
                            mq = "select (t.icode||t.client_id||t.client_unit_id) fstr,t.vch_num,to_char(convert_tz(t.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') vch_date," +
                                "t.client_id,t.client_unit_id,t.type,t.ewayno billno, to_char(convert_tz(t.ewaydate, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') billdate," +
                                "t.icode,i.iname,i.cpartno,um.master_name uom,to_number(t.irate) rate,to_number(t.iamount) amount,to_number(t.qtyin) Received,to_number(t.qtyout) Issued," +
                                "(case when t.type in ('36', '30', '32', '10', '11') then t.deptno when t.type in ('Q01', 'Q02', '21', '22') then t.acode else '-' end) partycode," +
                                "(case when t.type in ('36', '30', '32', '10', '11') then nvl(d.master_name, '-') when t.type in ('Q01', 'Q02', '21', '22') then vd.c_name else '-' end) partyname " +
                                "from itransaction t " +
                                "inner join item i on t.icode = i.icode and i.type = 'IT' and find_in_set(t.client_unit_id,i.client_unit_id)=1 " +
                                "left join master_setting um on um.master_id = i.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, i.client_unit_id)= 1 " +
                                "left join master_setting d on d.master_id = t.deptno and d.Type = 'MDP' and find_in_set(d.client_unit_id, t.client_unit_id)= 1 " +
                                "left join clients_mst vd on t.acode = vd.vch_num and substr(vd.vch_num,0,3)='203' and vd.type = 'BCD' and find_in_set(t.client_unit_id,vd.client_unit_id)=1 " +
                                "where (t.icode || t.client_id || t.client_unit_id) in ('" + URL + "') and t.type in ('Q01', 'Q02', '36', '10', '11', '30', '32', '21', '22') " +
                                "and t.store = 'Y' order by t.vch_date,t.type asc";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0) { sgen.open_report_bydt_xml(userCode, dt, "iledger", "Item Ledger"); }
                            //ViewBag.scripCall = "OpenSingle('../../../../../erp/schoolReports_Rpts/Filter_Report_xml.aspx','95%','900px','Reports');";
                            ViewBag.scripCall += "showRptnew('Item Ledger');disableForm();";
                            break;
                        case "PPO":
                            Make_query(viewName, "Detailed Pending PO", "PPODET", "0", URL, "");
                            ViewBag.scripCall = "callFoo('Detailed Pending PO');";
                            break;
                        case "STKMM":
                            mq = "select t.icode fstr,t.icode Item_Code,i.iname Item_Name,gd.master_name Maingrp,mg.master_name Itemgrp,sg.iname Itemsubgrp,t.vch_num DocNo," +
                                "to_char(t.vch_date,'" + sgen.Getsqldateformat() + "') Dated,i.cpartno PartNo,t.type Type,to_number(t.qtyin) Received," +
                                "to_number(t.qtyout) Issued,to_number(t.irate) Rate,to_number(t.iamount) Amount,nvl(d.master_name,'-') Department," +
                                "nvl(t.pktno,0) pktno from itransaction t " +
                              "inner join item i on t.icode=i.icode and i.type='IT' and find_in_set(i.client_unit_id,t.client_unit_id)=1 " +
                              "left join master_setting d on d.master_id=t.deptno and d.Type='MDP' and d.client_unit_id=t.client_unit_id " +
                              "inner join master_setting gd on gd.classid = SUBSTR(i.icode, 1, 1) and gd.type = 'KGP' " +
                              "inner join master_setting mg on mg.master_id = substr(i.icode, 1, 3) and mg.type = 'KIG' and find_in_set(mg.client_unit_id,i.client_unit_id)=1 " +
                              "inner join item sg on sg.icode = substr(i.icode, 1, 5) and sg.type = 'SG' and find_in_set(sg.client_unit_id,i.client_unit_id)=1 " +
                              "where concat(t.client_unit_id,t.icode) in ('" + URL + "') and t.store='Y' and to_date(to_char(t.vch_date,'" + sgen.Getsqldateformat() + "'),'" + sgen.Getsqldateformat() + "') between " +
                              "to_date('" + fdt + "','" + sgen.Getsqldateformat() + "') and to_date('" + tdt + "','" + sgen.Getsqldateformat() + "') order by t.icode,t.vch_date asc";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0) { sgen.open_report_bydt_xml(userCode, dt, "stkmm", "Stock Moment Summary"); }
                            ViewBag.scripCall += "showRptnew('Stock Moment Summary');";
                            break;
                    }
                    break;
                #endregion
                #region mat_req
                case "mat_req":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            mq = @"select a.*,to_char(convert_tz(vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') vch_date1 from itransactionc a " +
                                "where (client_id||client_unit_id||vch_num|| to_char(vch_date, 'yyyymmdd')||type)='" + URL + "'";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "EDMODE", "Y");
                                DataTable dt2 = new DataTable();
                                #region getdept
                                TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1 = cmd_Fun.dept(userCode, clientid_mst, unitid_mst);
                                #endregion
                                #region getdesig
                                TempData[MyGuid + "_Tlist2"] = model[0].TList2 = mod2 = cmd_Fun.desig(userCode, unitid_mst);
                                #endregion
                                model[0].Col1 = dt.Rows[0]["client_id"].ToString();
                                model[0].Col2 = dt.Rows[0]["client_unit_id"].ToString();
                                model[0].Col3 = dt.Rows[0]["ent_by"].ToString();
                                model[0].Col4 = dt.Rows[0]["ent_date"].ToString();
                                model[0].Col5 = dt.Rows[0]["edit_by"].ToString();
                                model[0].Col6 = dt.Rows[0]["edit_date"].ToString();
                                model[0].Col8 = "(client_id||client_unit_id||vch_num|| to_char(vch_date, 'yyyymmdd')||type) = '" + URL + "'";
                                model[0].Col9 = tm.Col9;
                                model[0].Col10 = tm.Col10;
                                model[0].Col11 = tm.Col11;
                                model[0].Col12 = dt.Rows[0]["type"].ToString();
                                model[0].Col13 = "Update";
                                model[0].Col100 = "Update & New";
                                model[0].Col121 = "U";
                                model[0].Col122 = "<u>U</u>pdate";
                                model[0].Col123 = "Update & Ne<u>w</u>";
                                model[0].Col14 = tm.Col14;
                                model[0].Col15 = tm.Col15;
                                model[0].Col18 = dt.Rows[0]["vch_num"].ToString();
                                model[0].Col20 = dt.Rows[0]["vch_date1"].ToString();
                                model[0].Col21 = dt.Rows[0]["totremark"].ToString();
                                model[0].Col22 = dt.Rows[0]["pono"].ToString();//orderid
                                model[0].Col23 = dt.Rows[0]["req_by"].ToString();//orderid
                                model[0].Col9 = sgen.seekval(userCode, "select upper(master_name) master_name from master_setting where master_id='" + dt.Rows[0]["type"].ToString() + "'", "master_name");
                                sgen.SetSession(MyGuid, "KRQTYPE", dt.Rows[0]["type"].ToString());
                                model[0].SelectedItems1 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["deptno"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems2 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["desig"].ToString()).Distinct()).Split(',');
                                model[0].dt1 = model[0].dt1.Clone();
                                //model[0].dt1 = ((DataTable)Session["dtbase"]).Clone();
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["sno"] = i + 1;
                                    dr["IName"] = dt.Rows[i]["iname"].ToString();
                                    dr["Icode"] = dt.Rows[i]["icode"].ToString();
                                    dr["HSN"] = dt.Rows[i]["hsno"].ToString();
                                    dr["UOM"] = dt.Rows[i]["uom"].ToString();
                                    dr["partno"] = dt.Rows[i]["cpartno"].ToString();
                                    dr["Qty_in_stock"] = dt.Rows[i]["qtystk"].ToString();
                                    dr["Qty_Req"] = dt.Rows[i]["qtychl"].ToString();
                                    dr["Remark"] = dt.Rows[i]["iremark"].ToString();
                                    model[0].dt1.Rows.Add(dr);
                                }
                            }
                            break;
                        case "NEW":
                            mq = "select master_id,upper(master_name) master_name,to_char(convert_tz(utc_timestamp(),'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') req_date " +
                                "from master_Setting where (master_id||to_char(vch_date, 'yyyymmdd')||type) = '" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "EDMODE", "N");
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                                ViewBag.scripCall = "enableForm();";
                                mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + dtt.Rows[0]["master_id"].ToString() + "'" + model[0].Col11.Trim() + "";
                                vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                                model[0].Col18 = vch_num;
                                model[0].Col20 = dtt.Rows[0]["req_date"].ToString();
                                model[0].Col12 = dtt.Rows[0]["master_id"].ToString();
                                sgen.SetSession(MyGuid, "KRQTYPE", dtt.Rows[0]["master_id"].ToString());
                                model[0].Col17 = "1";
                                model[0].Col9 = dtt.Rows[0]["master_name"].ToString();
                                #region getdept
                                defval = "";
                                TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1 = cmd_Fun.dept(userCode, unitid_mst, out defval);
                                model[0].SelectedItems1 = new string[] { defval };
                                #endregion
                                #region getdesig
                                defval = "";
                                TempData[MyGuid + "_Tlist2"] = model[0].TList2 = mod2 = cmd_Fun.desig(userCode, unitid_mst, out defval);
                                model[0].SelectedItems2 = new string[] { defval };
                                #endregion
                            }
                            break;
                        case "ITEM":
                            //mq = "select it.icode,it.iname,it.cpartno,um.master_name as uom,hsn.master_name as hsno,'0' qty_in_stock,'0' Qty_Req," +
                            //    "'0' Qty_issue,'0' Qty_Req_bal,'-' remark from item it " +
                            //    "inner join master_setting um on um.master_id=it.uom and um.type='UMM' and um.client_id='" + clientid_mst + "' and um.client_unit_id='" + unitid_mst + "' " +
                            //    "inner join master_setting hsn on hsn.master_id=it.hsno and hsn.type='HSN' and hsn.client_id='" + clientid_mst + "' and hsn.client_unit_id='" + unitid_mst + "' " +
                            //    "where (it.client_id||it.client_unit_id||it.icode||to_char(it.vch_date,'yyyymmdd')||it.type) in ('" + URL + "')";
                            mq = "select it.icode as Icode,it.iname as Iname,it.cpartno," +
   "um.master_name as UOM,hsn.master_name as hsno,s.closing as qty_in_stock,'0' as Qty_Req,'0' Qty_issue,'0'  Qty_Req_bal,'-' remark  from item it " +
                               "inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,'" + unitid_mst + "')=1 " +
                               "inner join master_setting hsn on hsn.master_id=it.hsno and hsn.type='HSN' and find_in_set(hsn.client_unit_id,'" + unitid_mst + "')=1 " +
                               "left join (select icode,client_unit_id,sum(op) op,sum(pktop) pktop,sum(qtyin) qtyin,sum(qtyout) out,sum(op)+sum(qtyin)-sum(qtyout) closing,sum(pktop) + sum(pktno) pktno from " +
    "(select icode, client_unit_id, nvl(op_2019, 0) op, nvl(pkt_2019, 0) pktop, 0 qtyin, 0 qtyout, 0 pktno from itbal union all " +
    "select icode, client_unit_id, sum(to_number(qtyin)) - sum(to_number(qtyout)) op, sum((case when substr(type, 1, 1) in ('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktop," +
    "sum(to_number(qtyin)) qtyin,sum(to_number(qtyout)) qtyout,0 pktno from itransaction " +
    "where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') " +
    "and to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "')-1 group by icode,client_unit_id union all " +
    "select icode,client_unit_id,0 as op,0 as pktop,sum(to_number(qtyin)) qtyin,sum(to_number(qtyout)) qtyout," +
    "sum((case when substr(type, 1, 1) in ('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktno from itransaction " +
    "where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and " +
    "to_date('" + model[0].Col20.Trim() + "','" + sgen.Getsqldateformat() + "') " +
    "group by icode,client_unit_id) a group by icode, client_unit_id) s on it.icode=s.icode and find_in_set(s.client_unit_id,'" + unitid_mst + "')=1 " +
                               "where it.type='IT' and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 " +
                               "and (it.icode||to_char(it.vch_date,'yyyymmdd')||it.type) in ('" + URL + "')";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt1.Rows.RemoveAt(0); }
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["SNo"] = i + 1;
                                    dr["Icode"] = dt.Rows[i]["icode"].ToString();
                                    dr["IName"] = dt.Rows[i]["iname"].ToString();
                                    dr["PARTNO"] = dt.Rows[i]["cpartno"].ToString();
                                    dr["HSN"] = dt.Rows[i]["hsno"].ToString();
                                    dr["UOM"] = dt.Rows[i]["uom"].ToString();
                                    dr["Qty_in_stock"] = dt.Rows[i]["qty_in_stock"].ToString();
                                    dr["Qty_Req"] = dt.Rows[i]["Qty_Req"].ToString();
                                    dr["Remark"] = dt.Rows[i]["remark"].ToString();
                                    model[0].dt1.Rows.Add(dr);
                                }
                            }
                            break;
                        case "PRINT":
                            //ViewBag.vnew = "";
                            //ViewBag.vedit = "";
                            //ViewBag.vsave = "disabled='disabled'";
                            //ViewBag.vsavenew = "disabled='disabled'";
                            //ViewBag.scripCall = "disableForm();";
                            mq = "select  p.deptname ,location_name(itb.client_id||itb.client_unit_id||itb.loc) Loc,  REPLACE(ud.FIRST_NAME|| ' '|| ud.MIDDLE_NAME|| ' '|| ud.last_name,'0','') as created_by, p.totremark, p.vch_num,p.ewayno,p.chlno,p.icode,p.taxrate,p.qtychl,p.qtyin,p.pono,to_char(convert_tz(p.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') vch_date1," +
                                "to_char(convert_tz(p.chldate, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') chldate1," +
                                " to_char(convert_tz(p.invdate, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') " +
                                " invdate1, to_char(convert_tz(p.ewaydate, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') ewaydate1," +
                                " to_char(convert_tz(p.podate, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') podate1 ," +
                                " i.cpartno  ,i.iname ,i.partname ,um.master_name as UOM,hsn.master_name as hsn from itransactionc p" +
                                " inner join item i on p.icode=i.icode  and i.type='IT' and find_in_set(p.client_unit_id,i.client_unit_id)=1 " +
                                " inner join master_setting um on um.master_id=i.uom and um.type='UMM' and find_in_set(um.client_unit_id,'" + unitid_mst + "')=1 " +
                                " inner join master_setting hsn on hsn.master_id=i.hsno and hsn.type='HSN' and find_in_set(hsn.client_unit_id,'" + unitid_mst + "')=1 " +
                                " inner join user_details ud on p.ent_by = ud.vch_num and ud.type = 'CPR' " +
                                " inner join itbal itb on i.icode=itb.icode and i.type=itb.type and find_in_set(i.client_unit_id,itb.client_unit_id)=1 " +
                                " inner join master_setting d on d.master_id = p.deptno and d.type = 'MDP' and find_in_set(d.client_unit_id,p.client_unit_id)=1 " +
                                "where (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date, 'yyyymmdd')||p. type) = '" + URL + "'";
                            DataSet ds = new DataSet();
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                DataTable qrdt = new DataTable();
                                qrdt = dtt.Copy();
                                qrdt.Columns.Add("qrimg", typeof(Byte[]));
                                foreach (DataRow dr in qrdt.Rows)
                                {
                                    string code = dr["icode"].ToString() + "\n" + dr["iname"].ToString();
                                    QRCodeGenerator qrGenerator = new QRCodeGenerator();
                                    QRCodeGenerator.QRCode qrCode = qrGenerator.CreateQrCode(code, QRCodeGenerator.ECCLevel.Q);
                                    System.Web.UI.WebControls.Image imgBarCode = new System.Web.UI.WebControls.Image();
                                    imgBarCode.Height = 150;
                                    imgBarCode.Width = 150;
                                    using (Bitmap bitMap = qrCode.GetGraphic(20))
                                    {
                                        using (MemoryStream ms = new MemoryStream())
                                        {
                                            bitMap.Save(ms, System.Drawing.Imaging.ImageFormat.Png);
                                            byte[] byteImage = ms.ToArray();
                                            dr["qrimg"] = byteImage;
                                            //imgBarCode.ImageUrl = "data:image/png;base64," + Convert.ToBase64String(byteImage);
                                        }
                                        //plBarCode.Controls.Add(imgBarCode);
                                    }
                                }
                                qrdt.AcceptChanges();
                                qrdt.TableName = "prepcur";
                                ds.Tables.Add(qrdt);
                                sgen.open_report_byDs_xml(userCode, ds, "mat_req_report", "MAT REQ Detail");
                                //ViewBag.scripCall = "OpenSingle('../../../../../erp/schoolReports_Rpts/Filter_Report_xml.aspx','95%','900px','Reports');";
                                ViewBag.scripCall += "showRptnew('MAT REQ Detail');disableForm();";
                            }
                            break;
                    }
                    break;
                #endregion
                #region Quality
                case "quality":
                    switch (btnval.ToUpper())
                    {
                        case "ITEM":
                            //mq = "select (p.client_id||p.client_unit_id||p.icode||to_char(p.vch_date,'yyyymmdd')||p.type||p.pono||to_char(p.podate,'yyyymmdd')||p.invno||to_char(p.invdate,'yyyymmdd')) as fstr," +
                            //    "p.icode,it.iname,it.cpartno,um.master_name uom,p.btchno,p.pono,p.qtychl,p.qtyrcvd," +
                            //    "to_char(convert_tz(p.podate,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') podate from itransaction p " +
                            //  "inner join item it on it.icode = p.icode and it.type = 'IT' and it.client_id = p.client_id and it.client_unit_id = p.client_unit_id " +
                            //  "inner join master_setting um on um.master_id = it.uom and um.type = 'UMM' and um.client_id = p.client_id and um.client_unit_id = p.client_unit_id " +
                            //  "where (p.client_id||p.client_unit_id||p.icode||to_char(p.vch_date,'yyyymmdd')||p.type||p.pono||to_char(p.podate,'yyyymmdd')||p.invno||to_char(p.invdate,'yyyymmdd')) in ('" + URL + "')";
                            mq = "select (p.client_id||p.client_unit_id||p.icode||to_char(p.vch_date,'yyyymmdd')||p.type||p.pono||to_char(p.podate,'yyyymmdd')||p.invno||to_char(p.invdate,'yyyymmdd')) as fstr," +
                                "p.icode,it.iname,it.cpartno,um.master_name uom,p.btchno,p.pono,p.qtychl,p.qtyrcvd," +
                                "to_char(convert_tz(p.podate,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') podate from itransaction p " +
                                "inner join item it on it.icode = p.icode and it.type = 'IT' and it.client_unit_id = p.client_unit_id " +
                                "inner join master_setting um on um.master_id = it.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, p.client_unit_id)=1 " +
                                "where (p.client_id||p.client_unit_id||p.icode||to_char(p.vch_date,'yyyymmdd')||p.type||p.pono||to_char(p.podate,'yyyymmdd')||p.invno||to_char(p.invdate,'yyyymmdd')) in ('" + URL + "')";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt1.Rows.RemoveAt(0); }
                                for (int i = 0; i < dtt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["Item"] = dtt.Rows[i]["fstr"].ToString();
                                    dr["SNo"] = i + 1;
                                    dr["ICode"] = dtt.Rows[i]["icode"].ToString();
                                    dr["IName"] = dtt.Rows[i]["iname"].ToString();
                                    dr["PartNo"] = dtt.Rows[i]["cpartno"].ToString();
                                    dr["Uom"] = dtt.Rows[i]["uom"].ToString();
                                    dr["BtchNo"] = dtt.Rows[i]["btchno"].ToString();
                                    dr["Qty_Chl"] = dtt.Rows[i]["qtychl"].ToString();
                                    dr["Qty_Rcvd"] = dtt.Rows[i]["qtyrcvd"].ToString();
                                    dr["Pono"] = dtt.Rows[i]["pono"].ToString();
                                    dr["Podate"] = dtt.Rows[i]["podate"].ToString();
                                    model[0].dt1.Rows.Add(dr);
                                }
                                model[0].dt1.AcceptChanges();
                            }
                            break;
                        case "NEW":
                            mq = "select distinct p.vch_num MRN_Number,to_char(convert_tz(p.vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') MRN_Date,p.type,km.master_name,c.vch_num acode," +
                                "c.c_name as Party_Name,c.c_gstin as Party_Gstin,c.addr Party_Address,p.chlno,to_char(convert_tz(p.chldate,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') chldate," +
                                "p.ewayno,p.invno,to_char(convert_tz(p.invdate,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') invdate,p.tmode " +
                                "from itransaction p " +
                                "inner join clients_mst c on p.acode = c.vch_num and substr(c.vch_num,0,3)='203' and c.type ='BCD' and c.client_unit_id = p.client_unit_id " +
                                "inner join master_setting km on km.master_id=p.type and find_in_set(km.client_unit_id,p.client_unit_id)=1 " +
                                "where (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) in ('" + URL + "')";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "EDMODE", "N");
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                                ViewBag.scripCall = "enableForm();";
                                model[0].Col12 = dtt.Rows[0]["type"].ToString();
                                model[0].Col16 = dtt.Rows[0]["MRN_Number"].ToString();
                                model[0].Col17 = dtt.Rows[0]["MRN_Date"].ToString();
                                model[0].Col18 = dtt.Rows[0]["chlno"].ToString();
                                model[0].Col19 = dtt.Rows[0]["chldate"].ToString();
                                model[0].Col20 = dtt.Rows[0]["invno"].ToString();
                                model[0].Col21 = dtt.Rows[0]["invdate"].ToString();
                                model[0].Col22 = dtt.Rows[0]["Party_Name"].ToString();
                                model[0].Col23 = dtt.Rows[0]["acode"].ToString();
                                model[0].Col26 = dtt.Rows[0]["master_name"].ToString();//type
                                // shiv
                                DataTable dtg = new DataTable();
                                dtg = sgen.getdata(userCode, "select '' Item,'1' as  SNo,'-' as Icode,'-' as IName,'-' PARTNO,'-' as UOM,'-' as BTCHNO ,'0' Qty_Chl,'0' Qty_Rcvd,'0' Qty_Acpt,'0' Qty_Rej,'0' Qty_Hold,'0' Qty_Acpt_Var,'-' Remark,'0' Pono,'-' as podate from dual");
                                model[0].dt1 = dtg;
                                sgen.SetSession(MyGuid, "RQUA1", dtg);
                                // shiv
                                dtg = sgen.getdata(userCode, "select '' Item,'1' as  SNo ,'-' as Icode,'-' as IName,'-' PARTNO,'-' as UOM,'-' loc,'-' as Loc_Name,'-' as BTCHNO ,'0' Qty_Acpt,'0' Qty_Rej,'0' Qty_Hold,'0' Qty_Acpt_Var,'-' Remark,'0' Pono,'-' podate from dual");
                                model[0].dt2 = dtg;
                                sgen.SetSession(MyGuid, "RQUA2", dtg);
                            }
                            break;
                    }
                    break;
                #endregion
                #region Quality batchwise
                case "qualityn":
                    switch (btnval.ToUpper())
                    {
                        case "ITEM":
                            mq = "select (p.client_id||p.client_unit_id||p.icode||to_char(p.vch_date,'yyyymmdd')||p.type||p.pono||to_char(p.podate,'yyyymmdd')||p.invno||to_char(p.invdate,'yyyymmdd')||p.btchno) as fstr," +
                                "p.icode,it.iname,it.cpartno,um.master_name uom,p.btchno,p.pono,p.qtychl,p.qtyrcvd," +
                                "to_char(convert_tz(p.podate,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') podate from itransaction p " +
                                "inner join item it on it.icode = p.icode and it.type = 'IT' and it.client_unit_id = p.client_unit_id " +
                                "inner join master_setting um on um.master_id = it.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, p.client_unit_id)=1 " +
                                "where (p.client_id||p.client_unit_id||p.icode||to_char(p.vch_date,'yyyymmdd')||p.type||p.pono||to_char(p.podate,'yyyymmdd')||p.invno||to_char(p.invdate,'yyyymmdd')||p.btchno) in ('" + URL + "')";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt1.Rows.RemoveAt(0); }
                                for (int i = 0; i < dtt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["Item"] = dtt.Rows[i]["fstr"].ToString();
                                    dr["SNo"] = i + 1;
                                    dr["ICode"] = dtt.Rows[i]["icode"].ToString();
                                    dr["IName"] = dtt.Rows[i]["iname"].ToString();
                                    dr["PartNo"] = dtt.Rows[i]["cpartno"].ToString();
                                    dr["Uom"] = dtt.Rows[i]["uom"].ToString();
                                    dr["BtchNo"] = dtt.Rows[i]["btchno"].ToString();
                                    dr["Qty_Chl"] = dtt.Rows[i]["qtychl"].ToString();
                                    dr["Qty_Rcvd"] = dtt.Rows[i]["qtyrcvd"].ToString();
                                    dr["Pono"] = dtt.Rows[i]["pono"].ToString();
                                    dr["Podate"] = dtt.Rows[i]["podate"].ToString();
                                    model[0].dt1.Rows.Add(dr);
                                }
                                model[0].dt1.AcceptChanges();
                            }
                            break;
                        case "NEW":
                            mq = "select distinct p.vch_num MRN_Number,to_char(convert_tz(p.vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') MRN_Date,p.type,km.master_name,c.vch_num acode," +
                                "c.c_name as Party_Name,c.c_gstin as Party_Gstin,c.addr Party_Address,p.chlno,to_char(convert_tz(p.chldate,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') chldate," +
                                "p.ewayno,p.invno,to_char(convert_tz(p.invdate,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') invdate,p.tmode " +
                                "from itransaction p " +
                                "inner join clients_mst c on p.acode = c.vch_num and substr(c.vch_num,0,3)='203' and c.type ='BCD' and c.client_unit_id = p.client_unit_id " +
                                "inner join master_setting km on km.master_id=p.type and find_in_set(km.client_unit_id,p.client_unit_id)=1 " +
                                "where (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) in ('" + URL + "')";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "EDMODE", "N");
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                                ViewBag.scripCall = "enableForm();";
                                model[0].Col12 = dtt.Rows[0]["type"].ToString();
                                model[0].Col16 = dtt.Rows[0]["MRN_Number"].ToString();
                                model[0].Col17 = dtt.Rows[0]["MRN_Date"].ToString();
                                model[0].Col18 = dtt.Rows[0]["chlno"].ToString();
                                model[0].Col19 = dtt.Rows[0]["chldate"].ToString();
                                model[0].Col20 = dtt.Rows[0]["invno"].ToString();
                                model[0].Col21 = dtt.Rows[0]["invdate"].ToString();
                                model[0].Col22 = dtt.Rows[0]["Party_Name"].ToString();
                                model[0].Col23 = dtt.Rows[0]["acode"].ToString();
                                model[0].Col26 = dtt.Rows[0]["master_name"].ToString();//type
                                // shiv
                                DataTable dtg = new DataTable();
                                dtg = sgen.getdata(userCode, "select '' Item,'1' as  SNo,'-' as Icode,'-' as IName,'-' PARTNO,'-' as UOM,'-' as BTCHNO ,'0' Qty_Chl,'0' Qty_Rcvd,'0' Qty_Acpt,'0' Qty_Rej,'0' Qty_Hold,'0' Qty_Acpt_Var,'-' Remark,'0' Pono,'-' as podate from dual");
                                model[0].dt1 = dtg;
                                sgen.SetSession(MyGuid, "RQUA1", dtg);
                                // shiv
                                dtg = sgen.getdata(userCode, "select '' Item,'1' as  SNo ,'-' as Icode,'-' as IName,'-' PARTNO,'-' as UOM,'-' loc,'-' as Loc_Name,'-' as BTCHNO ,'0' Qty_Acpt,'0' Qty_Rej,'0' Qty_Hold,'0' Qty_Acpt_Var,'-' Remark,'0' Pono,'-' podate from dual");
                                model[0].dt2 = dtg;
                                sgen.SetSession(MyGuid, "RQUA2", dtg);
                            }
                            break;
                    }
                    break;
                #endregion
                #region phy_verify
                case "phy_verify":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            mq = @"select a.*,to_char(convert_tz(vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') vch_date1 from btchtrans a " +
                                "where (client_id||client_unit_id||vch_num|| to_char(vch_date, 'yyyymmdd')||type)='" + URL + "'";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "EDMODE", "Y");
                                DataTable dt2 = new DataTable();
                                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.dept(userCode, clientid_mst, unitid_mst);
                                TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2 = cmd_Fun.desig(userCode, unitid_mst);

                                model[0].Col1 = dt.Rows[0]["client_id"].ToString();
                                model[0].Col2 = dt.Rows[0]["client_unit_id"].ToString();
                                model[0].Col3 = dt.Rows[0]["ent_by"].ToString();
                                model[0].Col4 = dt.Rows[0]["ent_date"].ToString();
                                model[0].Col5 = dt.Rows[0]["edit_by"].ToString();
                                model[0].Col6 = dt.Rows[0]["edit_date"].ToString();
                                model[0].Col8 = "(client_id||client_unit_id||vch_num|| to_char(vch_date, 'yyyymmdd')||type) = '" + URL + "'";
                                model[0].Col9 = tm.Col9;
                                model[0].Col10 = tm.Col10;
                                model[0].Col11 = tm.Col11;
                                model[0].Col12 = tm.Col12;
                                model[0].Col13 = "Update";
                                model[0].Col100 = "Update & New";
                                model[0].Col121 = "U";
                                model[0].Col122 = "<u>U</u>pdate";
                                model[0].Col123 = "Update & Ne<u>w</u>";
                                model[0].Col14 = tm.Col14;
                                model[0].Col15 = tm.Col15;
                                model[0].Col18 = dt.Rows[0]["vch_num"].ToString();
                                model[0].Col20 = dt.Rows[0]["vch_date1"].ToString();
                                model[0].Col21 = dt.Rows[0]["totremark"].ToString();
                                model[0].SelectedItems1 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["deptno"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems2 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["desig"].ToString()).Distinct()).Split(',');
                                mq = "select '-' as SNo,'-' as ICode,'-' as IName,'-' PartNo,'-' as UOM,'0' as Qty_in_stock,'0' as Qty_Phy,'0' Variation,'-' as Remark," +
                                    "'0' LocCode,'-' Loc,'0' Pkt_Stk,'0' No_of_pkt from dual";
                                model[0].dt1 = sgen.getdata(userCode, mq);
                                if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt1.Rows.RemoveAt(0); }
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["sno"] = i.ToString();
                                    dr["IName"] = dt.Rows[i]["iname"].ToString();
                                    dr["Icode"] = dt.Rows[i]["icode"].ToString();
                                    dr["UOM"] = dt.Rows[i]["uom"].ToString();
                                    dr["partno"] = dt.Rows[i]["cpartno"].ToString();
                                    dr["Qty_in_stock"] = dt.Rows[i]["qtystk"].ToString();
                                    //if (model[0].Col12 == "37")
                                    //{
                                    dr["Qty_Phy"] = dt.Rows[i]["qtychl"].ToString();
                                    dr["Variation"] = "0";
                                    if (sgen.Make_decimal(dt.Rows[i]["qtyout"].ToString().Trim()) > 0) dr["Variation"] = dt.Rows[i]["qtyout"].ToString().Trim();
                                    else if (sgen.Make_decimal(dt.Rows[i]["qtyin"].ToString().Trim()) > 0) dr["Variation"] = dt.Rows[i]["qtyin"].ToString().Trim();
                                    //}
                                    //else
                                    //{
                                    //    dr["Qty_in"] = dt.Rows[i]["qtychl"].ToString();
                                    //    dr["Qty_out"] = dt.Rows[i]["qtychl"].ToString();
                                    //}
                                    //dr["Rate"] = dt.Rows[i]["irate"].ToString();
                                    //dr["Amount"] = dt.Rows[i]["iamount"].ToString();
                                    dr["Remark"] = dt.Rows[i]["iremark"].ToString();
                                    dr["LocCode"] = dt.Rows[i]["Loc"].ToString();
                                    dr["Loc"] = dt.Rows[i]["locname"].ToString();
                                    //if (model[0].Col12 == "37")
                                    //{
                                    dr["Pkt_Stk"] = dt.Rows[i]["pktstk"].ToString();
                                    //}
                                    dr["No_of_pkt"] = dt.Rows[i]["pktno"].ToString();
                                    //if (model[0].Col12.Trim() == "37")
                                    //{
                                    //    model[0].dt1.Columns.Remove("LocCode");
                                    //    model[0].dt1.Columns.Remove("Loc");
                                    //}
                                    model[0].dt1.Rows.Add(dr);
                                }
                            }
                            break;
                        //case "NEW":
                        //    mq = "select master_id,upper(master_name) master_name,to_char(convert_tz(utc_timestamp(),'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') issued_date " +
                        //        "from master_Setting where (master_id||to_char(vch_date, 'yyyymmdd')||type) = '" + URL + "'";
                        //    dtt = sgen.getdata(userCode, mq);
                        //    if (dtt.Rows.Count > 0)
                        //    {
                        //        sgen.SetSession(MyGuid, "EDMODE", "N");
                        //        ViewBag.vnew = "disabled='disabled'";
                        //        ViewBag.vedit = "disabled='disabled'";
                        //        ViewBag.vsave = "";
                        //        ViewBag.vsavenew = "";
                        //        ViewBag.scripCall = "enableForm();";
                        //        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + dtt.Rows[0]["master_id"].ToString() + "'" + model[0].Col11.Trim() + "";
                        //        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        //        model[0].Col9 = dtt.Rows[0]["master_name"].ToString();
                        //        model[0].Col12 = dtt.Rows[0]["master_id"].ToString();
                        //        sgen.SetSession(MyGuid, "TTYPE", dtt.Rows[0]["master_id"].ToString());
                        //        model[0].Col17 = "1";
                        //        model[0].Col18 = vch_num;
                        //        model[0].Col20 = dtt.Rows[0]["issued_date"].ToString();
                        //        #region getdept
                        //        TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.dept(userCode, clientid_mst, unitid_mst);
                        //        #endregion
                        //        #region getdesig
                        //        TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2 = cmd_Fun.desig(userCode, unitid_mst);
                        //        #endregion

                        //        model[0].SelectedItems1 = new string[] { "" };
                        //        model[0].SelectedItems2 = new string[] { "" };
                        //        if (dtt.Rows[0]["master_id"].ToString().Trim().Equals("36"))
                        //        {
                        //            mq = "select '-' as SNo,'-' as ICode,'-' as IName,'-' PartNo,'-' as UOM,'0' as Qty_in_stock,'0' as Qty_in,'0' Qty_out,'0' Rate," +
                        //                "'0' Amount,'-' as Remark,'0' LocCode,'-' Loc,'0' No_of_pkt from dual";
                        //        }
                        //        else
                        //        {
                        //            mq = "select '-' as SNo,'-' as ICode,'-' as IName,'-' PartNo,'-' as UOM,'0' as Qty_in_stock,'0' as Qty_Phy,'0' Variation,'0' Rate," +
                        //                "'0' Amount,'-' as Remark,'0' LocCode,'-' Loc,'0' Pkt_Stk,'0' No_of_pkt from dual";
                        //        }
                        //        DataTable dtn = sgen.getdata(userCode, mq);
                        //        model[0].dt1 = dtn;
                        //        sgen.SetSession(MyGuid, "KDTPHY", dtn);
                        //    }
                        //    break;
                        case "ITEM":
                            //var ttype = sgen.GetSession(MyGuid, "TTYPE").ToString().Trim();
                            //if (ttype == "36")
                            //{
                            //    mq = "select (it.icode||to_char(it.vch_date,'yyyymmdd')||it.type) fstr,it.icode as Icode,it.iname as Iname,it.cpartno," +
                            //   "um.master_name as uom,s.closing as qty_in_stock,'0' as Qty_in,'0' Qty_out,'0' no_of_pkt,'-' remark,itb.loc loccode," +
                            //   "location_name(itb.client_id||itb.client_unit_id||itb.loc) loc from item it " +
                            //   "inner join itbal itb on find_in_set(itb.client_unit_id,'" + unitid_mst + "')=1 and itb.type='IT' and  it.icode=itb.icode " +
                            //   "inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,'" + unitid_mst + "')=1 " +
                            //   "left join (select (nvl(t.client_unit_id,'0')||i.icode) as fstr,i.icode,i.iname as Item_Name,sum(nvl(t.qtyin,0))-sum(nvl(t.qtyout,0)) as closing  from item i " +
                            //   "left join itransaction t on t.icode=i.icode and T.client_unit_id='" + unitid_mst + "' where " +
                            //   "length(i.icode)>4 group by t.client_unit_id,i.icode,i.iname order by i.icode) s on it.icode=s.icode " +
                            //   "where it.type='IT' and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 " +
                            //   "and (it.icode||to_char(it.vch_date,'yyyymmdd')||it.type) in ('" + URL + "')";
                            //}
                            //else if (ttype == "37")
                            //{
                            //   mq = "select (it.client_id||it.client_unit_id||it.icode||to_char(it.vch_date,'yyyymmdd')||it.type) fstr,it.icode as Icode,it.iname as Iname,it.cpartno," +
                            //"um.master_name as uom,s.closing as qty_in_stock,'0' as Qty_Phy,'0' Variation,'' remark,itb.loc loccode," +
                            //"location_name(itb.client_id||itb.client_unit_id||itb.loc) loc from item it " +
                            //"inner join itbal itb on itb.client_id='" + clientid_mst + "' and itb.client_unit_id='" + unitid_mst + "' and itb.type='IT' and  it.icode=itb.icode " +
                            //"inner join master_setting um on um.master_id=it.uom and um.type='UMM' and um.client_id='" + clientid_mst + "' and um.client_unit_id='" + unitid_mst + "' " +
                            //"inner join master_setting hsn on hsn.master_id=it.hsno and hsn.type='HSN' and hsn.client_id='" + clientid_mst + "' and hsn.client_unit_id='" + unitid_mst + "' " +
                            //"left join (select (nvl(t.client_unit_id,'0')||i.icode) as fstr,i.icode,i.iname as Item_Name ," +
                            //"sum(nvl(t.qtyin,0))-sum(nvl(t.qtyout,0)) as closing  from item i left join itransaction t on t.icode=i.icode and T.client_unit_id='" + unitid_mst + "' where " +
                            //"length(i.icode)>4 group by t.client_unit_id,i.icode,i.iname order by i.icode) s on it.icode=s.icode " +
                            //"where it.type='IT' and it.client_id='" + clientid_mst + "' and it.client_unit_id='" + unitid_mst + "' " +
                            //"and (it.client_id || it.client_unit_id || it.icode || to_char(it.vch_date, 'yyyymmdd') || it.type || nvl(s.loc, itb.loc)) in ('" + URL + "')";
                            //mq = "select (it.client_id||it.client_unit_id||it.icode||to_char(it.vch_date,'yyyymmdd')||it.type||nvl(s.loc,itb.loc)) fstr" +
                            //   ",it.icode as Icode,it.iname as Iname,it.cpartno,um.master_name as uom,s.closing as qty_in_stock,'0' as Qty_Phy," +
                            //   "'0' Variation,'' remark,nvl(s.loc,itb.loc) loccode,location_name(it.client_id||it.client_unit_id||nvl(s.loc,itb.loc)) loc from item it " +
                            // "inner join itbal itb on itb.client_id='" + clientid_mst + "' and itb.client_unit_id='" + unitid_mst + "' and itb.type='IT' and  it.icode=itb.icode " +
                            // "inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_id,'" + clientid_mst + "')=1 and find_in_set(um.client_unit_id,'" + unitid_mst + "')=1 " +
                            // "inner join master_setting hsn on hsn.master_id=it.hsno and hsn.type='HSN' and find_in_set(hsn.client_id,'" + clientid_mst + "')=1 and hsn.client_unit_id,'" + unitid_mst + "')=1 " +
                            // "inner join (select (nvl(t.client_unit_id,'0')||i.icode) as fstr,i.icode,i.iname as Item_Name,sum(nvl(t.qtyin,0))-sum(nvl(t.qtyout,0)) as closing," +
                            // "t.loc from item i inner join btchtrans t on t.icode=i.icode and T.client_unit_id='" + unitid_mst + "' where length(i.icode)>4 " +
                            // "group by t.client_unit_id,i.icode,i.iname,t.loc order by i.icode) s on it.icode=s.icode " +
                            // "where it.type='IT' and it.client_id='" + clientid_mst + "' and it.client_unit_id='" + unitid_mst + "' " +
                            // "and (it.client_id||it.client_unit_id||it.icode||to_char(it.vch_date,'yyyymmdd')||it.type||nvl(s.loc,itb.loc)) in ('" + URL + "')";
                            //kc
                            //mq = "select (it.client_id||it.client_unit_id||it.icode||to_char(it.vch_date,'yyyymmdd')||it.type||nvl(s.loc,itb.loc)) fstr,it.icode as Icode," +
                            //    "it.iname as Iname,it.cpartno,um.master_name as uom,nvl(s.closing,0) as qty_in_stock,'0' as Qty_Phy,'0' Variation,'0' no_of_pkt,'-' remark,nvl(s.loc,itb.loc) loccode," +
                            //    "location_name(it.client_id||it.client_unit_id||nvl(s.loc,itb.loc)) loc from item it " +
                            //    "inner join itbal itb on it.icode = itb.icode and itb.type = 'IT' and itb.client_id = it.client_id and itb.client_unit_id = it.client_unit_id " +
                            //    "inner join master_setting um on um.master_id = it.uom and um.type = 'UMM' and find_in_set(um.client_id, it.client_id)= 1 and find_in_set(um.client_unit_id, it.client_unit_id)= 1 " +
                            //    "inner join master_setting hsn on hsn.master_id = it.hsno and hsn.type = 'HSN' and find_in_set(hsn.client_id, it.client_id)= 1 and find_in_set(hsn.client_unit_id, it.client_unit_id)= 1 " +
                            //    "left join(select (nvl(t.client_unit_id,'0')|| i.icode) as fstr,i.icode,i.iname as Item_Name ,sum(nvl(t.qtyin, 0)) - sum(nvl(t.qtyout, 0)) as closing,t.loc from item i " +
                            //    "inner join btchtrans t on t.icode = i.icode and t.client_unit_id = i.client_unit_id where length(i.icode)> 4 group by t.client_unit_id,i.icode,i.iname,t.loc order by i.icode) s on it.icode = s.icode " +
                            //    "where it.type = 'IT' and it.client_id = '" + clientid_mst + "' and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 and " +
                            //    "(it.client_id||it.client_unit_id||it.icode||to_char(it.vch_date,'yyyymmdd')||it.type||nvl(s.loc,itb.loc)) in ('" + URL + "')";
                            mq = "select (it.icode||to_char(it.vch_date,'yyyymmdd')||it.type||nvl(s.loc,itb.loc)) fstr,it.icode Icode," +
                                "it.iname Iname,it.cpartno,um.master_name uom, nvl(s.closing, 0) qty_in_stock,nvl(s.pktno, 0) Pkt_Stk,'0' No_of_pkt,'0' as Qty_Phy,'0' Variation," +
                                "'-' remark,nvl(s.loc, itb.loc) loccode,lc.master_name loc from item it " +
                                "inner join itbal itb on it.icode = itb.icode and itb.type = 'IT' and find_in_set(itb.client_unit_id, it.client_unit_id)=1 " +
                                "inner join master_setting um on um.master_id = it.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, it.client_unit_id)= 1 " +
                                "inner join master_setting hsn on hsn.master_id = it.hsno and hsn.type = 'HSN' and find_in_set(hsn.client_unit_id, it.client_unit_id)= 1 " +
                                "left join (select icode,loc,client_unit_id,sum(op) op,sum(pktop) pktop,sum(qtyin) qtyin,sum(qtyout) out,sum(op)+sum(qtyin)-sum(qtyout) closing,sum(pktno)+sum(pktno) pktno from " +
    "(select icode, loc, client_unit_id, nvl(op_2019, 0) op, nvl(pkt_2019, 0) pktop, 0 qtyin, 0 qtyout, 0 pktno from itbal_enx " +
    "union all " +
    "select icode, loc, client_unit_id, sum(to_number(qtyin)) - sum(to_number(qtyout)) op, sum((case when substr(type, 1, 1) in " +
    "('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktop,sum(to_number(qtyin)) qtyin," +
    "sum(to_number(qtyout)) qtyout,0 pktno from btchtrans where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between " +
    "to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and to_date('" + year_from.Split(' ')[0].Trim() + "','" + sgen.Getsqldateformat() + "')-1 group by icode,loc,client_unit_id " +
    "union all select icode,loc,client_unit_id,0 op,0 pktop,to_number(qtyin) qtyin,to_number(qtyout) qtyout," +
    "nvl(sum((case when substr(type, 1, 1) in ('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)),0) pktno " +
    "from btchtrans where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between " +
    "to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and to_date('" + model[0].Col20.Trim() + "','" + sgen.Getsqldateformat() + "') " +
    "group by icode,loc,client_unit_id,to_number(qtyin),to_number(qtyout)) a group by icode, loc, client_unit_id) s " +
                                "on it.icode = s.icode " +
                              "inner join master_setting lc on lc.master_id = nvl(s.loc, itb.loc) and lc.type = 'LC6' and find_in_set(lc.client_unit_id, it.client_unit_id)= 1 " +
                                "where it.type = 'IT' and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 and " +
                                "(it.icode||to_char(it.vch_date,'yyyymmdd')||it.type||nvl(s.loc,itb.loc)) in ('" + URL + "')";
                            //}
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt1.Rows.RemoveAt(0); }
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["SNo"] = dt.Rows[i]["fstr"].ToString();
                                    dr["Icode"] = dt.Rows[i]["icode"].ToString();
                                    dr["Iname"] = dt.Rows[i]["iname"].ToString();
                                    dr["Partno"] = dt.Rows[i]["cpartno"].ToString();
                                    dr["Uom"] = dt.Rows[i]["uom"].ToString();
                                    dr["Qty_in_stock"] = dt.Rows[i]["qty_in_stock"].ToString();
                                    //if (model[0].Col12 == "36")
                                    //{
                                    //    dr["Qty_in"] = dt.Rows[i]["Qty_in"].ToString();
                                    //    dr["Qty_out"] = dt.Rows[i]["Qty_out"].ToString();
                                    //}
                                    //else
                                    //{
                                    dr["Qty_Phy"] = dt.Rows[i]["Qty_Phy"].ToString();
                                    dr["Variation"] = dt.Rows[i]["Variation"].ToString();
                                    //}
                                    //dr["Rate"] = "0";
                                    //dr["Amount"] = "0";
                                    //if (model[0].Col12 == "37")
                                    //{
                                    dr["Pkt_Stk"] = dt.Rows[i]["Pkt_Stk"].ToString();
                                    //}
                                    dr["No_of_pkt"] = dt.Rows[i]["No_of_pkt"].ToString();
                                    dr["Remark"] = dt.Rows[i]["remark"].ToString();
                                    dr["LocCode"] = dt.Rows[i]["loccode"].ToString();
                                    dr["Loc"] = dt.Rows[i]["loc"].ToString();
                                    model[0].dt1.Rows.Add(dr);
                                }
                            }
                            break;
                    }
                    break;
                #endregion
                #region phy_verifyn
                case "phy_verifyn":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            mq = @"select a.*,to_char(convert_tz(vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') vch_date1 from btchtrans a " +
                                "where (client_id||client_unit_id||vch_num|| to_char(vch_date, 'yyyymmdd')||type)='" + URL + "'";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "EDMODE", "Y");
                                DataTable dt2 = new DataTable();
                                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.dept(userCode, clientid_mst, unitid_mst);
                                TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2 = cmd_Fun.desig(userCode, unitid_mst);

                                model[0].Col1 = dt.Rows[0]["client_id"].ToString();
                                model[0].Col2 = dt.Rows[0]["client_unit_id"].ToString();
                                model[0].Col3 = dt.Rows[0]["ent_by"].ToString();
                                model[0].Col4 = dt.Rows[0]["ent_date"].ToString();
                                model[0].Col5 = dt.Rows[0]["edit_by"].ToString();
                                model[0].Col6 = dt.Rows[0]["edit_date"].ToString();
                                model[0].Col8 = "(client_id||client_unit_id||vch_num|| to_char(vch_date, 'yyyymmdd')||type) = '" + URL + "'";
                                model[0].Col9 = tm.Col9;
                                model[0].Col10 = tm.Col10;
                                model[0].Col11 = tm.Col11;
                                model[0].Col12 = tm.Col12;
                                model[0].Col13 = "Update";
                                model[0].Col100 = "Update & New";
                                model[0].Col121 = "U";
                                model[0].Col122 = "<u>U</u>pdate";
                                model[0].Col123 = "Update & Ne<u>w</u>";
                                model[0].Col14 = tm.Col14;
                                model[0].Col15 = tm.Col15;
                                model[0].Col18 = dt.Rows[0]["vch_num"].ToString();
                                model[0].Col20 = dt.Rows[0]["vch_date1"].ToString();
                                model[0].Col21 = dt.Rows[0]["totremark"].ToString();
                                model[0].SelectedItems1 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["deptno"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems2 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["desig"].ToString()).Distinct()).Split(',');
                                mq = "select '-' as SNo,'-' as ICode,'-' as IName,'-' PartNo,'-' as UOM,'0' as Qty_in_stock,'0' as Qty_Phy,'0' Variation,'-' as Remark," +
                                    "'0' LocCode,'-' Loc,'0' Pkt_Stk,'0' No_of_pkt from dual";
                                model[0].dt1 = sgen.getdata(userCode, mq);
                                if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt1.Rows.RemoveAt(0); }
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["sno"] = i.ToString();
                                    dr["IName"] = dt.Rows[i]["iname"].ToString();
                                    dr["Icode"] = dt.Rows[i]["icode"].ToString();
                                    dr["UOM"] = dt.Rows[i]["uom"].ToString();
                                    dr["partno"] = dt.Rows[i]["cpartno"].ToString();
                                    dr["Qty_in_stock"] = dt.Rows[i]["qtystk"].ToString();
                                    //if (model[0].Col12 == "37")
                                    //{
                                    dr["Qty_Phy"] = dt.Rows[i]["qtychl"].ToString();
                                    dr["Variation"] = "0";
                                    if (sgen.Make_decimal(dt.Rows[i]["qtyout"].ToString().Trim()) > 0) dr["Variation"] = dt.Rows[i]["qtyout"].ToString().Trim();
                                    else if (sgen.Make_decimal(dt.Rows[i]["qtyin"].ToString().Trim()) > 0) dr["Variation"] = dt.Rows[i]["qtyin"].ToString().Trim();
                                    //}
                                    //else
                                    //{
                                    //    dr["Qty_in"] = dt.Rows[i]["qtychl"].ToString();
                                    //    dr["Qty_out"] = dt.Rows[i]["qtychl"].ToString();
                                    //}
                                    //dr["Rate"] = dt.Rows[i]["irate"].ToString();
                                    //dr["Amount"] = dt.Rows[i]["iamount"].ToString();
                                    dr["Remark"] = dt.Rows[i]["iremark"].ToString();
                                    dr["LocCode"] = dt.Rows[i]["Loc"].ToString();
                                    dr["Loc"] = dt.Rows[i]["locname"].ToString();
                                    //if (model[0].Col12 == "37")
                                    //{
                                    dr["Pkt_Stk"] = dt.Rows[i]["pktstk"].ToString();
                                    //}
                                    dr["No_of_pkt"] = dt.Rows[i]["pktno"].ToString();
                                    //if (model[0].Col12.Trim() == "37")
                                    //{
                                    //    model[0].dt1.Columns.Remove("LocCode");
                                    //    model[0].dt1.Columns.Remove("Loc");
                                    //}
                                    model[0].dt1.Rows.Add(dr);
                                }
                            }
                            break;
                        case "ITEM":
                            mq = "select (it.icode||to_char(it.vch_date,'yyyymmdd')||it.type||nvl(s.loc,itb.loc)) fstr,it.icode Icode," +
                                "it.iname Iname,it.cpartno,um.master_name uom, nvl(s.closing, 0) qty_in_stock,nvl(s.pktno, 0) Pkt_Stk,'0' No_of_pkt,'0' as Qty_Phy,'0' Variation," +
                                "'-' remark,nvl(s.loc, itb.loc) loccode,lc.master_name loc,s.btchno batchno from item it " +
                                "inner join itbal itb on it.icode = itb.icode and itb.type = 'IT' and find_in_set(itb.client_unit_id, it.client_unit_id)=1 " +
                                "inner join master_setting um on um.master_id = it.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, it.client_unit_id)= 1 " +
                                "inner join master_setting hsn on hsn.master_id = it.hsno and hsn.type = 'HSN' and find_in_set(hsn.client_unit_id, it.client_unit_id)= 1 " +
                                "left join (select (nvl(t.client_unit_id,'0')|| i.icode) as fstr,t.btchno,i.icode,i.iname as Item_Name ,sum(nvl(t.qtyin, 0)) - sum(nvl(t.qtyout, 0)) closing," +
                                "sum(nvl(t.pktno, 0)) pktno,t.loc from item i " +
                                "inner join(select btchno,icode, type, client_id, loc, client_unit_id, qtyin, qtyout, (case when substr(type, 1, 1) in ('0', '1') then " +
                                "pktno when type = '36' then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end) pktno from btchtrans) t on " +
                                "t.icode = i.icode and t.client_unit_id = i.client_unit_id where length(i.icode)> 4 group by t.btchno,t.client_unit_id,i.icode,i.iname,t.loc order by i.icode) s " +
                                "on it.icode = s.icode " +
                                "inner join master_setting lc on lc.master_id = nvl(s.loc, itb.loc) and lc.type = 'LC6' and find_in_set(lc.client_unit_id, it.client_unit_id)= 1 " +
                                "where it.type = 'IT' and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 and " +
                                "(it.icode||to_char(it.vch_date,'yyyymmdd')||it.type||nvl(s.loc,itb.loc)) in ('" + URL + "')";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt1.Rows.RemoveAt(0); }
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["SNo"] = dt.Rows[i]["fstr"].ToString();
                                    dr["Icode"] = dt.Rows[i]["icode"].ToString();
                                    dr["Iname"] = dt.Rows[i]["iname"].ToString();
                                    dr["Partno"] = dt.Rows[i]["cpartno"].ToString();
                                    dr["Uom"] = dt.Rows[i]["uom"].ToString();
                                    dr["Qty_in_stock"] = dt.Rows[i]["qty_in_stock"].ToString();
                                    dr["Qty_Phy"] = dt.Rows[i]["Qty_Phy"].ToString();
                                    dr["Variation"] = dt.Rows[i]["Variation"].ToString();
                                    dr["Pkt_Stk"] = dt.Rows[i]["Pkt_Stk"].ToString();
                                    dr["No_of_pkt"] = dt.Rows[i]["No_of_pkt"].ToString();
                                    dr["Remark"] = dt.Rows[i]["remark"].ToString();
                                    dr["LocCode"] = dt.Rows[i]["loccode"].ToString();
                                    dr["Loc"] = dt.Rows[i]["loc"].ToString();
                                    dr["batchno"] = dt.Rows[i]["batchno"].ToString();
                                    model[0].dt1.Rows.Add(dr);
                                }
                            }
                            break;
                    }
                    break;
                    #endregion
                    #region location_tfr
                    break;
                case "location_tfr":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            mq = @"select a.*,to_char(convert_tz(vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') vch_date1 from btchtrans a " +
                                "where (client_id||client_unit_id||vch_num|| to_char(vch_date, 'yyyymmdd')||type)='" + URL + "'";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "EDMODE", "Y");
                                DataTable dt2 = new DataTable();
                                #region getdept
                                TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1 = cmd_Fun.dept(userCode, clientid_mst, unitid_mst);
                                #endregion
                                #region getdesig
                                TempData[MyGuid + "_Tlist2"] = model[0].TList2 = mod2 = cmd_Fun.desig(userCode, unitid_mst);
                                #endregion
                                model[0].Col1 = dt.Rows[0]["client_id"].ToString();
                                model[0].Col2 = dt.Rows[0]["client_unit_id"].ToString();
                                model[0].Col3 = dt.Rows[0]["ent_by"].ToString();
                                model[0].Col4 = dt.Rows[0]["ent_date"].ToString();
                                model[0].Col5 = dt.Rows[0]["edit_by"].ToString();
                                model[0].Col6 = dt.Rows[0]["edit_date"].ToString();
                                model[0].Col8 = "(client_id||client_unit_id||vch_num|| to_char(vch_date, 'yyyymmdd')||type) = '" + URL + "'";
                                model[0].Col10 = tm.Col10;
                                model[0].Col11 = tm.Col11;
                                model[0].Col12 = dt.Rows[0]["type"].ToString();
                                model[0].Col13 = "Update";
                                model[0].Col100 = "Update & New";
                                model[0].Col121 = "U";
                                model[0].Col122 = "<u>U</u>pdate";
                                model[0].Col123 = "Update & Ne<u>w</u>";
                                model[0].Col14 = tm.Col14;
                                model[0].Col15 = tm.Col15;
                                model[0].Col18 = dt.Rows[0]["vch_num"].ToString();
                                model[0].Col20 = dt.Rows[0]["vch_date1"].ToString();
                                model[0].Col21 = dt.Rows[0]["totremark"].ToString();
                                model[0].Col9 = sgen.seekval(userCode, "select upper(master_name) master_name from master_setting where master_id='" + dt.Rows[0]["type"].ToString() + "'", "master_name");

                                model[0].SelectedItems1 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["deptno"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems2 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["desig"].ToString()).Distinct()).Split(',');
                                model[0].dt1 = model[0].dt1.Clone();
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["sno"] = i.ToString();
                                    dr["IName"] = dt.Rows[i]["iname"].ToString();
                                    dr["Icode"] = dt.Rows[i]["icode"].ToString();
                                    dr["UOM"] = dt.Rows[i]["uom"].ToString();
                                    dr["partno"] = dt.Rows[i]["cpartno"].ToString();
                                    dr["Qty_in_stock"] = dt.Rows[i]["qtystk"].ToString();
                                    dr["Qty_Phy"] = dt.Rows[i]["qtychl"].ToString();
                                    dr["Variation"] = "0";
                                    if (sgen.Make_decimal(dt.Rows[i]["qtyout"].ToString().Trim()) > 0) dr["Variation"] = dt.Rows[i]["qtyout"].ToString().Trim();
                                    else if (sgen.Make_decimal(dt.Rows[i]["qtyin"].ToString().Trim()) > 0) dr["Variation"] = dt.Rows[i]["qtyin"].ToString().Trim();
                                    dr["Remark"] = dt.Rows[i]["iremark"].ToString();
                                    dr["LocCode"] = dt.Rows[i]["LocCode"].ToString();
                                    dr["Loc"] = dt.Rows[i]["Loc"].ToString();
                                    if (model[0].Col12.Trim() == "37")
                                    {
                                        model[0].dt1.Columns.Remove("LocCode");
                                        model[0].dt1.Columns.Remove("Loc");
                                    }
                                    model[0].dt1.Rows.Add(dr);
                                }
                            }
                            break;
                        case "ITEM":
                            mq = "select (it.client_unit_id||it.icode||s.loc) fstr,it.icode as Icode,it.iname as Iname,it.cpartno Partno,um.master_name as UOM " +
                                ",location_name(s.loc) as LocName,s.closing from item it inner join master_setting um on um.master_id=it.uom and um.type='UMM' and um.client_id='" + clientid_mst + "' " +
                                "and um.client_unit_id='" + unitid_mst + "' inner join (select t.client_unit_id,t.loc,t.icode,sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout,0)) as Issued," +
                                "sum(nvl(t.qtyin,0))-sum(nvl(t.qtyout,0)) as closing from btchtrans t  where length(trim(t.loc))>6 and trim(t.store)='Y' group by t.icode,t.client_unit_id,t.loc ) s on " +
                                "it.icode=s.icode and find_in_set(s.client_unit_id,it.client_unit_id)=1 where length(trim(it.icode))>8  and  (it.client_unit_id||it.icode||s.loc) in ('" + URL + "')";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt1.Rows.RemoveAt(0); }
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["SNo"] = dt.Rows[i]["fstr"].ToString();
                                    dr["Icode"] = dt.Rows[i]["icode"].ToString();
                                    dr["Iname"] = dt.Rows[i]["iname"].ToString();
                                    dr["Partno"] = dt.Rows[i]["Partno"].ToString();
                                    dr["Uom"] = dt.Rows[i]["uom"].ToString();
                                    dr["Qty_in_stock"] = dt.Rows[i]["closing"].ToString();
                                    dr["Qty_tfr"] = "0";
                                    dr["Bal_Stk"] = "0";
                                    dr["Remark"] = "-";
                                    dr["Curr_Loc"] = dt.Rows[i]["LocName"].ToString();
                                    dr["LocCode"] = "-";
                                    dr["Loc"] = "";
                                    model[0].dt1.Rows.Add(dr);
                                }
                            }
                            break;
                    }
                    break;
                #endregion
                #region dpr
                case "dpr":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            mq = @"select a.*,to_char(convert_tz(vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') vch_date1," +
                                "(client_id||client_unit_id||vch_num|| to_char(vch_date, 'yyyymmdd')||type) fstr from itransaction a " +
                                "where (client_id||client_unit_id||vch_num|| to_char(vch_date, 'yyyymmdd')||type)='" + URL + "'";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "EDMODE", "Y");
                                DataTable dt2 = new DataTable();
                                #region getdept
                                TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1 = cmd_Fun.dept(userCode, clientid_mst, unitid_mst);
                                #endregion
                                #region getdesig
                                TempData[MyGuid + "_Tlist2"] = model[0].TList2 = mod2 = cmd_Fun.desig(userCode, unitid_mst);
                                #endregion
                                #region GETOPNAME
                                TempData[MyGuid + "_Tlist3"] = model[0].TList3 = mod3 = cmd_Fun.opname(userCode, unitid_mst);
                                #endregion
                                model[0].Col1 = dt.Rows[0]["client_id"].ToString();
                                model[0].Col2 = dt.Rows[0]["client_unit_id"].ToString();
                                model[0].Col3 = dt.Rows[0]["ent_by"].ToString();
                                model[0].Col4 = dt.Rows[0]["ent_date"].ToString();
                                model[0].Col5 = dt.Rows[0]["edit_by"].ToString();
                                model[0].Col6 = dt.Rows[0]["edit_date"].ToString();
                                model[0].Col8 = "(client_id||client_unit_id||vch_num|| to_char(vch_date, 'yyyymmdd')||type) = '" + URL + "'";
                                model[0].Col9 = tm.Col9;
                                model[0].Col10 = tm.Col10;
                                model[0].Col11 = tm.Col11;
                                model[0].Col12 = dt.Rows[0]["type"].ToString();
                                sgen.SetSession(MyGuid, "KDPTYPE", dt.Rows[0]["type"].ToString());
                                model[0].Col13 = "Update";
                                model[0].Col100 = "Update & New";
                                model[0].Col121 = "U";
                                model[0].Col122 = "<u>U</u>pdate";
                                model[0].Col123 = "Update & Ne<u>w</u>";
                                model[0].Col14 = tm.Col14;
                                model[0].Col15 = tm.Col15;
                                model[0].Col18 = dt.Rows[0]["vch_num"].ToString();
                                model[0].Col20 = dt.Rows[0]["vch_date1"].ToString();
                                model[0].Col21 = dt.Rows[0]["totremark"].ToString();
                                model[0].SelectedItems1 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["deptno"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems2 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["desig"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems3 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["aname"].ToString()).Distinct()).Split(',');
                                model[0].dt1 = model[0].dt1.Clone();
                                //model[0].dt1 = ((DataTable)Session["dtbase"]).Clone();
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    if (model[0].Col12.Trim() == "16") dr["sno"] = dt.Rows[i]["client_unit_id"].ToString().Trim() + dt.Rows[i]["icode"].ToString().Trim();
                                    else if (model[0].Col12.Trim() == "17") dr["sno"] = dt.Rows[i]["fstr"].ToString().Trim();
                                    dr["IName"] = dt.Rows[i]["iname"].ToString();
                                    dr["Icode"] = dt.Rows[i]["icode"].ToString();
                                    dr["UOM"] = dt.Rows[i]["uom"].ToString();
                                    dr["partno"] = dt.Rows[i]["cpartno"].ToString();
                                    dr["Qty_in_stock"] = dt.Rows[i]["qtystk"].ToString();
                                    dr["Qty_Produce"] = dt.Rows[i]["qtychl"].ToString();
                                    dr["Qty_Act_Rec"] = dt.Rows[i]["qtyin"].ToString();
                                    dr["Qty_Req_Bal"] = dt.Rows[i]["qtybal"].ToString();
                                    dr["Remark"] = dt.Rows[i]["iremark"].ToString();
                                    dr["Batchno"] = dt.Rows[i]["btchno"].ToString();
                                    dr["Scrap"] = dt.Rows[i]["qtyrcvd"].ToString();
                                    model[0].dt1.Rows.Add(dr);
                                }
                                mq1 = "select (i.client_unit_id||i.icode||i.loc) fstr,i.icode,i.iname,i.cpartno,i.uom,i.qtystk,i.qtyin,i.iremark,i.loc," +
                                    "location_name(i.client_id||i.client_unit_id||i.loc) locname from btchtrans i " +
                                    "where (i.client_id||i.client_unit_id||i.vch_num|| to_char(i.vch_date, 'yyyymmdd')||i.type)='" + URL + "'";
                                dtt = sgen.getdata(userCode, mq1);
                                if (dtt.Rows.Count > 0)
                                {
                                    model[0].dt2 = model[0].dt2.Clone();
                                    for (int i = 0; i < dtt.Rows.Count; i++)
                                    {
                                        DataRow dr = model[0].dt2.NewRow();
                                        dr["sno"] = dtt.Rows[i]["fstr"].ToString();
                                        dr["IName"] = dtt.Rows[i]["iname"].ToString();
                                        dr["Icode"] = dtt.Rows[i]["icode"].ToString();
                                        dr["UOM"] = dtt.Rows[i]["uom"].ToString();
                                        dr["partno"] = dtt.Rows[i]["cpartno"].ToString();
                                        dr["Qty_in_stock"] = dtt.Rows[i]["qtystk"].ToString();
                                        dr["Qty_Act_Rec"] = dtt.Rows[i]["qtyin"].ToString();
                                        dr["Remark"] = dtt.Rows[i]["iremark"].ToString();
                                        dr["Loc"] = dtt.Rows[i]["locname"].ToString();
                                        dr["LocCode"] = dtt.Rows[i]["loc"].ToString();
                                        model[0].dt2.Rows.Add(dr);
                                    }
                                }
                            }
                            break;
                        case "NEW":
                            mq = "select master_id,upper(master_name) master_name,to_char(convert_tz(utc_timestamp(),'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') return_date " +
                                "from master_Setting where (master_id||to_char(vch_date, 'yyyymmdd')||type) = '" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "EDMODE", "N");
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                                ViewBag.scripCall = "enableForm();";
                                mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + dtt.Rows[0]["master_id"].ToString() + "'" + model[0].Col11.Trim() + "";
                                vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                                model[0].Col18 = vch_num;
                                model[0].Col20 = dtt.Rows[0]["return_date"].ToString();
                                model[0].Col12 = dtt.Rows[0]["master_id"].ToString();
                                sgen.SetSession(MyGuid, "KDPTYPE", dtt.Rows[0]["master_id"].ToString());
                                model[0].Col17 = "1";
                                model[0].Col9 = dtt.Rows[0]["master_name"].ToString();
                                #region getdept
                                TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1 = cmd_Fun.dept(userCode, clientid_mst, unitid_mst);
                                #endregion
                                #region getdesig
                                TempData[MyGuid + "_Tlist2"] = model[0].TList2 = mod2 = cmd_Fun.desig(userCode, unitid_mst);
                                #endregion
                                #region GETOPNAME
                                TempData[MyGuid + "_Tlist3"] = model[0].TList3 = mod3 = cmd_Fun.opname(userCode, unitid_mst);
                                #endregion

                                model[0].SelectedItems1 = new string[] { "" };
                                model[0].SelectedItems2 = new string[] { "" };
                                model[0].SelectedItems3 = new string[] { "" };
                            }
                            break;
                        case "ITEM":
                            if (model[0].Col12 == "16")
                            {
                                mq = "select (it.client_unit_id||it.icode) fstr,it.icode,it.iname,it.cpartno,um.master_name as uom,nvl(s.closing,0) qtystk," +
                                     "'0' as Qty_Produce,'0' Qty_Act_Rec,'0'  Qty_Req_bal,'-' remark from item it " +
                                     "inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
                                     "left join (select icode,client_unit_id,sum(op) op,sum(pktop) pktop,sum(qtyin) qtyin,sum(qtyout) out,sum(op)+sum(qtyin)-sum(qtyout) closing,sum(pktop) + sum(pktno) pktno from " +
    "(select icode, client_unit_id, nvl(op_2019, 0) op, nvl(pkt_2019, 0) pktop, 0 qtyin, 0 qtyout, 0 pktno from itbal union all " +
    "select icode, client_unit_id, sum(to_number(qtyin)) - sum(to_number(qtyout)) op, sum((case when substr(type, 1, 1) in ('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktop," +
    "sum(to_number(qtyin)) qtyin,sum(to_number(qtyout)) qtyout,0 pktno from itransaction " +
    "where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') " +
    "and to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "')-1 group by icode,client_unit_id union all " +
    "select icode,client_unit_id,0 as op,0 as pktop,to_number(qtyin) qtyin,to_number(qtyout) qtyout," +
    "sum((case when substr(type, 1, 1) in ('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktno from itransaction " +
    "where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and " +
    "to_date('" + model[0].Col20.Trim() + "','" + sgen.Getsqldateformat() + "') " +
    "group by icode,client_unit_id,to_number(qtyin),to_number(qtyout)) a group by icode, client_unit_id) s on it.icode=s.icode and it.client_unit_id=s.client_unit_id " +
                                     "where (it.client_unit_id||it.icode) in ('" + URL + "')";
                            }
                            else if (model[0].Col12 == "17")
                            {
                                mq = "select (mr.client_id||mr.client_unit_id||mr.vch_num||to_char(mr.vch_date,'yyyymmdd')||mr.type) fstr,mr.vch_num,mr.totremark remark,mr.pono Order_Id," +
                                    "to_char(convert_tz(mr.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), " + "'" + sgen.Getsqldateformat() + "') as vch_date,mr.deptno,mr.desig " +
                                    "from itransaction mr where (mr.client_id || mr.client_unit_id || mr.vch_num || to_char(mr.vch_date, 'yyyymmdd') || mr.type) in ('" + URL + "')";
                            }
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                if (model[0].Col12 == "17")
                                {
                                    model[0].Col21 = dt.Rows[0]["remark"].ToString().Trim();
                                    model[0].Col22 = dt.Rows[0]["vch_num"].ToString().Trim();//issueno
                                    model[0].Col23 = dt.Rows[0]["vch_date"].ToString().Trim();//issuedate
                                    model[0].SelectedItems1 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["deptno"].ToString()).Distinct()).Split(',');
                                    model[0].SelectedItems2 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["desig"].ToString()).Distinct()).Split(',');
                                }
                                if (model[0].Col12 == "16")
                                {
                                    if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt1.Rows.RemoveAt(0); }
                                    for (int i = 0; i < dt.Rows.Count; i++)
                                    {
                                        DataRow dr = model[0].dt1.NewRow();
                                        dr["SNo"] = dt.Rows[i]["fstr"].ToString();
                                        dr["Icode"] = dt.Rows[i]["icode"].ToString();
                                        dr["IName"] = dt.Rows[i]["iname"].ToString();
                                        dr["PARTNO"] = dt.Rows[i]["cpartno"].ToString();
                                        dr["UOM"] = dt.Rows[i]["uom"].ToString();
                                        dr["Qty_in_stock"] = dt.Rows[i]["qtystk"].ToString();
                                        dr["Qty_Produce"] = dt.Rows[i]["Qty_Produce"].ToString();
                                        dr["Qty_Act_Rec"] = dt.Rows[i]["Qty_Act_Rec"].ToString();
                                        dr["Qty_Req_Bal"] = dt.Rows[i]["Qty_Req_bal"].ToString();
                                        dr["Remark"] = dt.Rows[i]["remark"].ToString();
                                        dr["Batchno"] = "-";
                                        dr["Scrap"] = "0";
                                        model[0].dt1.Rows.Add(dr);
                                    }
                                }
                            }
                            break;
                        case "ITEM2":
                            mq = "select (it.client_unit_id||it.icode||s.loc) fstr,it.icode as Icode,it.iname as Iname,it.cpartno,um.master_name as uom," +
"location_name('" + clientid_mst + "||" + unitid_mst + "||s.loc') as LocName,s.loc,s.closing,'0' qty_act,'-' remark from item it " +
"inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,it.client_unit_id " +
"inner join (select icode,loc,client_unit_id,sum(op) op,sum(pktop) pktop,sum(qtyin) qtyin,sum(qtyout) out,sum(op)+sum(qtyin)-sum(qtyout) closing,sum(pktno)+sum(pktno) pktno from " +
    "(select icode, loc, client_unit_id, nvl(op_2019, 0) op, nvl(pkt_2019, 0) pktop, 0 qtyin, 0 qtyout, 0 pktno from itbal_enx " +
    "union all " +
    "select icode, loc, client_unit_id, sum(to_number(qtyin)) - sum(to_number(qtyout)) op, sum((case when substr(type, 1, 1) in " +
    "('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktop,sum(to_number(qtyin)) qtyin," +
    "sum(to_number(qtyout)) qtyout,0 pktno from btchtrans where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between " +
    "to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and to_date('" + year_from.Split(' ')[0].Trim() + "','" + sgen.Getsqldateformat() + "')-1 group by icode,loc,client_unit_id " +
    "union all select icode,loc,client_unit_id,0 op,0 pktop,to_number(qtyin) qtyin,to_number(qtyout) qtyout," +
    "nvl(sum((case when substr(type, 1, 1) in ('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)),0) pktno " +
    "from btchtrans where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between " +
    "to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and to_date('" + model[0].Col20.Trim() + "','" + sgen.Getsqldateformat() + "') " +
    "group by icode,loc,client_unit_id,to_number(qtyin),to_number(qtyout)) a group by icode, loc, client_unit_id) s on " +
"it.icode=s.icode and it.client_unit_id=s.client_unit_id where length(trim(it.icode))>8 and it.client_unit_id='" + unitid_mst + "' " +
"and (it.client_unit_id||it.icode||s.loc) in ('" + URL + "')";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                if (model[0].dt2.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt2.Rows.RemoveAt(0); }
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt2.NewRow();
                                    dr["SNo"] = dt.Rows[i]["fstr"].ToString();
                                    dr["ICode"] = dt.Rows[i]["icode"].ToString();
                                    dr["IName"] = dt.Rows[i]["iname"].ToString();
                                    dr["PartNo"] = dt.Rows[i]["cpartno"].ToString();
                                    dr["Uom"] = dt.Rows[i]["uom"].ToString();
                                    dr["Qty_In_Stock"] = dt.Rows[i]["closing"].ToString();
                                    dr["Qty_Act_Rec"] = dt.Rows[i]["qty_act"].ToString();
                                    dr["Remark"] = dt.Rows[i]["remark"].ToString();
                                    dr["LocCode"] = dt.Rows[i]["loc"].ToString();
                                    dr["Loc"] = dt.Rows[i]["LocName"].ToString();
                                    model[0].dt2.Rows.Add(dr);
                                }
                                model[0].dt2.AcceptChanges();
                            }
                            break;
                    }
                    break;
                #endregion
                #region nrgp_challan
                case "nrgp_challan":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            mq = "select i.vch_num,i.acode,c.c_name,c.c_gstin,c.addr," +
                                "to_char(convert_tz(i.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), " + "'" + sgen.Getsqldateformat() + "') as vch_date," +
                                "to_char(convert_tz(i.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), " + "'" + sgen.Getsqldateformat() + "') as expret_date," +
                                "i.aname,(case when i.contactno='0000000000' then '-' else i.contactno end) contactno,i.totremark,i.icode,it.iname,it.cpartno,um.master_name uom,i.qtystk,i.qtychl,i.qtyout,i.qtybal,i.iremark," +
                                "i.pono iord,i.client_id,i.client_unit_id,i.ent_by,i.ent_date,i.type,ks.master_name typename " +
                                "from itransaction i " +
                                "inner join master_setting ks on ks.master_id=i.type and find_in_set(ks.client_unit_id,i.client_unit_id)=1 " +
                                "inner join item it on it.icode=i.icode and it.type='IT' and find_in_set(it.client_unit_id,i.client_unit_id)=1 " +
                                "inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
                                "inner join clients_mst c on c.vch_num=i.acode and c.type='BCD' and substr(c.vch_num,0,3)='203' and find_in_set(c.client_unit_id,i.client_unit_id)=1 " +
                                "where (i.client_id||i.client_unit_id||i.vch_num|| to_char(i.vch_date, 'yyyymmdd')||i.type)='" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                // shiv               
                                dt = sgen.getdata(userCode, "select '-' as SNo ,'-' as Icode,'-' as IName,'-' PartNo,'-' as UOM,'0' as Qty_in_stock,'0' as Qty_Req," +
                                    "'0' as Qty_Out,'0' Qty_Req_Bal,'-' as Remark,'0' Order_Id from dual");
                                model[0].dt1 = dt;
                                sgen.SetSession(MyGuid, "KNRGP_DT1", model[0].dt1);
                                // shiv
                                dt = sgen.getdata(userCode, "select '-' as SNo ,'-' as Icode,'-' as IName,'-' PartNo,'-' as UOM,'0' as Qty_in_stock,'0' as Qty_Out," +
                                    "'-' as Remark,'0' LocCode,'-' Loc from dual");
                                model[0].dt2 = dt;
                                sgen.SetSession(MyGuid, "KNRGP_DT2", model[0].dt2);
                                sgen.SetSession(MyGuid, "EDMODE", "Y");
                                model[0].Col1 = dtt.Rows[0]["client_id"].ToString();
                                model[0].Col2 = dtt.Rows[0]["client_unit_id"].ToString();
                                model[0].Col3 = dtt.Rows[0]["ent_by"].ToString();
                                model[0].Col4 = dtt.Rows[0]["ent_date"].ToString();
                                model[0].Col8 = "(client_id||client_unit_id||vch_num|| to_char(vch_date, 'yyyymmdd')||type) = '" + URL + "'";
                                model[0].Col9 = dtt.Rows[0]["typename"].ToString().ToUpper();
                                model[0].Col10 = tm.Col10;
                                model[0].Col11 = tm.Col11;
                                model[0].Col12 = dtt.Rows[0]["type"].ToString();
                                model[0].Col13 = "Update";
                                model[0].Col100 = "Update & New";
                                model[0].Col121 = "U";
                                model[0].Col122 = "<u>U</u>pdate";
                                model[0].Col123 = "Update & Ne<u>w</u>";
                                model[0].Col14 = tm.Col14;
                                model[0].Col15 = tm.Col15;
                                model[0].Col16 = tm.Col16;
                                model[0].Col17 = "(client_id||client_unit_id||vch_num|| to_char(vch_date, 'yyyymmdd')||type) = '" + URL + "'";
                                sgen.SetSession(MyGuid, "KNRGPTYPE", dtt.Rows[0]["type"].ToString());
                                model[0].Col18 = dtt.Rows[0]["vch_num"].ToString();
                                model[0].Col19 = dtt.Rows[0]["c_name"].ToString();
                                model[0].Col49 = dtt.Rows[0]["acode"].ToString();
                                model[0].Col20 = dtt.Rows[0]["c_gstin"].ToString();
                                model[0].Col21 = dtt.Rows[0]["addr"].ToString();
                                model[0].Col22 = dtt.Rows[0]["expret_date"].ToString();
                                model[0].Col23 = dtt.Rows[0]["aname"].ToString();
                                model[0].Col24 = dtt.Rows[0]["contactno"].ToString();
                                model[0].Col25 = dtt.Rows[0]["totremark"].ToString();
                                model[0].Col27 = dtt.Rows[0]["vch_date"].ToString();
                                model[0].dt1 = model[0].dt1.Clone();
                                for (int i = 0; i < dtt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    if (model[0].Col12.Trim() == "21") dr["sno"] = dtt.Rows[i]["client_unit_id"].ToString().Trim() + dtt.Rows[i]["icode"].ToString().Trim();
                                    dr["IName"] = dtt.Rows[i]["iname"].ToString();
                                    dr["Icode"] = dtt.Rows[i]["icode"].ToString();
                                    dr["UOM"] = dtt.Rows[i]["uom"].ToString();
                                    dr["partno"] = dtt.Rows[i]["cpartno"].ToString();
                                    dr["Qty_in_stock"] = dtt.Rows[i]["qtystk"].ToString();
                                    dr["Qty_Req"] = dtt.Rows[i]["qtychl"].ToString();
                                    dr["Qty_Out"] = dtt.Rows[i]["qtyout"].ToString();
                                    dr["Qty_Req_Bal"] = dtt.Rows[i]["qtybal"].ToString();
                                    dr["Remark"] = dtt.Rows[i]["iremark"].ToString();
                                    dr["Order_Id"] = dtt.Rows[i]["iord"].ToString();//orderid
                                    model[0].dt1.Rows.Add(dr);
                                }
                                mq1 = "select (i.client_unit_id||i.icode||i.loc) fstr,i.icode,it.iname,it.cpartno,um.master_name uom,i.qtystk,i.qtyout,i.iremark," +
                                    "i.loc,i.locname from btchtrans i " +
                                    "inner join item it on it.icode=i.icode and it.type='IT' and find_in_set(it.client_unit_id,i.client_unit_id)=1 " +
                                    "inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
                               "where (i.client_id||i.client_unit_id||i.vch_num|| to_char(i.vch_date, 'yyyymmdd')||i.type)='" + URL + "'";
                                dt = sgen.getdata(userCode, mq1);
                                if (dt.Rows.Count > 0)
                                {
                                    model[0].dt2 = model[0].dt2.Clone();
                                    for (int i = 0; i < dt.Rows.Count; i++)
                                    {
                                        DataRow dr = model[0].dt2.NewRow();
                                        dr["sno"] = dt.Rows[i]["fstr"].ToString();
                                        dr["IName"] = dt.Rows[i]["iname"].ToString();
                                        dr["Icode"] = dt.Rows[i]["icode"].ToString();
                                        dr["UOM"] = dt.Rows[i]["uom"].ToString();
                                        dr["partno"] = dt.Rows[i]["cpartno"].ToString();
                                        dr["Qty_in_stock"] = dt.Rows[i]["qtystk"].ToString();
                                        dr["Qty_Out"] = dt.Rows[i]["qtyout"].ToString();
                                        dr["Remark"] = dt.Rows[i]["iremark"].ToString();
                                        dr["Loc"] = dt.Rows[i]["locname"].ToString();
                                        dr["LocCode"] = dt.Rows[i]["loc"].ToString();
                                        model[0].dt2.Rows.Add(dr);
                                    }
                                }
                            }
                            break;
                        case "NEW":
                            mq = "select master_id,upper(master_name) master_name from master_Setting where (master_id||to_char(vch_date, 'yyyymmdd')||type) = '" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "EDMODE", "N");
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                                ViewBag.vfill = "disabled='disabled'";
                                ViewBag.scripCall = "enableForm();";
                                mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + dtt.Rows[0]["master_id"].ToString() + "'" + model[0].Col11.Trim() + "";
                                vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                                sgen.SetSession(MyGuid, "KNRGTYPE", dtt.Rows[0]["master_id"].ToString());
                                model[0].Col9 = dtt.Rows[0]["master_name"].ToString();
                                model[0].Col12 = dtt.Rows[0]["master_id"].ToString();
                                model[0].Col18 = vch_num;
                                model[0].Col27 = sgen.server_datetime_local(userCode);
                                // shiv               
                                dt = sgen.getdata(userCode, "select '-' as SNo ,'-' as Icode,'-' as IName,'-' PartNo,'-' as UOM,'0' as Qty_in_stock,'0' as Qty_Req,'0' as Qty_Out,'0' Qty_Req_Bal,'-' as Remark,'0' Order_Id from dual");
                                model[0].dt1 = dt;
                                sgen.SetSession(MyGuid, "KNRGP_DT1", model[0].dt1);
                                // shiv
                                dt = sgen.getdata(userCode, "select '-' as SNo ,'-' as Icode,'-' as IName,'-' PartNo,'-' as UOM,'0' as Qty_in_stock,'0' as Qty_Out,'-' as Remark,'0' LocCode,'-' Loc from dual");
                                model[0].dt2 = dt;
                                sgen.SetSession(MyGuid, "KNRGP_DT2", model[0].dt2);
                            }
                            break;
                        case "PARTY":
                            mq = "select a.c_name as name,a.c_gstin as gstin,a.addr,a.vch_num,a.tor from clients_mst a " +
                                "where (a.vch_num||to_char(a.vch_date, 'yyyymmdd')|| a.type) = '" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                model[0].Col49 = dtt.Rows[0]["vch_num"].ToString();
                                model[0].Col19 = dtt.Rows[0]["name"].ToString();
                                model[0].Col20 = dtt.Rows[0]["gstin"].ToString();
                                model[0].Col21 = dtt.Rows[0]["addr"].ToString();
                            }
                            break;
                        case "ITEM":
                            if (model[0].Col12 == "22")
                            {
                                mq = "select (it.client_unit_id||it.icode) fstr,it.icode as Icode,it.iname as Iname,it.cpartno,um.master_name as uom,s.closing qtystk," +
                                     "'0' as Qty_Req,'0' Qty_Out,'0' Qty_Req_bal,'-' remark,'0' Order_Id " +
                                     "from item it inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
                                     "inner join (select t.client_unit_id,t.icode,sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout,0)) as Issued,sum(nvl(t.qtyin,0))-sum(nvl(t.qtyout,0)) as closing from itransaction t where trim(t.store)='Y' group by t.icode," +
                                     "t.client_unit_id ) s on it.icode=s.icode and it.client_unit_id=s.client_unit_id " +
                                     "where (it.client_unit_id||it.icode) in ('" + URL + "')";
                            }
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt1.Rows.RemoveAt(0); }
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["SNo"] = dt.Rows[i]["fstr"].ToString();
                                    dr["Icode"] = dt.Rows[i]["icode"].ToString();
                                    dr["IName"] = dt.Rows[i]["iname"].ToString();
                                    dr["PARTNO"] = dt.Rows[i]["cpartno"].ToString();
                                    dr["UOM"] = dt.Rows[i]["uom"].ToString();
                                    dr["Qty_in_stock"] = dt.Rows[i]["qtystk"].ToString();
                                    dr["Qty_Req"] = dt.Rows[i]["Qty_Req"].ToString();
                                    dr["Qty_Out"] = dt.Rows[i]["Qty_Out"].ToString();
                                    dr["Qty_Req_Bal"] = dt.Rows[i]["Qty_Req_bal"].ToString();
                                    dr["Remark"] = "-";
                                    dr["Order_Id"] = "-";
                                    model[0].dt1.Rows.Add(dr);
                                }
                            }
                            break;
                        case "ITEM2":
                            mq = "select (it.client_unit_id||it.icode||s.loc) fstr,it.icode as Icode,it.iname as Iname,it.cpartno,um.master_name as uom," +
"location_name('" + clientid_mst + "||" + unitid_mst + "||s.loc') as LocName,s.loc,s.closing,'0' qtyout,'-' remark from item it " +
"inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,it.client_unit_id " +
"inner join (select t.client_unit_id,t.loc,t.icode,sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout,0)) as Issued," +
"sum(nvl(t.qtyin,0))-sum(nvl(t.qtyout,0)) as closing from btchtrans t where length(trim(t.loc))>6 and trim(t.store)='Y' group by t.icode,t.client_unit_id,t.loc ) s on " +
"it.icode=s.icode and it.client_unit_id=s.client_unit_id where length(trim(it.icode))>8 and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 " +
"and (it.client_unit_id||it.icode||s.loc) in ('" + URL + "')";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                if (model[0].dt2.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt2.Rows.RemoveAt(0); }
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt2.NewRow();
                                    dr["SNo"] = dt.Rows[i]["fstr"].ToString();
                                    dr["ICode"] = dt.Rows[i]["icode"].ToString();
                                    dr["IName"] = dt.Rows[i]["iname"].ToString();
                                    dr["PartNo"] = dt.Rows[i]["cpartno"].ToString();
                                    dr["Uom"] = dt.Rows[i]["uom"].ToString();
                                    dr["Qty_In_Stock"] = dt.Rows[i]["closing"].ToString();
                                    dr["Qty_Out"] = dt.Rows[i]["qtyout"].ToString();
                                    dr["Remark"] = dt.Rows[i]["remark"].ToString();
                                    dr["LocCode"] = dt.Rows[i]["loc"].ToString();
                                    dr["Loc"] = dt.Rows[i]["LocName"].ToString();
                                    model[0].dt2.Rows.Add(dr);
                                }
                                model[0].dt2.AcceptChanges();
                            }
                            break;
                    }
                    break;
                #endregion
                #region dispatch
                case "dispatch":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            mq = "select (i.client_id||i.client_unit_id||i.vch_num|| to_char(i.vch_date, 'yyyymmdd')||i.type) as fstr,i.vch_num,i.TMODE," +
                                "i.VEHNO,nvl(i.GDISC, 0) as sdl_no,i.acode,c.c_name,c.c_gstin," +
                                "c.addr,nvl(ba.country_name,'-') as country_name,nvl(ba.state_name,'-') state_name,nvl(ba.city_name,'-') as city_name,c.pincode_2,i.type2,to_char(convert_tz(i.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') as dsp_date," +
                                "to_char(convert_tz(i.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') as expret_date," +
                                "i.aname,(case when i.contactno='0000000000' then '-' else i.contactno end) contactno,i.totremark,i.dspno,i.icode,it.iname,it.cpartno,i.deptname,i.rgptype," +
                                "to_char(convert_tz(i.CHLDATE, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') as po_date," +
                                "to_char(convert_tz(i.INVDATE, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') as so_date," +
                                "to_char(convert_tz(i.EWAYDATE, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') as sdl_date," +
                                "to_char(convert_tz(i.dspdate, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') as dsp_date," +
                                "um.master_name uom, i.qtystk,i.qtychl,i.qtyout,i.qtybal,i.iremark,i.pono iord, i.client_id,i.client_unit_id,i.ent_by,i.ent_date," +
                                "i.type,(case when i.type = '60' then 'SALES ORDER' when i.type = '61' then 'DISPATCH SCHEDULE' when i.type = '62' then 'WITHOUT SO' when i.type = 'ST' then 'STN OUT' else '-' end)" +
                                " as typename from itransaction i " +
                                "inner join item it on it.icode = i.icode and it.type = 'IT' and find_in_set(i.client_unit_id, it.client_unit_id)=1 " +
                                "left join master_setting um on um.master_id = it.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, it.client_unit_id)= 1 " +
                                "inner join clients_mst c on c.vch_num = i.acode and c.type = 'BCD' and find_in_set(c.client_unit_id,i.client_unit_id)=1 " +
                                "left join country_state ba on ba.rec_id = c.city2 where(i.client_id || i.client_unit_id || i.vch_num||c.vch_num || to_char(i.vch_date, 'yyyymmdd') || i.type) = '" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                switch (dtt.Rows[0]["type"].ToString())
                                {
                                    case "60":
                                        dt = sgen.getdata(userCode, "select '-' as SNo ,'-' as Icode,'-' as IName,'-' PartNo,'-' as UOM,'0' as Qty_in_stock,'0' as Qty_Req,'0' as Qty_Out,'0' Qty_Req_Bal,'0' as PO_No,'-' as PO_Date,'-' as SO_No,'-' as SO_Date,'-' as Remark,'0' Order_Id from dual");
                                        model[0].dt1 = dt;
                                        sgen.SetSession(MyGuid, "KDS_DT1", (model[0].dt1).Copy());
                                        break;
                                    case "61":
                                        dt = sgen.getdata(userCode, "select '-' as SNo ,'-' as Icode,'-' as IName,'-' PartNo,'-' as UOM,'0' as Qty_in_stock,'0' as Qty_Req,'0' as Qty_Out,'0' Qty_Req_Bal,'0' as PO_No,'-' as PO_Date,'-' as SO_No,'-' as SO_Date,'-' as Sdl_no,'-' as Sdl_date,'-' as Remark,'0' Order_Id from dual");
                                        model[0].dt1 = dt;
                                        sgen.SetSession(MyGuid, "KDS_DT1", (model[0].dt1).Copy());
                                        break;
                                    case "62":
                                        dt = sgen.getdata(userCode, "select '-' as SNo ,'-' as Icode,'-' as IName,'-' PartNo,'-' as UOM,'0' as Qty_in_stock,'0' as Qty_Req,'0' as Qty_Out,'0' Qty_Req_Bal,'-' as Remark,'0' Order_Id from dual");
                                        model[0].dt1 = dt;
                                        sgen.SetSession(MyGuid, "KDS_DT1", (model[0].dt1).Copy());
                                        break;
                                    default:
                                        dt = sgen.getdata(userCode, "select '-' as SNo ,'-' as Icode,'-' as IName,'-' PartNo,'-' as UOM,'0' as Qty_in_stock,'0' as Qty_Req,'0' as Qty_Out,'0' Qty_Req_Bal,'-' as Remark,'0' Order_Id from dual");
                                        model[0].dt1 = dt;
                                        sgen.SetSession(MyGuid, "KDS_DT1", (model[0].dt1).Copy());
                                        break;
                                }
                                dt = sgen.getdata(userCode, "select '-' as SNo ,'-' as Icode,'-' as IName,'-' PartNo,'-' as UOM,'0' as Qty_in_stock,'0' as Qty_Out," +
                                    "'-' as Remark,'0' LocCode,'-' Loc from dual");
                                model[0].dt2 = dt;
                                sgen.SetSession(MyGuid, "KDS_DT2", (model[0].dt2).Copy());
                                sgen.SetSession(MyGuid, "EDMODE", "Y");
                                model[0].Col1 = dtt.Rows[0]["client_id"].ToString();
                                model[0].Col2 = dtt.Rows[0]["client_unit_id"].ToString();
                                model[0].Col3 = dtt.Rows[0]["ent_by"].ToString();
                                model[0].Col4 = dtt.Rows[0]["ent_date"].ToString();
                                model[0].Col8 = "(client_id||client_unit_id||vch_num||acode|| to_char(vch_date, 'yyyymmdd')||type) = '" + URL + "'";
                                model[0].Col9 = dtt.Rows[0]["typename"].ToString().ToUpper();
                                model[0].Col10 = tm.Col10;
                                model[0].Col11 = tm.Col11;
                                model[0].Col12 = dtt.Rows[0]["type"].ToString();
                                model[0].Col13 = "Update";
                                model[0].Col100 = "Update & New";
                                model[0].Col121 = "U";
                                model[0].Col122 = "<u>U</u>pdate";
                                model[0].Col123 = "Update & Ne<u>w</u>";
                                model[0].Col14 = tm.Col14;
                                model[0].Col15 = tm.Col15;
                                model[0].Col16 = tm.Col16;
                                model[0].Col17 = "(client_id||client_unit_id||vch_num||acode|| to_char(vch_date, 'yyyymmdd')||type) = '" + URL + "'";
                                sgen.SetSession(MyGuid, "KDSTYPE", dtt.Rows[0]["type"].ToString());
                                model[0].Col18 = dtt.Rows[0]["vch_num"].ToString();
                                model[0].Col19 = dtt.Rows[0]["c_name"].ToString();
                                model[0].Col49 = dtt.Rows[0]["acode"].ToString();
                                sgen.SetSession(MyGuid, "CST_ID", dtt.Rows[0]["acode"].ToString());
                                model[0].Col20 = dtt.Rows[0]["c_gstin"].ToString();
                                model[0].Col21 = dtt.Rows[0]["addr"].ToString();
                                model[0].Col75 = dtt.Rows[0]["city_name"].ToString();
                                model[0].Col76 = dtt.Rows[0]["state_name"].ToString();
                                model[0].Col77 = dtt.Rows[0]["country_name"].ToString();
                                model[0].Col78 = dtt.Rows[0]["pincode_2"].ToString();
                                model[0].Col22 = dtt.Rows[0]["dsp_date"].ToString();
                                model[0].Col23 = dtt.Rows[0]["aname"].ToString();
                                model[0].Col24 = dtt.Rows[0]["contactno"].ToString();
                                model[0].Col25 = dtt.Rows[0]["totremark"].ToString();
                                model[0].Col30 = dtt.Rows[0]["type2"].ToString();
                                model[0].Col31 = dtt.Rows[0]["deptname"].ToString(); //terms of del
                                model[0].Col32 = dtt.Rows[0]["rgptype"].ToString();  //dsp thro
                                model[0].Col35 = dtt.Rows[0]["dsp_date"].ToString();  //manual dspdate
                                model[0].Col34 = dtt.Rows[0]["dspno"].ToString();  //manual dspno
                                sgen.SetSession(MyGuid, "SO_TYP", dtt.Rows[0]["type2"].ToString());
                                model[0].dt1 = model[0].dt1.Clone();
                                for (int i = 0; i < dtt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    //if (model[0].Col12.Trim() == "21") dr["sno"] = dtt.Rows[i]["client_unit_id"].ToString().Trim() + dtt.Rows[i]["icode"].ToString().Trim();
                                    dr["sno"] = dtt.Rows[i]["fstr"].ToString();
                                    dr["IName"] = dtt.Rows[i]["iname"].ToString();
                                    dr["Icode"] = dtt.Rows[i]["icode"].ToString();
                                    dr["UOM"] = dtt.Rows[i]["uom"].ToString();
                                    dr["partno"] = dtt.Rows[i]["cpartno"].ToString();
                                    dr["Qty_in_stock"] = dtt.Rows[i]["qtystk"].ToString();
                                    dr["Qty_Req"] = dtt.Rows[i]["qtychl"].ToString();
                                    dr["Qty_Out"] = dtt.Rows[i]["qtyout"].ToString();
                                    dr["Qty_Req_Bal"] = dtt.Rows[i]["qtybal"].ToString();
                                    dr["Remark"] = dtt.Rows[i]["iremark"].ToString();
                                    dr["Order_Id"] = dtt.Rows[i]["iord"].ToString();//orderid
                                    if (dtt.Rows[0]["type"].ToString() != "62" && dtt.Rows[0]["type"].ToString() != "ST")
                                    {
                                        dr["PO_No"] = dtt.Rows[i]["TMODE"].ToString();
                                        dr["PO_Date"] = dtt.Rows[i]["po_date"].ToString();
                                        dr["SO_No"] = dtt.Rows[i]["VEHNO"].ToString();
                                        dr["SO_Date"] = dtt.Rows[i]["so_date"].ToString();
                                    }
                                    if (dtt.Rows[0]["type"].ToString() == "61")
                                    {
                                        dr["Sdl_no"] = dtt.Rows[i]["sdl_no"].ToString();
                                        dr["Sdl_date"] = dtt.Rows[i]["sdl_date"].ToString();
                                    }
                                    model[0].dt1.Rows.Add(dr);
                                }
                                mq1 = "select (i.client_unit_id||i.icode||i.loc) fstr,i.icode,it.iname,it.cpartno,um.master_name uom,i.qtystk,i.qtyout,i.iremark," +
                                    "i.loc,location_name(i.client_id||i.client_unit_id||i.loc) locname from btchtrans i " +
                                    "inner join item it on it.icode=i.icode and it.type='IT' and find_in_set(i.client_unit_id,it.client_unit_id)=1 " +
                                    "left join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
                               "where (i.client_id||i.client_unit_id||i.vch_num|| to_char(i.vch_date, 'yyyymmdd')||i.type)='" + dtt.Rows[0]["fstr"].ToString() + "'";
                                dt = sgen.getdata(userCode, mq1);
                                if (dt.Rows.Count > 0)
                                {
                                    model[0].dt2 = model[0].dt2.Clone();
                                    for (int i = 0; i < dt.Rows.Count; i++)
                                    {
                                        DataRow dr = model[0].dt2.NewRow();
                                        dr["sno"] = dt.Rows[i]["fstr"].ToString();
                                        dr["IName"] = dt.Rows[i]["iname"].ToString();
                                        dr["Icode"] = dt.Rows[i]["icode"].ToString();
                                        dr["UOM"] = dt.Rows[i]["uom"].ToString();
                                        dr["partno"] = dt.Rows[i]["cpartno"].ToString();
                                        dr["Qty_in_stock"] = dt.Rows[i]["qtystk"].ToString();
                                        dr["Qty_Out"] = dt.Rows[i]["qtyout"].ToString();
                                        dr["Remark"] = dt.Rows[i]["iremark"].ToString();
                                        dr["Loc"] = dt.Rows[i]["locname"].ToString();
                                        dr["LocCode"] = dt.Rows[i]["loc"].ToString();
                                        model[0].dt2.Rows.Add(dr);
                                    }
                                }
                            }
                            break;
                        case "SOTYPE":
                            mq = "select master_id,upper(master_name) master_name,to_char(convert_tz(utc_timestamp(),'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') po_date " +
                                "from master_Setting where master_id||To_Char(vch_date, 'yyyymmdd')||type = '" + URL + "' ";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "EDMODE", "N");
                                model[0].Col30 = dt.Rows[0]["master_id"].ToString();
                                sgen.SetSession(MyGuid, "SO_TYP", model[0].Col30.Trim());
                                if (model[0].Col30 == "ST")
                                {
                                    sgen.SetSession(MyGuid, "EDMODE", "N");
                                    ViewBag.vnew = "disabled='disabled'";
                                    ViewBag.vedit = "disabled='disabled'";
                                    ViewBag.vsave = "";
                                    ViewBag.vsavenew = "";
                                    ViewBag.vfill = "disabled='disabled'";
                                    ViewBag.scripCall = "enableForm();";
                                    mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + dt.Rows[0]["master_id"].ToString() + "'" + model[0].Col11.Trim() + "";
                                    vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                                    sgen.SetSession(MyGuid, "KDSTYPE", dt.Rows[0]["master_id"].ToString());
                                    model[0].Col9 = dt.Rows[0]["master_name"].ToString();
                                    model[0].Col12 = dt.Rows[0]["master_id"].ToString();
                                    model[0].Col22 = sgen.server_datetime_local(userCode);
                                    model[0].Col18 = vch_num;
                                    dt = sgen.getdata(userCode, "select '-' as SNo ,'-' as Icode,'-' as IName,'-' PartNo,'-' as UOM,'0' as Qty_in_stock,'0' as Qty_Req,'0' as Qty_Out,'0' Qty_Req_Bal,'-' as Remark,'0' Order_Id from dual");
                                    model[0].dt1 = dt;
                                    sgen.SetSession(MyGuid, "KDS_DT1", (model[0].dt1).Copy());
                                    dt = sgen.getdata(userCode, "select '-' as SNo ,'-' as Icode,'-' as IName,'-' PartNo,'-' as UOM,'0' as Qty_in_stock,'0' as Qty_Out,'-' as Remark,'0' LocCode,'-' Loc from dual");
                                    model[0].dt2 = dt;
                                    sgen.SetSession(MyGuid, "KDS_DT2", (model[0].dt2).Copy());
                                    Make_query(viewName.ToLower(), "Select PARTY", "PARTY", "1", "", "");
                                    ViewBag.scripCall = "callFoo('Select PARTY');";
                                }
                                else
                                {
                                    Make_query(viewName.ToLower(), "Select Dispatch Type", "NEW", "1", "", "");
                                    ViewBag.scripCall = "callFoo('Select Dispatch Type');";
                                }
                            }
                            break;
                        case "NEW":
                            //mq = "select * from (select '60' as ID ,'SALES ORDER' as master_name," +
                            //     "to_char(convert_tz(utc_timestamp(),'UTC','+5:30'),'ddmmyyyy') po_date from dual union all select '61' as ID " +
                            //     ",'DISPATCH SCHEDULE' as master_name,to_char(convert_tz(utc_timestamp(), 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') po_date" +
                            //     " from dual union all select '62' as ID ,'WITHOUT SO' as master_name," +
                            //     "to_char(convert_tz(utc_timestamp(), 'UTC', '+5:30'), 'ddmmyyyy') po_date from dual) a where a.id = '" + URL + "'";
                            mq = "select master_id as id,master_name,to_char(convert_tz(utc_timestamp(),'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') po_date " +
                                "from master_setting where (master_id||to_char(vch_date,'yyyymmdd')||type) = '" + URL + "'";
                            //mq = "select master_id,upper(master_name) master_name from master_Setting where (client_id||client_unit_id||master_id||to_char(vch_date, 'yyyymmdd')||type) = '" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "EDMODE", "N");
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                                ViewBag.vfill = "disabled='disabled'";
                                ViewBag.scripCall = "enableForm();";
                                mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + dtt.Rows[0]["id"].ToString() + "'" + model[0].Col11.Trim() + "";
                                vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                                sgen.SetSession(MyGuid, "KDSTYPE", dtt.Rows[0]["id"].ToString());
                                model[0].Col9 = dtt.Rows[0]["master_name"].ToString();
                                model[0].Col12 = dtt.Rows[0]["id"].ToString();
                                model[0].Col22 = sgen.server_datetime_local(userCode);
                                model[0].Col18 = vch_num;
                                switch (sgen.GetSession(MyGuid, "KDSTYPE").ToString())
                                {
                                    case "60":
                                        dt = sgen.getdata(userCode, "select '-' as SNo ,'-' as Icode,'-' as IName,'-' PartNo,'-' as UOM,'0' as Qty_in_stock,'0' as Qty_Req,'0' as Qty_Out,'0' Qty_Req_Bal,'0' as PO_No,'-' as PO_Date,'-' as SO_No,'-' as SO_Date,'-' as Remark,'0' Order_Id from dual");
                                        model[0].dt1 = dt;
                                        sgen.SetSession(MyGuid, "KDS_DT1", (model[0].dt1).Copy());
                                        break;
                                    case "61":
                                        dt = sgen.getdata(userCode, "select '-' as SNo ,'-' as Icode,'-' as IName,'-' PartNo,'-' as UOM,'0' as Qty_in_stock,'0' as Qty_Req,'0' as Qty_Out,'0' Qty_Req_Bal,'0' as PO_No,'-' as PO_Date,'-' as SO_No,'-' as SO_Date,'-' as Sdl_no,'-' as Sdl_date,'-' as Remark,'0' Order_Id from dual");
                                        model[0].dt1 = dt;
                                        sgen.SetSession(MyGuid, "KDS_DT1", (model[0].dt1).Copy());
                                        break;
                                    case "62":
                                        dt = sgen.getdata(userCode, "select '-' as SNo ,'-' as Icode,'-' as IName,'-' PartNo,'-' as UOM,'0' as Qty_in_stock,'0' as Qty_Req,'0' as Qty_Out,'0' Qty_Req_Bal,'-' as Remark,'0' Order_Id from dual");
                                        model[0].dt1 = dt;
                                        sgen.SetSession(MyGuid, "KDS_DT1", (model[0].dt1).Copy());
                                        break;
                                    default:
                                        dt = sgen.getdata(userCode, "select '-' as SNo ,'-' as Icode,'-' as IName,'-' PartNo,'-' as UOM,'0' as Qty_in_stock,'0' as Qty_Req,'0' as Qty_Out,'0' Qty_Req_Bal,'-' as Remark,'0' Order_Id from dual");
                                        model[0].dt1 = dt;
                                        sgen.SetSession(MyGuid, "KDS_DT1", (model[0].dt1).Copy());
                                        break;
                                }
                                dt = sgen.getdata(userCode, "select '-' as SNo ,'-' as Icode,'-' as IName,'-' PartNo,'-' as UOM,'0' as Qty_in_stock,'0' as Qty_Out,'-' as Remark,'0' LocCode,'-' Loc from dual");
                                model[0].dt2 = dt;
                                sgen.SetSession(MyGuid, "KDS_DT2", (model[0].dt2).Copy());
                                Make_query(viewName.ToLower(), "Select Party", "PARTY", "1", "", "");
                                ViewBag.scripCall = "callFoo('Select Party');";
                            }
                            break;
                        case "PARTY":
                            //mq = "select a.c_name as name,a.c_gstin as gstin,a.addr,a.vch_num,a.tor from clients_mst a " +
                            //    "where (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date, 'yyyymmdd')|| a.type) = '" + URL + "'";
                            if (sgen.GetSession(MyGuid, "KDSTYPE").ToString() == "61")
                            {
                                mq = "select distinct a.c_name as name,a.c_gstin as gstin,a.addr as address,a.vch_num,a.tor,nvl(ba.country_name,'-') as country_name," +
"nvl(ba.state_name,'-') state_name,nvl(ba.city_name,'-') as city_name,a.pincode_2," +
                                "dsc.col20 from clients_mst a left join country_state ba on ba.rec_id = a.city2 inner join kc_tab dsc on dsc.col1 = a.vch_num " +
                                "and substr(dsc.type,1,1) = '4' and dsc.col20='DSC' and dsc.client_unit_id = a.client_unit_id where " +
                                "(a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.type) = '" + URL + "'";
                            }
                            else if (sgen.GetSession(MyGuid, "KDSTYPE").ToString() == "60")
                            {
                                mq = "select distinct a.c_name as name,a.c_gstin as gstin,a.addr as address,a.vch_num,a.tor,nvl(ba.country_name,'-') as country_name," +
"nvl(ba.state_name,'-') state_name,nvl(ba.city_name,'-') as city_name,a.pincode_2 from clients_mst a left join country_state ba on ba.rec_id = a.city2 inner join purchasesc p on p.acode = a.vch_num and a.client_unit_id = p.client_unit_id and p.type in ('40','41','42','43','44') and p.pur_type='NPI' " +
                                      "where (a.vch_num|| to_char(a.vch_date,'yyyymmdd')||a.type) = '" + URL + "'";
                            }
                            else
                            {
                                mq = "select a.c_name as name,a.c_gstin as gstin,a.addr as address,a.vch_num,a.tor,nvl(ba.country_name,'-') as country_name," +
"nvl(ba.state_name,'-') state_name,nvl(ba.city_name,'-') as city_name,a.pincode_2 from clients_mst a " +
                                     "left join country_state ba on ba.rec_id = a.city2  where a.vch_num||To_Char(a.vch_date, 'yyyymmdd')|| a.type = '" + URL + "'";
                            }
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                model[0].Col49 = dt.Rows[0]["vch_num"].ToString();
                                model[0].Col19 = dt.Rows[0]["name"].ToString();
                                model[0].Col21 = dt.Rows[0]["address"].ToString();
                                model[0].Col20 = dt.Rows[0]["gstin"].ToString();
                                model[0].Col75 = dt.Rows[0]["city_name"].ToString();
                                model[0].Col76 = dt.Rows[0]["state_name"].ToString();
                                model[0].Col77 = dt.Rows[0]["country_name"].ToString();
                                model[0].Col78 = dt.Rows[0]["pincode_2"].ToString();
                                sgen.SetSession(MyGuid, "CST_ID", dt.Rows[0]["vch_num"].ToString());
                            }
                            break;
                        case "ITEM":
                            if (sgen.GetSession(MyGuid, "KDSTYPE").ToString() == "61")
                            {
                                //mq = " select distinct '-' as fstr, it.icode as Icode,it.iname as Iname,it.cpartno Partno,hsn.master_name as hsn,(kt.col10-nvl(itt.plan_qty,0)) as plan_qty" +
                                //    ",hsn.group_name taxrate, nvl(s.closing, 0) as Qty_stk,kt.col2 as shedule_no,kt.col11 as po_no,kt.col13 as so_no,um.master_name as UOM,'0' " +
                                //    "Qty_Out,'0' Qty_Req_bal,to_char(kt.date5,'" + sgen.Getsqldateformat() + "') as po_date," +
                                //    "to_char(kt.date1,'" + sgen.Getsqldateformat() + "') as sdl_date,kt.col20 as type," +
                                //    "to_char(kt.date6,'" + sgen.Getsqldateformat() + "') as so_date from item it left join master_setting um on um.master_id = it.uom" +
                                //    " and um.type = 'UMM' and find_in_set(um.client_id, it.client_id) = 1 and find_in_set(um.client_unit_id, it.client_unit_id)= 1 " +
                                //    "left join master_setting hsn on hsn.master_id = it.hsno and hsn.type = 'HSN' and find_in_set(hsn.client_id, it.client_id)= 1 and " +
                                //    "find_in_set(hsn.client_unit_id, it.client_unit_id)= 1 left join(select t.client_unit_id, t.icode, sum(nvl(t.qtyin,0)) as Received" +
                                //    ",sum(nvl(t.qtyout, 0)) as Issued,sum(nvl(t.qtyin, 0)) - sum(nvl(t.qtyout, 0)) as closing from itransaction t where trim(t.store) = 'Y' group by" +
                                //    " t.icode,t.client_unit_id ) s on it.icode = s.icode and it.client_unit_id = s.client_unit_id inner join kc_tab kt on kt.col5 = it.icode and " +
                                //    "kt.type = 'DSC' and kt.client_unit_id = it.client_unit_id and kt.client_id = it.client_id inner join clients_mst cl on cl.vch_num = kt.col1" +
                                //    " and cl.type = 'BCD' and kt.client_id = cl.client_id and kt.client_unit_id = cl.client_unit_id left join(select sum(qtyout) as plan_qty,GDISC " +
                                //    "from itransaction where client_unit_id = '" + unitid_mst + "' and substr(type,1,1)= '6' group by GDISC) itt on itt.GDISC = kt.col2 where " +
                                //    "(it.client_id || it.client_unit_id || it.icode || kt.col20 || kt.col2 || to_char(it.vch_date, 'yyyymmdd') || it.type) in ('" + URL + "')";
                                // mq = "select '-' as fstr,it.icode as Icode,it.iname as Iname,pc.pending_sdl as plan_qty,it.cpartno Partno,to_char(pc.date5,'" + sgen.Getsqldateformat() + "') as po_date,to_char(pc.date6,'" + sgen.Getsqldateformat() + "') as so_date,pc.col11 as po_no,pc.col13 as so_no,hsn.master_name as hsn,to_char(pc.date1,'" + sgen.Getsqldateformat() + "') as sdl_date,hsn.group_name taxrate, pc.type,pc.sdl_no as shedule_no,nvl(s.closing, 0) as Qty_stk,um.master_name as UOM,'0' Qty_Out,'0' Qty_Req_bal from item it inner join (select a.sdl_no, a.icode, a.type, a.date1, a.date5,a.date6, a.col11, a.col13, a.sdl_qty, sum(a.dsp_qty) as dsp_qty,(a.sdl_qty - nvl(sum(a.dsp_qty), '0')) as pending_sdl from(select ds.col2 as sdl_no, ds.type, ds.date1,ds.date5, ds.date6, ds.col11, ds.col13, ds.col5 as icode, ds.col10 as sdl_qty, dp.qtyout as dsp_qty from kc_tab ds left join itransaction dp on dp.GDISC = ds.col2  and dp.icode=ds.col5 and dp.type = '61' and dp.client_id = ds.client_id and dp.client_unit_id = ds.client_unit_id  and dp.qtyout > 0 where ds.col20 = 'DSC' and substr(ds.type,1,1) = '4' and ds.client_id = '" + clientid_mst + "' and ds.client_unit_id = '" + unitid_mst + "' union all select ds.col2 as sdl_no, ds.type,ds.date1, ds.date5, ds.date6, ds.col11, ds.col13, ds.col5 as icode, ds.col10 as sdl_qty, iv.qtyout as inv_qty from kc_tab ds left join itransaction iv on iv.sdlno = ds.col2 and iv.potype = '52' and ds.col5=iv.icode  and iv.client_id = ds.client_id and iv.client_unit_id = ds.client_unit_id and iv.qtyout > 0 where ds.col20 = 'DSC' and substr(ds.type,1,1) = '4' and ds.client_id = '" + clientid_mst + "' and ds.client_unit_id = '" + unitid_mst + "') a group by(a.sdl_no, a.icode, a.type, a.date1, a.date5, a.date6, a.col11, a.col13, a.sdl_qty)) pc on pc.icode = it.icode left join master_setting um on um.master_id = it.uom  and um.type = 'UMM' and find_in_set(um.client_id, it.client_id) = 1 and find_in_set(um.client_unit_id, it.client_unit_id)= 1 left join master_setting hsn on hsn.master_id = it.hsno and hsn.type = 'HSN' and find_in_set(hsn.client_id, it.client_id)= 1 and find_in_set(hsn.client_unit_id, it.client_unit_id)= 1 left join(select t.client_unit_id, t.icode, sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout, 0)) as Issued,sum(nvl(t.qtyin, 0)) - sum(nvl(t.qtyout, 0)) as closing from itransaction t where trim(t.store) = 'Y' group by t.icode,t.client_unit_id ) s on it.icode = s.icode and it.client_unit_id = s.client_unit_id where (it.client_id || it.client_unit_id || it.icode || pc.type || pc.sdl_no || to_char(it.vch_date, 'yyyymmdd') || it.type) in ('" + URL + "')";
                                mq = "select distinct '-' as fstr,it.icode as icode,it.iname as iname,pc.pending_sdl as plan_qty,it.cpartno partno," +
                                    "to_char(pc.date5,'" + sgen.Getsqldateformat() + "') as po_date,to_char(pc.date6,'" + sgen.Getsqldateformat() + "') as so_date,pc.col11 as po_no,pc.col13 as so_no," +
                                    "hsn.master_name as hsn,to_char(pc.date1,'" + sgen.Getsqldateformat() + "') as sdl_date,hsn.group_name taxrate, pc.col20 as type,pc.sdl_no," +
                                    "nvl(s.closing, 0) as Qty_stk,um.master_name as UOM,'0' Qty_Out,'0' Qty_Req_bal from item it " +
                                    "inner join (select a.sdl_no, a.icode,a.col1,a.client_id,a.client_unit_id, a.col20, a.date1,a.date5, a.date6, a.col11, " +
                                    "a.col13, a.sdl_qty, sum(a.dsp_qty) as dsp_qty,(a.sdl_qty - nvl(sum(a.dsp_qty), '0')) as pending_sdl from(select ds.vch_num sdl_no," +
                                    "ds.col1,ds.client_id,ds.client_unit_id, ds.col20, ds.date1,ds.date5, ds.date6, ds.col11, ds.col13,ds.col5 as icode, ds.col10 sdl_qty," +
                                    "dp.qtyout as dsp_qty from kc_tab ds left join itransaction dp on dp.GDISC = ds.vch_num and dp.type = '61'  " +
                                    "and dp.icode=ds.col5 and dp.client_unit_id = ds.client_unit_id where substr(ds.type,1,1)='4' " +
                                    "and ds.col20='DSC' and ds.client_unit_id = '" + unitid_mst + "' union all select ds.vch_num as sdl_no," +
                                    "ds.col1,ds.client_id,ds.client_unit_id, ds.col20, ds.date1,ds.date5, ds.date6, ds.col11, ds.col13, ds.col5 as icode,ds.col10 as" +
                                    " sdl_qty, iv.qtyout as inv_qty from kc_tab ds left join itransaction iv on iv.sdlno = ds.vch_num and iv.potype = '52' " +
                                    " and iv.icode=ds.col5 and iv.client_unit_id = ds.client_unit_id where substr(ds.type,1,1)='4' " +
                                    "and ds.col20='DSC' and ds.client_unit_id = '" + unitid_mst + "' union all select ds.vch_num as sdl_no,ds.col1," +
                                    "ds.client_id,ds.client_unit_id,ds.col20, ds.date1,ds.date5, ds.date6, ds.col11, ds.col13, ds.col5 as icode, ds.col10 as" +
                                    " sdl_qty,co.col11 as close_qty from kc_tab ds left join enx_tab co on  co.col7 = ds.col5 and ds.vch_num = co.col5 and " +
                                    "co.type = 'CPD' and co.client_unit_id = '" + unitid_mst + "' " +
                                    "where substr(ds.type,1,1)='4' and ds.col20='DSC' and ds.client_unit_id" +
                                    " = '" + unitid_mst + "') a group by(a.sdl_no, a.icode,a.col1,a.client_id,a.client_unit_id, a.col20, a.date1, " +
                                    "a.date5, a.date6, a.col11, a.col13, a.sdl_qty)) pc on pc.icode = it.icode left join master_setting um on" +
                                    " um.master_id = it.uom  and um.type = 'UMM' and find_in_set(um.client_unit_id, " +
                                    "it.client_unit_id)= 1 left join master_setting hsn on hsn.master_id = it.hsno and hsn.type = " +
                                    "'HSN' and find_in_set(hsn.client_unit_id, it.client_unit_id)= 1 " +
                                    "left join(select icode,client_unit_id,sum(op) op,sum(pktop) pktop,sum(qtyin) qtyin,sum(qtyout) out," +
                                      "sum(nvl(op,0))+sum(nvl(qtyin,0))-sum(nvl(qtyout,0)) closing from (select icode, client_unit_id, nvl(op_2019, 0) op," +
                                      " nvl(pkt_2019, 0) pktop, 0 qtyin, 0 qtyout, 0 pktno from itbal union all select icode, client_unit_id, " +
                                      "sum(to_number(qtyin)) - sum(to_number(qtyout)) op, sum((case when substr(type, 1, 1) in ('0', '1') then" +
                                      " pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktop,sum(to_number(qtyin)) " +
                                      "qtyin,sum(to_number(qtyout)) qtyout,0 pktno from itransaction where trim(store) = 'Y' and " +
                                      "to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and " +
                                      "to_date('" + year_from.Split(' ')[0].Trim() + "','" + sgen.Getsqldateformat() + "')-1 group by icode,client_unit_id union all select icode,client_unit_id," +
                                      "0 as op,0 as pktop,to_number(qtyin) qtyin,to_number(qtyout) qtyout,sum((case when substr(type, 1, 1) in " +
                                      "('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktno from " +
                                      "itransaction where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between " +
                                      "to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and to_date('" + model[0].Col22.Trim() + "','" + sgen.Getsqldateformat() + "') group by icode,client_unit_id," +
                                      "to_number(qtyin),to_number(qtyout)) a group by icode, client_unit_id) s on it.icode = s.icode and find_in_set(s.client_unit_id, it.client_unit_id)=1 " +
                                    "inner join clients_mst cl on cl.vch_num = pc.col1 and " +
                                    "find_in_set(cl.client_unit_id,'" + unitid_mst + "')=1 and cl.type = 'BCD' and substr(cl.vch_num,0,3)='303' " +
                                    "where ( it.icode || pc.col20 || pc.sdl_no || to_char(it.vch_date, 'yyyymmdd') || it.type) in ('" + URL + "')";
                            }
                            else if (sgen.GetSession(MyGuid, "KDSTYPE").ToString() == "60")
                            {
                                //mq = "select '-' as fstr,it.icode as Icode,it.iname as Iname,it.cpartno Partno,pc.vch_num as so_no,um.master_name as UOM,pc.type,hsn.master_name as HSN,hsn.group_name taxrate, nvl(s.closing, 0) as Qty_stk,pc.po_no,to_char(pc.vch_date, '" + sgen.Getsqldateformat() + "') as so_date,pc.bal_qty as plan_qty,to_char(pc.date1, '" + sgen.Getsqldateformat() + "') as po_date,'0' Qty_Out,'0' Qty_Req_bal from item it inner join(select a.po_no, a.vch_num, a.icode, a.type, a.so_qty, a.vch_date, a.date1, nvl(sum(a.invoice_qty),'0') as used_qty,a.so_qty - nvl(sum(a.invoice_qty), '0') as bal_qty from(select pc.vch_num, pc.gothrchrg as po_no, pc.date1, pc.vch_date, pc.icode,pc.type, pc.qtyord as so_qty, iv.qtyout as invoice_qty from purchasesc pc left join itransaction iv on iv.sono = pc.vch_num and iv.potype = '51' and pc.icode=iv.icode and iv.client_id = pc.client_id and iv.client_unit_id = pc.client_unit_id where pc.pur_type = 'NPI' and substr(pc.type, 1, 1) = '4' and  pc.client_id = '" + clientid_mst + "' and pc.client_unit_id = '" + unitid_mst + "' union all select pc.vch_num,pc.gothrchrg as po_no, pc.date1, pc.vch_date, pc.icode, pc.type, pc.qtyord as so_qty, dp.qtyout as dsp_qty from purchasesc pc left join itransaction dp on dp.VEHNO = pc.vch_num and dp.type = '60' and pc.icode=dp.icode and dp.client_id = pc.client_id and dp.client_unit_id = pc.client_unit_id where pc.pur_type = 'NPI' and substr(pc.type, 1, 1) = '4' union all select pc.vch_num, pc.gothrchrg as po_no, pc.date1,pc.vch_date, pc.icode, pc.type, pc.qtyord as so_qty,ds.col10 as dsp_qty from purchasesc pc left join kc_tab ds on ds.col13 = pc.vch_num and ds.col20 = 'DSC' and substr(ds.type,1,1) = '4' and pc.icode=ds.col5 and ds.client_id = pc.client_id and ds.client_unit_id = pc.client_unit_id where pc.pur_type = 'NPI' and substr(pc.type, 1, 1) = '4') a group by(a.vch_num, a.icode, a.type, a.so_qty, a.po_no, a.vch_date, a.date1))pc on pc.icode = it.icode left join master_setting um on um.master_id = it.uom and um.type = 'UMM' and find_in_set(um.client_id, it.client_id) = 1 and find_in_set(um.client_unit_id, it.client_unit_id)= 1 left join master_setting hsn on hsn.master_id = it.hsno and hsn.type = 'HSN' and find_in_set(hsn.client_id, it.client_id)= 1 and find_in_set(hsn.client_unit_id, it.client_unit_id)= 1 left join(select t.client_unit_id, t.icode, sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout, 0)) as Issued,sum(nvl(t.qtyin, 0)) - sum(nvl(t.qtyout, 0)) as closing from itransaction t where trim(t.store) = 'Y' group by t.icode,t.client_unit_id ) s on it.icode = s.icode and it.client_unit_id = s.client_unit_id left join(select sum(qtyout) as plan_qty ,VEHNO from itransaction where client_id='" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "' and type = '60' group by VEHNO) kt on kt.VEHNO = pc.vch_num where (it.client_id || it.client_unit_id || it.icode || pc.type || pc.vch_num || to_char(it.vch_date, 'yyyymmdd') || it.type) in ('" + URL + "')";
                                mq = "select '-' as fstr,it.icode as Icode,it.iname as Iname,cl.c_name as party,it.cpartno Partno,hsn.master_name " +
                                    "as HSN,nvl(pc.bal_qty, '0') as plan_qty,s.closing Qty_stk,um.master_name as UOM,pc.po_no,to_char(pc.date1, '" + sgen.Getsqldateformat() + "') " +
                                    "as po_date,to_char(pc.vch_date, '" + sgen.Getsqldateformat() + "') as so_date,pc.vch_num as so_no from item it inner join (select a.po_no, " +
                                    "a.vch_num, a.icode, a.type, a.so_qty,a.vch_date, a.date1,a.acode,a.client_id,a.client_unit_id,nvl(sum(a.invoice_qty), '0') " +
                                    "as used_qty,a.so_qty - nvl(sum(a.invoice_qty), '0') as bal_qty from (select pc.vch_num, pc.gothrchrg as po_no, pc.date1, " +
                                    "pc.vch_date, pc.icode, pc.type, pc.qtyord as so_qty,iv.qtyout as invoice_qty,pc.acode,pc.client_id,pc.client_unit_id " +
                                    "from purchasesc pc left join itransaction iv on iv.sono = pc.vch_num and iv.potype = '51' and " +
                                    "pc.icode=iv.icode and iv.client_unit_id = pc.client_unit_id where pc.pur_type = " +
                                    "'NPI' and substr(pc.type, 1, 1) = '4' and pc.client_unit_id = '" + unitid_mst + "' union all " +
                                    "select pc.vch_num, pc.gothrchrg as po_no, pc.date1, pc.vch_date, pc.icode, pc.type, pc.qtyord as so_qty," +
                                    " dp.qtyout as dsp_qty,pc.acode,pc.client_id,pc.client_unit_id from purchasesc pc left join itransaction dp " +
                                    "on dp.VEHNO = pc.vch_num and dp.type = '60' and pc.icode=dp.icode and " +
                                    "dp.client_unit_id = pc.client_unit_id where pc.pur_type = 'NPI' and substr(pc.type, 1, 1) = '4' union " +
                                    "all select pc.vch_num, pc.gothrchrg as po_no,pc.date1,pc.vch_date, pc.icode, pc.type, pc.qtyord as so_qty," +
                                    " ds.col10 as dsp_qty,pc.acode,pc.client_id,pc.client_unit_id from purchasesc pc left join kc_tab ds on ds.col13 =" +
                                    " pc.vch_num and pc.icode=ds.col5 and ds.col20 = 'DSC' and " +
                                    "ds.client_unit_id =pc.client_unit_id where pc.pur_type = 'NPI' and substr(pc.type, 1, 1) = '4' " +
                                    "union all select pc.vch_num, pc.gothrchrg as po_no, pc.date1, pc.vch_date, pc.icode, pc.type, pc.qtyord " +
                                    "as so_qty,co.col11 as invoice_qty,pc.acode,pc.client_id,pc.client_unit_id from purchasesc pc left join enx_tab co " +
                                    "on co.col7=pc.icode and pc.vch_num = co.col5 and co.type='CPS' and co.client_id='" + clientid_mst + "' and co.client_unit_id='" + unitid_mst + "' where " +
                                    "pc.pur_type = 'NPI' and substr(pc.type, 1, 1) = '4') a group by(a.vch_num, a.icode,a.type, a.so_qty,a.po_no, a.vch_date, " +
                                    "a.date1,a.acode,a.client_id,a.client_unit_id)) pc on pc.icode = it.icode inner join clients_mst cl on cl.vch_num = pc.acode " +
                                    "and cl.type='BCD' and substr(cl.vch_num,0,3)='303' and cl.client_id=pc.client_id and cl.client_unit_id=pc.client_unit_id " +
                                    "left join master_setting um on um.master_id = it.uom and " +
                                    "um.type = 'UMM' and find_in_set(um.client_unit_id, it.client_unit_id)= 1 " +
                                    "left join master_setting hsn on hsn.master_id = it.hsno and " +
                                    "hsn.type = 'HSN' and find_in_set(hsn.client_unit_id, it.client_unit_id)= 1 " +
                                    "left join(select icode,client_unit_id,sum(op) op,sum(pktop) pktop,sum(qtyin) qtyin,sum(qtyout) out," +
                                      "sum(nvl(op,0))+sum(nvl(qtyin,0))-sum(nvl(qtyout,0)) closing from (select icode, client_unit_id, nvl(op_2019, 0) op," +
                                      " nvl(pkt_2019, 0) pktop, 0 qtyin, 0 qtyout, 0 pktno from itbal union all select icode, client_unit_id, " +
                                      "sum(to_number(qtyin)) - sum(to_number(qtyout)) op, sum((case when substr(type, 1, 1) in ('0', '1') then" +
                                      " pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktop,sum(to_number(qtyin)) " +
                                      "qtyin,sum(to_number(qtyout)) qtyout,0 pktno from itransaction where trim(store) = 'Y' and " +
                                      "to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and " +
                                      "to_date('" + year_from.Split(' ')[0].Trim() + "','" + sgen.Getsqldateformat() + "')-1 group by icode,client_unit_id union all select icode,client_unit_id," +
                                      "0 as op,0 as pktop,to_number(qtyin) qtyin,to_number(qtyout) qtyout,sum((case when substr(type, 1, 1) in " +
                                      "('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktno from " +
                                      "itransaction where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between " +
                                      "to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and to_date('" + model[0].Col22.Trim() + "','" + sgen.Getsqldateformat() + "') group by icode,client_unit_id," +
                                      "to_number(qtyin),to_number(qtyout)) a group by icode, client_unit_id) s on it.icode = s.icode and find_in_set(s.client_unit_id,it.client_unit_id)=1 " +
                                    "and s.closing > 0 where( it.icode || pc.type || pc.vch_num || to_char(it.vch_date, 'yyyymmdd') || it.type) in ('" + URL + "')";
                            }
                            else if (sgen.GetSession(MyGuid, "KDSTYPE").ToString() == "62")
                            {
                                mq = "select distinct '-' fstr,it.Icode,it.Iname,it.cpartno as Partno,um.master_name as UOM,nvl(hsn.master_name,0) as hsn,nvl(hsn.group_name,0) taxrate, " +
                                        "nvl(s.closing, 0) AS Qty_stk,'0' qtyord,'0' ind_no,'-' ind_date,'0' as plan_qty,'0' Qty_Out,'0' Qty_Req_bal from item it left join master_setting um on um.master_id = it.uom and " +
                                        "um.type = 'UMM' and find_in_set(um.client_unit_id, it.client_unit_id)= 1 left join master_setting hsn on hsn.master_id = it.hsno and hsn.type = 'HSN' " +
                                        " and find_in_set(hsn.client_unit_id, it.client_unit_id)= 1 left join(select icode,client_unit_id,sum(op) op,sum(pktop) pktop,sum(qtyin) qtyin,sum(qtyout) out," +
                                      "sum(nvl(op,0))+sum(nvl(qtyin,0))-sum(nvl(qtyout,0)) closing from (select icode, client_unit_id, nvl(op_2019, 0) op," +
                                      " nvl(pkt_2019, 0) pktop, 0 qtyin, 0 qtyout, 0 pktno from itbal union all select icode, client_unit_id, " +
                                      "sum(to_number(qtyin)) - sum(to_number(qtyout)) op, sum((case when substr(type, 1, 1) in ('0', '1') then" +
                                      " pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktop,sum(to_number(qtyin)) " +
                                      "qtyin,sum(to_number(qtyout)) qtyout,0 pktno from itransaction where trim(store) = 'Y' and " +
                                      "to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and " +
                                      "to_date('" + year_from.Split(' ')[0].Trim() + "','" + sgen.Getsqldateformat() + "')-1 group by icode,client_unit_id union all select icode,client_unit_id," +
                                      "0 as op,0 as pktop,to_number(qtyin) qtyin,to_number(qtyout) qtyout,sum((case when substr(type, 1, 1) in " +
                                      "('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktno from " +
                                      "itransaction where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between " +
                                      "to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and to_date('" + model[0].Col22.Trim() + "','" + sgen.Getsqldateformat() + "') group by icode,client_unit_id," +
                                      "to_number(qtyin),to_number(qtyout)) a group by icode, client_unit_id)" +
                                        " s on it.icode = s.icode and find_in_set(s.client_unit_id, it.client_unit_id)=1 where " +
                                        "it.icode || to_char(it.vch_date, 'yyyymmdd') || it.type in ('" + URL + "')";
                                //mq = "select distinct '-' as fstr, dc.uom2,it.icode as Icode,it.iname as Iname,dc.type,dc.vch_num as Disp_no,it.cpartno Partno," +
                                //    "cl.c_name as Party_Name,um.master_name as UOM,hsn.master_name as hsn,hsn.group_name taxrate, dc.pono as order_id,dc.tmode as po_no," +
                                //    "dc.vehno as so_no,dc.gdisc as sdl_no,dc.invdate as so_date,dc.chldate as po_date,dc.ewaydate as sdl_date from itransaction dc" +
                                //    " inner join item it on it.icode = dc.icode and it.client_unit_id = dc.client_unit_id and it.client_id = dc.client_id and " +
                                //    "it.sale = 'Y' left join master_setting um on um.master_id = it.uom and um.type = 'UMM' and um.client_unit_id = it.client_unit_id " +
                                //    "left join master_setting hsn on hsn.master_id = it.hsno and hsn.type = 'HSN' and it.client_unit_id = hsn.client_unit_id " +
                                //    "inner join clients_mst cl on cl.vch_num = dc.acode and cl.type = 'BCD' and cl.client_unit_id = dc.client_unit_id and" +
                                //    " cl.client_unit_id = dc.client_unit_id and cl.client_id = dc.client_id " +
                                //    "where(it.client_id || it.client_unit_id || it.icode || dc.vch_num || to_char(it.vch_date, 'yyyymmdd') || it.type)  in ('" + URL + "')";
                            }
                            else
                            {
                                mq = "select distinct '-' fstr,it.Icode,it.Iname,it.cpartno as Partno,um.master_name as UOM,nvl(hsn.master_name,0) as hsn,nvl(hsn.group_name,0) taxrate, " +
                                "nvl(s.closing, 0) AS Qty_stk,'0' qtyord,'0' ind_no,'-' ind_date,'0' as plan_qty,'0' Qty_Out,'0' Qty_Req_bal from item it left join master_setting um on um.master_id = it.uom and " +
                                "um.type = 'UMM' and find_in_set(um.client_unit_id, it.client_unit_id)= 1 left join master_setting hsn on hsn.master_id = it.hsno and hsn.type = 'HSN' " +
                                " and find_in_set(hsn.client_unit_id, it.client_unit_id)= 1 left join(select icode,client_unit_id,sum(op) op,sum(pktop) pktop,sum(qtyin) qtyin,sum(qtyout) out," +
                                      "sum(nvl(op,0))+sum(nvl(qtyin,0))-sum(nvl(qtyout,0)) closing from (select icode, client_unit_id, nvl(op_2019, 0) op," +
                                      " nvl(pkt_2019, 0) pktop, 0 qtyin, 0 qtyout, 0 pktno from itbal union all select icode, client_unit_id, " +
                                      "sum(to_number(qtyin)) - sum(to_number(qtyout)) op, sum((case when substr(type, 1, 1) in ('0', '1') then" +
                                      " pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktop,sum(to_number(qtyin)) " +
                                      "qtyin,sum(to_number(qtyout)) qtyout,0 pktno from itransaction where trim(store) = 'Y' and " +
                                      "to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and " +
                                      "to_date('" + year_from.Split(' ')[0].Trim() + "','" + sgen.Getsqldateformat() + "')-1 group by icode,client_unit_id union all select icode,client_unit_id," +
                                      "0 as op,0 as pktop,to_number(qtyin) qtyin,to_number(qtyout) qtyout,sum((case when substr(type, 1, 1) in " +
                                      "('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktno from " +
                                      "itransaction where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between " +
                                      "to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and to_date('" + model[0].Col22.Trim() + "','" + sgen.Getsqldateformat() + "') group by icode,client_unit_id," +
                                      "to_number(qtyin),to_number(qtyout)) a group by icode, client_unit_id)" +
                                " s on it.icode = s.icode and find_in_set(s.client_unit_id , it.client_unit_id)=1 where " +
                                "it.icode || to_char(it.vch_date, 'yyyymmdd') || it.type in ('" + URL + "')";
                            }
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt1.Rows.RemoveAt(0); }
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["SNo"] = dt.Rows[i]["fstr"].ToString();
                                    dr["Icode"] = dt.Rows[i]["Icode"].ToString();
                                    dr["IName"] = dt.Rows[i]["Iname"].ToString();
                                    dr["PARTNO"] = dt.Rows[i]["Partno"].ToString();
                                    dr["UOM"] = dt.Rows[i]["UOM"].ToString();
                                    dr["Qty_in_stock"] = dt.Rows[i]["Qty_stk"].ToString();
                                    dr["Qty_Req"] = dt.Rows[i]["plan_qty"].ToString();
                                    if (sgen.GetSession(MyGuid, "KDSTYPE").ToString() != "62" && sgen.GetSession(MyGuid, "KDSTYPE").ToString() != "ST")
                                    {
                                        dr["PO_No"] = dt.Rows[i]["po_no"].ToString();
                                        dr["PO_Date"] = dt.Rows[i]["po_date"].ToString();
                                        dr["SO_No"] = dt.Rows[i]["so_no"].ToString();
                                        dr["SO_Date"] = dt.Rows[i]["so_date"].ToString();
                                        if (sgen.GetSession(MyGuid, "KDSTYPE").ToString() == "61")
                                        {
                                            dr["Sdl_no"] = dt.Rows[i]["sdl_no"].ToString();
                                            dr["Sdl_date"] = dt.Rows[i]["sdl_date"].ToString();
                                        }
                                    }
                                    dr["Qty_Out"] = "0";
                                    dr["Qty_Req_Bal"] = "0";
                                    dr["Remark"] = "-";
                                    dr["Order_Id"] = "-";
                                    model[0].dt1.Rows.Add(dr);
                                }
                            }
                            break;
                        case "ITEM2":
                            mq = "select (it.icode||s.loc) fstr,it.icode as Icode,it.iname as Iname,it.cpartno,um.master_name as uom," +
                                 "nvl(location_name('" + clientid_mst + "'||'" + unitid_mst + "'||s.loc),'0') as LocName,nvl(s.loc,'0') as location,nvl(s.closing,'0') as qty_in_stk,'0' qtyout,'0' qtyissue,'-' remark from item it " +
                                 "inner join itbal itb on it.icode=itb.icode and it.type=itb.type and find_in_set(itb.client_unit_id,it.client_unit_id)=1 " +
                                 "left join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
                                 "left join (select t.client_unit_id,t.loc,t.icode,sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout,0)) as Issued," +
                                 "sum(nvl(t.qtyin,0))-sum(nvl(t.qtyout,0)) as closing from btchtrans t where length(trim(t.loc))>6 and trim(t.store)='Y' group by t.icode,t.client_unit_id,t.loc ) s on " +
                                 "it.icode=s.icode and find_in_set(s.client_unit_id,it.client_unit_id)=1 where length(trim(it.icode))>8 and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 " +
                                 "and (it.icode||s.loc) in ('" + URL + "')";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                if (model[0].dt2.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt2.Rows.RemoveAt(0); }
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt2.NewRow();
                                    dr["SNo"] = dt.Rows[i]["fstr"].ToString();
                                    dr["ICode"] = dt.Rows[i]["icode"].ToString();
                                    dr["IName"] = dt.Rows[i]["iname"].ToString();
                                    dr["PartNo"] = dt.Rows[i]["cpartno"].ToString();
                                    dr["Uom"] = dt.Rows[i]["uom"].ToString();
                                    dr["Qty_In_Stock"] = dt.Rows[i]["qty_in_stk"].ToString();
                                    dr["Qty_Out"] = dt.Rows[i]["qtyout"].ToString();
                                    dr["Remark"] = dt.Rows[i]["remark"].ToString();
                                    dr["LocCode"] = dt.Rows[i]["location"].ToString();
                                    dr["Loc"] = dt.Rows[i]["LocName"].ToString();
                                    model[0].dt2.Rows.Add(dr);
                                }
                                model[0].dt2.AcceptChanges();
                            }
                            break;
                        case "PRINT":
                            //mq = "select (p.client_id||p.client_unit_id||p.vch_num||c.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) as fstr," +
                            //    "p.vch_num Doc_no,hsn.master_name as hsn,c.c_name as Party_Name,nvl(s.closing,'0') as stock_qty,p.icode,p.iname,p.cpartno,hsn.group_name " +
                            //    "taxrate,um.master_name as UOM,p.totremark,to_number(p.qtyout) as disp_qty,(case when p.type = '60' then 'SALES ORDER'" +
                            //    " when p.type = '61' then 'DISPATCH SCHEDULE' when p.type = '62' then 'WITHOUT SO' when p.type = 'ST' then 'STN OUT' end)" +
                            //    " as Dispatched_with,p.type2 as maintype,c.c_gstin as Party_Gstin,c.addr as Party_Address,p.deptname as term_of_del," +
                            //    "p.rgptype as veh_no,p.aname as Sender_Name,p.contactno Sender_Contact,to_char(convert_tz(p.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), " +
                            //    "'" + sgen.Getsqldateformat() + "') as dispatch_date,p.totremark Remark from itransaction p inner join clients_mst c on p.acode = c.vch_num " +
                            //    "and find_in_set(c.client_unit_id,p.client_unit_id)=1 and c.type = 'BCD' inner join item it on " +
                            //    "it.icode=p.icode and it.type='IT' and it.sale='Y' and " +
                            //    "find_in_set(it.client_unit_id,p.client_unit_id)=1 left join master_setting um on um.master_id = it.uom and um.type " +
                            //    "= 'UMM' and and find_in_set(um.client_unit_id, it.client_unit_id)= 1 left" +
                            //    " join master_setting hsn on hsn.master_id = it.hsno and hsn.type = 'HSN' " +
                            //    " and find_in_set(hsn.client_unit_id,it.client_unit_id)= 1 left join(select t.client_unit_id, t.icode, sum(nvl(t.qtyin, 0))" +
                            //    " as Received,sum(nvl(t.qtyout, 0)) as Issued,sum(nvl(t.qtyin, 0)) - sum(nvl(t.qtyout, 0)) as closing from itransaction t " +
                            //    "where trim(t.store) = 'Y' group by t.icode,t.client_unit_id ) s on it.icode = s.icode and it.client_unit_id = " +
                            //    "s.client_unit_id where (p.client_id||p.client_unit_id||p.vch_num||c.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type)" +
                            //    " = '" + URL + "'";
                            mq = "select (p.client_id||p.client_unit_id||p.vch_num||c.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) as fstr," +
                                "p.vch_num Doc_no,hsn.master_name as hsn,c.c_name as Party_Name,nvl(p.qtystk,'0') as stock_qty,p.icode,p.iname,p.cpartno,hsn.group_name " +
                                "taxrate,um.master_name as UOM,p.totremark,to_number(p.qtyout) as disp_qty,(case when p.type = '60' then 'SALES ORDER'" +
                                " when p.type = '61' then 'DISPATCH SCHEDULE' when p.type = '62' then 'WITHOUT SO' when p.type = 'ST' then 'STN OUT' else '-' end)" +
                                " as Dispatched_with,p.type2 as maintype,c.c_gstin as Party_Gstin,c.addr as Party_Address,p.deptname as term_of_del," +
                                "p.rgptype as veh_no,p.aname as Sender_Name,p.contactno Sender_Contact,to_char(convert_tz(p.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), " +
                                "'" + sgen.Getsqldateformat() + "') as dispatch_date,p.totremark Remark from itransaction p inner join clients_mst c on p.acode = c.vch_num " +
                                "and find_in_set(c.client_unit_id,p.client_unit_id)=1 and c.type = 'BCD' inner join item it on " +
                                "it.icode=p.icode and it.type='IT' and it.sale='Y' and " +
                                "find_in_set(it.client_unit_id,p.client_unit_id)=1 left join master_setting um on um.master_id = it.uom and um.type " +
                                "= 'UMM' and find_in_set(um.client_unit_id, it.client_unit_id)= 1 left" +
                                " join master_setting hsn on hsn.master_id = it.hsno and hsn.type = 'HSN' " +
                                " and find_in_set(hsn.client_unit_id,it.client_unit_id)= 1 where (p.client_id||p.client_unit_id||p.vch_num||c.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type)" +
                                " = '" + URL + "'";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                DataTable dt2 = new DataTable();
                                DataTable qrdt = new DataTable();
                                qrdt = dt.Copy();
                                qrdt.Columns.Add("qrimg", typeof(Byte[]));
                                foreach (DataRow dr in qrdt.Rows)
                                {
                                    string code = dr["icode"].ToString() + "\n" + dr["iname"].ToString();
                                    QRCodeGenerator qrGenerator = new QRCodeGenerator();
                                    QRCodeGenerator.QRCode qrCode = qrGenerator.CreateQrCode(code, QRCodeGenerator.ECCLevel.Q);
                                    System.Web.UI.WebControls.Image imgBarCode = new System.Web.UI.WebControls.Image();
                                    imgBarCode.Height = 150;
                                    imgBarCode.Width = 150;
                                    using (Bitmap bitMap = qrCode.GetGraphic(20))
                                    {
                                        using (MemoryStream ms = new MemoryStream())
                                        {
                                            bitMap.Save(ms, System.Drawing.Imaging.ImageFormat.Png);
                                            byte[] byteImage = ms.ToArray();
                                            dr["qrimg"] = byteImage;
                                        }
                                    }
                                }
                                qrdt.AcceptChanges();
                                qrdt.TableName = "prepcur";
                                sgen.open_report_bydt_xml(userCode, qrdt, "dischl_report", "Dispatch");
                                ViewBag.scripCall += "showRptnew('Dispatch Report');disableForm();";
                                //ViewBag.scripCall = "OpenSingle('../../../../../erp/schoolReports_Rpts/Filter_Report_xml.aspx','95%','900px','Reports');";
                            }
                            break;
                    }
                    break;
                #endregion
                #region dispach shedule
                case "dis_sch":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            mq = " select sd.rec_id,sd.client_id,sd.col20,sd.client_unit_id,sd.ent_by,sd.ent_date,sd.edit_by,sd.edit_date,sd.col1 as pt_code,sd.type,cl.c_name as name,cl.c_gstin as gstin,cl.addr" +
                                ",nvl(ba.country_name,'-') as country_name,nvl(ba.state_name,'-') state_name,nvl(ba.city_name,'-') as city_name,cl.pincode_2," +
                                "to_char(convert_tz(sd.date1,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') as Doc_date,sd.vch_num as Sdl_no," +
                                "sd.col3 as PO_no1,sd.col4 as So_no,sd.col21 as Remark1,to_char(sd.date2,'" + sgen.Getsqldateformat() + "') as sdl_st_date," +
                                "sd.type as so_tp,to_char(sd.date3,'" + sgen.Getsqldateformat() + "') as sdl_end_date," +
                                "to_char(sd.date4 ,'" + sgen.Getsqldateformat() + "') as po_date," +
                                "to_char(sd.date5 ,'" + sgen.Getsqldateformat() + "') as po_dt2," +
                                "to_char(sd.date6 ,'" + sgen.Getsqldateformat() + "') as So_dt2" +
                                ",to_char(sd.date7,'" + sgen.Getsqldateformat() + "') as So_dt1," +
                                "to_char(sd.date8 ,'" + sgen.Getsqldateformat() + "') as Sdl_st_dt," +
                                "to_char(sd.date9 ,'" + sgen.Getsqldateformat() + "') as Sdl_en_dt,sd.col5 as Icode," +
                                "sd.col27 as IName,sd.col7 as PartNo, sd.col8 as UOM, sd.col9 as Order_qty,sd.col10 as Plan_qty,sd.col11 as PO_No2," +
                                "sd.col12 as remark2,sd.col13 as So_no2 from kc_tab sd " +
                                "inner join clients_mst cl on cl.vch_num = sd.col1 and cl.type = 'BCD' and find_in_set(cl.client_unit_id,sd.client_unit_id)=1 " +
                                "left join country_state ba on ba.rec_id = cl.city2 " +
                                "where (sd.client_id || sd.client_unit_id || sd.vch_num || to_char(sd.vch_date, 'yyyymmdd') || sd.col20) = '" + URL + "'";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "EDMODE", "Y");
                                model[0].Col12 = dt.Rows[0]["type"].ToString();
                                model[0].Col1 = dt.Rows[0]["client_id"].ToString();
                                model[0].Col2 = dt.Rows[0]["client_unit_id"].ToString();
                                model[0].Col3 = dt.Rows[0]["ent_by"].ToString();
                                model[0].Col4 = dt.Rows[0]["ent_date"].ToString();
                                model[0].Col7 = dt.Rows[0]["rec_id"].ToString();
                                model[0].Col8 = "client_id||client_unit_id||vch_num|| to_char(vch_date, 'yyyymmdd')|| col20 = '" + URL + "'";
                                model[0].Col13 = "Update";
                                model[0].Col100 = "Update & New";
                                model[0].Col14 = tm.Col14;
                                model[0].Col15 = tm.Col15;
                                model[0].Col16 = dt.Rows[0]["Sdl_no"].ToString();
                                model[0].Col49 = dt.Rows[0]["pt_code"].ToString();
                                model[0].Col121 = "U";
                                model[0].Col122 = "<u>U</u>pdate";
                                model[0].Col123 = "Update & Ne<u>w</u>";
                                sgen.SetSession(MyGuid, "PRTY_ID", dt.Rows[0]["pt_code"].ToString());
                                model[0].Col19 = dt.Rows[0]["name"].ToString();
                                model[0].Col20 = dt.Rows[0]["gstin"].ToString();
                                model[0].Col21 = dt.Rows[0]["addr"].ToString();
                                model[0].Col75 = dt.Rows[0]["city_name"].ToString();
                                model[0].Col76 = dt.Rows[0]["state_name"].ToString();
                                model[0].Col77 = dt.Rows[0]["country_name"].ToString();
                                model[0].Col78 = dt.Rows[0]["pincode_2"].ToString();
                                model[0].Col22 = dt.Rows[0]["Doc_date"].ToString();
                                // model[0].Col23 = dt.Rows[0]["Sdl_no"].ToString();
                                model[0].Col29 = dt.Rows[0]["So_no"].ToString();
                                model[0].Col31 = dt.Rows[0]["So_dt1"].ToString();
                                sgen.SetSession(MyGuid, "So_num", dt.Rows[0]["So_no"].ToString());
                                model[0].Col28 = dt.Rows[0]["Remark1"].ToString();
                                model[0].Col40 = dt.Rows[0]["col20"].ToString();
                                sgen.SetSession(MyGuid, "SO_type", dt.Rows[0]["so_tp"].ToString());
                                model[0].Col24 = dt.Rows[0]["sdl_st_date"].ToString();
                                model[0].Col25 = dt.Rows[0]["sdl_end_date"].ToString();
                                model[0].Col27 = dt.Rows[0]["po_date"].ToString();
                                //model[0].Col31 = dt.Rows[0]["So_dt1"].ToString();
                                model[0].Col26 = dt.Rows[0]["PO_no1"].ToString();
                                model[0].Col9 = sgen.seekval(userCode, "select upper(master_name) master_name from master_setting where master_id='" + dt.Rows[0]["so_tp"].ToString() + "' and type='KPO'", "master_name");
                                model[0].dt1 = model[0].dt1.Clone();
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["SNo"] = i + 1;
                                    dr["Icode"] = dt.Rows[i]["Icode"].ToString();
                                    dr["IName"] = dt.Rows[i]["IName"].ToString();
                                    dr["PartNo"] = dt.Rows[i]["PartNo"].ToString();
                                    dr["UOM"] = dt.Rows[i]["UOM"].ToString();
                                    dr["Order_qty"] = dt.Rows[i]["Order_qty"].ToString();
                                    dr["Plan_qty"] = dt.Rows[i]["Plan_qty"].ToString();
                                    dr["SO_No"] = dt.Rows[i]["So_no2"].ToString();
                                    dr["PO_No"] = dt.Rows[i]["PO_No2"].ToString();
                                    dr["Sdl_start_dt"] = dt.Rows[i]["Sdl_st_dt"].ToString();
                                    dr["Sdl_end_dt"] = dt.Rows[i]["Sdl_en_dt"].ToString();
                                    dr["PO_No"] = dt.Rows[i]["PO_No2"].ToString();
                                    dr["PO_Date"] = dt.Rows[i]["po_dt2"].ToString();
                                    dr["Remark"] = dt.Rows[i]["remark2"].ToString();
                                    dr["SO_Date"] = dt.Rows[i]["So_dt2"].ToString();
                                    model[0].dt1.Rows.Add(dr);
                                }
                                model[0].dt1.AcceptChanges();
                            }
                            break;
                        case "NEW":
                            mq = "select master_id,upper(master_name) master_name,to_char(convert_tz(utc_timestamp(),'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') po_date " +
                                   "from master_Setting where master_id||To_Char(vch_date, 'yyyymmdd')||type = '" + URL + "' ";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                model[0].Col12 = dt.Rows[0]["master_id"].ToString();
                                sgen.SetSession(MyGuid, "SO_type", dt.Rows[0]["master_id"].ToString());
                                model = getnew(model);
                                model[0].Col13 = "Save";
                                model[0].Col100 = "Save & New";
                                model[0].Col121 = "S";
                                model[0].Col122 = "<u>S</u>ave";
                                model[0].Col123 = "Save & Ne<u>w</u>";
                                model[0].Col16 = vch_num;
                                model[0].Col9 = dt.Rows[0]["master_name"].ToString();
                                model[0].Col22 = sgen.server_datetime_local(userCode);
                                Make_query(viewName.ToLower(), "Select Party", "PARTY", "1", "", "");
                                ViewBag.scripCall = "callFoo('Select Party');";
                            }
                            break;
                        case "GETSO":
                            mq = "select group_concat(distinct a.vch_num) as so_no,group_concat(distinct a.gothrchrg) as po_no from purchasesc a where (a.client_id || a.client_unit_id || a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.type) in ('" + URL + "') ";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                model[0].Col29 = dt.Rows[0]["so_no"].ToString();
                                model[0].Col26 = dt.Rows[0]["po_no"].ToString();
                                sgen.SetSession(MyGuid, "So_num", dt.Rows[0]["so_no"].ToString());
                                ViewBag.vimport = "";
                            }
                            string[] xfstr = URL.Split(',');
                            string xfstrnew = xfstr[0].Substring(0, 25);
                            mq1 = "select distinct to_char(convert_tz(a.vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') as so_date,to_char(convert_tz(a.date1,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') as  po_date from purchasesc a where (a.client_id || a.client_unit_id || a.vch_num || to_char(a.vch_date, 'yyyymmdd') " +
                                "|| a.type) in ('" + xfstrnew + "') ";
                            dt = sgen.getdata(userCode, mq1);
                            if (dt.Rows.Count > 0)
                            {
                                model[0].Col31 = dt.Rows[0]["so_date"].ToString();
                                model[0].Col27 = dt.Rows[0]["po_date"].ToString();
                            }
                            break;
                        case "PARTY":
                            mq = "select a.c_name as name,a.c_gstin as gstin,a.addr as address,a.vch_num,a.tor,nvl(ba.country_name,'-') as country_name," +
"nvl(ba.state_name,'-') state_name,nvl(ba.city_name,'-') as city_name,a.pincode_2 from clients_mst a left join country_state ba on ba.rec_id = a.city2 " +
                          "where a.vch_num||To_Char(a.vch_date, 'yyyymmdd')|| a.type = '" + URL + "'";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                model[0].Col49 = dt.Rows[0]["vch_num"].ToString();
                                model[0].Col19 = dt.Rows[0]["name"].ToString();
                                model[0].Col21 = dt.Rows[0]["address"].ToString();
                                model[0].Col20 = dt.Rows[0]["gstin"].ToString();
                                model[0].Col75 = dt.Rows[0]["city_name"].ToString();
                                model[0].Col76 = dt.Rows[0]["state_name"].ToString();
                                model[0].Col77 = dt.Rows[0]["country_name"].ToString();
                                model[0].Col78 = dt.Rows[0]["pincode_2"].ToString();
                                sgen.SetSession(MyGuid, "PRTY_ID", dt.Rows[0]["vch_num"].ToString());
                                Make_query(viewName.ToLower(), "Select Sales Order No.", "GETSO", "2", "", "");
                                ViewBag.scripCall = "callFoo('Select Sales Order No.');";
                            }
                            break;
                        case "ITEM":
                            //mq = "select '-' as fstr,it.icode as Icode,it.iname as Iname,it.cpartno Partno,pc.hsno as HSN,pc.uom as UOM,kt.plan_qty," +
                            //    "(pc.qtyord-nvl(kt.plan_qty,0)) as Order_qty,pc.gothrchrg as po_num,to_char(pc.date1,'" + sgen.Getsqldateformat() + "') as po_date" +
                            //    ",to_char(pc.dlv_date,'" + sgen.Getsqldateformat() + "') dlv_date, to_char(pc.vch_date,'" + sgen.Getsqldateformat() + "') as so_date,pc.vch_num as so_no " +
                            //    "from item it  inner join purchasesc pc on pc.icode = it.icode and pc.pur_type = 'NPI' and pc.client_id = it.client_id " +
                            //    "and pc.client_unit_id = it.client_unit_id left join(select sum(col10) as plan_qty ,col4 from kc_tab " +
                            //    "where client_unit_id = '" + unitid_mst + "' and type = 'DSC' group by col4) kt on kt.col4 = pc.vch_num" +
                            //    " where(it.client_id || it.client_unit_id || it.icode || pc.type || pc.vch_num || to_char(it.vch_date, 'yyyymmdd') || it.type) in ('" + URL + "')";
                            mq = "select '-' as fstr,it.icode as Icode,it.iname as Iname,it.cpartno Partno,hsn.master_name as HSN,nvl(pc.bal_qty, '0') as Order_qty," +
                                "um.master_name as UOM,pc.po_no as po_num,to_char(pc.date1, '" + sgen.Getsqldateformat() + "') as po_date,to_char" +
                                "(pc.vch_date, '" + sgen.Getsqldateformat() + "') as so_date,pc.vch_num as so_no from item it inner join (select a.po_no, a.vch_num, a.icode, a.type, " +
                                "a.so_qty,a.vch_date, a.date1,nvl(sum(a.invoice_qty), '0') as used_qty,a.so_qty - nvl(sum(a.invoice_qty), '0') as bal_qty from " +
                                "(select pc.vch_num, pc.gothrchrg as po_no, pc.date1, pc.vch_date, pc.icode, pc.type, pc.qtyord as so_qty, iv.qtyout as invoice_qty from purchasesc pc " +
                                "left join itransaction iv on iv.sono = pc.vch_num and iv.potype = '51' and pc.icode=iv.icode and iv.client_unit_id = pc.client_unit_id " +
                                "where pc.pur_type = 'NPI' and substr(pc.type, 1, 1) = '4' and pc.client_unit_id = '" + unitid_mst + "' union all " +
                                "select pc.vch_num, pc.gothrchrg as po_no, pc.date1, pc.vch_date, pc.icode, pc.type, pc.qtyord as so_qty, dp.qtyout as dsp_qty from purchasesc pc " +
                                "left join itransaction dp on dp.VEHNO = pc.vch_num and dp.type = '60' and pc.icode=dp.icode and dp.client_unit_id = pc.client_unit_id" +
                                " where pc.pur_type = 'NPI' and substr(pc.type, 1, 1) = '4' union all select pc.vch_num, pc.gothrchrg as po_no, pc.date1,pc.vch_date, pc.icode, " +
                                "pc.type, pc.qtyord as so_qty, ds.col10 as dsp_qty from purchasesc pc left join kc_tab ds on ds.col13 = pc.vch_num and pc.icode=ds.col5 and ds.col20 = 'DSC' and" +
                                " ds.client_unit_id = pc.client_unit_id where pc.pur_type = 'NPI' and substr(pc.type, 1, 1) = '4' union all select pc.vch_num," +
                                " pc.gothrchrg as po_no, pc.date1, pc.vch_date, pc.icode, pc.type, pc.qtyord as so_qty,co.col11 as invoice_qty from purchasesc pc left join enx_tab co " +
                                "on co.col7 = pc.icode and pc.vch_num = co.col5 and co.type = 'CPS' and co.client_unit_id = '" + unitid_mst + "' where pc.pur_type = 'NPI' and substr(pc.type, 1, 1) = '4') a group" +
                                " by(a.vch_num, a.icode, a.type, a.so_qty, a.po_no, a.vch_date, a.date1)) pc on pc.icode = it.icode left join master_setting um on" +
                                " um.master_id = it.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, it.client_unit_id)= 1 " +
                                "left join master_setting hsn on hsn.master_id = it.hsno and hsn.type = 'HSN' and " +
                                "find_in_set(hsn.client_unit_id, it.client_unit_id)= 1 " +
                                "where(it.icode || pc.type || pc.vch_num || to_char(it.vch_date, 'yyyymmdd') || it.type) in ('" + URL + "')";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-") || model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("")) { model[0].dt1.Rows.RemoveAt(0); }
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["Item"] = dt.Rows[i]["fstr"].ToString();
                                    dr["SNo"] = i + 1;
                                    dr["Icode"] = dt.Rows[i]["icode"].ToString();
                                    dr["IName"] = dt.Rows[i]["iname"].ToString();
                                    dr["PartNo"] = dt.Rows[i]["Partno"].ToString();
                                    //dr["HSN"] = dt.Rows[i]["HSN"].ToString();
                                    dr["UOM"] = dt.Rows[i]["UOM"].ToString();
                                    dr["Order_qty"] = dt.Rows[i]["Order_qty"].ToString();
                                    dr["PO_No"] = dt.Rows[i]["po_num"].ToString();
                                    dr["PO_Date"] = dt.Rows[i]["po_date"].ToString();
                                    dr["SO_No"] = dt.Rows[i]["so_no"].ToString();
                                    dr["SO_Date"] = dt.Rows[i]["so_date"].ToString();
                                    model[0].dt1.Rows.Add(dr);
                                }
                                model[0].dt1.AcceptChanges();
                            }
                            break;
                        case "PRINT":
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.scripCall = "disableForm();";
                            mq = "select a.totremark, REPLACE(ud.FIRST_NAME|| ' '|| ud.MIDDLE_NAME|| ' '|| ud.last_name,'0','') as created_by ,it.partname, d.master_name as deptname, lp.loc, a.vch_num, a.icode, it.iname,it.cpartno ,um.master_name as UOM,um.master_name as UOM2,hsn.master_name as hsn," +
                                " to_char(convert_tz(a.vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') vch_date1,a.pono,it.cuom, " +
                                " a.qtychl,a.qtyout,a.qtybal " +
                                "from itransaction a inner join item it on a.icode=it.icode  and it.type='IT' and find_in_set(a.client_unit_id,it.client_unit_id)=1 " +
                                "inner join master_setting um on um.master_id=it.uom and um.type='UMM' and um.client_unit_id='" + unitid_mst + "' " +
                                "inner join master_setting um2 on um2.master_id=it.uom2 and um2.type='UMM' and um2.client_unit_id='" + unitid_mst + "' " +
                                "inner join master_setting hsn on hsn.master_id=it.hsno and hsn.type='HSN' and hsn.client_unit_id='" + unitid_mst + "'" +
                                "inner join (select (a.client_id||a.client_unit_id||b.master_id||f.master_id||rm.master_id||rk.master_id||a.master_id) as fstr," +
                        "(b.master_name || ct.param1 || f.master_name || ct.param1 || rm.master_name || ct.param1 || rk.master_name || ct.param1 || a.master_name) Loc from master_setting a " +
                        "inner join master_setting b on b.master_id = a.classid and b.type = 'HBM' and a.client_unit_id = b.client_unit_id " +
                        "inner join master_setting f on f.master_id = a.sectionid and f.type = 'IN0' and a.client_unit_id = f.client_unit_id " +
                        "inner join master_setting rm on rm.master_id = a.client_name and rm.type = 'IN1' and a.client_unit_id = rm.client_unit_id " +
                        "inner join master_setting rk on rk.master_id = a.subjectid and rk.type = 'IN2' and a.client_unit_id = rk.client_unit_id " +
                        "inner join controls ct on 1 = 1 and ct.id = '000010' " +
                        "where a.type='IN3' and a.client_unit_id = '" + unitid_mst + "')lp on lp.fstr=it.loc" +
                        " inner join master_setting d on d.master_id=a.deptno and d.type='MDP' inner join user_details ud on a.ent_by = ud.vch_num and ud.type = 'CPR' " +
                                "where (a.client_id||a.client_unit_id||a.vch_num|| to_char(a.vch_date, 'yyyymmdd')||a.type)='" + URL + "'";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                DataTable dt2 = new DataTable();
                                DataTable qrdt = new DataTable();
                                qrdt = dt.Copy();
                                qrdt.Columns.Add("qrimg", typeof(Byte[]));
                                foreach (DataRow dr in qrdt.Rows)
                                {
                                    string code = dr["icode"].ToString() + "\n" + dr["iname"].ToString();
                                    QRCodeGenerator qrGenerator = new QRCodeGenerator();
                                    QRCodeGenerator.QRCode qrCode = qrGenerator.CreateQrCode(code, QRCodeGenerator.ECCLevel.Q);
                                    System.Web.UI.WebControls.Image imgBarCode = new System.Web.UI.WebControls.Image();
                                    imgBarCode.Height = 150;
                                    imgBarCode.Width = 150;
                                    using (Bitmap bitMap = qrCode.GetGraphic(20))
                                    {
                                        using (MemoryStream ms = new MemoryStream())
                                        {
                                            bitMap.Save(ms, System.Drawing.Imaging.ImageFormat.Png);
                                            byte[] byteImage = ms.ToArray();
                                            dr["qrimg"] = byteImage;
                                        }
                                    }
                                }
                                qrdt.AcceptChanges();
                                qrdt.TableName = "prepcur";
                                sgen.open_report_bydt_xml(userCode, qrdt, "dispatch", "Dispatch");
                                ViewBag.scripCall += "showRptnew('Dispatch Schedule Detailed');disableForm();";
                            }
                            break;
                    }
                    break;
                #endregion
                #region gate in
                case "g_in":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            mq = "select vch_num,type,vch_date,client_id,client_unit_id,ent_by,rec_id,ent_date,col1,col2,col3," +
                                "to_char(date1,'" + sgen.Getsqldateformat() + "') as doc_date,col12,col13,col16,col17,col47,col32,col31," +
                                "col11,to_char(date2,'" + sgen.Getsqldateformat() + "') as eway_date," +
                                "to_char(date3,'" + sgen.Getsqldateformat() + "') as inovice_date," +
                                "to_char(date4,'" + sgen.Getsqldateformat() + "') as chl_date,to_char(date6,'" + sgen.Getsqldateformat() + "') as incoming_date,to_char(date5,'" + sgen.Getsqldateformat() + "') as buyer_rf_dt,col4,col14,col48,col5,col7,col8,col9 " +
                                "from kc_tab where(client_id|| client_unit_id || vch_num || to_char(vch_date, 'yyyymmdd') || type) = '" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                mod1 = new List<SelectListItem>();
                                #region Transportmode
                                TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1 = cmd_Fun.transportmode(userCode, unitid_mst);
                                #endregion
                                sgen.SetSession(MyGuid, "EDMODE", "Y");
                                model[0].Col12 = dtt.Rows[0]["type"].ToString();
                                model = getedit(model, dtt, URL);
                                model[0].Col14 = tm.Col14;
                                model[0].Col15 = tm.Col15;
                                model[0].Col16 = dtt.Rows[0]["vch_num"].ToString();
                                model[0].Col18 = dtt.Rows[0]["col2"].ToString();
                                model[0].Col49 = dtt.Rows[0]["col1"].ToString();
                                sgen.SetSession(MyGuid, "BGINPARTY", dtt.Rows[0]["col1"].ToString());
                                model[0].Col19 = dtt.Rows[0]["col32"].ToString();
                                model[0].Col20 = dtt.Rows[0]["col11"].ToString();
                                model[0].Col21 = dtt.Rows[0]["col31"].ToString();
                                model[0].Col22 = dtt.Rows[0]["col4"].ToString();
                                model[0].Col23 = dtt.Rows[0]["eway_date"].ToString();
                                model[0].Col24 = dtt.Rows[0]["col5"].ToString();
                                model[0].Col25 = dtt.Rows[0]["inovice_date"].ToString();
                                String[] L1 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["col3"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems1 = L1;
                                model[0].Col17 = dtt.Rows[0]["doc_date"].ToString();
                                model[0].Col31 = dtt.Rows[0]["col13"].ToString();
                                model[0].Col26 = dtt.Rows[0]["col7"].ToString();
                                model[0].Col27 = dtt.Rows[0]["chl_date"].ToString();
                                model[0].Col28 = dtt.Rows[0]["col8"].ToString();
                                model[0].Col29 = dtt.Rows[0]["col9"].ToString();
                                model[0].Col30 = dtt.Rows[0]["col12"].ToString();
                                model[0].Col32 = dtt.Rows[0]["col14"].ToString();
                                model[0].Col33 = dtt.Rows[0]["col48"].ToString();
                                model[0].Col34 = dtt.Rows[0]["col16"].ToString();
                                model[0].Col35 = dtt.Rows[0]["col47"].ToString();
                                model[0].Col37 = dtt.Rows[0]["buyer_rf_dt"].ToString();
                                model[0].Col38 = dtt.Rows[0]["incoming_date"].ToString();
                                model[0].Col36 = dtt.Rows[0]["col17"].ToString();
                                //model[0].Col32 = dtt.Rows[0]["col21"].ToString();
                            }
                            break;
                        case "PARTY":
                            mq = "select a.c_name as Name,a.c_gstin as GSTIN,a.addr as address,a.vch_num,a.tor from clients_mst a " +
     "where a.vch_num||To_Char(a.vch_date, 'yyyymmdd')|| a.type = '" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                model[0].Col49 = dtt.Rows[0]["vch_num"].ToString();
                                model[0].Col19 = dtt.Rows[0]["Name"].ToString();
                                model[0].Col20 = dtt.Rows[0]["GSTIN"].ToString();
                                model[0].Col21 = dtt.Rows[0]["address"].ToString();
                                sgen.SetSession(MyGuid, "BGINPARTY", dtt.Rows[0]["vch_num"].ToString());
                            }
                            break;
                        case "DOC":
                            mq = "select a.Doc_no,a.Doc_Date,a.type,(case when a.type='22' then 'RGP CHALLAN' when a.type='54' then 'JOB WORK PO'" +
                                " when a.type IN('50', '52') then 'WITH PO' else '-' end) as doc_type from(select distinct " +
                                "(p.client_id || p.client_unit_id || p.vch_num || to_char(p.vch_date, 'yyyymmdd') || p.type) as fstr, p.type, p.vch_num Doc_no," +
                                "to_char(p.vch_date, '" + sgen.Getsqldateformat() + "') as Doc_Date from itransaction p where p.type = '22' union all select distinct " +
                                "(p.client_id || p.client_unit_id || p.vch_num || to_char(p.vch_date, 'yyyymmdd') || p.type) as fstr, p.type, p.vch_num PO_Number," +
                                "to_char(p.vch_date, '" + sgen.Getsqldateformat() + "') PO_Date from purchases p where p.type in ('50', '54', '52')) a where a.fstr = '" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                model[0].Col34 = dtt.Rows[0]["doc_type"].ToString();
                                model[0].Col24 = dtt.Rows[0]["Doc_no"].ToString();
                                model[0].Col25 = dtt.Rows[0]["Doc_Date"].ToString();
                            }
                            break;
                    }
                    break;
                #endregion
                #region gate out
                case "g_out":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            mq = "select vch_num,type,vch_date,client_id,client_unit_id,ent_by,rec_id,ent_date,col1,col2,col3," +
                                "to_char(date1,'" + sgen.Getsqldateformat() + "') as doc_date,col42,col12,col13,col21,col32,col31," +
                                "col11,to_char(date2,'" + sgen.Getsqldateformat() + "') as eway_date," +
                                "to_char(date3,'" + sgen.Getsqldateformat() + "') as inovice_date," +
                                "to_char(date4,'" + sgen.Getsqldateformat() + "') as chl_date,col4,col5,col7,col8,col9 " +
                                "from kc_tab where(client_id|| client_unit_id || vch_num || to_char(vch_date, 'yyyymmdd') || type) = '" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                mod1 = new List<SelectListItem>();
                                #region Transportmode
                                TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1 = cmd_Fun.transportmode(userCode, unitid_mst);
                                #endregion
                                sgen.SetSession(MyGuid, "EDMODE", "Y");
                                model[0].Col12 = dtt.Rows[0]["type"].ToString();
                                model = getedit(model, dtt, URL);
                                model[0].Col14 = tm.Col14;
                                model[0].Col15 = tm.Col15;
                                model[0].Col16 = dtt.Rows[0]["vch_num"].ToString();
                                model[0].Col18 = dtt.Rows[0]["col2"].ToString();
                                model[0].Col49 = dtt.Rows[0]["col1"].ToString();
                                model[0].Col19 = dtt.Rows[0]["col32"].ToString();
                                model[0].Col20 = dtt.Rows[0]["col11"].ToString();
                                model[0].Col21 = dtt.Rows[0]["col31"].ToString();
                                model[0].Col22 = dtt.Rows[0]["col4"].ToString();
                                model[0].Col23 = dtt.Rows[0]["eway_date"].ToString();
                                model[0].Col24 = dtt.Rows[0]["col5"].ToString();
                                model[0].Col25 = dtt.Rows[0]["inovice_date"].ToString();
                                String[] L1 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["col3"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems1 = L1;
                                model[0].Col17 = dtt.Rows[0]["doc_date"].ToString();
                                model[0].Col31 = dtt.Rows[0]["col13"].ToString();
                                model[0].Col26 = dtt.Rows[0]["col7"].ToString();
                                model[0].Col27 = dtt.Rows[0]["chl_date"].ToString();
                                model[0].Col28 = dtt.Rows[0]["col8"].ToString();
                                model[0].Col29 = dtt.Rows[0]["col9"].ToString();
                                model[0].Col30 = dtt.Rows[0]["col12"].ToString();
                                model[0].Col32 = dtt.Rows[0]["col21"].ToString();
                                model[0].Col33 = dtt.Rows[0]["col42"].ToString();
                            }
                            break;
                        case "PARTY":
                            mq = "select a.Invoice_Number,c.vch_num,(case when substr(a.type,1,1)='4' then 'INVOICE' when substr(a.type,1,1)='6' then 'DISPATCH CHALLAN' else '-' end) " +
                                 "as Document,a.Invoice_Date,c.c_name as Party_Name,a.type,c.c_gstin as Party_Gstin,c.addr as Party_Address " +
                                 "from(select p.client_id, p.client_unit_id, p.vch_num, to_char(p.vch_date, 'yyyymmdd') vchdate, p.type, p.potype, " +
                                 "p.vch_num Invoice_Number,to_char(p.vch_date, '" + sgen.Getsqldateformat() + "') Invoice_Date, acode from itransaction p  " +
                                 "where p.client_unit_id = '" + unitid_mst + "' and SUBSTR(p.type, 1, 1) = '4' and " +
                                 "substr(p.potype, 1, 1) = '5' union all select d.client_id, d.client_unit_id, d.vch_num, to_char(d.vch_date, 'yyyymmdd') " +
                                 "vchdate, d.type, d.type2, d.vch_num Invoice_Number, to_char(d.vch_date, '" + sgen.Getsqldateformat() + "') Invoice_Date, acode from itransaction " +
                                 "d where substr(d.type, 1, 1) = '6' and substr(d.type2, 1, 1) = '4' and " +
                                 "d.client_unit_id = '" + unitid_mst + "') a " +
                                 "inner join clients_mst c on a.acode = c.vch_num and find_in_set(c.client_unit_id,a.client_unit_id)=1 and c.type = 'BCD' and substr(c.vch_num,0,3)='303' where " +
                                 "(a.client_id || a.client_unit_id || a.vch_num || a.vchdate || a.type || potype) = '" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                model[0].Col49 = dtt.Rows[0]["vch_num"].ToString();
                                model[0].Col19 = dtt.Rows[0]["Party_Name"].ToString();
                                model[0].Col20 = dtt.Rows[0]["Party_Gstin"].ToString();
                                model[0].Col21 = dtt.Rows[0]["Party_Address"].ToString();
                                model[0].Col24 = dtt.Rows[0]["Invoice_Number"].ToString();
                                model[0].Col25 = dtt.Rows[0]["Invoice_Date"].ToString();
                                model[0].Col32 = dtt.Rows[0]["Document"].ToString();
                                model[0].Col33 = dtt.Rows[0]["type"].ToString();
                            }
                            break;
                    }
                    break;
                #endregion
                #region p_g_out
                case "p_g_out":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            mq = "select vch_num as Doc_no,col31,to_char(vch_date,'" + sgen.Getsqldateformat() + "') as created_date,rec_id,ent_by,ent_date,client_id,client_unit_id,type," +
                                "to_char(date1,'" + sgen.Getsqldateformat() + "') as Doc_date,to_char(date2,'" + sgen.Getsqldateformat() + "') as Closer_date,to_char(date3, '" + sgen.Getsqldateformat() + "') as Document_date" +
                                ",col10 as remark,col5 as doc_type,col6 as document_no,col8 as party,col9 as doc_value from kc_tab" +
                                " where client_id || client_unit_id || vch_num || to_char(vch_date, 'yyyymmdd') || type = '" + URL + "'";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {

                                sgen.SetSession(MyGuid, "EDMODE", "Y");
                                model[0].Col12 = dt.Rows[0]["type"].ToString();
                                model = getedit(model, dt, URL);
                                model[0].Col14 = tm.Col14;
                                model[0].Col15 = tm.Col15;
                                model[0].Col16 = dt.Rows[0]["Doc_no"].ToString();
                                model[0].Col17 = dt.Rows[0]["Doc_date"].ToString();
                                model[0].Col19 = dt.Rows[0]["col31"].ToString();
                                model[0].dt1 = model[0].dt1.Clone();
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["SNo"] = i + 1;
                                    dr["DOC_TYPE"] = dt.Rows[i]["doc_type"].ToString();
                                    dr["DOC_NO"] = dt.Rows[i]["document_no"].ToString();
                                    dr["DOC_DATE"] = dt.Rows[i]["Document_date"].ToString();
                                    dr["PARTY_NAME"] = dt.Rows[i]["party"].ToString();
                                    dr["DOC_VALUE"] = dt.Rows[i]["doc_value"].ToString();
                                    dr["REMARK"] = dt.Rows[i]["remark"].ToString();
                                    dr["CLOSER_DATE"] = dt.Rows[i]["Closer_date"].ToString();
                                    model[0].dt1.Rows.Add(dr);
                                }
                                model[0].dt1.AcceptChanges();
                            }
                            break;
                        case "ITEM":
                            mq = "  select distinct a.vch_num Invoice_Number,to_char(a.vch_date,'" + sgen.Getsqldateformat() + "') Invoice_Date,a.netamt,c.c_name as Party_Name,c.c_gstin as Party_Gstin,c.addr as Party_Address,a.type as doc_type from itransaction a inner join clients_mst c on a.acode = c.vch_num and find_in_set(c.client_id,a.client_id)=1 and find_in_set(c.client_unit_id,a.client_unit_id)=1 and c.type = 'BCD' and substr(c.vch_num,0,3)='303' where(a.client_id || a.client_unit_id || a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.type || a.potype) in ('" + URL + "')";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                if (model[0].dt1.Rows[0]["DOC_NO"].ToString().Trim().Equals("-") || model[0].dt1.Rows[0]["DOC_NO"].ToString().Trim().Equals("")) { model[0].dt1.Rows.RemoveAt(0); }
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["SNo"] = i + 1;
                                    dr["DOC_TYPE"] = dt.Rows[i]["doc_type"].ToString();
                                    dr["DOC_NO"] = dt.Rows[i]["Invoice_Number"].ToString();
                                    dr["DOC_DATE"] = dt.Rows[i]["Invoice_Date"].ToString();
                                    dr["PARTY_NAME"] = dt.Rows[i]["Party_Name"].ToString();
                                    dr["DOC_VALUE"] = dt.Rows[i]["netamt"].ToString();
                                    dr["CLOSER_DATE"] = sgen.server_datetime_dt_local(userCode);
                                    dr["REMARK"] = "-";
                                    model[0].dt1.Rows.Add(dr);
                                }
                                model[0].dt1.AcceptChanges();
                            }
                            break;
                    }
                    break;
                #endregion
                #region p_g_in
                case "p_g_in":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            mq = "select vch_num as Doc_no,to_char(vch_date,'" + sgen.Getsqldateformat() + "') as created_date,col31,rec_id,ent_by,ent_date,client_id,client_unit_id,type," +
                                "to_char(date1,'" + sgen.Getsqldateformat() + "') as Doc_date,to_char(date2,'" + sgen.Getsqldateformat() + "') as Closer_date,to_char(date3, '" + sgen.Getsqldateformat() + "') as Document_date" +
                                ",col10 as remark,col5 as doc_type,col6 as document_no,col8 as party,col9 as doc_value from kc_tab" +
                                " where client_id || client_unit_id || vch_num || to_char(vch_date, 'yyyymmdd') || type in ('" + URL + "')";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "EDMODE", "Y");
                                model[0].Col12 = dt.Rows[0]["type"].ToString();
                                model = getedit(model, dt, URL);
                                model[0].Col14 = tm.Col14;
                                model[0].Col15 = tm.Col15;
                                model[0].Col16 = dt.Rows[0]["Doc_no"].ToString();
                                model[0].Col121 = "U";
                                model[0].Col122 = "<u>U</u>pdate";
                                model[0].Col123 = "Update & Ne<u>w</u>";
                                model[0].Col17 = dt.Rows[0]["Doc_date"].ToString();
                                model[0].Col19 = dt.Rows[0]["col31"].ToString();
                                model[0].dt1 = model[0].dt1.Clone();
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["SNo"] = i + 1;
                                    dr["DOC_TYPE"] = dt.Rows[i]["doc_type"].ToString();
                                    dr["DOC_NO"] = dt.Rows[i]["document_no"].ToString();
                                    dr["DOC_DATE"] = dt.Rows[i]["Document_date"].ToString();
                                    dr["PARTY_NAME"] = dt.Rows[i]["party"].ToString();
                                    dr["DOC_VALUE"] = dt.Rows[i]["doc_value"].ToString();
                                    dr["REMARK"] = dt.Rows[i]["remark"].ToString();
                                    dr["CLOSER_DATE"] = dt.Rows[i]["Closer_date"].ToString();
                                    model[0].dt1.Rows.Add(dr);
                                }
                                model[0].dt1.AcceptChanges();
                            }
                            break;
                        case "ITEM":
                            mq = "select distinct vch_num as doc_no,to_char(date1,'" + sgen.Getsqldateformat() + "') as doc_date,col12 as person_name,col13  per_mob,col32 as party_name," +
                                "col31 as pty_add,col11 as gst_no,type as Document,to_char(date3, '" + sgen.Getsqldateformat() + "') as Document_date," +
                                "to_char(date4, '" + sgen.Getsqldateformat() + "') as chl_date,col5 as Document_no,col9 Doc_value from kc_tab where " +
                                "(client_id || client_unit_id || vch_num || to_char(vch_date, 'yyyymmdd') || type) in ('" + URL + "')";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                if (model[0].dt1.Rows[0]["DOC_NO"].ToString().Trim().Equals("-") || model[0].dt1.Rows[0]["DOC_NO"].ToString().Trim().Equals("")) { model[0].dt1.Rows.RemoveAt(0); }
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["SNo"] = i + 1;
                                    dr["DOC_TYPE"] = dt.Rows[i]["Document"].ToString();
                                    dr["DOC_NO"] = dt.Rows[i]["doc_no"].ToString();
                                    dr["DOC_DATE"] = dt.Rows[i]["doc_date"].ToString();
                                    dr["PARTY_NAME"] = dt.Rows[i]["party_name"].ToString();
                                    dr["DOC_VALUE"] = dt.Rows[i]["Doc_value"].ToString();
                                    dr["CLOSER_DATE"] = sgen.server_datetime_dt_local(userCode);
                                    dr["REMARK"] = "-";
                                    model[0].dt1.Rows.Add(dr);
                                }
                                model[0].dt1.AcceptChanges();
                            }
                            break;
                    }
                    break;
                #endregion
                #region close pending
                case "p_close":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            switch (sgen.GetSession(MyGuid, "MENUID").ToString())
                            {
                                case "21009.4":  //pending so
                                    mq = "select '-' as fstr,col5,col6,type,client_id,client_unit_id,ent_by,rec_id,ent_date,vch_num as doc_no,to_char(date2,'" + sgen.Getsqldateformat() + "') as so_date1 ,to_char(vch_date,'" + sgen.Getsqldateformat() + "') as doc_date,col7 as icode,col8 as iname,col9 as partno,col10 as bal_qty,col11 as close_qty,col12 as so_no,to_char(date1,'" + sgen.Getsqldateformat() + "') as so_date,col13 as remark from enx_tab where (client_id||client_unit_id||vch_num||to_char(vch_date,'yyyymmdd')||type) = '" + URL + "'";
                                    break;
                                case "17003.8":  //pending mrs
                                    mq = "select '-' as fstr,col5,col6,type,client_id,client_unit_id,ent_by,rec_id,ent_date,vch_num as doc_no,to_char(date2,'" + sgen.Getsqldateformat() + "') as so_date1 ,to_char(vch_date,'" + sgen.Getsqldateformat() + "') as doc_date,col7 as icode,col8 as iname,col9 as partno,col10 as bal_qty,col11 as close_qty,col12 as so_no,to_char(date1,'" + sgen.Getsqldateformat() + "') as so_date,col13 as remark from enx_tab where (client_id||client_unit_id||vch_num||to_char(vch_date,'yyyymmdd')||type) = '" + URL + "'";
                                    break;
                                case "17003.9":   //pending dspatch
                                    mq = "select '-' as fstr,col5,col6,type,client_id,client_unit_id,ent_by,rec_id,ent_date,vch_num as doc_no,to_char(date2,'" + sgen.Getsqldateformat() + "') as so_date1 ,to_char(vch_date,'" + sgen.Getsqldateformat() + "') as doc_date,col7 as icode,col8 as iname,col9 as partno,col10 as bal_qty,col11 as close_qty,col12 as so_no,to_char(date1,'" + sgen.Getsqldateformat() + "') as so_date,col13 as remark from enx_tab where (client_id||client_unit_id||vch_num||to_char(vch_date,'yyyymmdd')||type) = '" + URL + "'";
                                    break;
                                case "17004.2":   //  CLOSE PENDING INDENT
                                    mq = "select '-' as fstr,col5,col6,type,client_id,client_unit_id,ent_by,rec_id,ent_date,vch_num as doc_no,to_char(date2,'" + sgen.Getsqldateformat() + "') as so_date1 ,to_char(vch_date,'" + sgen.Getsqldateformat() + "') as doc_date,col7 as icode,col8 as iname,col9 as partno,col10 as bal_qty,col11 as close_qty,col12 as so_no,to_char(date1,'" + sgen.Getsqldateformat() + "') as so_date,col13 as remark from enx_tab where (client_id||client_unit_id||vch_num||to_char(vch_date,'yyyymmdd')||type) = '" + URL + "'";
                                    break;
                                case "17002.6":  // model[0].Col9 = "CLOSE PENDING MRN";
                                    mq = "select '-' as fstr,col5,col6,type,client_id,client_unit_id,ent_by,rec_id,ent_date,vch_num as doc_no,to_char(date2,'" + sgen.Getsqldateformat() + "') as so_date1 ,to_char(vch_date,'" + sgen.Getsqldateformat() + "') as doc_date,col7 as icode,col8 as iname,col9 as partno,col10 as bal_qty,col11 as close_qty,col12 as so_no,to_char(date1,'" + sgen.Getsqldateformat() + "') as so_date,col13 as remark from enx_tab where (client_id||client_unit_id||vch_num||to_char(vch_date,'yyyymmdd')||type) = '" + URL + "'";
                                    break;
                                case "21002.3":   //pending schedule
                                    mq = "select '-' as fstr,col5,col6,type,client_id,client_unit_id,ent_by,rec_id,ent_date,vch_num as doc_no,to_char(date2,'" + sgen.Getsqldateformat() + "') as so_date1 ,to_char(vch_date,'" + sgen.Getsqldateformat() + "') as doc_date,col7 as icode,col8 as iname,col9 as partno,col10 as bal_qty,col11 as close_qty,col12 as so_no,to_char(date1,'" + sgen.Getsqldateformat() + "') as so_date,col13 as remark from enx_tab where (client_id||client_unit_id||vch_num||to_char(vch_date,'yyyymmdd')||type) = '" + URL + "'";
                                    break;
                                case "28002.3":  // "CLOSE PENDING PUR ORDER";
                                    mq = "select '-' as fstr,col5,col6,type,client_id,client_unit_id,ent_by,rec_id,ent_date,vch_num as doc_no,to_char(date2,'" + sgen.Getsqldateformat() + "') as so_date1 ,to_char(vch_date,'" + sgen.Getsqldateformat() + "') as doc_date,col7 as icode,col8 as iname,col9 as partno,col10 as bal_qty,col11 as close_qty,col12 as so_no,to_char(date1,'" + sgen.Getsqldateformat() + "') as so_date,col13 as remark from enx_tab where (client_id||client_unit_id||vch_num||to_char(vch_date,'yyyymmdd')||type) = '" + URL + "'";
                                    break;
                                case "39008.2":   //model[0].Col9 = "CLOSE PENDING PRD ORDER";
                                    mq = "select '-' as fstr,col5,col6,type,client_id,client_unit_id,ent_by,rec_id,ent_date,vch_num as doc_no,to_char(date2,'" + sgen.Getsqldateformat() + "') as so_date1 ,to_char(vch_date,'" + sgen.Getsqldateformat() + "') as doc_date,col7 as icode,col8 as iname,col9 as partno,col10 as bal_qty,col11 as close_qty,col12 as so_no,to_char(date1,'" + sgen.Getsqldateformat() + "') as so_date,col13 as remark from enx_tab where (client_id||client_unit_id||vch_num||to_char(vch_date,'yyyymmdd')||type) = '" + URL + "'";
                                    break;
                                case "21009.6":   //model[0].Col9 = "CLOSE PENDING PI";
                                    mq = "select '-' as fstr,col5,col6,type,client_id,client_unit_id,ent_by,rec_id,ent_date,vch_num as doc_no,to_char(date2,'" + sgen.Getsqldateformat() + "') as so_date1 ,to_char(vch_date,'" + sgen.Getsqldateformat() + "') as doc_date,col7 as icode,col8 as iname,col9 as partno,col10 as bal_qty,col11 as close_qty,col12 as so_no,to_char(date1,'" + sgen.Getsqldateformat() + "') as so_date,col13 as remark from enx_tab where (client_id||client_unit_id||vch_num||to_char(vch_date,'yyyymmdd')||type) = '" + URL + "'";
                                    break;
                                case "21009.7":   //model[0].Col9 = "CLOSE PENDING quot";
                                    mq = "select '-' as fstr,col5,col6,type,client_id,client_unit_id,ent_by,rec_id,ent_date,vch_num as doc_no,to_char(date2,'" + sgen.Getsqldateformat() + "') as so_date1 ,to_char(vch_date,'" + sgen.Getsqldateformat() + "') as doc_date,col7 as icode,col8 as iname,col9 as partno,col10 as bal_qty,col11 as close_qty,col12 as so_no,to_char(date1,'" + sgen.Getsqldateformat() + "') as so_date,col13 as remark from enx_tab where (client_id||client_unit_id||vch_num||to_char(vch_date,'yyyymmdd')||type) = '" + URL + "'";
                                    break;
                            }
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "EDMODE", "Y");
                                model[0].Col12 = dt.Rows[0]["type"].ToString();
                                model = getedit(model, dt, URL);
                                model[0].Col14 = tm.Col14;
                                model[0].Col15 = tm.Col15;
                                model[0].Col16 = dt.Rows[0]["Doc_no"].ToString();
                                sgen.SetSession(MyGuid, "DOCSO", dt.Rows[0]["col5"].ToString());
                                model[0].Col17 = dt.Rows[0]["doc_date"].ToString();
                                model[0].Col19 = dt.Rows[0]["col6"].ToString();
                                model[0].Col20 = dt.Rows[0]["col5"].ToString();
                                model[0].Col21 = dt.Rows[0]["so_date1"].ToString();
                                model[0].dt1 = model[0].dt1.Clone();
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["SNo"] = i + 1;
                                    dr["item"] = dt.Rows[i]["fstr"].ToString();
                                    dr["Icode"] = dt.Rows[i]["Icode"].ToString();
                                    dr["IName"] = dt.Rows[i]["IName"].ToString();
                                    dr["PartNo"] = dt.Rows[i]["PartNo"].ToString();
                                    dr["BAL_QTY"] = dt.Rows[i]["BAL_QTY"].ToString();
                                    dr["CLOSE_QTY"] = dt.Rows[i]["CLOSE_QTY"].ToString();
                                    dr["REMARK"] = dt.Rows[i]["remark"].ToString();
                                    switch (sgen.GetSession(MyGuid, "MENUID").ToString())
                                    {
                                        case "21009.4":    //pending so
                                            dr["SO_NO"] = dt.Rows[i]["so_no"].ToString();
                                            dr["SO_DATE"] = dt.Rows[i]["so_date"].ToString();
                                            break;
                                        case "17003.8":    //pending mrs
                                            dr["MRS_NO"] = dt.Rows[i]["so_no"].ToString();
                                            dr["MRS_DATE"] = dt.Rows[i]["so_date"].ToString(); break;
                                        case "17003.9":     //pending mrs
                                            dr["DSP_NO"] = dt.Rows[i]["so_no"].ToString();
                                            dr["DSP_DATE"] = dt.Rows[i]["so_date"].ToString(); break;
                                        case "17004.2":   // CLOSE PENDING INDENT
                                            dr["IND_NO"] = dt.Rows[i]["so_no"].ToString();
                                            dr["IND_DATE"] = dt.Rows[i]["so_date"].ToString(); break;
                                        case "17002.6":  // CLOSE PENDING MRN";
                                            dr["MRN_NO"] = dt.Rows[i]["so_no"].ToString();
                                            dr["MRN_DATE"] = dt.Rows[i]["so_date"].ToString(); break;
                                        case "21002.3":  //pending schedule
                                            dr["SDL_NO"] = dt.Rows[i]["so_no"].ToString();
                                            dr["SDL_DATE"] = dt.Rows[i]["so_date"].ToString(); break;
                                        case "28002.3":  // "CLOSE PENDING PUR ORDER";
                                            dr["PO_NO"] = dt.Rows[i]["so_no"].ToString();
                                            dr["PO_DATE"] = dt.Rows[i]["so_date"].ToString(); break;
                                        case "39008.2":  //CLOSE PENDING PRD ORDER";
                                            dr["PRD_NO"] = dt.Rows[i]["so_no"].ToString();
                                            dr["PRD_DATE"] = dt.Rows[i]["so_date"].ToString(); break;
                                        case "21009.6":  //CLOSE PENDING PI";
                                            dr["PI_NO"] = dt.Rows[i]["so_no"].ToString();
                                            dr["PI_DATE"] = dt.Rows[i]["so_date"].ToString(); break;
                                        case "21009.7":  //CLOSE PENDING PI";
                                            dr["QUOT_NO"] = dt.Rows[i]["so_no"].ToString();
                                            dr["QUOT_DATE"] = dt.Rows[i]["so_date"].ToString(); break;
                                    }
                                    model[0].dt1.Rows.Add(dr);
                                }
                                model[0].dt1.AcceptChanges();
                            }
                            break;
                        case "DOCNO":
                            switch (sgen.GetSession(MyGuid, "MENUID").ToString())
                            {
                                case "21009.4":
                                    mq = "select group_concat(distinct a.vch_num) as docm_no from purchasesc a where (a.client_id || a.client_unit_id || a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.type) in ('" + URL + "') ";
                                    string[] xfstr = URL.Split(',');
                                    string xfstrnew = xfstr[0].Substring(0, 25);
                                    mq1 = "select distinct to_char(convert_tz(a.vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') as so_date from purchasesc a where (a.client_id || a.client_unit_id || a.vch_num || to_char(a.vch_date, 'yyyymmdd') " +
                                        "|| a.type) in ('" + xfstrnew + "') ";
                                    dt = sgen.getdata(userCode, mq1);
                                    if (dt.Rows.Count > 0)
                                    {
                                        model[0].Col21 = dt.Rows[0]["so_date"].ToString();
                                    }
                                    break;
                                case "17003.8":   // model[0].Col9 = "CLOSE PENDING MRS";
                                    mq = "select group_concat(distinct a.vch_num) as docm_no from itransactionc a where (a.client_id || a.client_unit_id || a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.type) in ('" + URL + "') ";
                                    xfstr = URL.Split(',');
                                    xfstrnew = xfstr[0].Substring(0, 25);
                                    mq1 = "select distinct to_char(convert_tz(dsc.vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') as mrs_date" +
                                 " from itransactionc dsc where (dsc.client_id || dsc.client_unit_id || dsc.vch_num || to_char(dsc.vch_date, 'yyyymmdd') || dsc.type) in ('" + xfstrnew + "') ";
                                    dt = sgen.getdata(userCode, mq1);
                                    if (dt.Rows.Count > 0)
                                    {
                                        model[0].Col21 = dt.Rows[0]["mrs_date"].ToString();
                                    }
                                    break;
                                case "17003.9":  // CLOSE PENDING dispatch";
                                    mq = "select group_concat(distinct a.vch_num) as docm_no from itransaction a where (a.client_id || a.client_unit_id || a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.type) in ('" + URL + "') ";
                                    xfstr = URL.Split(',');
                                    xfstrnew = xfstr[0].Substring(0, 25);
                                    mq1 = "select distinct to_char(convert_tz(dsc.vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') as dsp_date" +
                                 " from itransaction dsc where (dsc.client_id || dsc.client_unit_id || dsc.vch_num || to_char(dsc.vch_date, 'yyyymmdd') || dsc.type) in ('" + xfstrnew + "') ";
                                    dt = sgen.getdata(userCode, mq1);
                                    if (dt.Rows.Count > 0)
                                    {
                                        model[0].Col21 = dt.Rows[0]["dsp_date"].ToString();
                                    }
                                    break;
                                case "17004.2":   //  model[0].Col9 = "CLOSE PENDING INDENT";
                                    mq = "select group_concat(distinct a.vch_num) as docm_no from purchases a where (a.client_id || a.client_unit_id || a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.type) in ('" + URL + "') ";
                                    xfstr = URL.Split(',');
                                    xfstrnew = xfstr[0].Substring(0, 25);
                                    mq1 = "select distinct to_char(convert_tz(dsc.vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') as ind_date" +
                                 " from purchases dsc where (dsc.client_id || dsc.client_unit_id || dsc.vch_num || to_char(dsc.vch_date, 'yyyymmdd') || dsc.type) in ('" + xfstrnew + "') ";
                                    dt = sgen.getdata(userCode, mq1);
                                    if (dt.Rows.Count > 0)
                                    {
                                        model[0].Col21 = dt.Rows[0]["ind_date"].ToString();
                                    }
                                    break;
                                case "17002.6":  // model[0].Col9 = "CLOSE PENDING MRN";
                                    break;
                                case "21002.3":
                                    mq = "select group_concat(distinct a.vch_num) as docm_no from kc_tab a where (a.client_id || a.client_unit_id || a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.type) in ('" + URL + "') ";
                                    xfstr = URL.Split(',');
                                    xfstrnew = xfstr[0].Substring(0, 25);
                                    mq1 = "select distinct to_char(convert_tz(dsc.date1,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') as sdl_date" +
                                 " from kc_tab dsc where (dsc.client_id || dsc.client_unit_id || dsc.vch_num || to_char(dsc.vch_date, 'yyyymmdd') || dsc.type) in ('" + xfstrnew + "') ";
                                    dt = sgen.getdata(userCode, mq1);
                                    if (dt.Rows.Count > 0)
                                    {
                                        model[0].Col21 = dt.Rows[0]["sdl_date"].ToString();
                                    }
                                    break;
                                case "28002.3":
                                    mq = "select group_concat(distinct a.vch_num) as docm_no from purchases a where (a.client_id || a.client_unit_id || a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.type) in ('" + URL + "')";
                                    xfstr = URL.Split(',');
                                    xfstrnew = xfstr[0].Substring(0, 25);
                                    mq1 = "select distinct to_char(a.vch_date,'" + sgen.Getsqldateformat() + "') as po_date from purchases a where (a.client_id || a.client_unit_id || a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.type) in ('" + xfstrnew + "')";
                                    dt = sgen.getdata(userCode, mq1);
                                    if (dt.Rows.Count > 0)
                                    {
                                        model[0].Col21 = dt.Rows[0]["po_date"].ToString();
                                    }
                                    break;
                                case "39008.2":    //model[0].Col9 = "CLOSE PENDING PRD ORDER";
                                    mq = "select group_concat(distinct a.vch_num) as docm_no from kc_tab a where (a.client_id || a.client_unit_id || a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.type) in ('" + URL + "')";
                                    xfstr = URL.Split(',');
                                    xfstrnew = xfstr[0].Substring(0, 26);
                                    mq1 = "select distinct to_char(a.vch_date,'" + sgen.Getsqldateformat() + "') as doc_date from kc_tab a where (a.client_id || a.client_unit_id || a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.type) in ('" + xfstrnew + "')";
                                    dt = sgen.getdata(userCode, mq1);
                                    if (dt.Rows.Count > 0)
                                    {
                                        model[0].Col21 = dt.Rows[0]["doc_date"].ToString();
                                    }
                                    break;
                                case "21009.6":  //CLOSE PENDING PI
                                    mq = "select group_concat(distinct a.vch_num) as docm_no from itransactionc a where (a.client_id || a.client_unit_id || a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.pur_type) in ('" + URL + "')";
                                    xfstr = URL.Split(',');
                                    xfstrnew = xfstr[0].Substring(0, 26);
                                    mq1 = "select distinct to_char(a.vch_date,'" + sgen.Getsqldateformat() + "') as doc_date from itransactionc a where (a.client_id || a.client_unit_id || a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.pur_type) in ('" + xfstrnew + "')";
                                    dt = sgen.getdata(userCode, mq1);
                                    if (dt.Rows.Count > 0)
                                    {
                                        model[0].Col21 = dt.Rows[0]["doc_date"].ToString();
                                    }
                                    break;
                                case "21009.7":  //CLOSE PENDING QUOTATION
                                    mq = "select group_concat(distinct a.vch_num) as docm_no from itransactionc a where (a.client_id || a.client_unit_id || a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.pur_type) in ('" + URL + "')";
                                    xfstr = URL.Split(',');
                                    xfstrnew = xfstr[0].Substring(0, 26);
                                    mq1 = "select distinct to_char(a.vch_date,'" + sgen.Getsqldateformat() + "') as doc_date from itransactionc a where (a.client_id || a.client_unit_id || a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.pur_type) in ('" + xfstrnew + "')";
                                    dt = sgen.getdata(userCode, mq1);
                                    if (dt.Rows.Count > 0)
                                    {
                                        model[0].Col21 = dt.Rows[0]["doc_date"].ToString();
                                    }
                                    break;
                            }
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                model[0].Col20 = dt.Rows[0]["docm_no"].ToString();
                                sgen.SetSession(MyGuid, "DOCSO", dt.Rows[0]["docm_no"].ToString());
                                //if (Session["MENUID"].ToString() != "21009.4")
                                //{
                                //}
                                Make_query(viewName.ToLower(), "Select Item", "ITEM", "2", "", "");
                                ViewBag.scripCall = "callFoo('Select Item');";
                            }
                            break;
                        case "ITEM":
                            switch (sgen.GetSession(MyGuid, "MENUID").ToString())
                            {
                                case "21009.4":    //sales order
                                    mq = "select (it.icode || pc.type || pc.vch_num || to_char(it.vch_date, 'yyyymmdd') || it.type) as fstr,it.icode as Icode,it.iname as Iname,it.cpartno Partno,nvl(pc.bal_qty, '0') as Order_qty," +
                                        "pc.po_no as po_num,to_char(pc.date1, '" + sgen.Getsqldateformat() + "') as po_date,to_char" +
                                        "(pc.vch_date, '" + sgen.Getsqldateformat() + "') as so_date,pc.vch_num as so_no from item it inner join (select a.po_no, a.vch_num, a.icode, a.type, " +
                                        "a.so_qty,a.vch_date, a.date1,nvl(sum(a.invoice_qty), '0') as used_qty,a.so_qty - nvl(sum(a.invoice_qty), '0') as bal_qty from " +
                                        "(select pc.vch_num, pc.gothrchrg as po_no, pc.date1, pc.vch_date, pc.icode, pc.type, pc.qtyord as so_qty, iv.qtyout as invoice_qty from purchasesc pc " +
                                        "left join itransaction iv on iv.sono = pc.vch_num and iv.potype = '51' and pc.icode=iv.icode and iv.client_unit_id = pc.client_unit_id " +
                                        "where pc.pur_type = 'NPI' and substr(pc.type, 1, 1) = '4' and pc.client_unit_id = '" + unitid_mst + "' union all " +
                                        "select pc.vch_num, pc.gothrchrg as po_no, pc.date1, pc.vch_date, pc.icode, pc.type, pc.qtyord as so_qty, dp.qtyout as dsp_qty from purchasesc pc " +
                                        "left join itransaction dp on dp.VEHNO = pc.vch_num and dp.type = '60' and pc.icode=dp.icode and dp.client_unit_id = pc.client_unit_id" +
                                        " where pc.pur_type = 'NPI' and substr(pc.type, 1, 1) = '4' union all select pc.vch_num, pc.gothrchrg as po_no, pc.date1,pc.vch_date, pc.icode, " +
                                        "pc.type, pc.qtyord as so_qty, ds.col10 as dsp_qty from purchasesc pc left join kc_tab ds on ds.col13 = pc.vch_num and pc.icode=ds.col5 and ds.col20 = 'DSC' and" +
                                        " ds.client_unit_id = pc.client_unit_id where pc.pur_type = 'NPI' and substr(pc.type, 1, 1) = '4' union all select pc.vch_num," +
                                        " pc.gothrchrg as po_no, pc.date1, pc.vch_date, pc.icode, pc.type, pc.qtyord as so_qty,co.col11 as invoice_qty from purchasesc pc left join enx_tab co " +
                                        "on co.col7 = pc.icode and pc.vch_num = co.col5 and co.type = 'CPS' and co.client_unit_id = '" + unitid_mst + "' where pc.pur_type = 'NPI' and substr(pc.type, 1, 1) = '4') a group" +
                                        " by(a.vch_num, a.icode, a.type, a.so_qty, a.po_no, a.vch_date, a.date1)) pc on pc.icode = it.icode " +
                                        "where(it.icode || pc.type || pc.vch_num || to_char(it.vch_date, 'yyyymmdd') || it.type) in ('" + URL + "')";
                                    dt = sgen.getdata(userCode, mq);
                                    if (dt.Rows.Count > 0)
                                    {
                                        if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt1.Rows.RemoveAt(0); }
                                        for (int i = 0; i < dt.Rows.Count; i++)
                                        {
                                            DataRow dr = model[0].dt1.NewRow();
                                            dr["SNo"] = "0";
                                            dr["item"] = dt.Rows[i]["fstr"].ToString();
                                            dr["Icode"] = dt.Rows[i]["Icode"].ToString();
                                            dr["IName"] = dt.Rows[i]["Iname"].ToString();
                                            dr["PARTNO"] = dt.Rows[i]["Partno"].ToString();
                                            dr["SO_No"] = dt.Rows[i]["so_no"].ToString();
                                            dr["SO_Date"] = dt.Rows[i]["so_date"].ToString();
                                            dr["Bal_qty"] = dt.Rows[i]["Order_qty"].ToString();
                                            dr["CLOSE_QTY"] = "0";
                                            dr["Remark"] = "-";
                                            model[0].dt1.Rows.Add(dr);
                                        }
                                        model[0].dt1.AcceptChanges();
                                    }
                                    break;
                                case "17003.8":    // "CLOSE PENDING MRS";
                                    mq = "select (mr.vch_num||it.icode||mr.type||to_char(it.vch_date,'yyyymmdd')||it.type) as fstr, mr.icode ,it.iname, it.cpartno,mr.vch_num mrs_no,to_char(mr.vch_date,'" + sgen.Getsqldateformat() + "') Req_Date,um.master_name as uom," +
                                 "dp.master_name Dept,dg.master_name Desig,nvl(s.closing,'0') as qtystk,mr.pono as Order_Id,mr.issued_qty,mr.bal_qty Qty_Req " +
                                 "from item it inner join (select distinct a.vch_num,a.type,a.icode,a.pono,a.client_id,a.client_unit_id,a.vch_date,a.Qty_Req,a.desig," +
                                 "a.deptno,sum(a.issued_qty) as issued_qty,(a.Qty_Req - nvl(sum(a.issued_qty), '0')) as bal_qty from(select " +
                                 "mr.vch_num,mr.type,mr.icode,mr.pono,mr.client_id,mr.client_unit_id,mr.vch_date,mr.desig,mr.deptno, mr.qtychl Qty_Req," +
                                 "nvl(iv.qtyout,'0') as issued_qty from itransactionc mr left join itransaction iv on iv.icode=mr.icode and iv.chlno " +
                                 "= mr.vch_num and iv.type = '32' and iv.client_unit_id = '" + unitid_mst + "' " +
                                 " where upper(mr.type) in ('3A', '3B') and mr.client_unit_id = '" + unitid_mst + "' " +
                                 "union all select mr.vch_num,mr.type,mr.icode,mr.pono,mr.client_id,mr.client_unit_id,mr.vch_date,mr.desig,mr.deptno," +
                                 "mr.qtychl Qty_Req,nvl(iv.col11,'0') as closed_qty from itransactionc mr left join enx_tab iv on iv.col7=mr.icode and " +
                                 "iv.col12 = mr.vch_num and iv.type = 'CPM' and iv.client_unit_id = " +
                                 "'" + unitid_mst + "'  where upper(mr.type) in ('3A', '3B') and mr.client_unit_id = '" + unitid_mst + "') " +
                                 "a group by(a.vch_num,a.type,a.icode,a.pono,a.client_id,a.client_unit_id,a.vch_date,a.desig,a.deptno,a.Qty_Req)) mr on " +
                                 "mr.icode=it.icode and find_in_set(mr.client_unit_id,it.client_unit_id)=1 inner join master_setting dp" +
                                 " on dp.master_id = mr.deptno and dp.type = 'MDP' and " +
                                 "find_in_set(dp.client_unit_id,'" + unitid_mst + "')= 1 inner join master_setting dg on dg.master_id = mr.desig and dg.type" +
                                 " = 'MDG' and find_in_set(dg.client_unit_id, '" + unitid_mst + "')" +
                                 " = 1 left join master_setting um on um.master_id = it.uom and um.type = 'UMM' " +
                                 "and find_in_set(um.client_unit_id, it.client_unit_id)= 1 left join(select t.client_unit_id, t.icode, sum(nvl(t.qtyin,0)) as Received," +
                                 "sum(nvl(t.qtyout, 0)) as Issued,sum(nvl(t.qtyin, 0)) - sum(nvl(t.qtyout, 0)) as closing from itransaction t" +
                                 " where trim(t.store) = 'Y' group by t.icode,t.client_unit_id ) s on it.icode = s.icode and " +
                                 "find_in_set(s.client_unit_id, it.client_unit_id)= 1 where " +
                                 "(mr.vch_num||it.icode||mr.type||to_char(it.vch_date,'yyyymmdd')||it.type) in ('" + URL + "')";
                                    dt = sgen.getdata(userCode, mq);
                                    if (dt.Rows.Count > 0)
                                    {
                                        if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt1.Rows.RemoveAt(0); }
                                        for (int i = 0; i < dt.Rows.Count; i++)
                                        {
                                            DataRow dr = model[0].dt1.NewRow();
                                            dr["Item"] = dt.Rows[i]["fstr"].ToString();
                                            dr["SNo"] = i + 1;
                                            dr["Icode"] = dt.Rows[i]["icode"].ToString();
                                            dr["IName"] = dt.Rows[i]["iname"].ToString();
                                            dr["PARTNO"] = dt.Rows[i]["cpartno"].ToString();
                                            dr["Bal_Qty"] = dt.Rows[i]["Qty_Req"].ToString();
                                            dr["mrs_no"] = dt.Rows[i]["mrs_no"].ToString();
                                            dr["mrs_date"] = dt.Rows[i]["Req_Date"].ToString();
                                            dr["CLOSE_QTY"] = "";
                                            dr["Remark"] = "-";
                                            model[0].dt1.Rows.Add(dr);
                                        }
                                        model[0].dt1.AcceptChanges();
                                    }
                                    break;
                                case "17003.9":    // "CLOSE PENDING DISPATCH";
                                    mq = "select distinct (it.icode || pc.type || pc.dsp_no || to_char(it.vch_date, 'yyyymmdd') || it.type) as fstr,it.icode as icode,it.iname as iname, cl.c_name as Party_Name,it.cpartno partno,pc.dsp_no,pc.type," +
                                        "pc.dsp_qty,pc.dsp_date,pc.bal_qty as bal_qty from item it inner join (select a.dsp_no,a.po_no,a.sdl_no,a.so_no,a.type,a.type2, a.icode," +
                                        "a.acode,a.client_id,a.client_unit_id,a.dsp_date,a.po_date,a.sdl_date,a.so_date,a.dsp_qty, sum(a.inv_qty) as inv_qty,(a.dsp_qty - nvl(sum(a.inv_qty)," +
                                        " '0')) as bal_qty from(select distinct ds.vch_num as dsp_no,ds.type,ds.type2,ds.acode,ds.icode,ds.client_id,ds.client_unit_id," +
                                        "to_char(ds.vch_date, '" + sgen.Getsqldateformat() + "') dsp_date,to_char(ds.chldate, '" + sgen.Getsqldateformat() + "') po_date,to_char(ds.ewaydate, '" + sgen.Getsqldateformat() + "') " +
                                        "sdl_date,to_char(ds.invdate, '" + sgen.Getsqldateformat() + "') so_date,ds.tmode as po_no,ds.gdisc as sdl_no,ds.vehno as so_no,ds.qtyout as dsp_qty" +
                                        ",nvl(iv.qtyout,'0') as inv_qty from itransaction ds left join itransaction iv on iv.dspno = ds.vch_num and iv.potype = '53' and" +
                                        " iv.icode=ds.icode and iv.client_unit_id = ds.client_unit_id where substr(ds.type,1,1)='6' and " +
                                        "substr(ds.type2,1,1)='4' and ds.client_unit_id = '" + unitid_mst + "' union all  " +
                                        "select distinct ds.vch_num as dsp_no,ds.type,ds.type2,ds.acode,ds.icode,ds.client_id,ds.client_unit_id,to_char(ds.vch_date, '" + sgen.Getsqldateformat() + "') " +
                                        "dsp_date,to_char(ds.chldate, '" + sgen.Getsqldateformat() + "') po_date,to_char(ds.ewaydate, '" + sgen.Getsqldateformat() + "') sdl_date,to_char(ds.invdate, '" + sgen.Getsqldateformat() + "') " +
                                        "so_date,ds.tmode as po_no,ds.gdisc as sdl_no,ds.vehno as so_no,ds.qtyout as dsp_qty,nvl(co.col11, '0') as close_qty from itransaction " +
                                        "ds inner join enx_tab co on co.col7 = ds.icode and ds.vch_num = co.col12 and co.type = 'CPC' " +
                                        "and co.client_unit_id = '" + unitid_mst + "' where substr(ds.type,1,1)='6' and substr(ds.type2,1,1)='4' " +
                                        "and ds.client_unit_id = '" + unitid_mst + "') a group by(a.dsp_no,a.po_no,a.sdl_no,a.so_no,a.type,a.type2, " +
                                        "a.icode,a.acode,a.client_id,a.client_unit_id,a.dsp_date, a.po_date,a.sdl_date,a.so_date, a.dsp_qty)) pc on pc.icode = it.icode " +
                                        "inner join clients_mst cl on cl.vch_num = pc.acode and cl.type = 'BCD' and substr(cl.vch_num,0,3)='303' and" +
                                        " cl.client_unit_id = pc.client_unit_id where (it.icode || pc.type || pc.dsp_no || to_char(it.vch_date, 'yyyymmdd') || it.type) in ('" + URL + "')";
                                    dt = sgen.getdata(userCode, mq);
                                    if (dt.Rows.Count > 0)
                                    {
                                        if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt1.Rows.RemoveAt(0); }
                                        for (int i = 0; i < dt.Rows.Count; i++)
                                        {
                                            DataRow dr = model[0].dt1.NewRow();
                                            dr["Item"] = dt.Rows[i]["fstr"].ToString();
                                            dr["SNo"] = i + 1;
                                            dr["Icode"] = dt.Rows[i]["icode"].ToString();
                                            dr["IName"] = dt.Rows[i]["iname"].ToString();
                                            dr["PARTNO"] = dt.Rows[i]["partno"].ToString();
                                            dr["Bal_Qty"] = dt.Rows[i]["bal_qty"].ToString();
                                            dr["dsp_no"] = dt.Rows[i]["dsp_no"].ToString();
                                            dr["dsp_date"] = dt.Rows[i]["dsp_date"].ToString();
                                            dr["CLOSE_QTY"] = "";
                                            dr["Remark"] = "-";
                                            model[0].dt1.Rows.Add(dr);
                                        }
                                        model[0].dt1.AcceptChanges();
                                    }
                                    break;
                                case "17004.2":   //"CLOSE PENDING INDENT";
                                    mq = "select (it.icode||to_char(it.vch_date,'yyyymmdd')||it.type||pc.ind_no||to_char(pc.vch_date,'yyyymmdd')) fstr" +
                                        " ,pc.ind_no,to_char(pc.vch_date,'" + sgen.Getsqldateformat() + "') as ind_date,pc.icode as Icode,it.iname as Iname,it.cpartno Partno,um.master_name" +
                                        " as UOM,hsn.master_name as hsn,hsn.group_name taxrate,pc.type,pc.ind_qty,pc.Bal_qty from item it inner join(select a.ind_no," +
                                        "a.vch_date,a.type, a.icode,a.client_id,a.client_unit_id,a.ind_qty,sum(a.po_qty) as used,(a.ind_qty - nvl(sum(a.po_qty), '0'))" +
                                        " as Bal_qty from(select nd.vch_num as ind_no,nd.vch_date,nd.type,nd.icode,nd.client_id,nd.client_unit_id,nd.qtyord as ind_qty,nvl" +
                                        "(b.qtyord,'0') as po_qty from purchases nd left join purchases b on b.icode=nd.icode and b.indno=nd.vch_num and b.type not in ('66') " +
                                        "and b.pur_type='001' and nd.client_unit_id=b.client_unit_id where nd.type='66' and nd.client_unit_id='" + unitid_mst + "' union all " +
                                        "select nd.vch_num as ind_no,nd.vch_date,nd.type,nd.icode,nd.client_id,nd.client_unit_id,nd.qtyord as ind_qty,nvl(b.col11,'0') as " +
                                        "close_qty from purchases nd left join enx_tab b on b.col7=nd.icode and b.col12=nd.vch_num and" +
                                        " b.type = 'CPI' and nd.client_unit_id=b.client_unit_id where nd.type='66' and nd.client_unit_id='" + unitid_mst + "') " +
                                        "a group by(a.ind_no,a.vch_date,a.type, a.icode,a.client_id,a.client_unit_id,a.ind_qty)) pc on " +
                                        "pc.icode=it.icode and find_in_set(pc.client_unit_id,it.client_unit_id)=1 inner join master_setting um on " +
                                        "um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,'" + unitid_mst + "')=1 " +
                                        "inner join master_setting hsn on hsn.master_id=it.hsno and hsn.type='HSN' and find_in_set(hsn.client_unit_id,'" + unitid_mst + "')=1 " +
                                        "where (it.icode||to_char(it.vch_date,'yyyymmdd')||it.type||pc.ind_no||to_char(pc.vch_date,'yyyymmdd')) in ('" + URL + "')";
                                    dt = sgen.getdata(userCode, mq);
                                    if (dt.Rows.Count > 0)
                                    {
                                        if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt1.Rows.RemoveAt(0); }
                                        for (int i = 0; i < dt.Rows.Count; i++)
                                        {
                                            DataRow dr = model[0].dt1.NewRow();
                                            dr["Item"] = dt.Rows[i]["fstr"].ToString();
                                            dr["SNo"] = i + 1;
                                            dr["Icode"] = dt.Rows[i]["icode"].ToString();
                                            dr["IName"] = dt.Rows[i]["iname"].ToString();
                                            dr["PARTNO"] = dt.Rows[i]["partno"].ToString();
                                            dr["Bal_Qty"] = dt.Rows[i]["Bal_qty"].ToString();
                                            dr["ind_no"] = dt.Rows[i]["ind_no"].ToString();
                                            dr["ind_date"] = dt.Rows[i]["ind_date"].ToString();
                                            dr["CLOSE_QTY"] = "";
                                            dr["Remark"] = "-";
                                            model[0].dt1.Rows.Add(dr);
                                        }
                                        model[0].dt1.AcceptChanges();
                                    }
                                    break;
                                case "17002.6":
                                    model[0].Col9 = "CLOSE PENDING MRN";
                                    model[0].Col12 = "CMR";
                                    dt = sgen.getdata(userCode, "select '0' as  SNo ,'-' as Doc_type,'-' as Doc_no,'-' Doc_date,'-'  Party_name,'-' as Doc_value,'0' as  Closer_date,'-' as Remark from dual");
                                    model[0].dt1 = dt;
                                    sgen.SetSession(MyGuid, "BCPI_DT", dt.Copy());
                                    break;
                                case "21002.3":
                                    mq = "select distinct (it.icode || pc.col20 || pc.sdl_no || to_char(it.vch_date, 'yyyymmdd') || it.type) as fstr,it.icode as icode,it.iname as iname,cl.c_name as party,pc.pending_sdl " +
                                        "as Pending_sdl_qty,it.cpartno partno,to_char(pc.date5,'" + sgen.Getsqldateformat() + "') as po_date,to_char(pc.date6,'" + sgen.Getsqldateformat() + "') " +
                                        "as so_date,pc.col11 as po_no,pc.col13 as so_no,to_char(pc.date1,'" + sgen.Getsqldateformat() + "') sdl_date,pc.sdl_no,nvl(s.closing, 0) " +
                                        "as qty_in_stock from item it inner join (select a.sdl_no,a.typ, a.icode,a.col1,a.client_id,a.client_unit_id, a.col20, " +
                                        "a.date1,a.date5, a.date6, a.col11, a.col13, a.sdl_qty,sum(a.dsp_qty) as dsp_qty,(a.sdl_qty - nvl(sum(a.dsp_qty), '0')) " +
                                        "as pending_sdl from(select ds.vch_num as sdl_no,ds.type typ,ds.col1,ds.client_id,ds.client_unit_id, ds.col20,ds.date1," +
                                        "ds.date5, ds.date6,ds.col11, ds.col13,ds.col5 as icode, ds.col10 as sdl_qty,dp.qtyout as dsp_qty from kc_tab ds " +
                                        "left join itransaction dp on dp.GDISC = ds.vch_num and dp.type = '61'  and dp.icode=ds.col5 " +
                                        "and dp.client_unit_id = ds.client_unit_id where substr(ds.type,1,1)='4' " +
                                        "and ds.col20='DSC' and ds.client_unit_id = '" + unitid_mst + "' union all " +
                                        "select ds.vch_num as sdl_no,ds.type typ,ds.col1,ds.client_id,ds.client_unit_id, ds.col20,ds.date1,ds.date5, ds.date6, ds.col11," +
                                        " ds.col13, ds.col5 as icode,ds.col10 as sdl_qty, iv.qtyout as inv_qty from kc_tab ds left join itransaction iv " +
                                        "on iv.sdlno = ds.vch_num and iv.potype = '52'  and iv.icode=ds.col5 " +
                                        "and iv.client_unit_id = ds.client_unit_id where substr(ds.type,1,1)='4' " +
                                        "and ds.col20='DSC' and ds.client_unit_id = '" + unitid_mst + "' union all " +
                                        "select ds.vch_num as sdl_no,ds.type typ,ds.col1,ds.client_id,ds.client_unit_id,ds.col20,ds.date1,ds.date5,ds.date6, " +
                                        "ds.col11, ds.col13, ds.col5 as icode, ds.col10 as sdl_qty,co.col11 as close_qty from kc_tab ds left join enx_tab co on " +
                                        "co.col7 = ds.col5 and ds.vch_num = co.col5 and co.type = 'CPD' " +
                                        "and co.client_unit_id = '" + unitid_mst + "' " +
                                        "where substr(ds.type,1,1)='4' and ds.col20='DSC' and ds.client_unit_id = '" +
                                        unitid_mst + "') a group by(a.sdl_no,a.typ, a.icode,a.col1,a.client_id,a.client_unit_id, a.col20,a.date1,a.date5, a.date6," +
                                        " a.col11, a.col13, a.sdl_qty)) pc on pc.icode = it.icode left join(select t.client_unit_id, t.icode, sum(nvl(t.qtyin,0)) " +
                                        "as Received,sum(nvl(t.qtyout, 0)) as Issued,sum(nvl(t.qtyin, 0)) - sum(nvl(t.qtyout, 0)) as closing from itransaction t " +
                                        "where trim(t.store) = 'Y' group by t.icode,t.client_unit_id ) s on it.icode = s.icode and find_in_set(s.client_unit_id, " +
                                        "it.client_unit_id)=1 inner join clients_mst cl on cl.vch_num = pc.col1 and cl.client_unit_id = " +
                                        "pc.client_unit_id and cl.type = 'BCD' and substr(cl.vch_num,0,3)='303' where (it.icode || pc.col20 || pc.sdl_no || to_char(it.vch_date, 'yyyymmdd') || it.type) in ('" + URL + "')";
                                    dt = sgen.getdata(userCode, mq);
                                    if (dt.Rows.Count > 0)
                                    {
                                        if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt1.Rows.RemoveAt(0); }
                                        for (int i = 0; i < dt.Rows.Count; i++)
                                        {
                                            DataRow dr = model[0].dt1.NewRow();
                                            dr["Item"] = dt.Rows[i]["fstr"].ToString();
                                            dr["SNo"] = i + 1;
                                            dr["Icode"] = dt.Rows[i]["icode"].ToString();
                                            dr["IName"] = dt.Rows[i]["iname"].ToString();
                                            dr["PARTNO"] = dt.Rows[i]["partno"].ToString();
                                            dr["Bal_Qty"] = dt.Rows[i]["Pending_sdl_qty"].ToString();
                                            dr["sdl_no"] = dt.Rows[i]["sdl_no"].ToString();
                                            dr["sdl_date"] = dt.Rows[i]["sdl_date"].ToString();
                                            dr["CLOSE_QTY"] = "";
                                            dr["Remark"] = "-";
                                            model[0].dt1.Rows.Add(dr);
                                        }
                                        model[0].dt1.AcceptChanges();
                                    }
                                    break;
                                case "28002.3":
                                    mq = "select (p.vch_num||p.icode||to_char(it.vch_date,'yyyymmdd')||it.type) as fstr, p.vch_num PO_Number,to_char(p.vch_date,'" + sgen.Getsqldateformat() + "') PO_Date,p.icode ICode,it.iname,it.cpartno,um.master_name UOM,hsn.master_name HSN,location_name('" + clientid_mst + "'||'" + unitid_mst + "'||itb.loc) as location,nvl(s.closing,'0') as stock,p.qtyord,p.bal_qty from item it inner join (select a.vch_num,a.vch_date,a.type,a.acode,a.icode,a.client_id,a.client_unit_id ,a.qtyord, sum(a.inv_qty) as inv_qty,(a.qtyord - nvl(sum(a.inv_qty), '0')) as bal_qty from(select po.vch_num,po.vch_date,po.type,po.acode,po.icode,po.client_id,po.client_unit_id,po.qtyord,nvl(iv.qtyrcvd,'0') as inv_qty from purchases po left join itransaction iv on iv.pono = po.vch_num and to_char(iv.podate,'yyyymmdd')=to_char(po.vch_date,'yyyymmdd') and iv.icode=po.icode " +
                                        "and iv.type='02' and iv.client_unit_id = po.client_unit_id where po.type in ('50','54','52') and po.client_unit_id = '" + unitid_mst + "' " +
                                        "union all select po.vch_num,po.vch_date,po.type,po.acode,po.icode,po.client_id,po.client_unit_id ,po.qtyord,nvl(to_number(iv.col11),'0') " +
                                        "as close_qty from purchases po left join enx_tab iv on iv.col12 = po.vch_num and iv.col7=po.icode and iv.type='POR' and iv.client_unit_id = po.client_unit_id where po.type in ('50','54','52') and po.client_unit_id = '" + unitid_mst + "') a group by(a.vch_num,a.vch_date,a.type,a.acode,a.icode,a.client_id,a.client_unit_id,a.qtyord)) p on p.icode=it.icode and find_in_set(p.client_unit_id,it.client_unit_id)=1 " +
                                        "left join master_setting um on um.master_id = it.uom  and um.type = 'UMM' and find_in_set(um.client_unit_id, it.client_unit_id)= 1 " +
                                        "left join master_setting hsn on hsn.master_id = it.hsno and hsn.type = 'HSN' and find_in_set(hsn.client_unit_id, it.client_unit_id)= 1 " +
                                        "inner join itbal itb on it.icode=itb.icode and it.type=itb.type and find_in_set(itb.client_unit_id,it.client_unit_id)=1 " +
                                        "left join(select t.client_unit_id, t.icode, sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout, 0)) as Issued,sum(nvl(t.qtyin, 0)) - sum(nvl(t.qtyout, 0)) as closing from itransaction t where trim(t.store) = 'Y' group by t.icode,t.client_unit_id ) s on it.icode = s.icode and find_in_set(s.client_unit_id ,it.client_unit_id)=1 where (p.vch_num||p.icode||to_char(it.vch_date,'yyyymmdd')||it.type) in ('" + URL + "')";
                                    dtt = sgen.getdata(userCode, mq);
                                    if (dtt.Rows.Count > 0)
                                    {
                                        try
                                        {
                                            if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt1.Rows.RemoveAt(0); }
                                            for (int i = 0; i < dtt.Rows.Count; i++)
                                            {
                                                DataRow dr = model[0].dt1.NewRow();
                                                dr["SNo"] = i + 1;
                                                dr["Item"] = dtt.Rows[i]["fstr"].ToString();
                                                dr["Icode"] = dtt.Rows[i]["icode"].ToString();
                                                dr["IName"] = dtt.Rows[i]["iname"].ToString();
                                                dr["PARTNO"] = dtt.Rows[i]["cpartno"].ToString();
                                                dr["Bal_Qty"] = dtt.Rows[i]["bal_qty"].ToString();
                                                dr["PO_NO"] = dtt.Rows[i]["PO_Number"].ToString();
                                                dr["PO_Date"] = dtt.Rows[i]["PO_Date"].ToString();
                                                dr["CLOSE_QTY"] = "";
                                                dr["Remark"] = "-";
                                                model[0].dt1.Rows.Add(dr);
                                            }
                                            model[0].dt1.AcceptChanges();
                                        }
                                        catch (Exception ex) { ViewBag.scripCall = "showmsgJS(1," + ex.Message.ToString().Replace('\'', ' ') + ",0);"; }
                                    }
                                    break;
                                case "39008.2":
                                    mq = "select (it.icode||w.vch_num ||to_char(it.vch_date,'yyyymmdd')||it.type ) fstr,w.vch_num as ord_no,to_char(w.vch_date,'" + sgen.Getsqldateformat() + "') as ord_date,w.icode as Icode,it.iname as Iname,it.cpartno as partno,w.ord_qty,w.bal_qty from item it inner join (select a.vch_num,a.vch_date,a.type,a.icode,a.client_id,a.client_unit_id,a.ord_qty,sum(to_number(a.used_qty)) as used_qty,(a.ord_qty - nvl(sum(a.used_qty), '0')) as Bal_qty from(select w.vch_num,w.vch_date,w.col5 as icode,w.client_id,w.client_unit_id,w.type,(case when w.col10='-' then '0' else w.col10 end) as ord_qty,nvl(ex.qtyin,'0') used_qty from kc_tab w " +
                                        "left join iprod ex on ex.pdono = w.vch_num and ex.client_unit_id=w.client_unit_id where w.type='PSO' and ex.type='101' and w.client_unit_id='" + unitid_mst + "' " +
                                        "union all select w.vch_num,w.vch_date,w.col5 as icode,w.client_id,w.client_unit_id,w.type,(case when w.col10='-' then '0' else w.col10 end) as ord_qty,nvl(to_number(ex.col11),'0') as close_qty from kc_tab w " +
                                        "left join enx_tab ex on ex.col12 = w.vch_num and ex.client_unit_id=w.client_unit_id and ex.type='COR' where w.type='PSO' and w.client_unit_id='" + unitid_mst + "') a group by (a.vch_num,a.vch_date,a.type,a.icode,a.client_id,a.client_unit_id,a.ord_qty)) w on it.icode=w.icode and find_in_set(w.client_unit_id,it.client_unit_id)=1 where (it.icode||w.vch_num ||to_char(it.vch_date,'yyyymmdd')||it.type ) in ('" + URL + "')";
                                    dtt = sgen.getdata(userCode, mq);
                                    if (dtt.Rows.Count > 0)
                                    {
                                        try
                                        {
                                            if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt1.Rows.RemoveAt(0); }
                                            for (int i = 0; i < dtt.Rows.Count; i++)
                                            {
                                                DataRow dr = model[0].dt1.NewRow();
                                                dr["SNo"] = i + 1;
                                                dr["Item"] = dtt.Rows[i]["fstr"].ToString();
                                                dr["Icode"] = dtt.Rows[i]["Icode"].ToString();
                                                dr["IName"] = dtt.Rows[i]["iname"].ToString();
                                                dr["PARTNO"] = dtt.Rows[i]["partno"].ToString();
                                                dr["Bal_Qty"] = dtt.Rows[i]["bal_qty"].ToString();
                                                dr["PRD_NO"] = dtt.Rows[i]["ord_no"].ToString();
                                                dr["PRD_DATE"] = dtt.Rows[i]["ord_date"].ToString();
                                                dr["CLOSE_QTY"] = "";
                                                dr["Remark"] = "-";
                                                model[0].dt1.Rows.Add(dr);
                                            }
                                            model[0].dt1.AcceptChanges();
                                        }
                                        catch (Exception ex) { ViewBag.scripCall = "showmsgJS(1," + ex.Message.ToString().Replace('\'', ' ') + ",0);"; }
                                    }
                                    break;
                                case "21009.6":   //CLOSE PI
                                    mq = "select distinct (it.icode || pc.type || pc.PI_NO || to_char(it.vch_date, 'yyyymmdd') || it.type) fstr,it.icode as icode,pc.PI_NO,pc.pi_date,it.iname as iname," +
                                    "it.cpartno partno,pc.type,pc.pi_qty,pc.bal_qty as Bal_qty from item it inner join (select a.PI_NO,a.pi_date,a.type,a.icode,a.client_id,a.client_unit_id,max(a.pi_qty) pi_qty," +
                                    "sum(a.inv_qty) as inv_qty,(max(a.pi_qty) - nvl(sum(a.inv_qty), '0')) as bal_qty from(select pi.vch_num as PI_NO,to_char(pi.vch_date, '" + sgen.Getsqldateformat() + "') pi_date,pi.type," +
                                    "pi.icode,pi.client_id,pi.client_unit_id,pi.ORDQTY as pi_qty,nvl(iv.qtyout,'0') as inv_qty from itransactionc pi left join itransaction iv on iv.pi_no = pi.vch_num and " +
                                    "iv.potype = '55' and iv.icode=pi.icode and iv.client_unit_id = pi.client_unit_id where substr(pi.type,1,1)='4' and pi.pur_type='BPI' and pi.client_unit_id = '" + unitid_mst + "' " +
                                    "union all select pi.vch_num as PI_NO,to_char(pi.vch_date, '" + sgen.Getsqldateformat() + "') pi_date,pi.type,pi.icode,pi.client_id,pi.client_unit_id,pi.ORDQTY as pi_qty,nvl(iv.col11, '0') as " +
                                    "close_qty from itransactionc pi left join enx_tab iv on iv.col12 = pi.vch_num and iv.type = 'PRI' and iv.col7=pi.icode and iv.client_unit_id = pi.client_unit_id where " +
                                    "substr(pi.type,1,1)='4' and pi.pur_type='BPI' and pi.client_unit_id = '" + unitid_mst + "') a group by (a.PI_NO,a.pi_date,a.type,a.icode,a.client_id,a.client_unit_id)) pc on " +
                                    "pc.icode = it.icode where (it.icode || pc.type || pc.PI_NO || to_char(it.vch_date, 'yyyymmdd') || it.type) in ('" + URL + "')";

                                    dt = sgen.getdata(userCode, mq);
                                    if (dt.Rows.Count > 0)
                                    {
                                        if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt1.Rows.RemoveAt(0); }
                                        for (int i = 0; i < dt.Rows.Count; i++)
                                        {
                                            DataRow dr = model[0].dt1.NewRow();
                                            dr["Item"] = dt.Rows[i]["fstr"].ToString();
                                            dr["SNo"] = i + 1;
                                            dr["Icode"] = dt.Rows[i]["icode"].ToString();
                                            dr["IName"] = dt.Rows[i]["iname"].ToString();
                                            dr["PARTNO"] = dt.Rows[i]["partno"].ToString();
                                            dr["Bal_Qty"] = dt.Rows[i]["Bal_qty"].ToString();
                                            dr["PI_NO"] = dt.Rows[i]["PI_NO"].ToString();
                                            dr["PI_DATE"] = dt.Rows[i]["pi_date"].ToString();
                                            dr["CLOSE_QTY"] = "";
                                            dr["Remark"] = "-";
                                            model[0].dt1.Rows.Add(dr);
                                        }
                                        model[0].dt1.AcceptChanges();
                                    }
                                    break;
                                case "21009.7":   //CLOSE QT
                                    mq = "select distinct (it.icode || pc.type || pc.qt_NO || to_char(it.vch_date, 'yyyymmdd') || it.type) fstr,it.icode as icode,pc.qt_NO,pc.qt_date,it.iname as iname,it.cpartno partno" +
                                      ",pc.type,pc.qt_qty,pc.bal_qty as bal_qty from item it inner join (select a.qt_NO,a.qt_date,a.type,a.icode,a.client_id,a.client_unit_id,max(a.qt_qty) qt_qty, sum(a.inv_qty) as inv_qty" +
                                      ",(max(a.qt_qty) - nvl(sum(a.inv_qty), '0')) as bal_qty from(select qt.vch_num as qt_NO,to_char(qt.vch_date, '" + sgen.Getsqldateformat() + "') qt_date,qt.type,qt.icode,qt.client_id,qt.client_unit_id" +
                                      ",qt.ORDQTY as qt_qty,nvl(iv.ORDQTY,'0') as inv_qty from itransactionc qt left join itransactionc iv on iv.pi_no = qt.vch_num and substr(iv.type,1,1)='4' and iv.gdisc = '77' " +
                                      "and iv.icode=qt.icode and iv.pur_type='BPI'and iv.client_unit_id = qt.client_unit_id where substr(qt.type,1,1)='4' and qt.pur_type='QTN' and qt.client_unit_id = '" + unitid_mst + "' " +
                                      "union all select qt.vch_num as qt_NO,to_char(qt.vch_date, '" + sgen.Getsqldateformat() + "') qt_date,qt.type,qt.icode,qt.client_id,qt.client_unit_id,qt.ORDQTY as qt_qty,nvl(iv.col11, '0') as close_qty " +
                                      "from itransactionc qt left join enx_tab iv on iv.col12 = qt.vch_num and iv.type = 'CPQ' and iv.col7=qt.icode and iv.client_unit_id = qt.client_unit_id where substr(qt.type,1,1)='4' " +
                                      "and qt.pur_type='QTN' and qt.client_unit_id = '" + unitid_mst + "') a group by(a.qt_NO,a.qt_date,a.type,a.icode,a.client_id,a.client_unit_id)) pc on pc.icode = it.icode " +
                                      " where (it.icode || pc.type || pc.qt_NO || to_char(it.vch_date, 'yyyymmdd') || it.type) in ('" + URL + "')";
                                    dt = sgen.getdata(userCode, mq);
                                    if (dt.Rows.Count > 0)
                                    {
                                        if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt1.Rows.RemoveAt(0); }
                                        for (int i = 0; i < dt.Rows.Count; i++)
                                        {
                                            DataRow dr = model[0].dt1.NewRow();
                                            dr["Item"] = dt.Rows[i]["fstr"].ToString();
                                            dr["SNo"] = i + 1;
                                            dr["Icode"] = dt.Rows[i]["icode"].ToString();
                                            dr["IName"] = dt.Rows[i]["iname"].ToString();
                                            dr["PARTNO"] = dt.Rows[i]["partno"].ToString();
                                            dr["Bal_Qty"] = dt.Rows[i]["Bal_qty"].ToString();
                                            dr["QUOT_NO"] = dt.Rows[i]["qt_NO"].ToString();
                                            dr["QUOT_DATE"] = dt.Rows[i]["qt_date"].ToString();
                                            dr["CLOSE_QTY"] = "";
                                            dr["Remark"] = "-";
                                            model[0].dt1.Rows.Add(dr);
                                        }
                                        model[0].dt1.AcceptChanges();
                                    }
                                    break;
                            }
                            break;
                    }
                    break;
                #endregion
                #region pdi
                case "pdi":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            //mq = "select distinct '-' as item,'0' as SNo,pd.vch_num as doc_no,ip.qtyin as rejected,ip.rejname||'('|| ip.rejcode ||')' as rej ,to_char(pd.vch_date, '" + sgen.Getsqldateformat() + "') as doc_date,pd.icode,pd.iname," +
                            //    "pd.deptname as Sub_group,pd.deptno,pd.type,pd.client_id,pd.client_unit_id,pd.ent_by,pd.ent_date,pd.rec_id,pd.qtystk as Qty_in_stock,pd.qtyout as Qty_PDI,pd.qtyin as OK_PDI,pd.aname as operator_name,dpt.master_name as department," +
                            //    "dsg.master_id as desig from itransaction pd left join master_setting dpt on dpt.master_id = pd.deptno and dpt.type = 'MDP' " +
                            //    "and find_in_set(dpt.client_id, pd.client_id)= 1 and find_in_set(dpt.client_unit_id, pd.client_unit_id)= 1 " +
                            //    "left join master_setting dsg on dsg.master_id = pd.desig and dsg.type = 'MDG' and find_in_set(dsg.client_id, pd.client_id)= 1 and " +
                            //    "find_in_set(dsg.client_unit_id, pd.client_unit_id)= 1  inner join iprod ip on ip.vch_num = pd.vch_num and ip.type = '10R' and " +
                            //    "ip.client_id = pd.client_id and ip.client_unit_id = pd.client_unit_id where" +
                            //    "(pd.client_id || pd.client_unit_id || pd.vch_num || to_char(pd.vch_date, 'yyyymmdd') ||pd.type) = '" + URL + "'";
                            mq = "select distinct '-' as item,'0' as SNo,pd.type,pd.client_id,pd.client_unit_id,pd.ent_by,pd.ent_date,pd.rec_id,pd.vch_num as doc_no,ip.qtyin as rejected," +
                                "ip.rejname||'('|| ip.rejcode ||')' as rej," +
                                "pd.vch_num as doc_no,to_char(pd.vch_date,'" + sgen.Getsqldateformat() + "') as doc_date,pd.icode,pd.iname,pd.deptname as Sub_group," +
                                "pd.qtystk as Qty_in_stock,pd.qtychl as Qty_PDI,pd.qtyin as OK_PDI,pd.aname as operator_name,ms.master_id as opr_id,dep.master_name as dep_name," +
                                "des.master_name as designation from itransaction pd " +
                                "inner join master_setting ms on ms.master_id = pd.acode and ms.type = 'OPR' and find_in_set(ms.client_unit_id, pd.client_unit_id)= '1' " +
                                "inner join master_setting dep on dep.master_id = ms.classid and dep.type = 'MDP' and find_in_set(dep.client_unit_id, ms.client_unit_id)= 1 " +
                                "inner join master_setting des on des.master_id = ms.sectionid and des.type = 'MDG' and find_in_set(des.client_unit_id, ms.client_unit_id)= 1 " +
                                "inner join iprod ip on ip.vch_num = pd.vch_num and ip.vch_date =pd.vch_date and ip.icode =pd.icode and ip.type = '10R' and " +
                                "ip.client_unit_id = pd.client_unit_id where (pd.client_id || pd.client_unit_id || pd.vch_num || to_char(pd.vch_date, 'yyyymmdd') || pd.type) = '" + URL + "19'";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                //#region getdept
                                //mod1 = cmd_Fun.dept(userCode, clientid_mst, unitid_mst);
                                //TempData[MyGuid + "_TList1"] = mod1;
                                //#endregion
                                //#region getdesig
                                //mod2 = cmd_Fun.desig(userCode, clientid_mst, unitid_mst);
                                //TempData[MyGuid + "_TList2"] = mod2;
                                //#endregion
                                sgen.SetSession(MyGuid, "EDMODE", "Y");
                                model = getedit(model, dt, URL);
                                model[0].Col14 = tm.Col14;
                                model[0].Col15 = tm.Col15;
                                model[0].Col9 = tm.Col9;
                                model[0].Col12 = dt.Rows[0]["type"].ToString();
                                model[0].Col16 = dt.Rows[0]["doc_no"].ToString();
                                model[0].Col17 = dt.Rows[0]["doc_date"].ToString();
                                model[0].Col18 = dt.Rows[0]["operator_name"].ToString();
                                model[0].Col19 = dt.Rows[0]["dep_name"].ToString();
                                model[0].Col20 = dt.Rows[0]["designation"].ToString();
                                model[0].Col21 = dt.Rows[0]["opr_id"].ToString();
                                model[0].Col24 = "(client_id||client_unit_id||vch_num|| to_char(vch_date, 'yyyymmdd')||type) = '" + URL + "'";
                                //model[0].TList1 = mod1;
                                //model[0].TList2 = mod2;
                                //String[] L1 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["deptno"].ToString()).Distinct()).Split(',');
                                //String[] L2 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["desig"].ToString()).Distinct()).Split(',');
                                //model[0].SelectedItems1 = L1;
                                //model[0].SelectedItems2 = L2;
                                DataTable dt2 = sgen.getdata(userCode, mq);
                                Pivot pvt = new Pivot(dt2, MyGuid);
                                DataTable dataTable2 = pvt.PivotData("rejected", AggregateFunction.Max, new string[]
                                { "Item","SNo", "icode", "iname", "Sub_group","Qty_in_stock","Qty_PDI","OK_PDI" }, new string[] { "rej" });
                                model[0].dt1 = dataTable2;
                                //Session["PDI_DT"] = dataTable2;
                                //model[0].dt1 = model[0].dt1.Clone();
                                //for (int i = 0; i < dt.Rows.Count; i++)
                                //{
                                //    DataRow dr = model[0].dt1.NewRow();
                                //    dr["item"] = dt.Rows[i]["fstr"].ToString();
                                //    dr["SNo"] = i + 1;
                                //    dr["Icode"] = dt.Rows[i]["icode"].ToString();
                                //    dr["IName"] = dt.Rows[i]["iname"].ToString();
                                //    dr["Sub_group"] = dt.Rows[i]["subgrp"].ToString();
                                //    dr["Qty_in_stock"] = dt.Rows[i]["Qty_Stock"].ToString();
                                //    dr["Qty_PDI"] = dt.Rows[i]["PDI_Qty"].ToString();
                                //    dr["OK_PDI"] = dt.Rows[i]["OK_Qty"].ToString();
                                //    model[0].dt1.Rows.Add(dr);
                                //}
                                model[0].dt1.AcceptChanges();
                                mq1 = "select (i.client_unit_id||i.icode||i.loc) fstr,i.icode,it.iname,it.cpartno,um.master_name uom,i.qtyin,i.qtystk,i.qtyout,i.iremark," +
                                    "i.loc,location_name(i.client_id||i.client_unit_id||i.loc) locname from btchtrans i " +
                                    "inner join item it on it.icode=i.icode and it.type='IT' and find_in_set(i.client_unit_id,it.client_unit_id)=1 " +
                                    "left join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
                               "where (i.client_id||i.client_unit_id||i.vch_num|| to_char(i.vch_date, 'yyyymmdd')||i.type)='" + URL + "19'";
                                dt = sgen.getdata(userCode, mq1);
                                if (dt.Rows.Count > 0)
                                {
                                    model[0].dt2 = model[0].dt2.Clone();
                                    for (int i = 0; i < dt.Rows.Count; i++)
                                    {
                                        DataRow dr = model[0].dt2.NewRow();
                                        dr["sno"] = dt.Rows[i]["fstr"].ToString();
                                        dr["IName"] = dt.Rows[i]["iname"].ToString();
                                        dr["Icode"] = dt.Rows[i]["icode"].ToString();
                                        dr["UOM"] = "-";/*dt.Rows[i]["uom"].ToString();*/
                                        dr["partno"] = "-";/*dt.Rows[i]["cpartno"].ToString();*/
                                        //dr["Qty_in_stock"] = dt.Rows[i]["qtystk"].ToString();
                                        dr["Qty_Out"] = dt.Rows[i]["qtyin"].ToString();
                                        dr["Remark"] = dt.Rows[i]["iremark"].ToString();
                                        dr["Loc"] = dt.Rows[i]["locname"].ToString();
                                        dr["LocCode"] = dt.Rows[i]["loc"].ToString();
                                        model[0].dt2.Rows.Add(dr);
                                    }
                                }
                            }
                            break;
                        case "OPRNAME":
                            mq = "select ms.master_name as opr_name,ms.master_id as opr_id,dep.master_name as dep_name,dep.master_id as dep_id" +
                                ",des.master_name as desig from master_setting ms left join master_setting dep on dep.master_id = ms.classid and " +
                                "dep.type = 'MDP' and find_in_set(dep.client_unit_id, ms.client_unit_id)= 1" +
                                " left join master_setting des on des.master_id = ms.sectionid and des.type = 'MDG' and " +
                                "find_in_set(des.client_unit_id, ms.client_unit_id)= 1 " +
                                "where (ms.client_id || ms.client_unit_id || ms.master_id || to_char(ms.vch_date, 'yyyymmdd') || ms.type) = '" + URL + "' ";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                model[0].Col18 = dt.Rows[0]["opr_name"].ToString();
                                model[0].Col21 = dt.Rows[0]["opr_id"].ToString();
                                model[0].Col19 = dt.Rows[0]["dep_name"].ToString();
                                model[0].Col20 = dt.Rows[0]["opr_name"].ToString();
                            }
                            break;
                        case "ITEM":
                            DataTable dataTable = new DataTable();
                            try
                            {
                                //mq = "select '-' fstr,it.iname,it.icode,sg.iname as subgroup,nvl(s.closing,0) as qty_in_stock" +
                                //    " from item it inner join item sg on sg.icode=substr(it.icode,1,5) and sg.type = 'SG' " +
                                //    "and sg.client_id = it.client_id and sg.client_unit_id = it.client_unit_id left join(select t.client_unit_id," +
                                //    " t.icode, sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout, 0)) as Issued,sum(nvl(t.qtyin, 0))" +
                                //    " - sum(nvl(t.qtyout, 0)) as closing from itransaction t where trim(t.store) = 'Y' group by t.icode," +
                                //    "t.client_unit_id ) s on it.icode = s.icode and it.client_unit_id = s.client_unit_id where " +
                                //    "(it.client_id || it.client_unit_id || it.icode || to_char(it.vch_date, 'yyyymmdd') || it.type)" +
                                //    " in ('" + URL + "') ";
                                mq = "select i.icode as fstr, i.icode, i.iname,sg.iname as SubG, um.master_name uom, sum(nvl(a.qtyin, 0)) - sum(nvl(a.qtyout, 0)) qtystk," +
                                "nvl(a.fstg, '001') fstg,i.client_id, i.client_unit_id from item i inner join(select icode, (case when type= '100' then 0 else qtyin end)  qtyin," +
                                "qtyout qtyout, stage fstg, type, client_id, client_unit_id,vch_num,vch_date from iprod where(type like '3%' or type = '100' or type = '10P') union select acode icode," +
                                " to_number(max(qtyin)) qtyin, 0 qtyout, stage1 fstg, type, client_id, client_unit_id, vch_num, vch_date from iprod where type = '100' group by acode, stage1," +
                                "type, client_id, client_unit_id ,vch_num,vch_date union select acode icode, to_number(max(qtyrej)) qtyin, 0 qtyout, '101' fstg, type, client_id," +
                                "client_unit_id,vch_num,vch_date from iprod where type = '100' group by acode, type, client_id, client_unit_id,vch_num,vch_date union select icode," +
                                "sum(qtyin) qtyin, 0 qtyout, stage1 fstg, type, client_id, client_unit_id, vch_num, vch_date from iprod where type = '10R' group by icode, stage1, " +
                                "type, client_id, client_unit_id,vch_num,vch_date union select icode, 0 qtyin, sum(qtyout) qtyout, stage fstg, type, client_id, client_unit_id, vch_num, vch_date" +
                                " from iprod where type = '10R' group by icode, stage, type, client_id, client_unit_id,vch_num,vch_date union select icode, sum(qtyout) qtyin, 0 qtyout, stage1 fstg," +
                                "type, client_id, client_unit_id, vch_num, vch_date from iprod where type = '10R' group by icode, stage1, type, client_id, client_unit_id,vch_num,vch_date) a" +
                                "  on a.icode = i.icode and a.client_unit_id = i.client_unit_id " +
                                "inner join master_setting um on um.master_id = i.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, i.client_unit_id)= 1 " +
                                "inner join item sg on sg.icode = substr(i.icode, 1, 5) and sg.type = 'SG' and find_in_set(sg.client_unit_id,'" + unitid_mst + "')=1 " +
                                "where i.type = 'IT' and find_in_set(i.client_unit_id,'" + unitid_mst + "')=1 and fstg = '100' and i.pdi = 'Y' and i.icode in ('" + URL + "') " +
                                "group by i.icode,i.iname,um.master_name,nvl(a.fstg, '001'),i.type,i.client_id,i.client_unit_id ,sg.iname having(sum(nvl(a.qtyin, 0)) -sum(nvl(a.qtyout, 0)))<> 0";
                                dt = sgen.getdata(userCode, mq);
                                if (dt.Rows.Count > 0)
                                {
                                    if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt1.Rows.RemoveAt(0); }
                                    for (int i = 0; i < dt.Rows.Count; i++)
                                    {
                                        DataRow dr = model[0].dt1.NewRow();
                                        dr["Item"] = dt.Rows[i]["fstr"].ToString();
                                        dr["SNo"] = i + 1;
                                        dr["Icode"] = dt.Rows[i]["icode"].ToString();
                                        dr["IName"] = dt.Rows[i]["iname"].ToString();
                                        dr["Sub_group"] = dt.Rows[i]["SubG"].ToString();
                                        dr["qty_in_stock"] = dt.Rows[i]["qtystk"].ToString();
                                        model[0].dt1.Rows.Add(dr);
                                    }
                                    model[0].dt1.AcceptChanges();
                                }
                            }
                            catch (Exception err) { }
                            break;
                    }
                    break;
                #endregion
                #region pdin
                case "pdin":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            //mq = "select distinct '-' as item,'0' as SNo,pd.vch_num as doc_no,ip.qtyin as rejected,ip.rejname||'('|| ip.rejcode ||')' as rej ,to_char(pd.vch_date, '" + sgen.Getsqldateformat() + "') as doc_date,pd.icode,pd.iname," +
                            //    "pd.deptname as Sub_group,pd.deptno,pd.type,pd.client_id,pd.client_unit_id,pd.ent_by,pd.ent_date,pd.rec_id,pd.qtystk as Qty_in_stock,pd.qtyout as Qty_PDI,pd.qtyin as OK_PDI,pd.aname as operator_name,dpt.master_name as department," +
                            //    "dsg.master_id as desig from itransaction pd left join master_setting dpt on dpt.master_id = pd.deptno and dpt.type = 'MDP' " +
                            //    "and find_in_set(dpt.client_id, pd.client_id)= 1 and find_in_set(dpt.client_unit_id, pd.client_unit_id)= 1 " +
                            //    "left join master_setting dsg on dsg.master_id = pd.desig and dsg.type = 'MDG' and find_in_set(dsg.client_id, pd.client_id)= 1 and " +
                            //    "find_in_set(dsg.client_unit_id, pd.client_unit_id)= 1  inner join iprod ip on ip.vch_num = pd.vch_num and ip.type = '10R' and " +
                            //    "ip.client_id = pd.client_id and ip.client_unit_id = pd.client_unit_id where" +
                            //    "(pd.client_id || pd.client_unit_id || pd.vch_num || to_char(pd.vch_date, 'yyyymmdd') ||pd.type) = '" + URL + "'";
                            mq = "select distinct '-' as item,'0' as SNo,pd.type,pd.client_id,pd.client_unit_id,pd.ent_by,pd.ent_date,pd.rec_id,pd.vch_num as doc_no,ip.qtyin as rejected," +
                                "ip.rejname||'('|| ip.rejcode ||')' as rej," +
                                "pd.vch_num as doc_no,to_char(pd.vch_date,'" + sgen.Getsqldateformat() + "') as doc_date,pd.icode,pd.iname,pd.deptname as Sub_group," +
                                "pd.qtystk as Qty_in_stock,pd.qtychl as Qty_PDI,pd.qtyin as OK_PDI,pd.aname as operator_name,ms.master_id as opr_id,dep.master_name as dep_name," +
                                "des.master_name as designation from itransaction pd " +
                                "inner join master_setting ms on ms.master_id = pd.acode and ms.type = 'OPR' and find_in_set(ms.client_unit_id, pd.client_unit_id)= '1' " +
                                "inner join master_setting dep on dep.master_id = ms.classid and dep.type = 'MDP' and find_in_set(dep.client_unit_id, ms.client_unit_id)= 1 " +
                                "inner join master_setting des on des.master_id = ms.sectionid and des.type = 'MDG' and find_in_set(des.client_unit_id, ms.client_unit_id)= 1 " +
                                "inner join iprod ip on ip.vch_num = pd.vch_num and ip.vch_date =pd.vch_date and ip.icode =pd.icode and ip.type = '10R' and " +
                                "ip.client_unit_id = pd.client_unit_id where (pd.client_id || pd.client_unit_id || pd.vch_num || to_char(pd.vch_date, 'yyyymmdd') || pd.type) = '" + URL + "19'";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                //#region getdept
                                //mod1 = cmd_Fun.dept(userCode, clientid_mst, unitid_mst);
                                //TempData[MyGuid + "_TList1"] = mod1;
                                //#endregion
                                //#region getdesig
                                //mod2 = cmd_Fun.desig(userCode, clientid_mst, unitid_mst);
                                //TempData[MyGuid + "_TList2"] = mod2;
                                //#endregion
                                sgen.SetSession(MyGuid, "EDMODE", "Y");
                                model = getedit(model, dt, URL);
                                model[0].Col14 = tm.Col14;
                                model[0].Col15 = tm.Col15;
                                model[0].Col9 = tm.Col9;
                                model[0].Col12 = dt.Rows[0]["type"].ToString();
                                model[0].Col16 = dt.Rows[0]["doc_no"].ToString();
                                model[0].Col17 = dt.Rows[0]["doc_date"].ToString();
                                model[0].Col18 = dt.Rows[0]["operator_name"].ToString();
                                model[0].Col19 = dt.Rows[0]["dep_name"].ToString();
                                model[0].Col20 = dt.Rows[0]["designation"].ToString();
                                model[0].Col21 = dt.Rows[0]["opr_id"].ToString();
                                model[0].Col24 = "(client_id||client_unit_id||vch_num|| to_char(vch_date, 'yyyymmdd')||type) = '" + URL + "'";
                                //model[0].TList1 = mod1;
                                //model[0].TList2 = mod2;
                                //String[] L1 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["deptno"].ToString()).Distinct()).Split(',');
                                //String[] L2 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["desig"].ToString()).Distinct()).Split(',');
                                //model[0].SelectedItems1 = L1;
                                //model[0].SelectedItems2 = L2;
                                DataTable dt2 = sgen.getdata(userCode, mq);
                                Pivot pvt = new Pivot(dt2, MyGuid);
                                DataTable dataTable2 = pvt.PivotData("rejected", AggregateFunction.Max, new string[]
                                { "Item","SNo", "icode", "iname", "Sub_group","Qty_in_stock","Qty_PDI","OK_PDI" }, new string[] { "rej" });
                                model[0].dt1 = dataTable2;
                                //Session["PDI_DT"] = dataTable2;
                                //model[0].dt1 = model[0].dt1.Clone();
                                //for (int i = 0; i < dt.Rows.Count; i++)
                                //{
                                //    DataRow dr = model[0].dt1.NewRow();
                                //    dr["item"] = dt.Rows[i]["fstr"].ToString();
                                //    dr["SNo"] = i + 1;
                                //    dr["Icode"] = dt.Rows[i]["icode"].ToString();
                                //    dr["IName"] = dt.Rows[i]["iname"].ToString();
                                //    dr["Sub_group"] = dt.Rows[i]["subgrp"].ToString();
                                //    dr["Qty_in_stock"] = dt.Rows[i]["Qty_Stock"].ToString();
                                //    dr["Qty_PDI"] = dt.Rows[i]["PDI_Qty"].ToString();
                                //    dr["OK_PDI"] = dt.Rows[i]["OK_Qty"].ToString();
                                //    model[0].dt1.Rows.Add(dr);
                                //}
                                model[0].dt1.AcceptChanges();
                                mq1 = "select (i.client_unit_id||i.icode||i.loc) fstr,i.icode,it.iname,it.cpartno,um.master_name uom,i.qtyin,i.qtystk,i.qtyout,i.iremark," +
                                    "i.loc,location_name(i.client_id||i.client_unit_id||i.loc) locname from btchtrans i " +
                                    "inner join item it on it.icode=i.icode and it.type='IT' and find_in_set(i.client_unit_id,it.client_unit_id)=1 " +
                                    "left join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
                               "where (i.client_id||i.client_unit_id||i.vch_num|| to_char(i.vch_date, 'yyyymmdd')||i.type)='" + URL + "19'";
                                dt = sgen.getdata(userCode, mq1);
                                if (dt.Rows.Count > 0)
                                {
                                    model[0].dt2 = model[0].dt2.Clone();
                                    for (int i = 0; i < dt.Rows.Count; i++)
                                    {
                                        DataRow dr = model[0].dt2.NewRow();
                                        dr["sno"] = dt.Rows[i]["fstr"].ToString();
                                        dr["IName"] = dt.Rows[i]["iname"].ToString();
                                        dr["Icode"] = dt.Rows[i]["icode"].ToString();
                                        dr["UOM"] = "-";/*dt.Rows[i]["uom"].ToString();*/
                                        dr["partno"] = "-";/*dt.Rows[i]["cpartno"].ToString();*/
                                        //dr["Qty_in_stock"] = dt.Rows[i]["qtystk"].ToString();
                                        dr["Qty_Out"] = dt.Rows[i]["qtyin"].ToString();
                                        dr["Remark"] = dt.Rows[i]["iremark"].ToString();
                                        dr["Loc"] = dt.Rows[i]["locname"].ToString();
                                        dr["LocCode"] = dt.Rows[i]["loc"].ToString();
                                        model[0].dt2.Rows.Add(dr);
                                    }
                                }
                            }
                            break;
                        case "OPRNAME":
                            mq = "select ms.master_name as opr_name,ms.master_id as opr_id,dep.master_name as dep_name,dep.master_id as dep_id" +
                                ",des.master_name as desig from master_setting ms left join master_setting dep on dep.master_id = ms.classid and " +
                                "dep.type = 'MDP' and find_in_set(dep.client_unit_id, ms.client_unit_id)= 1" +
                                " left join master_setting des on des.master_id = ms.sectionid and des.type = 'MDG' and " +
                                "find_in_set(des.client_unit_id, ms.client_unit_id)= 1 " +
                                "where (ms.client_id || ms.client_unit_id || ms.master_id || to_char(ms.vch_date, 'yyyymmdd') || ms.type) = '" + URL + "' ";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                model[0].Col18 = dt.Rows[0]["opr_name"].ToString();
                                model[0].Col21 = dt.Rows[0]["opr_id"].ToString();
                                model[0].Col19 = dt.Rows[0]["dep_name"].ToString();
                                model[0].Col20 = dt.Rows[0]["desig"].ToString();
                            }
                            break;
                        case "ITEM":
                            DataTable dataTable = new DataTable();
                            try
                            {
                                //mq = "select '-' fstr,it.iname,it.icode,sg.iname as subgroup,nvl(s.closing,0) as qty_in_stock" +
                                //    " from item it inner join item sg on sg.icode=substr(it.icode,1,5) and sg.type = 'SG' " +
                                //    "and sg.client_id = it.client_id and sg.client_unit_id = it.client_unit_id left join(select t.client_unit_id," +
                                //    " t.icode, sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout, 0)) as Issued,sum(nvl(t.qtyin, 0))" +
                                //    " - sum(nvl(t.qtyout, 0)) as closing from itransaction t where trim(t.store) = 'Y' group by t.icode," +
                                //    "t.client_unit_id ) s on it.icode = s.icode and it.client_unit_id = s.client_unit_id where " +
                                //    "(it.client_id || it.client_unit_id || it.icode || to_char(it.vch_date, 'yyyymmdd') || it.type)" +
                                //    " in ('" + URL + "') ";
                                //mq = "select i.icode as fstr, i.icode, i.iname,sg.iname as SubG, um.master_name uom, sum(nvl(a.qtyin, 0)) - sum(nvl(a.qtyout, 0)) qtystk," +
                                //"nvl(a.fstg, '001') fstg,i.client_id, i.client_unit_id from item i inner join(select icode, (case when type= '100' then 0 else qtyin end)  qtyin," +
                                //"qtyout qtyout, stage fstg, type, client_id, client_unit_id,vch_num,vch_date from iprod where(type like '3%' or type = '100' or type = '10P') union select acode icode," +
                                //" to_number(max(qtyin)) qtyin, 0 qtyout, stage1 fstg, type, client_id, client_unit_id, vch_num, vch_date from iprod where type = '100' group by acode, stage1," +
                                //"type, client_id, client_unit_id ,vch_num,vch_date union select acode icode, to_number(max(qtyrej)) qtyin, 0 qtyout, '101' fstg, type, client_id," +
                                //"client_unit_id,vch_num,vch_date from iprod where type = '100' group by acode, type, client_id, client_unit_id,vch_num,vch_date union select icode," +
                                //"sum(qtyin) qtyin, 0 qtyout, stage1 fstg, type, client_id, client_unit_id, vch_num, vch_date from iprod where type = '10R' group by icode, stage1, " +
                                //"type, client_id, client_unit_id,vch_num,vch_date union select icode, 0 qtyin, sum(qtyout) qtyout, stage fstg, type, client_id, client_unit_id, vch_num, vch_date" +
                                //" from iprod where type = '10R' group by icode, stage, type, client_id, client_unit_id,vch_num,vch_date union select icode, sum(qtyout) qtyin, 0 qtyout, stage1 fstg," +
                                //"type, client_id, client_unit_id, vch_num, vch_date from iprod where type = '10R' group by icode, stage1, type, client_id, client_unit_id,vch_num,vch_date) a" +
                                //"  on a.icode = i.icode and a.client_unit_id = i.client_unit_id " +
                                //"inner join master_setting um on um.master_id = i.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, i.client_unit_id)= 1 " +
                                //"inner join item sg on sg.icode = substr(i.icode, 1, 5) and sg.type = 'SG' and find_in_set(sg.client_unit_id,'" + unitid_mst + "')=1 " +
                                //"where i.type = 'IT' and find_in_set(i.client_unit_id,'" + unitid_mst + "')=1 and fstg = '100' and i.pdi = 'Y' and i.icode in ('" + URL + "') " +
                                //"group by i.icode,i.iname,um.master_name,nvl(a.fstg, '001'),i.type,i.client_id,i.client_unit_id ,sg.iname having(sum(nvl(a.qtyin, 0)) -sum(nvl(a.qtyout, 0)))<> 0";

                                mq = "select i.icode as fstr, i.icode, i.iname,sg.iname SubG,i.cpartno partno,um.master_name uom, sum(nvl(a.qtyin, 0)) - sum(nvl(a.qtyout, 0)) qtystk," +
                                 "nvl(a.fstg, '001') fstg,i.client_id, i.client_unit_id from item i " +
                                 "inner join(select icode, (case when type= '100' then 0 else qtyin end)  qtyin,qtyout qtyout, stage fstg, type, client_id, client_unit_id,vch_num," +
                                 "vch_date from iprod where(type like '3%' or type = '100' or type = '10P') " +
                                 "union " +
                                 "select acode icode, to_number(max(qtyin)) qtyin, 0 qtyout, stage1 fstg, type, client_id, client_unit_id, vch_num, vch_date from iprod where " +
                                 "type = '100' group by acode, stage1,type, client_id, client_unit_id ,vch_num,vch_date " +
                                 "union " +
                                 "select acode icode, to_number(max(qtyrej)) qtyin, 0 qtyout, '101' fstg, type, client_id,client_unit_id,vch_num,vch_date from iprod where " +
                                 "type = '100' group by acode, type, client_id, client_unit_id,vch_num,vch_date " +
                                 "union " +
                                 "select icode, sum(qtyin) qtyin, 0 qtyout, stage1 fstg, type, client_id, client_unit_id, vch_num, vch_date from iprod where type = '10R' " +
                                 "group by icode, stage1, type, client_id, client_unit_id,vch_num,vch_date " +
                                 "union " +
                                 "select icode, 0 qtyin, sum(qtyout) qtyout, stage fstg, type, client_id, client_unit_id, vch_num, vch_date from iprod where type = '10R' " +
                                 "group by icode, stage, type, client_id, client_unit_id,vch_num,vch_date " +
                                 "union " +
                                 "select icode, sum(qtyout) qtyin, 0 qtyout, stage1 fstg, type, client_id, client_unit_id, vch_num, vch_date from iprod where type = '10R' " +
                                 "group by icode, stage1, type, client_id, client_unit_id,vch_num,vch_date " +
                                 "union " +
                                 "select icode, sum(qtyin) qtyin, 0 qtyout, stage1 fstg, type, client_id, client_unit_id, vch_num, vch_date from iprod where type = '10W' " +
                                 "group by icode, stage1, type, client_id, client_unit_id,vch_num,vch_date) a on a.icode = i.icode and find_in_set(a.client_unit_id, i.client_unit_id)= 1 " +
                                 "inner join master_setting um on um.master_id = i.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, i.client_unit_id)= 1 " +
                                 "inner join item sg on sg.icode = substr(i.icode, 1, 5) and sg.type = 'SG' and sg.client_unit_id = '" + unitid_mst + "' " +
                                 "where i.type = 'IT' and substr(i.icode,1,1)= '9' and find_in_set(i.client_unit_id, '" + unitid_mst + "')= 1 and a.fstg = '" + model[0].SelectedItems1.FirstOrDefault() + "' and i.icode in ('" + URL + "') " +
                                 "group by i.icode,i.iname,i.cpartno,um.master_name,nvl(a.fstg, '001'),i.type,i.client_id,i.client_unit_id ,sg.iname having(sum(nvl(a.qtyin, 0)) -sum(nvl(a.qtyout, 0)))<> 0";

                                dt = sgen.getdata(userCode, mq);
                                if (dt.Rows.Count > 0)
                                {
                                    if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt1.Rows.RemoveAt(0); }
                                    for (int i = 0; i < dt.Rows.Count; i++)
                                    {
                                        DataRow dr = model[0].dt1.NewRow();
                                        dr["Item"] = dt.Rows[i]["fstr"].ToString();
                                        dr["SNo"] = i + 1;
                                        dr["Icode"] = dt.Rows[i]["icode"].ToString();
                                        dr["IName"] = dt.Rows[i]["iname"].ToString();
                                        dr["Sub_group"] = dt.Rows[i]["SubG"].ToString();
                                        dr["qty_in_stock"] = dt.Rows[i]["qtystk"].ToString();
                                        model[0].dt1.Rows.Add(dr);
                                    }
                                    model[0].dt1.AcceptChanges();
                                }
                            }
                            catch (Exception err) { }
                            break;
                    }
                    break;
                #endregion
                #region sms_mail_temp
                case "sms_mail_tmp":
                    switch (btnval.ToUpper())
                    {
                        case "VIEW":
                        case "EDIT":
                            mq = "select a.vch_num,a.rec_id, a.client_id,a.client_unit_id,a.ent_by," +
                                " to_char(convert_tz(a.ent_date, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') ent_date," +
                                "a.col1,a.col3,a.col2,a.col8,a.col7,a.col9,a.col10,a.col13,a.col5,a.col6" +
                                "  from enx_tab a where (a.client_id||a.client_unit_id|| a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.type||trim(a.col2)) = '" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "EDMODE", "Y");
                                model[0].Col1 = dtt.Rows[0]["client_id"].ToString();
                                model[0].Col2 = dtt.Rows[0]["client_unit_id"].ToString();
                                model[0].Col3 = dtt.Rows[0]["ent_by"].ToString();
                                model[0].Col4 = dtt.Rows[0]["ent_date"].ToString();
                                model[0].Col7 = dtt.Rows[0]["rec_id"].ToString();
                                model[0].Col8 = "client_id||client_unit_id||vch_num|| to_char(vch_date, 'yyyymmdd')|| type||trim(a.col2) = '" + URL + "'";
                                model[0].Col13 = "Update";
                                model[0].Col100 = "Update & New";
                                model[0].Col121 = "U";
                                model[0].Col122 = "<u>U</u>pdate";
                                model[0].Col123 = "Update & Ne<u>w</u>";
                                model[0].Col16 = dtt.Rows[0]["vch_num"].ToString();
                                model[0].Col18 = dtt.Rows[0]["col1"].ToString();
                                model[0].Col19 = dtt.Rows[0]["col3"].ToString();
                                model[0].Col17 = dtt.Rows[0]["col8"].ToString();
                                model[0].Col20 = dtt.Rows[0]["col7"].ToString();
                                model[0].Col21 = dtt.Rows[0]["col2"].ToString();
                                model[0].Col22 = dtt.Rows[0]["col13"].ToString();
                                model[0].Col23 = dtt.Rows[0]["col5"].ToString();
                                model[0].Col24 = dtt.Rows[0]["col6"].ToString();
                                model[0].Chk1 = dtt.Rows[0]["col9"].ToString() == "Y" ? true : false;
                                model[0].Chk2 = dtt.Rows[0]["col10"].ToString() == "Y" ? true : false;
                            }
                            break;
                            //case "NEW":
                            //    mq = "select * from (select '011' as master_id, 'GATE IN' as set_For from dual Union all select '012' " +
                            //         "master_id,'GATE OUT' as set_For from dual union all select '013' master_id,'MRN' as set_For from dual " +
                            //         "union all select '014' master_id,'INDENT' as set_For from dual UNION ALL select '015' master_id,'PUR ORDER' " +
                            //         "as set_For from dual) where master_id='" + URL + "'";
                            //    dt = sgen.getdata(userCode, mq);
                            //    if (dt.Rows.Count > 0)
                            //    {
                            //        sgen.SetSession(MyGuid, "EDMODE", "N");
                            //        ViewBag.vnew = "disabled='disabled'";
                            //        ViewBag.vedit = "disabled='disabled'";
                            //        ViewBag.vsave = "";
                            //        ViewBag.vsavenew = "";
                            //        ViewBag.scripCall = "enableForm();";
                            //        model[0].Col22 = dt.Rows[0]["master_id"].ToString();
                            //        model[0].Col21 = dt.Rows[0]["set_For"].ToString();
                            //        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12 + "' " + model[0].Col11.Trim() + "";
                            //        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                            //        model[0].Col16 = vch_num;
                            //        model[0].Col100 = "Save & New";
                            //    }
                            //break;
                    }
                    break;
                #endregion
                #region qctemp
                case "qctemp":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "VIEW":
                            mq = @"select to_char(convert_tz(vch_date, 'UTC', '" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') vch_date,vch_num,icode," +
                                "param,spec,min,max,tcond,tmeth,client_id,client_unit_id,ent_by,ent_date from inspvch " +
                                "where (client_id||client_unit_id||vch_num||to_char(vch_date,'yyyymmdd')||type)='" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "EDMODE", "Y");
                                model[0].Col1 = dtt.Rows[0]["client_id"].ToString();
                                model[0].Col2 = dtt.Rows[0]["client_unit_id"].ToString();
                                model[0].Col3 = dtt.Rows[0]["ent_by"].ToString();
                                model[0].Col4 = dtt.Rows[0]["ent_date"].ToString();
                                model[0].Col8 = "(client_id||client_unit_id||vch_num||to_char(vch_date,'yyyymmdd')||type) = '" + URL + "'";
                                model[0].Col9 = tm.Col9;
                                model[0].Col10 = tm.Col10;
                                model[0].Col11 = tm.Col11;
                                model[0].Col12 = tm.Col12;
                                model[0].Col13 = "Update";
                                model[0].Col100 = "Update & New";
                                model[0].Col14 = tm.Col14;
                                model[0].Col15 = tm.Col15;
                                model[0].Col16 = dtt.Rows[0]["vch_num"].ToString();
                                model[0].Col17 = dtt.Rows[0]["vch_date"].ToString();
                                mq = "select it.icode,it.iname,pum.master_name UOM from item it " +
                                    "inner join master_setting pum on pum.master_id=it.uom and pum.type='UMM' and find_in_set(pum.client_unit_id,'" + unitid_mst + "') =1 " +
                                    "where it.type='IT' and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 and it.icode='" + dtt.Rows[0]["icode"].ToString() + "'";
                                DataTable dtm = sgen.getdata(userCode, mq);
                                if (dtm.Rows.Count > 0)
                                {
                                    model[0].Col18 = dtm.Rows[0]["icode"].ToString();
                                    model[0].Col19 = dtm.Rows[0]["icode"].ToString();
                                    model[0].Col20 = dtm.Rows[0]["iname"].ToString();
                                    model[0].Col23 = dtm.Rows[0]["UOM"].ToString();
                                }
                                model[0].dt1 = new DataTable();
                                model[0].dt1 = ((DataTable)sgen.GetSession(MyGuid, "dtqctemp")).Clone();
                                for (int i = 0; i < dtt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["Sno"] = i + 1;
                                    dr["Parameter"] = dtt.Rows[i]["param"].ToString();
                                    dr["Specification"] = dtt.Rows[i]["spec"].ToString();
                                    dr["Min"] = dtt.Rows[i]["min"].ToString();//min
                                    dr["Max"] = dtt.Rows[i]["max"].ToString();//max
                                    dr["Test_cond"] = dtt.Rows[i]["tcond"].ToString();//test condition
                                    dr["Method_of_test"] = dtt.Rows[i]["tmeth"].ToString();//method of test
                                    model[0].dt1.Rows.Add(dr);
                                }
                                model[0].dt1.AcceptChanges();
                            }
                            break;
                        case "ITEM":
                            mq = "select it.icode,it.iname,pum.master_name UOM from item it " +
                                "inner join master_setting pum on pum.master_id=it.uom and pum.type='UMM' and find_in_set(pum.client_unit_id,'" + unitid_mst + "')=1 " +
                                " where (it.client_id||it.client_unit_id||it.icode) = '" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                model[0].Col18 = dtt.Rows[0]["icode"].ToString();
                                model[0].Col19 = dtt.Rows[0]["icode"].ToString();
                                model[0].Col20 = dtt.Rows[0]["iname"].ToString();
                                model[0].Col23 = dtt.Rows[0]["UOM"].ToString();
                            }
                            break;
                    }
                    break;
                #endregion
                #region qcinsp
                case "qcinsp":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "VIEW":
                            mq = @"select n.vch_num,to_char(n.vch_date, '" + sgen.Getsqldateformat() + "') vch_date,n.icode,i.iname,n.mrnno,n.mrntype," +
                               "to_char(n.mrn_date, '" + sgen.Getsqldateformat() + "') mrndate,n.chlno," +
                               "to_char(n.chldate, '" + sgen.Getsqldateformat() + "') chldate,n.invno,to_char(n.invdate, '" + sgen.Getsqldateformat() + "') invdate," +
                               "n.acode,c.c_name partyname,n.ag,n.rptno,to_char(n.rptdate, '" + sgen.Getsqldateformat() + "') rptdate,n.param,n.spec," +
                               "n.min,n.max,n.tcond,n.tmeth,n.res1,n.res2,n.res3,n.res4,n.res5,n.client_id,n.client_unit_id,n.ent_by,n.ent_date " +
                               "from inspvch n " +
                               "inner join item i on i.icode = n.icode and i.type = 'IT' and find_in_set(i.client_unit_id,n.client_unit_id)=1 " +
                               "inner join clients_mst c on c.vch_num = n.acode and c.type = 'BCD' and find_in_set(c.client_unit_id,n.client_unit_id)=1 " +
                               "where (n.client_id||n.client_unit_id||n.vch_num||to_char(n.vch_date,'yyyymmdd')||n.type)='" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "EDMODE", "Y");
                                model[0].Col1 = dtt.Rows[0]["client_id"].ToString();
                                model[0].Col2 = dtt.Rows[0]["client_unit_id"].ToString();
                                model[0].Col3 = dtt.Rows[0]["ent_by"].ToString();
                                model[0].Col4 = dtt.Rows[0]["ent_date"].ToString();
                                model[0].Col8 = "(client_id||client_unit_id||vch_num||to_char(vch_date,'yyyymmdd')||type) = '" + URL + "'";
                                model[0].Col9 = tm.Col9;
                                model[0].Col10 = tm.Col10;
                                model[0].Col11 = tm.Col11;
                                model[0].Col12 = tm.Col12;
                                model[0].Col13 = "Update";
                                model[0].Col100 = "Update & New";
                                model[0].Col14 = tm.Col14;
                                model[0].Col15 = tm.Col15;
                                model[0].Col16 = dtt.Rows[0]["vch_num"].ToString();
                                model[0].Col17 = dtt.Rows[0]["vch_date"].ToString();
                                model[0].Col18 = dtt.Rows[0]["icode"].ToString();
                                model[0].Col19 = dtt.Rows[0]["mrnno"].ToString();
                                model[0].Col20 = dtt.Rows[0]["mrntype"].ToString();
                                model[0].Col29 = dtt.Rows[0]["iname"].ToString();
                                model[0].Col21 = dtt.Rows[0]["mrnno"].ToString();
                                model[0].Col22 = dtt.Rows[0]["mrndate"].ToString();
                                model[0].Col23 = dtt.Rows[0]["chlno"].ToString();
                                model[0].Col24 = dtt.Rows[0]["chldate"].ToString();
                                model[0].Col25 = dtt.Rows[0]["invno"].ToString();
                                model[0].Col26 = dtt.Rows[0]["invdate"].ToString();
                                model[0].Col27 = dtt.Rows[0]["partyname"].ToString();
                                model[0].Col28 = dtt.Rows[0]["acode"].ToString();
                                model[0].Col31 = dtt.Rows[0]["ag"].ToString();
                                model[0].Col32 = dtt.Rows[0]["rptno"].ToString();
                                model[0].Col33 = dtt.Rows[0]["rptdate"].ToString();
                                model[0].Col34 = dtt.Rows[0]["remark"].ToString();
                                model[0].dt1 = new DataTable();
                                model[0].dt1 = (DataTable)sgen.GetSession(MyGuid, "dtqcinsp");
                                if (model[0].dt1.Rows[0]["parameter"].ToString().Trim().Equals("-")) model[0].dt1.Rows.RemoveAt(0);
                                for (int i = 0; i < dtt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["SNo"] = "";
                                    dr["parameter"] = dtt.Rows[i]["param"].ToString();
                                    dr["specification"] = dtt.Rows[i]["spec"].ToString();
                                    dr["min"] = dtt.Rows[i]["min"].ToString();
                                    dr["max"] = dtt.Rows[i]["max"].ToString();
                                    dr["test_cond"] = dtt.Rows[i]["tcond"].ToString();
                                    dr["method_of_test"] = dtt.Rows[i]["tmeth"].ToString();
                                    dr["res1"] = dtt.Rows[i]["res1"].ToString();
                                    dr["res2"] = dtt.Rows[i]["res2"].ToString();
                                    dr["res3"] = dtt.Rows[i]["res3"].ToString();
                                    dr["res4"] = dtt.Rows[i]["res4"].ToString();
                                    dr["res5"] = dtt.Rows[i]["res5"].ToString();
                                    model[0].dt1.Rows.Add(dr);
                                }
                                model[0].dt1.AcceptChanges();
                                DataTable dtf = new DataTable();
                                dtf = sgen.getdata(userCode, "select rec_id,file_name,file_path,col1 from file_tab where ref_code1='" +
                                    dt.Rows[0]["vch_num"].ToString() + "' and type='" + model[0].Col12 + "' and client_id='" + clientid_mst + "' " +
                                    "and client_unit_id='" + unitid_mst + "'");
                                List<Tmodelmain> ltmf = new List<Tmodelmain>();
                                foreach (DataRow drf in dtf.Rows)
                                {
                                    Tmodelmain tmf = new Tmodelmain();
                                    tmf.Col1 = drf["file_name"].ToString();
                                    tmf.Col2 = drf["col1"].ToString();
                                    tmf.Col3 = drf["rec_id"].ToString();
                                    tmf.Col4 = drf["file_path"].ToString();
                                    ltmf.Add(tmf);
                                }
                                model[0].LTM1 = ltmf;
                            }
                            break;
                        case "FDEL":
                            string fid = sgen.GetSession(MyGuid, "delid").ToString();
                            res = sgen.execute_cmd(userCode, "Delete from file_tab WHERE rec_id='" + fid + "' and type='IT' and client_id='"
              + clientid_mst + "' and client_unit_id='" + unitid_mst + "'");
                            sgen.SetSession(MyGuid, "delid", null);
                            if (res)
                            {
                                var LTM = model[0].LTM1;
                                for (int d = 0; d < LTM.Count; d++)
                                {
                                    var id = LTM[d].Col3;
                                    if (id == fid) { model[0].LTM1.RemoveAt(d); }
                                }
                            }
                            break;
                        case "ITEM":
                            //cmd = "select (n.client_id||n.client_unit_id||n.vch_num||to_char(n.vch_date,'yyyymmdd')||n.type) fstr,n.vch_num Docno," +
                            //   "to_char(n.vch_date,'" + sgen.Getsqldateformat() + "') Docdate,n.icode itemcode,i.iname ItemName,n.ewayno,to_char(n.ewaydate,'" + sgen.Getsqldateformat() + "') ewaydate," +
                            //   "n.chlno,to_char(n.chldate,'" + sgen.Getsqldateformat() + "') chldate,n.invno,to_char(n.invdate,'" + sgen.Getsqldateformat() + "') invdate," +
                            //   "v.param,v,spec,v.min,v.max,v.tcond,v.tmeth from itransaction n " +
                            //   "inner join item i on i.icode = n.icode and i.type = 'IT' and i.client_id = n.client_id and i.client_unit_id = n.client_unit_id " +
                            //   "inner join inspvch v on v.icode=n.icode and v.type='QCT' and v.client_id=n.client_id and v.client_unit_id=n.client_unit_id " +
                            //   "where (n.client_id||n.client_unit_id||n.vch_num||to_char(n.vch_date,'yyyymmdd')||n.type)='" + URL + "'";
                            //cmd = "select distinct (n.client_id||n.client_unit_id||n.vch_num||to_char(n.vch_date,'yyyymmdd')||n.type) fstr,n.vch_num Docno," +
                            //"to_char(n.vch_date,'" + sgen.Getsqldateformat() + "') Docdate,n.icode itemcode,i.iname ItemName from inspvch n " +
                            //"inner join item i on i.icode = n.icode and i.type = 'IT' and i.client_id = n.client_id and i.client_unit_id = n.client_unit_id " +
                            //"inner join "+
                            //"where n.type='QCT' and n.client_id='" + clientid_mst + "' and n.client_unit_id='" + unitid_mst + "'";
                            //mq = "select it.icode,it.iname,pum.master_name UOM from item it " +
                            //    "inner join master_setting pum on pum.master_id=it.uom and pum.type='UMM' and find_in_set(pum.client_id,'" + clientid_mst + "')=1 and find_in_set(pum.client_unit_id,'" + unitid_mst + "')=1 " +
                            //    " where (it.client_id||it.client_unit_id||it.icode) = '" + URL + "'";
                            //mq = "select (p.client_id||p.client_unit_id||p.icode||to_char(p.vch_date, 'yyyymmdd')||p.type||p.mrnno||p.type2) fstr," +
                            //    "p.vch_num,to_char(convert_tz(p.vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') vch_date," +
                            //    "p.type2,p.acode partycode,c.c_name as Party_Name,p.icode ItemCode,it.iname ItemName," +
                            //    "p.chlno,to_char(convert_tz(p.chldate,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') chldate," +
                            //    "p.invno,to_char(convert_tz(p.invdate,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') invdate," +
                            //    "p.ewayno,to_char(convert_tz(p.ewaydate,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') billdate " +
                            //    "from itransaction p " +
                            //    "inner join clients_mst c on p.acode = c.vch_num and c.type ='BCD' and substr(c.vch_num,0,2)='21' and c.client_id = p.client_id and c.client_unit_id = p.client_unit_id " +
                            //    "inner join item it on it.icode = p.icode and it.type = 'IT' and it.client_id = p.client_id and find_in_set(p.client_unit_id, it.client_unit_id)=1 and it.qa='Y' " +
                            //    "where (p.client_id||p.client_unit_id||p.icode||to_char(p.vch_date, 'yyyymmdd')||p.type||p.mrnno||p.type2)='" + URL + "'";
                            mq = "select n.icode,i.iname,n.vch_num mrnno,to_char(n.vch_date, '" + sgen.Getsqldateformat() + "') mrndate,n.type mrntype,m.master_name typename," +
                                "n.chlno,to_char(n.chldate, '" + sgen.Getsqldateformat() + "') chldate,n.invno,to_char(n.invdate, '" + sgen.Getsqldateformat() + "') invdate," +
                                "n.acode partycode,c.c_name partyname,v.param,v.spec,v.min,v.max,v.tcond,v.tmeth from itransaction n " +
                                "inner join item i on i.icode = n.icode and i.type = 'IT' and find_in_set(i.client_unit_id,n.client_unit_id)=1 " +
                                "inner join master_setting m on m.master_id = n.type and m.type = 'KMR' and find_in_set(m.client_unit_id, n.client_unit_id)= 1 " +
                                "inner join clients_mst c on c.vch_num = n.acode and c.type = 'BCD' and find_in_set(c.client_unit_id,n.client_unit_id)=1 " +
                                "inner join inspvch v on v.icode = n.icode and v.type = 'QCT' and v.client_unit_id = n.client_unit_id " +
                                "where (n.client_id||n.client_unit_id||n.vch_num||to_char(n.vch_date,'yyyymmdd')||n.type)='" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                model[0].Col18 = dtt.Rows[0]["icode"].ToString();
                                model[0].Col19 = dtt.Rows[0]["icode"].ToString();
                                model[0].Col20 = dtt.Rows[0]["mrntype"].ToString();
                                model[0].Col29 = dtt.Rows[0]["iname"].ToString();
                                model[0].Col21 = dtt.Rows[0]["mrnno"].ToString();
                                model[0].Col22 = dtt.Rows[0]["mrndate"].ToString();
                                model[0].Col23 = dtt.Rows[0]["chlno"].ToString();
                                model[0].Col24 = dtt.Rows[0]["chldate"].ToString();
                                model[0].Col25 = dtt.Rows[0]["invno"].ToString();
                                model[0].Col26 = dtt.Rows[0]["invdate"].ToString();
                                model[0].Col27 = dtt.Rows[0]["partyname"].ToString();
                                model[0].Col28 = dtt.Rows[0]["partycode"].ToString();
                                model[0].dt1 = (DataTable)sgen.GetSession(MyGuid, "dtqcinsp");
                                if (model[0].dt1.Rows[0]["parameter"].ToString().Trim().Equals("-")) model[0].dt1.Rows.RemoveAt(0);
                                for (int i = 0; i < dtt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["SNo"] = "";
                                    dr["parameter"] = dtt.Rows[i]["param"].ToString();
                                    dr["specification"] = dtt.Rows[i]["spec"].ToString();
                                    dr["min"] = dtt.Rows[i]["min"].ToString();
                                    dr["max"] = dtt.Rows[i]["max"].ToString();
                                    dr["test_cond"] = dtt.Rows[i]["tcond"].ToString();
                                    dr["method_of_test"] = dtt.Rows[i]["tmeth"].ToString();
                                    model[0].dt1.Rows.Add(dr);
                                }
                            }
                            break;
                    }
                    break;
                #endregion
                #region apprv_config
                case "apprv_config":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "VIEW":
                            mq = @"select to_char(vch_date,'" + sgen.Getsqldateformat() + "') vch_date,vch_num,client_id,client_unit_id," +
                                "ent_by,ent_date,col1 dept,col2 ig,col3 userid,col4 amt from enx_tab " +
                                "where (client_id||client_unit_id||vch_num||to_char(vch_date,'yyyymmdd')||type)='" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "EDMODE", "Y");
                                model[0].Col1 = dtt.Rows[0]["client_id"].ToString();
                                model[0].Col2 = dtt.Rows[0]["client_unit_id"].ToString();
                                model[0].Col3 = dtt.Rows[0]["ent_by"].ToString();
                                model[0].Col4 = dtt.Rows[0]["ent_date"].ToString();
                                model[0].Col8 = "(client_id||client_unit_id||vch_num||to_char(vch_date,'yyyymmdd')||type) = '" + URL + "'";
                                model[0].Col9 = tm.Col9;
                                model[0].Col10 = tm.Col10;
                                model[0].Col11 = tm.Col11;
                                model[0].Col12 = tm.Col12;
                                model[0].Col13 = "Update";
                                model[0].Col14 = tm.Col14;
                                model[0].Col15 = tm.Col15;
                                model[0].Col16 = dtt.Rows[0]["vch_num"].ToString();
                                model[0].Col17 = dtt.Rows[0]["amt"].ToString();
                                model[0].Col18 = tm.Col18;
                                model[0].Col19 = tm.Col19;
                                model[0].Col20 = tm.Col20;
                                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.dept(userCode, clientid_mst, unitid_mst);

                                String[] L1 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["dept"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems1 = L1;
                                TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2 = cmd_Fun.itemgrp(userCode, clientid_mst, unitid_mst);

                                String[] L2 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["ig"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems2 = L2;
                                TempData[MyGuid + "_TList3"] = model[0].TList3 = mod3 = cmd_Fun.username(userCode);

                                String[] L3 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["userid"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems3 = L3;
                            }
                            break;
                    }
                    break;
                #endregion
                #region invreps2
                case "invreps2":
                    try
                    {
                        fdt = sgen.GetSession(MyGuid, "KPDFDT").ToString();
                        tdt = sgen.GetSession(MyGuid, "KPDTDT").ToString();
                    }
                    catch (Exception er) { }
                    switch (btnval.ToUpper())
                    {
                        case "ISUM":
                            Make_query(viewName, "Detailed Item Transactions", "IDET", "0", URL, fdt + "!~!~!~!~!" + tdt);
                            ViewBag.scripCall = "callFoo('Detailed Item Transactions');";
                            break;
                        case "IFIFO":
                            DataTable dtin = new DataTable();
                            DataTable dtout = new DataTable();
                            DataTable dtavg = new DataTable();
                            decimal qtyout = 0, qtyin = 0, cl = 0, bal = 0, rt = 0, totamt = 0, totqty = 0, myrate = 0, amt = 0;
                            mq1 = "select group_name evaltype from master_setting mg where md.subjectid='" + URL.Substring(0, 1).Trim() + "'";
                            mq1 = sgen.seekval(userCode, mq1, "evaltype");//evaluation type
                            if (mq1.Trim() == "0")
                            {
                                mq1 = "select master_name evaltype from master_setting where type='CF0' and client_unit_id='" + unitid_mst + "'";
                                mq1 = sgen.seekval(userCode, mq1, "evaltype");//evaluation type
                                if (mq1.Trim() == "0")
                                {
                                    ViewBag.scripCall += "mytoast('warning', 'toast-top-right', 'Please create master of inventory evaluation');";
                                    return model;
                                }
                            }
                            if (mq1.Trim() == "002")
                            {
                                mq = "select i.rec_id,i.vch_num,i.vch_date,i.type,i.icode,i.qtyin,i.qtyout,i.irate,i.iamount,'0' cl,'0' bal from itransaction i " +
                                    "where (it.icode||it.client_id||it.client_unit_id)='" + URL + "' and i.type in ('Q01','Q02','36','10','11','30','32','21','22') and i.store='Y' " +
                                    "order by i.vch_date,i.type asc"; //mrn_w_po,w/o_po,openg,return both,issue both,rgp,nrgp
                                dtavg = sgen.getdata(userCode, mq); //in
                                if (dtavg.Rows.Count <= 0)
                                {
                                    ViewBag.scripCall += "mytoast('warning', 'toast-top-right', 'No data found for IN OUT Stock');";
                                    return model;
                                }
                            }
                            else if (mq1.Trim() == "001")
                            {
                                mq = "select i.rec_id,i.vch_num,i.vch_date,i.type,i.icode,i.qtyin,i.qtyout,i.irate,i.iamount,'0' cl,'0' bal from itransaction i " +
                                    "where (i.icode||i.client_id||i.client_unit_id)='" + URL + "' and i.type in ('Q01','Q02','36') and i.store='Y' " +
                                    "order by i.vch_date,i.type asc"; //mrn_w_po,w/o_po,openg
                                dtin = sgen.getdata(userCode, mq); //in
                                if (dtin.Rows.Count <= 0)
                                {
                                    ViewBag.scripCall += "mytoast('warning', 'toast-top-right', 'No data found for IN Stock');";
                                    return model;
                                }
                                mq0 = "select i.rec_id,i.vch_num,i.vch_date,i.type,i.icode,i.qtyin,i.qtyout,i.irate,i.iamount,'0' cl,'0' bal from itransaction i " +
                                    "where (i.icode||i.client_id||i.client_unit_id) in ('" + URL + "') and type in ('10','11','30','32','21','22') and i.store='Y' " +
                                    "order by i.vch_date,i.type asc";//gen_ret,agnst_issue,w_req,w/o_req,rgp,nrgp
                                dtout = sgen.getdata(userCode, mq0); //out
                                if (dtout.Rows.Count <= 0)
                                {
                                    ViewBag.scripCall += "mytoast('warning', 'toast-top-right', 'No data found for OUT Stock');";
                                    return model;
                                }
                            }
                            //fifo
                            if (mq1.Trim() == "001")
                            {
                                List<string> recs = new List<string>();
                                mq = "UPDATE itransaction SET irate = CASE";
                                mq1 = "UPDATE itransaction SET iamount = CASE";
                                for (int o = 0; o < dtout.Rows.Count; o++) //out dt
                                {
                                    if (dtout.Rows[o]["type"].ToString().StartsWith("1"))
                                    {
                                        totamt = 0; totqty = 0;
                                        qtyin = sgen.Make_decimal(dtout.Rows[o]["qtyin"].ToString());
                                        for (int i = 0; i < dtout.Rows.Count; i++) //in dt
                                        {
                                            qtyout = sgen.Make_decimal(dtout.Rows[i]["qtyout"].ToString());
                                            cl = sgen.Make_decimal(dtout.Rows[i]["cl"].ToString());
                                            rt = sgen.Make_decimal(dtout.Rows[i]["irate"].ToString());
                                            bal = qtyout - cl;
                                            if (bal == qtyin)
                                            {
                                                totqty = totqty + qtyin;
                                                dtout.Rows[i]["cl"] = qtyout;//in bal
                                                totamt += rt * qtyin;
                                                qtyin = 0;
                                            }
                                            else if (bal > qtyin)
                                            {
                                                totqty += qtyin;
                                                dtout.Rows[i]["cl"] = cl + qtyin;//in bal
                                                totamt += rt * qtyin;
                                                qtyin = 0;
                                            }
                                            else if (bal < qtyin)
                                            {
                                                totqty += bal;
                                                dtout.Rows[i]["cl"] = cl + bal;//in bal
                                                totamt += rt * bal;
                                                qtyin = qtyin - bal;
                                            }
                                            if (qtyin == 0) break;
                                        }
                                        myrate = totamt / totqty;
                                        dtout.Rows[o]["irate"] = myrate;
                                        dtout.Rows[o]["iamount"] = totamt;//out amt
                                    }
                                    else
                                    {
                                        totamt = 0; totqty = 0;
                                        qtyout = sgen.Make_decimal(dtout.Rows[o]["qtyout"].ToString());
                                        for (int i = 0; i < dtin.Rows.Count; i++) //in dt
                                        {
                                            qtyin = sgen.Make_decimal(dtin.Rows[i]["qtyin"].ToString());
                                            cl = sgen.Make_decimal(dtin.Rows[i]["cl"].ToString());
                                            rt = sgen.Make_decimal(dtin.Rows[i]["irate"].ToString());
                                            bal = qtyin - cl;
                                            if (bal == qtyout)
                                            {
                                                totqty = totqty + qtyout;
                                                dtin.Rows[i]["cl"] = qtyin;//in bal
                                                totamt += rt * qtyout;
                                                qtyout = 0;
                                            }
                                            else if (bal > qtyout)
                                            {
                                                totqty += qtyout;
                                                dtin.Rows[i]["cl"] = cl + qtyout;//in bal
                                                totamt += rt * qtyout;
                                                qtyout = 0;
                                            }
                                            else if (bal < qtyout)
                                            {
                                                totqty += bal;
                                                dtin.Rows[i]["cl"] = cl + bal;//in bal
                                                totamt += rt * bal;
                                                qtyout = qtyout - bal;
                                            }
                                            if (qtyout == 0) break;
                                        }
                                        myrate = totamt / totqty;
                                        dtout.Rows[o]["irate"] = myrate;
                                        dtout.Rows[o]["iamount"] = totamt;//out amt
                                    }
                                    string rec = dtout.Rows[o]["recid"].ToString();
                                    recs.Add(rec);
                                    mq += " WHEN rec_id = '" + rec + "' THEN " + myrate + "";
                                    mq1 += " WHEN rec_id = '" + rec + "' THEN " + totamt + "";
                                }
                                mq += " where rec_id in (" + string.Join("','", recs) + "'";
                                mq1 += " where rec_id in (" + string.Join("','", recs) + "'";
                                sgen.execute_cmd(userCode, mq);
                                sgen.execute_cmd(userCode, mq1);
                            }
                            //average moving price
                            else if (mq1.Trim() == "002")
                            {
                                dtin = dtavg.Select("type in ('Q01','Q02','36')").CopyToDataTable();
                                dtout = dtavg.Select("type in ('10','11','30','32','21','22')").CopyToDataTable();
                                List<string> recs = new List<string>();
                                mq = "UPDATE itransaction SET irate = CASE";
                                mq1 = "UPDATE itransaction SET iamount = CASE";
                                for (int o = 0; o < dtout.Rows.Count; o++) //out dt
                                {
                                    var dtin_t = dtin.AsEnumerable().Where(w => w.Field<DateTime>("vch_date") <= ((DateTime)dtout.Rows[o]["vch_date"])).CopyToDataTable();
                                    DataTable dtttt = new DataTable();
                                    dtttt.Columns.Add("totqty");
                                    dtttt.Columns.Add("totamt");
                                    var t1 = dtin_t.AsEnumerable().GroupBy(k => new
                                    {
                                        icode = k.Field<string>("icode")
                                    });
                                    var t2 = t1.Select(c =>
                                    {
                                        var row = dtttt.NewRow();
                                        row["icode"] = c.Key.icode;
                                        row["totqty"] = c.Sum(k => k.Field<decimal>("qtyin"));
                                        row["totamt"] = c.Sum(k => k.Field<decimal>("iamount"));
                                        return row;
                                    });
                                    dtttt = t2.CopyToDataTable();
                                    totamt = 0; totqty = 0;
                                    qtyout = sgen.Make_decimal(dtout.Rows[o]["qtyout"].ToString());
                                    bal = sgen.Make_decimal(dtttt.Rows[0][0].ToString());
                                    amt = sgen.Make_decimal(dtttt.Rows[0][1].ToString());
                                    rt = amt / bal;
                                    //myrate = totamt / totqty;
                                    dtout.Rows[o]["irate"] = rt;
                                    dtout.Rows[o]["iamount"] = qtyout * rt;//out amt
                                    string rec = dtout.Rows[o]["recid"].ToString();
                                    recs.Add(rec);
                                    mq += " WHEN rec_id = '" + rec + "' THEN " + myrate + "";
                                    mq1 += " WHEN rec_id = '" + rec + "' THEN " + totamt + "";
                                }
                                mq += " where rec_id in (" + string.Join("','", recs) + "'";
                                mq1 += " where rec_id in (" + string.Join("','", recs) + "'";
                                sgen.execute_cmd(userCode, mq);
                                sgen.execute_cmd(userCode, mq1);
                            }
                            break;
                        case "ILEDGER":
                            mq = "select (t.icode||t.client_id||t.client_unit_id) fstr,t.vch_num,to_char(convert_tz(t.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') vch_date," +
                                "t.client_id,t.client_unit_id,t.type,t.ewayno billno, to_char(convert_tz(t.ewaydate, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') billdate," +
                                "t.icode,i.iname,i.cpartno,um.master_name uom,to_number(t.irate) rate,to_number(t.iamount) amount,to_number(t.qtyin) Received,to_number(t.qtyout) Issued," +
                                "(case when t.type in ('36', '30', '32', '10', '11') then t.deptno when t.type in ('Q01', 'Q02', '21', '22') then t.acode else '-' end) partycode," +
                                "(case when t.type in ('36', '30', '32', '10', '11') then nvl(d.master_name, '-') when t.type in ('Q01', 'Q02', '21', '22') then vd.c_name else '-' end) partyname " +
                                "from itransaction t " +
                                "inner join item i on t.icode = i.icode and i.type = 'IT' and find_in_set(t.client_unit_id,i.client_unit_id)=1 " +
                                "left join master_setting um on um.master_id = i.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, i.client_unit_id)= 1 " +
                                "left join master_setting d on d.master_id = t.deptno and d.Type = 'MDP' and find_in_set(d.client_unit_id, t.client_unit_id)= 1 " +
                                "left join clients_mst vd on t.acode = vd.vch_num and substr(vd.vch_num,0,3)='203' and vd.type = 'BCD' and find_in_set(t.client_unit_id,vd.client_unit_id)=1 " +
                                "where (t.icode || t.client_id || t.client_unit_id) in ('" + URL + "') and t.type in ('Q01', 'Q02', '36', '10', '11', '30', '32', '21', '22') " +
                                "and t.store = 'Y' order by t.vch_date,t.type asc";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0) { sgen.open_report_bydt_xml(userCode, dt, "iledger", "Item Ledger"); }
                            ViewBag.scripCall += "showRptnew('Item Ledger');";
                            //ViewBag.scripCall = "OpenSingle('../../../../../erp/schoolReports_Rpts/Filter_Report_xml.aspx','95%','900px','Reports');";
                            break;
                        case "PPO":
                            Make_query(viewName, "Detailed Pending PO", "PPODET", "0", URL, "");
                            ViewBag.scripCall = "callFoo('Detailed Pending PO');";
                            break;
                        case "STKMM":
                            mq = "select t.icode fstr,t.icode Item_Code,i.iname Item_Name,gd.master_name Maingrp,mg.master_name Itemgrp,sg.iname Itemsubgrp,t.vch_num DocNo," +
                                "to_char(t.vch_date,'" + sgen.Getsqldateformat() + "') Dated,i.cpartno PartNo,t.type Type,to_number(t.qtyin) Received," +
                                "to_number(t.qtyout) Issued,to_number(t.irate) Rate,to_number(t.iamount) Amount,nvl(d.master_name,'-') Department," +
                                "nvl(t.pktno,0) pktno from itransaction t " +
                              "inner join item i on t.icode=i.icode and i.type='IT' and find_in_set(i.client_unit_id,t.client_unit_id)=1 " +
                              "left join master_setting d on d.master_id=t.deptno and d.Type='MDP' and d.client_unit_id=t.client_unit_id " +
                              "inner join master_setting gd on gd.classid = SUBSTR(i.icode, 1, 1) and gd.type = 'KGP' " +
                              "inner join master_setting mg on mg.master_id = substr(i.icode, 1, 3) and mg.type = 'KIG' and find_in_set(mg.client_unit_id,i.client_unit_id)=1 " +
                              "inner join item sg on sg.icode = substr(i.icode, 1, 5) and sg.type = 'SG' and find_in_set(sg.client_unit_id,i.client_unit_id)=1 " +
                              "where concat(t.client_unit_id,t.icode) in ('" + URL + "') and t.store='Y' and to_date(to_char(t.vch_date,'" + sgen.Getsqldateformat() + "'),'" + sgen.Getsqldateformat() + "') between " +
                              "to_date('" + fdt + "','" + sgen.Getsqldateformat() + "') and to_date('" + tdt + "','" + sgen.Getsqldateformat() + "') order by t.icode,t.vch_date asc";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0) { sgen.open_report_bydt_xml(userCode, dt, "stkmm", "Stock Moment Summary"); }
                            ViewBag.scripCall += "showRptnew('Stock Moment Summary');";
                            //ViewBag.scripCall = "OpenSingle('../../../../../erp/schoolReports_Rpts/Filter_Report_xml.aspx','95%','900px','Reports');";
                            break;
                    }
                    break;
                #endregion
                #region Gate In item
                case "g_in_item":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            mq = "select a.*,to_char(convert_tz(a.vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') vch_date1," +
                                "to_char(a.chldate,'" + sgen.Getsqldateformat() + "') chldate1,to_char(a.invdate,'" + sgen.Getsqldateformat() + "') invdate1, " +
                                "to_char(a.ewaydate,'" + sgen.Getsqldateformat() + "') ewaydate1,to_char(a.podate,'" + sgen.Getsqldateformat() + "') podate1," +
                                "to_char(a.date1,'" + sgen.Getsqldateformat() + "') dte1,location_name(a.client_id||a.client_unit_id||itb.loc) loc_name from itransaction a " +
                                "left join itbal itb on a.icode=itb.icode and 'IT'= itb.type and find_in_set(a.client_id,itb.client_id)=1 and find_in_set(itb.client_unit_id,a.client_unit_id)=1 " +
                                " where (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date, 'yyyymmdd')|| a.type) = '" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.transportmode(userCode, unitid_mst);
                                DateTime serverdate = sgen.server_datetime_dt(userCode);
                                model = getedit(model, dtt, URL);
                                model[0].Col12 = dtt.Rows[0]["type"].ToString();
                                if (model[0].Col12 == "401") model[0].Col9 = "AGAINST PURCHASE ORDER";
                                else model[0].Col9 = "WITHOUT PURCHASE ORDER";

                                String[] L1 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["TMODE"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems1 = L1;
                                model[0].Col16 = dtt.Rows[0]["vch_num"].ToString();
                                model[0].Col17 = dtt.Rows[0]["vch_date1"].ToString();
                                sgen.SetSession(MyGuid, "BGINTYPE", dtt.Rows[0]["type"].ToString());
                                DataTable dtp = new DataTable();
                                mq1 = "select a.c_name as name,a.c_gstin as gstin,a.addr,a.vch_num,a.tor from clients_mst a where a.vch_num='" + dtt.Rows[0]["acode"].ToString() + "' " +
                                    "and find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 and a.type='BCD'";
                                dtp = sgen.getdata(userCode, mq1);
                                if (dtp.Rows.Count > 0)
                                {
                                    model[0].Col18 = dtp.Rows[0]["vch_num"].ToString();
                                    model[0].Col19 = dtp.Rows[0]["name"].ToString();
                                    model[0].Col20 = dtp.Rows[0]["addr"].ToString();
                                    model[0].Col21 = dtp.Rows[0]["gstin"].ToString();
                                }
                                model[0].Col26 = dtt.Rows[0]["chlno"].ToString();
                                model[0].Col27 = dtt.Rows[0]["chldate1"].ToString();
                                model[0].Col24 = dtt.Rows[0]["ewayno"].ToString();
                                model[0].Col25 = dtt.Rows[0]["ewaydate1"].ToString();
                                model[0].Col22 = dtt.Rows[0]["invno"].ToString();
                                model[0].Col23 = dtt.Rows[0]["invdate1"].ToString();
                                model[0].Col29 = dtt.Rows[0]["contactno"].ToString();
                                model[0].Col28 = dtt.Rows[0]["REQ_BY"].ToString();
                                model[0].Col30 = dtt.Rows[0]["sdlno"].ToString();
                                model[0].Col31 = dtt.Rows[0]["dte1"].ToString();
                                model[0].Col32 = dtt.Rows[0]["TOTREMARK"].ToString();
                                model[0].dt1 = model[0].dt1.Clone();
                                for (int i = 0; i < dtt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["SNo"] = dtt.Rows[i]["rno"].ToString();
                                    dr["Icode"] = dtt.Rows[i]["icode"].ToString();
                                    dr["IName"] = dtt.Rows[i]["iname"].ToString();
                                    dr["PARTNO"] = dtt.Rows[i]["cpartno"].ToString();
                                    dr["HSN"] = dtt.Rows[i]["hsno"].ToString();
                                    dr["UOM"] = dtt.Rows[i]["uom"].ToString();
                                    dr["Qty_chl"] = dtt.Rows[i]["qtychl"].ToString();
                                    dr["po_bal_qty"] = dtt.Rows[i]["QTYBAL"].ToString();
                                    dr["Qty_in"] = dtt.Rows[i]["qtyrcvd"].ToString();
                                    dr["NoOfPKT_Box"] = dtt.Rows[i]["pktno"].ToString();
                                    dr["Remark"] = dtt.Rows[i]["iremark"].ToString();
                                    dr["PO_Number"] = dtt.Rows[i]["pono"].ToString();
                                    dr["Po_Date"] = dtt.Rows[i]["podate1"].ToString();
                                    dr["Location"] = dtt.Rows[i]["loc_name"].ToString();
                                    model[0].dt1.Rows.Add(dr);
                                }
                                model[0].dt1.AcceptChanges();
                            }
                            break;
                        case "NEW":
                            mq = "SELECT master_id FSTR,master_id,GIN_TYPE FROM (select '401' as master_id, 'AGAINST PURCHASE ORDER' " +
                                "as GIN_TYPE from dual Union all select '402' master_id,'WITHOUT PURCHASE ORDER' as REJ_TYPE from dual) where master_id='" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                model[0].Col12 = dtt.Rows[0]["master_id"].ToString();
                                sgen.SetSession(MyGuid, "BGINTYPE", dtt.Rows[0]["master_id"].ToString());
                                model[0].Col9 = dtt.Rows[0]["GIN_TYPE"].ToString();
                                model[0].Col17 = sgen.server_datetime_local(userCode);
                                model = getnew(model);
                                TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1 = cmd_Fun.transportmode(userCode, unitid_mst);
                                model[0].SelectedItems1 = new string[] { "" };
                                Make_query(viewName.ToLower(), "Select Vendor", "PARTY", "1", "", "");
                                ViewBag.scripCall = "callFoo('Select Vendor');";
                            }
                            break;
                        case "PARTY":
                            mq = "select a.c_name as name,a.c_gstin as gstin,a.addr address,a.vch_num,a.tor from clients_mst a " +
                                "where (a.vch_num||to_char(a.vch_date, 'yyyymmdd')|| a.type) = '" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                model[0].Col18 = dtt.Rows[0]["vch_num"].ToString();
                                model[0].Col19 = dtt.Rows[0]["Name"].ToString();
                                model[0].Col20 = dtt.Rows[0]["GSTIN"].ToString();
                                model[0].Col21 = dtt.Rows[0]["address"].ToString();
                                sgen.SetSession(MyGuid, "BGIN2PARTY", dtt.Rows[0]["vch_num"].ToString());
                            }
                            break;
                        case "BDDOCNO":
                            mq = "select group_concat(distinct iv.vch_num) as invoice_no from itransaction iv " +
                                "inner join clients_mst cl on iv.acode = cl.vch_num and find_in_set(iv.client_unit_id, cl.client_unit_id)=1 " +
                                "where (iv.client_id||iv.client_unit_id||iv.vch_num||to_char(iv.vch_date, 'yyyymmdd')||iv.type) in ('" + URL + "')";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "BDINVDOCNO", dtt.Rows[0]["invoice_no"].ToString());
                            }
                            break;
                        case "ITEM":
                            if (model[0].Col12 == "401")//with po
                            {
                                mq = "select (p.vch_num||p.icode||to_char(it.vch_date,'yyyymmdd')||it.type) as fstr,'-' as iremark, p.vch_num PO_Number,to_char(p.vch_date,'" + sgen.Getsqldateformat() + "') PO_Date" +
                                    ",p.icode ICode,it.iname,it.cpartno PartNo,um.master_name UOM,hsn.master_name HSN," +
                                    "location_name('" + clientid_mst + "'||'" + unitid_mst + "'||itb.loc) as location,nvl(s.closing,'0') as stock" +
                                    ",p.qtyord,p.bal_qty as qtychl from item it inner join (select a.vch_num,a.vch_date,a.type,a.acode,a.icode," +
                                    "a.client_id,a.client_unit_id,a.dlv_date," +
                                    "a.qtyord, sum(a.inv_qty) as inv_qty,(a.qtyord - nvl(sum(a.inv_qty), '0')) as bal_qty from(select distinct po.vch_num" +
                                    ",po.vch_date,po.type,po.acode,po.icode,po.client_id,po.client_unit_id,po.dlv_date,po.qtyord,nvl(iv.qtyrcvd,'0') as inv_qty from purchases po " +
                                    "left join itransaction iv on iv.pono = po.vch_num and to_char(iv.podate,'yyyymmdd')=to_char(po.vch_date,'yyyymmdd') and " +
                                    "iv.icode=po.icode and iv.type='02' and iv.client_unit_id = po.client_unit_id where po.type " +
                                    "in ('50','54','52') and po.client_unit_id = '" + unitid_mst + "' union all select distinct po.vch_num," +
                                    "po.vch_date,po.type,po.acode,po.icode,po.client_id,po.client_unit_id,po.dlv_date,po.qtyord,nvl(to_number(iv.col11),'0') as close_qty from purchases po" +
                                    " left join enx_tab iv on iv.col12 = po.vch_num and to_char(iv.date1,'yyyymmdd')=to_char(po.vch_date,'yyyymmdd') and" +
                                    " iv.col7=po.icode and iv.type='POR' and iv.client_unit_id = po.client_unit_id where" +
                                    " po.type in ('50','54','52') and po.client_unit_id = '" + unitid_mst + "') a group by(a.vch_num,a.vch_date," +
                                    "a.type,a.acode,a.icode,a.client_id,a.client_unit_id,a.dlv_date,a.qtyord)) p on p.icode=it.icode and " +
                                    "p.client_unit_id=it.client_unit_id left join master_setting um on um.master_id = it.uom  and um.type = 'UMM' and " +
                                    "find_in_set(um.client_unit_id,it.client_unit_id)= 1 left join" +
                                    " master_setting hsn on hsn.master_id = it.hsno and hsn.type = 'HSN' and find_in_set(hsn.client_unit_id, it.client_unit_id)= 1 inner join itbal itb on it.icode=itb.icode and it.type=itb.type " +
                                    "and find_in_set(it.client_unit_id,itb.client_unit_id)=1 left join(" +
                                    "select t.client_unit_id, t.icode, sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout, 0)) as Issued,sum(nvl(t.qtyin, 0))" +
                                    " - sum(nvl(t.qtyout, 0)) as closing from itransaction t where trim(t.store) = 'Y' group by t.icode,t.client_unit_id ) " +
                                    "s on it.icode = s.icode and it.client_unit_id = s.client_unit_id where (p.vch_num||p.icode||to_char(it.vch_date,'yyyymmdd')||it.type)" +
                                    " in ('" + URL + "') ";
                            }
                            else
                            {
                                mq = "select it.icode||to_char(it.vch_date,'yyyymmdd')||it.type as fstr, it.icode as icode,it.iname as iname,it.cpartno partno,um.master_name as UOM,hsn.master_name as hsn,hsn.group_name taxrate,'0' qtychl," +
                                    "'0' qtyin,'-' iremark,'0' PO_Number,'-' PO_Date,location_name('" + clientid_mst + "'||'" + unitid_mst + "'||itb.loc) as location from item it " +
                                    "inner join itbal itb on it.icode=itb.icode and it.type=itb.type and find_in_set(itb.client_unit_id,it.client_unit_id)=1 " +
                                    "inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,'" + unitid_mst + "')=1 " +
                                    "inner join master_setting hsn on hsn.master_id=it.hsno and hsn.type='HSN' and find_in_set(hsn.client_unit_id,'" + unitid_mst + "')=1 " +
                                    "where (it.icode||to_char(it.vch_date,'yyyymmdd')||it.type) in ('" + URL + "')";
                            }
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                try
                                {
                                    if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt1.Rows.RemoveAt(0); }
                                    for (int i = 0; i < dtt.Rows.Count; i++)
                                    {
                                        DataRow dr = model[0].dt1.NewRow();
                                        dr["SNo"] = i + 1;
                                        dr["ITEM"] = dtt.Rows[i]["fstr"].ToString();
                                        dr["Icode"] = dtt.Rows[i]["icode"].ToString();
                                        dr["IName"] = dtt.Rows[i]["iname"].ToString();
                                        dr["PARTNO"] = dtt.Rows[i]["partno"].ToString();
                                        dr["HSN"] = dtt.Rows[i]["hsn"].ToString();
                                        dr["UOM"] = dtt.Rows[i]["uom"].ToString();
                                        dr["Qty_chl"] = "0";
                                        dr["qty_in"] = "0";
                                        dr["Remark"] = dtt.Rows[i]["iremark"].ToString();
                                        dr["PO_Number"] = dtt.Rows[i]["PO_Number"].ToString();
                                        dr["PO_Date"] = dtt.Rows[i]["PO_Date"].ToString();
                                        dr["location"] = dtt.Rows[i]["location"].ToString();
                                        dr["po_bal_qty"] = dtt.Rows[i]["qtychl"].ToString();
                                        model[0].dt1.Rows.Add(dr);
                                    }
                                    model[0].dt1.AcceptChanges();
                                }
                                catch (Exception ex) { ViewBag.scripCall = "showmsgJS(1," + ex.Message.ToString().Replace('\'', ' ') + ",0);"; }
                            }
                            break;
                        case "PRINT":
                            mq = "select p.invno,location_name(itb.client_id||itb.client_unit_id||itb.loc) loc,REPLACE(ud.FIRST_NAME|| ' '|| ud.MIDDLE_NAME|| ' '|| ud.last_name,'0','') created_by,p.totremark," +
                                "p.vch_num,p.vehno,p.type,m.master_name as mrntype,p.qtyrcvd,p.ewayno,p.chlno,p.icode,p.taxrate,p.qtychl,p.qtyin,p.pono,to_char(convert_tz(p.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') vch_date1," +
                                "to_char(convert_tz(p.chldate, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') chldate1," +
                                "to_char(convert_tz(p.invdate, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') invdate1," +
                                "to_char(convert_tz(p.ewaydate, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') ewaydate1," +
                                "to_char(convert_tz(p.podate, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') podate1,c_name name," +
                                "i.cpartno,i.iname,i.partname,um.master_name UOM,hsn.master_name hsn from itransaction p " +
                                "inner join item i on p.icode=i.icode and i.type='IT' and find_in_set(i.client_unit_id,p.client_unit_id)=1 " +
                                "inner join itbal itb on i.icode=itb.icode and i.type=itb.type and find_in_set(itb.client_unit_id,i.client_unit_id)=1 " +
                                "inner join clients_mst c on p.acode=c.vch_num and find_in_set(c.client_unit_id,p.client_unit_id)=1 and substr(c.vch_num,0,3)='203' and c.type='BCD' " +
                                "inner join master_setting um on um.master_id=i.uom and um.type='UMM' and find_in_set(um.client_unit_id,'" + unitid_mst + "')=1 " +
                                "inner join master_setting hsn on hsn.master_id=i.hsno and hsn.type='HSN' and find_in_set(hsn.client_unit_id,'" + unitid_mst + "')=1 " +
                                "inner join user_details ud on p.ent_by = ud.vch_num and ud.type = 'CPR' " +
                                "inner join master_setting m on m.master_id = p.type and m.type = 'KMR' and find_in_set(m.client_unit_id,p.client_unit_id)= 1 " +
                                "where (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date, 'yyyymmdd')||p.type) = '" + URL + "'";
                            DataSet ds = new DataSet();
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                DataTable qrdt = new DataTable();
                                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.gin_no2(userCode, unitid_mst);
                                qrdt = dtt.Copy();
                                qrdt.Columns.Add("qrimg", typeof(Byte[]));
                                foreach (DataRow dr in qrdt.Rows)
                                {
                                    string code = dr["icode"].ToString() + "\n" + dr["iname"].ToString();
                                    QRCodeGenerator qrGenerator = new QRCodeGenerator();
                                    QRCodeGenerator.QRCode qrCode = qrGenerator.CreateQrCode(code, QRCodeGenerator.ECCLevel.Q);
                                    System.Web.UI.WebControls.Image imgBarCode = new System.Web.UI.WebControls.Image();
                                    imgBarCode.Height = 150;
                                    imgBarCode.Width = 150;
                                    using (Bitmap bitMap = qrCode.GetGraphic(20))
                                    {
                                        using (MemoryStream ms = new MemoryStream())
                                        {
                                            bitMap.Save(ms, System.Drawing.Imaging.ImageFormat.Png);
                                            byte[] byteImage = ms.ToArray();
                                            dr["qrimg"] = byteImage;
                                            //imgBarCode.ImageUrl = "data:image/png;base64," + Convert.ToBase64String(byteImage);
                                        }
                                        //plBarCode.Controls.Add(imgBarCode);
                                    }
                                }
                                qrdt.AcceptChanges();
                                qrdt.TableName = "prepcur";
                                ds.Tables.Add(qrdt);
                                sgen.open_report_byDs_xml(userCode, ds, "mrn_report", "MRN Detail");
                                ViewBag.scripCall += "showRptnew('MRN Detail');disableForm();";
                            }
                            break;
                    }
                    break;
                #endregion
                #region item_opening
                case "item_opening":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            mq = "select i.vch_num,it.icode,it.iname,it.cpartno,um.master_name as uom,i.client_id,i.client_unit_id," +
                                "i.ent_date,i.edit_by,i.edit_date,i.ent_by,to_char(i.vch_date, '" + sgen.Getsqldateformat() + "') doc_date,i.loc," +
                                "i.OP_" + year + " as opening_qty,i.pkt_" + year + " pktno,i.amt_" + year + " from itbal_enx i " +
                                "inner join item it on it.icode = i.icode and it.type = 'IT' and find_in_set(it.client_unit_id, i.client_unit_id)= 1 " +
                                "inner join master_setting um on um.master_id = it.uom and um.type = 'UMM' and find_in_set(it.client_unit_id, um.client_unit_id)= 1 " +
                                "where(i.client_unit_id || i.vch_num || to_char(i.vch_date, 'yyyymmdd') || i.type) = '" + URL + "'";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "EDMODE", "Y");
                                DataTable dt2 = new DataTable();
                                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.iloc(userCode, unitid_mst);
                                model[0].Col1 = dt.Rows[0]["client_id"].ToString();
                                model[0].Col2 = dt.Rows[0]["client_unit_id"].ToString();
                                model[0].Col3 = dt.Rows[0]["ent_by"].ToString();
                                model[0].Col4 = dt.Rows[0]["ent_date"].ToString();
                                model[0].Col5 = dt.Rows[0]["edit_by"].ToString();
                                model[0].Col6 = dt.Rows[0]["edit_date"].ToString();
                                model[0].Col8 = "(client_unit_id||vch_num|| to_char(vch_date, 'yyyymmdd')||type) = '" + URL + "'";
                                model[0].Col13 = "Update";
                                model[0].Col100 = "Update & New";
                                model[0].Col121 = "U";
                                model[0].Col122 = "<u>U</u>pdate";
                                model[0].Col123 = "Update & Ne<u>w</u>";
                                model[0].Col16 = dt.Rows[0]["vch_num"].ToString();
                                model[0].Col17 = dt.Rows[0]["doc_date"].ToString();

                                model[0].SelectedItems1 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["loc"].ToString()).Distinct()).Split(',');

                                if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt1.Rows.RemoveAt(0); }
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["sno"] = i.ToString();
                                    dr["IName"] = dt.Rows[i]["iname"].ToString();
                                    dr["Icode"] = dt.Rows[i]["icode"].ToString();
                                    dr["UOM"] = dt.Rows[i]["uom"].ToString();
                                    dr["partno"] = dt.Rows[i]["cpartno"].ToString();
                                    dr["Opening_qty"] = dt.Rows[i]["opening_qty"].ToString();
                                    dr["No_of_pkt"] = dt.Rows[i]["pktno"].ToString();
                                    dr["Amount"] = dt.Rows[i]["amt"].ToString();
                                    model[0].dt1.Rows.Add(dr);
                                }
                            }
                            break;

                        case "ITEM":
                            mq = "select (it.icode||to_char(it.vch_date,'yyyymmdd')||it.type) fstr,it.icode as Icode,it.iname as Iname,it.cpartno Partno,um.master_name as uom from item it inner join master_setting um on um.master_id = it.uom and find_in_set(it.uom, um.master_id)= 1 " +
                                "and um.type = 'UMM' where(it.icode || to_char(it.vch_date, 'yyyymmdd') || it.type) in ('" + URL + "')";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt1.Rows.RemoveAt(0); }
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["SNo"] = dt.Rows[i]["fstr"].ToString();
                                    dr["Icode"] = dt.Rows[i]["Icode"].ToString();
                                    dr["Iname"] = dt.Rows[i]["Iname"].ToString();
                                    dr["Partno"] = dt.Rows[i]["Partno"].ToString();
                                    dr["Uom"] = dt.Rows[i]["uom"].ToString();
                                    model[0].dt1.Rows.Add(dr);
                                }
                            }
                            break;
                    }
                    break;
                #endregion
                #region item_openingn
                case "item_openingn":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            mq = "select i.vch_num,it.icode,it.iname,it.cpartno,um.master_name as uom,i.client_id,i.client_unit_id," +
                                "i.ent_date,i.edit_by,i.edit_date,i.ent_by,to_char(i.vch_date, '" + sgen.Getsqldateformat() + "') doc_date,i.loc," +
                                "i.OP_" + year + " as opening_qty,i.pkt_" + year + " pktno,i.amt_" + year + " from itbal_enx i " +
                                "inner join item it on it.icode = i.icode and it.type = 'IT' and find_in_set(it.client_unit_id, i.client_unit_id)= 1 " +
                                "inner join master_setting um on um.master_id = it.uom and um.type = 'UMM' and find_in_set(it.client_unit_id, um.client_unit_id)= 1 " +
                                "where(i.client_unit_id || i.vch_num || to_char(i.vch_date, 'yyyymmdd') || i.type) = '" + URL + "'";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "EDMODE", "Y");
                                DataTable dt2 = new DataTable();
                                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.iloc(userCode, unitid_mst);
                                model[0].Col1 = dt.Rows[0]["client_id"].ToString();
                                model[0].Col2 = dt.Rows[0]["client_unit_id"].ToString();
                                model[0].Col3 = dt.Rows[0]["ent_by"].ToString();
                                model[0].Col4 = dt.Rows[0]["ent_date"].ToString();
                                model[0].Col5 = dt.Rows[0]["edit_by"].ToString();
                                model[0].Col6 = dt.Rows[0]["edit_date"].ToString();
                                model[0].Col8 = "(client_unit_id||vch_num|| to_char(vch_date, 'yyyymmdd')||type) = '" + URL + "'";
                                model[0].Col13 = "Update";
                                model[0].Col100 = "Update & New";
                                model[0].Col121 = "U";
                                model[0].Col122 = "<u>U</u>pdate";
                                model[0].Col123 = "Update & Ne<u>w</u>";
                                model[0].Col16 = dt.Rows[0]["vch_num"].ToString();
                                model[0].Col17 = dt.Rows[0]["doc_date"].ToString();

                                model[0].SelectedItems1 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["loc"].ToString()).Distinct()).Split(',');

                                if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt1.Rows.RemoveAt(0); }
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["sno"] = i.ToString();
                                    dr["IName"] = dt.Rows[i]["iname"].ToString();
                                    dr["Icode"] = dt.Rows[i]["icode"].ToString();
                                    dr["UOM"] = dt.Rows[i]["uom"].ToString();
                                    dr["partno"] = dt.Rows[i]["cpartno"].ToString();
                                    dr["Opening_qty"] = dt.Rows[i]["opening_qty"].ToString();
                                    dr["No_of_pkt"] = dt.Rows[i]["pktno"].ToString();
                                    dr["Amount"] = dt.Rows[i]["amt"].ToString();
                                    model[0].dt1.Rows.Add(dr);
                                }
                            }
                            break;

                        case "ITEM":
                            mq = "select (it.icode||to_char(it.vch_date,'yyyymmdd')||it.type) fstr,it.icode as Icode,it.iname as Iname,it.cpartno Partno,um.master_name as uom from item it inner join master_setting um on um.master_id = it.uom and find_in_set(it.uom, um.master_id)= 1 " +
                                "and um.type = 'UMM' where(it.icode || to_char(it.vch_date, 'yyyymmdd') || it.type) in ('" + URL + "')";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt1.Rows.RemoveAt(0); }
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["SNo"] = dt.Rows[i]["fstr"].ToString();
                                    dr["Icode"] = dt.Rows[i]["Icode"].ToString();
                                    dr["Iname"] = dt.Rows[i]["Iname"].ToString();
                                    dr["Partno"] = dt.Rows[i]["Partno"].ToString();
                                    dr["Uom"] = dt.Rows[i]["uom"].ToString();
                                    model[0].dt1.Rows.Add(dr);
                                }
                            }
                            break;
                    }
                    break;
                #endregion
                #region item_issued2
                case "item_isd":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            mq = "select (i.client_id||i.client_unit_id||i.vch_num||i.icode|| to_char(i.vch_date, 'yyyymmdd')||i.type) fstr,i.vch_num,to_char(convert_tz(i.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), " + "'" + sgen.Getsqldateformat() + "') as vch_date," +
                                "i.deptno,i.desig,i.cond ordid,i.totremark,i.chlno mrsno,to_char(convert_tz(i.chldate, 'UTC', '" + sgen.Gettimezone() + "'), " + "'" + sgen.Getsqldateformat() + "') as mrs_date," +
                                "i.icode,it.iname,it.cpartno,um.master_name uom,i.qtystk,i.qtychl,i.qtyout,i.qtybal,i.iremark,i.pono iord,i.client_id,i.client_unit_id,i.ent_by,i.ent_date,i.type,ks.master_name typename," +
                                "i.irate,i.iamount,i.mmt,i.btchno locid,i.cond locname,i.pktno from itransaction i " +
                                "inner join master_setting ks on ks.master_id=i.type and find_in_set(ks.client_unit_id,i.client_unit_id)=1 " +
                                "inner join item it on it.icode=i.icode and it.type='IT' and find_in_set(i.client_unit_id,it.client_unit_id)=1 " +
                                "inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
                                "where (i.client_id||i.client_unit_id||i.vch_num|| to_char(i.vch_date, 'yyyymmdd')||i.type)='" + URL + "' and i.inspected='C'";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                // shiv
                                DataTable dtg = sgen.getdata(userCode, "select '-' as SNo ,'-' as Icode,'-' as IName,'-' PartNo,'-' as UOM,'0' as Qty_in_stock,'0' as Qty_Req,'0' as Qty_issue," +
                                    "'0' Qty_Req_Bal,'0' as Rate,'0' as Amount,'-' as Remark,'0' Order_Id,'' No_of_pkt  from dual");
                                model[0].dt1 = dtg;
                                sgen.SetSession(MyGuid, "dtbase1", dtg);
                                // shiv
                                dtg = sgen.getdata(userCode, "select '-' as SNo ,'-' as Icode,'-' as IName,'-' PartNo,'-' as UOM,'0' as Qty_in_stock,'0' as Qty_issue,'-' as Remark,'0' LocCode,'-' Loc from dual");
                                model[0].dt2 = dtg;
                                sgen.SetSession(MyGuid, "dtbase2", dtg);
                                sgen.SetSession(MyGuid, "EDMODE", "Y");
                                DataTable dt2 = new DataTable();
                                #region getdept
                                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.dept(userCode, clientid_mst, unitid_mst);
                                #endregion
                                #region getdesig
                                TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2 = cmd_Fun.desig(userCode, unitid_mst);
                                #endregion
                                #region getloc
                                defval = "";
                                TempData[MyGuid + "_TList3"] = model[0].TList3 = mod3 = cmd_Fun.iloc(userCode, unitid_mst, out defval);
                                #endregion
                                #region getmmt                                
                                mod4.Add(new SelectListItem { Text = "Consume", Value = "001" });
                                mod4.Add(new SelectListItem { Text = "WIP", Value = "002" });
                                TempData[MyGuid + "_TList4"] = model[0].TList4 = mod4;
                                #endregion
                                model[0].Col1 = dt.Rows[0]["client_id"].ToString();
                                model[0].Col2 = dt.Rows[0]["client_unit_id"].ToString();
                                model[0].Col3 = dt.Rows[0]["ent_by"].ToString();
                                model[0].Col4 = dt.Rows[0]["ent_date"].ToString();
                                model[0].Col8 = "(client_id||client_unit_id||vch_num|| to_char(vch_date, 'yyyymmdd')||type) = '" + URL + "'";
                                model[0].Col10 = tm.Col10;
                                model[0].Col11 = tm.Col11;
                                model[0].Col12 = dt.Rows[0]["type"].ToString();
                                model[0].Col13 = "Update";
                                model[0].Col100 = "Update & New";
                                model[0].Col121 = "U";
                                model[0].Col122 = "<u>U</u>pdate";
                                model[0].Col123 = "Update & Ne<u>w</u>";
                                model[0].Col14 = tm.Col14;
                                model[0].Col15 = tm.Col15;
                                model[0].Col18 = dt.Rows[0]["vch_num"].ToString();
                                model[0].Col20 = dt.Rows[0]["vch_date"].ToString();
                                model[0].Col21 = dt.Rows[0]["totremark"].ToString();
                                model[0].Col22 = dt.Rows[0]["ordid"].ToString();
                                model[0].Col23 = dt.Rows[0]["mrsno"].ToString();
                                model[0].Col24 = dt.Rows[0]["mrs_date"].ToString();
                                model[0].Col9 = dt.Rows[0]["typename"].ToString();
                                sgen.SetSession(MyGuid, "KISTYPE", dt.Rows[0]["type"].ToString());
                                model[0].SelectedItems1 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["deptno"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems2 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["desig"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems3 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["locid"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems4 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["mmt"].ToString()).Distinct()).Split(',');
                                model[0].dt1 = model[0].dt1.Clone();
                                //model[0].dt1 = ((DataTable)Session["dtbase"]).Clone();
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    if (model[0].Col12.Trim() == "30") dr["sno"] = dt.Rows[i]["client_unit_id"].ToString().Trim() + dt.Rows[i]["icode"].ToString().Trim();
                                    else if (model[0].Col12.Trim() == "32") dr["sno"] = dt.Rows[i]["fstr"].ToString().Trim();
                                    dr["IName"] = dt.Rows[i]["iname"].ToString();
                                    dr["Icode"] = dt.Rows[i]["icode"].ToString();
                                    dr["UOM"] = dt.Rows[i]["uom"].ToString();
                                    dr["partno"] = dt.Rows[i]["cpartno"].ToString();
                                    dr["Qty_in_stock"] = dt.Rows[i]["qtystk"].ToString();
                                    dr["Qty_Req"] = dt.Rows[i]["qtychl"].ToString();
                                    dr["Qty_Issue"] = dt.Rows[i]["qtyout"].ToString();
                                    dr["Qty_Req_Bal"] = dt.Rows[i]["qtybal"].ToString();
                                    dr["Remark"] = dt.Rows[i]["iremark"].ToString();
                                    dr["Order_Id"] = dt.Rows[i]["iord"].ToString();//orderid
                                    dr["No_of_pkt"] = dt.Rows[i]["pktno"].ToString();//pktno
                                    dr["rate"] = dt.Rows[i]["irate"].ToString();//rate
                                    dr["amount"] = dt.Rows[i]["iamount"].ToString();//amount
                                    model[0].dt1.Rows.Add(dr);
                                }
                                mq1 = "select (i.client_unit_id||i.icode||i.loc) fstr,i.icode,it.iname,it.cpartno,um.master_name uom,i.qtystk,i.qtyout,i.iremark,i.loc,location_name(i.client_id||i.client_unit_id||i.loc) locname from btchtrans i " +
                                    "inner join item it on it.icode=i.icode and it.type='IT' and find_in_set(i.client_unit_id,it.client_unit_id)=1 " +
                                    "inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
                               "where (i.client_id||i.client_unit_id||i.vch_num|| to_char(i.vch_date, 'yyyymmdd')||i.type)='" + URL + "' and i.pono='C'";
                                dtt = sgen.getdata(userCode, mq1);
                                if (dtt.Rows.Count > 0)
                                {
                                    model[0].dt2 = model[0].dt2.Clone();
                                    for (int i = 0; i < dtt.Rows.Count; i++)
                                    {
                                        DataRow dr = model[0].dt2.NewRow();
                                        dr["sno"] = dtt.Rows[i]["fstr"].ToString();
                                        dr["IName"] = dtt.Rows[i]["iname"].ToString();
                                        dr["Icode"] = dtt.Rows[i]["icode"].ToString();
                                        dr["UOM"] = dtt.Rows[i]["uom"].ToString();
                                        dr["partno"] = dtt.Rows[i]["cpartno"].ToString();
                                        dr["Qty_in_stock"] = dtt.Rows[i]["qtystk"].ToString();
                                        dr["Qty_Issue"] = dtt.Rows[i]["qtyout"].ToString();
                                        dr["Remark"] = dtt.Rows[i]["iremark"].ToString();
                                        dr["Loc"] = dtt.Rows[i]["locname"].ToString();
                                        dr["LocCode"] = dtt.Rows[i]["loc"].ToString();
                                        model[0].dt2.Rows.Add(dr);
                                    }
                                }
                                if (model[0].Col28 == "bhmain")
                                {
                                    mq = "select group_concat(distinct a.vch_num) as fun_id, sum(a.col9) as no_of_paxes,sum(a.col10*a.col9) Total_AMount from enx_tab2 a" +
                               " where a.client_unit_id ='" + unitid_mst + "' and a.vch_num in (" + model[0].Col22 + ") and a.type='FUN'";
                                    dt = sgen.getdata(userCode, mq);
                                    if (dt.Rows.Count > 0)
                                    {
                                        model[0].Col22 = dt.Rows[0]["fun_id"].ToString();
                                        model[0].Col25 = dt.Rows[0]["no_of_paxes"].ToString();
                                        model[0].Col26 = dt.Rows[0]["Total_AMount"].ToString();
                                        decimal cal = 0;
                                        try
                                        {
                                            cal = sgen.Make_decimal(dt.Rows[0]["Total_AMount"].ToString()) / sgen.Make_decimal(dt.Rows[0]["no_of_paxes"].ToString());
                                        }
                                        catch (Exception err) { cal = 0; }
                                        model[0].Col27 = (cal).ToString();
                                    }
                                }
                            }
                            break;
                        case "NEW":
                            mq = "select master_id,upper(master_name) master_name,to_char(convert_tz(utc_timestamp(),'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') issued_date " +
                                "from master_Setting where (master_id||to_char(vch_date, 'yyyymmdd')||type) = '" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "EDMODE", "N");
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                                ViewBag.vfill = "";
                                ViewBag.scripCall = "enableForm();";
                                // string defval = "";
                                mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + dtt.Rows[0]["master_id"].ToString() + "'" + model[0].Col11.Trim() + "";
                                vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                                model[0].Col18 = vch_num;
                                model[0].Col20 = dtt.Rows[0]["issued_date"].ToString();
                                model[0].Col12 = dtt.Rows[0]["master_id"].ToString();
                                sgen.SetSession(MyGuid, "KISTYPE", dtt.Rows[0]["master_id"].ToString());
                                model[0].Col17 = "1";
                                model[0].Col9 = dtt.Rows[0]["master_name"].ToString();
                                #region getdept
                                defval = "";
                                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.dept(userCode, unitid_mst, out defval);
                                model[0].SelectedItems1 = new string[] { defval };
                                #endregion
                                #region getdesig
                                defval = "";
                                TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2 = cmd_Fun.desig(userCode, unitid_mst, out defval);
                                model[0].SelectedItems2 = new string[] { defval };
                                #endregion
                                #region getloc
                                TempData[MyGuid + "_TList3"] = model[0].TList3 = mod3 = cmd_Fun.iloc(userCode, unitid_mst, out defcall);
                                model[0].SelectedItems3 = new string[] { "" };
                                #endregion
                                #region getmmt                                
                                mod4.Add(new SelectListItem { Text = "Consume", Value = "001" });
                                mod4.Add(new SelectListItem { Text = "WIP", Value = "002" });
                                TempData[MyGuid + "_TList4"] = model[0].TList4 = mod4;
                                model[0].SelectedItems4 = new string[] { "001" };
                                #endregion
                                model[0].Chk1 = true;
                                if (model[0].Col12 == "32")
                                {
                                    Make_query(viewName.ToLower(), "Select MRS", "ITEM", "1", "", "");
                                    ViewBag.scripCall = "callFoo('Select MRS');";
                                }
                                DataTable dtg = sgen.getdata(userCode, "select '-' as SNo ,'-' as Icode,'-' as IName,'-' PartNo,'-' as UOM,'0' as Qty_in_stock,'0' as Qty_Req,'0' as Qty_issue," +
                               "'0' Qty_Req_Bal,'0' as Rate,'0' as Amount,'-' as Remark,'0' Order_Id,'0' No_of_pkt  from dual");
                                model[0].dt1 = dtg;
                                sgen.SetSession(MyGuid, "dtbase1", dtg);
                                dtg = sgen.getdata(userCode, "select '-' as SNo ,'-' as Icode,'-' as IName,'-' PartNo,'-' as UOM,'0' as Qty_in_stock,'0' as Qty_issue,'-' as Remark,'0' LocCode,'-' Loc from dual");
                                model[0].dt2 = dtg;
                                sgen.SetSession(MyGuid, "dtbase2", dtg);
                                model[0].Col60 = sgen.seekval(userCode, "select master_name from master_setting where type='CF1' and client_unit_id='" + unitid_mst + "'", "master_name");
                            }
                            break;
                        case "ITEM":
                            if (model[0].Col12 == "30")
                            {
                                mq = "select (it.client_unit_id||it.icode) fstr,it.icode as Icode,it.iname as Iname,mg.master_name as ItemGrp,it.cpartno,um.master_name as uom," +
                                    "s.closing qtystk,'0' as Qty_Req,'0' Qty_issue,'0' Qty_Req_bal,'-' remark,'0' Order_Id from item it " +
                                    "left join master_setting mg on mg.master_id = substr(it.icode, 1, 3) and mg.type = 'KIG' and find_in_set(mg.client_unit_id, it.client_unit_id)=1 " +
                                    "inner join master_setting um on um.master_id = it.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, it.client_unit_id)= 1 " +
                                    "inner join (select t.client_unit_id, t.icode, sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout, 0)) as Issued,sum(nvl(t.qtyin, 0)) - sum(nvl(t.qtyout, 0)) as closing from itransaction t " +
                                    "where trim(t.store) = 'Y' and to_date(to_char(t.vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between " +
                                    "to_date('" + year_from.Split(' ')[0].Trim() + "','" + sgen.Getsqldateformat() + "') and " +
                                    "to_date('" + model[0].Col20.Trim() + "','" + sgen.Getsqldateformat() + "') group by t.icode,t.client_unit_id ) s on it.icode = s.icode and find_in_set(s.client_unit_id, it.client_unit_id)=1 " +
                                    "where (it.client_unit_id || it.icode) in ('" + URL + "')";
                            }
                            else if (model[0].Col12 == "32")
                            {
                                mq = "select (mr.client_id||mr.client_unit_id||mr.vch_num||to_char(mr.vch_date,'yyyymmdd')||mr.type) fstr,mr.vch_num,mr.totremark remark," +
                                    "mr.pono Order_Id,to_char(convert_tz(mr.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), " + "'" + sgen.Getsqldateformat() + "') vch_date," +
                                    "mr.deptno,mr.desig from itransactionc mr where (mr.client_id || mr.client_unit_id || mr.vch_num || to_char(mr.vch_date, 'yyyymmdd') || mr.type) in ('" + URL + "')";
                            }
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                string ordid = "";
                                if (model[0].Col12 == "30") { ordid = model[0].Col22; }
                                else if (model[0].Col12 == "32")
                                {
                                    model[0].Col22 = dt.Rows[0]["Order_Id"].ToString().Trim();
                                    model[0].Col21 = dt.Rows[0]["remark"].ToString().Trim();
                                    model[0].Col23 = dt.Rows[0]["vch_num"].ToString().Trim();
                                    model[0].Col24 = dt.Rows[0]["vch_date"].ToString().Trim();
                                    model[0].Col50 = dt.Rows[0]["fstr"].ToString().Trim();
                                    ordid = dt.Rows[0]["Order_Id"].ToString().Trim();
                                    model[0].SelectedItems1 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["deptno"].ToString()).Distinct()).Split(',');
                                    model[0].SelectedItems2 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["desig"].ToString()).Distinct()).Split(',');
                                }
                                if (model[0].Col12 == "30")
                                {
                                    if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt1.Rows.RemoveAt(0); }
                                    for (int i = 0; i < dt.Rows.Count; i++)
                                    {
                                        DataRow dr = model[0].dt1.NewRow();
                                        dr["SNo"] = dt.Rows[i]["fstr"].ToString();
                                        dr["Icode"] = dt.Rows[i]["icode"].ToString();
                                        dr["IName"] = dt.Rows[i]["iname"].ToString();
                                        dr["PARTNO"] = dt.Rows[i]["cpartno"].ToString();
                                        dr["UOM"] = dt.Rows[i]["uom"].ToString();
                                        dr["Qty_in_stock"] = dt.Rows[i]["qtystk"].ToString();
                                        dr["Qty_Req"] = dt.Rows[i]["Qty_Req"].ToString();
                                        dr["Qty_issue"] = dt.Rows[i]["Qty_Req"].ToString();
                                        dr["Qty_Req_Bal"] = dt.Rows[i]["Qty_Req_bal"].ToString();
                                        dr["rate"] = dt.Rows[i]["Qty_Req_bal"].ToString();
                                        dr["Remark"] = "-";
                                        dr["Order_Id"] = ordid;
                                        model[0].dt1.Rows.Add(dr);
                                    }
                                }
                            }
                            break;
                        case "IMRS":
                            if (model[0].Col12 == "32")
                            {
                                mq = "select (mr.client_id||mr.client_unit_id||mr.vch_num||it.icode||to_char(mr.vch_date,'yyyymmdd')||mr.type) as fstr, mr.icode ,it.iname, it.cpartno,mr.vch_num mrs_no,to_char(mr.vch_date,'" + sgen.Getsqldateformat() + "') Req_Date,um.master_name as uom," +
                                    "dp.master_name Dept,dg.master_name Desig,nvl(s.closing,'0') as qtystk,mr.pono as Order_Id,mr.issued_qty,mr.bal_qty Qty_Req " +
                                    "from item it inner join (select distinct a.vch_num,a.type,a.icode,a.pono,a.client_id,a.client_unit_id,a.vch_date,a.Qty_Req,a.desig," +
                                    "a.deptno,sum(a.issued_qty) as issued_qty,(a.Qty_Req - nvl(sum(a.issued_qty), '0')) as bal_qty from(select " +
                                    "mr.vch_num,mr.type,mr.icode,mr.pono,mr.client_id,mr.client_unit_id,mr.vch_date,mr.desig,mr.deptno, mr.qtychl Qty_Req," +
                                    "nvl(iv.qtyout,'0') as issued_qty from itransactionc mr left join itransaction iv on iv.icode=mr.icode and iv.chlno " +
                                    "= mr.vch_num and iv.type = '32' and iv.client_unit_id = '" + unitid_mst + "' " +
                                    " where upper(mr.type) in ('3A', '3B') and mr.client_unit_id = '" + unitid_mst + "' " +
                                    "union all select mr.vch_num,mr.type,mr.icode,mr.pono,mr.client_id,mr.client_unit_id,mr.vch_date,mr.desig,mr.deptno," +
                                    "mr.qtychl Qty_Req,nvl(iv.col11,'0') as closed_qty from itransactionc mr left join enx_tab iv on iv.col7=mr.icode and " +
                                    "iv.col12 = mr.vch_num and iv.type = 'CPM' and iv.client_unit_id = " +
                                    "'" + unitid_mst + "'  where upper(mr.type) in ('3A', '3B') and mr.client_unit_id = '" + unitid_mst + "') " +
                                    "a group by(a.vch_num,a.type,a.icode,a.pono,a.client_id,a.client_unit_id,a.vch_date,a.desig,a.deptno,a.Qty_Req)) mr on " +
                                    "mr.icode=it.icode and find_in_set(mr.client_unit_id,it.client_unit_id)=1 inner join master_setting dp" +
                                    " on dp.master_id = mr.deptno and dp.type = 'MDP' and " +
                                    "find_in_set(dp.client_unit_id,'" + unitid_mst + "')= 1 inner join master_setting dg on dg.master_id = mr.desig and dg.type" +
                                    " = 'MDG' and find_in_set(dg.client_unit_id, '" + unitid_mst + "')" +
                                    " = 1 left join master_setting um on um.master_id = it.uom and um.type = 'UMM' " +
                                    "and find_in_set(um.client_unit_id, it.client_unit_id)= 1 left join(select t.client_unit_id, t.icode, sum(nvl(t.qtyin,0))" +
                                    " as Received,sum(nvl(t.qtyout, 0)) as Issued,sum(nvl(t.qtyin, 0)) - sum(nvl(t.qtyout, 0)) as closing from itransaction t" +
                                    " where trim(t.store) = 'Y' group by t.icode,t.client_unit_id ) s on it.icode = s.icode and find_in_set(s.client_unit_id,it.client_unit_id)=1 where " +
                                    "(it.client_id||it.client_unit_id||mr.vch_num||it.icode||mr.type||to_char(it.vch_date,'yyyymmdd')||it.type) in ('" + URL + "')";
                            }
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt1.Rows.RemoveAt(0); }
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["SNo"] = dt.Rows[i]["fstr"].ToString();
                                    dr["Icode"] = dt.Rows[i]["icode"].ToString();
                                    dr["IName"] = dt.Rows[i]["iname"].ToString();
                                    dr["PARTNO"] = dt.Rows[i]["cpartno"].ToString();
                                    dr["UOM"] = dt.Rows[i]["uom"].ToString();
                                    dr["Qty_in_stock"] = dt.Rows[i]["qtystk"].ToString();
                                    dr["Qty_Req"] = dt.Rows[i]["Qty_Req"].ToString();
                                    dr["Qty_issue"] = "0";
                                    dr["Qty_Req_Bal"] = "0";
                                    dr["Remark"] = "-";
                                    dr["Order_Id"] = dt.Rows[i]["Order_Id"].ToString(); ;
                                    model[0].dt1.Rows.Add(dr);
                                }
                            }
                            break;
                        case "PRINT":
                            mq = "select a.totremark, REPLACE(ud.FIRST_NAME|| ' '|| ud.MIDDLE_NAME|| ' '|| ud.last_name,'0','') as created_by ,it.partname," +
                                "nvl(d.master_name,'-') as deptname, location_name(a.client_id||a.client_unit_id||bt.loc) loc,a.vch_num,a.icode,it.iname,it.cpartno," +
                                "um.master_name UOM,um.master_name as UOM2,hsn.master_name hsn," +
                                "to_char(convert_tz(a.vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') vch_date1," +
                                "to_char(a.chldate,'" + sgen.Getsqldateformat() + "') chldate,a.chlno,a.pono,it.cuom," +
                                "a.qtychl,a.qtyout,a.qtybal " +
                                "from itransaction a " +
                                "inner join item it on a.icode=it.icode and it.type='IT' and find_in_set(a.client_unit_id,it.client_unit_id)=1 " +
                                "inner join btchtrans bt on a.icode=bt.icode and a.vch_num=bt.vch_num and a.type=bt.type and a.client_unit_id=bt.client_unit_id " +
                                "inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,'" + unitid_mst + "')=1 " +
                                "left join master_setting um2 on um2.master_id=it.uom2 and um2.type='UMM' and find_in_set(um2.client_unit_id,'" + unitid_mst + "')=1 " +
                                "inner join master_setting hsn on hsn.master_id=it.hsno and hsn.type='HSN' and find_in_set(hsn.client_unit_id,'" + unitid_mst + "')=1 " +
                                "left join master_setting d on d.master_id=a.deptno and d.type='MDP' and find_in_set(d.client_unit_id,'" + unitid_mst + "')=1 " +
                                "inner join user_details ud on a.ent_by = ud.vch_num and ud.type = 'CPR' " +
                                "where (a.client_id||a.client_unit_id||a.vch_num|| to_char(a.vch_date, 'yyyymmdd')||a.type)='" + URL + "'";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                DataTable dt2 = new DataTable();
                                DataTable qrdt = new DataTable();
                                qrdt = dt.Copy();
                                qrdt.Columns.Add("qrimg", typeof(Byte[]));
                                foreach (DataRow dr in qrdt.Rows)
                                {
                                    string code = dr["icode"].ToString() + "\n" + dr["iname"].ToString();
                                    QRCodeGenerator qrGenerator = new QRCodeGenerator();
                                    QRCodeGenerator.QRCode qrCode = qrGenerator.CreateQrCode(code, QRCodeGenerator.ECCLevel.Q);
                                    System.Web.UI.WebControls.Image imgBarCode = new System.Web.UI.WebControls.Image();
                                    imgBarCode.Height = 150;
                                    imgBarCode.Width = 150;
                                    using (Bitmap bitMap = qrCode.GetGraphic(20))
                                    {
                                        using (MemoryStream ms = new MemoryStream())
                                        {
                                            bitMap.Save(ms, System.Drawing.Imaging.ImageFormat.Png);
                                            byte[] byteImage = ms.ToArray();
                                            dr["qrimg"] = byteImage;
                                            //imgBarCode.ImageUrl = "data:image/png;base64," + Convert.ToBase64String(byteImage);
                                        }
                                        //plBarCode.Controls.Add(imgBarCode);
                                    }
                                }
                                qrdt.AcceptChanges();
                                qrdt.TableName = "prepcur";
                                sgen.open_report_bydt_xml(userCode, qrdt, "issue_1", "Issue Detail");
                                ViewBag.scripCall += "showRptnew('Issue Detail');disableForm();";
                            }
                            break;
                        case "ITEM2":
                            mq = "select (it.client_unit_id||it.icode||s.loc) fstr,it.icode as Icode,it.iname as Iname,it.cpartno,um.master_name as uom," +
"location_name('" + clientid_mst + "'||'" + unitid_mst + "'||s.loc) as LocName,s.loc,s.closing,'0' qtyissue,'-' remark from item it " +
"inner join itbal itb on it.icode=itb.icode and it.type=itb.type and find_in_set(itb.client_unit_id,it.client_unit_id)=1 " +
"inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
"inner join (select t.client_unit_id,t.loc,t.icode,sum(nvl(t.qtyin,0)) as Received,sum(nvl(t.qtyout,0)) as Issued," +
"sum(nvl(t.qtyin,0))-sum(nvl(t.qtyout,0)) as closing from btchtrans t where length(trim(t.loc))>6 and trim(t.store)='Y' group by t.icode,t.client_unit_id,t.loc ) s on " +
"it.icode=s.icode and find_in_set(s.client_unit_id,it.client_unit_id)=1 where length(trim(it.icode))>8 and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 " +
"and (it.client_unit_id||it.icode||s.loc) in ('" + URL + "')";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                if (model[0].dt2.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt2.Rows.RemoveAt(0); }
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt2.NewRow();
                                    dr["SNo"] = dt.Rows[i]["fstr"].ToString();
                                    dr["ICode"] = dt.Rows[i]["icode"].ToString();
                                    dr["IName"] = dt.Rows[i]["iname"].ToString();
                                    dr["PartNo"] = dt.Rows[i]["cpartno"].ToString();
                                    dr["Uom"] = dt.Rows[i]["uom"].ToString();
                                    dr["Qty_In_Stock"] = dt.Rows[i]["closing"].ToString();
                                    dr["Qty_Issue"] = dt.Rows[i]["qtyissue"].ToString();
                                    dr["Remark"] = dt.Rows[i]["remark"].ToString();
                                    dr["LocCode"] = dt.Rows[i]["loc"].ToString();
                                    dr["Loc"] = dt.Rows[i]["LocName"].ToString();
                                    model[0].dt2.Rows.Add(dr);
                                }
                                model[0].dt2.AcceptChanges();
                            }
                            break;
                        case "FUN":
                            //mq = "select group_concat(distinct a.vch_num) as fun_id,  sum(a.col9) as no_of_paxes,sum(a.col10*a.col9) Total_AMount from enx_tab2 a" +
                            //    " where (a.client_id||a.client_unit_id||a.vch_num|| to_char(a.vch_date, 'yyyymmdd')||a.type) in ('"+URL+"') ";
                            mq = "select group_concat(distinct a.vch_num) as fun_id,  sum(a.col9) as no_of_paxes,sum(a.col10*a.col9) Total_AMount," +
                                "ROUND((sum(a.col10 * a.col9) / sum(a.col9)), 2) as cost_perpax from enx_tab2 a" +
                                " where (a.client_id || a.client_unit_id || a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.type) in ('" + URL + "') ";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                model[0].Col22 = dt.Rows[0]["fun_id"].ToString();
                                model[0].Col25 = dt.Rows[0]["no_of_paxes"].ToString();
                                model[0].Col26 = dt.Rows[0]["Total_AMount"].ToString();
                                model[0].Col27 = dt.Rows[0]["cost_perpax"].ToString();
                                //model[0].Col27 = (sgen.Make_decimal( dt.Rows[0]["Total_AMount"].ToString())/ sgen.Make_decimal(dt.Rows[0]["no_of_paxes"].ToString())).ToString();
                                //model[0].Col27 = Convert.ToDouble((sgen.Make_decimal( dt.Rows[0]["Total_AMount"].ToString())/ sgen.Make_decimal(dt.Rows[0]["no_of_paxes"].ToString()))).ToString();
                            }
                            break;
                    }
                    break;
                    #endregion
            }
            return model;
        }
        #endregion
        //========================MRN==================
        #region mrn        
        #region mrn
        public ActionResult mrn()
        {
            // MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            FillMst("");
            List<Tmodelmain> model = new List<Tmodelmain>();
            List<SelectListItem> mod1 = new List<SelectListItem>();
            model = getload(model);
            model[0].Col10 = "itransaction";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            // shiv why gst every time
            model[0].Col18 = sgen.seekval(userCode, "select unit_gstin_no from company_unit_profile where cup_id='" + unitid_mst + "'", "unit_gstin_no");
            model[0].Col55 = sgen.seekval(userCode, "select param1 from controls where id='000015' AND TYPE='LOC'", "param1");
            sgen.SetSession(MyGuid, "LOCCHK", model[0].Col55);
            DataTable dt = sgen.getdata(userCode, "select '' Item,'1' as  SNo ,'-' as Icode,'-' as IName,'-' PARTNO,'-'  HSN,'-' as UOM,'0' TaxRate,'0' Qty_Chl,'0' Qty_In,'0' as IRate," +
                "'-' disc_type,'0' as disc_rate,'0' IAmount,'0' TaxAmount,'0' discAmount,'0' LineAmount,'0' NoOfPKT_Box,'-' as Remark,'0' PO_Number,'-' PO_Date,'-' as Batchno,'-' as Location,'0' Qtystk from dual");
            model[0].dt1 = dt;
            sgen.SetSession(MyGuid, "KMRN_DT", dt);
            sgen.SetSession(MyGuid, "KMRNTYPE", null);
            model[0].TList1 = mod1;
            model[0].SelectedItems1 = new string[] { "" };
            DataTable dtb = (DataTable)sgen.GetSession(MyGuid, "URIGHTS");
            try
            {
                dtb = dtb.Select("m_id='" + model[0].Col14 + "'").CopyToDataTable();
                if (dtb.Rows.Count > 0)
                {
                    model[0].Col133 = dtb.Rows[0]["btnnew"].ToString();
                    model[0].Col134 = dtb.Rows[0]["btnedit"].ToString();
                    model[0].Col135 = dtb.Rows[0]["btnview"].ToString();
                    //  tm1.Col136 = dtb.Rows[0]["btnextend"].ToString();
                }
            }
            catch (Exception ex) { }
            ModelState.Clear();
            return View(model);
        }
        [HttpPost]
        public ActionResult mrn(List<Tmodelmain> model, string command, string hfrow, string hftable, HttpPostedFileBase upd1)
        {
            try
            {

                string url = "";
                FillMst(model[0].Col15);
                DataTable dtm = sgen.settable(hftable);
                model[0].dt1 = dtm;
                var tm = model.FirstOrDefault();
                List<SelectListItem> mod1 = new List<SelectListItem>();
                TempData[MyGuid + "_TList1"] = model[0].TList1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                //TempData[MyGuid + "_TList1"] = model[0].TList1;
                if (tm.SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    if (model[0].Col134 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for edit entries of this form, please contact your admin', 2);disableForm();";
                        return View(model);
                    }
                    if (sgen.GetSession(MyGuid, "mrndelrno") != null) btnval = "CHRGDEL";
                    else if (sgen.GetSession(MyGuid, "btnval") != null) btnval = sgen.GetSession(MyGuid, "btnval").ToString();
                    model = CallbackFun(btnval, "N", actionName, controllerName, model);
                    if (btnval.Trim().ToUpper().Equals("PRINT"))
                    {
                        ViewBag.vnew = "";
                        ViewBag.vedit = "";
                        ViewBag.vsave = "disabled='disabled'";
                        ViewBag.vsavenew = "disabled='disabled'";
                    }
                    else


                    //FillMst(model[0].Col15);
                    //DataTable dtm = sgen.settable(hftable);
                    //model[0].dt1 = dtm;
                    //var tm = model.FirstOrDefault();
                    //List<SelectListItem> mod1 = new List<SelectListItem>();
                    //model[0].TList1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                    //TempData[MyGuid + "_TList1"] = model[0].TList1;
                    //if (tm.SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                    //if (command == "Cancel")

                    //{
                    //    return CancelFun(model);
                    //}
                    //else if (command == "Callback")
                    //{
                    //    if (model[0].Col134 == "N")
                    //    {
                    //        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for edit entries of this form, please contact your admin', 2);disableForm();";
                    //        return View(model);
                    //    }
                    //    if (sgen.GetSession(MyGuid, "mrndelrno") != null) btnval = "CHRGDEL";
                    //    else if (sgen.GetSession(MyGuid, "btnval") != null) btnval = sgen.GetSession(MyGuid, "btnval").ToString();
                    //    model = CallbackFun(btnval, "N", actionName, controllerName, model);
                    //    if (btnval.Trim().ToUpper().Equals("PRINT"))
                    //    {
                    //        ViewBag.vnew = "";
                    //        ViewBag.vedit = "";
                    //        ViewBag.vsave = "disabled='disabled'";
                    //        ViewBag.vsavenew = "disabled='disabled'";
                    //    }
                    //    else
                    {
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                    }
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {
                    try
                    {
                        if (model[0].Col133 == "N")
                        {
                            ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for save company document, please contact your admin', 2);";
                            return View(model);
                        }
                        if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-"))
                        {
                            ViewBag.scripCall += "showmsgJS(1,'Please Select item in grid-1', 2);";
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            return View(model);
                        }
                        if (model[0].dt1.Rows[0]["LOCATION"].ToString().Trim().Equals("-"))
                        {
                            ViewBag.scripCall += "showmsgJS(1,'Please Fill Location In Grid-1', 2);";
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            return View(model);
                        }
                        Satransaction sat1 = new Satransaction(userCode, MyGuid);
                        string currdate = sgen.server_datetime(userCode);
                        if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                        {
                            mq1 = " and vch_num<>'" + model[0].Col16.Trim() + "'";
                            isedit = true;
                            vch_num = model[0].Col16;
                            vch_num = model[0].Col47;
                        }
                        else
                        {
                            mq1 = "";
                            isedit = false;
                            mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                            vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        }
                        if (model[0].Col28 == "" || model[0].Col28 == null)
                        {
                            mq = "select invno,vch_num,to_char(convert_tz(vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') vch_date from itransaction where " +
                                "client_unit_id='" + unitid_mst + "' and acode='" + model[0].Col49 + "' and invno='" + model[0].Col28 + "' and vch_date between " +
                                "to_date('" + year_from + "','" + sgen.Getsqldatetimeformat() + "') and to_date('" + year_to + "','" + sgen.Getsqldatetimeformat() + "') " + mq1 + "";
                            DataTable dtchk = sgen.getdata(userCode, mq);
                            if (dtchk.Rows.Count > 0)
                            {
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                                ViewBag.scripCall += "showmsgJS(1, 'This invoice no. is already attached in mrn no=" + dtchk.Rows[0]["vch_num"].ToString() + " on " + dtchk.Rows[0]["vch_date"].ToString() + "', 2);";
                                return View(model);
                            }
                        }
                        DataTable dataTable = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                        DataTable dtbtch = cmd_Fun.GetStructure(userCode, "btchtrans");
                        DataTable dtv = cmd_Fun.GetStructure(userCode, "vouchers");
                        DataTable dtqa = new DataTable();
                        for (int i = 0; i < model[0].dt1.Rows.Count; i++)
                        {
                            if (isedit)
                            {
                                string fstr = model[0].Col2 + model[0].Col16 + model[0].dt1.Rows[i]["icode"].ToString() + "Q" + model[0].Col12;
                                mq = "select t.icode,sum(nvl(t.qtyin,0)) Received,sum(nvl(t.qtyout, 0)) Issued,sum(nvl(t.qtyin, 0)) - sum(nvl(t.qtyout, 0)) qtystk " +
                                    "from itransaction t where trim(t.store) = 'Y' and t.client_unit_id='" + unitid_mst + "' and t.icode='" + model[0].dt1.Rows[i]["icode"].ToString() + "' " +
                                    "and (client_unit_id||vch_num||icode||type)<>'" + fstr + "' group by t.icode";
                                mq = sgen.seekval(userCode, mq, "qtystk");
                                int curstk = (sgen.Make_int(mq) + sgen.Make_int(model[0].dt1.Rows[i][9].ToString()));
                                if (curstk.ToString().Trim().Contains("-"))
                                {
                                    ViewBag.vnew = "disabled='disabled'";
                                    ViewBag.vedit = "disabled='disabled'";
                                    ViewBag.vsave = "";
                                    ViewBag.vsavenew = "";
                                    ViewBag.scripCall += "showmsgJS(1, 'You cannot set your stock to negative (-ve)', 2);";
                                    return View(model);
                                }
                            }
                            #region dr
                            DataRow dr = dataTable.NewRow();
                            dr["type"] = model[0].Col12;
                            dr["vch_num"] = vch_num.Trim();
                            dr["doc_type"] = vch_num + model[0].Col12 + model[0].dt1.Rows[i][21].ToString(); //doc + type
                            dr["vch_date"] = sgen.Savedate(model[0].Col48, true);
                            dr["acode"] = model[0].Col49;
                            dr["chlno"] = model[0].Col23;
                            dr["chldate"] = sgen.Savedate(model[0].Col24, false);
                            dr["tmode"] = model[0].Col25;
                            dr["ewayno"] = model[0].Col26;
                            dr["ewaydate"] = sgen.Savedate(model[0].Col27, false);
                            dr["invno"] = model[0].Col28;
                            dr["invdate"] = sgen.Savedate(model[0].Col29, false);
                            //dt====
                            dr["rno"] = model[0].dt1.Rows[i][1].ToString();
                            dr["icode"] = model[0].dt1.Rows[i][2].ToString();
                            dr["iname"] = model[0].dt1.Rows[i][3].ToString();
                            dr["cpartno"] = model[0].dt1.Rows[i][4].ToString();
                            dr["hsno"] = model[0].dt1.Rows[i][5].ToString();
                            dr["uom"] = model[0].dt1.Rows[i][6].ToString();
                            dr["taxrate"] = model[0].dt1.Rows[i][7].ToString();
                            dr["qtychl"] = model[0].dt1.Rows[i][8].ToString().Trim();
                            dr["qtyrcvd"] = model[0].dt1.Rows[i][9].ToString().Trim();
                            dr["irate"] = sgen.Round2Decimals(sgen.Make_decimal(model[0].dt1.Rows[i][10].ToString().Trim()), 2).ToString().Trim();
                            dr["disctype"] = model[0].dt1.Rows[i][11].ToString();
                            dr["discrate"] = model[0].dt1.Rows[i][12].ToString();
                            dr["iamount"] = sgen.Round2Decimals(sgen.Make_decimal(model[0].dt1.Rows[i][13].ToString().Trim()), 2).ToString().Trim();
                            dr["taxamt"] = sgen.Round2Decimals(sgen.Make_decimal(model[0].dt1.Rows[i][14].ToString().Trim()), 2).ToString().Trim();
                            dr["discamt"] = model[0].dt1.Rows[i][15].ToString();
                            dr["lineamount"] = sgen.Round2Decimals(sgen.Make_decimal(model[0].dt1.Rows[i][16].ToString().Trim()), 2).ToString().Trim();
                            //dr["pktno"] = model[0].dt1.Rows[i][17].ToString();//noofpkt/box
                            dr["pktno"] = model[0].dt1.Rows[i][17].ToString() == "" ? "0" : model[0].dt1.Rows[i][17].ToString();//noofpkt/box
                            dr["iremark"] = model[0].dt1.Rows[i][18].ToString();
                            dr["pono"] = model[0].dt1.Rows[i][19].ToString();
                            dr["podate"] = sgen.Savedate(model[0].dt1.Rows[i][20].ToString(), true);
                            dr["btchno"] = model[0].dt1.Rows[i][21].ToString();

                            if (isedit)
                            { mq0 = model[0].dt1.Rows[i][23].ToString(); }
                            else { mq0 = "0"; }

                            dr["qtystk"] = mq0;
                            dr["gatein_no"] = model[0].SelectedItems1.FirstOrDefault();
                            dr["store"] = "N";
                            dr["inspected"] = "N";
                            dr["col1"] = model[0].Col60;
                            dr["col2"] = model[0].Col61;
                            dr["col3"] = model[0].Col62;
                            dr["col4"] = model[0].Col66;
                            dr["col5"] = model[0].Col67;
                            dr["col6"] = model[0].Col68;
                            dr["dt1"] = sgen.Make_date_S(model[0].Col63);
                            dr["dt2"] = sgen.Make_date_S(model[0].Col64);
                            dr["dt3"] = sgen.Make_date_S(model[0].Col65);
                            //======
                            dr["totremark"] = model[0].Col31;
                            dr["cond"] = model[0].Col32;
                            dr["basicamt"] = model[0].Col33;
                            dr["deptno"] = model[0].Col80;
                            //dr["gdisc"] = model[0].Col34;
                            //dr["gfreight"] = model[0].Col35;
                            //dr["insurance"] = model[0].Col36;
                            //dr["ginstlchrg"] = model[0].Col37;
                            //dr["gserchrg"] = model[0].Col38;
                            //dr["gamc"] = model[0].Col39;
                            //dr["gloadchrg"] = model[0].Col40;
                            //dr["gothrchrg"] = model[0].Col41;
                            //dr["gtaxamt"] = model[0].Col42;
                            dr["igst"] = model[0].Col34;
                            dr["cgst"] = model[0].Col35;
                            dr["sgst"] = model[0].Col36;
                            dr["gamt"] = model[0].Col37;
                            dr["gigst"] = model[0].Col38;
                            dr["gcgst"] = model[0].Col39;
                            dr["gsgst"] = model[0].Col40;
                            dr["netamt"] = model[0].Col50;
                            dr["vehno"] = model[0].Col53;
                            dr["rec_id"] = "0";
                            // shiv
                            if (isedit)
                            {
                                dr["client_id"] = model[0].Col1.Trim();
                                dr["client_unit_id"] = model[0].Col2.Trim();
                                dr["ent_by"] = model[0].Col3;
                                dr["ent_date"] = model[0].Col4;
                                dr["edit_by"] = userid_mst;
                                dr["edit_date"] = currdate;
                            }
                            else
                            {
                                dr["client_id"] = clientid_mst;
                                dr["client_unit_id"] = unitid_mst;
                                dr["ent_by"] = userid_mst;
                                dr["ent_date"] = currdate;
                                dr["edit_by"] = "-";
                                dr["edit_date"] = currdate;
                            }
                            #endregion
                            dtqa = sgen.getdata(userCode, "select it.qa, itb.loc,location_name(itb.client_id||itb.client_unit_id||itb.loc) as locname " +
                                " from itbal itb inner join item it on itb.icode=it.Icode  where itb.type='IT' and itb.client_unit_id='" + unitid_mst + "' and itb.icode='" + model[0].dt1.Rows[i][2].ToString().Trim() + "'");
                            if (dtqa.Rows[0]["qa"].ToString().Trim() == "N")
                            {
                                //Auto quality
                                dr["inspected"] = "A";
                                #region dr2
                                DataRow dr2 = dataTable.NewRow();
                                dr2["type"] = "Q" + model[0].Col12;
                                dr2["vch_num"] = vch_num.Trim();
                                dr2["vch_date"] = sgen.Savedate(model[0].Col48, true);
                                dr2["acode"] = model[0].Col49;
                                dr2["chlno"] = model[0].Col23;
                                dr2["chldate"] = sgen.Savedate(model[0].Col24, false);
                                dr2["tmode"] = model[0].Col25;
                                dr2["ewayno"] = model[0].Col26;
                                dr2["ewaydate"] = sgen.Savedate(model[0].Col27, false);
                                dr2["invno"] = model[0].Col28;
                                dr2["invdate"] = sgen.Savedate(model[0].Col29, false);
                                //dt===
                                dr2["rno"] = model[0].dt1.Rows[i][1].ToString();
                                dr2["icode"] = model[0].dt1.Rows[i][2].ToString();
                                dr2["iname"] = model[0].dt1.Rows[i][3].ToString();
                                dr2["cpartno"] = model[0].dt1.Rows[i][4].ToString();
                                dr2["hsno"] = model[0].dt1.Rows[i][5].ToString();
                                dr2["uom"] = model[0].dt1.Rows[i][6].ToString();
                                dr2["taxrate"] = model[0].dt1.Rows[i][7].ToString();
                                dr2["qtychl"] = model[0].dt1.Rows[i][8].ToString();
                                dr2["qtyin"] = model[0].dt1.Rows[i][9].ToString();
                                dr2["irate"] = sgen.Round2Decimals(sgen.Make_decimal(model[0].dt1.Rows[i][10].ToString().Trim()), 2).ToString().Trim();
                                dr2["disctype"] = model[0].dt1.Rows[i][11].ToString();
                                dr2["discrate"] = model[0].dt1.Rows[i][12].ToString();
                                dr2["iamount"] = sgen.Round2Decimals(sgen.Make_decimal(model[0].dt1.Rows[i][13].ToString().Trim()), 2).ToString().Trim();
                                dr2["taxamt"] = sgen.Round2Decimals(sgen.Make_decimal(model[0].dt1.Rows[i][14].ToString().Trim()), 2).ToString().Trim();
                                dr2["discamt"] = model[0].dt1.Rows[i][15].ToString();
                                dr2["lineamount"] = sgen.Round2Decimals(sgen.Make_decimal(model[0].dt1.Rows[i][16].ToString().Trim()), 2).ToString().Trim();
                                //dr2["pktno"] = model[0].dt1.Rows[i][17].ToString();
                                dr2["pktno"] = model[0].dt1.Rows[i][17].ToString() == "" ? "0" : model[0].dt1.Rows[i][17].ToString();//noofpkt/box
                                dr2["iremark"] = model[0].dt1.Rows[i][18].ToString();
                                dr2["pono"] = model[0].dt1.Rows[i][19].ToString();
                                dr2["podate"] = sgen.Savedate(model[0].dt1.Rows[i][20].ToString(), true);
                                dr2["btchno"] = model[0].dt1.Rows[i][21].ToString();
                                if (isedit)
                                { mq0 = model[0].dt1.Rows[i][23].ToString(); }
                                else { mq0 = "0"; }
                                dr2["qtystk"] = mq0;
                                dr2["store"] = "Y";
                                dr2["inspected"] = "Y";
                                //=======
                                dr["col1"] = model[0].Col60;
                                dr["col2"] = model[0].Col61;
                                dr["col3"] = model[0].Col62;
                                dr["col4"] = model[0].Col66;
                                dr["col5"] = model[0].Col67;
                                dr["col6"] = model[0].Col68;
                                dr["dt1"] = sgen.Make_date_S(model[0].Col63);
                                dr["dt2"] = sgen.Make_date_S(model[0].Col64);
                                dr["dt3"] = sgen.Make_date_S(model[0].Col65);
                                dr2["totremark"] = model[0].Col31;
                                dr2["cond"] = model[0].Col32;
                                dr2["basicamt"] = model[0].Col33;
                                //dr2["gdisc"] = model[0].Col34;
                                //dr2["gfreight"] = model[0].Col35;
                                //dr2["insurance"] = model[0].Col36;
                                //dr2["ginstlchrg"] = model[0].Col37;
                                //dr2["gserchrg"] = model[0].Col38;
                                //dr2["gamc"] = model[0].Col39;
                                //dr2["gloadchrg"] = model[0].Col40;
                                //dr2["gothrchrg"] = model[0].Col41;
                                //dr2["gtaxamt"] = model[0].Col42;
                                dr["igst"] = model[0].Col34;
                                dr["cgst"] = model[0].Col35;
                                dr["sgst"] = model[0].Col36;
                                dr["gamt"] = model[0].Col37;
                                dr["gigst"] = model[0].Col38;
                                dr["gcgst"] = model[0].Col39;
                                dr["gsgst"] = model[0].Col40;
                                dr["netamt"] = model[0].Col50;
                                dr2["vehno"] = model[0].Col53;
                                dr2["rec_id"] = "0";
                                if (isedit)
                                {
                                    dr2["client_id"] = model[0].Col1.Trim();
                                    dr2["client_unit_id"] = model[0].Col2.Trim();
                                    dr2["ent_by"] = model[0].Col3;
                                    dr2["ent_date"] = model[0].Col4;
                                    dr2["edit_by"] = userid_mst;
                                    dr2["edit_date"] = currdate;
                                }
                                else
                                {
                                    dr2["client_id"] = clientid_mst;
                                    dr2["client_unit_id"] = unitid_mst;
                                    dr2["ent_by"] = userid_mst;
                                    dr2["ent_date"] = currdate;
                                    dr2["edit_by"] = "-";
                                    dr2["edit_date"] = currdate;
                                }
                                dataTable.Rows.Add(dr2);
                                #endregion
                                //location
                                if (model[0].Col55.Trim() == "Y")
                                {
                                    #region btch
                                    DataRow dr3 = dtbtch.NewRow();
                                    dr3["vch_num"] = vch_num.Trim();
                                    dr3["type"] = "Q" + model[0].Col12;
                                    dr3["doc_type"] = vch_num + model[0].Col12 + model[0].dt1.Rows[i][21].ToString(); //doc + type

                                    dr3["vch_date"] = sgen.Savedate(model[0].Col48, true);
                                    dr3["rno"] = model[0].dt1.Rows[i][1].ToString();
                                    dr3["icode"] = model[0].dt1.Rows[i][2].ToString();
                                    dr3["iname"] = model[0].dt1.Rows[i][3].ToString();
                                    dr3["cpartno"] = model[0].dt1.Rows[i][4].ToString();
                                    dr3["uom"] = model[0].dt1.Rows[i][6].ToString();
                                    dr3["qtyin"] = model[0].dt1.Rows[i][9].ToString();
                                    if (isedit)
                                    { mq0 = model[0].dt1.Rows[i][23].ToString(); }
                                    else { mq0 = "0"; }
                                    dr3["qtystk"] = mq0;
                                    dr3["iremark"] = model[0].dt1.Rows[i][17].ToString();
                                    dr3["loc"] = dtqa.Rows[0]["loc"].ToString().Trim();
                                    dr3["locname"] = dtqa.Rows[0]["locname"].ToString().Trim();
                                    dr3["store"] = "Y";
                                    dr3["pktno"] = model[0].dt1.Rows[i][17].ToString() == "" ? "0" : model[0].dt1.Rows[i][17].ToString();//noofpkt/box
                                    dr3["rec_id"] = "0";
                                    // shiv
                                    if (isedit)
                                    {
                                        dr3["client_id"] = model[0].Col1.Trim();
                                        dr3["client_unit_id"] = model[0].Col2.Trim();
                                        dr3["ent_by"] = model[0].Col3;
                                        dr3["ent_date"] = model[0].Col4;
                                        dr3["edit_by"] = userid_mst;
                                        dr3["edit_date"] = currdate;
                                    }
                                    else
                                    {
                                        dr3["client_id"] = clientid_mst;
                                        dr3["client_unit_id"] = unitid_mst;
                                        dr3["ent_by"] = userid_mst;
                                        dr3["ent_date"] = currdate;
                                        dr3["edit_by"] = "-";
                                        dr3["edit_date"] = currdate;
                                    }
                                    dtbtch.Rows.Add(dr3);
                                    #endregion
                                }
                            }
                            mq0 = "select nonstk from item where type='IT' and client_unit_id='" + unitid_mst + "' and icode='" + model[0].dt1.Rows[i][2].ToString().Trim() + "'";
                            mq0 = sgen.seekval(userCode, mq0, "nonstk");
                            if (mq0.Trim() == "Y")
                            {
                                #region auto issue
                                DataRow dra = dataTable.NewRow();
                                dra["vch_num"] = vch_num.Trim();
                                dra["type"] = "30";//issue without requisition
                                dra["vch_date"] = sgen.Savedate(model[0].Col48, true);
                                dra["deptno"] = "";
                                dra["desig"] = "";
                                dra["totremark"] = model[0].Col31;
                                dra["cond"] = "";//orderid                           
                                dra["icode"] = model[0].dt1.Rows[i][2].ToString();
                                dra["iname"] = model[0].dt1.Rows[i][3].ToString();
                                dra["cpartno"] = model[0].dt1.Rows[i][4].ToString();
                                dra["uom"] = model[0].dt1.Rows[i][6].ToString();
                                dra["qtystk"] = model[0].dt1.Rows[i][9].ToString().Trim();//qtyin
                                dra["qtychl"] = model[0].dt1.Rows[i][8].ToString().Trim();//qtychl
                                dra["qtyout"] = model[0].dt1.Rows[i][9].ToString().Trim();//qtyin
                                dra["qtybal"] = sgen.Make_decimal(model[0].dt1.Rows[i][8].ToString().Trim()) - sgen.Make_decimal(model[0].dt1.Rows[i][9].ToString().Trim());
                                dra["iremark"] = model[0].dt1.Rows[i][17].ToString();
                                dra["pono"] = "";
                                dra["irate"] = sgen.Round2Decimals(sgen.Make_decimal(model[0].dt1.Rows[i][10].ToString().Trim()), 2).ToString().Trim();
                                dra["iamount"] = sgen.Round2Decimals(sgen.Make_decimal(model[0].dt1.Rows[i][13].ToString().Trim()), 2).ToString().Trim();
                                dra["store"] = "Y";
                                dra["pktno"] = model[0].dt1.Rows[i][17].ToString() == "" ? "0" : model[0].dt1.Rows[i][17].ToString();//noofpkt/box
                                dra["rec_id"] = "0";
                                // shiv
                                if (isedit)
                                {
                                    dra["client_id"] = model[0].Col1.Trim();
                                    dra["client_unit_id"] = model[0].Col2.Trim();
                                    dra["ent_by"] = model[0].Col3;
                                    dra["ent_date"] = model[0].Col4;
                                    dra["edit_by"] = userid_mst;
                                    dra["edit_date"] = currdate;
                                }
                                else
                                {
                                    dra["client_id"] = clientid_mst;
                                    dra["client_unit_id"] = unitid_mst;
                                    dra["ent_by"] = userid_mst;
                                    dra["ent_date"] = currdate;
                                    dra["edit_by"] = "-";
                                    dra["edit_date"] = currdate;
                                }
                                dataTable.Rows.Add(dra);
                                #endregion
                                #region issue loc
                                DataRow drl = dtbtch.NewRow();
                                drl["vch_num"] = vch_num;
                                drl["type"] = "30";
                                drl["vch_date"] = sgen.Savedate(model[0].Col48, true); ;
                                drl["deptno"] = "";
                                drl["desig"] = "";
                                drl["totremark"] = model[0].Col31;
                                drl["ordid"] = "";//orderid
                                drl["icode"] = model[0].dt1.Rows[i][2].ToString();
                                drl["iname"] = model[0].dt1.Rows[i][3].ToString();
                                drl["cpartno"] = model[0].dt1.Rows[i][4].ToString();
                                drl["uom"] = model[0].dt1.Rows[i][6].ToString();
                                drl["qtystk"] = model[0].dt1.Rows[i][9].ToString().Trim();//qtyin
                                drl["qtyout"] = model[0].dt1.Rows[i][9].ToString().Trim();//qtyin
                                drl["iremark"] = model[0].dt1.Rows[i][17].ToString();
                                drl["loc"] = dtqa.Rows[0]["loc"].ToString().Trim();
                                drl["locname"] = dtqa.Rows[0]["locname"].ToString().Trim();
                                drl["pktno"] = model[0].dt1.Rows[i][17].ToString() == "" ? "0" : model[0].dt1.Rows[i][17].ToString();//noofpkt/box
                                drl["store"] = "Y";
                                drl["rec_id"] = "0";
                                // shiv
                                if (isedit)
                                {
                                    drl["client_id"] = model[0].Col1.Trim();
                                    drl["client_unit_id"] = model[0].Col2.Trim();
                                    drl["ent_by"] = model[0].Col3;
                                    drl["ent_date"] = model[0].Col4;
                                    drl["edit_by"] = userid_mst;
                                    drl["edit_date"] = currdate;
                                }
                                else
                                {
                                    drl["client_id"] = clientid_mst;
                                    drl["client_unit_id"] = unitid_mst;
                                    drl["ent_by"] = userid_mst;
                                    drl["ent_date"] = currdate;
                                    drl["edit_by"] = "-";
                                    drl["edit_date"] = currdate;
                                }
                                #endregion
                            }
                            dataTable.Rows.Add(dr);
                        }
                        res = true; ok = true;
                        res = sgen.Update_data_fast1_uncommit(userCode, dataTable, model[0].Col10.Trim(), model[0].Col8, isedit, sat1);
                        if (dtbtch.Rows.Count > 0) ok = sgen.Update_data_fast1_uncommit(userCode, dtbtch, "btchtrans", model[0].Col8, isedit, sat1);
                        #region Voucher
                        if (isedit)
                        {
                            sgen.execute_cmd(userCode,"delete from vouchers where type in ('50') and mrnref='" + unitid_mst + vch_num + model[0].Col48 + model[0].Col12 + "' and client_unit_id='" + unitid_mst + "'");
                        }
                        var IGST = sgen.seekval(userCode, "select cl.vch_num||'-'||cl.c_name res from enx_tab v inner join clients_mst cl on cl.vch_num = v.col7 and " +
                          "find_in_set(cl.client_unit_id,v.client_unit_id)=1 where v.type = 'ACL' and v.client_unit_id = '" + unitid_mst + "' and col2='R001'", "res");
                        var CGST = sgen.seekval(userCode, "select cl.vch_num||'-'||cl.c_name res from enx_tab v inner join clients_mst cl on cl.vch_num = v.col7 and " +
                            "find_in_set(cl.client_unit_id,v.client_unit_id)=1 where v.type = 'ACL' and v.client_unit_id = '" + unitid_mst + "' and col2='R003'", "res");
                        var SGST = sgen.seekval(userCode, "select cl.vch_num||'-'||cl.c_name res from enx_tab v inner join clients_mst cl on cl.vch_num = v.col7 and " +
                            "find_in_set(cl.client_unit_id,v.client_unit_id)=1 where v.type = 'ACL' and v.client_unit_id = '" + unitid_mst + "' and col2='R002'", "res");

                        mq = "select max(to_number(vch_num)) as auto_genid from vouchers a where type in ('50')" + model[0].Col11.Trim() + "";
                       string vchr_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        var PURCHASE = "";
                        DataRow drv;
                        if (model[0].Col12 == "05")
                        {
                            PURCHASE = sgen.seekval(userCode, "select param1 from controls where type='CTL' and m_module3='invtmain' and id='000021'", "param1");
                            #region purchase
                            drv = dtv.NewRow();
                            drv["REC_ID"] = "0";
                            drv["VCH_NUM"] = vchr_num;
                            drv["VCH_DATE"] = sgen.Make_date_S(model[0].Col48);
                            drv["TYPE"] = "50";
                            drv["CLIENT_ID"] = clientid_mst;
                            drv["CLIENT_UNIT_ID"] = unitid_mst;
                            drv["ENT_BY"] = userid_mst;
                            drv["ENT_DATE"] = currdate;
                            drv["EDIT_BY"] = userid_mst;
                            drv["EDIT_DATE"] = currdate;
                            drv["CREATED_DATE"] = currdate;
                            drv["RVSCODE"] = model[0].Col49;//code
                            drv["ACODE"] = PURCHASE;//sales
                            drv["ANAME"] = sgen.seekval(userCode, "select distinct c_name as name from clients_mst where vch_num||client_unit_id = '" + PURCHASE + unitid_mst + "'", "name"); ;//party name
                            drv["CRAMOUNT"] = "0";
                            drv["DRAMOUNT"] = model[0].Col33;
                            drv["INVNO"] = model[0].Col28;
                            drv["INVDATE"] = sgen.Make_date_S(model[0].Col29);
                            drv["TOTREMARK"] = "Purchase";
                            drv["adj_type"] = "OAC";
                            drv["rno"] = "2";
                            drv["MRNREF"] = unitid_mst + vch_num + model[0].Col48 + model[0].Col12;
                            dtv.Rows.Add(drv);
                            #endregion
                        }
                        else
                        {
                            #region MAT Account
                            DataTable dtmatac;
                            dtmatac = model[0].dt1.Clone();
                            var t1 = model[0].dt1.AsEnumerable().GroupBy(k => new
                            {
                                icode = k.Field<string>("icode").Substring(0, 3),
                            });
                            var t2 = t1.Select(c =>
                            {
                                var row = dtbtch.NewRow();
                                row["icode"] = c.Key.icode;
                                row["iamount"] = c.Sum(k => sgen.Make_decimal(k.Field<string>("iamount")));
                                return row;
                            });
                            dtmatac = t2.CopyToDataTable();
                            foreach (DataRow dr3 in dtmatac.Rows)
                            {
                                PURCHASE = sgen.seekval(userCode, "select group_refrence_number from master_setting where master_id = '" + dr3["icode"].ToString() + "'", "group_refrence_number");
                                drv = dtv.NewRow();
                                drv["REC_ID"] = "0";
                                drv["VCH_NUM"] = vchr_num;
                                drv["VCH_DATE"] = sgen.Make_date_S(model[0].Col48);
                                drv["TYPE"] = "50";
                                drv["CLIENT_ID"] = clientid_mst;
                                drv["CLIENT_UNIT_ID"] = unitid_mst;
                                drv["ENT_BY"] = userid_mst;
                                drv["ENT_DATE"] = currdate;
                                drv["EDIT_BY"] = userid_mst;
                                drv["EDIT_DATE"] = currdate;
                                drv["CREATED_DATE"] = currdate;
                                drv["RVSCODE"] = model[0].Col49;//code
                                drv["ACODE"] = PURCHASE;//sales
                                drv["ANAME"] = sgen.seekval(userCode, "select distinct c_name as name from clients_mst where vch_num||client_unit_id = '" + PURCHASE + unitid_mst + "'", "name");//account name
                                drv["CRAMOUNT"] = "0";
                                drv["DRAMOUNT"] = dr3["iamount"].ToString();
                                drv["INVNO"] = model[0].Col28;
                                drv["INVDATE"] = sgen.Make_date_S(model[0].Col29);
                                drv["TOTREMARK"] = "Purchase";
                                drv["adj_type"] = "OAC";
                                drv["rno"] = "2";
                                drv["MRNREF"] = unitid_mst + vch_num + model[0].Col48 + model[0].Col12;
                                dtv.Rows.Add(drv);
                            }
                            #endregion
                        }
                        #region party
                        drv = dtv.NewRow();
                        drv["REC_ID"] = "0";
                        drv["VCH_NUM"] = vchr_num;
                        drv["VCH_DATE"] = sgen.Make_date_S(model[0].Col48);
                        drv["TYPE"] = "50";
                        drv["CLIENT_ID"] = clientid_mst;
                        drv["CLIENT_UNIT_ID"] = unitid_mst;
                        drv["ENT_BY"] = userid_mst;
                        drv["ENT_DATE"] = currdate;
                        drv["EDIT_BY"] = userid_mst;
                        drv["EDIT_DATE"] = currdate;
                        drv["CREATED_DATE"] = currdate;
                        drv["RVSCODE"] = PURCHASE;//code
                        drv["ACODE"] = model[0].Col49;//party code
                        drv["ANAME"] = model[0].Col20;//party name
                        drv["CRAMOUNT"] = model[0].Col50;//net total
                        drv["DRAMOUNT"] = "0";
                        drv["TOTREMARK"] = "party";
                        drv["adj_type"] = "NEW";
                        drv["rno"] = "1";
                        drv["INVNO"] = model[0].Col28;
                        drv["INVDATE"] = sgen.Make_date_S(model[0].Col29);
                        drv["MRNREF"] = unitid_mst + vch_num + model[0].Col48 + model[0].Col12 + "";
                        dtv.Rows.Add(drv);
                        #endregion
                        try
                        {
                            #region IGST
                            if (sgen.Make_decimal(model[0].Col38) > 0)
                            {
                                drv = dtv.NewRow();
                                drv["REC_ID"] = "0";
                                drv["VCH_NUM"] = vchr_num;
                                drv["VCH_DATE"] = sgen.Make_date_S(model[0].Col48);
                                drv["TYPE"] = "50";
                                drv["CLIENT_ID"] = clientid_mst;
                                drv["CLIENT_UNIT_ID"] = unitid_mst;
                                drv["ENT_BY"] = userid_mst;
                                drv["ENT_DATE"] = currdate;
                                drv["EDIT_BY"] = userid_mst;
                                drv["EDIT_DATE"] = currdate;
                                drv["CREATED_DATE"] = currdate;
                                drv["RVSCODE"] = model[0].Col49;//code
                                drv["ACODE"] = IGST.Trim().Split('-')[0].Trim();//gst
                                drv["ANAME"] = IGST.Trim().Split('-')[0].Trim();//party name
                                drv["CRAMOUNT"] = "0";
                                drv["DRAMOUNT"] = model[0].Col38;
                                drv["TOTREMARK"] = "igst";
                                drv["adj_type"] = "OAC";
                                drv["rno"] = "3";
                                drv["INVNO"] = model[0].Col28;
                                drv["INVDATE"] = sgen.Make_date_S(model[0].Col29);
                                drv["MRNREF"] = unitid_mst + vch_num + model[0].Col48 + model[0].Col12 + "";
                                dtv.Rows.Add(drv);
                            }
                            #endregion
                            #region CGST
                            if (sgen.Make_decimal(model[0].Col39) > 0)
                            {
                                drv = dtv.NewRow();
                                drv["REC_ID"] = "0";
                                drv["VCH_NUM"] = vchr_num;
                                drv["VCH_DATE"] = sgen.Make_date_S(model[0].Col48);
                                //drv["TYPE"] = model[0].Col12;
                                drv["TYPE"] = "50";
                                drv["CLIENT_ID"] = clientid_mst;
                                drv["CLIENT_UNIT_ID"] = unitid_mst;
                                drv["ENT_BY"] = userid_mst;
                                drv["ENT_DATE"] = currdate;
                                drv["EDIT_BY"] = userid_mst;
                                drv["EDIT_DATE"] = currdate;
                                drv["CREATED_DATE"] = currdate;
                                drv["RVSCODE"] = model[0].Col49;//code
                                drv["ACODE"] = CGST.Trim().Split('-')[0].Trim();//gst
                                drv["ANAME"] = CGST.Trim().Split('-')[0].Trim();//party name
                                drv["CRAMOUNT"] = "0";
                                drv["DRAMOUNT"] = model[0].Col39;
                                drv["TOTREMARK"] = "cgst";
                                drv["adj_type"] = "OAC";
                                drv["rno"] = "4";
                                drv["INVNO"] = model[0].Col28;
                                drv["INVDATE"] = sgen.Make_date_S(model[0].Col29);
                                drv["MRNREF"] = unitid_mst + vch_num + model[0].Col48 + model[0].Col12 + "";
                                dtv.Rows.Add(drv);
                            }
                            #endregion
                            #region SGST
                            if (sgen.Make_decimal(model[0].Col40) > 0)
                            {
                                drv = dtv.NewRow();
                                drv["REC_ID"] = "0";
                                drv["VCH_NUM"] = vchr_num;
                                drv["VCH_DATE"] = sgen.Make_date_S(model[0].Col48);
                                //drv["TYPE"] = model[0].Col12;
                                drv["TYPE"] = "50";
                                drv["CLIENT_ID"] = clientid_mst;
                                drv["CLIENT_UNIT_ID"] = unitid_mst;
                                drv["ENT_BY"] = userid_mst;
                                drv["ENT_DATE"] = currdate;
                                drv["EDIT_BY"] = userid_mst;
                                drv["EDIT_DATE"] = currdate;
                                drv["CREATED_DATE"] = currdate;
                                drv["RVSCODE"] = model[0].Col49;//code
                                drv["ACODE"] = SGST.Trim().Split('-')[0].Trim();//gst
                                drv["ANAME"] = SGST.Trim().Split('-')[0].Trim();//party name
                                drv["CRAMOUNT"] = "0";
                                drv["DRAMOUNT"] = model[0].Col40;
                                drv["TOTREMARK"] = "sgst";
                                drv["adj_type"] = "OAC";
                                drv["rno"] = "5";
                                drv["INVNO"] = model[0].Col28;
                                drv["INVDATE"] = sgen.Make_date_S(model[0].Col29);
                                drv["MRNREF"] = unitid_mst + vch_num + model[0].Col48 + model[0].Col12 + "";
                                dtv.Rows.Add(drv);
                            }
                            #endregion
                        }
                        catch (Exception ex)
                        {
                        }
                        #region other charges
                        if (model[0].LTM1 != null && model[0].LTM1.Count > 0)
                        {
                            for (int k = 0; k < model[0].LTM1.Count; k++)
                            {
                                var OTHERS = sgen.seekval(userCode, "select group_refrence_number as res from master_setting where master_id='" + model[0].LTM1[k].Col15 + "' and find_in_set(client_unit_id,'" + unitid_mst + "')=1 and type='MR0'", "res");

                                drv = dtv.NewRow();
                                drv["REC_ID"] = "0";
                                drv["VCH_NUM"] = vchr_num;
                                drv["VCH_DATE"] = sgen.Make_date_S(model[0].Col48);
                                //drv["TYPE"] = model[0].Col12;
                                drv["TYPE"] = "50";
                                drv["CLIENT_ID"] = clientid_mst;
                                drv["CLIENT_UNIT_ID"] = unitid_mst;
                                drv["ENT_BY"] = userid_mst;
                                drv["ENT_DATE"] = currdate;
                                drv["EDIT_BY"] = userid_mst;
                                drv["EDIT_DATE"] = currdate;
                                drv["CREATED_DATE"] = currdate;
                                drv["RVSCODE"] = model[0].Col49;//code
                                drv["ACODE"] = OTHERS;//party code
                                drv["ANAME"] = "other Charges";//chrg_name
                                drv["CRAMOUNT"] = "0";
                                drv["DRAMOUNT"] = model[0].LTM1[k].Col16; //amount chrg
                                drv["TOTREMARK"] = "other charges";
                                drv["adj_type"] = "OAC";
                                drv["rno"] = (k + 6).ToString();
                                drv["INVNO"] = model[0].Col28;
                                drv["INVDATE"] = sgen.Make_date_S(model[0].Col29);
                                drv["MRNREF"] = unitid_mst + vch_num + model[0].Col48 + model[0].Col12 + "";
                                dtv.Rows.Add(drv);
                            }
                        }
                        #endregion
                        #endregion
                        bool result = sgen.Update_data_fast1(userCode, dtv, "vouchers", model[0].Col8, false);
                        if (!result)
                        {
                            sat1.Rollback();
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            ViewBag.scripCall += "showmsgJS(1, 'Data Not Saved In Vouchers', 0);";
                            ModelState.Clear();
                            return View(model);
                        }
                        if (res && ok)
                        {
                            DataTable dten = cmd_Fun.GetStructure(userCode, "enx_tab");
                            if (model[0].LTM1 != null && model[0].LTM1.Count > 0)
                            {
                                res = false;
                                #region dr
                                bool ed = isedit;
                                string whr = model[0].Col8;
                                string fnd = sgen.seekval(userCode, "select vch_num from enx_tab where (client_id||client_unit_id||vch_num||to_char(vch_date, 'yyyymmdd'))='" + model[0].Col8 + "' and type in ('01','Q01')", "vch_num");
                                if (fnd == "0")
                                {
                                    ed = false;
                                    whr = "";
                                }
                                for (int k = 0; k < model[0].LTM1.Count; k++)
                                {
                                    DataRow dr = dten.NewRow();
                                    dr["type"] = model[0].Col12;
                                    dr["vch_num"] = vch_num.Trim();
                                    dr["vch_date"] = sgen.Savedate(model[0].Col48, true);
                                    //dt====
                                    dr["r_no"] = model[0].LTM1[k].Col14;
                                    dr["col1"] = model[0].LTM1[k].Col15;//chrgid
                                    dr["col2"] = model[0].LTM1[k].Col16;//chrgamt
                                    dr["col3"] = model[0].LTM1[k].Col13;//chrgrtid
                                    dr["col4"] = model[0].LTM1[k].Col17;//igstrt
                                    dr["col5"] = model[0].LTM1[k].Col18;//igstamt
                                    dr["col6"] = model[0].LTM1[k].Col19;//cgstrt
                                    dr["col7"] = model[0].LTM1[k].Col20;//cgstamt
                                    dr["col8"] = model[0].LTM1[k].Col21;//sgstrt
                                    dr["col9"] = model[0].LTM1[k].Col22;//sgstamt
                                                                        //======                            
                                    dr["rec_id"] = "0";
                                    // shiv
                                    if (isedit)
                                    {
                                        dr["client_id"] = model[0].Col1.Trim();
                                        dr["client_unit_id"] = model[0].Col2.Trim();
                                        dr["ent_by"] = model[0].Col3;
                                        dr["ent_date"] = model[0].Col4;
                                        dr["edit_by"] = userid_mst;
                                        dr["edit_date"] = currdate;
                                    }
                                    else
                                    {
                                        dr["client_id"] = clientid_mst;
                                        dr["client_unit_id"] = unitid_mst;
                                        dr["ent_by"] = userid_mst;
                                        dr["ent_date"] = currdate;
                                        dr["edit_by"] = "-";
                                        dr["edit_date"] = currdate;
                                    }
                                    dten.Rows.Add(dr);
                                }
                                #endregion
                                res = sgen.Update_data_fast1_uncommit(userCode, dten, "enx_tab", whr, ed, sat1);
                                if (!res)
                                {
                                    sat1.Rollback();
                                    ViewBag.vnew = "disabled='disabled'";
                                    ViewBag.vedit = "disabled='disabled'";
                                    ViewBag.vsave = "";
                                    ViewBag.vsavenew = "";
                                    ViewBag.scripCall += "showmsgJS(1, 'Calc error', 0);";
                                    ModelState.Clear();
                                    return View(model);
                                }
                            }
                            sat1.Commit();
                            string reg_no = "", Email_id = "", send_type = "", phone_No = "", xclass = "", sec = "", emailidcc = "", msg_txt = "", account = "";
                            string email = "", DetailSms = "0", DetailEmail = "0", xtitle = "";
                            int cnt = 0;
                            try
                            {
                                DataTable dtmail = sgen.getdata(userCode, "select col2 as Temp_Set_For,nvl(col5,'0') as email_id,col7 as lang,nvl(col6,'0') as mobile_no,col9,col10,col1 as Body_Text,col3 as signature,col8 as Email_Heading from enx_tab where type = 'ETP' and client_unit_id = '" + unitid_mst + "' and col13 = '013'");
                                if (dtmail.Rows[0]["mobile_no"].ToString() != null && dtmail.Rows[0]["mobile_no"].ToString() != "0" && dtmail.Rows[0]["col10"].ToString().Equals("Y"))
                                {
                                    #region SMS
                                    BulkSMS bulk = new BulkSMS(userCode, clientid_mst, unitid_mst, MyGuid);
                                    string[] ph_cc = (dtmail.Rows[0]["mobile_no"].ToString().Split(','));
                                    string phone_cc = "";
                                    for (Int32 y = 0; y < ph_cc.Length; y++)
                                    {
                                        phone_cc = ph_cc[y];
                                        if ((phone_cc != "0"))
                                        {
                                            msg_txt = sgen.ExtractHtmlInnerText(dtmail.Rows[0]["Body_Text"].ToString().Replace("\r\n", " %0a"));
                                            //string smsstatus = sgen.Send_Sms(userCode, clientid_mst, unitid_mst, phone_cc, msg_txt, dtmail.Rows[0]["lang"].ToString() == "2");
                                            bulk.Add_sms(phone_cc, msg_txt, dtmail.Rows[0]["lang"].ToString() == "2");
                                            // smsstatus = sgen.Send_Sms(userCode, clientid_mst, unitid_mst, phone_cc, msg_txt, dtmail.Rows[0]["lang"].ToString() == "2");
                                        }
                                    }
                                    bulk.Send_SMS_Bulk();
                                    #endregion
                                }
                                else if (dtmail.Rows[0]["email_id"].ToString() != null && dtmail.Rows[0]["email_id"].ToString() != "0")
                                {
                                    #region SEND MAIL
                                    string mailfrom = "";
                                    DataTable datatable = new DataTable();
                                    datatable = sgen.getdata(userCode, "select com_email from company_profile where Company_Profile_Id='" + clientid_mst + "' and type='CP'");
                                    if (datatable.Rows.Count > 0)
                                    {
                                        mailfrom = Convert.ToString(datatable.Rows[0]["com_email"].ToString());
                                    }
                                    string mailcc = string.Join(",", dtmail.Rows[0]["email_id"].ToString());
                                    mailcc = mailcc.Replace("'", "");
                                    string[] itar = mailcc.Trim().Split(',');
                                    Mailer mailer = new Mailer(userCode, clientid_mst, unitid_mst, MyGuid);
                                    var body = new StringBuilder();
                                    if (itar.Length > 0)
                                    {
                                        for (Int32 y = 0; y < itar.Length; y++)
                                        {
                                            string[] Emialar = itar[y].Replace("(", "").Replace(")", "").Trim().Split(' ');
                                            if (sgen.ValidateEmail(Emialar[0].ToString()))
                                            {
                                                if (emailidcc.Equals("")) emailidcc = Emialar[0].ToString();
                                                else
                                                {
                                                    emailidcc = emailidcc + "," + Emialar[0].ToString();
                                                }
                                            }
                                        }
                                        Email_id = emailidcc;
                                        xtitle = "";
                                        //xtitle = "Mr Owner, Your Order has Been Gate In  and Gate_in no is : '" + model[0].Col16 + "'";
                                        xtitle = "Mr Owner, You are Being Informed By Your Gate Department";
                                        body.AppendLine(@"<b style='color:#3caee9; font-size: 20px'>" + dtmail.Rows[0]["Email_Heading"].ToString() + " </b><br /><hr style='border:1px solid black' />" +
                                        "<p>Hi <b>" + xtitle + " : </b>,</p><table style='font-weight:600'>");
                                        //foreach (DataRow drl in dataTable.Rows)
                                        //{
                                        //    if (Email_id != "")
                                        //    {
                                        //        drl["col9"].ToString();
                                        //        body.AppendLine(@"<tr><td>Subject </td><td>: " + drl["col9"] + " </td>" +
                                        //             "</tr><tr><td> Chapter Name </td><td>: " + drl["col10"] + " </td></tr>" +
                                        //             "<tr><td> Topic </td><td>: " + drl["col11"] + " </td></tr>" +
                                        //             "<tr><td> Remarks </td><td>: " + drl["col4"] + " </td></tr>");
                                        //        body.AppendLine("<br><br>");
                                        //    }
                                        //}
                                        body.AppendLine(@"</table><br /><p>" + dtmail.Rows[0]["Body_Text"].ToString() + "</p><p>ThankYou,<br />" + dtmail.Rows[0]["signature"].ToString() + "<br /></p><br />");
                                        //body.AppendLine(@"</table><br /><p>" + dtmail.Rows[0]["Body_Text"].ToString() + "</p><p>ThankYou,<br />" + clientname_mst + "<br /></p><br />");
                                        sgen.Send_mail_SA1(userCode, clientid_mst, unitid_mst, mailfrom, emailidcc, Email_id, body.ToString(), dtmail.Rows[0]["Email_Heading"].ToString(), "");
                                        mailer.Add_Mail(Email_id, dtmail.Rows[0]["Email_Heading"].ToString(), body.ToString());
                                    }
                                    mailer.Send_Email_Bulk();
                                    #endregion
                                }
                            }
                            catch (Exception err) { ViewBag.scripCall += "mytoast('error', 'toast-top-right', 'Mail Not Sent');"; }
                            string date = sgen.SaveDate_dt(tm.Col48, false).ToString("yyyyMMdd");
                            url = clientid_mst + unitid_mst + vch_num + date + "" + model[0].Col12 + "";
                            sgen.SetSession(MyGuid, "SSEEKVAL", url);
                            model = new List<Tmodelmain>();
                            model.Add(new Tmodelmain
                            {
                                Col10 = tm.Col10,
                                Col11 = tm.Col11,
                                Col13 = "Save",
                                Col100 = "Save & New ",
                                Col121 = "S",
                                Col122 = "<u>S</u>ave",
                                Col123 = "Save & Ne<u>w</u>",
                                Col14 = tm.Col14,
                                Col15 = tm.Col15,
                                dt1 = (DataTable)sgen.GetSession(MyGuid, "KMRN_DT"),
                                Col55 = sgen.GetSession(MyGuid, "LOCCHK").ToString().Trim(),
                                TList1 = mod1,
                                SelectedItems1 = new string[] { "" },
                            });
                            sgen.SetSession(MyGuid, "KMRNTYPE", null);
                            sgen.SetSession(MyGuid, "BDREJTYP", null);
                            sgen.SetSession(MyGuid, "BDMRNINVTYPE", null);
                            sgen.SetSession(MyGuid, "BDINVDOCNO", null);
                            if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                            {
                                ViewBag.vnew = "";
                                ViewBag.vedit = "";
                                ViewBag.vsave = "disabled='disabled'";
                                ViewBag.vsavenew = "disabled='disabled'";
                                ViewBag.scripCall += "showmsgJS(2, 'Data Saved Successfully. Do You Want To Print', 1);disableForm();";
                            }
                            else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                            {
                                try
                                {
                                    Make_query("mrn", "Select MRN Type", "NEW", "1", "", "");
                                    ViewBag.scripCall = "callFoo('Select MRN Type');";
                                    ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                                }
                                catch (Exception ex) { }
                            }
                        }
                        else
                        {
                            sat1.Rollback();
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            ViewBag.scripCall += "showmsgJS(1, 'Data Not Saved', 0);";
                            ModelState.Clear();
                            return View(model);
                        }
                    }
                    //    catch (Exception ex) { ViewBag.scripCall += "showmsgJS(1,'" + ex.Message.ToString().Replace("'", "") + "', 0);"; }
                    //}

                    catch (Exception ex) { ViewBag.scripCall += "showmsgJS(1,'" + ex.Message.ToString().Replace("'", "") + "', 0);"; }
                }
                else if (command == "hfbtnyes")
                {
                    model = CallbackFun("PRINT", "N", "mrn", "Inventory", model);
                }
                else if (command == "Import")
                {
                    HttpPostedFileBase file1 = upd1;
                    DataTable dt = new DataTable();
                    if (file1.ContentLength > 1)

                    //else if (command == "Import")

                    //{
                    //    HttpPostedFileBase file1 = upd1;
                    //    DataTable dt = new DataTable();
                    //    if (file1.ContentLength > 1)
                    {
                        string ext = Path.GetExtension(file1.FileName).ToLower();
                        if (ext == ".csv")
                        {
                            string filesavepath = AppDomain.CurrentDomain.BaseDirectory + "\\Uploads\\" + cg_com_name.Replace(" ", "")
                                + "\\file" + DateTime.Now.ToString("ddMMyyyyhhmmfff") + ext;
                            file1.SaveAs(filesavepath);
                            // Read sample data from CSV file
                            int i = 0;
                            using (CsvFileReader reader = new CsvFileReader(filesavepath))
                            {
                                CsvRow row = new CsvRow();
                                while (reader.ReadRow(row))
                                {
                                    DataRow dr = dt.NewRow();
                                    for (int c = 0; c < row.Count; c++)
                                    {
                                        if (i == 0) { dt.Columns.Add(row[c].ToString()); }
                                        else { dr[c] = row[c].ToString(); }
                                        //if (c > dt.Columns.Count) break;                                                                 
                                    }
                                    i++;
                                    dt.Rows.Add(dr);
                                }
                            }
                        }
                        try
                        {
                            dt.Rows[0].Delete();
                            for (int k = 0; k < dt.Rows.Count; k++)
                            {
                                mq = sgen.seekval(userCode, "select icode from item where icode='" + dt.Rows[k]["icode"].ToString() + "' and type='IT' and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "'", "icode");
                                if (mq.Trim() == "0")
                                {
                                    ViewBag.vnew = "disabled='disabled'";
                                    ViewBag.vedit = "disabled='disabled'";
                                    ViewBag.vsave = "";
                                    ViewBag.vsavenew = "";
                                    ViewBag.scripCall += "showmsgJS(1,'Icode: " + dt.Rows[k]["icode"].ToString() + " not found,please check.', 0);";
                                    ModelState.Clear();
                                    return View(model);
                                }
                            }
                            mq1 = "select '' item,'0' Sno,i.icode,i.iname,i.cpartno partno,u.master_name uom,h.master_name hsn,h.group_name taxrate," +
                                "'0' iamount,'0' taxamount,'0' lineamount,'0' po_number,'-' po_date,location_name('" + clientid_mst + "'||'" + unitid_mst + "'||itb.loc) as location from item i " +
                                "inner join itbal itb on i.icode=itb.icode and i.type=itb.type and i.client_unit_id=itb.client_unit_id " +
                                "inner join  master_setting u on u.master_id = i.uom and u.type = 'UMM' and find_in_set(u.client_unit_id, i.client_unit_id)= 1 " +
                                "inner join  master_setting h on h.master_id = i.hsno and h.type = 'HSN' and find_in_set(h.client_unit_id, i.client_unit_id)= 1 " +
                                "where i.type = 'IT' and i.client_unit_id = '" + unitid_mst + "'";
                            DataTable dt2 = sgen.getdata(userCode, mq1);
                            if (dt2.Rows.Count > 0)
                            {
                                var results = from table1 in dt.AsEnumerable()
                                              join table2 in dt2.AsEnumerable() on table1["icode"] equals table2["icode"]
                                              select new
                                              {
                                                  item = table2["item"],
                                                  sno = table2["sno"],
                                                  icode = table1["icode"],
                                                  iname = table2["iname"],
                                                  partno = table2["partno"],
                                                  hsn = table2["hsn"],
                                                  uom = table2["uom"],
                                                  taxrate = table2["taxrate"],
                                                  qty_chl = table1["qty_chl"],
                                                  qty_in = table1["qty_in"],
                                                  irate = table1["irate"],
                                                  disc_type = table1["disc_type"],
                                                  disc_rate = table1["disc_rate"],
                                                  iamount = table2["iamount"],
                                                  taxamount = table2["taxamount"],
                                                  discamount = table1["discamount"],
                                                  lineamount = table2["lineamount"],
                                                  noofpkt_box = table1["noofpkt_box"],
                                                  remark = table1["remark"],
                                                  po_number = table2["po_number"],
                                                  po_date = table2["po_date"],
                                                  batchno = table1["batchno"],
                                                  location = table2["location"]
                                              };
                                results.ToList();
                                DataTable dtk = sgen.ToDataTable(results.ToList());
                                model[0].dt1 = dtk;
                                ViewBag.vsave = "";
                                ViewBag.vimport = "";
                            }
                        }
                        catch (Exception err) { sgen.showmsg(1, err.Message.ToString(), 0); }
                    }
                }
                else if (command == "-")
                {
                    if (model[0].dt1.Rows.Count > 1) model[0].dt1.Rows.RemoveAt(sgen.Make_int(hfrow));
                    else { model[0].dt1 = (DataTable)sgen.GetSession(MyGuid, "KMRN_DT"); }
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
            }
            catch (Exception err)
            {
                var LineNumber = sgen.GetError(err);
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        public JsonResult getjsondata(string searchTerm, string icode)
        {
            FillMst("");
            //Get the paged results and the total count of the results for this query. 
            DataSet ds = getitemData(userCode, "select master_id icode,client_name iname,'' partno,'' uom,'' hsn,'' taxrate,'' stock from master_Setting " +
                "where type='KPS' and client_unit_id='" + unitid_mst + "'", 1, searchTerm);
            List<Tmodel20> tmodel20 = new List<Tmodel20>();
            foreach (DataRow dr in ds.Tables[0].Rows)
            {
                Tmodel20 tmt = new Tmodel20();
                try
                {
                    tmt.Col1 = dr[0].ToString();
                    tmt.Col2 = dr[1].ToString();
                    tmt.Col3 = dr[2].ToString();
                    tmt.Col4 = dr[3].ToString();
                    tmt.Col5 = dr[4].ToString();
                    tmt.Col6 = dr[5].ToString();
                    tmt.Col7 = dr[6].ToString();
                    tmt.Col8 = dr[7].ToString();
                    tmt.Col9 = dr[8].ToString();
                    tmt.Col10 = dr[9].ToString();
                }
                catch (Exception ex) { ViewBag.scripCall = "showmsgJS(1,'" + ex.Message.ToString().Replace('\'', ' ') + "', 0);"; }
                tmodel20.Add(tmt);
            }
            return Json(tmodel20, JsonRequestBehavior.AllowGet);
        }
        [HttpPost]
        public void mrndelrno(string value, string guid)
        {
            sgen = new sgenFun(guid);
            sgen.SetSession(guid, "mrndelrno", value);
        }

        [HttpPost]
        public ContentResult SetSession(List<Tmodelmain> Val, string Name)
        {
            sgen = new sgenFun(Val[0].Col15);
            sgen.SetSession(Val[0].Col15, Name, Val);
            return Content("");
        }
        [HttpGet]
        public FileResult mrntemp(List<Tmodelmain> model, string Myguid = "")
        {
            FillMst(Myguid);
            model = (List<Tmodelmain>)sgen.GetSession(MyGuid, "model");
            DataTable dtl = new DataTable();
            mq = "SELECT '' Icode,'' Qty_chl,'' Qty_in,'' irate,'' Disc_type,'' Disc_Rate,'' DiscAmount,'' Noofpkt_box,'' Remark,'' batchno from Dual";
            dtl = sgen.getdata(userCode, mq);
            string cg_com_name = sgen.GetCookie(MyGuid, "cg_com_name");
            Byte[] fileBytes = sgen.Exp_to_csv_new(dtl, "mrnitem", cg_com_name);
            return File(fileBytes, System.Net.Mime.MediaTypeNames.Application.Octet, "mrnitem");
        }
        #endregion        
        #region masters
        [HttpGet]
        public ActionResult GetItems(string searchTerm, int pageSize, int pageNum)
        {
            FillMst();
            // shiv
            //Get the paged results and the total count of the results for this query. 
            DataSet ds = getitemData(userCode, "select it.vch_num as icode,it.col2 as iname,it.col2 partno,um.master_name as UOM," +
                "hsn.master_name as hsn,hsn.group_name taxrate,'0' as stock from kc_tab it " +
                "inner join master_setting um on um.master_id=it.col5 and um.type='UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
                "inner join master_setting hsn on hsn.master_id=it.col1 and hsn.type='HSN' and find_in_set(hsn.client_unit_id,it.client_unit_id)=1 " +
                "where it.type='ISM'", 1, searchTerm);
            return DstoJSonItems(ds);
        }
        [HttpGet]
        public ActionResult GetDtypes(string searchTerm, int pageSize, int pageNum)
        {
            FillMst();
            // shiv
            //Get the paged results and the total count of the results for this query. 
            DataSet ds = getitemData(userCode, "select '10%' icode,'disc1' iname,'' partno,'' uom,'' hsn,'' taxrate,'' stock UNION ALL " +
                "select '20%' icode,'disc2' iname,'' partno,'' uom,'' hsn,'' taxrate,'' stock UNION ALL " +
                "select '30%' icode,'disc3' iname,'' partno,'' uom,'' hsn,'' taxrate,'' stock", 1, searchTerm);
            return DstoJSonItems(ds);
        }
        public JsonpResult DstoJSonItems(DataSet ds)
        {
            List<Item> Items = new List<Item>();
            foreach (DataRow row in ds.Tables["Main"].Rows)
            {
                Item it = new Item();
                it.Icode = row["icode"].ToString();
                it.Iname = row["iname"].ToString();
                it.partno = row["partno"].ToString();
                it.uom = row["uom"].ToString();
                it.hsn = row["hsn"].ToString();
                it.taxrate = row["taxrate"].ToString();
                it.stock = row["stock"].ToString();
                Items.Add(it);
            }
            int attendeeCount = sgen.Make_int(ds.Tables["Totals"].Rows[0][0].ToString());
            Select2PagedResult pagedAttendees = new Select2PagedResult();
            pagedAttendees.Results = new List<Select2Result>();
            foreach (Item a in Items)
            {
                pagedAttendees.Results.Add(new Select2Result { id = a.Icode.ToString() + "!~!" + a.partno + "!~!" + a.hsn + "!~!" + a.uom + "!~!" + a.taxrate + "!~!" + a.stock, text = a.Iname });
            }
            pagedAttendees.Total = attendeeCount;
            return new JsonpResult
            {
                Data = pagedAttendees,
                JsonRequestBehavior = JsonRequestBehavior.AllowGet
            };
        }
        public DataSet getitemData(string userCode, string query, int pageno, string searchval)
        {
            string colswhere = "";
            foreach (PropertyInfo prop in typeof(Item).GetProperties())
            {
                if (colswhere.Equals("")) colswhere = "NVL(" + prop.Name + ",'-')";
                else colswhere = colswhere + "||" + "NVL(" + prop.Name + ",'-') ";
            }
            //string where = "where lower(" + colswhere + ") LIKE '%" + searchval.ToLower() + "%') > 0 ";
            string where = "where lower(" + colswhere + ") LIKE '%" + searchval.ToLower().Trim() + "%' ";
            // shiv
            query = "SELECT *  from (" + query + " ) tab " + where;
            mq = "SELECT Count(*) as cnt from (" + query + " ) tab";
            string rows = sgen.seekval(userCode, mq, "cnt");
            int olds = 0, limit = 10;
            if (limit == 0) limit = 1;
            // shiv
            mq1 = "SELECT '0' as chk,tab.* FROM( SELECT rownum as  Sr_No,t.* FROM (" + query + ") t  " +
                ") TAB WHERE Sr_No BETWEEN " + limit + " * (" + pageno + " - 1) + 1+" + olds + " AND (" + pageno + " *" + limit + ")+" + olds;
            DataTable dataTable = new DataTable();
            dataTable = sgen.getdata(userCode, mq1);
            dataTable.TableName = "Main";
            DataSet ds = new DataSet();
            ds.Tables.Add(dataTable);
            DataTable DT2 = new DataTable();
            DT2.TableName = "Totals";
            DT2.Columns.Add("Total", typeof(string));
            DataRow dataRow = DT2.NewRow();
            dataRow[0] = Convert.ToInt32(rows);
            DT2.Rows.Add(dataRow);
            ds.Tables.Add(DT2);
            return ds;
        }
        #endregion
        #endregion
        #region mrnn                
        public ActionResult mrnn()
        {
            // MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            FillMst("");
            List<Tmodelmain> model = new List<Tmodelmain>();
            List<SelectListItem> mod1 = new List<SelectListItem>();
            model = getload(model);
            model[0].Col10 = "itransaction";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            // shiv why gst every time
            model[0].Col18 = sgen.seekval(userCode, "select unit_gstin_no from company_unit_profile where cup_id='" + unitid_mst + "'", "unit_gstin_no");
            model[0].Col55 = sgen.seekval(userCode, "select param1 from controls where id='000015' AND TYPE='LOC'", "param1");
            sgen.SetSession(MyGuid, "LOCCHK", model[0].Col55);
            DataTable dt = sgen.getdata(userCode, "select '' Item,'1' as  SNo ,'-' as Icode,'-' as IName,'-' PARTNO,'-'  HSN,'-' as UOM,'0' TaxRate,'0' Qty_Chl,'0' Qty_In,'0' as IRate,'-' disc_type,'0' as disc_rate,'0' IAmount,'0' TaxAmount,'0' discAmount,'0' LineAmount,'0' NoOfPKT_Box,'-' as Remark,'0' PO_Number,'-' PO_Date,'-' as Batchno,'-' as Location,'0' Qtystk from dual");
            model[0].dt1 = dt;
            sgen.SetSession(MyGuid, "KMRN_DT", dt);
            sgen.SetSession(MyGuid, "KMRNTYPE", null);
            model[0].TList1 = mod1;
            model[0].SelectedItems1 = new string[] { "" };
            DataTable dtb = (DataTable)sgen.GetSession(MyGuid, "URIGHTS");
            try
            {
                dtb = dtb.Select("m_id='" + model[0].Col14 + "'").CopyToDataTable();
                if (dtb.Rows.Count > 0)
                {
                    model[0].Col133 = dtb.Rows[0]["btnnew"].ToString();
                    model[0].Col134 = dtb.Rows[0]["btnedit"].ToString();
                    model[0].Col135 = dtb.Rows[0]["btnview"].ToString();
                    //  tm1.Col136 = dtb.Rows[0]["btnextend"].ToString();
                }
            }
            catch (Exception ex) { }
            ModelState.Clear();
            return View(model);
        }
        [HttpPost]
        public ActionResult mrnn(List<Tmodelmain> model, string command, string hfrow, string hftable, HttpPostedFileBase upd1)
        {
            try
            {
                string url = "";
                FillMst(model[0].Col15);
                DataTable dtm = sgen.settable(hftable);
                model[0].dt1 = dtm;
                var tm = model.FirstOrDefault();
                List<SelectListItem> mod1 = new List<SelectListItem>();
                TempData[MyGuid + "_TList1"] = model[0].TList1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                if (tm.SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                if (command == "Cancel") { return CancelFun(model); }
                else if (command == "Callback")
                {
                    if (model[0].Col134 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for edit entries of this form, please contact your admin', 2);disableForm();";
                        return View(model);
                    }
                    if (sgen.GetSession(MyGuid, "mrndelrno") != null) btnval = "CHRGDEL";
                    else if (sgen.GetSession(MyGuid, "btnval") != null) btnval = sgen.GetSession(MyGuid, "btnval").ToString();
                    model = CallbackFun(btnval, "N", actionName, controllerName, model);
                    if (btnval.Trim().ToUpper().Equals("PRINT"))
                    {
                        ViewBag.vnew = "";
                        ViewBag.vedit = "";
                        ViewBag.vsave = "disabled='disabled'";
                        ViewBag.vsavenew = "disabled='disabled'";
                    }
                    else


                    //FillMst(model[0].Col15);
                    //DataTable dtm = sgen.settable(hftable);
                    //model[0].dt1 = dtm;
                    //var tm = model.FirstOrDefault();
                    //List<SelectListItem> mod1 = new List<SelectListItem>();
                    //model[0].TList1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                    //TempData[MyGuid + "_TList1"] = model[0].TList1;
                    //if (tm.SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                    //if (command == "Cancel")

                    //{
                    //    return CancelFun(model);
                    //}
                    //else if (command == "Callback")
                    //{
                    //    if (model[0].Col134 == "N")
                    //    {
                    //        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for edit entries of this form, please contact your admin', 2);disableForm();";
                    //        return View(model);
                    //    }
                    //    if (sgen.GetSession(MyGuid, "mrndelrno") != null) btnval = "CHRGDEL";
                    //    else if (sgen.GetSession(MyGuid, "btnval") != null) btnval = sgen.GetSession(MyGuid, "btnval").ToString();
                    //    model = CallbackFun(btnval, "N", actionName, controllerName, model);
                    //    if (btnval.Trim().ToUpper().Equals("PRINT"))
                    //    {
                    //        ViewBag.vnew = "";
                    //        ViewBag.vedit = "";
                    //        ViewBag.vsave = "disabled='disabled'";
                    //        ViewBag.vsavenew = "disabled='disabled'";
                    //    }
                    //    else
                    {
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                    }
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {
                    try
                    {
                        if (model[0].Col133 == "N")
                        {
                            ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for save company document, please contact your admin', 2);";
                            return View(model);
                        }
                        if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-"))
                        {
                            ViewBag.scripCall += "showmsgJS(1,'Please Select item in grid-1', 2);";
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            return View(model);
                        }
                        if (model[0].dt1.Rows[0]["LOCATION"].ToString().Trim().Equals("-"))
                        {
                            ViewBag.scripCall += "showmsgJS(1,'Please Fill Location In Grid-1', 2);";
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            return View(model);
                        }
                        Satransaction sat1 = new Satransaction(userCode, MyGuid);
                        string currdate = sgen.server_datetime(userCode);
                        if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                        {
                            mq1 = " and vch_num<>'" + model[0].Col16.Trim() + "'";
                            isedit = true;
                            vch_num = model[0].Col16;
                            vch_num = model[0].Col47;
                        }
                        else
                        {
                            mq1 = "";
                            isedit = false;
                            mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                            vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        }
                        if (model[0].Col28 == "" || model[0].Col28 == null)
                        {
                            mq = "select invno,vch_num,to_char(convert_tz(vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') vch_date from itransaction where " +
                                "client_unit_id='" + unitid_mst + "' and acode='" + model[0].Col49 + "' and invno='" + model[0].Col28 + "' and vch_date between " +
                                "to_date('" + year_from + "','" + sgen.Getsqldatetimeformat() + "') and to_date('" + year_to + "','" + sgen.Getsqldatetimeformat() + "') " + mq1 + "";
                            DataTable dtchk = sgen.getdata(userCode, mq);
                            if (dtchk.Rows.Count > 0)
                            {
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                                ViewBag.scripCall += "showmsgJS(1, 'This invoice no. is already attached in mrn no=" + dtchk.Rows[0]["vch_num"].ToString() + " on " + dtchk.Rows[0]["vch_date"].ToString() + "', 2);";
                                return View(model);
                            }
                        }
                        DataTable dataTable = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                        DataTable dtbtch = cmd_Fun.GetStructure(userCode, "btchtrans");
                        DataTable dtqa = new DataTable();
                        for (int i = 0; i < model[0].dt1.Rows.Count; i++)
                        {
                            if (isedit)
                            {
                                string fstr = model[0].Col2 + model[0].Col16 + model[0].dt1.Rows[i]["icode"].ToString() + "Q" + model[0].Col12;
                                mq = "select t.icode,sum(nvl(t.qtyin,0)) Received,sum(nvl(t.qtyout, 0)) Issued,sum(nvl(t.qtyin, 0)) - sum(nvl(t.qtyout, 0)) qtystk " +
                                    "from itransaction t where trim(t.store) = 'Y' and t.client_unit_id='" + unitid_mst + "' and t.icode='" + model[0].dt1.Rows[i]["icode"].ToString() + "' " +
                                    "and (client_unit_id||vch_num||icode||type)<>'" + fstr + "' group by t.icode";
                                mq = sgen.seekval(userCode, mq, "qtystk");
                                int curstk = (sgen.Make_int(mq) + sgen.Make_int(model[0].dt1.Rows[i][9].ToString()));
                                if (curstk.ToString().Trim().Contains("-"))
                                {
                                    ViewBag.vnew = "disabled='disabled'";
                                    ViewBag.vedit = "disabled='disabled'";
                                    ViewBag.vsave = "";
                                    ViewBag.vsavenew = "";
                                    ViewBag.scripCall += "showmsgJS(1, 'You cannot set your stock to negative (-ve)', 2);";
                                    return View(model);
                                }
                            }

                            #region dr
                            DataRow dr = dataTable.NewRow();
                            dr["type"] = model[0].Col12;
                            dr["vch_num"] = vch_num.Trim();
                            dr["doc_type"] = vch_num + sgen.Savedate(model[0].Col48, true).Split(' ')[0].Trim().Replace("-", "").Trim() + model[0].Col12 + model[0].dt1.Rows[i][21].ToString(); //doc + type
                            dr["vch_date"] = sgen.Savedate(model[0].Col48, true);
                            dr["acode"] = model[0].Col49;
                            dr["chlno"] = model[0].Col23;
                            dr["chldate"] = sgen.Savedate(model[0].Col24, false);
                            dr["tmode"] = model[0].Col25;
                            dr["ewayno"] = model[0].Col26;
                            dr["ewaydate"] = sgen.Savedate(model[0].Col27, false);
                            dr["invno"] = model[0].Col28;
                            dr["invdate"] = sgen.Savedate(model[0].Col29, false);
                            //dt====
                            dr["rno"] = model[0].dt1.Rows[i][1].ToString();
                            dr["icode"] = model[0].dt1.Rows[i][2].ToString();
                            dr["iname"] = model[0].dt1.Rows[i][3].ToString();
                            dr["cpartno"] = model[0].dt1.Rows[i][4].ToString();
                            dr["hsno"] = model[0].dt1.Rows[i][5].ToString();
                            dr["uom"] = model[0].dt1.Rows[i][6].ToString();
                            dr["taxrate"] = model[0].dt1.Rows[i][7].ToString();
                            dr["qtychl"] = model[0].dt1.Rows[i][8].ToString().Trim();
                            dr["qtyrcvd"] = model[0].dt1.Rows[i][9].ToString().Trim();
                            dr["irate"] = sgen.Round2Decimals(sgen.Make_decimal(model[0].dt1.Rows[i][10].ToString().Trim()), 2).ToString().Trim();
                            dr["disctype"] = model[0].dt1.Rows[i][11].ToString();
                            dr["discrate"] = model[0].dt1.Rows[i][12].ToString();
                            dr["iamount"] = sgen.Round2Decimals(sgen.Make_decimal(model[0].dt1.Rows[i][13].ToString().Trim()), 2).ToString().Trim();
                            dr["taxamt"] = sgen.Round2Decimals(sgen.Make_decimal(model[0].dt1.Rows[i][14].ToString().Trim()), 2).ToString().Trim();
                            dr["discamt"] = model[0].dt1.Rows[i][15].ToString();
                            dr["lineamount"] = sgen.Round2Decimals(sgen.Make_decimal(model[0].dt1.Rows[i][16].ToString().Trim()), 2).ToString().Trim();
                            dr["pktno"] = model[0].dt1.Rows[i][17].ToString() == "" ? "0" : model[0].dt1.Rows[i][17].ToString();//noofpkt/box
                            dr["iremark"] = model[0].dt1.Rows[i][18].ToString();
                            dr["pono"] = model[0].dt1.Rows[i][19].ToString();
                            dr["podate"] = sgen.Savedate(model[0].dt1.Rows[i][20].ToString(), true);
                            dr["btchno"] = model[0].dt1.Rows[i][21].ToString();
                            dr["qtystk"] = model[0].dt1.Rows[i][23].ToString();
                            dr["gatein_no"] = model[0].SelectedItems1.FirstOrDefault();
                            dr["store"] = "N";
                            dr["inspected"] = "N";
                            dr["col1"] = model[0].Col60;
                            dr["col2"] = model[0].Col61;
                            dr["col3"] = model[0].Col62;
                            dr["col4"] = model[0].Col66;
                            dr["col5"] = model[0].Col67;
                            dr["col6"] = model[0].Col68;
                            dr["dt1"] = sgen.Make_date_S(model[0].Col63);
                            dr["dt2"] = sgen.Make_date_S(model[0].Col64);
                            dr["dt3"] = sgen.Make_date_S(model[0].Col65);
                            //======
                            dr["totremark"] = model[0].Col31;
                            dr["cond"] = model[0].Col32;
                            dr["basicamt"] = model[0].Col33;
                            dr["igst"] = model[0].Col34;
                            dr["cgst"] = model[0].Col35;
                            dr["sgst"] = model[0].Col36;
                            dr["gamt"] = model[0].Col37;
                            dr["gigst"] = model[0].Col38;
                            dr["gcgst"] = model[0].Col39;
                            dr["gsgst"] = model[0].Col40;
                            dr["netamt"] = model[0].Col50;
                            dr["vehno"] = model[0].Col53;
                            dr["rec_id"] = "0";
                            // shiv
                            if (isedit)
                            {
                                dr["client_id"] = model[0].Col1.Trim();
                                dr["client_unit_id"] = model[0].Col2.Trim();
                                dr["ent_by"] = model[0].Col3;
                                dr["ent_date"] = model[0].Col4;
                                dr["edit_by"] = userid_mst;
                                dr["edit_date"] = currdate;
                            }
                            else
                            {
                                dr["client_id"] = clientid_mst;
                                dr["client_unit_id"] = unitid_mst;
                                dr["ent_by"] = userid_mst;
                                dr["ent_date"] = currdate;
                                dr["edit_by"] = "-";
                                dr["edit_date"] = currdate;
                            }
                            #endregion
                            dtqa = sgen.getdata(userCode, "select it.qa, itb.loc,location_name(itb.client_id||itb.client_unit_id||itb.loc) as locname from itbal itb inner join item it on itb.icode=it.Icode  where itb.type='IT' and itb.client_unit_id='" + unitid_mst + "' and itb.icode='" + model[0].dt1.Rows[i][2].ToString().Trim() + "'");
                            if (dtqa.Rows[0]["qa"].ToString().Trim() == "N")
                            {
                                //Auto quality
                                dr["inspected"] = "A";
                                #region dr2
                                DataRow dr2 = dataTable.NewRow();
                                dr2["type"] = "Q" + model[0].Col12;
                                dr2["vch_num"] = vch_num.Trim();
                                dr2["vch_date"] = sgen.Savedate(model[0].Col48, true);
                                dr2["doc_type"] = vch_num + sgen.Savedate(model[0].Col48, true).Split(' ')[0].Trim().Replace("-", "").Trim() + model[0].Col12 + model[0].dt1.Rows[i][21].ToString(); //doc + type
                                dr2["acode"] = model[0].Col49;
                                dr2["chlno"] = model[0].Col23;
                                dr2["chldate"] = sgen.Savedate(model[0].Col24, false);
                                dr2["tmode"] = model[0].Col25;
                                dr2["ewayno"] = model[0].Col26;
                                dr2["ewaydate"] = sgen.Savedate(model[0].Col27, false);
                                dr2["invno"] = model[0].Col28;
                                dr2["invdate"] = sgen.Savedate(model[0].Col29, false);
                                //dt===
                                dr2["rno"] = model[0].dt1.Rows[i][1].ToString();
                                dr2["icode"] = model[0].dt1.Rows[i][2].ToString();
                                dr2["iname"] = model[0].dt1.Rows[i][3].ToString();
                                dr2["cpartno"] = model[0].dt1.Rows[i][4].ToString();
                                dr2["hsno"] = model[0].dt1.Rows[i][5].ToString();
                                dr2["uom"] = model[0].dt1.Rows[i][6].ToString();
                                dr2["taxrate"] = model[0].dt1.Rows[i][7].ToString();
                                dr2["qtychl"] = model[0].dt1.Rows[i][8].ToString();
                                dr2["qtyin"] = model[0].dt1.Rows[i][9].ToString();
                                dr2["irate"] = sgen.Round2Decimals(sgen.Make_decimal(model[0].dt1.Rows[i][10].ToString().Trim()), 2).ToString().Trim();
                                dr2["disctype"] = model[0].dt1.Rows[i][11].ToString();
                                dr2["discrate"] = model[0].dt1.Rows[i][12].ToString();
                                dr2["iamount"] = sgen.Round2Decimals(sgen.Make_decimal(model[0].dt1.Rows[i][13].ToString().Trim()), 2).ToString().Trim();
                                dr2["taxamt"] = sgen.Round2Decimals(sgen.Make_decimal(model[0].dt1.Rows[i][14].ToString().Trim()), 2).ToString().Trim();
                                dr2["discamt"] = model[0].dt1.Rows[i][15].ToString();
                                dr2["lineamount"] = sgen.Round2Decimals(sgen.Make_decimal(model[0].dt1.Rows[i][16].ToString().Trim()), 2).ToString().Trim();
                                dr2["pktno"] = model[0].dt1.Rows[i][17].ToString() == "" ? "0" : model[0].dt1.Rows[i][17].ToString();//noofpkt/box
                                dr2["iremark"] = model[0].dt1.Rows[i][18].ToString();
                                dr2["pono"] = model[0].dt1.Rows[i][19].ToString();
                                dr2["podate"] = sgen.Savedate(model[0].dt1.Rows[i][20].ToString(), true);
                                dr2["btchno"] = model[0].dt1.Rows[i][21].ToString();
                                dr2["qtystk"] = model[0].dt1.Rows[i][23].ToString();
                                dr2["store"] = "Y";
                                dr2["inspected"] = "Y";
                                //=======
                                dr["col1"] = model[0].Col60;
                                dr["col2"] = model[0].Col61;
                                dr["col3"] = model[0].Col62;
                                dr["col4"] = model[0].Col66;
                                dr["col5"] = model[0].Col67;
                                dr["col6"] = model[0].Col68;
                                dr["dt1"] = sgen.Make_date_S(model[0].Col63);
                                dr["dt2"] = sgen.Make_date_S(model[0].Col64);
                                dr["dt3"] = sgen.Make_date_S(model[0].Col65);
                                dr2["totremark"] = model[0].Col31;
                                dr2["cond"] = model[0].Col32;
                                dr2["basicamt"] = model[0].Col33;
                                dr["igst"] = model[0].Col34;
                                dr["cgst"] = model[0].Col35;
                                dr["sgst"] = model[0].Col36;
                                dr["gamt"] = model[0].Col37;
                                dr["gigst"] = model[0].Col38;
                                dr["gcgst"] = model[0].Col39;
                                dr["gsgst"] = model[0].Col40;
                                dr["netamt"] = model[0].Col50;
                                dr2["vehno"] = model[0].Col53;
                                dr2["rec_id"] = "0";
                                if (isedit)
                                {
                                    dr2["client_id"] = model[0].Col1.Trim();
                                    dr2["client_unit_id"] = model[0].Col2.Trim();
                                    dr2["ent_by"] = model[0].Col3;
                                    dr2["ent_date"] = model[0].Col4;
                                    dr2["edit_by"] = userid_mst;
                                    dr2["edit_date"] = currdate;
                                }
                                else
                                {
                                    dr2["client_id"] = clientid_mst;
                                    dr2["client_unit_id"] = unitid_mst;
                                    dr2["ent_by"] = userid_mst;
                                    dr2["ent_date"] = currdate;
                                    dr2["edit_by"] = "-";
                                    dr2["edit_date"] = currdate;
                                }
                                dataTable.Rows.Add(dr2);
                                #endregion
                                //location
                                if (model[0].Col55.Trim() == "Y")
                                {
                                    #region btch
                                    DataRow dr3 = dtbtch.NewRow();
                                    dr3["vch_num"] = vch_num.Trim();
                                    dr3["type"] = "Q" + model[0].Col12;
                                    dr3["doc_type"] = vch_num + sgen.Savedate(model[0].Col48, true).Split(' ')[0].Trim().Replace("-", "").Trim() + model[0].Col12 + model[0].dt1.Rows[i][21].ToString(); //doc + type
                                    dr3["vch_date"] = sgen.Savedate(model[0].Col48, true);

                                    dr3["rno"] = model[0].dt1.Rows[i][1].ToString();
                                    dr3["icode"] = model[0].dt1.Rows[i][2].ToString();
                                    dr3["iname"] = model[0].dt1.Rows[i][3].ToString();
                                    dr3["cpartno"] = model[0].dt1.Rows[i][4].ToString();
                                    dr3["uom"] = model[0].dt1.Rows[i][6].ToString();
                                    dr3["qtyin"] = model[0].dt1.Rows[i][9].ToString();
                                    dr3["qtystk"] = model[0].dt1.Rows[i][23].ToString();
                                    dr3["iremark"] = model[0].dt1.Rows[i][17].ToString();
                                    dr3["loc"] = dtqa.Rows[0]["loc"].ToString().Trim();
                                    dr3["locname"] = dtqa.Rows[0]["locname"].ToString().Trim();
                                    dr3["store"] = "Y";
                                    dr3["pktno"] = model[0].dt1.Rows[i][17].ToString() == "" ? "0" : model[0].dt1.Rows[i][17].ToString();//noofpkt/box
                                    dr3["btchno"] = model[0].dt1.Rows[i][21].ToString();
                                    dr3["rec_id"] = "0";
                                    // shiv
                                    if (isedit)
                                    {
                                        dr3["client_id"] = model[0].Col1.Trim();
                                        dr3["client_unit_id"] = model[0].Col2.Trim();
                                        dr3["ent_by"] = model[0].Col3;
                                        dr3["ent_date"] = model[0].Col4;
                                        dr3["edit_by"] = userid_mst;
                                        dr3["edit_date"] = currdate;
                                    }
                                    else
                                    {
                                        dr3["client_id"] = clientid_mst;
                                        dr3["client_unit_id"] = unitid_mst;
                                        dr3["ent_by"] = userid_mst;
                                        dr3["ent_date"] = currdate;
                                        dr3["edit_by"] = "-";
                                        dr3["edit_date"] = currdate;
                                    }
                                    dtbtch.Rows.Add(dr3);
                                    #endregion
                                }
                            }
                            mq0 = "select nonstk from item where type='IT' and client_unit_id='" + unitid_mst + "' and icode='" + model[0].dt1.Rows[i][2].ToString().Trim() + "'";
                            mq0 = sgen.seekval(userCode, mq0, "nonstk");
                            if (mq0.Trim() == "Y")
                            {
                                #region auto issue
                                DataRow dra = dataTable.NewRow();
                                dra["vch_num"] = vch_num.Trim();
                                dra["type"] = "30";//issue without requisition
                                dra["vch_date"] = sgen.Savedate(model[0].Col48, true);
                                dra["deptno"] = "";
                                dra["desig"] = "";
                                dra["totremark"] = model[0].Col31;
                                dra["cond"] = "";//orderid                           
                                dra["icode"] = model[0].dt1.Rows[i][2].ToString();
                                dra["iname"] = model[0].dt1.Rows[i][3].ToString();
                                dra["cpartno"] = model[0].dt1.Rows[i][4].ToString();
                                dra["uom"] = model[0].dt1.Rows[i][6].ToString();
                                dra["qtystk"] = model[0].dt1.Rows[i][9].ToString().Trim();//qtyin
                                dra["qtychl"] = model[0].dt1.Rows[i][8].ToString().Trim();//qtychl
                                dra["qtyout"] = model[0].dt1.Rows[i][9].ToString().Trim();//qtyin
                                dra["qtybal"] = sgen.Make_decimal(model[0].dt1.Rows[i][8].ToString().Trim()) - sgen.Make_decimal(model[0].dt1.Rows[i][9].ToString().Trim());
                                dra["iremark"] = model[0].dt1.Rows[i][17].ToString();
                                dra["pono"] = "";
                                dra["irate"] = sgen.Round2Decimals(sgen.Make_decimal(model[0].dt1.Rows[i][10].ToString().Trim()), 2).ToString().Trim();
                                dra["iamount"] = sgen.Round2Decimals(sgen.Make_decimal(model[0].dt1.Rows[i][13].ToString().Trim()), 2).ToString().Trim();
                                dra["store"] = "Y";
                                dra["pktno"] = model[0].dt1.Rows[i][17].ToString() == "" ? "0" : model[0].dt1.Rows[i][17].ToString();//noofpkt/box
                                dra["rec_id"] = "0";
                                // shiv
                                if (isedit)
                                {
                                    dra["client_id"] = model[0].Col1.Trim();
                                    dra["client_unit_id"] = model[0].Col2.Trim();
                                    dra["ent_by"] = model[0].Col3;
                                    dra["ent_date"] = model[0].Col4;
                                    dra["edit_by"] = userid_mst;
                                    dra["edit_date"] = currdate;
                                }
                                else
                                {
                                    dra["client_id"] = clientid_mst;
                                    dra["client_unit_id"] = unitid_mst;
                                    dra["ent_by"] = userid_mst;
                                    dra["ent_date"] = currdate;
                                    dra["edit_by"] = "-";
                                    dra["edit_date"] = currdate;
                                }
                                dataTable.Rows.Add(dra);
                                #endregion
                                #region issue loc
                                DataRow drl = dtbtch.NewRow();
                                drl["vch_num"] = vch_num;
                                drl["type"] = "30";
                                drl["vch_date"] = sgen.Savedate(model[0].Col48, true); ;
                                drl["deptno"] = "";
                                drl["desig"] = "";
                                drl["totremark"] = model[0].Col31;
                                drl["ordid"] = "";//orderid
                                drl["icode"] = model[0].dt1.Rows[i][2].ToString();
                                drl["iname"] = model[0].dt1.Rows[i][3].ToString();
                                drl["cpartno"] = model[0].dt1.Rows[i][4].ToString();
                                drl["uom"] = model[0].dt1.Rows[i][6].ToString();
                                drl["qtystk"] = model[0].dt1.Rows[i][9].ToString().Trim();//qtyin
                                drl["qtyout"] = model[0].dt1.Rows[i][9].ToString().Trim();//qtyin
                                drl["iremark"] = model[0].dt1.Rows[i][17].ToString();
                                drl["loc"] = dtqa.Rows[0]["loc"].ToString().Trim();
                                drl["locname"] = dtqa.Rows[0]["locname"].ToString().Trim();
                                drl["pktno"] = model[0].dt1.Rows[i][17].ToString() == "" ? "0" : model[0].dt1.Rows[i][17].ToString();//noofpkt/box
                                drl["store"] = "Y";
                                drl["rec_id"] = "0";
                                // shiv
                                if (isedit)
                                {
                                    drl["client_id"] = model[0].Col1.Trim();
                                    drl["client_unit_id"] = model[0].Col2.Trim();
                                    drl["ent_by"] = model[0].Col3;
                                    drl["ent_date"] = model[0].Col4;
                                    drl["edit_by"] = userid_mst;
                                    drl["edit_date"] = currdate;
                                }
                                else
                                {
                                    drl["client_id"] = clientid_mst;
                                    drl["client_unit_id"] = unitid_mst;
                                    drl["ent_by"] = userid_mst;
                                    drl["ent_date"] = currdate;
                                    drl["edit_by"] = "-";
                                    drl["edit_date"] = currdate;
                                }
                                #endregion
                            }
                            dataTable.Rows.Add(dr);
                        }
                        res = true; ok = true;
                        res = sgen.Update_data_fast1_uncommit(userCode, dataTable, model[0].Col10.Trim(), model[0].Col8, isedit, sat1);
                        if (dtbtch.Rows.Count > 0) ok = sgen.Update_data_fast1_uncommit(userCode, dtbtch, "btchtrans", model[0].Col8, isedit, sat1);
                        if (res && ok)
                        {
                            DataTable dten = cmd_Fun.GetStructure(userCode, "enx_tab");
                            if (model[0].LTM1 != null && model[0].LTM1.Count > 0)
                            {
                                res = false;
                                #region dr
                                bool ed = isedit;
                                string whr = model[0].Col8;
                                string fnd = sgen.seekval(userCode, "select vch_num from enx_tab where (client_id||client_unit_id||vch_num||to_char(vch_date, 'yyyymmdd'))='" + model[0].Col8 + "' and type in ('01','Q01')", "vch_num");
                                if (fnd == "0")
                                {
                                    ed = false;
                                    whr = "";
                                }
                                for (int k = 0; k < model[0].LTM1.Count; k++)
                                {
                                    DataRow dr = dten.NewRow();
                                    dr["type"] = model[0].Col12;
                                    dr["vch_num"] = vch_num.Trim();
                                    dr["vch_date"] = sgen.Savedate(model[0].Col48, true);
                                    //dt====
                                    dr["r_no"] = model[0].LTM1[k].Col14;
                                    dr["col1"] = model[0].LTM1[k].Col15;//chrgid
                                    dr["col2"] = model[0].LTM1[k].Col16;//chrgamt
                                    dr["col3"] = model[0].LTM1[k].Col13;//chrgrtid
                                    dr["col4"] = model[0].LTM1[k].Col17;//igstrt
                                    dr["col5"] = model[0].LTM1[k].Col18;//igstamt
                                    dr["col6"] = model[0].LTM1[k].Col19;//cgstrt
                                    dr["col7"] = model[0].LTM1[k].Col20;//cgstamt
                                    dr["col8"] = model[0].LTM1[k].Col21;//sgstrt
                                    dr["col9"] = model[0].LTM1[k].Col22;//sgstamt
                                                                        //======                            
                                    dr["rec_id"] = "0";
                                    // shiv
                                    if (isedit)
                                    {
                                        dr["client_id"] = model[0].Col1.Trim();
                                        dr["client_unit_id"] = model[0].Col2.Trim();
                                        dr["ent_by"] = model[0].Col3;
                                        dr["ent_date"] = model[0].Col4;
                                        dr["edit_by"] = userid_mst;
                                        dr["edit_date"] = currdate;
                                    }
                                    else
                                    {
                                        dr["client_id"] = clientid_mst;
                                        dr["client_unit_id"] = unitid_mst;
                                        dr["ent_by"] = userid_mst;
                                        dr["ent_date"] = currdate;
                                        dr["edit_by"] = "-";
                                        dr["edit_date"] = currdate;
                                    }
                                    dten.Rows.Add(dr);
                                }
                                #endregion
                                res = sgen.Update_data_fast1_uncommit(userCode, dten, "enx_tab", whr, ed, sat1);
                                if (!res)
                                {
                                    sat1.Rollback();
                                    ViewBag.vnew = "disabled='disabled'";
                                    ViewBag.vedit = "disabled='disabled'";
                                    ViewBag.vsave = "";
                                    ViewBag.vsavenew = "";
                                    ViewBag.scripCall += "showmsgJS(1, 'Calc error', 0);";
                                    ModelState.Clear();
                                    return View(model);
                                }
                            }
                            sat1.Commit();
                            string reg_no = "", Email_id = "", send_type = "", phone_No = "", xclass = "", sec = "", emailidcc = "", msg_txt = "", account = "";
                            string email = "", DetailSms = "0", DetailEmail = "0", xtitle = "";
                            int cnt = 0;
                            try
                            {
                                DataTable dtmail = sgen.getdata(userCode, "select col2 as Temp_Set_For,nvl(col5,'0') as email_id,col7 as lang,nvl(col6,'0') as mobile_no,col9,col10,col1 as Body_Text,col3 as signature,col8 as Email_Heading from enx_tab where type = 'ETP' and client_unit_id = '" + unitid_mst + "' and col13 = '013'");
                                if (dtmail.Rows[0]["mobile_no"].ToString() != null && dtmail.Rows[0]["mobile_no"].ToString() != "0" && dtmail.Rows[0]["col10"].ToString().Equals("Y"))
                                {
                                    #region SMS
                                    BulkSMS bulk = new BulkSMS(userCode, clientid_mst, unitid_mst, MyGuid);
                                    string[] ph_cc = (dtmail.Rows[0]["mobile_no"].ToString().Split(','));
                                    string phone_cc = "";
                                    for (Int32 y = 0; y < ph_cc.Length; y++)
                                    {
                                        phone_cc = ph_cc[y];
                                        if ((phone_cc != "0"))
                                        {
                                            msg_txt = sgen.ExtractHtmlInnerText(dtmail.Rows[0]["Body_Text"].ToString().Replace("\r\n", " %0a"));
                                            //string smsstatus = sgen.Send_Sms(userCode, clientid_mst, unitid_mst, phone_cc, msg_txt, dtmail.Rows[0]["lang"].ToString() == "2");
                                            bulk.Add_sms(phone_cc, msg_txt, dtmail.Rows[0]["lang"].ToString() == "2");
                                            // smsstatus = sgen.Send_Sms(userCode, clientid_mst, unitid_mst, phone_cc, msg_txt, dtmail.Rows[0]["lang"].ToString() == "2");
                                        }
                                    }
                                    bulk.Send_SMS_Bulk();
                                    #endregion
                                }
                                else if (dtmail.Rows[0]["email_id"].ToString() != null && dtmail.Rows[0]["email_id"].ToString() != "0")
                                {
                                    #region SEND MAIL
                                    string mailfrom = "";
                                    DataTable datatable = new DataTable();
                                    datatable = sgen.getdata(userCode, "select com_email from company_profile where Company_Profile_Id='" + clientid_mst + "' and type='CP'");
                                    if (datatable.Rows.Count > 0)
                                    {
                                        mailfrom = Convert.ToString(datatable.Rows[0]["com_email"].ToString());
                                    }
                                    string mailcc = string.Join(",", dtmail.Rows[0]["email_id"].ToString());
                                    mailcc = mailcc.Replace("'", "");
                                    string[] itar = mailcc.Trim().Split(',');
                                    Mailer mailer = new Mailer(userCode, clientid_mst, unitid_mst, MyGuid);
                                    var body = new StringBuilder();
                                    if (itar.Length > 0)
                                    {
                                        for (Int32 y = 0; y < itar.Length; y++)
                                        {
                                            string[] Emialar = itar[y].Replace("(", "").Replace(")", "").Trim().Split(' ');
                                            if (sgen.ValidateEmail(Emialar[0].ToString()))
                                            {
                                                if (emailidcc.Equals("")) emailidcc = Emialar[0].ToString();
                                                else
                                                {
                                                    emailidcc = emailidcc + "," + Emialar[0].ToString();
                                                }
                                            }
                                        }
                                        Email_id = emailidcc;
                                        xtitle = "";
                                        //xtitle = "Mr Owner, Your Order has Been Gate In  and Gate_in no is : '" + model[0].Col16 + "'";
                                        xtitle = "Mr Owner, You are Being Informed By Your Gate Department";
                                        body.AppendLine(@"<b style='color:#3caee9; font-size: 20px'>" + dtmail.Rows[0]["Email_Heading"].ToString() + " </b><br /><hr style='border:1px solid black' />" +
                                        "<p>Hi <b>" + xtitle + " : </b>,</p><table style='font-weight:600'>");
                                        //foreach (DataRow drl in dataTable.Rows)
                                        //{
                                        //    if (Email_id != "")
                                        //    {
                                        //        drl["col9"].ToString();
                                        //        body.AppendLine(@"<tr><td>Subject </td><td>: " + drl["col9"] + " </td>" +
                                        //             "</tr><tr><td> Chapter Name </td><td>: " + drl["col10"] + " </td></tr>" +
                                        //             "<tr><td> Topic </td><td>: " + drl["col11"] + " </td></tr>" +
                                        //             "<tr><td> Remarks </td><td>: " + drl["col4"] + " </td></tr>");
                                        //        body.AppendLine("<br><br>");
                                        //    }
                                        //}
                                        body.AppendLine(@"</table><br /><p>" + dtmail.Rows[0]["Body_Text"].ToString() + "</p><p>ThankYou,<br />" + dtmail.Rows[0]["signature"].ToString() + "<br /></p><br />");
                                        //body.AppendLine(@"</table><br /><p>" + dtmail.Rows[0]["Body_Text"].ToString() + "</p><p>ThankYou,<br />" + clientname_mst + "<br /></p><br />");
                                        sgen.Send_mail_SA1(userCode, clientid_mst, unitid_mst, mailfrom, emailidcc, Email_id, body.ToString(), dtmail.Rows[0]["Email_Heading"].ToString(), "");
                                        mailer.Add_Mail(Email_id, dtmail.Rows[0]["Email_Heading"].ToString(), body.ToString());
                                    }
                                    mailer.Send_Email_Bulk();
                                    #endregion
                                }
                            }
                            catch (Exception err) { ViewBag.scripCall += "mytoast('error', 'toast-top-right', 'Mail Not Sent');"; }
                            //ViewBag.vnew = "";
                            //ViewBag.vedit = "";
                            //ViewBag.vsave = "disabled='disabled'";
                            //ViewBag.vsavenew = "disabled='disabled'";
                            string date = sgen.SaveDate_dt(tm.Col48, false).ToString("yyyyMMdd");
                            url = clientid_mst + unitid_mst + vch_num + date + "" + model[0].Col12 + "";
                            sgen.SetSession(MyGuid, "SSEEKVAL", url);
                            //  ViewBag.scripCall = "showmsgJS(2, 'Data Saved Successfully. Do You Want To Print', 1);disableForm();";
                            model = new List<Tmodelmain>();
                            model.Add(new Tmodelmain
                            {
                                Col10 = tm.Col10,
                                Col11 = tm.Col11,
                                Col13 = "Save",
                                Col100 = "Save & New ",
                                Col121 = "S",
                                Col122 = "<u>S</u>ave",
                                Col123 = "Save & Ne<u>w</u>",
                                Col14 = tm.Col14,
                                Col15 = tm.Col15,
                                dt1 = (DataTable)sgen.GetSession(MyGuid, "KMRN_DT"),
                                Col55 = sgen.GetSession(MyGuid, "LOCCHK").ToString().Trim(),
                                TList1 = mod1,
                                SelectedItems1 = new string[] { "" },
                            });
                            sgen.SetSession(MyGuid, "KMRNTYPE", null);
                            sgen.SetSession(MyGuid, "BDREJTYP", null);
                            sgen.SetSession(MyGuid, "BDMRNINVTYPE", null);
                            sgen.SetSession(MyGuid, "BDINVDOCNO", null);
                            if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                            {
                                ViewBag.vnew = "";
                                ViewBag.vedit = "";
                                ViewBag.vsave = "disabled='disabled'";
                                ViewBag.vsavenew = "disabled='disabled'";
                                ViewBag.scripCall += "showmsgJS(2, 'Data Saved Successfully. Do You Want To Print', 1);disableForm();";
                            }
                            else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                            {
                                try
                                {
                                    Make_query("mrn", "Select MRN Type", "NEW", "1", "", "");
                                    ViewBag.scripCall = "callFoo('Select MRN Type');";
                                    ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                                }
                                catch (Exception ex) { }
                            }
                        }
                        else
                        {
                            sat1.Rollback();
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            ViewBag.scripCall += "showmsgJS(1, 'Data Not Saved', 0);";
                            ModelState.Clear();
                            return View(model);
                        }
                    }
                    //    catch (Exception ex) { ViewBag.scripCall += "showmsgJS(1,'" + ex.Message.ToString().Replace("'", "") + "', 0);"; }
                    //}

                    catch (Exception ex) { ViewBag.scripCall += "showmsgJS(1,'" + ex.Message.ToString().Replace("'", "") + "', 0);"; }
                }
                else if (command == "hfbtnyes") { model = CallbackFun("PRINT", "N", "mrn", "Inventory", model); }
                else if (command == "Import")
                {
                    HttpPostedFileBase file1 = upd1;
                    DataTable dt = new DataTable();
                    if (file1.ContentLength > 1)

                    //else if (command == "Import")

                    //{
                    //    HttpPostedFileBase file1 = upd1;
                    //    DataTable dt = new DataTable();
                    //    if (file1.ContentLength > 1)
                    {
                        string ext = Path.GetExtension(file1.FileName).ToLower();
                        if (ext == ".csv")
                        {
                            string filesavepath = AppDomain.CurrentDomain.BaseDirectory + "\\Uploads\\" + cg_com_name.Replace(" ", "")
                                + "\\file" + DateTime.Now.ToString("ddMMyyyyhhmmfff") + ext;
                            file1.SaveAs(filesavepath);
                            // Read sample data from CSV file
                            int i = 0;
                            using (CsvFileReader reader = new CsvFileReader(filesavepath))
                            {
                                CsvRow row = new CsvRow();
                                while (reader.ReadRow(row))
                                {
                                    DataRow dr = dt.NewRow();
                                    for (int c = 0; c < row.Count; c++)
                                    {
                                        if (i == 0) { dt.Columns.Add(row[c].ToString()); }
                                        else { dr[c] = row[c].ToString(); }
                                        //if (c > dt.Columns.Count) break;                                                                 
                                    }
                                    i++;
                                    dt.Rows.Add(dr);
                                }
                            }
                        }
                        try
                        {
                            dt.Rows[0].Delete();
                            for (int k = 0; k < dt.Rows.Count; k++)
                            {
                                mq = sgen.seekval(userCode, "select icode from item where icode='" + dt.Rows[k]["icode"].ToString() + "' and type='IT' and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "'", "icode");
                                if (mq.Trim() == "0")
                                {
                                    ViewBag.vnew = "disabled='disabled'";
                                    ViewBag.vedit = "disabled='disabled'";
                                    ViewBag.vsave = "";
                                    ViewBag.vsavenew = "";
                                    ViewBag.scripCall += "showmsgJS(1,'Icode: " + dt.Rows[k]["icode"].ToString() + " not found,please check.', 0);";
                                    ModelState.Clear();
                                    return View(model);
                                }
                            }
                            mq1 = "select '' item,'0' Sno,i.icode,i.iname,i.cpartno partno,u.master_name uom,h.master_name hsn,h.group_name taxrate," +
                                "'0' iamount,'0' taxamount,'0' lineamount,'0' po_number,'-' po_date,location_name('" + clientid_mst + "'||'" + unitid_mst + "'||itb.loc) as location from item i " +
                                "inner join itbal itb on i.icode=itb.icode and i.type=itb.type and i.client_unit_id=itb.client_unit_id " +
                                "inner join  master_setting u on u.master_id = i.uom and u.type = 'UMM' and find_in_set(u.client_unit_id, i.client_unit_id)= 1 " +
                                "inner join  master_setting h on h.master_id = i.hsno and h.type = 'HSN' and find_in_set(h.client_unit_id, i.client_unit_id)= 1 " +
                                "where i.type = 'IT' and i.client_unit_id = '" + unitid_mst + "'";
                            DataTable dt2 = sgen.getdata(userCode, mq1);
                            if (dt2.Rows.Count > 0)
                            {
                                var results = from table1 in dt.AsEnumerable()
                                              join table2 in dt2.AsEnumerable() on table1["icode"] equals table2["icode"]
                                              select new
                                              {
                                                  item = table2["item"],
                                                  sno = table2["sno"],
                                                  icode = table1["icode"],
                                                  iname = table2["iname"],
                                                  partno = table2["partno"],
                                                  hsn = table2["hsn"],
                                                  uom = table2["uom"],
                                                  taxrate = table2["taxrate"],
                                                  qty_chl = table1["qty_chl"],
                                                  qty_in = table1["qty_in"],
                                                  irate = table1["irate"],
                                                  disc_type = table1["disc_type"],
                                                  disc_rate = table1["disc_rate"],
                                                  iamount = table2["iamount"],
                                                  taxamount = table2["taxamount"],
                                                  discamount = table1["discamount"],
                                                  lineamount = table2["lineamount"],
                                                  noofpkt_box = table1["noofpkt_box"],
                                                  remark = table1["remark"],
                                                  po_number = table2["po_number"],
                                                  po_date = table2["po_date"],
                                                  batchno = table1["batchno"],
                                                  location = table2["location"]
                                              };
                                results.ToList();
                                DataTable dtk = sgen.ToDataTable(results.ToList());
                                model[0].dt1 = dtk;
                                ViewBag.vsave = "";
                                ViewBag.vimport = "";
                            }
                        }
                        catch (Exception err) { sgen.showmsg(1, err.Message.ToString(), 0); }
                    }
                }
                else if (command == "-")
                {
                    if (model[0].dt1.Rows.Count > 1) model[0].dt1.Rows.RemoveAt(sgen.Make_int(hfrow));
                    else { model[0].dt1 = (DataTable)sgen.GetSession(MyGuid, "KMRN_DT"); }
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
            }
            catch (Exception err)
            {
                var LineNumber = sgen.GetError(err);
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region INVREPS
        #region invreps
        public ActionResult invreps()
        {
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            FillMst(MyGuid);
            mid_mst = EncryptDecrypt.Decrypt(Request.QueryString["mid"]);
            chkRef();
            List<Tmodelmain> model = new List<Tmodelmain>();
            Tmodelmain tm1 = new Tmodelmain();
            tm1.Col10 = "itransaction";
            tm1.Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            tm1.Col13 = "Save";
            tm1.Col100 = "Save & New";
            tm1.Col14 = mid_mst.Trim();
            tm1.Col15 = MyGuid.Trim();
            model.Add(tm1);
            return View(model);
        }
        [HttpPost]
        public ActionResult invreps(List<Tmodelmain> model, string command)
        {
            try
            {
                string fdt = "", tdt = "", title = "", btnval = "";
                int seektype = 0;
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();
                DataTable dt = new DataTable();
                if (sgen.GetSession(MyGuid, "KPDFDT") != null) fdt = sgen.GetSession(MyGuid, "KPDFDT").ToString();
                if (sgen.GetSession(MyGuid, "KPDTDT") != null) tdt = sgen.GetSession(MyGuid, "KPDTDT").ToString();
                if (sgen.GetSession(MyGuid, "KPDCMD") != null) command = sgen.GetSession(MyGuid, "KPDCMD").ToString();
                string tcp = "", tut = "", tfromdt = "", ttodate = "";
                try
                {
                    tcp = sgen.GetSession(MyGuid, "KDDL_CL").ToString();
                    tut = sgen.GetSession(MyGuid, "KDDL_UT").ToString();
                    tfromdt = sgen.GetSession(MyGuid, "TXTFROMDATE").ToString();
                    ttodate = sgen.GetSession(MyGuid, "TXTTODATE").ToString();
                }
                catch (Exception err) { }
                string date_period = "from " + fdt + " to " + tdt + "";
                switch (command.Trim())
                {
                    case "MRN Summary (Party Wise)":
                        cmd = "select '-' fstr,mr.type as mrn_type,it.vch_num as party_code,it.c_name as party,mr.basicamt basic_amt,mr.netamt net_amount from clients_mst it " +
                            "inner join itransaction mr on mr.acode = it.vch_num and mr.type in ('01', '02', '05', '07', '09') and " +
                            "to_date(to_char(mr.vch_date,'DDMMYYYY'),'DDMMYYYY') between to_date('" + fdt + "', '" + sgen.Getsqldateformat() + "') and to_date('" + tdt + "','" + sgen.Getsqldateformat() + "') " +
                            "where it.type = 'BCD' and find_in_set(it.client_unit_id, '" + unitid_mst + "') = 1 " +
                            "group by(it.vch_num, it.c_name, mr.type,mr.basicamt,mr.netamt)";
                        title = "MRN Summary (Party Wise) " + date_period + "";
                        seektype = 0;
                        break;
                    case "Party Wise Sale":
                        cmd = "select '-' as fstr, iv.acode as party_code,cl.C_name as Party_name,cl.c_gstin as Gst_no,sum(iv.gserchrg) as IGST,sum(iv.gloadchrg) as SGST,sum(iv.gamc) as CGST,sum(iv.basicamt) as basic_amt,sum(iv.ginstlchrg) GrossAmt,sum(iv.netamt) as net_amount from clients_mst cl inner join (select distinct '-' as fstr,iv.acode,iv.gserchrg,iv.gloadchrg,iv.gamc,iv.basicamt,iv.ginstlchrg,iv.netamt,iv.client_unit_id" +
                            " from itransaction iv where substr(iv.type,1,1)= '4' and substr(iv.potype,1,1)= '5' and iv.client_unit_id = '" + unitid_mst + "' and to_date(to_char(iv.vch_date, 'DDMMYYYY'), 'DDMMYYYY') between " +
                            "to_date('" + fdt + "','" + sgen.Getsqldateformat() + "') and to_date('" + tdt + "','" + sgen.Getsqldateformat() + "')) iv on cl.vch_num = iv.acode and cl.client_unit_id = iv.client_unit_id where cl.type = 'BCD' and find_in_set(cl.client_unit_id,'" + unitid_mst + "')= 1 and substr(cl.vch_num,0,3)= '303' group by(iv.acode, cl.C_name, cl.c_gstin)";
                        title = "Party Wise Sale " + date_period + "";
                        seektype = 0;
                        break;
                    case "MRN Summary (Item Wise)":
                        cmd = "select it.icode,it.iname,sum(mr.qtyrcvd) as mrn_qty,sum(mr.basicamt) as basic_amt,sum(mr.netamt) as net_amount from item it " +
                            "inner join itransaction mr on mr.icode = it.icode and mr.type in ('01', '02', '05', '07', '09') and to_date(to_char(mr.vch_date,'DDMMYYYY'),'DDMMYYYY') between to_date('" + fdt + "', '" + sgen.Getsqldateformat() + "') and to_date('" + tdt + "','" + sgen.Getsqldateformat() + "') " +
                            "where it.type = 'IT' and find_in_set(it.client_unit_id, '" + unitid_mst + "') = 1 group by(it.icode, it.iname, mr.type)";
                        title = "MRN Summary (Item Wise) " + date_period + "";
                        seektype = 0;
                        break;
                    case "Item Wise Sale":
                        cmd = "select '-' as fstr, it.icode,it.iname,hsn.master_name as hsn_code,iv.IGST,iv.SGST,iv.CGST,iv.basic_amt,iv.GrossAmt,iv.net_amount from " +
                             "item it inner join(select iv.icode as item_code,iv.iname as item_name,sum(iv.gserchrg) as IGST,sum(iv.gloadchrg) as SGST,sum(iv.gamc) as CGST,sum(iv.basicamt) as basic_amt,sum(iv.ginstlchrg) GrossAmt,sum(iv.netamt) as net_amount from itransaction iv where substr(iv.type, 1, 1) = '4' and substr(iv.potype,1,1)= '5' and iv.client_unit_id = '" + unitid_mst + "' and to_date(to_char(iv.vch_date,'DDMMYYYY'),'DDMMYYYY') between " +
                             "to_date('" + fdt + "','" + sgen.Getsqldateformat() + "') and to_date('" + tdt + "','" + sgen.Getsqldateformat() + "') " +
                             "group by(iv.icode, iv.iname) ) iv on it.icode = iv.item_code inner join master_setting hsn on hsn.master_id = it.hsno and hsn.type = 'HSN' and find_in_set(hsn.client_id, it.client_id)= 1 and find_in_set(hsn.client_unit_id, it.client_unit_id)= 1 where it.type = 'IT' and it.sale='Y' and find_in_set(it.client_unit_id, '" + unitid_mst + "')=1";
                        title = "item Wise Sale " + date_period + "";
                        seektype = 0;
                        break;
                    case "MRN Report Detailed":
                        cmd = "select (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) as fstr," +
                             "p.vch_num MRN_Type_Code,tp.master_name as MRN_type,to_char(convert_tz(p.vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') MRN_Date" +
                             ",c.vch_num as party_code,c.c_name as Party_Name,c.c_gstin as Party_Gstin,c.addr as Party_Address,p.chlno Challan_No," +
                             " p.ewayno Eway_BillNo, nvl(kt.vch_num, '-') as gate_in_no,to_char(p.ewaydate, '" + sgen.Getsqldateformat() + "') as Eway_BillDate," +
                             "to_char(p.invdate, '" + sgen.Getsqldateformat() + "') as inv_date,p.invno Inv_No, p.tmode Transport, p.icode Item_Code," +
                             " p.iname Item_Name, p.cpartno Part_No, p.uom UOM, p.hsno HSN, p.taxrate TaxRate, qtychl Challan_Qty,qtyrcvd In_Qty, p.irate " +
                             "ItemRate, p.disctype,p.discrate,p.iamount ItemAmt, p.taxamt TaxAmt, p.lineamount LineAmt, p.basicamt BasicAmt, p.pktno as " +
                             "NOOFPKT_BOX,p.iremark remark, p.pono,to_char(p.podate, '" + sgen.Getsqldateformat() + "') as podate,p.btchno " +
                             "from itransaction p left join kc_tab kt on p.gatein_no = (kt.client_id || kt.vch_num || kt.type) and kt.type = 'GIN'" +
                             " and p.client_unit_id = kt.client_unit_id inner join clients_mst c on p.acode = c.vch_num" +
                             " and c.client_unit_id = p.client_unit_id and c.type = 'BCD' and substr(c.vch_num,0,3)='203' " +
                             "inner join master_setting tp on tp.master_id=p.type and tp.type='KMR' and find_in_set(tp.client_unit_id, p.client_unit_id)= 1   " +
                             "where p.client_unit_id = '" + unitid_mst + "' and p.type in ('01', '02', '05', '07', '09')  and to_date(to_char(p.vch_date,'DDMMYYYY'),'DDMMYYYY') between " +
                             "to_date('" + fdt + "','" + sgen.Getsqldateformat() + "') and to_date('" + tdt + "','" + sgen.Getsqldateformat() + "') order by p.vch_num desc";
                        title = "MRN Summary " + date_period + "";
                        seektype = 0;
                        break;
                    case "Item Ledger":
                        cmd = "select (it.icode||it.client_id||it.client_unit_id) fstr,mg.master_name maingrp,mg.master_id as mg_code,sg.iname subgrp,sg.icode as sg_code,it.icode,it.iname,it.cpartno,um.master_name Primary_Unit, nvl(s.closing, '0') as Qty_in_Stock" +
                              " from item it left join (select t.client_unit_id, t.icode, sum(nvl(t.qtyin, 0)) as Received,sum(nvl(t.qtyout, 0)) as Issued ,sum(nvl(t.qtyin, 0)) - sum(nvl(t.qtyout, 0)) as closing from itransaction t where trim(t.store) = 'Y'" +
                              " group by t.icode,t.client_unit_id ) s on it.icode = s.icode and it.client_unit_id = s.client_unit_id  inner join master_setting um on it.uom = um.master_id and um.type = 'UMM' and find_in_set(um.client_id, it.client_id)= 1" +
                              " and find_in_set(um.client_unit_id, it.client_unit_id) = 1 inner join master_setting mg on mg.master_id = substr(it.icode, 1, 3) and mg.type = 'KIG' and find_in_set(mg.client_unit_id, it.client_unit_id)= 1" +
                              " inner join item sg on sg.icode = substr(it.icode, 1, 5) and sg.type = 'SG' and find_in_set(sg.client_unit_id, it.client_unit_id)= 1 where it.type = 'IT' and " +
                              "find_in_set(it.client_unit_id,'" + unitid_mst + "')= 1 and it.status = 'Y' and substr(it.icode,1,1) not in ('8', '9') and to_date(it.vch_date) " +
                              "between to_date('" + fdt + "','" + sgen.Getsqldateformat() + "') and to_date('" + tdt + "','" + sgen.Getsqldateformat() + "')";
                        title = "Item Summary " + date_period + "";
                        seektype = 0;
                        break;
                    case "Pending Dispatch Against SO":
                        cmd = "select '-' as fstr,pc.acode as prty_code,cl.c_name as party_name,pc.icode,pc.iname,pc.type ord_type,pc.vch_num as so_no," +
                             "nvl(iv.invoice_no,'-') as Doc_no,to_char(pc.vch_date,'" + sgen.Getsqldateformat() + "') as so_date,nvl(to_char(iv.invoice_dt, '" + sgen.Getsqldateformat() + "'),'-') Doc_date," +
                             "pc.qtyord as order_qty,nvl(iv.used_qty,'0') as used_qty,pc.qtyord-nvl(used_qty,'0') as pending_so from purchasesc pc left join(select a.invoice_no," +
                             " a.invoice_dt, acode, ord_type, icode,iname, so_no, sodate, sum(a.qtyout) as used_qty,a.client_id,a.client_unit_id from(select vch_num invoice_no," +
                             " vch_date invoice_dt, acode,type as ord_type,icode,iname,sono as so_no,sodate,qtyout,client_id,client_unit_id from itransaction where " +
                             "substr(type,1,1)='4' and potype = '51' union all select vch_num invoice_no,vch_date invoice_dt,acode, potype as ord_type,icode,iname,sono as so_no" +
                             ",sodate,qtyout,client_id,client_unit_id from itransaction where substr(type,1,1)='4' and potype='51' union all select vch_num, vch_date, acode," +
                             " type2, icode,iname, VEHNO, INVDATE, qtyout, client_id, client_unit_id from itransaction where type = '60' union all select vch_num, vch_date, " +
                             "acode, type2, icode,iname, VEHNO, INVDATE, qtyout, client_id, client_unit_id from itransaction where type = '61') a group by(a.invoice_no," +
                             " a.invoice_dt, acode, ord_type, icode,iname, so_no, sodate, client_id,client_unit_id)) iv on iv.so_no = pc.vch_num and iv.sodate = pc.vch_date " +
                             "and iv.acode = pc.acode and iv.icode = pc.icode and iv.ord_type = pc.type and pc.client_unit_id = iv.client_unit_id " +
                             "left join clients_mst cl on cl.vch_num = pc.acode and cl.type = 'BCD' and cl.client_unit_id = pc.client_unit_id " +
                             "where pc.pur_type = 'NPI' and substr(pc.type,1,1)= '4' and pc.client_unit_id = '" + unitid_mst + "'" +
                             " and to_date(to_char(pc.vch_date,'DDMMYYYY'),'DDMMYYYY') between to_date('" + fdt + "','" + sgen.Getsqldateformat() + "') and" +
                             " to_date('" + tdt + "','" + sgen.Getsqldateformat() + "')";
                        title = "Pending Dispatch Against SO " + date_period + "";
                        seektype = 0;
                        break;
                    case "Pending Dispatch Against Dispatch Sch":
                        cmd = "select '-' as fstr,kt.col1 as prty_code,cl.c_name as party_name,kt.col5 as icode,kt.col27 as iname,kt.type ord_type," +
                             "(case when iv.ord_type = '52' then 'Invoiced' when iv.ord_type = '61' then 'Dispatched' else iv.ord_type else '-' end) as type,kt.vch_num as sdl_no," +
                             "to_char(kt.date1, '" + sgen.Getsqldateformat() + "') as sdl_date,to_char(kt.date8, '" + sgen.Getsqldateformat() + "') as sdl_start_date,to_char(kt.date9, '" + sgen.Getsqldateformat() + "') as sdl_end_date" +
                             ",nvl(iv.invoice_no, '-') as Doc_no,nvl(to_char(iv.invoice_dt, '" + sgen.Getsqldateformat() + "'), '-') Doc_date,kt.col10 as order_qty,nvl(iv.used_qty, '0') " +
                             "as used_qty,kt.col10 - nvl(iv.used_qty, '0') as pending_sdl from kc_tab kt left join (select a.invoice_no,a.invoice_dt,a.acode,a.ord_type," +
                             "a.type,a.icode,a.iname,a.sdlno,a.sdldate, sum(a.qtyout) as used_qty,a.client_id,a.client_unit_id from(select vch_num invoice_no," +
                             " vch_date invoice_dt, acode, type, potype as ord_type,icode,iname,sdlno,to_char(sdldate, 'ddMMYYY') as sdldate,nvl(qtyout, '0') as qtyout" +
                             ",client_id,client_unit_id from itransaction where substr(type, 1, 1) = '4' and potype = '52' union all select vch_num, vch_date, acode," +
                             " type2, type, icode, iname, GDISC, to_char(EWAYDATE, 'ddMMYYYY') sdldate,nvl(qtyout, '0') as qtyout, client_id,client_unit_id from itransaction " +
                             "where type = '61' and substr(type2,1,1)= '4') a group by(a.invoice_no, a.invoice_dt, acode, a.ord_type, a.type, a.icode, a.iname, a.sdlno," +
                             " a.sdldate, a.client_id, a.client_unit_id)) iv on iv.sdlno = kt.vch_num and iv.acode = kt.col1 and iv.icode = kt.col5 and iv.type = kt.type" +
                             " and kt.client_unit_id = iv.client_unit_id left join clients_mst cl on cl.vch_num = kt.col1 and cl.type =" +
                             " 'BCD' and cl.client_unit_id = kt.client_unit_id where substr(kt.type,1,1)= '4' and kt.col20 = 'DSC' " +
                             "and kt.client_unit_id = '" + unitid_mst + "' and to_date(to_char(kt.date1,'DDMMYYYY'),'DDMMYYYY') between to_date('" + fdt + "','" + sgen.Getsqldateformat() + "') and" +
                             " to_date('" + tdt + "','" + sgen.Getsqldateformat() + "') order by kt.vch_num ";
                        title = "Pending Dispatch against Dispatch Schedule " + date_period + "";
                        seektype = 0;
                        break;
                    case "Pending MRS":
                        cmd = "select (it.client_id||it.client_unit_id||mr.vch_num||it.icode||mr.type||to_char(it.vch_date,'yyyymmdd')||it.type) as fstr, " +
                             "mr.icode,it.iname,it.cpartno PartNo,mr.vch_num mrs_no,to_char(mr.vch_date,'" + sgen.Getsqldateformat() + "') Req_Date,nvl(s.closing,'0') as qty_in_stock" +
                             ",mr.Qty_Req,mr.issued_qty,mr.bal_qty from " +
                             "item it inner join (select distinct a.vch_num,a.type,a.icode,a.client_id,a.client_unit_id,a.vch_date,a.Qty_Req,a.desig," +
                             "a.deptno,sum(a.issued_qty) as issued_qty,(a.Qty_Req - nvl(sum(a.issued_qty), '0')) as bal_qty " +
                             "from(select mr.vch_num,mr.type,mr.icode,mr.client_id,mr.client_unit_id,mr.vch_date,mr.desig,mr.deptno, " +
                             "mr.qtychl Qty_Req,nvl(iv.qtyout,'0') as issued_qty from itransactionc mr left join itransaction iv on " +
                             "iv.icode=mr.icode and iv.chlno = mr.vch_num and iv.type = '32' and " +
                             "iv.client_unit_id = '" + unitid_mst + "'  where upper(mr.type) in ('3A', '3B') and mr.client_unit_id = '" + unitid_mst + "' " +
                             "union all select mr.vch_num,mr.type,mr.icode," +
                             "mr.client_id,mr.client_unit_id,mr.vch_date,mr.desig,mr.deptno,mr.qtychl Qty_Req,nvl(iv.col11,'0') as closed_qty " +
                             "from itransactionc mr left join enx_tab iv on iv.col7=mr.icode and iv.col12 = mr.vch_num and iv.type = 'CPM'" +
                             " and iv.client_unit_id = '" + unitid_mst + "'  where upper(mr.type) in ('3A', '3B') and " +
                             "mr.client_unit_id = '" + unitid_mst + "') a group by(a.vch_num," +
                             "a.type,a.icode,a.client_id,a.client_unit_id,a.vch_date,a.desig,a.deptno,a.Qty_Req)) mr on mr.icode=it.icode " +
                             "and find_in_set(mr.client_unit_id,it.client_unit_id)=1 and mr.bal_qty > 0 left join(select t.client_unit_id, t.icode,sum(nvl(t.qtyin,0))" +
                             " as Received,sum(nvl(t.qtyout, 0)) as Issued,sum(nvl(t.qtyin, 0)) - sum(nvl(t.qtyout, 0)) as closing from itransaction t where trim(t.store) = 'Y' group" +
                             " by t.icode,t.client_unit_id ) s on it.icode = s.icode and find_in_set(s.client_unit_id, it.client_unit_id)=1 where it.type='IT' " +
                             "and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1" +
                             " and to_date(to_char(mr.vch_date,'DDMMYYYY'),'DDMMYYYY') between to_date('" + fdt + "','" + sgen.Getsqldateformat() + "') and " +
                             "to_date('" + tdt + "','" + sgen.Getsqldateformat() + "')";
                        title = "Pending MRS " + date_period + "";
                        seektype = 0;
                        break;
                    case "Pending PO":
                        cmd = "select (pono||podate||potype) fstr,pono,podate,potype,icode,iname,partycode,partyname,max(to_number(qtyord)) qtyord,sum(to_number(qtyin)) qtyin," +
                             "(max(to_number(qtyord))-sum(to_number(qtyin))) qtybalance,sum(to_number(iamount)) iamount " +
                             "from (select p.vch_num pono,to_char(p.vch_date,'" + sgen.Getsqldateformat() + "') podate,p.type potype," +
                             "p.icode,it.iname,p.acode Partycode,cl.c_name Partyname,nvl(p.qtyord, 0) qtyord,nvl(i.qtyin, 0) qtyin,nvl(i.irate, 0) irate," +
                             "nvl(i.iamount, 0) iamount,i.vch_num mrnno,to_char(i.vch_date,'" + sgen.Getsqldateformat() + "') mrndate," +
                             "i.type mrntype,i.invno,to_char(i.invdate,'" + sgen.Getsqldateformat() + "') invdate,i.chlno," +
                             "to_char(i.chldate,'" + sgen.Getsqldateformat() + "') chldate,utol,ltol " +
                             "from purchases p " +
                             "inner join itransaction i on i.pono = p.vch_num and to_char(i.podate, 'ddmmyyyy') = to_char(p.vch_date, 'ddmmyyyy') and i.client_unit_id = p.client_unit_id and i.acode = p.acode and i.store = 'Y' " +
                             "inner join item it on it.icode = p.icode and it.type = 'IT' and find_in_set(p.client_unit_id,it.client_unit_id)=1 " +
                             "inner join clients_mst cl on cl.vch_num = p.acode and cl.type = 'BCD' and substr(cl.vch_num,0,3)='203' and cl.client_unit_id = p.client_unit_id " +
                             "where p.type in ('50', '51', '52', '53') and p.client_unit_id = '" + unitid_mst + "'  and to_date(to_char(p.vch_date,'DDMMYYYY'),'DDMMYYYY') between" +
                             " to_date('" + fdt + "','" + sgen.Getsqldateformat() + "') and to_date('" + tdt + "','" + sgen.Getsqldateformat() + "')) " +
                             //"group by pono,podate,potype,icode,iname,partycode,partyname having (max(to_number(qtyord))-sum(to_number(qtyin)))> 0";
                             "group by pono,podate,potype,icode,iname,partycode,partyname,ltol having sum(to_number(qtyin))<(max(to_number(qtyord))-round((max(to_number(qtyord))*to_number(ltol))/100))";
                        title = "Pending Po Summary " + date_period + "";
                        seektype = 0;
                        break;
                    case "Stock Summary":
                    case "Stock Summary Print":
                    case "Stock Moment Report":
                        cmd = "select (nvl(t.client_unit_id,'0')||i.icode) as fstr,i.icode Item_Code,gd.master_name Maingrp,mg.master_name Itemgrp,sg.iname Itemsubgrp," +
                            "i.iname Item_Name,i.cpartno PartNo,um.master_name as UOM,sum(t.qtyin) as Received,sum(t.qtyout) Issued," +
                            "sum(t.qtyin) - sum(t.qtyout) Closing,sum(nvl(t.pktno, 0)) pktno,round(case when sum(t.qtyin)- sum(t.qtyout) = 0 then 0 else " +
                            "(sum(t.iamount) / (sum(t.qtyin) - sum(t.qtyout))) end) Rate,sum(t.iamount) Amount from item i " +
                            "left join (select vch_date,client_id, client_unit_id, icode, iname, to_number(nvl(qtyin,0)) qtyin,to_number(nvl(qtyout, 0)) qtyout," +
                            "(case when to_number(nvl(qtyin, 0)) = 0 then - to_number(nvl(iamount, 0)) else to_number(nvl(iamount, 0)) end) iamount," +
                            "(case when substr(type, 1, 1) in ('0', '1') then pktno when type = '36' then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end) pktno " +
                            "from itransaction where length(icode) > 5 and store = 'Y') t on t.icode = i.icode and t.client_unit_id = i.client_unit_id " +
                            "and to_date(to_char(t.vch_date,'" + sgen.Getsqldateformat() + "'),'" + sgen.Getsqldateformat() + "') between TO_DATE('" + fdt + "', '" + sgen.Getsqldateformat() + "') AND TO_DATE('" + tdt + "','" + sgen.Getsqldateformat() + "') " +
                            "inner join master_setting gd on gd.classid = SUBSTR(i.icode, 1, 1) and gd.type = 'KGP' " +
                            "inner join master_setting mg on mg.master_id = substr(i.icode, 1, 3) and mg.type = 'KIG' and mg.client_unit_id = i.client_unit_id " +
                            "inner join item sg on sg.icode = substr(i.icode, 1, 5) and sg.type = 'SG' and sg.client_unit_id = i.client_unit_id " +
                            "inner join master_setting um on um.master_id = i.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, i.client_unit_id)= 1 " +
                            "where length(i.icode)> 5 and find_in_set(i.client_unit_id, '" + unitid_mst + "')= 1 " +
                            "group by nvl(t.client_unit_id, '0'),i.icode,gd.master_name,mg.master_name,sg.iname,i.iname,um.master_name,i.cpartno order by i.icode";
                        title = "Stock Summary " + date_period + "";
                        if (command.Trim().Equals("Stock Moment Report"))
                        {
                            btnval = "STKMM";
                            seektype = 2;
                        }
                        else
                        {
                            btnval = "ISUM";
                            seektype = 1;
                        }
                        sgen.SetSession(MyGuid, "btnval", btnval);
                        break;
                    case "Stock Summary With Rate":
                        //cmd = "select (nvl(t.client_unit_id,'0')||i.icode) as fstr,i.icode Item_Code,gd.master_name Maingrp,mg.master_name Itemgrp,sg.iname Itemsubgrp," +
                        //    "i.iname Item_Name, i.cpartno PartNo, um.master_name as UOM,sum(t.qtyin) as Received,sum(t.qtyout) Issued,sum(t.qtyin) - sum(t.qtyout) Closing," +
                        //    "sum(nvl(t.pktno, 0)) pktno,(case when to_number(nvl(a.irate,0))=0 then to_number(nvl(i.rate,0)) else to_number(nvl(a.irate,0)) end) Rate," +
                        //    "((sum(t.qtyin) - sum(t.qtyout)) * ((case when to_number(nvl(a.irate, 0)) = 0 then to_number(nvl(i.rate,0)) else to_number(nvl(a.irate, 0)) end))) Amount " +
                        //    "from item i " +
                        //    "left join(select vch_date, client_id, client_unit_id, icode, iname, to_number(nvl(qtyin,0)) qtyin,to_number(nvl(qtyout, 0)) qtyout," +
                        //    "(case when to_number(nvl(qtyin, 0)) = 0 then - to_number(nvl(iamount, 0)) else to_number(nvl(iamount, 0)) end) iamount," +
                        //    "(case when substr(type, 1, 1) in ('0', '1') then pktno when type = '36' then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end) pktno " +
                        //    "from itransaction where length(icode) > 5 and store = 'Y') t on t.icode = i.icode and t.client_unit_id = i.client_unit_id " +
                        //    "and to_date(to_char(t.vch_date,'" + sgen.Getsqldateformat() + "'),'" + sgen.Getsqldateformat() + "') between TO_DATE('" + fdt + "', '" + sgen.Getsqldateformat() + "') AND TO_DATE('" + tdt + "','" + sgen.Getsqldateformat() + "') " +
                        //    "left join(select a.icode, a.irate, a.vch_num from itransaction a inner join (select max(vch_num) vch_num, icode from itransaction " +
                        //    "where type in ('01','02') and client_unit_id = '" + unitid_mst + "' group by icode) b on b.vch_num = a.vch_num and b.icode = a.icode " +
                        //    "where a.type in ('01', '02') and a.client_unit_id = '" + unitid_mst + "') a on a.icode = i.icode " +
                        //    "inner join master_setting gd on gd.classid = SUBSTR(i.icode, 1, 1) and gd.type = 'KGP' " +
                        //    "inner join master_setting mg on mg.master_id = substr(i.icode, 1, 3) and mg.type = 'KIG' and mg.client_unit_id = i.client_unit_id " +
                        //    "inner join item sg on sg.icode = substr(i.icode, 1, 5) and sg.type = 'SG' and sg.client_unit_id = i.client_unit_id " +
                        //    "inner join master_setting um on um.master_id = i.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, i.client_unit_id)= 1 " +
                        //    "where length(i.icode)> 5 and find_in_set(i.client_unit_id, '" + unitid_mst + "')= 1 " +
                        //    "group by nvl(t.client_unit_id, '0'),i.icode,gd.master_name,mg.master_name,sg.iname,i.iname,um.master_name,i.cpartno,a.irate,i.rate order by i.icode";

                        cmd = "select (nvl(t.client_unit_id,'0')||i.icode) as fstr,i.icode Item_Code,gd.master_name Maingrp,mg.master_name Itemgrp,sg.iname Itemsubgrp," +
    "i.iname Item_Name, i.cpartno PartNo, um.master_name as UOM,sum(t.qtyin) as Received,sum(t.qtyout) Issued,sum(t.qtyin) - sum(t.qtyout) Closing," +
    "sum(nvl(t.pktno, 0)) pktno,(case when to_number(nvl(a.irate,0))=0 then to_number(nvl(i.rate,0)) else to_number(nvl(a.irate,0)) end) Rate," +
    "((sum(t.qtyin) - sum(t.qtyout)) * ((case when to_number(nvl(a.irate, 0)) = 0 then to_number(nvl(i.rate,0)) else to_number(nvl(a.irate, 0)) end))) Amount " +
    "from item i " +
    "left join(select vch_date, client_id, client_unit_id, icode, iname, to_number(nvl(qtyin,0)) qtyin,to_number(nvl(qtyout, 0)) qtyout," +
    "(case when to_number(nvl(qtyin, 0)) = 0 then - to_number(nvl(iamount, 0)) else to_number(nvl(iamount, 0)) end) iamount," +
    "(case when substr(type, 1, 1) in ('0', '1') then pktno when type = '36' then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end) pktno " +
    "from itransaction where length(icode) > 5 and store = 'Y') t on t.icode = i.icode and t.client_unit_id = i.client_unit_id " +
    "and to_date(to_char(t.vch_date,'" + sgen.Getsqldateformat() + "'),'" + sgen.Getsqldateformat() + "') between TO_DATE('" + fdt + "', '" + sgen.Getsqldateformat() + "') AND TO_DATE('" + tdt + "','" + sgen.Getsqldateformat() + "') " +
    "left join(select a.icode, a.irate, a.vch_num,a.vch_date from itransaction a inner join (select max(vch_num) vch_num, icode,vch_date from itransaction " +
    "where type in ('01','02') and client_unit_id = '" + unitid_mst + "' and to_date(to_char(vch_date,'" + sgen.Getsqldateformat() + "'),'" + sgen.Getsqldateformat() + "') between TO_DATE('" + fdt + "', '" + sgen.Getsqldateformat() + "') " +
    "and TO_DATE('" + tdt + "','" + sgen.Getsqldateformat() + "') group by icode,vch_date) b on b.vch_num = a.vch_num and b.icode = a.icode and b.vch_date=a.vch_date " +
    "where a.type in ('01', '02') and a.client_unit_id = '" + unitid_mst + "') a on a.icode = i.icode " +
    "inner join master_setting gd on gd.classid = SUBSTR(i.icode, 1, 1) and gd.type = 'KGP' " +
    "inner join master_setting mg on mg.master_id = substr(i.icode, 1, 3) and mg.type = 'KIG' and mg.client_unit_id = i.client_unit_id " +
    "inner join item sg on sg.icode = substr(i.icode, 1, 5) and sg.type = 'SG' and sg.client_unit_id = i.client_unit_id " +
    "inner join master_setting um on um.master_id = i.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, i.client_unit_id)= 1 " +
    "where length(i.icode)> 5 and find_in_set(i.client_unit_id, '" + unitid_mst + "')= 1 " +
    "group by nvl(t.client_unit_id, '0'),i.icode,gd.master_name,mg.master_name,sg.iname,i.iname,um.master_name,i.cpartno,a.irate,i.rate order by i.icode";
                        title = "Stock Summary With Rate " + date_period + "";
                        btnval = "SWR";
                        seektype = 0;
                        sgen.SetSession(MyGuid, "btnval", btnval);
                        break;
                    case "Callback":
                        btnval = sgen.GetSession(MyGuid, "btnval").ToString();
                        model = StartCallback(model, btnval);
                        break;
                }
                if (command == "Auto Indents")
                {
                    mq = @"select i.client_unit_id,i.icode,i.uom,i.cpartno, i.iname,max(reorder) as reorder,max(i.minstk) minstk,sum(nvl(s.qtyin,0)) as qtyin,sum(nvl(s.qtyout,0)) qtyout,sum(nvl(s.closing,0)) as closing  
from item i left outer join  (
select  trim(t.client_unit_id) as client_unit_id,trim(t.icode) as icode,sum(replace(nvl(t.qtyout,0),'NaN',0)) qtyout,sum(replace(nvl(t.qtyin,0),'NaN',0)) as qtyin
,sum(replace(nvl(t.qtyin,0),'NaN',0))-sum(replace(nvl(t.qtyout,0),'NaN',0)) as closing from  itransaction t where trim(t.store) not in ('R','W')  group by t.icode,t.client_unit_id
union all  
 select trim(p.client_unit_id) client_unit_id, trim(p.icode) as icode,sum(p.qtyord) as qtyord ,sum(replace(nvl(t.qtyin,0),'NaN',0)) as qtyin,
 sum(p.qtyord)-sum(replace(nvl(t.qtyin,0),'NaN',0)) as closing  from purchases p left  join itransaction t on p.client_unit_id=t.client_unit_id and p.icode=t.icode
 and p.vch_num=t.pono and to_char(p.vch_date,'DDMMYYYY')=TO_CHAR(t.podate,'DDMMYYYY') AND p.type=t.potype  and trim(t.store) not in ('R','W') group by p.icode,p.client_unit_id
  union all
 select trim(p.client_unit_id) client_unit_id, trim(p.icode) as icode,sum(p.qtyord) as qtyord ,sum(replace(nvl(t.qtyord,0),'NaN',0)) as 
 qtyin,sum(p.qtyord)-sum(replace(nvl(t.qtyord,0),'NaN',0)) as closing  from purchases p left  join purchases t on p.client_unit_id=t.client_unit_id and p.icode=t.icode
 and p.vch_num=t.indno and to_char(p.vch_date,'DDMMYYYY')=TO_CHAR(t.inddate,'DDMMYYYY') where p.type='66' and t.type<>'66' group by p.icode,p.client_unit_id
) s on  s.icode=i.icode and s.client_unit_id=i.client_unit_id   where length(trim(i.icode))>4 and i.client_unit_id='" + unitid_mst + "' " +
    "group by i.client_unit_id,i.icode, i.iname,i.uom,i.cpartno having max(i.minstk)>sum(nvl(s.closing,0))";
                    DataTable dt1 = new DataTable();
                    dt1 = sgen.getdata(userCode, mq);
                    if (dt1.Rows.Count > 0)
                    {
                        try
                        {
                            string currdate = sgen.server_datetime(userCode);
                            {
                                isedit = false;
                                mq = "select max(to_number(vch_num)) as auto_genid from purchases a where type='66' and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "'";
                                vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                            }
                            DataTable dataTable = cmd_Fun.GetStructure(userCode, "purchases");
                            for (int i = 0; i < dt1.Rows.Count; i++)
                            {
                                DataRow dr = dataTable.NewRow();
                                dr["vch_num"] = vch_num;
                                dr["type"] = "66";
                                dr["vch_date"] = currdate;
                                dr["deptno"] = "001";
                                dr["deptname"] = "001";
                                dr["desig"] = "001";
                                dr["reqby"] = userid_mst;
                                dr["totremark"] = "Minimum Level Requisitions";
                                dr["icode"] = dt1.Rows[i]["Icode"].ToString();
                                dr["iname"] = dt1.Rows[i]["IName"].ToString();
                                dr["cpartno"] = dt1.Rows[i]["cpartno"].ToString();
                                dr["hsno"] = "-";
                                dr["uom"] = dt1.Rows[i]["UOM"].ToString();
                                dr["qtystk"] = dt1.Rows[i]["closing"].ToString();
                                dr["qtyord"] = dt1.Rows[i]["reorder"].ToString();
                                dr["iamount"] = "0";
                                dr["iremark"] = "-";
                                dr["rec_id"] = "0";
                                // shiv
                                if (isedit)
                                {
                                    dr["client_id"] = clientid_mst;
                                    dr["client_unit_id"] = unitid_mst;
                                    dr["ent_by"] = userid_mst;
                                    dr["ent_date"] = currdate;
                                    dr["edit_by"] = userid_mst;
                                    dr["edit_date"] = currdate;
                                }
                                else
                                {
                                    dr["client_id"] = clientid_mst;
                                    dr["client_unit_id"] = unitid_mst;
                                    dr["ent_by"] = userid_mst;
                                    dr["ent_date"] = currdate;
                                    dr["edit_by"] = "-";
                                    dr["edit_date"] = currdate;
                                }
                                dataTable.Rows.Add(dr);
                            }
                            bool Result = sgen.Update_data(userCode, dataTable, "purchases", "-", false);
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            if (Result == true)
                            {
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                            }
                        }
                        catch (Exception ex) { ViewBag.scripCall = "showmsgJS(1,'" + ex.Message.ToString().Replace('\'', ' ') + "', 0);"; }
                    }
                }
                else if (command == "Slow and Non Moving")
                {
                    mq = "";
                    dt = sgen.getdata(userCode, mq);
                    sgen.open_report_bydt_xml(userCode, dt, "slow_moving", "Report");
                    //ViewBag.scripCall = "OpenSingle('../../../../../erp/schoolReports_Rpts/Filter_Report_xml.aspx','95%','900px','Reports');";
                    ViewBag.scripCall += "showRptnew('Slow Moving');";
                }
                else if (command == "Pending MRN")
                {
                    mq = "";
                    dt = sgen.getdata(userCode, mq);
                    sgen.open_report_bydt_xml(userCode, dt, "slow_moving", "Report");
                    //ViewBag.scripCall = "OpenSingle('../../../../../erp/schoolReports_Rpts/Filter_Report_xml.aspx','95%','900px','Reports');";
                    ViewBag.scripCall += "showRptnew('Pending MRN');";
                }
                else if (command == "last Rec and Issue Inv")
                {
                    mq = "";
                    dt = sgen.getdata(userCode, mq);
                    sgen.open_report_bydt_xml(userCode, dt, "last_entry_inv", "Report");
                    //ViewBag.scripCall = "OpenSingle('../../../../../erp/schoolReports_Rpts/Filter_Report_xml.aspx','95%','900px','Reports');";
                    ViewBag.scripCall += "showRptnew('last Rec and Issue Inv');";
                }
                else if (command == "Stock Summary Print")
                {
                    dt = sgen.getdata(userCode, cmd);
                    if (dt.Rows.Count > 0)
                    {
                        sgen.open_report_bydt_xml(userCode, dt, "isumpr", "Report");
                        //ViewBag.scripCall = "OpenSingle('../../../../../erp/schoolReports_Rpts/Filter_Report_xml.aspx','95%','900px','Reports');";
                        ViewBag.scripCall += "showRptnew('Stock Summary Print');";
                    }
                }
                else if (command != "Callback")
                {
                    sgen.open_grid(title, cmd, seektype);
                    ViewBag.scripCall = "callFoo('" + title + "');";
                    sgen.SetSession(MyGuid, "KPDCMD", null);
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #endregion
        //===============Item Issued===============         
        #region item_issued
        public ActionResult item_issued()
        {
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            FillMst(MyGuid);
            chkRef();
            ViewBag.vnew = "";
            ViewBag.vedit = "";
            ViewBag.vsave = "disabled='disabled'";
            ViewBag.vsavenew = "disabled='disabled'";
            ViewBag.vfill = "disabled='disabled'";
            ViewBag.scripCall = "disableForm();";
            List<Tmodelmain> model = new List<Tmodelmain>();
            Tmodelmain tm1 = new Tmodelmain();
            List<SelectListItem> mod1 = new List<SelectListItem>();
            mid_mst = EncryptDecrypt.Decrypt(Request.QueryString["mid"]);
            tm1.Col10 = "itransaction";
            tm1.Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            tm1.Col13 = "Save";
            tm1.Col100 = "Save & New";
            tm1.Col14 = mid_mst.Trim();
            tm1.Col15 = MyGuid.Trim();
            tm1.Col121 = "S";
            tm1.Col122 = "<u>S</u>ave";
            tm1.Col123 = "Save & Ne<u>w</u>";

            tm1.SelectedItems1 = new string[] { "" };

            tm1.SelectedItems2 = new string[] { "" };

            tm1.SelectedItems3 = new string[] { "" };

            tm1.SelectedItems4 = new string[] { "" };
            TempData[MyGuid + "_TList1"] = tm1.TList1 = mod1;
            TempData[MyGuid + "_TList2"] = tm1.TList2 = mod1;
            TempData[MyGuid + "_TList3"] = tm1.TList3 = mod1;
            TempData[MyGuid + "_TList4"] = tm1.TList4 = mod1;
            tm1.dt1 = null;
            tm1.dt2 = null;
            sgen.SetSession(MyGuid, "dtbase1", null);
            sgen.SetSession(MyGuid, "dtbase2", null);
            sgen.SetSession(MyGuid, "KISTYPE", null);
            tm1.Col28 = m_module3;
            DataTable dtb = (DataTable)sgen.GetSession(MyGuid, "URIGHTS");
            try
            {
                dtb = dtb.Select("m_id='" + tm1.Col14 + "'").CopyToDataTable();
                if (dtb.Rows.Count > 0)
                {
                    tm1.Col133 = dtb.Rows[0]["btnnew"].ToString();
                    tm1.Col134 = dtb.Rows[0]["btnedit"].ToString();
                    tm1.Col135 = dtb.Rows[0]["btnview"].ToString();
                    // model[0].Col33 = dtb.Rows[0]["btnextend"].ToString();
                }
            }
            catch (Exception ex) { }
            model.Add(tm1);
            return View(model);
        }
        [HttpPost]
        public ActionResult item_issued(List<Tmodelmain> model, string command, string hfrow, string hftable)
        {
            try
            {
                string negativestock = "";
                FillMst(model[0].Col15);
                DataSet ds = new DataSet();
                if (hftable.Trim() != "")
                {
                    ds = sgen.setDS(hftable);
                    model[0].dt1 = ds.Tables[0];
                    model[0].dt2 = ds.Tables[1];
                    if (model[0].dt2.Rows.Count == 0) model[0].dt2 = ((DataTable)sgen.GetSession(MyGuid, "dtkin"));
                    if (model[0].dt1.Rows.Count == 0) model[0].dt1 = ((DataTable)sgen.GetSession(MyGuid, "dtkin"));
                }
                var tm = model.FirstOrDefault();
                #region ddl
                List<SelectListItem> mod1 = new List<SelectListItem>();
                List<SelectListItem> mod2 = new List<SelectListItem>();
                List<SelectListItem> mod3 = new List<SelectListItem>();
                List<SelectListItem> mod4 = new List<SelectListItem>();
                TempData[MyGuid + "_TList1"] = model[0].TList1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                TempData[MyGuid + "_TList2"] = model[0].TList2 = (List<SelectListItem>)TempData[MyGuid + "_TList2"];
                TempData[MyGuid + "_TList3"] = model[0].TList3 = (List<SelectListItem>)TempData[MyGuid + "_TList3"];
                TempData[MyGuid + "_TList4"] = model[0].TList4 = (List<SelectListItem>)TempData[MyGuid + "_TList4"];
                //TempData[MyGuid + "_TList1"] = model[0].TList1;
                //TempData[MyGuid + "_TList2"] = model[0].TList2;
                //TempData[MyGuid + "_TList3"] = model[0].TList3;
                //TempData[MyGuid + "_TList4"] = model[0].TList4;
                if (tm.SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                if (tm.SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
                if (tm.SelectedItems3 == null) model[0].SelectedItems3 = new string[] { "" };
                if (tm.SelectedItems4 == null) model[0].SelectedItems4 = new string[] { "" };
                #endregion
                DataTable dt = new DataTable();
                negativestock = sgen.seekval(userCode, "select param1 from controls where type='CTL' and m_module3='invmain' and id='000020'", "param1");
                model[0].Col61 = negativestock;
                if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    if (sgen.GetSession(MyGuid, "btnval") != null) btnval = sgen.GetSession(MyGuid, "btnval").ToString();
                    model = CallbackFun(btnval, "N", actionName, controllerName, model);
                    if (btnval.Trim().ToUpper().Equals("PRINT"))
                    {
                        ViewBag.vnew = "";
                        ViewBag.vedit = "";
                        ViewBag.vsave = "disabled='disabled'";
                        ViewBag.vsavenew = "disabled='disabled'";
                    }
                    else
                    {
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                    }
                }
                else if (command == "Fill Location")
                {
                    if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-"))
                    {
                        ViewBag.scripCall += "showmsgJS(1,'Please Select item in grid-1', 0);";
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                        return View(model);
                    }
                    try
                    {
                        if (model[0].dt2 != null && model[0].dt2.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt2.Rows.RemoveAt(0); }
                    }
                    catch (Exception err) { }
                    var dttt = model[0].dt2.Clone();
                    model[0].dt2 = dttt;
                    foreach (DataRow dr1 in model[0].dt1.Rows)
                        try
                        {
                            if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-"))
                            {
                                ViewBag.scripCall += "showmsgJS(1,'Please Select item in grid-1', 2);";
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                                return View(model);
                            }
                            try
                            {
                                if (model[0].dt2.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt2.Rows.RemoveAt(0); }
                            }
                            catch (Exception err) { }
                            var dt7 = model[0].dt2.Clone();
                            model[0].dt2 = dt7;
                            foreach (DataRow dr3 in model[0].dt1.Rows)
                            {
                                decimal qtyissue = sgen.Make_decimal(dr3["qty_issue"].ToString().Trim());
                                if (qtyissue <= 0)
                                {
                                    ViewBag.vnew = "disabled='disabled'";
                                    ViewBag.vedit = "disabled='disabled'";
                                    ViewBag.vsave = "";
                                    ViewBag.vsavenew = "";
                                    ViewBag.scripCall += "showmsgJS(1,'Please FILL Issue Qty in Item " + dr3["iname"].ToString() + "', 2);";
                                    model[0].dt2 = (DataTable)sgen.GetSession(MyGuid, "dtbase2");
                                    break;
                                }
                                string icode = dr3["icode"].ToString().Trim();
                                DataTable dloc = sgen.getdata(userCode, "select itb.loc,location_name(itb.client_id||itb.client_unit_id||itb.loc) from itbal itb " +
                                    "where trim(itb.icode)='" + icode + "' and itb.type='IT' and itb.client_unit_id='" + unitid_mst + "'");
                                string vchdate = (model[0].Col126 == "" || model[0].Col126 == null) ? model[0].Col20 : model[0].Col126;
                                var cond2 = "and t.client_unit_id||t.vch_num||to_char(t.vch_date,'" + sgen.Getsqldateformat() + "')||t.type not in (" +
                                    "'" + unitid_mst + model[0].Col16 + vchdate + model[0].Col12 + "')";
                                DataTable dtlocs = sgen.locclosing_all(userCode, unitid_mst + icode, FN_From_Date + "!~!~!~!~!" + model[0].Col20, cond2);
                                int rcnt = dtlocs.Rows.Count;
                                if (!negativestock.ToString().Equals("Y"))
                                {
                                    if (rcnt == 0)
                                    {
                                        ViewBag.scripCall += "showmsgJS(1,'Item " + icode + " stock is zero' , 0);";
                                        return View(model);
                                    }
                                }
                                DataColumn dc = new DataColumn("ordd", typeof(int));
                                dc.DefaultValue = "0";
                                dtlocs.Columns.Add(dc);
                                try
                                {
                                    var rind = sgen.seekval_dt_rowindex(dtlocs, "loc='" + dloc.Rows[0]["loc"].ToString().Trim() + "'");
                                    dtlocs.Rows[rind - 1]["ordd"] = rcnt;
                                }
                                catch (Exception err) { }
                                DataView dv = dtlocs.DefaultView;
                                dv.Sort = "ordd asc";
                                dtlocs = dv.ToTable();
                                foreach (DataRow dr in dtlocs.Rows)
                                {
                                    decimal lclos = sgen.Make_decimal(dr["closing"].ToString().Trim());
                                    if (qtyissue <= 0 || lclos <= 0) break;
                                    if (qtyissue <= 0) break;
                                    DataRow dr2 = model[0].dt2.NewRow();
                                    dr2["sno"] = unitid_mst + dr3["icode"].ToString().Trim() + dr["LOC"].ToString().Trim();
                                    dr2["Icode"] = dr3["icode"].ToString().Trim();
                                    dr2["INAME"] = dr3["INAME"].ToString().Trim();
                                    dr2["PARTNO"] = dr3["PARTNO"].ToString().Trim();
                                    dr2["UOM"] = dr3["UOM"].ToString().Trim();
                                    dr2["Qty_In_Stock"] = dr["closing"].ToString().Trim();
                                    //decimal lclos = sgen.Make_decimal(dr["closing"].ToString().Trim());
                                    if (qtyissue > lclos)
                                    {
                                        dr2["Qty_Issue"] = lclos;
                                        qtyissue = qtyissue - lclos;
                                    }
                                    else
                                    {
                                        dr2["Qty_Issue"] = qtyissue;
                                        qtyissue = 0;
                                    }
                                    dr2["Remark"] = "-";
                                    dr2["LocCode"] = dr["loc"].ToString().Trim();
                                    dr2["LOC"] = dr["loc_name"].ToString().Trim();
                                    model[0].dt2.Rows.Add(dr2);
                                }
                                if (qtyissue > 0)
                                {
                                    DataRow dr2 = model[0].dt2.NewRow();
                                    dr2["sno"] = unitid_mst + dr3["icode"].ToString().Trim() + dloc.Rows[0][0].ToString().Trim();
                                    dr2["Icode"] = dr3["icode"].ToString().Trim();
                                    dr2["INAME"] = dr3["INAME"].ToString().Trim();
                                    dr2["PARTNO"] = dr3["PARTNO"].ToString().Trim();
                                    dr2["UOM"] = dr3["UOM"].ToString().Trim();
                                    dr2["Qty_In_Stock"] = "0";
                                    dr2["Qty_Issue"] = qtyissue;
                                    qtyissue = 0;
                                    dr2["Remark"] = "-";
                                    dr2["LocCode"] = dloc.Rows[0][0].ToString().Trim();
                                    dr2["LOC"] = dloc.Rows[0][1].ToString().Trim();
                                    model[0].dt2.Rows.Add(dr2);
                                }
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                            }
                        }
                        catch (Exception ex) { ViewBag.scripCall += "showmsgJS(1,'" + ex.Message.ToString().Replace('\'', ' ') + "', 0);"; }
                    if (model[0].dt2.Rows.Count == 0) model[0].dt2 = ((DataTable)sgen.GetSession(MyGuid, "dtbase2"));
                    if (model[0].dt1.Rows.Count == 0) model[0].dt1 = ((DataTable)sgen.GetSession(MyGuid, "dtbase1"));
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {
                    //string negativestock = sgen.seekval(userCode, "select param1 from controls where type='CTL' and m_module3='-' and id='000020'", "param1");
                    if (model[0].Col133 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for save data , please contact your admin', 2);";
                        return View(model);
                    }
                    string mmt = "";
                    if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-"))
                    {
                        ViewBag.scripCall += "showmsgJS(1,'Please Select item in grid-1', 2);";
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                        return View(model);
                    }
                    if (!negativestock.ToString().Equals("Y"))
                    {
                        if (model[0].dt2.Rows[0]["icode"].ToString().Trim().Equals("-"))
                        {
                            ViewBag.scripCall += "showmsgJS(1,'Please FILL location in grid-2', 2);";
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            return View(model);
                        }
                    }
                    foreach (DataRow dr in ds.Tables[0].Rows)
                    {
                        decimal QTY_REQ = 0, QTY_ISSUE = 0, QTY_ISSUE2 = 0;
                        string fstr = dr["sno"].ToString();
                        string icode = dr["icode"].ToString();
                        string INAME = dr["INAME"].ToString();
                        QTY_REQ = sgen.Make_decimal(dr["QTY_REQ"].ToString());
                        QTY_ISSUE = sgen.Make_decimal(dr["QTY_ISSUE"].ToString());
                        if (QTY_ISSUE > QTY_REQ)
                        {
                            ViewBag.scripCall += "showmsgJS(1, 'Item " + INAME + ", Required Qty is not matching with Issue Qty in Grid 1,Please Check', 2);";
                            ModelState.Clear();
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            return View(model);
                        }
                        var filtered = model[0].dt2.Select("icode='" + icode + "'");
                        foreach (var row in filtered)
                        {
                            decimal issue2 = 0;
                            QTY_ISSUE2 += issue2 = sgen.Make_decimal(row["QTY_ISSUE"].ToString());
                        }
                        if (QTY_ISSUE != QTY_ISSUE2)
                        {
                            ViewBag.scripCall += "showmsgJS(1, 'Qty_Issue does not match with Location Grid of Item " + INAME + "', 2);";
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            return View(model);
                        }
                    }
                    mmt = model[0].SelectedItems4.FirstOrDefault();
                    DataTable dataTable = new DataTable();
                    DataTable dtpd = new DataTable();
                    Satransaction sat1 = new Satransaction(userCode, MyGuid);
                    try
                    {
                        string currdate = sgen.server_datetime(userCode);
                        if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                        {
                            isedit = true;
                            vch_num = model[0].Col18;
                        }
                        else
                        {
                            isedit = false;
                            mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                            vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                            model[0].Col18 = vch_num;
                        }
                        string vch_date = sgen.Savedate(model[0].Col20, false);
                        dataTable = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                        dtpd = cmd_Fun.GetStructure(userCode, "iprod");
                        for (int i = 0; i < model[0].dt1.Rows.Count; i++)
                        {
                            #region get_rate_amt
                            //DataTable dtin = new DataTable();
                            //DataTable dtout = new DataTable();
                            //DataTable dtavg = new DataTable();
                            //decimal qtyout = 0, qtyin = 0, cl = 0, bal = 0, rt = 0, totamt = 0, totqty = 0, myrate = 0, amt = 0;
                            //mq1 = "select group_name evaltype from master_setting mg where md.subjectid='" + model[0].dt1.Rows[i]["icode"].ToString().Substring(0, 1).Trim() + "'";
                            //mq1 = sgen.seekval(userCode, mq1, "evaltype");//evaluation type
                            //if (mq1.Trim() == "0")
                            //{
                            //    mq1 = "select master_name evaltype from master_setting where type='CF0' and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "'";
                            //    mq1 = sgen.seekval(userCode, mq1, "evaltype");//evaluation type
                            //    if (mq1.Trim() == "0")
                            //    {
                            //        ViewBag.scripCall += "showmsgJS(1, 'Please create master of inventory evaluation', 2);";
                            //        return View(model);
                            //    }
                            //}                        
                            //if (mq1.Trim() == "002")
                            //{
                            //    mq = "select i.rec_id,i.vch_num,i.vch_date,i.type,i.icode,i.qtyin,i.qtyout,i.irate,i.iamount,'0' cl,'0' bal from itransaction i " +
                            //        "where (i.client_unit_id||i.icode)='" + unitid_mst + model[0].dt1.Rows[i]["icode"].ToString().Trim() + "' and i.type in " +
                            //        "('Q01','Q02','36','10','11','30','32','21','22') and i.store='Y' order by i.vch_date,i.type asc"; //mrn_w_po,w/o_po,openg,return both,issue both,rgp,nrgp
                            //    dtavg = sgen.getdata(userCode, mq); //in
                            //    if (dtavg.Rows.Count <= 0)
                            //    {
                            //        ViewBag.scripCall += "showmsgJS(1, 'No data found for IN OUT Stock', 2);";
                            //        return View(model);
                            //    }
                            //}
                            //else if (mq1.Trim() == "001")
                            //{
                            //    mq = "select i.rec_id,i.vch_num,i.vch_date,i.type,i.icode,i.qtyin,i.qtyout,i.irate,i.iamount,'0' cl,i.qtyin bal from itransaction i " +
                            //        "where (i.client_unit_id||i.icode)='" + unitid_mst + model[0].dt1.Rows[i]["icode"].ToString().Trim() + "' and i.type in " +
                            //        "('Q01','Q02','36') and i.store='Y' order by i.vch_date,i.type asc"; //mrn_w_po,w/o_po,openg
                            //    dtin = sgen.getdata(userCode, mq); //in
                            //    if (dtin.Rows.Count <= 0)
                            //    {
                            //        ViewBag.scripCall += "showmsgJS(1, 'No data found for IN Stock', 2);";
                            //        return View(model);
                            //    }
                            //    mq0 = "select i.rec_id,i.vch_num,i.vch_date,i.type,i.icode,i.qtyin,i.qtyout,i.irate,i.iamount,'0' cl,'0' bal from itransaction i " +
                            //        "where (i.client_unit_id||i.icode) in ('" + URL + "') and i.type in ('10','11','30','32','21','22') and i.store='Y' " +
                            //        "order by i.vch_date,i.type asc";//gen_ret,agnst_issue,w_req,w/o_req,rgp,nrgp
                            //    dtout = sgen.getdata(userCode, mq0); //out
                            //    if (dtout.Rows.Count <= 0)
                            //    {
                            //        ViewBag.scripCall += "showmsgJS(1, 'No data found for OUT Stock', 2);";
                            //        return model;
                            //    }
                            //}
                            ////fifo
                            //if (mq1.Trim() == "001")
                            //{
                            //    List<string> recs = new List<string>();
                            //    mq = "UPDATE itransaction SET irate = CASE";
                            //    mq1 = "UPDATE itransaction SET iamount = CASE";
                            //    for (int o = 0; o < dtout.Rows.Count; o++) //out dt
                            //    {
                            //        if (dtout.Rows[o]["type"].ToString().StartsWith("1"))
                            //        {
                            //            totamt = 0; totqty = 0;
                            //            qtyin = sgen.Make_decimal(dtout.Rows[o]["qtyin"].ToString());
                            //            for (int i = 0; i < dtout.Rows.Count; i++) //in dt
                            //            {
                            //                qtyout = sgen.Make_decimal(dtout.Rows[i]["qtyout"].ToString());
                            //                cl = sgen.Make_decimal(dtout.Rows[i]["cl"].ToString());
                            //                rt = sgen.Make_decimal(dtout.Rows[i]["irate"].ToString());
                            //                bal = qtyout - cl;
                            //                if (bal == qtyin)
                            //                {
                            //                    totqty = totqty + qtyin;
                            //                    dtout.Rows[i]["cl"] = qtyout;//in bal
                            //                    totamt += rt * qtyin;
                            //                    qtyin = 0;
                            //                }
                            //                else if (bal > qtyin)
                            //                {
                            //                    totqty += qtyin;
                            //                    dtout.Rows[i]["cl"] = cl + qtyin;//in bal
                            //                    totamt += rt * qtyin;
                            //                    qtyin = 0;
                            //                }
                            //                else if (bal < qtyin)
                            //                {
                            //                    totqty += bal;
                            //                    dtout.Rows[i]["cl"] = cl + bal;//in bal
                            //                    totamt += rt * bal;
                            //                    qtyin = qtyin - bal;
                            //                }
                            //                if (qtyin == 0) break;
                            //            }
                            //            myrate = totamt / totqty;
                            //            dtout.Rows[o]["irate"] = myrate;
                            //            dtout.Rows[o]["iamount"] = totamt;//out amt
                            //        }
                            //        else
                            //        {
                            //            totamt = 0; totqty = 0;
                            //            qtyout = sgen.Make_decimal(dtout.Rows[o]["qtyout"].ToString());
                            //            for (int i = 0; i < dtin.Rows.Count; i++) //in dt
                            //            {
                            //                qtyin = sgen.Make_decimal(dtin.Rows[i]["qtyin"].ToString());
                            //                cl = sgen.Make_decimal(dtin.Rows[i]["cl"].ToString());
                            //                rt = sgen.Make_decimal(dtin.Rows[i]["irate"].ToString());
                            //                bal = qtyin - cl;
                            //                if (bal == qtyout)
                            //                {
                            //                    totqty = totqty + qtyout;
                            //                    dtin.Rows[i]["cl"] = qtyin;//in bal
                            //                    totamt += rt * qtyout;
                            //                    qtyout = 0;
                            //                }
                            //                else if (bal > qtyout)
                            //                {
                            //                    totqty += qtyout;
                            //                    dtin.Rows[i]["cl"] = cl + qtyout;//in bal
                            //                    totamt += rt * qtyout;
                            //                    qtyout = 0;
                            //                }
                            //                else if (bal < qtyout)
                            //                {
                            //                    totqty += bal;
                            //                    dtin.Rows[i]["cl"] = cl + bal;//in bal
                            //                    totamt += rt * bal;
                            //                    qtyout = qtyout - bal;
                            //                }
                            //                if (qtyout == 0) break;
                            //            }
                            //            myrate = totamt / totqty;
                            //            dtout.Rows[o]["irate"] = myrate;
                            //            dtout.Rows[o]["iamount"] = totamt;//out amt
                            //        }
                            //        string rec = dtout.Rows[o]["recid"].ToString();
                            //        recs.Add(rec);
                            //        mq += " WHEN rec_id = '" + rec + "' THEN " + myrate + "";
                            //        mq1 += " WHEN rec_id = '" + rec + "' THEN " + totamt + "";
                            //    }
                            //    mq += " where rec_id in (" + string.Join("','", recs) + "'";
                            //    mq1 += " where rec_id in (" + string.Join("','", recs) + "'";
                            //    var qtyout = 25;
                            //    for (int i = 0; i < dtin.Rows.Count; i++) //in dt
                            //    {
                            //        qtyin = sgen.Make_decimal(dtin.Rows[i]["qtyin"].ToString());
                            //        cl = sgen.Make_decimal(dtin.Rows[i]["cl"].ToString());
                            //        rt = sgen.Make_decimal(dtin.Rows[i]["irate"].ToString());
                            //        bal = qtyin - cl;
                            //        if (bal == qtyout)
                            //        {
                            //            totqty = totqty + qtyout;
                            //            dtin.Rows[i]["cl"] = qtyin;//in bal
                            //            totamt += rt * qtyout;
                            //            qtyout = 0;
                            //        }
                            //        else if (bal > qtyout)
                            //        {
                            //            totqty += qtyout;
                            //            dtin.Rows[i]["cl"] = cl + qtyout;//in bal
                            //            totamt += rt * qtyout;
                            //            qtyout = 0;
                            //        }
                            //        else if (bal < qtyout)
                            //        {
                            //            totqty += bal;
                            //            dtin.Rows[i]["cl"] = cl + bal;//in bal
                            //            totamt += rt * bal;
                            //            qtyout = qtyout - bal;
                            //        }
                            //        if (qtyout == 0) break;
                            //    }
                            //    //sgen.execute_cmd(userCode, mq);
                            //    //sgen.execute_cmd(userCode, mq1);
                            //}
                            ////average moving price
                            //else if (mq1.Trim() == "002")
                            //{
                            //    dtin = dtavg.Select("type in ('Q01','Q02','36')").CopyToDataTable();
                            //    dtout = dtavg.Select("type in ('10','11','30','32','21','22')").CopyToDataTable();
                            //    List<string> recs = new List<string>();
                            //    mq = "UPDATE itransaction SET irate = CASE";
                            //    mq1 = "UPDATE itransaction SET iamount = CASE";
                            //    for (int o = 0; o < dtout.Rows.Count; o++) //out dt
                            //    {
                            //        var dtin_t = dtin.AsEnumerable().Where(w => w.Field<DateTime>("vch_date") <= ((DateTime)dtout.Rows[o]["vch_date"])).CopyToDataTable();
                            //        DataTable dtttt = new DataTable();
                            //        dtttt.Columns.Add("totqty");
                            //        dtttt.Columns.Add("totamt");
                            //        var t1 = dtin_t.AsEnumerable().GroupBy(k => new
                            //        {
                            //            icode = k.Field<string>("icode")
                            //        });
                            //        var t2 = t1.Select(c =>
                            //        {
                            //            var row = dtttt.NewRow();
                            //            row["icode"] = c.Key.icode;
                            //            row["totqty"] = c.Sum(k => k.Field<decimal>("qtyin"));
                            //            row["totamt"] = c.Sum(k => k.Field<decimal>("iamount"));
                            //            return row;
                            //        });
                            //        dtttt = t2.CopyToDataTable();
                            //        totamt = 0; totqty = 0;
                            //        qtyout = sgen.Make_decimal(dtout.Rows[o]["qtyout"].ToString());
                            //        bal = sgen.Make_decimal(dtttt.Rows[0][0].ToString());
                            //        amt = sgen.Make_decimal(dtttt.Rows[0][1].ToString());
                            //        rt = amt / bal;
                            //        //myrate = totamt / totqty;
                            //        dtout.Rows[o]["irate"] = rt;
                            //        dtout.Rows[o]["iamount"] = qtyout * rt;//out amt
                            //        string rec = dtout.Rows[o]["recid"].ToString();
                            //        recs.Add(rec);
                            //        mq += " WHEN rec_id = '" + rec + "' THEN " + myrate + "";
                            //        mq1 += " WHEN rec_id = '" + rec + "' THEN " + totamt + "";
                            //    }
                            //    mq += " where rec_id in (" + string.Join("','", recs) + "'";
                            //    mq1 += " where rec_id in (" + string.Join("','", recs) + "'";
                            //    //sgen.execute_cmd(userCode, mq);
                            //    //sgen.execute_cmd(userCode, mq1);
                            //}
                            #endregion
                            #region
                            #region wip in iprod
                            if (mmt.Trim() == "002")//WIP
                            {
                                DataRow dr = dtpd.NewRow();
                                dr["vch_num"] = vch_num;
                                dr["type"] = model[0].Col12;
                                dr["vch_date"] = vch_date;//issuedate                                                     
                                dr["icode"] = model[0].dt1.Rows[i]["Icode"].ToString();
                                dr["iname"] = model[0].dt1.Rows[i]["IName"].ToString();
                                dr["acode"] = model[0].SelectedItems1.FirstOrDefault();//dept                         
                                dr["stage"] = "001";//FROM stage                        
                                dr["qtyin"] = sgen.Make_decimal(model[0].dt1.Rows[i]["Qty_Issue"].ToString().Trim());//produce qty                                                  s                      
                                dr["pflag"] = "W";//consume pd   
                                dr["rec_id"] = "0";
                                // shiv
                                if (isedit)
                                {
                                    dr["client_id"] = model[0].Col1.Trim();
                                    dr["client_unit_id"] = model[0].Col2.Trim();
                                    dr["ent_by"] = model[0].Col3;
                                    dr["ent_date"] = model[0].Col4;
                                    dr["edit_by"] = userid_mst;
                                    dr["edit_date"] = currdate;
                                }
                                else
                                {
                                    dr["client_id"] = clientid_mst;
                                    dr["client_unit_id"] = unitid_mst;
                                    dr["ent_by"] = userid_mst;
                                    dr["ent_date"] = currdate;
                                    dr["edit_by"] = "-";
                                    dr["edit_date"] = currdate;
                                }
                                dtpd.Rows.Add(dr);
                            }
                            #endregion
                            #region wip in itransaction (not in use)
                            //if (mmt.Trim() == "002")//WIP
                            //{
                            //    DataRow dr = dataTable.NewRow();
                            //    dr["vch_num"] = vch_num;
                            //    dr["type"] = model[0].Col12;
                            //    dr["vch_date"] = vch_date;//issuedate
                            //    dr["deptno"] = model[0].SelectedItems1.FirstOrDefault();
                            //    dr["desig"] = model[0].SelectedItems2.FirstOrDefault();
                            //    dr["totremark"] = model[0].Col21;
                            //    dr["cond"] = model[0].Col22;//orderid
                            //    if (model[0].Col12 == "32")//with mrs
                            //    {
                            //        dr["chlno"] = model[0].Col23;//mrsno
                            //        dr["chldate"] = sgen.Savedate(model[0].Col24, false);//mrsdate
                            //    }
                            //    dr["icode"] = model[0].dt1.Rows[i]["Icode"].ToString();
                            //    dr["iname"] = model[0].dt1.Rows[i]["IName"].ToString();
                            //    dr["cpartno"] = model[0].dt1.Rows[i]["partno"].ToString();
                            //    dr["uom"] = model[0].dt1.Rows[i]["UOM"].ToString();
                            //    dr["qtystk"] = model[0].dt1.Rows[i]["Qty_in_stock"].ToString();
                            //    dr["qtychl"] = model[0].dt1.Rows[i]["Qty_req"].ToString();
                            //    dr["qtyin"] = model[0].dt1.Rows[i]["QTY_ISSUE"].ToString().Trim();
                            //    dr["qtybal"] = model[0].dt1.Rows[i]["qty_Req_bal"].ToString();
                            //    dr["iremark"] = model[0].dt1.Rows[i]["Remark"].ToString();
                            //    dr["pono"] = model[0].dt1.Rows[i]["Order_Id"].ToString();
                            //    dr["irate"] = model[0].dt1.Rows[i]["rate"].ToString();
                            //    dr["iamount"] = model[0].dt1.Rows[i]["amount"].ToString();
                            //    dr["mmt"] = mmt.Trim();
                            //    dr["btchno"] = model[0].SelectedItems3.FirstOrDefault();//fixedlocid
                            //    dr["cond"] = model[0].TList3.SingleOrDefault(w => w.Value == model[0].SelectedItems3.FirstOrDefault()).Text;//fixedlocname
                            //    dr["store"] = "Y";
                            //    dr["inspected"] = "W";
                            //    dr["rec_id"] = "0";
                            //    // shiv
                            //    if (isedit)
                            //    {
                            //        dr["client_id"] = model[0].Col1.Trim();
                            //        dr["client_unit_id"] = model[0].Col2.Trim();
                            //        dr["ent_by"] = model[0].Col3;
                            //        dr["ent_date"] = model[0].Col4;
                            //        dr["edit_by"] = userid_mst;
                            //        dr["edit_date"] = currdate;
                            //    }
                            //    else
                            //    {
                            //        dr["client_id"] = clientid_mst;
                            //        dr["client_unit_id"] = unitid_mst;
                            //        dr["ent_by"] = userid_mst;
                            //        dr["ent_date"] = currdate;
                            //        dr["edit_by"] = "-";
                            //        dr["edit_date"] = currdate;
                            //    }
                            //    dataTable.Rows.Add(dr);
                            //}
                            #endregion
                            #region consume in itransaction
                            DataRow dr1 = dataTable.NewRow();
                            dr1["vch_num"] = vch_num;
                            dr1["type"] = model[0].Col12;
                            dr1["vch_date"] = vch_date;//issuedate
                            dr1["deptno"] = model[0].SelectedItems1.FirstOrDefault();
                            dr1["desig"] = model[0].SelectedItems2.FirstOrDefault();
                            dr1["btchno"] = model[0].SelectedItems3.FirstOrDefault();
                            dr1["totremark"] = model[0].Col21;
                            dr1["cond"] = model[0].Col22;//orderid
                            if (model[0].Col12 == "32")//with mrs
                            {
                                dr1["chlno"] = model[0].Col23;//mrsno
                                dr1["chldate"] = sgen.Savedate(model[0].Col24, false);//mrsdate
                            }
                            dr1["icode"] = model[0].dt1.Rows[i]["Icode"].ToString();
                            dr1["iname"] = model[0].dt1.Rows[i]["IName"].ToString();
                            dr1["cpartno"] = model[0].dt1.Rows[i]["partno"].ToString();
                            dr1["uom"] = model[0].dt1.Rows[i]["UOM"].ToString();
                            dr1["qtystk"] = model[0].dt1.Rows[i]["Qty_in_stock"].ToString();
                            dr1["qtychl"] = model[0].dt1.Rows[i]["Qty_req"].ToString();
                            dr1["qtyout"] = model[0].dt1.Rows[i]["QTY_ISSUE"].ToString().Trim();
                            dr1["qtybal"] = model[0].dt1.Rows[i]["qty_Req_bal"].ToString();
                            dr1["iremark"] = model[0].dt1.Rows[i]["Remark"].ToString();
                            dr1["pono"] = model[0].dt1.Rows[i]["Order_Id"].ToString();
                            dr1["pktno"] = model[0].dt1.Rows[i]["No_of_pkt"].ToString() == "" ? "0" : model[0].dt1.Rows[i]["No_of_pkt"].ToString();
                            dr1["irate"] = model[0].dt1.Rows[i]["rate"].ToString();
                            dr1["iamount"] = model[0].dt1.Rows[i]["amount"].ToString();
                            dr1["mmt"] = mmt.Trim();
                            dr1["store"] = "Y";
                            dr1["inspected"] = "C";
                            dr1["rec_id"] = "0";
                            // shiv
                            if (isedit)
                            {
                                dr1["client_id"] = model[0].Col1.Trim();
                                dr1["client_unit_id"] = model[0].Col2.Trim();
                                dr1["ent_by"] = model[0].Col3;
                                dr1["ent_date"] = model[0].Col4;
                                dr1["edit_by"] = userid_mst;
                                dr1["edit_date"] = currdate;
                            }
                            else
                            {
                                dr1["client_id"] = clientid_mst;
                                dr1["client_unit_id"] = unitid_mst;
                                dr1["ent_by"] = userid_mst;
                                dr1["ent_date"] = currdate;
                                dr1["edit_by"] = "-";
                                dr1["edit_date"] = currdate;
                            }
                            dataTable.Rows.Add(dr1);
                            #endregion
                            #endregion
                        }
                        if (dtpd.Rows.Count > 0)
                        {
                            res1 = sgen.Update_data_fast1_uncommit(userCode, dtpd, "iprod", model[0].Col8, isedit, sat1);
                            if (!res1)
                            {
                                sat1.Rollback();
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                                ViewBag.scripCall += "showmsgJS(1, 'Wip data not saved', 0);";
                                ModelState.Clear();
                                return View(model);
                            }
                        }
                        res = sgen.Update_data_fast1_uncommit(userCode, dataTable, model[0].Col10.Trim(), model[0].Col8, isedit, sat1);
                        if (res == true)
                        {
                            dt = cmd_Fun.GetStructure(userCode, "btchtrans");
                            for (int i = 0; i < model[0].dt2.Rows.Count; i++)
                            {
                                #region
                                #region wip btchtrans not in use
                                //if (mmt.Trim() == "002")
                                //{
                                //    DataRow dr = dt.NewRow();
                                //    dr["vch_num"] = vch_num;
                                //    dr["type"] = model[0].Col12;
                                //    dr["vch_date"] = vch_date;
                                //    dr["deptno"] = model[0].SelectedItems1.FirstOrDefault();
                                //    dr["desig"] = model[0].SelectedItems2.FirstOrDefault();
                                //    dr["totremark"] = model[0].Col21;
                                //    dr["ordid"] = model[0].Col22;//orderid
                                //    if (model[0].Col12 == "32")//with mrs
                                //    {
                                //        dr["chlno"] = model[0].Col23;//mrsno
                                //        dr["chldate"] = sgen.Savedate(model[0].Col24, false);//mrsdate
                                //    }
                                //    dr["icode"] = model[0].dt2.Rows[i]["icode"].ToString();
                                //    dr["iname"] = model[0].dt2.Rows[i]["iname"].ToString();
                                //    dr["cpartno"] = model[0].dt2.Rows[i]["partno"].ToString();
                                //    dr["uom"] = model[0].dt2.Rows[i]["UOM"].ToString();
                                //    dr["qtystk"] = model[0].dt2.Rows[i]["Qty_in_stock"].ToString();
                                //    dr["qtyin"] = model[0].dt2.Rows[i]["QTY_ISSUE"].ToString().Trim();
                                //    dr["iremark"] = model[0].dt2.Rows[i]["Remark"].ToString();
                                //    dr["loc"] = model[0].SelectedItems3.FirstOrDefault();
                                //    dr["locname"] = model[0].TList3.SingleOrDefault(w => w.Value == model[0].SelectedItems3.FirstOrDefault()).Text;
                                //    dr["mmt"] = mmt.Trim();
                                //    dr["store"] = "Y";
                                //    dr["pono"] = "W";
                                //    dr["rec_id"] = "0";
                                //    // shiv
                                //    if (isedit)
                                //    {
                                //        dr["client_id"] = model[0].Col1.Trim();
                                //        dr["client_unit_id"] = model[0].Col2.Trim();
                                //        dr["ent_by"] = model[0].Col3;
                                //        dr["ent_date"] = model[0].Col4;
                                //        dr["edit_by"] = userid_mst;
                                //        dr["edit_date"] = currdate;
                                //    }
                                //    else
                                //    {
                                //        dr["client_id"] = clientid_mst;
                                //        dr["client_unit_id"] = unitid_mst;
                                //        dr["ent_by"] = userid_mst;
                                //        dr["ent_date"] = currdate;
                                //        dr["edit_by"] = "-";
                                //        dr["edit_date"] = currdate;
                                //    }
                                //    dt.Rows.Add(dr);
                                //}
                                #endregion
                                #region issue btchtrans consume
                                DataRow dr1 = dt.NewRow();
                                dr1["vch_num"] = vch_num;
                                dr1["type"] = model[0].Col12;
                                dr1["vch_date"] = vch_date;
                                dr1["deptno"] = model[0].SelectedItems1.FirstOrDefault();
                                dr1["desig"] = model[0].SelectedItems2.FirstOrDefault();
                                dr1["totremark"] = model[0].Col21;
                                dr1["ordid"] = model[0].Col22;//orderid
                                if (model[0].Col12 == "32")//with mrs
                                {
                                    dr1["chlno"] = model[0].Col23;//mrsno
                                    dr1["chldate"] = sgen.Savedate(model[0].Col24, false);//mrsdate
                                }
                                dr1["icode"] = model[0].dt2.Rows[i]["icode"].ToString();
                                dr1["iname"] = model[0].dt2.Rows[i]["iname"].ToString();
                                dr1["cpartno"] = model[0].dt2.Rows[i]["partno"].ToString();
                                dr1["uom"] = model[0].dt2.Rows[i]["UOM"].ToString();
                                dr1["qtystk"] = model[0].dt2.Rows[i]["Qty_in_stock"].ToString();
                                dr1["qtyout"] = model[0].dt2.Rows[i]["QTY_ISSUE"].ToString().Trim();
                                dr1["iremark"] = model[0].dt2.Rows[i]["Remark"].ToString();
                                dr1["loc"] = model[0].dt2.Rows[i]["LocCode"].ToString();
                                dr1["locname"] = model[0].dt2.Rows[i]["Loc"].ToString();
                                dr1["mmt"] = mmt.Trim();
                                dr1["store"] = "Y";
                                dr1["pono"] = "C";//flag
                                dr1["rec_id"] = "0";
                                // shiv
                                if (isedit)
                                {
                                    dr1["client_id"] = model[0].Col1.Trim();
                                    dr1["client_unit_id"] = model[0].Col2.Trim();
                                    dr1["ent_by"] = model[0].Col3;
                                    dr1["ent_date"] = model[0].Col4;
                                    dr1["edit_by"] = userid_mst;
                                    dr1["edit_date"] = currdate;
                                }
                                else
                                {
                                    dr1["client_id"] = clientid_mst;
                                    dr1["client_unit_id"] = unitid_mst;
                                    dr1["ent_by"] = userid_mst;
                                    dr1["ent_date"] = currdate;
                                    dr1["edit_by"] = "-";
                                    dr1["edit_date"] = currdate;
                                }
                                dt.Rows.Add(dr1);
                                #endregion
                                #endregion
                            }
                            ok = sgen.Update_data_fast1_uncommit(userCode, dt, "btchtrans", model[0].Col8, isedit, sat1);
                            if (ok != true)
                            {
                                sat1.Rollback();
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                                ViewBag.scripCall += "showmsgJS(1, 'Data Not Saved', 0);";
                                ModelState.Clear();
                                return View(model);
                            }
                            sat1.Commit();
                            //ViewBag.vnew = "";
                            //ViewBag.vedit = "";
                            //ViewBag.vsave = "disabled='disabled'";
                            //ViewBag.vsavenew = "disabled='disabled'";
                            //ViewBag.vfill = "disabled='disabled'";
                            if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                            {
                                //sat1.Commit();
                                ViewBag.vnew = "";
                                ViewBag.vedit = "";
                                ViewBag.vsave = "disabled='disabled'";
                                ViewBag.vsavenew = "disabled='disabled'";
                                ViewBag.vfill = "disabled='disabled'";
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                            }
                            else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                            {
                                try
                                {
                                    //sat1.Commit();
                                    ViewBag.vnew = "";
                                    ViewBag.vedit = "";
                                    ViewBag.vsave = "disabled='disabled'";
                                    ViewBag.vsavenew = "disabled='disabled'";
                                    ViewBag.vfill = "disabled='disabled'";
                                    Make_query("item_issued", "Select Item Issued Type", "NEW", "1", "", "");
                                    ViewBag.scripCall = "callFoo('Select Item Issued Type');";
                                    ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                                }
                                catch (Exception ex)
                                {
                                    ViewBag.scripCall += "mytoast('error', 'toast-top-right', '" + ex.Message.ToString().Trim() + "');";
                                }
                            }
                            model = new List<Tmodelmain>();
                            model.Add(new Tmodelmain
                            {
                                Col13 = "Save",
                                Col100 = "Save & New",
                                Col121 = "S",
                                Col122 = "<u>S</u>ave",
                                Col123 = "Save & Ne<u>w</u>",
                                Col10 = tm.Col10,
                                Col11 = tm.Col11,
                                Col14 = tm.Col14,
                                Col15 = tm.Col15,
                                TList1 = mod1,
                                SelectedItems1 = new string[] { "" },
                                TList2 = mod2,
                                SelectedItems2 = new string[] { "" },
                                TList3 = mod3,
                                SelectedItems3 = new string[] { "" },
                                TList4 = mod4,
                                SelectedItems4 = new string[] { "" },
                                dt1 = null,
                                dt2 = null
                            });
                            sgen.SetSession(MyGuid, "dtbase1", null);
                            sgen.SetSession(MyGuid, "dtbase2", null);
                            sgen.SetSession(MyGuid, "KISTYPE", null);
                            //ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else
                        {
                            sat1.Rollback();
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            ViewBag.scripCall += "showmsgJS(1, 'Data Not Saved', 0);";
                        }
                    }
                    catch (Exception ex) { ViewBag.scripCall = "showmsgJS(1,'" + ex.Message.ToString().Replace('\'', ' ') + "', 0);"; sat1.Rollback(); }
                }
                else if (command == "-")
                {
                    if (model[0].dt1.Rows.Count > 1) model[0].dt1.Rows.RemoveAt(sgen.Make_int(hfrow));
                    else { model[0].dt1 = (DataTable)sgen.GetSession(MyGuid, "dtbase1"); }
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
                else if (command == "2-")
                {
                    if (model[0].dt2.Rows.Count > 1) model[0].dt2.Rows.RemoveAt(sgen.Make_int(hfrow));
                    else { model[0].dt2 = (DataTable)sgen.GetSession(MyGuid, "dtbase2"); }
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region item_issuedn
        public ActionResult item_issuedn()
        {
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            FillMst(MyGuid);
            chkRef();
            ViewBag.vnew = "";
            ViewBag.vedit = "";
            ViewBag.vsave = "disabled='disabled'";
            ViewBag.vsavenew = "disabled='disabled'";
            ViewBag.vfill = "disabled='disabled'";
            ViewBag.scripCall = "disableForm();";
            List<Tmodelmain> model = new List<Tmodelmain>();
            Tmodelmain tm1 = new Tmodelmain();
            List<SelectListItem> mod1 = new List<SelectListItem>();
            mid_mst = EncryptDecrypt.Decrypt(Request.QueryString["mid"]);
            tm1.Col10 = "itransaction";
            tm1.Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            tm1.Col13 = "Save";
            tm1.Col100 = "Save & New";
            tm1.Col14 = mid_mst.Trim();
            tm1.Col15 = MyGuid.Trim();
            tm1.Col121 = "S";
            tm1.Col122 = "<u>S</u>ave";
            tm1.Col123 = "Save & Ne<u>w</u>";

            tm1.SelectedItems1 = new string[] { "" };
            tm1.SelectedItems2 = new string[] { "" };
            tm1.SelectedItems3 = new string[] { "" };
            tm1.SelectedItems4 = new string[] { "" };
            TempData[MyGuid + "_TList1"] = tm1.TList1 = mod1;
            TempData[MyGuid + "_TList2"] = tm1.TList2 = mod1;
            TempData[MyGuid + "_TList3"] = tm1.TList3 = mod1;
            TempData[MyGuid + "_TList4"] = tm1.TList4 = mod1;
            tm1.dt1 = null;
            tm1.dt2 = null;
            //tm1.dt3 = null;
            sgen.SetSession(MyGuid, "dtbase1", null);
            sgen.SetSession(MyGuid, "dtbase2", null);
            //sgen.SetSession(MyGuid, "dtbase3", null);
            sgen.SetSession(MyGuid, "KISTYPE", null);
            tm1.Col28 = m_module3;
            DataTable dtb = (DataTable)sgen.GetSession(MyGuid, "URIGHTS");
            try
            {
                dtb = dtb.Select("m_id='" + tm1.Col14 + "'").CopyToDataTable();
                if (dtb.Rows.Count > 0)
                {
                    tm1.Col133 = dtb.Rows[0]["btnnew"].ToString();
                    tm1.Col134 = dtb.Rows[0]["btnedit"].ToString();
                    tm1.Col135 = dtb.Rows[0]["btnview"].ToString();
                }
            }
            catch (Exception ex) { }
            model.Add(tm1);
            return View(model);
        }
        [HttpPost]
        public ActionResult item_issuedn(List<Tmodelmain> model, string command, string hfrow, string hftable)
        {
            try
            {

                FillMst(model[0].Col15);

                DataSet ds = new DataSet();
                if (hftable.Trim() != "")
                {
                    ds = sgen.setDS(hftable);
                    model[0].dt1 = ds.Tables[0];
                    //if (model[0].Col12 == "32")
                    //{
                    model[0].dt2 = ds.Tables[1];
                    //}
                    //model[0].dt3 = ds.Tables[2];
                }
                var tm = model.FirstOrDefault();
                #region ddl
                List<SelectListItem> mod1 = new List<SelectListItem>();
                List<SelectListItem> mod2 = new List<SelectListItem>();
                List<SelectListItem> mod3 = new List<SelectListItem>();
                List<SelectListItem> mod4 = new List<SelectListItem>();
                TempData[MyGuid + "_TList1"] = model[0].TList1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                TempData[MyGuid + "_TList2"] = model[0].TList2 = (List<SelectListItem>)TempData[MyGuid + "_TList2"];
                TempData[MyGuid + "_TList3"] = model[0].TList3 = (List<SelectListItem>)TempData[MyGuid + "_TList3"];
                TempData[MyGuid + "_TList4"] = model[0].TList4 = (List<SelectListItem>)TempData[MyGuid + "_TList4"];
                if (tm.SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                if (tm.SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
                if (tm.SelectedItems3 == null) model[0].SelectedItems3 = new string[] { "" };
                if (tm.SelectedItems4 == null) model[0].SelectedItems4 = new string[] { "" };
                #endregion
                DataTable dt = new DataTable();
                if (command == "Cancel") { return CancelFun(model); }
                else if (command == "Callback")
                {
                    if (sgen.GetSession(MyGuid, "btnval") != null) btnval = sgen.GetSession(MyGuid, "btnval").ToString();
                    model = CallbackFun(btnval, "N", actionName, controllerName, model);
                    if (btnval.Trim().ToUpper().Equals("PRINT"))
                    {
                        ViewBag.vnew = "";
                        ViewBag.vedit = "";
                        ViewBag.vsave = "disabled='disabled'";
                        ViewBag.vsavenew = "disabled='disabled'";
                    }
                    else
                    {
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                    }
                }
                else if (command == "Fill Location")
                {
                    if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-"))
                    {
                        ViewBag.scripCall += "showmsgJS(1,'Please Select item in grid-1', 0);";
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                        return View(model);
                    }
                    //if (model[0].Col12 == "32")
                    //{
                    //    if (model[0].dt2.Rows[0]["icode"].ToString().Trim().Equals("-"))
                    //    {
                    //        ViewBag.scripCall += "showmsgJS(1,'Please Select item in grid-2', 0);";
                    //        ViewBag.vnew = "disabled='disabled'";
                    //        ViewBag.vedit = "disabled='disabled'";
                    //        ViewBag.vsave = "";
                    //        ViewBag.vsavenew = "";
                    //        return View(model);
                    //    }
                    //}
                    try
                    {
                        //if (model[0].dt3 != null && model[0].dt3.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt3.Rows.RemoveAt(0); }
                        if (model[0].dt2 != null && model[0].dt2.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt2.Rows.RemoveAt(0); }
                    }
                    catch (Exception err) { }
                    //var dttt = model[0].dt3.Clone();
                    var dttt = model[0].dt2.Clone();
                    //model[0].dt3 = dttt;
                    model[0].dt2 = dttt;
                    foreach (DataRow dr1 in model[0].dt1.Rows)
                        try
                        {
                            if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-"))
                            {
                                ViewBag.scripCall += "showmsgJS(1,'Please Select item in grid-1', 2);";
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                                return View(model);
                            }
                            //if (model[0].Col12 == "32")
                            //{
                            //    if (model[0].dt2.Rows[0]["icode"].ToString().Trim().Equals("-"))
                            //    {
                            //        ViewBag.scripCall += "showmsgJS(1,'Please Select item in grid-2', 0);";
                            //        ViewBag.vnew = "disabled='disabled'";
                            //        ViewBag.vedit = "disabled='disabled'";
                            //        ViewBag.vsave = "";
                            //        ViewBag.vsavenew = "";
                            //        return View(model);
                            //    }
                            //}
                            try
                            {
                                //if (model[0].dt3.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt3.Rows.RemoveAt(0); }
                                if (model[0].dt2.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt2.Rows.RemoveAt(0); }
                            }
                            catch (Exception err) { }
                            //var dt7 = model[0].dt3.Clone();
                            var dt7 = model[0].dt2.Clone();
                            //model[0].dt3 = dt7;
                            model[0].dt2 = dt7;

                            //if (model[0].Col12 == "32")
                            //{
                            //    foreach (DataRow dr3 in model[0].dt1.Rows)
                            //    {
                            //        decimal qtyissue = sgen.Make_decimal(dr3["qty_issue"].ToString().Trim());
                            //        if (qtyissue <= 0)
                            //        {
                            //            ViewBag.vnew = "disabled='disabled'";
                            //            ViewBag.vedit = "disabled='disabled'";
                            //            ViewBag.vsave = "";
                            //            ViewBag.vsavenew = "";
                            //            ViewBag.scripCall += "showmsgJS(1,'Please FILL Issue Qty in Item " + dr3["iname"].ToString() + "', 2);";
                            //            model[0].dt2 = (DataTable)sgen.GetSession(MyGuid, "dtbase2");
                            //            break;
                            //        }
                            //        string icode = dr3["icode"].ToString().Trim();
                            //        // Shiv
                            //        DataTable dloc = sgen.getdata(userCode, "select itb.loc,location_name(itb.client_id||itb.client_unit_id||itb.loc) from itbal itb " +
                            //            "where trim(itb.icode)='" + icode + "' and itb.type='IT' and itb.client_unit_id='" + unitid_mst + "'");
                            //        DataTable dtlocs = sgen.locclosing_all(userCode, unitid_mst + icode, FN_From_Date + "!~!~!~!~!" + model[0].Col20);
                            //        int rcnt = dtlocs.Rows.Count;
                            //        if (rcnt == 0)
                            //        {
                            //            ViewBag.scripCall += "showmsgJS(1,'Item " + icode + " stock is zero' , 0);";
                            //            return View(model);
                            //        }
                            //        DataColumn dc = new DataColumn("ordd", typeof(int));
                            //        dc.DefaultValue = "0";
                            //        dtlocs.Columns.Add(dc);
                            //        try
                            //        {
                            //            var rind = sgen.seekval_dt_rowindex(dtlocs, "loc='" + dloc.Rows[0]["loc"].ToString().Trim() + "'");
                            //            dtlocs.Rows[rind - 1]["ordd"] = rcnt;
                            //        }
                            //        catch (Exception err) { }
                            //        DataView dv = dtlocs.DefaultView;
                            //        dv.Sort = "ordd asc";
                            //        dtlocs = dv.ToTable();
                            //        foreach (DataRow dr in dtlocs.Rows)
                            //        {
                            //            if (qtyissue <= 0) break;
                            //            DataRow dr2 = model[0].dt2.NewRow();
                            //            dr2["sno"] = unitid_mst + dr3["icode"].ToString().Trim() + dr["LOC"].ToString().Trim();
                            //            dr2["Icode"] = dr3["icode"].ToString().Trim();
                            //            dr2["INAME"] = dr3["INAME"].ToString().Trim();
                            //            dr2["PARTNO"] = dr3["PARTNO"].ToString().Trim();
                            //            dr2["UOM"] = dr3["UOM"].ToString().Trim();
                            //            dr2["Qty_In_Stock"] = dr["closing"].ToString().Trim();
                            //            decimal lclos = sgen.Make_decimal(dr["closing"].ToString().Trim());
                            //            if (qtyissue > lclos)
                            //            {
                            //                dr2["Qty_Issue"] = lclos;
                            //                qtyissue = qtyissue - lclos;
                            //            }
                            //            else
                            //            {
                            //                dr2["Qty_Issue"] = qtyissue;
                            //                qtyissue = 0;
                            //            }
                            //            dr2["Remark"] = "-";
                            //            dr2["LocCode"] = dr["loc"].ToString().Trim();
                            //            dr2["LOC"] = dr["loc_name"].ToString().Trim();
                            //            model[0].dt2.Rows.Add(dr2);
                            //        }
                            //        ViewBag.vnew = "disabled='disabled'";
                            //        ViewBag.vedit = "disabled='disabled'";
                            //        ViewBag.vsave = "";
                            //        ViewBag.vsavenew = "";
                            //    }
                            //}
                            //else
                            //{
                            foreach (DataRow dr3 in model[0].dt1.Rows)
                            {
                                decimal qtyissue = sgen.Make_decimal(dr3["qty_issue"].ToString().Trim());
                                if (qtyissue <= 0)
                                {
                                    ViewBag.vnew = "disabled='disabled'";
                                    ViewBag.vedit = "disabled='disabled'";
                                    ViewBag.vsave = "";
                                    ViewBag.vsavenew = "";
                                    ViewBag.scripCall += "showmsgJS(1,'Please FILL Issue Qty in Item " + dr3["iname"].ToString() + "', 2);";
                                    model[0].dt2 = (DataTable)sgen.GetSession(MyGuid, "dtbase2");
                                    break;
                                }
                                string icode = dr3["icode"].ToString().Trim();
                                string btchno = dr3["batchno"].ToString().Trim();
                                // Shiv
                                DataTable dloc = sgen.getdata(userCode, "select itb.loc,location_name(itb.client_id||itb.client_unit_id||itb.loc) from itbal itb " +
                                    "where trim(itb.icode)='" + icode + "' and itb.type='IT' and itb.client_unit_id='" + unitid_mst + "'");
                                DataTable dtlocs = sgen.btchlocclosing_all(userCode, unitid_mst + icode + btchno, FN_From_Date + "!~!~!~!~!" + model[0].Col20 + "!~!~!~!~!" + model[0].Col12);
                                int rcnt = dtlocs.Rows.Count;
                                if (rcnt == 0)
                                {
                                    ViewBag.scripCall += "showmsgJS(1,'Item " + icode + " stock is zero' , 0);";
                                    return View(model);
                                }
                                DataColumn dc = new DataColumn("ordd", typeof(int));
                                dc.DefaultValue = "0";
                                dtlocs.Columns.Add(dc);
                                try
                                {
                                    var rind = sgen.seekval_dt_rowindex(dtlocs, "loc='" + dloc.Rows[0]["loc"].ToString().Trim() + "'");
                                    dtlocs.Rows[rind - 1]["ordd"] = rcnt;
                                }
                                catch (Exception err) { }
                                DataView dv = dtlocs.DefaultView;
                                dv.Sort = "ordd asc";
                                dtlocs = dv.ToTable();
                                foreach (DataRow dr in dtlocs.Rows)
                                {
                                    if (qtyissue <= 0) break;
                                    DataRow dr2 = model[0].dt2.NewRow();
                                    dr2["sno"] = unitid_mst + dr3["icode"].ToString().Trim() + dr["LOC"].ToString().Trim();
                                    dr2["Icode"] = dr3["icode"].ToString().Trim();
                                    dr2["INAME"] = dr3["INAME"].ToString().Trim();
                                    dr2["PARTNO"] = dr3["PARTNO"].ToString().Trim();
                                    dr2["UOM"] = dr3["UOM"].ToString().Trim();
                                    dr2["Qty_In_Stock"] = dr["closing"].ToString().Trim();
                                    decimal lclos = sgen.Make_decimal(dr["closing"].ToString().Trim());
                                    if (qtyissue > lclos)
                                    {
                                        dr2["Qty_Issue"] = lclos;
                                        qtyissue = qtyissue - lclos;
                                    }
                                    else
                                    {
                                        dr2["Qty_Issue"] = qtyissue;
                                        qtyissue = 0;
                                    }
                                    dr2["Remark"] = "-";
                                    dr2["LocCode"] = dr["loc"].ToString().Trim();
                                    dr2["LOC"] = dr["loc_name"].ToString().Trim();
                                    dr2["batchno"] = dr["btchno"].ToString().Trim();
                                    model[0].dt2.Rows.Add(dr2);
                                }
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                            }
                            //}
                        }
                        catch (Exception ex) { ViewBag.scripCall += "showmsgJS(1,'" + ex.Message.ToString().Replace('\'', ' ') + "', 0);"; }
                    if (model[0].dt2.Rows.Count == 0) model[0].dt2 = ((DataTable)sgen.GetSession(MyGuid, "dtbase2"));
                    if (model[0].dt1.Rows.Count == 0) model[0].dt1 = ((DataTable)sgen.GetSession(MyGuid, "dtbase1"));

                    //foreach (DataRow dr1 in model[0].dt1.Rows)
                    //    try
                    //    {
                    //        if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-"))
                    //        {
                    //            ViewBag.scripCall += "showmsgJS(1,'Please Select item in grid-1', 2);";
                    //            ViewBag.vnew = "disabled='disabled'";
                    //            ViewBag.vedit = "disabled='disabled'";
                    //            ViewBag.vsave = "";
                    //            ViewBag.vsavenew = "";
                    //            return View(model);
                    //        }
                    //        try
                    //        {
                    //            if (model[0].dt2.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt2.Rows.RemoveAt(0); }
                    //        }
                    //        catch (Exception err) { }
                    //        var dt7 = model[0].dt2.Clone();
                    //        model[0].dt2 = dt7;
                    //        foreach (DataRow dr3 in model[0].dt1.Rows)
                    //        {
                    //            decimal qtyissue = sgen.Make_decimal(dr3["qty_issue"].ToString().Trim());
                    //            if (qtyissue <= 0)
                    //            {
                    //                ViewBag.vnew = "disabled='disabled'";
                    //                ViewBag.vedit = "disabled='disabled'";
                    //                ViewBag.vsave = "";
                    //                ViewBag.vsavenew = "";
                    //                ViewBag.scripCall += "showmsgJS(1,'Please FILL Issue Qty in Item " + dr3["iname"].ToString() + "', 2);";
                    //                model[0].dt2 = (DataTable)sgen.GetSession(MyGuid, "dtbase2");
                    //                break;
                    //            }
                    //            string icode = dr3["icode"].ToString().Trim();
                    //            // Shiv
                    //            DataTable dloc = sgen.getdata(userCode, "select itb.loc,location_name(itb.client_id||itb.client_unit_id||itb.loc) from itbal itb " +
                    //                "where trim(itb.icode)='" + icode + "' and itb.type='IT' and itb.client_unit_id='" + unitid_mst + "'");
                    //            DataTable dtlocs = sgen.locclosing_all(userCode, unitid_mst + icode, FN_From_Date + "!~!~!~!~!" + model[0].Col20);
                    //            int rcnt = dtlocs.Rows.Count;
                    //            if (rcnt == 0)
                    //            {
                    //                ViewBag.scripCall += "showmsgJS(1,'Item " + icode + " stock is zero' , 0);";
                    //                return View(model);
                    //            }
                    //            DataColumn dc = new DataColumn("ordd", typeof(int));
                    //            dc.DefaultValue = "0";
                    //            dtlocs.Columns.Add(dc);
                    //            try
                    //            {
                    //                var rind = sgen.seekval_dt_rowindex(dtlocs, "loc='" + dloc.Rows[0]["loc"].ToString().Trim() + "'");
                    //                dtlocs.Rows[rind - 1]["ordd"] = rcnt;
                    //            }
                    //            catch (Exception err) { }
                    //            DataView dv = dtlocs.DefaultView;
                    //            dv.Sort = "ordd asc";
                    //            dtlocs = dv.ToTable();
                    //            foreach (DataRow dr in dtlocs.Rows)
                    //            {
                    //                if (qtyissue <= 0) break;
                    //                DataRow dr2 = model[0].dt2.NewRow();
                    //                dr2["sno"] = unitid_mst + dr3["icode"].ToString().Trim() + dr["LOC"].ToString().Trim();
                    //                dr2["Icode"] = dr3["icode"].ToString().Trim();
                    //                dr2["INAME"] = dr3["INAME"].ToString().Trim();
                    //                dr2["PARTNO"] = dr3["PARTNO"].ToString().Trim();
                    //                dr2["UOM"] = dr3["UOM"].ToString().Trim();
                    //                dr2["Qty_In_Stock"] = dr["closing"].ToString().Trim();
                    //                decimal lclos = sgen.Make_decimal(dr["closing"].ToString().Trim());
                    //                if (qtyissue > lclos)
                    //                {
                    //                    dr2["Qty_Issue"] = lclos;
                    //                    qtyissue = qtyissue - lclos;
                    //                }
                    //                else
                    //                {
                    //                    dr2["Qty_Issue"] = qtyissue;
                    //                    qtyissue = 0;
                    //                }
                    //                dr2["Remark"] = "-";
                    //                dr2["LocCode"] = dr["loc"].ToString().Trim();
                    //                dr2["LOC"] = dr["loc_name"].ToString().Trim();
                    //                model[0].dt2.Rows.Add(dr2);
                    //            }
                    //            ViewBag.vnew = "disabled='disabled'";
                    //            ViewBag.vedit = "disabled='disabled'";
                    //            ViewBag.vsave = "";
                    //            ViewBag.vsavenew = "";
                    //        }
                    //    }
                    //    catch (Exception ex) { ViewBag.scripCall += "showmsgJS(1,'" + ex.Message.ToString().Replace('\'', ' ') + "', 0);"; }
                    //if (model[0].dt2.Rows.Count == 0) model[0].dt2 = ((DataTable)sgen.GetSession(MyGuid, "dtbase2"));
                    //if (model[0].dt1.Rows.Count == 0) model[0].dt1 = ((DataTable)sgen.GetSession(MyGuid, "dtbase1"));
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {
                    if (model[0].Col133 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for save data , please contact your admin', 2);";
                        return View(model);
                    }
                    string mmt = "";
                    if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-"))
                    {
                        ViewBag.scripCall += "showmsgJS(1,'Please Select item in grid-1', 2);";
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                        return View(model);
                    }
                    //if (model[0].Col12 == "32")
                    //{
                    //    if (model[0].dt2.Rows[0]["icode"].ToString().Trim().Equals("-"))
                    //    {
                    //        ViewBag.scripCall += "showmsgJS(1,'Please Select item in grid-2', 0);";
                    //        ViewBag.vnew = "disabled='disabled'";
                    //        ViewBag.vedit = "disabled='disabled'";
                    //        ViewBag.vsave = "";
                    //        ViewBag.vsavenew = "";
                    //        return View(model);
                    //    }
                    //}
                    //if (model[0].dt3.Rows[0]["icode"].ToString().Trim().Equals("-"))
                    //{
                    //    ViewBag.scripCall += "showmsgJS(1,'Please fill location in grid-3', 2);";
                    //    ViewBag.vnew = "disabled='disabled'";
                    //    ViewBag.vedit = "disabled='disabled'";
                    //    ViewBag.vsave = "";
                    //    ViewBag.vsavenew = "";
                    //    return View(model);
                    //}
                    foreach (DataRow dr in ds.Tables[0].Rows)
                    {
                        decimal QTY_REQ = 0, QTY_ISSUE = 0, QTY_ISSUE2 = 0;
                        string batchno = "";
                        string fstr = dr["sno"].ToString();
                        string icode = dr["icode"].ToString();
                        string INAME = dr["INAME"].ToString();
                        QTY_REQ = sgen.Make_decimal(dr["QTY_REQ"].ToString());
                        QTY_ISSUE = sgen.Make_decimal(dr["QTY_ISSUE"].ToString());
                        batchno = dr["batchno"].ToString();
                        if (QTY_ISSUE > QTY_REQ)
                        {
                            ViewBag.scripCall += "showmsgJS(1, 'Item " + INAME + ", Required Qty is not matching with Issue Qty in Grid 1,Please Check', 2);";
                            ModelState.Clear();
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            return View(model);
                        }

                        var col = "";
                        if (model[0].Col12 == "30") col = " and batchno='" + batchno + "'";
                        var filtered = model[0].dt2.Select("icode='" + icode + "'" + col + "");
                        foreach (var row in filtered)
                        {
                            decimal issue2 = 0;
                            QTY_ISSUE2 += issue2 = sgen.Make_decimal(row["QTY_ISSUE"].ToString());
                        }
                        if (QTY_ISSUE != QTY_ISSUE2)
                        {
                            ViewBag.scripCall += "showmsgJS(1, 'Qty_Issue does not match with Location Grid of Item " + INAME + "', 2);";
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            return View(model);
                        }
                    }
                    mmt = model[0].SelectedItems4.FirstOrDefault();
                    DataTable dataTable = new DataTable();
                    DataTable dtpd = new DataTable();
                    Satransaction sat1 = new Satransaction(userCode, MyGuid);
                    try
                    {
                        string currdate = sgen.server_datetime(userCode);
                        if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                        {
                            isedit = true;
                            vch_num = model[0].Col18;
                        }
                        else
                        {
                            isedit = false;
                            mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                            vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                            model[0].Col18 = vch_num;
                        }
                        string vch_date = sgen.Savedate(model[0].Col20, false);
                        dataTable = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                        DataTable dTabc = cmd_Fun.GetStructure(userCode, "itransactionc");
                        dtpd = cmd_Fun.GetStructure(userCode, "iprod");
                        for (int i = 0; i < model[0].dt1.Rows.Count; i++)
                        {
                            #region wip in iprod
                            if (mmt.Trim() == "002")//WIP
                            {
                                DataRow dr = dtpd.NewRow();
                                dr["vch_num"] = vch_num;
                                dr["type"] = model[0].Col12;
                                dr["vch_date"] = vch_date;//issuedate                                                     
                                dr["icode"] = model[0].dt1.Rows[i]["Icode"].ToString();
                                dr["iname"] = model[0].dt1.Rows[i]["IName"].ToString();
                                dr["acode"] = model[0].SelectedItems1.FirstOrDefault();//dept                         
                                dr["stage"] = "001";//FROM stage                        
                                dr["qtyin"] = sgen.Make_decimal(model[0].dt1.Rows[i]["Qty_Issue"].ToString().Trim());//produce qty                                                  s                      
                                dr["pflag"] = "W";//consume pd   
                                dr["rec_id"] = "0";
                                // shiv
                                if (isedit)
                                {
                                    dr["client_id"] = model[0].Col1.Trim();
                                    dr["client_unit_id"] = model[0].Col2.Trim();
                                    dr["ent_by"] = model[0].Col3;
                                    dr["ent_date"] = model[0].Col4;
                                    dr["edit_by"] = userid_mst;
                                    dr["edit_date"] = currdate;
                                }
                                else
                                {
                                    dr["client_id"] = clientid_mst;
                                    dr["client_unit_id"] = unitid_mst;
                                    dr["ent_by"] = userid_mst;
                                    dr["ent_date"] = currdate;
                                    dr["edit_by"] = "-";
                                    dr["edit_date"] = currdate;
                                }
                                dtpd.Rows.Add(dr);
                            }
                            #endregion
                            #region
                            if (model[0].Col12 == "32")
                            {
                                #region consume in itransactionc
                                DataRow dr1 = dTabc.NewRow();
                                dr1["vch_num"] = vch_num;
                                dr1["type"] = model[0].Col12;
                                dr1["vch_date"] = vch_date;//issuedate
                                dr1["deptno"] = model[0].SelectedItems1.FirstOrDefault();
                                dr1["desig"] = model[0].SelectedItems2.FirstOrDefault();
                                //dr1["btchno"] = model[0].SelectedItems3.FirstOrDefault();
                                dr1["btchno"] = model[0].dt1.Rows[i]["batchno"].ToString();
                                dr1["totremark"] = model[0].Col21;
                                dr1["cond"] = model[0].Col22;//orderid
                                if (model[0].Col12 == "32")//with mrs
                                {
                                    dr1["chlno"] = model[0].Col23;//mrsno
                                    dr1["chldate"] = sgen.Savedate(model[0].Col24, false);//mrsdate
                                }
                                dr1["icode"] = model[0].dt1.Rows[i]["Icode"].ToString();
                                dr1["iname"] = model[0].dt1.Rows[i]["IName"].ToString();
                                dr1["cpartno"] = model[0].dt1.Rows[i]["partno"].ToString();
                                dr1["uom"] = model[0].dt1.Rows[i]["UOM"].ToString();
                                dr1["qtystk"] = model[0].dt1.Rows[i]["Qty_in_stock"].ToString();
                                dr1["qtychl"] = model[0].dt1.Rows[i]["Qty_req"].ToString();
                                dr1["qtyout"] = model[0].dt1.Rows[i]["QTY_ISSUE"].ToString().Trim();
                                dr1["qtybal"] = model[0].dt1.Rows[i]["qty_Req_bal"].ToString();
                                dr1["iremark"] = model[0].dt1.Rows[i]["Remark"].ToString();
                                dr1["pono"] = model[0].dt1.Rows[i]["Order_Id"].ToString();
                                dr1["pktno"] = model[0].dt1.Rows[i]["No_of_pkt"].ToString() == "" ? "0" : model[0].dt1.Rows[i]["No_of_pkt"].ToString();
                                dr1["irate"] = model[0].dt1.Rows[i]["rate"].ToString();
                                dr1["iamount"] = model[0].dt1.Rows[i]["amount"].ToString();
                                dr1["mmt"] = mmt.Trim();
                                dr1["store"] = "Y";
                                dr1["inspected"] = "C";
                                dr1["rec_id"] = "0";
                                // shiv
                                if (isedit)
                                {
                                    dr1["client_id"] = model[0].Col1.Trim();
                                    dr1["client_unit_id"] = model[0].Col2.Trim();
                                    dr1["ent_by"] = model[0].Col3;
                                    dr1["ent_date"] = model[0].Col4;
                                    dr1["edit_by"] = userid_mst;
                                    dr1["edit_date"] = currdate;
                                }
                                else
                                {
                                    dr1["client_id"] = clientid_mst;
                                    dr1["client_unit_id"] = unitid_mst;
                                    dr1["ent_by"] = userid_mst;
                                    dr1["ent_date"] = currdate;
                                    dr1["edit_by"] = "-";
                                    dr1["edit_date"] = currdate;
                                }
                                dTabc.Rows.Add(dr1);
                                #endregion
                            }
                            else
                            {
                                #region consume in itransaction
                                DataRow dr1 = dataTable.NewRow();
                                dr1["vch_num"] = vch_num;
                                dr1["type"] = model[0].Col12;
                                dr1["vch_date"] = vch_date;//issuedate
                                dr1["deptno"] = model[0].SelectedItems1.FirstOrDefault();
                                dr1["desig"] = model[0].SelectedItems2.FirstOrDefault();
                                //dr1["btchno"] = model[0].SelectedItems3.FirstOrDefault();
                                dr1["btchno"] = model[0].dt1.Rows[i]["batchno"].ToString();
                                dr1["totremark"] = model[0].Col21;
                                dr1["cond"] = model[0].Col22;//orderid
                                if (model[0].Col12 == "32")//with mrs
                                {
                                    dr1["chlno"] = model[0].Col23;//mrsno
                                    dr1["chldate"] = sgen.Savedate(model[0].Col24, false);//mrsdate
                                }
                                dr1["icode"] = model[0].dt1.Rows[i]["Icode"].ToString();
                                dr1["iname"] = model[0].dt1.Rows[i]["IName"].ToString();
                                dr1["cpartno"] = model[0].dt1.Rows[i]["partno"].ToString();
                                dr1["uom"] = model[0].dt1.Rows[i]["UOM"].ToString();
                                dr1["qtystk"] = model[0].dt1.Rows[i]["Qty_in_stock"].ToString();
                                dr1["qtychl"] = model[0].dt1.Rows[i]["Qty_req"].ToString();
                                dr1["qtyout"] = model[0].dt1.Rows[i]["QTY_ISSUE"].ToString().Trim();
                                dr1["qtybal"] = model[0].dt1.Rows[i]["qty_Req_bal"].ToString();
                                dr1["iremark"] = model[0].dt1.Rows[i]["Remark"].ToString();
                                dr1["pono"] = model[0].dt1.Rows[i]["Order_Id"].ToString();
                                dr1["pktno"] = model[0].dt1.Rows[i]["No_of_pkt"].ToString() == "" ? "0" : model[0].dt1.Rows[i]["No_of_pkt"].ToString();
                                dr1["irate"] = model[0].dt1.Rows[i]["rate"].ToString();
                                dr1["iamount"] = model[0].dt1.Rows[i]["amount"].ToString();
                                dr1["mmt"] = mmt.Trim();
                                dr1["store"] = "Y";
                                dr1["inspected"] = "C";
                                dr1["rec_id"] = "0";
                                // shiv
                                if (isedit)
                                {
                                    dr1["client_id"] = model[0].Col1.Trim();
                                    dr1["client_unit_id"] = model[0].Col2.Trim();
                                    dr1["ent_by"] = model[0].Col3;
                                    dr1["ent_date"] = model[0].Col4;
                                    dr1["edit_by"] = userid_mst;
                                    dr1["edit_date"] = currdate;
                                }
                                else
                                {
                                    dr1["client_id"] = clientid_mst;
                                    dr1["client_unit_id"] = unitid_mst;
                                    dr1["ent_by"] = userid_mst;
                                    dr1["ent_date"] = currdate;
                                    dr1["edit_by"] = "-";
                                    dr1["edit_date"] = currdate;
                                }
                                dataTable.Rows.Add(dr1);
                                #endregion
                            }
                            #endregion
                        }
                        if (dtpd.Rows.Count > 0)
                        {
                            res1 = sgen.Update_data_uncommit2(userCode, dtpd, "iprod", model[0].Col8, isedit, sat1);
                            if (!res1)
                            {
                                sat1.Rollback();
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                                ViewBag.scripCall += "showmsgJS(1, 'Wip data not saved', 0);";
                                ModelState.Clear();
                                return View(model);
                            }
                        }
                        if (model[0].Col12 == "32") { res = sgen.Update_data_uncommit2(userCode, dTabc, "itransactionc", model[0].Col8, isedit, sat1); }
                        else { res = sgen.Update_data_uncommit2(userCode, dataTable, model[0].Col10.Trim(), model[0].Col8, isedit, sat1); }
                        if (res == true)
                        {
                            dt = cmd_Fun.GetStructure(userCode, "btchtrans");
                            for (int i = 0; i < model[0].dt1.Rows.Count; i++)
                            {
                                #region issue btchtrans consume
                                DataRow dr1 = dt.NewRow();
                                dr1["vch_num"] = vch_num;
                                dr1["type"] = model[0].Col12;
                                dr1["vch_date"] = vch_date;
                                dr1["deptno"] = model[0].SelectedItems1.FirstOrDefault();
                                dr1["desig"] = model[0].SelectedItems2.FirstOrDefault();
                                dr1["totremark"] = model[0].Col21;
                                dr1["ordid"] = model[0].Col22;//orderid
                                if (model[0].Col12 == "32")//with mrs
                                {
                                    dr1["chlno"] = model[0].Col23;//mrsno
                                    dr1["chldate"] = sgen.Savedate(model[0].Col24, false);//mrsdate
                                }
                                dr1["icode"] = model[0].dt2.Rows[i]["icode"].ToString();
                                dr1["iname"] = model[0].dt2.Rows[i]["iname"].ToString();
                                dr1["cpartno"] = model[0].dt2.Rows[i]["partno"].ToString();
                                dr1["uom"] = model[0].dt2.Rows[i]["UOM"].ToString();
                                dr1["qtystk"] = model[0].dt2.Rows[i]["Qty_in_stock"].ToString();
                                dr1["qtyout"] = model[0].dt2.Rows[i]["QTY_ISSUE"].ToString().Trim();
                                dr1["iremark"] = model[0].dt2.Rows[i]["Remark"].ToString();
                                dr1["loc"] = model[0].dt2.Rows[i]["LocCode"].ToString();
                                dr1["locname"] = model[0].dt2.Rows[i]["Loc"].ToString();
                                dr1["btchno"] = model[0].dt2.Rows[i]["batchno"].ToString();
                                dr1["pktno"] = model[0].dt1.Rows[i]["No_of_pkt"].ToString() == "" ? "0" : model[0].dt1.Rows[i]["No_of_pkt"].ToString();//
                                dr1["mmt"] = mmt.Trim();
                                dr1["store"] = "Y";
                                dr1["pono"] = "C";//flag
                                dr1["rec_id"] = "0";
                                // shiv
                                if (isedit)
                                {
                                    dr1["client_id"] = model[0].Col1.Trim();
                                    dr1["client_unit_id"] = model[0].Col2.Trim();
                                    dr1["ent_by"] = model[0].Col3;
                                    dr1["ent_date"] = model[0].Col4;
                                    dr1["edit_by"] = userid_mst;
                                    dr1["edit_date"] = currdate;
                                }
                                else
                                {
                                    dr1["client_id"] = clientid_mst;
                                    dr1["client_unit_id"] = unitid_mst;
                                    dr1["ent_by"] = userid_mst;
                                    dr1["ent_date"] = currdate;
                                    dr1["edit_by"] = "-";
                                    dr1["edit_date"] = currdate;
                                }
                                dt.Rows.Add(dr1);
                                #endregion                             
                            }
                            ok = sgen.Update_data_uncommit2(userCode, dt, "btchtrans", model[0].Col8, isedit, sat1);
                            if (ok)
                            {
                                if (model[0].Col12 == "32")
                                {
                                    DataTable dtbtch = new DataTable();
                                    DataTable dtb = cmd_Fun.GetStructure(userCode, "itransaction");
                                    dtbtch = Btchgrp(dt);
                                    for (int i = 0; i < dtbtch.Rows.Count; i++)
                                    {
                                        DataRow dr = dtb.NewRow();
                                        dr["vch_num"] = dtbtch.Rows[i]["vch_num"].ToString();
                                        dr["type"] = dtbtch.Rows[i]["type"].ToString();
                                        dr["vch_date"] = dtbtch.Rows[i]["vch_date"].ToString();
                                        dr["deptno"] = dtbtch.Rows[i]["deptno"].ToString();
                                        dr["desig"] = dtbtch.Rows[i]["desig"].ToString();
                                        dr["totremark"] = dtbtch.Rows[i]["totremark"].ToString();
                                        dr["btchno"] = dtbtch.Rows[i]["btchno"].ToString();
                                        dr["cond"] = model[0].Col22;//orderid
                                        if (model[0].Col12 == "32")//with mrs
                                        {
                                            dr["chlno"] = model[0].Col23;//mrsno
                                            dr["chldate"] = sgen.Savedate(model[0].Col24, false);//mrsdate
                                        }

                                        dr["icode"] = dtbtch.Rows[i]["icode"].ToString();
                                        dr["iname"] = dtbtch.Rows[i]["iname"].ToString();
                                        dr["cpartno"] = dtbtch.Rows[i]["cpartno"].ToString();
                                        dr["uom"] = dtbtch.Rows[i]["uom"].ToString();
                                        dr["qtystk"] = dtbtch.Rows[i]["qtystk"].ToString();
                                        dr["qtychl"] = dtbtch.Rows[i]["qtychl"].ToString();
                                        dr["qtyin"] = dtbtch.Rows[i]["qtyin"].ToString();
                                        dr["qtyout"] = dtbtch.Rows[i]["qtyout"].ToString();
                                        dr["pktstk"] = dtbtch.Rows[i]["pktstk"].ToString();
                                        dr["pktno"] = dtbtch.Rows[i]["pktno"].ToString();
                                        dr["pono"] = model[0].Col22;
                                        dr["mmt"] = mmt.Trim();
                                        dr["store"] = "Y";
                                        dr["inspected"] = "C";//new
                                        dr["rec_id"] = "0";
                                        // shiv
                                        if (isedit)
                                        {
                                            dr["client_id"] = model[0].Col1.Trim();
                                            dr["client_unit_id"] = model[0].Col2.Trim();
                                            dr["ent_by"] = model[0].Col3;
                                            dr["ent_date"] = model[0].Col4;
                                            dr["edit_by"] = userid_mst;
                                            dr["edit_date"] = currdate;
                                        }
                                        else
                                        {
                                            dr["client_id"] = clientid_mst;
                                            dr["client_unit_id"] = unitid_mst;
                                            dr["ent_by"] = userid_mst;
                                            dr["ent_date"] = currdate;
                                            dr["edit_by"] = "-";
                                            dr["edit_date"] = currdate;
                                        }
                                        dtb.Rows.Add(dr);
                                    }
                                    ok = sgen.Update_data_uncommit2(userCode, dtb, "itransaction", "", false, sat1);
                                    if (!ok)
                                    {
                                        sat1.Rollback();
                                        ViewBag.vnew = "disabled='disabled'";
                                        ViewBag.vedit = "disabled='disabled'";
                                        ViewBag.vsave = "";
                                        ViewBag.vsavenew = "";
                                        ViewBag.scripCall += "showmsgJS(1, 'Data Not Saved', 0);";
                                        ModelState.Clear();
                                        return View(model);
                                    }
                                }
                            }
                            else
                            {
                                sat1.Rollback();
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                                ViewBag.scripCall += "showmsgJS(1, 'Data Not Saved', 0);";
                                ModelState.Clear();
                                return View(model);
                            }
                            sat1.Commit();
                            if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                            {
                                //sat1.Commit();
                                ViewBag.vnew = "";
                                ViewBag.vedit = "";
                                ViewBag.vsave = "disabled='disabled'";
                                ViewBag.vsavenew = "disabled='disabled'";
                                ViewBag.vfill = "disabled='disabled'";
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                            }
                            else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                            {
                                try
                                {
                                    ViewBag.vnew = "";
                                    ViewBag.vedit = "";
                                    ViewBag.vsave = "disabled='disabled'";
                                    ViewBag.vsavenew = "disabled='disabled'";
                                    ViewBag.vfill = "disabled='disabled'";
                                    Make_query("item_issued", "Select Item Issued Type", "NEW", "1", "", "");
                                    ViewBag.scripCall = "callFoo('Select Item Issued Type');";
                                    ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                                }
                                catch (Exception ex)
                                {
                                    ViewBag.scripCall += "mytoast('error', 'toast-top-right', '" + ex.Message.ToString().Trim() + "');";
                                }
                            }
                            model = new List<Tmodelmain>();
                            model.Add(new Tmodelmain
                            {
                                Col13 = "Save",
                                Col100 = "Save & New",
                                Col121 = "S",
                                Col122 = "<u>S</u>ave",
                                Col123 = "Save & Ne<u>w</u>",
                                Col10 = tm.Col10,
                                Col11 = tm.Col11,
                                Col14 = tm.Col14,
                                Col15 = tm.Col15,
                                TList1 = mod1,
                                SelectedItems1 = new string[] { "" },
                                TList2 = mod2,
                                SelectedItems2 = new string[] { "" },
                                TList3 = mod3,
                                SelectedItems3 = new string[] { "" },
                                TList4 = mod4,
                                SelectedItems4 = new string[] { "" },
                                dt1 = null,
                                dt2 = null
                            });
                            sgen.SetSession(MyGuid, "dtbase1", null);
                            sgen.SetSession(MyGuid, "dtbase2", null);
                            sgen.SetSession(MyGuid, "KISTYPE", null);
                            //ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else
                        {
                            sat1.Rollback();
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            ViewBag.scripCall += "showmsgJS(1, 'Data Not Saved', 0);";
                        }
                    }
                    catch (Exception ex) { ViewBag.scripCall = "showmsgJS(1,'" + ex.Message.ToString().Replace('\'', ' ') + "', 0);"; sat1.Rollback(); }
                }
                else if (command == "-")
                {
                    if (model[0].dt1.Rows.Count > 1) model[0].dt1.Rows.RemoveAt(sgen.Make_int(hfrow));
                    else { model[0].dt1 = (DataTable)sgen.GetSession(MyGuid, "dtbase1"); }
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
                else if (command == "2-")
                {
                    if (model[0].dt2.Rows.Count > 1) model[0].dt2.Rows.RemoveAt(sgen.Make_int(hfrow));
                    else { model[0].dt2 = (DataTable)sgen.GetSession(MyGuid, "dtbase2"); }
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
            }
            catch (Exception err)
            {
                //var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                var LineNumber = Multiton.GetError(err);
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        private static DataTable Btchgrp(DataTable BtchTable)
        {
            DataTable dtbtch;
            var t1 = BtchTable.AsEnumerable().GroupBy(k => new
            {
                client_id = k.Field<string>("client_id"),
                client_unit_id = k.Field<string>("client_unit_id"),
                ent_by = k.Field<string>("ent_by"),
                ent_date = k.Field<DateTime>("ent_date"),
                edit_by = k.Field<string>("edit_by"),
                edit_date = k.Field<DateTime>("edit_date"),
                vch_num = k.Field<string>("vch_num"),
                vch_date = k.Field<DateTime>("vch_date"),
                type = k.Field<string>("type"),
                mrnno = k.Field<string>("mrnno"),
                mrndate = k.Field<DateTime>("mrndate"),
                chlno = k.Field<string>("chlno"),
                chldate = k.Field<DateTime>("chldate"),
                invno = k.Field<string>("invno"),
                invdate = k.Field<DateTime>("invdate"),
                pono = k.Field<string>("pono"),
                podate = k.Field<DateTime>("podate"),
                acode = k.Field<string>("acode"),
                icode = k.Field<string>("icode"),
                iname = k.Field<string>("iname"),
                cpartno = k.Field<string>("cpartno"),
                uom = k.Field<string>("uom"),
                deptno = k.Field<string>("deptno"),
                desig = k.Field<string>("desig"),
                totremark = k.Field<string>("totremark"),
                btchno = k.Field<string>("btchno"),
            });
            sgenFun sgen = new sgenFun(MyGuid);
            var t2 = t1.Select(c =>
            {
                var row = BtchTable.NewRow();
                row["client_id"] = c.Key.client_id;
                row["client_unit_id"] = c.Key.client_unit_id;
                row["ent_by"] = c.Key.ent_by;
                row["ent_date"] = c.Key.ent_date;
                row["edit_by"] = c.Key.edit_by;
                row["edit_date"] = c.Key.edit_date;
                row["vch_num"] = c.Key.vch_num;
                row["vch_date"] = c.Key.vch_date;
                row["type"] = c.Key.type;
                row["mrnno"] = c.Key.mrnno;
                row["mrndate"] = c.Key.mrndate;
                row["chlno"] = c.Key.chlno;
                row["chldate"] = c.Key.chldate;
                row["invno"] = c.Key.invno;
                row["chldate"] = c.Key.chldate;
                row["pono"] = c.Key.pono;
                row["podate"] = c.Key.podate;
                row["acode"] = c.Key.acode;
                row["icode"] = c.Key.icode;
                row["iname"] = c.Key.iname;
                row["cpartno"] = c.Key.cpartno;
                row["uom"] = c.Key.uom;
                row["deptno"] = c.Key.deptno;
                row["desig"] = c.Key.desig;
                row["totremark"] = c.Key.totremark;
                row["btchno"] = c.Key.btchno;
                row["qtystk"] = c.Sum(k => sgen.Make_decimal(k.Field<object>("qtystk")));
                row["qtyin"] = c.Sum(k => sgen.Make_decimal(k.Field<object>("qtyin")));
                row["qtyout"] = c.Sum(k => sgen.Make_decimal(k.Field<object>("qtyout")));
                //row["qtyrcvd"] = c.Sum(k => sgen.Make_decimal(k.Field<object>("qtyrcvd")));
                //row["qtybal"] = c.Sum(k => sgen.Make_decimal(k.Field<object>("qtybal")));
                row["pktstk"] = c.Sum(k => sgen.Make_decimal(k.Field<object>("pktstk")));
                row["pktno"] = c.Sum(k => sgen.Make_decimal(k.Field<object>("pktno")));
                return row;
            });
            dtbtch = t2.CopyToDataTable();
            return dtbtch;
        }

        #endregion
        #region Mat_Req
        public ActionResult mat_req()
        {
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            FillMst(MyGuid);
            // shiv
            chkRef();
            ViewBag.vnew = "";
            ViewBag.vedit = "";
            ViewBag.vsave = "disabled='disabled'";
            ViewBag.vsavenew = "disabled='disabled'";
            ViewBag.scripCall = "disableForm();";
            List<Tmodelmain> model = new List<Tmodelmain>();
            Tmodelmain tm1 = new Tmodelmain();
            List<SelectListItem> mod1 = new List<SelectListItem>();
            List<SelectListItem> mod2 = new List<SelectListItem>();
            mid_mst = EncryptDecrypt.Decrypt(Request.QueryString["mid"]);
            tm1.Col10 = "itransactionc";
            tm1.Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            tm1.Col13 = "Save";
            tm1.Col100 = "Save & New";
            tm1.Col121 = "S";
            tm1.Col122 = "<u>S</u>ave";
            tm1.Col123 = "Save & Ne<u>w</u>";
            tm1.Col14 = mid_mst.Trim();
            tm1.Col15 = MyGuid.Trim();

            tm1.SelectedItems1 = new string[] { "" };

            tm1.SelectedItems2 = new string[] { "" };
            TempData[MyGuid + "_TList1"] = tm1.TList1 = mod1;
            TempData[MyGuid + "_TList2"] = tm1.TList2 = mod2;
            // shiv
            DataTable dt = sgen.getdata(userCode, "select '0' as SNo,'-' as Icode,'-' as IName,'-' PartNo,'-'  HSN,'-' as UOM,'0' as Qty_in_stock,'0' as Qty_Req,'-' as Remark from dual");
            tm1.dt1 = dt;
            sgen.SetSession(MyGuid, "rqdtbase", dt);
            sgen.SetSession(MyGuid, "KRQTYPE", null);
            model.Add(tm1);
            return View(model);
        }
        [HttpPost]
        public ActionResult mat_req(List<Tmodelmain> model, string command, string hfrow, string hftable)
        {
            try
            {
                FillMst(model[0].Col15);
                DataTable dtm = sgen.settable(hftable);
                model[0].dt1 = dtm;
                var tm = model.FirstOrDefault();
                List<SelectListItem> mod1 = new List<SelectListItem>();
                List<SelectListItem> mod2 = new List<SelectListItem>();
                TempData[MyGuid + "_TList1"] = model[0].TList1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                TempData[MyGuid + "_TList2"] = model[0].TList2 = (List<SelectListItem>)TempData[MyGuid + "_TList2"];
                //TempData[MyGuid + "_TList1"] = model[0].TList1;
                //TempData[MyGuid + "_TList2"] = model[0].TList2;
                if (tm.SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                if (tm.SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
                DataTable dt = new DataTable();
                if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    //model = StartCallback(model);              
                    if (sgen.GetSession(MyGuid, "btnval") != null) btnval = sgen.GetSession(MyGuid, "btnval").ToString();
                    model = CallbackFun(btnval, "N", actionName, controllerName, model);
                    if (btnval.Trim().ToUpper().Equals("PRINT"))
                    {
                        ViewBag.vnew = "";
                        ViewBag.vedit = "";
                        ViewBag.vsave = "disabled='disabled";
                        ViewBag.vsavenew = "disabled='disabled";
                        //ViewBag.scripCall = "disableForm();";
                    }
                    else
                    {
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                    }
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {
                    try
                    {
                        if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-"))
                        {
                            ViewBag.scripCall += "showmsgJS(1,'Please Select item in grid', 2);";
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            return View(model);
                        }

                        var tmodel = model.FirstOrDefault();
                        string currdate = sgen.server_datetime(userCode);
                        if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                        {
                            isedit = true;
                            vch_num = model[0].Col18;
                        }
                        else
                        {
                            isedit = false;
                            mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                            vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                            model[0].Col18 = vch_num;
                        }
                        DataTable dataTable = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                        for (int i = 0; i < model[0].dt1.Rows.Count; i++)
                        {
                            DataRow dr = dataTable.NewRow();
                            dr["vch_num"] = vch_num;
                            dr["type"] = model[0].Col12;
                            dr["vch_date"] = sgen.Savedate(model[0].Col20, false);
                            dr["deptno"] = model[0].SelectedItems1.FirstOrDefault();
                            dr["deptname"] = model[0].TList1.SingleOrDefault(w => w.Value == model[0].SelectedItems1.FirstOrDefault()).Text;
                            dr["desig"] = model[0].SelectedItems2.FirstOrDefault();
                            dr["totremark"] = model[0].Col21;
                            dr["pono"] = model[0].Col22;//orderid
                            dr["req_by"] = model[0].Col23;//Req by
                            dr["icode"] = model[0].dt1.Rows[i]["Icode"].ToString();
                            dr["iname"] = model[0].dt1.Rows[i]["IName"].ToString();
                            dr["cpartno"] = model[0].dt1.Rows[i]["partno"].ToString();
                            dr["hsno"] = model[0].dt1.Rows[i]["HSN"].ToString();
                            dr["uom"] = model[0].dt1.Rows[i]["UOM"].ToString();
                            dr["qtystk"] = model[0].dt1.Rows[i]["Qty_in_stock"].ToString();
                            dr["qtychl"] = model[0].dt1.Rows[i]["Qty_Req"].ToString();
                            dr["iremark"] = model[0].dt1.Rows[i]["Remark"].ToString();
                            dr["rec_id"] = "0";
                            // shiv
                            if (isedit)
                            {
                                dr["client_id"] = model[0].Col1.Trim();
                                dr["client_unit_id"] = model[0].Col2.Trim();
                                dr["ent_by"] = model[0].Col3;
                                dr["ent_date"] = model[0].Col4;
                                dr["edit_by"] = userid_mst;
                                dr["edit_date"] = currdate;
                            }
                            else
                            {
                                dr["client_id"] = clientid_mst;
                                dr["client_unit_id"] = unitid_mst;
                                dr["ent_by"] = userid_mst;
                                dr["ent_date"] = currdate;
                                dr["edit_by"] = "-";
                                dr["edit_date"] = currdate;
                            }
                            dataTable.Rows.Add(dr);
                        }
                        bool Result = sgen.Update_data(userCode, dataTable, model[0].Col10.Trim(), tmodel.Col8, isedit);
                        ViewBag.vnew = "";
                        ViewBag.vedit = "";
                        ViewBag.vsave = "disabled='disabled'";
                        ViewBag.vsavenew = "disabled='disabled'";
                        if (Result == true)
                        {
                            dt = (DataTable)sgen.GetSession(MyGuid, "rqdtbase");
                            model = new List<Tmodelmain>();
                            model.Add(new Tmodelmain
                            {
                                Col13 = "Save",
                                Col100 = "Save & New",
                                Col121 = "S",
                                Col122 = "<u>S</u>ave",
                                Col123 = "Save & Ne<u>w</u>",
                                Col9 = tmodel.Col9,
                                Col10 = tmodel.Col10,
                                Col11 = tmodel.Col11,
                                Col12 = tmodel.Col12,
                                Col14 = tmodel.Col14,
                                Col15 = tmodel.Col15,
                                TList1 = mod1,
                                SelectedItems1 = new string[] { "" },
                                TList2 = mod2,
                                SelectedItems2 = new string[] { "" },
                                dt1 = dt
                            });
                            if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                            {
                                ViewBag.vnew = "";
                                ViewBag.vedit = "";
                                ViewBag.vsave = "disabled='disabled'";
                                ViewBag.vsavenew = "disabled='disabled'";
                                ViewBag.vsavenew = "disabled='disabled'";
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                            }
                            else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                            {
                                try
                                {
                                    Make_query("mat_req", "Select Requisition Type", "NEW", "1", "", "", MyGuid);
                                    ViewBag.scripCall = "callFoo('Select Requisition Type');";
                                    ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                                }
                                catch (Exception ex) { }
                            }
                        }
                    }
                    catch (Exception ex) { ViewBag.scripCall = "showmsgJS(1,'" + ex.Message.ToString().Replace('\'', ' ') + "', 0);"; }
                }
                else if (command == "-")
                {
                    if (model[0].dt1.Rows.Count > 1) model[0].dt1.Rows.RemoveAt(sgen.Make_int(hfrow));
                    else { model[0].dt1 = (DataTable)sgen.GetSession(MyGuid, "rqdtbase"); }
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
            }
            catch (Exception err)
            {
                //var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                var LineNumber = Multiton.GetError(err);
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion 
        //=========================================     
        #region rgp_challan
        public ActionResult rgp_challan()
        {
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            FillMst(MyGuid);
            chkRef();
            ViewBag.vnew = "";
            ViewBag.vedit = "";
            ViewBag.vsave = "disabled='disabled'";
            ViewBag.vsavenew = "disabled='disabled'";
            ViewBag.scripCall = "disableForm();";
            List<Tmodelmain> model = new List<Tmodelmain>();
            Tmodelmain tm1 = new Tmodelmain();
            DataTable dt = new DataTable();
            mid_mst = EncryptDecrypt.Decrypt(Request.QueryString["mid"]);
            tm1.Col10 = "itransaction";//for out
            tm1.Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            tm1.Col13 = "Save";
            tm1.Col121 = "S";
            tm1.Col122 = "<u>S</u>ave";
            tm1.Col123 = "Save & Ne<u>w</u>";
            tm1.Col14 = mid_mst.Trim();
            tm1.Col15 = MyGuid.Trim();
            tm1.Col16 = "btchtrans";//for out
            sgen.SetSession(MyGuid, "KRGP_DT1", null);
            sgen.SetSession(MyGuid, "KRGP_DT2", null);
            sgen.SetSession(MyGuid, "KRGP_DT3", null);
            sgen.SetSession(MyGuid, "KRGPTYPE", null);
            model.Add(tm1);
            return View(model);
        }
        [HttpPost]
        public ActionResult rgp_challan(List<Tmodelmain> model, string command, string hfrow, string hftable)
        {
            try
            {
                FillMst(model[0].Col15);
                DataSet ds = sgen.setDS(hftable);
                if (ds.Tables.Count > 1)
                {
                    model[0].dt1 = ds.Tables[0];
                    model[0].dt2 = ds.Tables[1];
                    model[0].dt3 = ds.Tables[2];
                    if (model[0].dt1.Rows.Count == 0) model[0].dt1 = ((DataTable)sgen.GetSession(MyGuid, "KRGP_DT1"));
                    if (model[0].dt2.Rows.Count == 0) model[0].dt2 = ((DataTable)sgen.GetSession(MyGuid, "KRGP_DT2"));
                    if (model[0].dt3.Rows.Count == 0) model[0].dt3 = ((DataTable)sgen.GetSession(MyGuid, "KRGP_DT3"));
                }
                var tm = model.FirstOrDefault();
                if (command == "Cancel") { return CancelFun(model); }
                else if (command == "Callback") { model = StartCallback(model); }
                else if (command == "Fill Location")
                {
                    string currdate = sgen.server_datetime_local(userCode);
                    if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-"))
                    {
                        ViewBag.scripCall += "showmsgJS(1,'Please Select item in grid-1', 0);";
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                        return View(model);
                    }
                    try
                    {
                        if (model[0].dt2 != null && model[0].dt2.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt2.Rows.RemoveAt(0); }
                    }
                    catch (Exception err) { }
                    var dttt = model[0].dt2.Clone();
                    model[0].dt2 = dttt;
                    foreach (DataRow dr1 in model[0].dt1.Rows)
                    {
                        try
                        {
                            if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-"))
                            {
                                ViewBag.scripCall += "showmsgJS(1,'Please Select item in grid-1', 2);";
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                                return View(model);
                            }
                            try
                            {
                                if (model[0].dt2.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt2.Rows.RemoveAt(0); }
                            }
                            catch (Exception err) { }
                            var dt7 = model[0].dt2.Clone();
                            model[0].dt2 = dt7;
                            foreach (DataRow dr3 in model[0].dt1.Rows)
                            {
                                decimal qtyout = sgen.Make_decimal(dr3["qty_out"].ToString().Trim());
                                if (qtyout <= 0)
                                {
                                    ViewBag.vnew = "disabled='disabled'";
                                    ViewBag.vedit = "disabled='disabled'";
                                    ViewBag.vsave = "";
                                    ViewBag.vsavenew = "";
                                    ViewBag.scripCall += "showmsgJS(1,'Please FILL Out Qty in Item " + dr3["iname"].ToString() + "', 2);";
                                    model[0].dt2 = (DataTable)sgen.GetSession(MyGuid, "KRGP_DT2");
                                    break;
                                }
                                string icode = dr3["icode"].ToString().Trim();
                                DataTable dloc = sgen.getdata(userCode, "select itb.loc,location_name(itb.client_id||itb.client_unit_id||itb.loc) from itbal itb " +
        "where trim(itb.icode)='" + icode + "' and itb.type='IT' and itb.client_unit_id='" + unitid_mst + "'");
                                DataTable dtlocs = sgen.locclosing_all(userCode, unitid_mst + icode, FN_From_Date + "!~!~!~!~!" + model[0].Col27);
                                int rcnt = dtlocs.Rows.Count;
                                if (rcnt == 0)
                                {
                                    ViewBag.scripCall += "showmsgJS(1,'Item " + icode + " stock is zero' , 0);";
                                    return View(model);
                                }
                                DataColumn dc = new DataColumn("ordd", typeof(int));
                                dc.DefaultValue = "0";
                                dtlocs.Columns.Add(dc);
                                var rind = sgen.seekval_dt_rowindex(dtlocs, "loc='" + dloc.Rows[0]["loc"].ToString().Trim() + "'");
                                try
                                {
                                    dtlocs.Rows[rind - 1]["ordd"] = rcnt;
                                }
                                catch (Exception err) { }
                                DataView dv = dtlocs.DefaultView;
                                dv.Sort = "ordd asc";
                                dtlocs = dv.ToTable();
                                foreach (DataRow dr in dtlocs.Rows)
                                {
                                    if (qtyout <= 0) break;
                                    DataRow dr2 = model[0].dt2.NewRow();
                                    dr2["sno"] = unitid_mst + dr3["icode"].ToString().Trim() + dloc.Rows[0][0].ToString().Trim();
                                    dr2["Icode"] = dr3["icode"].ToString().Trim();
                                    dr2["INAME"] = dr3["INAME"].ToString().Trim();
                                    dr2["PARTNO"] = dr3["PARTNO"].ToString().Trim();
                                    dr2["UOM"] = dr3["UOM"].ToString().Trim();
                                    dr2["Qty_In_Stock"] = dr["closing"].ToString().Trim();
                                    decimal lclos = sgen.Make_decimal(dr["closing"].ToString().Trim());
                                    if (qtyout > lclos)
                                    {
                                        dr2["Qty_Out"] = lclos;
                                        qtyout = qtyout - lclos;
                                    }
                                    else
                                    {
                                        dr2["Qty_Out"] = qtyout;
                                        qtyout = 0;
                                    }
                                    dr2["Remark"] = "-";
                                    dr2["LocCode"] = dr["loc"].ToString().Trim();
                                    dr2["LOC"] = dr["loc_name"].ToString().Trim();
                                    model[0].dt2.Rows.Add(dr2);
                                }
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                            }
                        }
                        catch (Exception ex) { ViewBag.scripCall += "showmsgJS(1,'" + ex.Message.ToString().Replace('\'', ' ') + "', 0);"; }
                    }
                    if (model[0].dt2.Rows.Count == 0) model[0].dt2 = ((DataTable)sgen.GetSession(MyGuid, "KRGP_DT2"));
                    if (model[0].dt1.Rows.Count == 0) model[0].dt1 = ((DataTable)sgen.GetSession(MyGuid, "KRGP_DT1"));
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {
                    if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-"))
                    {
                        ViewBag.scripCall += "showmsgJS(1,'Please Select item in grid-1', 2);";
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                        return View(model);
                    }
                    if (model[0].dt2.Rows[0]["icode"].ToString().Trim().Equals("-"))
                    {
                        ViewBag.scripCall += "showmsgJS(1,'Please fill location in grid-2', 2);";
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                        return View(model);
                    }
                    if (model[0].dt3.Rows[0]["icode"].ToString().Trim().Equals("-"))
                    {
                        ViewBag.scripCall += "showmsgJS(1,'Please fill grid-3', 2);";
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                        return View(model);
                    }
                    foreach (DataRow dr in ds.Tables[0].Rows)
                    {
                        decimal QTY_REQ = 0, QTY_Out = 0, QTY_Out2 = 0;
                        string fstr = dr["sno"].ToString();
                        string icode = dr["icode"].ToString();
                        string INAME = dr["INAME"].ToString();
                        QTY_REQ = sgen.Make_decimal(dr["QTY_REQ"].ToString());
                        QTY_Out = sgen.Make_decimal(dr["QTY_Out"].ToString());
                        if (QTY_Out > QTY_REQ)
                        {
                            ViewBag.scripCall += "showmsgJS(1, 'Item " + INAME + ", Required Qty is not matching with Out Qty in Grid 1,Please Check', 2);";
                            ModelState.Clear();
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            return View(model);
                        }
                        var filtered = model[0].dt2.Select("icode='" + icode + "'");
                        foreach (var row in filtered)
                        {
                            decimal out2 = 0;
                            QTY_Out2 += out2 = sgen.Make_decimal(row["QTY_Out"].ToString());
                        }
                        if (QTY_Out != QTY_Out2)
                        {
                            ViewBag.scripCall += "showmsgJS(1, 'Qty_Out does not match with Location Grid of Item " + INAME + "', 2);";
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            return View(model);
                        }
                    }
                    DataTable dataTable = new DataTable();
                    Satransaction sat1 = new Satransaction(userCode, MyGuid);
                    try
                    {
                        string currdate = sgen.server_datetime(userCode);
                        if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                        {
                            isedit = true;
                            vch_num = model[0].Col18;
                        }
                        else
                        {
                            isedit = false;
                            mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                            vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                            model[0].Col18 = vch_num;
                        }
                        string ret_date = sgen.Savedate(model[0].Col22, false);
                        string doc_date = sgen.Savedate(model[0].Col27, false);
                        dataTable = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                        for (int i = 0; i < model[0].dt1.Rows.Count; i++)
                        {
                            DataRow dr = dataTable.NewRow();
                            dr["vch_num"] = vch_num;
                            dr["type"] = model[0].Col12;
                            dr["vch_date"] = doc_date;
                            dr["acode"] = model[0].Col49;//party code
                            dr["date2"] = ret_date;//return date
                            dr["aname"] = model[0].Col23;//sender name
                            dr["contactno"] = model[0].Col24;//sender cont.
                            dr["totremark"] = model[0].Col25;
                            dr["icode"] = model[0].dt1.Rows[i]["Icode"].ToString();
                            dr["iname"] = model[0].dt1.Rows[i]["IName"].ToString();
                            dr["cpartno"] = model[0].dt1.Rows[i]["partno"].ToString();
                            dr["uom"] = model[0].dt1.Rows[i]["UOM"].ToString();
                            dr["qtystk"] = model[0].dt1.Rows[i]["Qty_in_stock"].ToString();
                            dr["qtychl"] = model[0].dt1.Rows[i]["Qty_req"].ToString();
                            dr["qtyout"] = model[0].dt1.Rows[i]["QTY_Out"].ToString().Trim();
                            dr["qtybal"] = model[0].dt1.Rows[i]["qty_Req_bal"].ToString();
                            dr["iremark"] = model[0].dt1.Rows[i]["Remark"].ToString();
                            dr["pono"] = model[0].dt1.Rows[i]["Order_Id"].ToString();
                            dr["store"] = "Y";
                            dr["rec_id"] = "0";
                            // shiv
                            if (isedit)
                            {
                                dr["client_id"] = model[0].Col1.Trim();
                                dr["client_unit_id"] = model[0].Col2.Trim();
                                dr["ent_by"] = model[0].Col3;
                                dr["ent_date"] = model[0].Col4;
                                dr["edit_by"] = userid_mst;
                                dr["edit_date"] = currdate;
                            }
                            else
                            {
                                dr["client_id"] = clientid_mst;
                                dr["client_unit_id"] = unitid_mst;
                                dr["ent_by"] = userid_mst;
                                dr["ent_date"] = currdate;
                                dr["edit_by"] = "-";
                                dr["edit_date"] = currdate;
                            }
                            dataTable.Rows.Add(dr);
                        }
                        res = sgen.Update_data_uncommit2(userCode, dataTable, model[0].Col10.Trim(), model[0].Col8, isedit, sat1);
                        if (res == true)
                        {
                            dataTable = new DataTable();
                            dataTable = cmd_Fun.GetStructure(userCode, "btchtrans");
                            for (int i = 0; i < model[0].dt2.Rows.Count; i++)
                            {
                                DataRow dr = dataTable.NewRow();
                                dr["vch_num"] = vch_num;
                                dr["type"] = model[0].Col12;
                                dr["vch_date"] = doc_date;
                                dr["acode"] = model[0].Col49;//party code
                                dr["chldate"] = ret_date;//return date
                                dr["chlno"] = model[0].Col23;//sender name
                                dr["invno"] = model[0].Col24;//sender cont.
                                dr["totremark"] = model[0].Col25;
                                dr["icode"] = model[0].dt2.Rows[i]["icode"].ToString();
                                dr["iname"] = model[0].dt2.Rows[i]["iname"].ToString();
                                dr["cpartno"] = model[0].dt2.Rows[i]["partno"].ToString();
                                dr["uom"] = model[0].dt2.Rows[i]["UOM"].ToString();
                                dr["qtystk"] = model[0].dt2.Rows[i]["Qty_in_stock"].ToString();
                                dr["qtyout"] = model[0].dt2.Rows[i]["Qty_Out"].ToString().Trim();
                                dr["iremark"] = model[0].dt2.Rows[i]["Remark"].ToString();
                                dr["loc"] = model[0].dt2.Rows[i]["LocCode"].ToString();
                                dr["locname"] = model[0].dt2.Rows[i]["Loc"].ToString();
                                dr["store"] = "Y";
                                dr["rec_id"] = "0";
                                // shiv
                                if (isedit)
                                {
                                    dr["client_id"] = model[0].Col1.Trim();
                                    dr["client_unit_id"] = model[0].Col2.Trim();
                                    dr["ent_by"] = model[0].Col3;
                                    dr["ent_date"] = model[0].Col4;
                                    dr["edit_by"] = userid_mst;
                                    dr["edit_date"] = currdate;
                                }
                                else
                                {
                                    dr["client_id"] = clientid_mst;
                                    dr["client_unit_id"] = unitid_mst;
                                    dr["ent_by"] = userid_mst;
                                    dr["ent_date"] = currdate;
                                    dr["edit_by"] = "-";
                                    dr["edit_date"] = currdate;
                                }
                                dataTable.Rows.Add(dr);
                            }
                            ok = sgen.Update_data_uncommit2(userCode, dataTable, model[0].Col16, model[0].Col17, isedit, sat1);
                            if (ok)
                            {
                                dataTable = new DataTable();
                                dataTable = cmd_Fun.GetStructure(userCode, "itransactionc");
                                for (int i = 0; i < model[0].dt3.Rows.Count; i++)
                                {
                                    DataRow dr = dataTable.NewRow();
                                    dr["vch_num"] = vch_num;
                                    dr["type"] = model[0].Col12;
                                    dr["vch_date"] = doc_date;
                                    dr["acode"] = model[0].Col49;//party code
                                    dr["date2"] = ret_date;//return date
                                    dr["aname"] = model[0].Col23;//sender name
                                    dr["contactno"] = model[0].Col24;//sender cont.
                                    dr["totremark"] = model[0].Col25;
                                    dr["icode"] = model[0].dt3.Rows[i]["Icode"].ToString();
                                    dr["iname"] = model[0].dt3.Rows[i]["IName"].ToString();
                                    dr["cpartno"] = model[0].dt3.Rows[i]["partno"].ToString();
                                    dr["uom"] = model[0].dt3.Rows[i]["UOM"].ToString();
                                    dr["qtystk"] = model[0].dt3.Rows[i]["Qty_in_stock"].ToString();
                                    dr["qtychl"] = model[0].dt3.Rows[i]["Qty_req"].ToString();
                                    dr["qtyin"] = model[0].dt3.Rows[i]["QTY_In"].ToString().Trim();
                                    dr["qtybal"] = model[0].dt3.Rows[i]["qty_Req_bal"].ToString();
                                    dr["iremark"] = model[0].dt3.Rows[i]["Remark"].ToString();
                                    dr["pono"] = model[0].dt3.Rows[i]["Order_Id"].ToString();
                                    dr["store"] = "Y";
                                    dr["rec_id"] = "0";
                                    // shiv
                                    if (isedit)
                                    {
                                        dr["client_id"] = model[0].Col1.Trim();
                                        dr["client_unit_id"] = model[0].Col2.Trim();
                                        dr["ent_by"] = model[0].Col3;
                                        dr["ent_date"] = model[0].Col4;
                                        dr["edit_by"] = userid_mst;
                                        dr["edit_date"] = currdate;
                                    }
                                    else
                                    {
                                        dr["client_id"] = clientid_mst;
                                        dr["client_unit_id"] = unitid_mst;
                                        dr["ent_by"] = userid_mst;
                                        dr["ent_date"] = currdate;
                                        dr["edit_by"] = "-";
                                        dr["edit_date"] = currdate;
                                    }
                                    dataTable.Rows.Add(dr);
                                }
                                bool ok1 = sgen.Update_data_uncommit2(userCode, dataTable, "itransactionc", model[0].Col8, isedit, sat1);
                                if (ok1 != true)
                                {
                                    sat1.Rollback();
                                    ViewBag.vnew = "disabled='disabled'";
                                    ViewBag.vedit = "disabled='disabled'";
                                    ViewBag.vsave = "";
                                    ViewBag.vsavenew = "";
                                    ViewBag.scripCall += "showmsgJS(1, 'Data Not Saved', 0);";
                                    ModelState.Clear();
                                    return View(model);
                                }
                                sat1.Commit();
                                model = new List<Tmodelmain>();
                                model.Add(new Tmodelmain
                                {
                                    Col13 = "Save",
                                    Col100 = "Save & New",
                                    Col121 = "S",
                                    Col122 = "<u>S</u>ave",
                                    Col123 = "Save & Ne<u>w</u>",
                                    Col10 = tm.Col10,
                                    Col11 = tm.Col11,
                                    Col14 = tm.Col14,
                                    Col15 = tm.Col15,
                                    Col16 = tm.Col16,
                                    dt1 = null,
                                    dt2 = null,
                                    dt3 = null
                                });
                                sgen.SetSession(MyGuid, "KRGP_DT1", null);
                                sgen.SetSession(MyGuid, "KRGP_DT2", null);
                                sgen.SetSession(MyGuid, "KRGP_DT3", null);
                                sgen.SetSession(MyGuid, "KRGTYPE", null);
                                if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                                {
                                    ViewBag.vnew = "";
                                    ViewBag.vedit = "";
                                    ViewBag.vsave = "disabled='disabled'";
                                    ViewBag.vsavenew = "disabled='disabled'";
                                    ViewBag.vfill = "disabled='disabled'";
                                    ViewBag.scripCall = "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                                }
                                else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                                {
                                    try
                                    {
                                        Make_query("rgp_challan", "Select Item Rgp Type", "NEW", "1", "", "");
                                        ViewBag.scripCall = "callFoo('Select Item Rgp Type');";
                                        ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                                    }
                                    catch (Exception ex) { }
                                }
                            }
                            else
                            {
                                sat1.Rollback();
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                                ViewBag.scripCall += "showmsgJS(1, 'Data Not Saved', 0);";
                                ModelState.Clear();
                                return View(model);
                            }
                        }
                        else
                        {
                            sat1.Rollback();
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            ViewBag.scripCall += "showmsgJS(1, 'Data Not Saved', 0);";
                        }
                    }
                    catch (Exception ex) { ViewBag.scripCall = "showmsgJS(1,'" + ex.Message.ToString().Replace('\'', ' ') + "', 0);"; sat1.Rollback(); }
                }
                else if (command == "-")
                {
                    if (model[0].dt1.Rows.Count > 1) model[0].dt1.Rows.RemoveAt(sgen.Make_int(hfrow));
                    else { model[0].dt1 = (DataTable)sgen.GetSession(MyGuid, "KRGP_DT1"); }
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
                else if (command == "2-")
                {
                    if (model[0].dt2.Rows.Count > 1) model[0].dt2.Rows.RemoveAt(sgen.Make_int(hfrow));
                    else { model[0].dt2 = (DataTable)sgen.GetSession(MyGuid, "KRGP_DT2"); }
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
                else if (command == "3-")
                {
                    if (model[0].dt3.Rows.Count > 1) model[0].dt3.Rows.RemoveAt(sgen.Make_int(hfrow));
                    else { model[0].dt3 = (DataTable)sgen.GetSession(MyGuid, "KRGP_DT3"); }
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region nrgp_challan
        public ActionResult nrgp_challan()
        {
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            FillMst(MyGuid);
            // shiv
            chkRef();
            ViewBag.vnew = "";
            ViewBag.vedit = "";
            ViewBag.vsave = "disabled='disabled'";
            ViewBag.vfill = "disabled='disabled'";
            ViewBag.vsavenew = "disabled='disabled'";
            ViewBag.scripCall = "disableForm();";
            List<Tmodelmain> model = new List<Tmodelmain>();
            Tmodelmain tm1 = new Tmodelmain();
            DataTable dt = new DataTable();
            mid_mst = EncryptDecrypt.Decrypt(Request.QueryString["mid"]);
            tm1.Col10 = "itransaction";//for out
            tm1.Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            tm1.Col13 = "Save";
            tm1.Col100 = "Save & New";
            tm1.Col121 = "S";
            tm1.Col122 = "<u>S</u>ave";
            tm1.Col123 = "Save & Ne<u>w</u>";
            tm1.Col14 = mid_mst.Trim();
            tm1.Col15 = MyGuid.Trim();
            tm1.Col16 = "btchtrans";//for out
            sgen.SetSession(MyGuid, "KNRGP_DT1", null);
            sgen.SetSession(MyGuid, "KNRGP_DT2", null);
            sgen.SetSession(MyGuid, "KNRGPTYPE", null);
            model.Add(tm1);
            return View(model);
        }
        [HttpPost]
        public ActionResult nrgp_challan(List<Tmodelmain> model, string command, string hfrow, string hftable)
        {
            try
            {
                FillMst(model[0].Col15);
                DataSet ds = sgen.setDS(hftable);
                ds = sgen.setDS(hftable);
                if (ds.Tables.Count > 1)
                {
                    model[0].dt1 = ds.Tables[0];
                    model[0].dt2 = ds.Tables[1];
                    if (model[0].dt1.Rows.Count == 0) model[0].dt1 = ((DataTable)sgen.GetSession(MyGuid, "KNRGP_DT1"));
                    if (model[0].dt2.Rows.Count == 0) model[0].dt2 = ((DataTable)sgen.GetSession(MyGuid, "KNRGP_DT2"));
                }
                var tm = model.FirstOrDefault();
                if (command == "Cancel") { return CancelFun(model); }
                else if (command == "Callback") { model = StartCallback(model); }
                else if (command == "Fill Location")
                {
                    if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-"))
                    {
                        ViewBag.scripCall += "showmsgJS(1,'Please Select item in grid-1', 0);";
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                        return View(model);
                    }
                    try
                    {
                        if (model[0].dt2 != null && model[0].dt2.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt2.Rows.RemoveAt(0); }
                    }
                    catch (Exception err) { }
                    var dttt = model[0].dt2.Clone();
                    model[0].dt2 = dttt;
                    foreach (DataRow dr1 in model[0].dt1.Rows)
                    {
                        try
                        {
                            if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-"))
                            {
                                ViewBag.scripCall += "showmsgJS(1,'Please Select item in grid-1', 2);";
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                                return View(model);
                            }
                            try
                            {
                                if (model[0].dt2.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt2.Rows.RemoveAt(0); }
                            }
                            catch (Exception err) { }
                            var dt7 = model[0].dt2.Clone();
                            model[0].dt2 = dt7;
                            foreach (DataRow dr3 in model[0].dt1.Rows)
                            {
                                decimal qtyout = sgen.Make_decimal(dr3["qty_out"].ToString().Trim());
                                if (qtyout <= 0)
                                {
                                    ViewBag.vnew = "disabled='disabled'";
                                    ViewBag.vedit = "disabled='disabled'";
                                    ViewBag.vsave = "";
                                    ViewBag.vsavenew = "";
                                    ViewBag.scripCall += "showmsgJS(1,'Please FILL Out Qty in Item " + dr3["iname"].ToString() + "', 2);";
                                    model[0].dt2 = (DataTable)sgen.GetSession(MyGuid, "KNRGP_DT2");
                                    break;
                                }
                                string icode = dr3["icode"].ToString().Trim();
                                DataTable dloc = sgen.getdata(userCode, "select itb.loc,location_name(itb.client_id||itb.client_unit_id||itb.loc) from itbal itb " +
        "where trim(itb.icode)='" + icode + "' and itb.type='IT' and itb.client_unit_id='" + unitid_mst + "'");
                                DataTable dtlocs = sgen.locclosing_all(userCode, unitid_mst + icode, FN_From_Date + "!~!~!~!~!" + model[0].Col27);
                                int rcnt = dtlocs.Rows.Count;
                                if (rcnt == 0)
                                {
                                    ViewBag.scripCall += "showmsgJS(1,'Item " + icode + " stock is zero' , 0);";
                                    return View(model);
                                }
                                DataColumn dc = new DataColumn("ordd", typeof(int));
                                dc.DefaultValue = "0";
                                dtlocs.Columns.Add(dc);
                                var rind = sgen.seekval_dt_rowindex(dtlocs, "loc='" + dloc.Rows[0]["loc"].ToString().Trim() + "'");
                                try
                                {
                                    dtlocs.Rows[rind - 1]["ordd"] = rcnt;
                                }
                                catch (Exception err) { }
                                DataView dv = dtlocs.DefaultView;
                                dv.Sort = "ordd asc";
                                dtlocs = dv.ToTable();
                                foreach (DataRow dr in dtlocs.Rows)
                                {
                                    if (qtyout <= 0) break;
                                    DataRow dr2 = model[0].dt2.NewRow();
                                    dr2["sno"] = unitid_mst + dr3["icode"].ToString().Trim() + dloc.Rows[0][0].ToString().Trim();
                                    dr2["Icode"] = dr3["icode"].ToString().Trim();
                                    dr2["INAME"] = dr3["INAME"].ToString().Trim();
                                    dr2["PARTNO"] = dr3["PARTNO"].ToString().Trim();
                                    dr2["UOM"] = dr3["UOM"].ToString().Trim();
                                    dr2["Qty_In_Stock"] = dr["closing"].ToString().Trim();
                                    decimal lclos = sgen.Make_decimal(dr["closing"].ToString().Trim());
                                    if (qtyout > lclos)
                                    {
                                        dr2["Qty_Out"] = lclos;
                                        qtyout = qtyout - lclos;
                                    }
                                    else
                                    {
                                        dr2["Qty_Out"] = qtyout;
                                        qtyout = 0;
                                    }
                                    dr2["Remark"] = "-";
                                    dr2["LocCode"] = dr["loc"].ToString().Trim();
                                    dr2["LOC"] = dr["loc_name"].ToString().Trim();
                                    model[0].dt2.Rows.Add(dr2);
                                }
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                            }
                        }
                        catch (Exception ex) { ViewBag.scripCall += "showmsgJS(1,'" + ex.Message.ToString().Replace('\'', ' ') + "', 0);"; }
                    }
                    if (model[0].dt2.Rows.Count == 0) model[0].dt2 = ((DataTable)sgen.GetSession(MyGuid, "KNRGP_DT2"));
                    if (model[0].dt1.Rows.Count == 0) model[0].dt1 = ((DataTable)sgen.GetSession(MyGuid, "KNRGP_DT1"));
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {
                    if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-"))
                    {
                        ViewBag.scripCall += "showmsgJS(1,'Please Select item in grid-1', 2);";
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                        return View(model);
                    }
                    if (model[0].dt2.Rows[0]["icode"].ToString().Trim().Equals("-"))
                    {
                        ViewBag.scripCall += "showmsgJS(1,'Please fill location in grid-2', 2);";
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                        return View(model);
                    }
                    foreach (DataRow dr in ds.Tables[0].Rows)
                    {
                        decimal QTY_REQ = 0, QTY_Out = 0, QTY_Out2 = 0;
                        string fstr = dr["sno"].ToString();
                        string icode = dr["icode"].ToString();
                        string INAME = dr["INAME"].ToString();
                        QTY_REQ = sgen.Make_decimal(dr["QTY_REQ"].ToString());
                        QTY_Out = sgen.Make_decimal(dr["QTY_Out"].ToString());
                        if (QTY_Out > QTY_REQ)
                        {
                            ViewBag.scripCall += "showmsgJS(1, 'Item " + INAME + ", Required Qty is not matching with Out Qty in Grid 1,Please Check', 2);";
                            ModelState.Clear();
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            return View(model);
                        }
                        var filtered = model[0].dt2.Select("icode='" + icode + "'");
                        foreach (var row in filtered)
                        {
                            decimal out2 = 0;
                            QTY_Out2 += out2 = sgen.Make_decimal(row["QTY_Out"].ToString());
                        }
                        if (QTY_Out != QTY_Out2)
                        {
                            ViewBag.scripCall += "showmsgJS(1, 'Qty_Out does not match with Location Grid of Item " + INAME + "', 2);";
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            return View(model);
                        }
                    }
                    DataTable dataTable = new DataTable();
                    Satransaction sat1 = new Satransaction(userCode, MyGuid);
                    try
                    {
                        string currdate = sgen.server_datetime(userCode);
                        if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                        {
                            isedit = true;
                            vch_num = model[0].Col18;
                        }
                        else
                        {
                            isedit = false;
                            mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                            vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                            model[0].Col18 = vch_num;
                        }
                        string ret_date = sgen.Savedate(model[0].Col22, false);
                        string doc_date = sgen.Savedate(model[0].Col27, false);
                        dataTable = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                        for (int i = 0; i < model[0].dt1.Rows.Count; i++)
                        {
                            DataRow dr = dataTable.NewRow();
                            dr["vch_num"] = vch_num;
                            dr["type"] = model[0].Col12;
                            dr["vch_date"] = doc_date;
                            dr["acode"] = model[0].Col49;//party code
                            dr["date2"] = ret_date;//return date
                            dr["aname"] = model[0].Col23;//sender name
                            dr["contactno"] = model[0].Col24;//sender cont.
                            dr["totremark"] = model[0].Col25;
                            dr["icode"] = model[0].dt1.Rows[i]["Icode"].ToString();
                            dr["iname"] = model[0].dt1.Rows[i]["IName"].ToString();
                            dr["cpartno"] = model[0].dt1.Rows[i]["partno"].ToString();
                            dr["uom"] = model[0].dt1.Rows[i]["UOM"].ToString();
                            dr["qtystk"] = model[0].dt1.Rows[i]["Qty_in_stock"].ToString();
                            dr["qtychl"] = model[0].dt1.Rows[i]["Qty_req"].ToString();
                            dr["qtyout"] = model[0].dt1.Rows[i]["QTY_Out"].ToString().Trim();
                            dr["qtybal"] = model[0].dt1.Rows[i]["qty_Req_bal"].ToString();
                            dr["iremark"] = model[0].dt1.Rows[i]["Remark"].ToString();
                            dr["pono"] = model[0].dt1.Rows[i]["Order_Id"].ToString();
                            dr["store"] = "Y";
                            dr["rec_id"] = "0";
                            // shiv
                            if (isedit)
                            {
                                dr["client_id"] = model[0].Col1.Trim();
                                dr["client_unit_id"] = model[0].Col2.Trim();
                                dr["ent_by"] = model[0].Col3;
                                dr["ent_date"] = model[0].Col4;
                                dr["edit_by"] = userid_mst;
                                dr["edit_date"] = currdate;
                            }
                            else
                            {
                                dr["client_id"] = clientid_mst;
                                dr["client_unit_id"] = unitid_mst;
                                dr["ent_by"] = userid_mst;
                                dr["ent_date"] = currdate;
                                dr["edit_by"] = "-";
                                dr["edit_date"] = currdate;
                            }
                            dataTable.Rows.Add(dr);
                        }
                        res = sgen.Update_data_uncommit2(userCode, dataTable, model[0].Col10.Trim(), model[0].Col8, isedit, sat1);
                        if (res == true)
                        {
                            dataTable = new DataTable();
                            dataTable = cmd_Fun.GetStructure(userCode, "btchtrans");
                            for (int i = 0; i < model[0].dt2.Rows.Count; i++)
                            {
                                DataRow dr = dataTable.NewRow();
                                dr["vch_num"] = vch_num;
                                dr["type"] = model[0].Col12;
                                dr["vch_date"] = doc_date;
                                dr["acode"] = model[0].Col49;//party code
                                dr["chldate"] = ret_date;//return date
                                dr["chlno"] = model[0].Col23;//sender name
                                dr["invno"] = model[0].Col24;//sender cont.
                                dr["totremark"] = model[0].Col25;
                                dr["icode"] = model[0].dt2.Rows[i]["icode"].ToString();
                                dr["iname"] = model[0].dt2.Rows[i]["iname"].ToString();
                                dr["cpartno"] = model[0].dt2.Rows[i]["partno"].ToString();
                                dr["uom"] = model[0].dt2.Rows[i]["UOM"].ToString();
                                dr["qtystk"] = model[0].dt2.Rows[i]["Qty_in_stock"].ToString();
                                dr["qtyout"] = model[0].dt2.Rows[i]["Qty_Out"].ToString().Trim();
                                dr["iremark"] = model[0].dt2.Rows[i]["Remark"].ToString();
                                dr["loc"] = model[0].dt2.Rows[i]["LocCode"].ToString();
                                dr["locname"] = model[0].dt2.Rows[i]["Loc"].ToString();
                                dr["store"] = "Y";
                                dr["rec_id"] = "0";
                                // shiv
                                if (isedit)
                                {
                                    dr["client_id"] = model[0].Col1.Trim();
                                    dr["client_unit_id"] = model[0].Col2.Trim();
                                    dr["ent_by"] = model[0].Col3;
                                    dr["ent_date"] = model[0].Col4;
                                    dr["edit_by"] = userid_mst;
                                    dr["edit_date"] = currdate;
                                }
                                else
                                {
                                    dr["client_id"] = clientid_mst;
                                    dr["client_unit_id"] = unitid_mst;
                                    dr["ent_by"] = userid_mst;
                                    dr["ent_date"] = currdate;
                                    dr["edit_by"] = "-";
                                    dr["edit_date"] = currdate;
                                }
                                dataTable.Rows.Add(dr);
                            }
                            ok = sgen.Update_data_uncommit2(userCode, dataTable, "btchtrans", model[0].Col17, isedit, sat1);
                            if (ok)
                            {
                                sat1.Commit();
                                model = new List<Tmodelmain>();
                                model.Add(new Tmodelmain
                                {
                                    Col13 = "Save",
                                    Col100 = "Save & New",
                                    Col121 = "S",
                                    Col122 = "<u>S</u>ave",
                                    Col123 = "Save & Ne<u>w</u>",
                                    Col10 = tm.Col10,
                                    Col11 = tm.Col11,
                                    Col14 = tm.Col14,
                                    Col15 = tm.Col15,
                                    dt1 = null,
                                    dt2 = null,
                                });
                                if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                                {
                                    ViewBag.vnew = "";
                                    ViewBag.vedit = "";
                                    ViewBag.vsave = "disabled='disabled'";
                                    ViewBag.vsavenew = "disabled='disabled'";
                                    ViewBag.vfill = "disabled='disabled'";
                                    ViewBag.scripCall = "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                                }
                                else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                                {
                                    try
                                    {
                                        Make_query("nrgp_challan", "Select Item NRgp Type", "NEW", "1", "", "");
                                        ViewBag.scripCall = "callFoo('Select Item NRGP Type');";
                                        ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                                    }
                                    catch (Exception ex) { }
                                }
                                sgen.SetSession(MyGuid, "KNRGP_DT1", null);
                                sgen.SetSession(MyGuid, "KNRGP_DT2", null);
                                sgen.SetSession(MyGuid, "KNRGTYPE", null);
                            }
                            else
                            {
                                sat1.Rollback();
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                                ViewBag.scripCall += "showmsgJS(1, 'Data Not Saved', 0);";
                                ModelState.Clear();
                                return View(model);
                            }
                        }
                        else
                        {
                            sat1.Rollback();
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            ViewBag.scripCall += "showmsgJS(1, 'Data Not Saved', 0);";
                        }
                    }
                    catch (Exception ex) { ViewBag.scripCall = "showmsgJS(1,'" + ex.Message.ToString().Replace('\'', ' ') + "', 0);"; sat1.Rollback(); }
                }
                else if (command == "-")
                {
                    if (model[0].dt1.Rows.Count > 1) model[0].dt1.Rows.RemoveAt(sgen.Make_int(hfrow));
                    else { model[0].dt1 = (DataTable)sgen.GetSession(MyGuid, "KNRGP_DT1"); }
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
                else if (command == "2-")
                {
                    if (model[0].dt2.Rows.Count > 1) model[0].dt2.Rows.RemoveAt(sgen.Make_int(hfrow));
                    else { model[0].dt2 = (DataTable)sgen.GetSession(MyGuid, "KNRGP_DT2"); }
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region store_return
        public ActionResult store_return()
        {
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            FillMst(MyGuid);
            // shiv
            chkRef();
            ViewBag.vnew = "";
            ViewBag.vedit = "";
            ViewBag.vsave = "disabled='disabled'";
            ViewBag.vsavenew = "disabled='disabled'";
            ViewBag.scripCall = "disableForm();";
            List<Tmodelmain> model = new List<Tmodelmain>();
            Tmodelmain tm1 = new Tmodelmain();
            List<SelectListItem> mod1 = new List<SelectListItem>();
            mid_mst = EncryptDecrypt.Decrypt(Request.QueryString["mid"]);
            tm1.Col10 = "itransaction";
            tm1.Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            tm1.Col13 = "Save";
            tm1.Col100 = "Save & New";
            tm1.Col121 = "S";
            tm1.Col122 = "<u>S</u>ave";
            tm1.Col123 = "Save & Ne<u>w</u>";
            tm1.Col14 = mid_mst.Trim();
            tm1.Col15 = MyGuid.Trim();
            tm1.TList1 = tm1.TList2 = tm1.TList3 = tm1.TList4 = mod1;
            tm1.SelectedItems1 = new string[] { "" };

            tm1.SelectedItems2 = new string[] { "" };

            tm1.SelectedItems3 = new string[] { "" };

            tm1.SelectedItems4 = new string[] { "" };
            tm1.Col55 = sgen.seekval(userCode, "select param1 from controls where id='000015' AND TYPE='LOC'", "param1");//locchk
            sgen.SetSession(MyGuid, "RELOCCHK", tm1.Col55);

            DataTable dt = sgen.getdata(userCode, "select '-' as  SNo ,'-' as Icode,'-' as IName,'-' PartNo,'-' as UOM,'0' as  Qty_in_stock,'0' as Qty_Ret_Req," +
                "'0' as Qty_Act_Ret,'0' Qty_Req_Bal,'-' as Remark,'-' No_of_pkt  from dual");
            tm1.dt1 = dt;
            sgen.SetSession(MyGuid, "DTRTN1", dt);

            dt = sgen.getdata(userCode, "select '-' as SNo ,'-' as Icode,'-' as IName,'-' PartNo,'-' as UOM,'0' as Qty_in_stock,'0' as Qty_Act,'-' as Remark," +
                "'0' LocCode,'-' Loc from dual");
            tm1.dt2 = dt;
            sgen.SetSession(MyGuid, "DTRTN2", dt);
            sgen.SetSession(MyGuid, "KSRTYPE", null);
            model.Add(tm1);
            return View(model);
        }
        [HttpPost]
        public ActionResult store_return(List<Tmodelmain> model, string command, string hfrow, string hftable)
        {
            try
            {
                FillMst(model[0].Col15);
                DataSet ds = sgen.setDS(hftable);
                model[0].dt1 = ds.Tables[0];
                model[0].dt2 = ds.Tables[1];
                var tm = model.FirstOrDefault();
                #region ddl
                List<SelectListItem> mod1 = new List<SelectListItem>();
                List<SelectListItem> mod2 = new List<SelectListItem>();
                List<SelectListItem> mod3 = new List<SelectListItem>();
                List<SelectListItem> mod4 = new List<SelectListItem>();
                TempData[MyGuid + "_TList1"] = model[0].TList1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                TempData[MyGuid + "_TList2"] = model[0].TList2 = (List<SelectListItem>)TempData[MyGuid + "_TList2"];
                TempData[MyGuid + "_TList3"] = model[0].TList3 = (List<SelectListItem>)TempData[MyGuid + "_TList3"];
                TempData[MyGuid + "_TList4"] = model[0].TList4 = (List<SelectListItem>)TempData[MyGuid + "_TList4"];
                //TempData[MyGuid + "_TList1"] = model[0].TList1;
                //TempData[MyGuid + "_TList2"] = model[0].TList2;
                //TempData[MyGuid + "_TList3"] = model[0].TList3;
                //TempData[MyGuid + "_TList4"] = model[0].TList4;
                if (tm.SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                if (tm.SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
                if (tm.SelectedItems3 == null) model[0].SelectedItems3 = new string[] { "" };
                if (tm.SelectedItems4 == null) model[0].SelectedItems4 = new string[] { "" };
                #endregion
                DataTable dt = new DataTable();
                if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                    //if (Session["btnval"] != null) btnval = Session["btnval"].ToString();
                    //model = CallbackFun(btnval, "N", "store_return", "Inventory", model);
                    //ViewBag.vnew = "disabled='disabled'";
                    //ViewBag.vedit = "disabled='disabled'";
                    //ViewBag.vsave = "";
                }
                else if (command == "Fill Location")
                {
                    if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-"))
                    {
                        ViewBag.scripCall += "showmsgJS(1,'Please Select item in grid-1', 2);";
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                        return View(model);
                    }
                    if (model[0].dt2.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt2.Rows.RemoveAt(0); }
                    var dttt = model[0].dt2.Clone();
                    model[0].dt2 = dttt;
                    foreach (DataRow dr1 in model[0].dt1.Rows)
                    {
                        string icode = dr1["icode"].ToString().Trim();
                        DataTable dloc = sgen.getdata(userCode, "select itb.loc,location_name(itb.client_id||itb.client_unit_id||itb.loc) from itbal itb " +
                                   "where trim(itb.icode)='" + icode + "' and itb.type='IT' and itb.client_unit_id='" + unitid_mst + "'");
                        DataTable dtlocs = sgen.locclosing_all(userCode, unitid_mst + icode, FN_From_Date + "!~!~!~!~!" + model[0].Col20);
                        DataRow dr2 = model[0].dt2.NewRow();
                        dr2["sno"] = dr1["icode"].ToString().Trim() + unitid_mst + dloc.Rows[0][0].ToString().Trim();
                        dr2["Icode"] = dr1["icode"].ToString().Trim();
                        dr2["INAME"] = dr1["INAME"].ToString().Trim();
                        dr2["PARTNO"] = dr1["PARTNO"].ToString().Trim();
                        dr2["UOM"] = dr1["UOM"].ToString().Trim();
                        dr2["Qty_In_Stock"] = dr1["QTY_IN_STOCK"].ToString().Trim();
                        dr2["Qty_Act"] = dr1["QTY_ACT_RET"].ToString().Trim();
                        dr2["Remark"] = "-";
                        dr2["LocCode"] = dloc.Rows[0][0].ToString().Trim();
                        dr2["LOC"] = dloc.Rows[0][1].ToString().Trim();
                        model[0].dt2.Rows.Add(dr2);
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                    }
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {
                    try
                    {
                        string mmt = "";
                        mmt = model[0].SelectedItems4.FirstOrDefault();
                        if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-"))
                        {
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            ViewBag.scripCall += "showmsgJS(1, 'Please select item in grid-1', 2);";
                            ModelState.Clear();
                            return View(model);
                        }
                        if (model[0].dt2.Rows[0]["icode"].ToString().Trim().Equals("-"))
                        {
                            ViewBag.scripCall += "showmsgJS(1,'Please fill location in grid-2', 2);";
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            return View(model);
                        }
                        Satransaction sat1 = new Satransaction(userCode, MyGuid);
                        var tmodel = model.FirstOrDefault();
                        string currdate = sgen.server_datetime(userCode);
                        if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                        {
                            isedit = true;
                            vch_num = model[0].Col18;
                        }
                        else
                        {
                            isedit = false;
                            mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                            vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                            model[0].Col18 = vch_num;
                        }
                        foreach (DataRow dr in ds.Tables[0].Rows)
                        {
                            decimal QTY_Ret_Req = 0, QTY_Act_Ret = 0, QTY_Act_Ret2 = 0;
                            string icode2 = "";
                            string fstr = dr["sno"].ToString();
                            string icode = dr["icode"].ToString();
                            string INAME = dr["INAME"].ToString();
                            QTY_Ret_Req = sgen.Make_decimal(dr["QTY_Ret_Req"].ToString());
                            QTY_Act_Ret = sgen.Make_decimal(dr["QTY_Act_Ret"].ToString());
                            if (QTY_Act_Ret > QTY_Ret_Req)
                            {
                                ViewBag.scripCall += "showmsgJS(1, 'Item " + INAME + ", Reveiced Qty is not matching with Qty_Act_Ret in Grid 1,Please Check', 2);";
                                ModelState.Clear();
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                                return View(model);
                            }
                            var filtered = model[0].dt2.Select("icode='" + icode + "'");
                            foreach (var row in filtered)
                            {
                                decimal act2 = 0;
                                icode2 = row["icode"].ToString();
                                QTY_Act_Ret2 += act2 = sgen.Make_decimal(row["QTY_Act"].ToString());
                            }
                            if (QTY_Act_Ret != QTY_Act_Ret2)
                            {
                                ViewBag.scripCall += "showmsgJS(1, 'Qty_Act_Ret does not match with Location Grid of Item " + INAME + "', 2);";
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                                return View(model);
                            }
                            //if (icode != icode2)
                            //{
                            //    ViewBag.scripCall += "showmsgJS(1, 'Icode does not match with Location Grid of Item " + INAME + "', 2);";
                            //    ViewBag.vnew = "disabled='disabled'";
                            //    ViewBag.vedit = "disabled='disabled'";
                            //    ViewBag.vsave = "";
                            //    return View(model);
                            //}
                        }
                        DataTable dataTable = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                        for (int i = 0; i < model[0].dt1.Rows.Count; i++)
                        {
                            if (isedit)
                            {
                                string fstr = model[0].Col2 + model[0].Col16 + model[0].dt1.Rows[i]["icode"].ToString() + model[0].Col12;
                                mq = "select t.icode,sum(nvl(t.qtyin,0)) Received,sum(nvl(t.qtyout, 0)) Issued,sum(nvl(t.qtyout, 0)) - sum(nvl(t.qtyin, 0)) qtystk " +
                                    "from itransaction t where trim(t.store) = 'Y' and t.client_unit_id='" + unitid_mst + "' and t.icode='" + model[0].dt1.Rows[i]["icode"].ToString() + "' " +
                                    "and substr(trim(t.type),1,1) in ('1','3') and trim(t.type) not in ('36','37') and (client_unit_id||vch_num||icode||type)<>'" + fstr + "' " +
                                    "group by t.icode";
                                mq = sgen.seekval(userCode, mq, "qtystk");
                                int curstk = (sgen.Make_int(mq) + sgen.Make_int(model[0].dt1.Rows[i][7].ToString()));
                                if (curstk.ToString().Trim().Contains("-"))
                                {
                                    ViewBag.vnew = "disabled='disabled'";
                                    ViewBag.vedit = "disabled='disabled'";
                                    ViewBag.vsave = "";
                                    ViewBag.vsavenew = "";
                                    ViewBag.scripCall += "showmsgJS(1, 'You cannot set your stock to negative (-ve)', 2);";
                                    return View(model);
                                }

                                mq = "select t.icode,sum(nvl(t.qtyin,0)) Received,sum(nvl(t.qtyout, 0)) Issued,sum(nvl(t.qtyin, 0)) - sum(nvl(t.qtyout, 0)) qtystk " +
                                   "from itransaction t where trim(t.store) = 'Y' and t.client_unit_id='" + unitid_mst + "' and t.icode='" + model[0].dt1.Rows[i]["icode"].ToString() + "' " +
                                   "and (client_unit_id||vch_num||icode||type)<>'" + fstr + "' group by t.icode";
                                mq = sgen.seekval(userCode, mq, "qtystk");
                                curstk = (sgen.Make_int(mq) + sgen.Make_int(model[0].dt1.Rows[i][7].ToString()));
                                if (curstk.ToString().Trim().Contains("-"))
                                {
                                    ViewBag.vnew = "disabled='disabled'";
                                    ViewBag.vedit = "disabled='disabled'";
                                    ViewBag.vsave = "";
                                    ViewBag.vsavenew = "";
                                    ViewBag.scripCall += "showmsgJS(1, 'You cannot set your stock to negative (-ve)', 2);";
                                    return View(model);
                                }
                            }

                            #region
                            if (mmt.Trim() == "002")
                            {
                                DataRow dr = dataTable.NewRow();
                                dr["vch_num"] = vch_num;
                                dr["type"] = model[0].Col12;
                                dr["vch_date"] = sgen.Savedate(model[0].Col20, false);
                                dr["deptno"] = model[0].SelectedItems1.FirstOrDefault();
                                dr["deptname"] = model[0].TList1.SingleOrDefault(w => w.Value == model[0].SelectedItems1.FirstOrDefault()).Text;
                                dr["desig"] = model[0].SelectedItems2.FirstOrDefault();
                                dr["totremark"] = model[0].Col21;
                                if (model[0].Col12 == "11")//with issue
                                {
                                    dr["chlno"] = model[0].Col22;
                                    dr["chldate"] = sgen.Savedate(model[0].Col23, false);
                                }
                                dr["icode"] = model[0].dt1.Rows[i]["Icode"].ToString();
                                dr["iname"] = model[0].dt1.Rows[i]["IName"].ToString();
                                dr["cpartno"] = model[0].dt1.Rows[i]["partno"].ToString();
                                dr["uom"] = model[0].dt1.Rows[i]["UOM"].ToString();
                                dr["qtystk"] = model[0].dt1.Rows[i]["Qty_in_stock"].ToString();
                                dr["qtychl"] = model[0].dt1.Rows[i]["Qty_Ret_Req"].ToString();
                                dr["qtyout"] = model[0].dt1.Rows[i]["Qty_Act_Ret"].ToString();
                                dr["qtybal"] = model[0].dt1.Rows[i]["Qty_Req_bal"].ToString();
                                dr["iremark"] = model[0].dt1.Rows[i]["Remark"].ToString();
                                dr["mmt"] = mmt.Trim();
                                dr["btchno"] = model[0].SelectedItems3.FirstOrDefault();//fixedlocid
                                dr["cond"] = model[0].TList3.SingleOrDefault(w => w.Value == model[0].SelectedItems3.FirstOrDefault()).Text;//fixedlocname
                                dr["store"] = "Y";
                                dr["inspected"] = "W";
                                dr["rec_id"] = "0";
                                // shiv
                                if (isedit)
                                {
                                    dr["client_id"] = model[0].Col1.Trim();
                                    dr["client_unit_id"] = model[0].Col2.Trim();
                                    dr["ent_by"] = model[0].Col3;
                                    dr["ent_date"] = model[0].Col4;
                                    dr["edit_by"] = userid_mst;
                                    dr["edit_date"] = currdate;
                                }
                                else
                                {
                                    dr["client_id"] = clientid_mst;
                                    dr["client_unit_id"] = unitid_mst;
                                    dr["ent_by"] = userid_mst;
                                    dr["ent_date"] = currdate;
                                    dr["edit_by"] = "-";
                                    dr["edit_date"] = currdate;
                                }
                                dataTable.Rows.Add(dr);
                            }
                            DataRow dr1 = dataTable.NewRow();
                            dr1["vch_num"] = vch_num;
                            dr1["type"] = model[0].Col12;
                            dr1["vch_date"] = sgen.Savedate(model[0].Col20, false);
                            dr1["deptno"] = model[0].SelectedItems1.FirstOrDefault();
                            dr1["deptname"] = model[0].TList1.SingleOrDefault(w => w.Value == model[0].SelectedItems1.FirstOrDefault()).Text;
                            dr1["desig"] = model[0].SelectedItems2.FirstOrDefault();
                            dr1["totremark"] = model[0].Col21;
                            if (model[0].Col12 == "11")//with issue
                            {
                                dr1["chlno"] = model[0].Col22;
                                dr1["chldate"] = sgen.Savedate(model[0].Col23, false);
                            }
                            dr1["icode"] = model[0].dt1.Rows[i]["Icode"].ToString();
                            dr1["iname"] = model[0].dt1.Rows[i]["IName"].ToString();
                            dr1["cpartno"] = model[0].dt1.Rows[i]["partno"].ToString();
                            dr1["uom"] = model[0].dt1.Rows[i]["UOM"].ToString();
                            dr1["qtystk"] = model[0].dt1.Rows[i]["Qty_in_stock"].ToString();
                            dr1["qtychl"] = model[0].dt1.Rows[i]["Qty_Ret_Req"].ToString();
                            dr1["qtyin"] = model[0].dt1.Rows[i]["Qty_Act_Ret"].ToString();
                            dr1["qtybal"] = model[0].dt1.Rows[i]["Qty_Req_bal"].ToString();
                            dr1["iremark"] = model[0].dt1.Rows[i]["Remark"].ToString();
                            dr1["pktno"] = model[0].dt1.Rows[i]["No_of_pkt"].ToString();
                            dr1["mmt"] = mmt.Trim();
                            dr1["store"] = "Y";
                            dr1["inspected"] = "C";
                            dr1["rec_id"] = "0";
                            // shiv
                            if (isedit)
                            {
                                dr1["client_id"] = model[0].Col1.Trim();
                                dr1["client_unit_id"] = model[0].Col2.Trim();
                                dr1["ent_by"] = model[0].Col3;
                                dr1["ent_date"] = model[0].Col4;
                                dr1["edit_by"] = userid_mst;
                                dr1["edit_date"] = currdate;
                            }
                            else
                            {
                                dr1["client_id"] = clientid_mst;
                                dr1["client_unit_id"] = unitid_mst;
                                dr1["ent_by"] = userid_mst;
                                dr1["ent_date"] = currdate;
                                dr1["edit_by"] = "-";
                                dr1["edit_date"] = currdate;
                            }
                            dataTable.Rows.Add(dr1);
                            #endregion
                        }
                        res = sgen.Update_data_uncommit2(userCode, dataTable, model[0].Col10.Trim(), model[0].Col8, isedit, sat1);
                        if (res == true)
                        {
                            dt = cmd_Fun.GetStructure(userCode, "btchtrans");
                            for (int i = 0; i < model[0].dt2.Rows.Count; i++)
                            {
                                #region
                                if (mmt.Trim() == "002")
                                {
                                    DataRow dr = dt.NewRow();
                                    dr["vch_num"] = vch_num;
                                    dr["type"] = model[0].Col12;
                                    dr["vch_date"] = sgen.Savedate(model[0].Col20, false);
                                    dr["deptno"] = model[0].SelectedItems1.FirstOrDefault();
                                    dr["desig"] = model[0].SelectedItems2.FirstOrDefault();
                                    dr["totremark"] = model[0].Col21;
                                    if (model[0].Col12 == "11")//with issue
                                    {
                                        dr["chlno"] = model[0].Col23;//issueno
                                        dr["chldate"] = sgen.Savedate(model[0].Col24, false);//issuedate
                                    }
                                    dr["icode"] = model[0].dt2.Rows[i]["icode"].ToString();
                                    dr["iname"] = model[0].dt2.Rows[i]["iname"].ToString();
                                    dr["cpartno"] = model[0].dt2.Rows[i]["partno"].ToString();
                                    dr["uom"] = model[0].dt2.Rows[i]["UOM"].ToString();
                                    dr["qtystk"] = model[0].dt2.Rows[i]["Qty_in_stock"].ToString();
                                    dr["qtyout"] = model[0].dt2.Rows[i]["QTY_Act"].ToString().Trim();
                                    dr["iremark"] = model[0].dt2.Rows[i]["Remark"].ToString();
                                    dr["loc"] = model[0].SelectedItems3.FirstOrDefault();
                                    dr["locname"] = model[0].TList3.SingleOrDefault(w => w.Value == model[0].SelectedItems3.FirstOrDefault()).Text;
                                    dr["mmt"] = mmt.Trim();
                                    dr["store"] = "Y";
                                    dr["pono"] = "W";
                                    dr["rec_id"] = "0";
                                    // shiv
                                    if (isedit)
                                    {
                                        dr["client_id"] = model[0].Col1.Trim();
                                        dr["client_unit_id"] = model[0].Col2.Trim();
                                        dr["ent_by"] = model[0].Col3;
                                        dr["ent_date"] = model[0].Col4;
                                        dr["edit_by"] = userid_mst;
                                        dr["edit_date"] = currdate;
                                    }
                                    else
                                    {
                                        dr["client_id"] = clientid_mst;
                                        dr["client_unit_id"] = unitid_mst;
                                        dr["ent_by"] = userid_mst;
                                        dr["ent_date"] = currdate;
                                        dr["edit_by"] = "-";
                                        dr["edit_date"] = currdate;
                                    }
                                    dt.Rows.Add(dr);
                                }
                                DataRow dr1 = dt.NewRow();
                                dr1["vch_num"] = vch_num;
                                dr1["type"] = model[0].Col12;
                                dr1["vch_date"] = sgen.Savedate(model[0].Col20, false);
                                dr1["deptno"] = model[0].SelectedItems1.FirstOrDefault();
                                dr1["desig"] = model[0].SelectedItems2.FirstOrDefault();
                                dr1["totremark"] = model[0].Col21;
                                if (model[0].Col12 == "11")//with issue
                                {
                                    dr1["chlno"] = model[0].Col23;//issueno
                                    dr1["chldate"] = sgen.Savedate(model[0].Col24, false);//issuedate
                                }
                                dr1["icode"] = model[0].dt2.Rows[i]["icode"].ToString();
                                dr1["iname"] = model[0].dt2.Rows[i]["iname"].ToString();
                                dr1["cpartno"] = model[0].dt2.Rows[i]["partno"].ToString();
                                dr1["uom"] = model[0].dt2.Rows[i]["UOM"].ToString();
                                dr1["qtystk"] = model[0].dt2.Rows[i]["Qty_in_stock"].ToString();
                                dr1["qtyin"] = model[0].dt2.Rows[i]["QTY_Act"].ToString().Trim();
                                dr1["iremark"] = model[0].dt2.Rows[i]["Remark"].ToString();
                                dr1["loc"] = model[0].dt2.Rows[i]["LocCode"].ToString();
                                dr1["locname"] = model[0].dt2.Rows[i]["Loc"].ToString();
                                dr1["mmt"] = mmt.Trim();
                                dr1["store"] = "Y";
                                dr1["pono"] = "C";
                                dr1["rec_id"] = "0";
                                // shiv
                                if (isedit)
                                {
                                    dr1["client_id"] = model[0].Col1.Trim();
                                    dr1["client_unit_id"] = model[0].Col2.Trim();
                                    dr1["ent_by"] = model[0].Col3;
                                    dr1["ent_date"] = model[0].Col4;
                                    dr1["edit_by"] = userid_mst;
                                    dr1["edit_date"] = currdate;
                                }
                                else
                                {
                                    dr1["client_id"] = clientid_mst;
                                    dr1["client_unit_id"] = unitid_mst;
                                    dr1["ent_by"] = userid_mst;
                                    dr1["ent_date"] = currdate;
                                    dr1["edit_by"] = "-";
                                    dr1["edit_date"] = currdate;
                                }
                                dt.Rows.Add(dr1);
                                #endregion
                            }
                            ok = sgen.Update_data_uncommit2(userCode, dt, "btchtrans", model[0].Col8, isedit, sat1);
                            if (ok != true)
                            {
                                sat1.Rollback();
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                                ViewBag.scripCall += "showmsgJS(1, 'Data Not Saved', 0);";
                                ModelState.Clear();
                                return View(model);
                            }
                            sat1.Commit();
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            model = new List<Tmodelmain>();
                            model.Add(new Tmodelmain
                            {
                                Col13 = "Save",
                                Col100 = "Save & New",
                                //Col9 = tmodel.Col9,
                                Col10 = tmodel.Col10,
                                Col11 = tmodel.Col11,
                                //Col12 = tmodel.Col12,
                                Col14 = tmodel.Col14,
                                Col15 = tmodel.Col15,
                                Col55 = sgen.GetSession(MyGuid, "RELOCCHK").ToString(),
                                TList1 = mod1,
                                SelectedItems1 = new string[] { "" },
                                TList2 = mod2,
                                SelectedItems2 = new string[] { "" },
                                TList3 = mod3,
                                SelectedItems3 = new string[] { "" },
                                TList4 = mod4,
                                SelectedItems4 = new string[] { "" },
                                dt1 = (DataTable)sgen.GetSession(MyGuid, "DTRTN1"),
                                dt2 = (DataTable)sgen.GetSession(MyGuid, "DTRTN2")
                            });
                            sgen.SetSession(MyGuid, "KSRTYPE", null);
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else
                        {
                            sat1.Rollback();
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            ViewBag.scripCall += "showmsgJS(1, 'Data Not Saved', 0);";
                        }
                    }
                    catch (Exception ex) { ViewBag.scripCall += "showmsgJS(1,'" + ex.Message.ToString().Replace('\'', ' ') + "', 0);"; }
                }
                else if (command == "-")
                {
                    if (model[0].dt1.Rows.Count > 1) model[0].dt1.Rows.RemoveAt(sgen.Make_int(hfrow));
                    else { model[0].dt1 = (DataTable)sgen.GetSession(MyGuid, "DTRTN1"); }
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
                else if (command == "2-")
                {
                    if (model[0].dt2.Rows.Count > 1) model[0].dt2.Rows.RemoveAt(sgen.Make_int(hfrow));
                    else { model[0].dt2 = (DataTable)sgen.GetSession(MyGuid, "DTRTN2"); }
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region store_returnn
        public ActionResult store_returnn()
        {
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            FillMst(MyGuid);
            // shiv
            chkRef();
            ViewBag.vnew = "";
            ViewBag.vedit = "";
            ViewBag.vsave = "disabled='disabled'";
            ViewBag.vsavenew = "disabled='disabled'";
            ViewBag.scripCall = "disableForm();";
            List<Tmodelmain> model = new List<Tmodelmain>();
            Tmodelmain tm1 = new Tmodelmain();
            List<SelectListItem> mod1 = new List<SelectListItem>();
            mid_mst = EncryptDecrypt.Decrypt(Request.QueryString["mid"]);
            tm1.Col10 = "itransaction";
            tm1.Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            tm1.Col13 = "Save";
            tm1.Col100 = "Save & New";
            tm1.Col121 = "S";
            tm1.Col122 = "<u>S</u>ave";
            tm1.Col123 = "Save & Ne<u>w</u>";
            tm1.Col14 = mid_mst.Trim();
            tm1.Col15 = MyGuid.Trim();
            tm1.TList1 = tm1.TList2 = tm1.TList3 = tm1.TList4 = mod1;
            tm1.SelectedItems1 = new string[] { "" };

            tm1.SelectedItems2 = new string[] { "" };

            tm1.SelectedItems3 = new string[] { "" };

            tm1.SelectedItems4 = new string[] { "" };
            tm1.Col55 = sgen.seekval(userCode, "select param1 from controls where id='000015' AND TYPE='LOC'", "param1");//locchk
            sgen.SetSession(MyGuid, "RELOCCHK", tm1.Col55);

            DataTable dt = sgen.getdata(userCode, "select '-' as  SNo ,'-' as Icode,'-' as IName,'-' PartNo,'-' as UOM,'0' as  Qty_in_stock,'0' as Qty_Ret_Req," +
                "'0' as Qty_Act_Ret,'0' Qty_Req_Bal,'-' as Remark,'-' No_of_pkt,'0' batchno  from dual");
            tm1.dt1 = dt;
            sgen.SetSession(MyGuid, "DTRTN1", dt);

            dt = sgen.getdata(userCode, "select '-' as SNo ,'-' as Icode,'-' as IName,'-' PartNo,'-' as UOM,'0' as Qty_in_stock,'0' as Qty_Act,'-' as Remark," +
                "'0' LocCode,'-' Loc,'0' batchno from dual");
            tm1.dt2 = dt;
            sgen.SetSession(MyGuid, "DTRTN2", dt);
            sgen.SetSession(MyGuid, "KSRTYPE", null);
            model.Add(tm1);
            return View(model);
        }
        [HttpPost]
        public ActionResult store_returnn(List<Tmodelmain> model, string command, string hfrow, string hftable)
        {
            try
            {
                FillMst(model[0].Col15);
                DataSet ds = sgen.setDS(hftable);
                model[0].dt1 = ds.Tables[0];
                model[0].dt2 = ds.Tables[1];
                var tm = model.FirstOrDefault();
                #region ddl
                List<SelectListItem> mod1 = new List<SelectListItem>();
                List<SelectListItem> mod2 = new List<SelectListItem>();
                List<SelectListItem> mod3 = new List<SelectListItem>();
                List<SelectListItem> mod4 = new List<SelectListItem>();
                TempData[MyGuid + "_TList1"] = model[0].TList1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                TempData[MyGuid + "_TList2"] = model[0].TList2 = (List<SelectListItem>)TempData[MyGuid + "_TList2"];
                TempData[MyGuid + "_TList3"] = model[0].TList3 = (List<SelectListItem>)TempData[MyGuid + "_TList3"];
                TempData[MyGuid + "_TList4"] = model[0].TList4 = (List<SelectListItem>)TempData[MyGuid + "_TList4"];
                //TempData[MyGuid + "_TList1"] = model[0].TList1;
                //TempData[MyGuid + "_TList2"] = model[0].TList2;
                //TempData[MyGuid + "_TList3"] = model[0].TList3;
                //TempData[MyGuid + "_TList4"] = model[0].TList4;
                if (tm.SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                if (tm.SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
                if (tm.SelectedItems3 == null) model[0].SelectedItems3 = new string[] { "" };
                if (tm.SelectedItems4 == null) model[0].SelectedItems4 = new string[] { "" };
                #endregion
                DataTable dt = new DataTable();
                if (command == "Cancel") { return CancelFun(model); }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                    //if (Session["btnval"] != null) btnval = Session["btnval"].ToString();
                    //model = CallbackFun(btnval, "N", "store_return", "Inventory", model);
                    //ViewBag.vnew = "disabled='disabled'";
                    //ViewBag.vedit = "disabled='disabled'";
                    //ViewBag.vsave = "";
                }
                else if (command == "Fill Location")
                {
                    if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-"))
                    {
                        ViewBag.scripCall += "showmsgJS(1,'Please Select item in grid-1', 2);";
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                        return View(model);
                    }
                    if (model[0].dt2.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt2.Rows.RemoveAt(0); }
                    var dttt = model[0].dt2.Clone();
                    model[0].dt2 = dttt;
                    foreach (DataRow dr1 in model[0].dt1.Rows)
                    {
                        string icode = dr1["icode"].ToString().Trim();
                        string batchno = dr1["batchno"].ToString().Trim();
                        DataTable dloc = sgen.getdata(userCode, "select itb.loc,location_name(itb.client_id||itb.client_unit_id||itb.loc) from itbal itb " +
                                   "where trim(itb.icode)='" + icode + "' and itb.type='IT' and itb.client_unit_id='" + unitid_mst + "'");
                        DataTable dtlocs = sgen.btchlocclosing_all(userCode, unitid_mst + icode + batchno, FN_From_Date + "!~!~!~!~!" + model[0].Col20 + "!~!~!~!~!" + model[0].Col12);
                        DataRow dr2 = model[0].dt2.NewRow();
                        dr2["sno"] = dr1["icode"].ToString().Trim() + unitid_mst + dloc.Rows[0][0].ToString().Trim();
                        dr2["Icode"] = dr1["icode"].ToString().Trim();
                        dr2["INAME"] = dr1["INAME"].ToString().Trim();
                        dr2["PARTNO"] = dr1["PARTNO"].ToString().Trim();
                        dr2["UOM"] = dr1["UOM"].ToString().Trim();
                        dr2["Qty_In_Stock"] = dr1["QTY_IN_STOCK"].ToString().Trim();
                        dr2["Qty_Act"] = dr1["QTY_ACT_RET"].ToString().Trim();
                        dr2["Remark"] = "-";
                        dr2["LocCode"] = dloc.Rows[0][0].ToString().Trim();
                        dr2["LOC"] = dloc.Rows[0][1].ToString().Trim();
                        dr2["batchno"] = batchno;
                        model[0].dt2.Rows.Add(dr2);
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                    }
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {
                    try
                    {
                        string mmt = "";
                        mmt = model[0].SelectedItems4.FirstOrDefault();
                        if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-"))
                        {
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            ViewBag.scripCall += "showmsgJS(1, 'Please select item in grid-1', 2);";
                            ModelState.Clear();
                            return View(model);
                        }
                        if (model[0].dt2.Rows[0]["icode"].ToString().Trim().Equals("-"))
                        {
                            ViewBag.scripCall += "showmsgJS(1,'Please fill location in grid-2', 2);";
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            return View(model);
                        }
                        Satransaction sat1 = new Satransaction(userCode, MyGuid);
                        var tmodel = model.FirstOrDefault();
                        string currdate = sgen.server_datetime(userCode);
                        if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                        {
                            isedit = true;
                            vch_num = model[0].Col18;
                        }
                        else
                        {
                            isedit = false;
                            mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                            vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                            model[0].Col18 = vch_num;
                        }
                        foreach (DataRow dr in ds.Tables[0].Rows)
                        {
                            decimal QTY_Ret_Req = 0, QTY_Act_Ret = 0, QTY_Act_Ret2 = 0;
                            string batchno = "";
                            string icode2 = "";
                            string fstr = dr["sno"].ToString();
                            string icode = dr["icode"].ToString();
                            string INAME = dr["INAME"].ToString();
                            QTY_Ret_Req = sgen.Make_decimal(dr["QTY_Ret_Req"].ToString());
                            QTY_Act_Ret = sgen.Make_decimal(dr["QTY_Act_Ret"].ToString());
                            batchno = dr["batchno"].ToString();
                            if (QTY_Act_Ret > QTY_Ret_Req)
                            {
                                ViewBag.scripCall += "showmsgJS(1, 'Item " + INAME + ", Reveiced Qty is not matching with Qty_Act_Ret in Grid 1,Please Check', 2);";
                                ModelState.Clear();
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                                return View(model);
                            }
                            var filtered = model[0].dt2.Select("icode='" + icode + "' and batchno='" + batchno + "'");
                            foreach (var row in filtered)
                            {
                                decimal act2 = 0;
                                icode2 = row["icode"].ToString();
                                QTY_Act_Ret2 += act2 = sgen.Make_decimal(row["QTY_Act"].ToString());
                            }
                            if (QTY_Act_Ret != QTY_Act_Ret2)
                            {
                                ViewBag.scripCall += "showmsgJS(1, 'Qty_Act_Ret does not match with Location Grid of Item " + INAME + "', 2);";
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                                return View(model);
                            }
                            //if (icode != icode2)
                            //{
                            //    ViewBag.scripCall += "showmsgJS(1, 'Icode does not match with Location Grid of Item " + INAME + "', 2);";
                            //    ViewBag.vnew = "disabled='disabled'";
                            //    ViewBag.vedit = "disabled='disabled'";
                            //    ViewBag.vsave = "";
                            //    return View(model);
                            //}
                        }
                        DataTable dataTable = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                        for (int i = 0; i < model[0].dt1.Rows.Count; i++)
                        {
                            if (isedit)
                            {
                                string fstr = model[0].Col2 + model[0].Col16 + model[0].dt1.Rows[i]["icode"].ToString() + model[0].Col12;
                                mq = "select t.icode,sum(nvl(t.qtyin,0)) Received,sum(nvl(t.qtyout, 0)) Issued,sum(nvl(t.qtyout, 0)) - sum(nvl(t.qtyin, 0)) qtystk " +
                                    "from itransaction t where trim(t.store) = 'Y' and t.client_unit_id='" + unitid_mst + "' and t.icode='" + model[0].dt1.Rows[i]["icode"].ToString() + "' " +
                                    "and substr(trim(t.type),1,1) in ('1','3') and trim(t.type) not in ('36','37') and (client_unit_id||vch_num||icode||type)<>'" + fstr + "' " +
                                    "group by t.icode";
                                mq = sgen.seekval(userCode, mq, "qtystk");
                                int curstk = (sgen.Make_int(mq) + sgen.Make_int(model[0].dt1.Rows[i][7].ToString()));
                                if (curstk.ToString().Trim().Contains("-"))
                                {
                                    ViewBag.vnew = "disabled='disabled'";
                                    ViewBag.vedit = "disabled='disabled'";
                                    ViewBag.vsave = "";
                                    ViewBag.vsavenew = "";
                                    ViewBag.scripCall += "showmsgJS(1, 'You cannot set your stock to negative (-ve)', 2);";
                                    return View(model);
                                }

                                mq = "select t.icode,sum(nvl(t.qtyin,0)) Received,sum(nvl(t.qtyout, 0)) Issued,sum(nvl(t.qtyin, 0)) - sum(nvl(t.qtyout, 0)) qtystk " +
                                   "from itransaction t where trim(t.store) = 'Y' and t.client_unit_id='" + unitid_mst + "' and t.icode='" + model[0].dt1.Rows[i]["icode"].ToString() + "' " +
                                   "and (client_unit_id||vch_num||icode||type)<>'" + fstr + "' group by t.icode";
                                mq = sgen.seekval(userCode, mq, "qtystk");
                                curstk = (sgen.Make_int(mq) + sgen.Make_int(model[0].dt1.Rows[i][7].ToString()));
                                if (curstk.ToString().Trim().Contains("-"))
                                {
                                    ViewBag.vnew = "disabled='disabled'";
                                    ViewBag.vedit = "disabled='disabled'";
                                    ViewBag.vsave = "";
                                    ViewBag.vsavenew = "";
                                    ViewBag.scripCall += "showmsgJS(1, 'You cannot set your stock to negative (-ve)', 2);";
                                    return View(model);
                                }
                            }

                            #region
                            if (mmt.Trim() == "002")
                            {
                                DataRow dr = dataTable.NewRow();
                                dr["vch_num"] = vch_num;
                                dr["type"] = model[0].Col12;
                                dr["vch_date"] = sgen.Savedate(model[0].Col20, false);
                                dr["deptno"] = model[0].SelectedItems1.FirstOrDefault();
                                dr["deptname"] = model[0].TList1.SingleOrDefault(w => w.Value == model[0].SelectedItems1.FirstOrDefault()).Text;
                                dr["desig"] = model[0].SelectedItems2.FirstOrDefault();
                                dr["totremark"] = model[0].Col21;
                                if (model[0].Col12 == "11")//with issue
                                {
                                    dr["chlno"] = model[0].Col22;
                                    dr["chldate"] = sgen.Savedate(model[0].Col23, false);
                                }
                                dr["icode"] = model[0].dt1.Rows[i]["Icode"].ToString();
                                dr["iname"] = model[0].dt1.Rows[i]["IName"].ToString();
                                dr["cpartno"] = model[0].dt1.Rows[i]["partno"].ToString();
                                dr["uom"] = model[0].dt1.Rows[i]["UOM"].ToString();
                                dr["qtystk"] = model[0].dt1.Rows[i]["Qty_in_stock"].ToString();
                                dr["qtychl"] = model[0].dt1.Rows[i]["Qty_Ret_Req"].ToString();
                                dr["qtyout"] = model[0].dt1.Rows[i]["Qty_Act_Ret"].ToString();
                                dr["qtybal"] = model[0].dt1.Rows[i]["Qty_Req_bal"].ToString();
                                dr["iremark"] = model[0].dt1.Rows[i]["Remark"].ToString();
                                dr["mmt"] = mmt.Trim();
                                dr["btchno"] = model[0].SelectedItems3.FirstOrDefault();//fixedlocid
                                dr["cond"] = model[0].TList3.SingleOrDefault(w => w.Value == model[0].SelectedItems3.FirstOrDefault()).Text;//fixedlocname
                                dr["store"] = "Y";
                                dr["inspected"] = "W";
                                dr["rec_id"] = "0";
                                // shiv
                                if (isedit)
                                {
                                    dr["client_id"] = model[0].Col1.Trim();
                                    dr["client_unit_id"] = model[0].Col2.Trim();
                                    dr["ent_by"] = model[0].Col3;
                                    dr["ent_date"] = model[0].Col4;
                                    dr["edit_by"] = userid_mst;
                                    dr["edit_date"] = currdate;
                                }
                                else
                                {
                                    dr["client_id"] = clientid_mst;
                                    dr["client_unit_id"] = unitid_mst;
                                    dr["ent_by"] = userid_mst;
                                    dr["ent_date"] = currdate;
                                    dr["edit_by"] = "-";
                                    dr["edit_date"] = currdate;
                                }
                                dataTable.Rows.Add(dr);
                            }
                            DataRow dr1 = dataTable.NewRow();
                            dr1["vch_num"] = vch_num;
                            dr1["type"] = model[0].Col12;
                            dr1["vch_date"] = sgen.Savedate(model[0].Col20, false);
                            dr1["deptno"] = model[0].SelectedItems1.FirstOrDefault();
                            dr1["deptname"] = model[0].TList1.SingleOrDefault(w => w.Value == model[0].SelectedItems1.FirstOrDefault()).Text;
                            dr1["desig"] = model[0].SelectedItems2.FirstOrDefault();
                            dr1["totremark"] = model[0].Col21;
                            if (model[0].Col12 == "11")//with issue
                            {
                                dr1["chlno"] = model[0].Col22;
                                dr1["chldate"] = sgen.Savedate(model[0].Col23, false);
                            }
                            dr1["icode"] = model[0].dt1.Rows[i]["Icode"].ToString();
                            dr1["iname"] = model[0].dt1.Rows[i]["IName"].ToString();
                            dr1["cpartno"] = model[0].dt1.Rows[i]["partno"].ToString();
                            dr1["uom"] = model[0].dt1.Rows[i]["UOM"].ToString();
                            dr1["qtystk"] = model[0].dt1.Rows[i]["Qty_in_stock"].ToString();
                            dr1["qtychl"] = model[0].dt1.Rows[i]["Qty_Ret_Req"].ToString();
                            dr1["qtyin"] = model[0].dt1.Rows[i]["Qty_Act_Ret"].ToString();
                            dr1["qtybal"] = model[0].dt1.Rows[i]["Qty_Req_bal"].ToString();
                            dr1["iremark"] = model[0].dt1.Rows[i]["Remark"].ToString();
                            dr1["pktno"] = model[0].dt1.Rows[i]["No_of_pkt"].ToString();
                            dr1["btchno"] = model[0].dt1.Rows[i]["batchno"].ToString();
                            dr1["mmt"] = mmt.Trim();
                            dr1["store"] = "Y";
                            dr1["inspected"] = "C";
                            dr1["rec_id"] = "0";
                            // shiv
                            if (isedit)
                            {
                                dr1["client_id"] = model[0].Col1.Trim();
                                dr1["client_unit_id"] = model[0].Col2.Trim();
                                dr1["ent_by"] = model[0].Col3;
                                dr1["ent_date"] = model[0].Col4;
                                dr1["edit_by"] = userid_mst;
                                dr1["edit_date"] = currdate;
                            }
                            else
                            {
                                dr1["client_id"] = clientid_mst;
                                dr1["client_unit_id"] = unitid_mst;
                                dr1["ent_by"] = userid_mst;
                                dr1["ent_date"] = currdate;
                                dr1["edit_by"] = "-";
                                dr1["edit_date"] = currdate;
                            }
                            dataTable.Rows.Add(dr1);
                            #endregion
                        }
                        res = sgen.Update_data_uncommit2(userCode, dataTable, model[0].Col10.Trim(), model[0].Col8, isedit, sat1);
                        if (res == true)
                        {
                            dt = cmd_Fun.GetStructure(userCode, "btchtrans");
                            for (int i = 0; i < model[0].dt2.Rows.Count; i++)
                            {
                                #region
                                if (mmt.Trim() == "002")
                                {
                                    DataRow dr = dt.NewRow();
                                    dr["vch_num"] = vch_num;
                                    dr["type"] = model[0].Col12;
                                    dr["vch_date"] = sgen.Savedate(model[0].Col20, false);
                                    dr["deptno"] = model[0].SelectedItems1.FirstOrDefault();
                                    dr["desig"] = model[0].SelectedItems2.FirstOrDefault();
                                    dr["totremark"] = model[0].Col21;
                                    if (model[0].Col12 == "11")//with issue
                                    {
                                        dr["chlno"] = model[0].Col23;//issueno
                                        dr["chldate"] = sgen.Savedate(model[0].Col24, false);//issuedate
                                    }
                                    dr["icode"] = model[0].dt2.Rows[i]["icode"].ToString();
                                    dr["iname"] = model[0].dt2.Rows[i]["iname"].ToString();
                                    dr["cpartno"] = model[0].dt2.Rows[i]["partno"].ToString();
                                    dr["uom"] = model[0].dt2.Rows[i]["UOM"].ToString();
                                    dr["qtystk"] = model[0].dt2.Rows[i]["Qty_in_stock"].ToString();
                                    dr["qtyout"] = model[0].dt2.Rows[i]["QTY_Act"].ToString().Trim();
                                    dr["iremark"] = model[0].dt2.Rows[i]["Remark"].ToString();
                                    dr["loc"] = model[0].SelectedItems3.FirstOrDefault();
                                    dr["locname"] = model[0].TList3.SingleOrDefault(w => w.Value == model[0].SelectedItems3.FirstOrDefault()).Text;
                                    dr["mmt"] = mmt.Trim();
                                    dr["store"] = "Y";
                                    dr["pono"] = "W";
                                    dr["rec_id"] = "0";
                                    // shiv
                                    if (isedit)
                                    {
                                        dr["client_id"] = model[0].Col1.Trim();
                                        dr["client_unit_id"] = model[0].Col2.Trim();
                                        dr["ent_by"] = model[0].Col3;
                                        dr["ent_date"] = model[0].Col4;
                                        dr["edit_by"] = userid_mst;
                                        dr["edit_date"] = currdate;
                                    }
                                    else
                                    {
                                        dr["client_id"] = clientid_mst;
                                        dr["client_unit_id"] = unitid_mst;
                                        dr["ent_by"] = userid_mst;
                                        dr["ent_date"] = currdate;
                                        dr["edit_by"] = "-";
                                        dr["edit_date"] = currdate;
                                    }
                                    dt.Rows.Add(dr);
                                }
                                DataRow dr1 = dt.NewRow();
                                dr1["vch_num"] = vch_num;
                                dr1["type"] = model[0].Col12;
                                dr1["vch_date"] = sgen.Savedate(model[0].Col20, false);
                                dr1["deptno"] = model[0].SelectedItems1.FirstOrDefault();
                                dr1["desig"] = model[0].SelectedItems2.FirstOrDefault();
                                dr1["totremark"] = model[0].Col21;
                                if (model[0].Col12 == "11")//with issue
                                {
                                    dr1["chlno"] = model[0].Col23;//issueno
                                    dr1["chldate"] = sgen.Savedate(model[0].Col24, false);//issuedate
                                }
                                dr1["icode"] = model[0].dt2.Rows[i]["icode"].ToString();
                                dr1["iname"] = model[0].dt2.Rows[i]["iname"].ToString();
                                dr1["cpartno"] = model[0].dt2.Rows[i]["partno"].ToString();
                                dr1["uom"] = model[0].dt2.Rows[i]["UOM"].ToString();
                                dr1["qtystk"] = model[0].dt2.Rows[i]["Qty_in_stock"].ToString();
                                dr1["qtyin"] = model[0].dt2.Rows[i]["QTY_Act"].ToString().Trim();
                                dr1["iremark"] = model[0].dt2.Rows[i]["Remark"].ToString();
                                dr1["loc"] = model[0].dt2.Rows[i]["LocCode"].ToString();
                                dr1["locname"] = model[0].dt2.Rows[i]["Loc"].ToString();
                                dr1["btchno"] = model[0].dt2.Rows[i]["batchno"].ToString();
                                dr1["mmt"] = mmt.Trim();
                                dr1["store"] = "Y";
                                dr1["pono"] = "C";
                                dr1["rec_id"] = "0";
                                // shiv
                                if (isedit)
                                {
                                    dr1["client_id"] = model[0].Col1.Trim();
                                    dr1["client_unit_id"] = model[0].Col2.Trim();
                                    dr1["ent_by"] = model[0].Col3;
                                    dr1["ent_date"] = model[0].Col4;
                                    dr1["edit_by"] = userid_mst;
                                    dr1["edit_date"] = currdate;
                                }
                                else
                                {
                                    dr1["client_id"] = clientid_mst;
                                    dr1["client_unit_id"] = unitid_mst;
                                    dr1["ent_by"] = userid_mst;
                                    dr1["ent_date"] = currdate;
                                    dr1["edit_by"] = "-";
                                    dr1["edit_date"] = currdate;
                                }
                                dt.Rows.Add(dr1);
                                #endregion
                            }
                            ok = sgen.Update_data_uncommit2(userCode, dt, "btchtrans", model[0].Col8, isedit, sat1);
                            if (ok != true)
                            {
                                sat1.Rollback();
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                                ViewBag.scripCall += "showmsgJS(1, 'Data Not Saved', 0);";
                                ModelState.Clear();
                                return View(model);
                            }
                            sat1.Commit();
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            model = new List<Tmodelmain>();
                            model.Add(new Tmodelmain
                            {
                                Col13 = "Save",
                                Col100 = "Save & New",
                                //Col9 = tmodel.Col9,
                                Col10 = tmodel.Col10,
                                Col11 = tmodel.Col11,
                                //Col12 = tmodel.Col12,
                                Col14 = tmodel.Col14,
                                Col15 = tmodel.Col15,
                                Col55 = sgen.GetSession(MyGuid, "RELOCCHK").ToString(),
                                TList1 = mod1,
                                SelectedItems1 = new string[] { "" },
                                TList2 = mod2,
                                SelectedItems2 = new string[] { "" },
                                TList3 = mod3,
                                SelectedItems3 = new string[] { "" },
                                TList4 = mod4,
                                SelectedItems4 = new string[] { "" },
                                dt1 = (DataTable)sgen.GetSession(MyGuid, "DTRTN1"),
                                dt2 = (DataTable)sgen.GetSession(MyGuid, "DTRTN2")
                            });
                            sgen.SetSession(MyGuid, "KSRTYPE", null);
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else
                        {
                            sat1.Rollback();
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            ViewBag.scripCall += "showmsgJS(1, 'Data Not Saved', 0);";
                        }
                    }
                    catch (Exception ex) { ViewBag.scripCall += "showmsgJS(1,'" + ex.Message.ToString().Replace('\'', ' ') + "', 0);"; }
                }
                else if (command == "-")
                {
                    if (model[0].dt1.Rows.Count > 1) model[0].dt1.Rows.RemoveAt(sgen.Make_int(hfrow));
                    else { model[0].dt1 = (DataTable)sgen.GetSession(MyGuid, "DTRTN1"); }
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
                else if (command == "2-")
                {
                    if (model[0].dt2.Rows.Count > 1) model[0].dt2.Rows.RemoveAt(sgen.Make_int(hfrow));
                    else { model[0].dt2 = (DataTable)sgen.GetSession(MyGuid, "DTRTN2"); }
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region Quality
        [HttpGet]
        public ActionResult GetStages(string searchTerm, int pageSize, int pageNum, string icode, string Myguid)
        {
            FillMst(Myguid);
            DataSet ds = getitemData(userCode, "select master_id as icode ,master_name as iname ,'-' partno,'-' uom,'-' hsn,'-' taxrate,'-' stock from master_setting " +
                "where type='KPS' and find_in_set(client_unit_id,'" + unitid_mst + "')=1 " +
                "and master_id<>'001'", 1, searchTerm);
            return DstoJSonItems(ds);
        }
        [HttpGet]
        public ActionResult GetLoc(string searchTerm, int pageSize, int pageNum, string icode)
        {
            FillMst();
            //DataSet ds = getitemData(userCode, "select lc.fstr icode ,lc.loc iname  ,'-' partno,'-' uom,'-' hsn,'-' taxrate,'-' stock  from item it inner join (select (a.client_id||a.client_unit_id||b.master_id||f.master_id||rm.master_id||rk.master_id||a.master_id) as fstr," +
            //            "(b.master_name || ct.param1 || f.master_name || ct.param1 || rm.master_name || ct.param1 || rk.master_name || ct.param1 || a.master_name) Loc from master_setting a " +
            DataSet ds = getitemData(userCode, "SELECT master_id as icode,master_name as iname ,'-' partno,'-' uom,'-' hsn,'-' taxrate,'-' stock FROM master_setting where type = 'LC6' " +
                "and find_in_set(client_unit_id,'" + unitid_mst + "')=1", 1, searchTerm);
            //   "where a.type='IN3' and a.client_id = '" + clientid_mst + "' and a.client_unit_id = '" + unitid_mst + "'", 1, searchTerm);
            //DataSet ds = getitemData(userCode, "select lc.fstr icode ,lc.loc iname  ,'-' partno,'-' uom,'-' hsn,'-' taxrate,'-' stock  from item it inner" +
            //    " join (select (a.client_id||a.client_unit_id||b.master_id||f.master_id||rm.master_id||rk.master_id||a.master_id) as fstr," +
            //            "(b.master_name || ct.param1 || f.master_name || ct.param1 || rm.master_name || ct.param1 || rk.master_name || ct.param1 || a.master_name) Loc from master_setting a " +
            //            "inner join master_setting b on b.master_id = a.classid and b.type = 'HBM' and a.client_id = b.client_id and a.client_unit_id = b.client_unit_id " +
            //            "inner join master_setting f on f.master_id = a.sectionid and f.type = 'IN0' and a.client_id = f.client_id and a.client_unit_id = f.client_unit_id " +
            //            "inner join master_setting rm on rm.master_id = a.client_name and rm.type = 'IN1' and a.client_id = rm.client_id and a.client_unit_id = rm.client_unit_id " +
            //            "inner join master_setting rk on rk.master_id = a.subjectid and rk.type = 'IN2' and a.client_id = rk.client_id and a.client_unit_id = rk.client_unit_id " +
            //            "inner join controls ct on 1 = 1 and ct.id = '000010' " +
            //            "where a.type='IN3' and a.client_id = '" + clientid_mst + "' and a.client_unit_id = '" + unitid_mst + "') lc on lc.fstr=it.loc " +
            //            "where it.icode='" + icode + "' ", 1, searchTerm);
            return DstoJSonItems(ds);
        }
        [HttpGet]
        public ActionResult GetFstg(string searchTerm, int pageSize, int pageNum, string icode)
        {
            FillMst();
            DataSet ds = getitemData(userCode, "SELECT master_id as icode,master_name as iname ,'-' partno,'-' uom,'-' hsn,'-' taxrate,'-' stock FROM master_setting where type = 'LC6' " +
                "and client_unit_id='" + unitid_mst + "'", 1, searchTerm);
            return DstoJSonItems(ds);
        }
        public ActionResult quality()
        {
            List<Tmodelmain> model = new List<Tmodelmain>();
            Tmodelmain tm1 = new Tmodelmain();
            try
            {
                MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
                FillMst(MyGuid);
                chkRef();
                ViewBag.vnew = "";
                ViewBag.vedit = "";
                ViewBag.vsave = "disabled='disabled'";
                ViewBag.vsavenew = "disabled='disabled'";
                ViewBag.scripCall = "disableForm();";
                mid_mst = EncryptDecrypt.Decrypt(Request.QueryString["mid"]);
                tm1.Col9 = "QUALITY / STORE ALLOCATION";
                tm1.Col10 = "btchtrans";
                tm1.Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
                tm1.Col13 = "Save";
                tm1.Col100 = "Save & New";
                tm1.Col121 = "S";
                tm1.Col122 = "<u>S</u>ave";
                tm1.Col123 = "Save & Ne<u>w</u>";
                tm1.Col14 = mid_mst.Trim();
                tm1.Col15 = MyGuid.Trim();
                tm1.dt1 = null;
                tm1.dt2 = null;
                model.Add(tm1);
            }
            catch (Exception ex) { ViewBag.scripCall = "showmsgJS(1,'" + ex.Message.ToString().Replace('\'', ' ') + "', 0);"; }
            ModelState.Clear();
            return View(model);
        }
        [HttpPost]
        public ActionResult quality(List<Tmodelmain> model, string command, string hfrow, string hftable)
        {
            try
            {
                FillMst(model[0].Col15);
                DataSet ds = sgen.setDS(hftable);
                if (ds.Tables.Count > 1)
                {
                    model[0].dt1 = ds.Tables[0];
                    model[0].dt2 = ds.Tables[1];
                }
                var tm = model.FirstOrDefault();
                DataTable dataTable = new DataTable();
                DataTable dt = new DataTable();
                if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Fill Location")
                {
                    try
                    {
                        if (model[0].dt2.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt2.Rows.RemoveAt(0); }
                        var dttt = model[0].dt2.Clone();
                        model[0].dt2 = dttt;
                        int i = 0;
                        foreach (DataRow dr1 in model[0].dt1.Rows)
                        {
                            i++;
                            string icode = dr1["icode"].ToString().Trim();
                            DataTable dloc = sgen.getdata(userCode, "select itb.loc,location_name(itb.client_id||itb.client_unit_id||itb.loc) from itbal itb where " +
                                "trim(itb.icode)='" + icode + "' and itb.type='IT' and itb.client_unit_id='" + unitid_mst + "'");
                            DataRow dr2 = model[0].dt2.NewRow();
                            dr2["item"] = dr1["item"].ToString().Trim();
                            //dr2["sno"] = i.ToString();
                            dr2["icode"] = dr1["icode"].ToString().Trim();
                            dr2["INAME"] = dr1["INAME"].ToString().Trim();
                            dr2["PARTNO"] = dr1["PARTNO"].ToString().Trim();
                            dr2["UOM"] = dr1["UOM"].ToString().Trim();
                            dr2["PONO"] = dr1["PONO"].ToString().Trim();
                            dr2["PODATE"] = dr1["PODATE"].ToString().Trim();
                            dr2["LOC"] = dloc.Rows[0][0].ToString().Trim();
                            dr2["LOC_NAME"] = dloc.Rows[0][1].ToString().Trim();
                            dr2["QTY_ACPT"] = dr1["QTY_ACPT"].ToString().Trim();
                            dr2["QTY_REJ"] = "0";
                            dr2["QTY_HOLD"] = "0";
                            dr2["QTY_Acpt_Var"] = "0";
                            model[0].dt2.Rows.Add(dr2);
                            if (sgen.Make_decimal(dr1["QTY_Acpt_Var"].ToString().Trim()) != 0)
                            {
                                dr2 = model[0].dt2.NewRow();
                                dr2["item"] = dr1["item"].ToString().Trim();
                                dr2["sno"] = i.ToString();
                                dr2["icode"] = dr1["icode"].ToString().Trim();
                                dr2["INAME"] = dr1["INAME"].ToString().Trim();
                                dr2["PARTNO"] = dr1["PARTNO"].ToString().Trim();
                                dr2["UOM"] = dr1["UOM"].ToString().Trim();
                                dr2["PONO"] = dr1["PONO"].ToString().Trim();
                                dr2["PODATE"] = dr1["PODATE"].ToString().Trim();
                                dr2["LOC"] = dloc.Rows[0][0].ToString().Trim();
                                dr2["LOC_NAME"] = dloc.Rows[0][1].ToString().Trim();
                                dr2["QTY_ACPT"] = "0";
                                dr2["QTY_REJ"] = "0";
                                dr2["QTY_HOLD"] = "0";
                                dr2["QTY_Acpt_Var"] = dr1["QTY_Acpt_Var"].ToString().Trim();
                                model[0].dt2.Rows.Add(dr2);
                            }
                            if (sgen.Make_decimal(dr1["QTY_REJ"].ToString().Trim()) != 0)
                            {
                                dloc = sgen.getdata(userCode, "select param1,location_name('" + clientid_mst + "'||'" + unitid_mst + "'||param1) from controls where trim(id)='000013' and m_module3='invtmain' and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "'");
                                dr2 = model[0].dt2.NewRow();
                                dr2["item"] = dr1["item"].ToString().Trim();
                                dr2["sno"] = i.ToString();
                                dr2["icode"] = dr1["icode"].ToString().Trim();
                                dr2["INAME"] = dr1["INAME"].ToString().Trim();
                                dr2["PARTNO"] = dr1["PARTNO"].ToString().Trim();
                                dr2["UOM"] = dr1["UOM"].ToString().Trim();
                                dr2["PONO"] = dr1["PONO"].ToString().Trim();
                                dr2["PODATE"] = dr1["PODATE"].ToString().Trim();
                                dr2["LOC"] = dloc.Rows[0][0].ToString().Trim();
                                dr2["LOC_NAME"] = dloc.Rows[0][1].ToString().Trim();
                                dr2["QTY_ACPT"] = "0";
                                dr2["QTY_REJ"] = dr1["QTY_REJ"].ToString().Trim();
                                dr2["QTY_HOLD"] = "0";
                                dr2["QTY_Acpt_Var"] = "0";
                                model[0].dt2.Rows.Add(dr2);
                            }
                            if (sgen.Make_decimal(dr1["QTY_HOLD"].ToString().Trim()) != 0)
                            {
                                dloc = sgen.getdata(userCode, "select param1,location_name('" + clientid_mst + "'||'" + unitid_mst + "'||param1) from controls where trim(id)='000014' and m_module3='invtmain' and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "'");
                                dr2 = model[0].dt2.NewRow();
                                dr2["item"] = dr1["item"].ToString().Trim();
                                dr2["sno"] = i.ToString();
                                dr2["icode"] = dr1["icode"].ToString().Trim();
                                dr2["INAME"] = dr1["INAME"].ToString().Trim();
                                dr2["PARTNO"] = dr1["PARTNO"].ToString().Trim();
                                dr2["UOM"] = dr1["UOM"].ToString().Trim();
                                dr2["PONO"] = dr1["PONO"].ToString().Trim();
                                dr2["PODATE"] = dr1["PODATE"].ToString().Trim();
                                dr2["LOC"] = dloc.Rows[0][0].ToString().Trim();
                                dr2["LOC_NAME"] = dloc.Rows[0][1].ToString().Trim();
                                dr2["QTY_ACPT"] = "0";
                                dr2["QTY_REJ"] = "0";
                                dr2["QTY_HOLD"] = dr1["QTY_HOLD"].ToString().Trim();
                                dr2["QTY_Acpt_Var"] = "0";
                                model[0].dt2.Rows.Add(dr2);
                            }
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                        }
                    }
                    catch (Exception ex) { ViewBag.scripCall += "showmsgJS(1, '" + ex.Message.ToString().Replace('\'', ' ') + "', 0);"; }
                }
                else if (command == "Save" || command == "Save & New")
                {
                    foreach (DataRow dr in ds.Tables[0].Rows)
                    {
                        decimal QTY_RCVD = 0, QTY_ACPT = 0, QTY_REJ = 0, QTY_HOLD = 0, QTY_ACPT_VAR = 0,
                            QTY_ACPT2 = 0, QTY_REJ2 = 0, QTY_HOLD2 = 0, QTY_ACPT_VAR2 = 0;
                        string fstr = dr["item"].ToString();
                        string icode = dr["icode"].ToString();
                        string INAME = dr["INAME"].ToString();
                        QTY_RCVD = sgen.Make_decimal(dr["QTY_RCVD"].ToString());
                        QTY_ACPT = sgen.Make_decimal(dr["QTY_ACPT"].ToString());
                        QTY_REJ = sgen.Make_decimal(dr["QTY_REJ"].ToString());
                        QTY_HOLD = sgen.Make_decimal(dr["QTY_HOLD"].ToString());
                        QTY_ACPT_VAR = sgen.Make_decimal(dr["QTY_ACPT_VAR"].ToString());
                        string PONO = dr["PONO"].ToString();
                        string PODATE = dr["PODATE"].ToString();
                        if (QTY_ACPT + QTY_REJ + QTY_HOLD + QTY_ACPT_VAR != QTY_RCVD)
                        {
                            ViewBag.scripCall += "showmsgJS(1, 'Item " + INAME + ", Reveiced Qty is Not mathing with Quality Qty in Grid 1.Please Check', 2);"; ModelState.Clear(); return View(model);
                        }
                        var filtered = model[0].dt2.Select("item='" + fstr + "'");
                        foreach (var row in filtered)
                        {
                            decimal acpt = 0, rej = 0, hold = 0, vari = 0;
                            QTY_ACPT2 += acpt = sgen.Make_decimal(row["QTY_ACPT"].ToString());
                            QTY_REJ2 += rej = sgen.Make_decimal(row["QTY_REJ"].ToString());
                            QTY_HOLD2 += hold = sgen.Make_decimal(row["QTY_HOLD"].ToString());
                            QTY_ACPT_VAR2 += vari = sgen.Make_decimal(row["QTY_ACPT_VAR"].ToString());
                            List<decimal> decs = new List<decimal> { acpt, rej, hold, vari };
                            if (decs.Where(w => w > 0).ToList().Count > 1)
                            {
                                string loc = row["LOC_NAME"].ToString();
                                ViewBag.scripCall += "showmsgJS(1, 'Item " + INAME + " has multiple values on location " + loc + ".Please Check', 2);"; ModelState.Clear(); return View(model);
                            }
                        }
                        if (QTY_ACPT != QTY_ACPT2) { ViewBag.scripCall += "showmsgJS(1, 'Qty_ACPT does not match with Location Grid of Item " + INAME + "', 2);"; return View(model); }
                        if (QTY_REJ != QTY_REJ2) { ViewBag.scripCall += "showmsgJS(1, 'QTY_REJ does not match with Location Grid of Item " + INAME + "', 2);"; return View(model); }
                        if (QTY_HOLD != QTY_HOLD2) { ViewBag.scripCall += "showmsgJS(1, 'QTY_HOLD does not match with Location Grid of Item " + INAME + "', 2);"; return View(model); }
                        if (QTY_ACPT_VAR != QTY_ACPT_VAR2) { ViewBag.scripCall += "showmsgJS(1, 'QTY_ACPT_VAR does not match with Location Grid of Item " + INAME + "', 2);"; return View(model); }
                    }
                    try
                    {
                        Satransaction sat1 = new Satransaction(userCode, MyGuid);
                        var tmodel = model.FirstOrDefault();
                        string currdate = sgen.server_datetime(userCode);
                        if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                        {
                            isedit = true;
                            vch_num = model[0].Col25;
                        }
                        else
                        {
                            isedit = false;
                            mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                            vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        }
                        //dataTable = sgen.getdata(userCode, "select  * from " + model[0].Col10.Trim() + "  where  1=2");
                        dataTable = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                        for (int i = 0; i < model[0].dt2.Rows.Count; i++)
                        {
                            DataRow dr = dataTable.NewRow();
                            dr["rec_id"] = "0";
                            dr["vch_num"] = vch_num;
                            dr["vch_date"] = currdate;
                            dr["mrnno"] = model[0].Col16; ;
                            dr["mrndate"] = sgen.Savedate(model[0].Col17, true);
                            dr["chlno"] = model[0].Col18;
                            dr["chldate"] = sgen.Savedate(model[0].Col19, true);
                            dr["invno"] = model[0].Col20;
                            dr["invdate"] = sgen.Savedate(model[0].Col21, true);
                            dr["acode"] = model[0].Col23; ;
                            dr["icode"] = model[0].dt2.Rows[i]["Icode"].ToString();
                            dr["iname"] = model[0].dt2.Rows[i]["IName"].ToString();
                            dr["cpartno"] = model[0].dt2.Rows[i]["Partno"].ToString();
                            dr["uom"] = model[0].dt2.Rows[i]["Uom"].ToString();
                            dr["btchno"] = model[0].dt2.Rows[i]["Btchno"].ToString();
                            dr["loc"] = model[0].dt2.Rows[i]["Loc"].ToString();
                            dr["locname"] = model[0].dt2.Rows[i]["Loc_Name"].ToString();
                            dr["type"] = "Q" + model[0].Col12;
                            if (!model[0].dt2.Rows[i]["Qty_Acpt"].ToString().Trim().Equals("0"))
                            {
                                dr["qtyin"] = sgen.Make_decimal(model[0].dt2.Rows[i]["Qty_Acpt"].ToString());
                                dr["store"] = "Y";
                            }
                            else if (!model[0].dt2.Rows[i]["Qty_Rej"].ToString().Trim().Equals("0"))
                            {
                                dr["qtyin"] = sgen.Make_decimal(model[0].dt2.Rows[i]["Qty_Rej"].ToString());
                                dr["store"] = "R";
                            }
                            else if (!model[0].dt2.Rows[i]["Qty_Hold"].ToString().Trim().Equals("0"))
                            {
                                dr["qtyin"] = sgen.Make_decimal(model[0].dt2.Rows[i]["Qty_Hold"].ToString());
                                dr["store"] = "H";
                            }
                            else if (!model[0].dt2.Rows[i]["Qty_Acpt_Var"].ToString().Trim().Equals("0"))
                            {
                                dr["type"] = "V" + model[0].Col12;
                                dr["qtyin"] = sgen.Make_decimal(model[0].dt2.Rows[i]["Qty_Acpt_Var"].ToString());
                                dr["store"] = "Y";
                            }
                            else { continue; }
                            dr["pono"] = model[0].dt2.Rows[i]["Pono"].ToString();
                            dr["podate"] = sgen.Savedate(model[0].dt2.Rows[i]["Podate"].ToString(), false);
                            // shiv
                            if (isedit)
                            {
                                dr["client_id"] = model[0].Col1.Trim();
                                dr["client_unit_id"] = model[0].Col2.Trim();
                                dr["ent_by"] = model[0].Col3;
                                dr["ent_date"] = model[0].Col4;
                                dr["edit_by"] = userid_mst;
                                dr["edit_date"] = currdate;
                            }
                            else
                            {
                                dr["client_id"] = clientid_mst;
                                dr["client_unit_id"] = unitid_mst;
                                dr["ent_by"] = userid_mst;
                                dr["ent_date"] = currdate;
                                dr["edit_by"] = "-";
                                dr["edit_date"] = currdate;
                            }
                            dataTable.Rows.Add(dr);
                        }
                        res = sgen.Update_data_uncommit2(userCode, dataTable, model[0].Col10.Trim(), model[0].Col8, isedit, sat1);
                        if (res == true)
                        {
                            //dt = sgen.getdata(userCode, "select * from itransaction where 1=2");
                            dt = cmd_Fun.GetStructure(userCode, "itransaction");
                            for (int k = 0; k < model[0].dt1.Rows.Count; k++)
                            {
                                DataTable dtitrans = new DataTable();
                                //mq2 = model[0].dt1.Rows[k]["client_id"].ToString().Trim() + model[0].dt1.Rows[k]["client_unit_id"].ToString().Trim() + model[0].dt1.Rows[k]["type"].ToString().Trim() + model[0].dt1.Rows[k]["mrnno"].ToString().Trim() +
                                //     model[0].dt1.Rows[k]["mrndate"].ToString().Trim() + model[0].dt1.Rows[k]["icode"].ToString().Trim() + model[0].dt1.Rows[k]["pono"].ToString().Trim() + model[0].dt1.Rows[k]["podate"].ToString().Trim() +
                                //     model[0].dt1.Rows[k]["chlno"].ToString().Trim() + model[0].dt1.Rows[k]["chldate"].ToString().Trim()+ model[0].dt1.Rows[k]["invno"].ToString().Trim()+ model[0].dt1.Rows[k]["invdate"].ToString().Trim();
                                mq2 = model[0].dt1.Rows[k]["item"].ToString().Trim();
                                // shiv = why select *
                                dtitrans = sgen.getdata(userCode, "select * from itransaction where (rec_id)='" + mq2 + "'");
                                dtitrans.Rows[0]["rec_id"] = "0";
                                dtitrans.Rows[0]["client_id"] = clientid_mst;
                                dtitrans.Rows[0]["client_unit_id"] = unitid_mst;
                                dtitrans.Rows[0]["ent_by"] = userid_mst;
                                dtitrans.Rows[0]["ent_date"] = currdate;
                                dtitrans.Rows[0]["edit_by"] = "-";
                                dtitrans.Rows[0]["edit_date"] = currdate;
                                dtitrans.Rows[0]["type"] = "Q" + dtitrans.Rows[0]["type"].ToString();
                                dtitrans.Rows[0]["inspected"] = "Y";
                                if ((sgen.Make_decimal(model[0].dt1.Rows[k]["qty_acpt"].ToString()) + sgen.Make_decimal(model[0].dt1.Rows[k]["qty_acpt_var"].ToString())) > 0)
                                {
                                    dtitrans.Rows[0]["store"] = "Y";
                                    dtitrans.Rows[0]["qtyin"] = sgen.Make_decimal(model[0].dt1.Rows[k]["qty_acpt"].ToString()) + sgen.Make_decimal(model[0].dt1.Rows[k]["qty_acpt_var"].ToString());
                                    dtitrans.AcceptChanges();
                                    ok = sgen.Update_data_uncommit2(userCode, dtitrans, "itransaction", "", false, sat1);
                                }
                                if ((sgen.Make_decimal(model[0].dt1.Rows[k]["qty_hold"].ToString())) > 0)
                                {
                                    dtitrans.Rows[0]["store"] = "H";
                                    dtitrans.Rows[0]["qtyin"] = sgen.Make_decimal(model[0].dt1.Rows[k]["qty_hold"].ToString());
                                    dtitrans.AcceptChanges();
                                    ok = sgen.Update_data_uncommit2(userCode, dtitrans, "itransaction", "", false, sat1);
                                }
                                if ((sgen.Make_decimal(model[0].dt1.Rows[k]["qty_rej"].ToString())) > 0)
                                {
                                    dtitrans.Rows[0]["store"] = "R";
                                    dtitrans.Rows[0]["qtyin"] = sgen.Make_decimal(model[0].dt1.Rows[k]["qty_rej"].ToString());
                                    dtitrans.AcceptChanges();
                                    ok = sgen.Update_data_uncommit2(userCode, dtitrans, "itransaction", "", false, sat1);
                                }
                            }
                            if (ok != true)
                            {
                                sat1.Rollback();
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                                ViewBag.scripCall += "showmsgJS(1, 'Data Not Saved', 0);";
                                ModelState.Clear();
                                return View(model);
                            }
                            sat1.Commit();
                            mq0 = "update itransaction set inspected='Y' where rec_id='" + mq2 + "'";
                            sgen.execute_cmd(userCode, mq0);
                            model = new List<Tmodelmain>();
                            model.Add(new Tmodelmain
                            {
                                Col13 = "Save",
                                Col100 = "Save & New",
                                Col121 = "S",
                                Col122 = "<u>S</u>ave",
                                Col123 = "Save & Ne<u>w</u>",
                                Col9 = tmodel.Col9,
                                Col10 = tmodel.Col10,
                                Col11 = tmodel.Col11,
                                Col12 = tmodel.Col12,
                                Col14 = tmodel.Col14,
                                Col15 = tmodel.Col15,
                                dt1 = null,
                                dt2 = null
                            });
                            if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                            {
                                ViewBag.vnew = "";
                                ViewBag.vedit = "";
                                ViewBag.vsave = "disabled='disabled'";
                                ViewBag.vsavenew = "disabled='disabled'";
                                ViewBag.scripCall = "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                            }
                            else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                            {
                                try
                                {
                                    Make_query("amount_exp", "Select MRN", "NEW", "1", "", "");
                                    ViewBag.scripCall = "callFoo('Select MRN');";
                                    ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                                }
                                catch (Exception ex) { }
                            }
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else
                        {
                            sat1.Rollback();
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            ViewBag.scripCall += "showmsgJS(1, 'Data Not Saved', 0);";
                        }
                    }
                    catch (Exception ex) { ViewBag.scripCall += "showmsgJS(1, '" + ex.Message.ToString().Replace('\'', ' ') + "', 0);"; }
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command == "-")
                {
                    if (model[0].dt1.Rows.Count > 1)
                    {
                        string fstr = model[0].dt1.Rows[sgen.Make_int(hfrow)]["item"].ToString();
                        foreach (var row in model[0].dt2.Select("item='" + fstr + "'"))
                        {
                            model[0].dt2.Rows.Remove(row);
                        }
                        model[0].dt1.Rows.RemoveAt(sgen.Make_int(hfrow));
                    }
                    else { model[0].dt1 = (DataTable)sgen.GetSession(MyGuid, "RQUA1"); }
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
                else if (command == "2+")
                {
                    DataRow drr = model[0].dt2.NewRow();
                    drr.ItemArray = model[0].dt2.Rows[sgen.Make_int(hfrow)].ItemArray;
                    drr["loc"] = "-";
                    drr["LOC_NAME"] = "-";
                    drr["QTY_ACPT"] = "0";
                    drr["QTY_REJ"] = "0";
                    drr["QTY_HOLD"] = "0";
                    drr["QTY_ACPT_VAR"] = "0";
                    drr["REMARK"] = "-";
                    model[0].dt2.Rows.InsertAt(drr, sgen.Make_int(hfrow) + 1);
                    //if (model[0].dt1.Rows.Count > 1) model[0].dt1.Rows.RemoveAt(sgen.Make_int(hfrow));
                    //else { model[0].dt1 = (DataTable)Session["RQUA"]; }
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
                else if (command == "2-")
                {
                    if (model[0].dt2.Rows.Count > 1) model[0].dt2.Rows.RemoveAt(sgen.Make_int(hfrow));
                    else { model[0].dt1 = (DataTable)sgen.GetSession(MyGuid, "RQUA"); }
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region quality batchwise
        public ActionResult qualityn()
        {
            List<Tmodelmain> model = new List<Tmodelmain>();
            Tmodelmain tm1 = new Tmodelmain();
            try
            {
                MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
                FillMst(MyGuid);
                chkRef();
                ViewBag.vnew = "";
                ViewBag.vedit = "";
                ViewBag.vsave = "disabled='disabled'";
                ViewBag.vsavenew = "disabled='disabled'";
                ViewBag.scripCall = "disableForm();";
                mid_mst = EncryptDecrypt.Decrypt(Request.QueryString["mid"]);
                tm1.Col9 = "QUALITY / STORE ALLOCATION";
                tm1.Col10 = "btchtrans";
                tm1.Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
                tm1.Col13 = "Save";
                tm1.Col100 = "Save & New";
                tm1.Col121 = "S";
                tm1.Col122 = "<u>S</u>ave";
                tm1.Col123 = "Save & Ne<u>w</u>";
                tm1.Col14 = mid_mst.Trim();
                tm1.Col15 = MyGuid.Trim();
                tm1.dt1 = null;
                tm1.dt2 = null;
                model.Add(tm1);
            }
            catch (Exception ex) { ViewBag.scripCall = "showmsgJS(1,'" + ex.Message.ToString().Replace('\'', ' ') + "', 0);"; }
            ModelState.Clear();
            return View(model);
        }
        [HttpPost]
        public ActionResult qualityn(List<Tmodelmain> model, string command, string hfrow, string hftable)
        {
            try
            {
                FillMst(model[0].Col15);
                DataSet ds = sgen.setDS(hftable);
                if (ds.Tables.Count > 1)
                {
                    model[0].dt1 = ds.Tables[0];
                    model[0].dt2 = ds.Tables[1];
                }
                var tm = model.FirstOrDefault();
                DataTable dataTable = new DataTable();
                DataTable dt = new DataTable();
                if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Fill Location")
                {
                    try
                    {
                        if (model[0].dt2.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt2.Rows.RemoveAt(0); }
                        var dttt = model[0].dt2.Clone();
                        model[0].dt2 = dttt;
                        int i = 0;
                        foreach (DataRow dr1 in model[0].dt1.Rows)
                        {
                            i++;
                            string icode = dr1["icode"].ToString().Trim();
                            DataTable dloc = sgen.getdata(userCode, "select itb.loc,location_name(itb.client_id||itb.client_unit_id||itb.loc) from itbal itb where " +
                                "trim(itb.icode)='" + icode + "' and itb.type='IT' and itb.client_unit_id='" + unitid_mst + "'");
                            DataRow dr2 = model[0].dt2.NewRow();
                            dr2["item"] = dr1["item"].ToString().Trim();
                            dr2["sno"] = i.ToString();
                            dr2["icode"] = dr1["icode"].ToString().Trim();
                            dr2["INAME"] = dr1["INAME"].ToString().Trim();
                            dr2["PARTNO"] = dr1["PARTNO"].ToString().Trim();
                            dr2["UOM"] = dr1["UOM"].ToString().Trim();
                            dr2["PONO"] = dr1["PONO"].ToString().Trim();
                            dr2["PODATE"] = dr1["PODATE"].ToString().Trim();
                            dr2["LOC"] = dloc.Rows[0][0].ToString().Trim();
                            dr2["LOC_NAME"] = dloc.Rows[0][1].ToString().Trim();
                            dr2["btchno"] = dr1["btchno"].ToString().Trim();
                            dr2["QTY_ACPT"] = dr1["QTY_ACPT"].ToString().Trim();
                            dr2["QTY_REJ"] = "0";
                            dr2["QTY_HOLD"] = "0";
                            dr2["QTY_Acpt_Var"] = "0";
                            model[0].dt2.Rows.Add(dr2);
                            if (sgen.Make_decimal(dr1["QTY_Acpt_Var"].ToString().Trim()) != 0)
                            {
                                dr2 = model[0].dt2.NewRow();
                                dr2["item"] = dr1["item"].ToString().Trim();
                                dr2["sno"] = i.ToString();
                                dr2["icode"] = dr1["icode"].ToString().Trim();
                                dr2["INAME"] = dr1["INAME"].ToString().Trim();
                                dr2["PARTNO"] = dr1["PARTNO"].ToString().Trim();
                                dr2["UOM"] = dr1["UOM"].ToString().Trim();
                                dr2["PONO"] = dr1["PONO"].ToString().Trim();
                                dr2["PODATE"] = dr1["PODATE"].ToString().Trim();
                                dr2["LOC"] = dloc.Rows[0][0].ToString().Trim();
                                dr2["LOC_NAME"] = dloc.Rows[0][1].ToString().Trim();
                                dr2["btchno"] = dr1["btchno"].ToString().Trim();
                                dr2["QTY_ACPT"] = "0";
                                dr2["QTY_REJ"] = "0";
                                dr2["QTY_HOLD"] = "0";
                                dr2["QTY_Acpt_Var"] = dr1["QTY_Acpt_Var"].ToString().Trim();
                                model[0].dt2.Rows.Add(dr2);
                            }
                            if (sgen.Make_decimal(dr1["QTY_REJ"].ToString().Trim()) != 0)
                            {
                                dloc = sgen.getdata(userCode, "select param1,location_name('" + clientid_mst + "'||'" + unitid_mst + "'||param1) from controls " +
                                    "where trim(id)='000013' and m_module3='invtmain' and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "'");
                                dr2 = model[0].dt2.NewRow();
                                dr2["item"] = dr1["item"].ToString().Trim();
                                dr2["sno"] = i.ToString();
                                dr2["icode"] = dr1["icode"].ToString().Trim();
                                dr2["INAME"] = dr1["INAME"].ToString().Trim();
                                dr2["PARTNO"] = dr1["PARTNO"].ToString().Trim();
                                dr2["UOM"] = dr1["UOM"].ToString().Trim();
                                dr2["PONO"] = dr1["PONO"].ToString().Trim();
                                dr2["PODATE"] = dr1["PODATE"].ToString().Trim();
                                dr2["LOC"] = dloc.Rows[0][0].ToString().Trim();
                                dr2["LOC_NAME"] = dloc.Rows[0][1].ToString().Trim();
                                dr2["btchno"] = dr1["btchno"].ToString().Trim();
                                dr2["QTY_ACPT"] = "0";
                                dr2["QTY_REJ"] = dr1["QTY_REJ"].ToString().Trim();
                                dr2["QTY_HOLD"] = "0";
                                dr2["QTY_Acpt_Var"] = "0";
                                model[0].dt2.Rows.Add(dr2);
                            }
                            if (sgen.Make_decimal(dr1["QTY_HOLD"].ToString().Trim()) != 0)
                            {
                                dloc = sgen.getdata(userCode, "select param1,location_name('" + clientid_mst + "'||'" + unitid_mst + "'||param1) from controls " +
                                    "where trim(id)='000014' and m_module3='invtmain' and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "'");
                                dr2 = model[0].dt2.NewRow();
                                dr2["item"] = dr1["item"].ToString().Trim();
                                dr2["sno"] = i.ToString();
                                dr2["icode"] = dr1["icode"].ToString().Trim();
                                dr2["INAME"] = dr1["INAME"].ToString().Trim();
                                dr2["PARTNO"] = dr1["PARTNO"].ToString().Trim();
                                dr2["UOM"] = dr1["UOM"].ToString().Trim();
                                dr2["PONO"] = dr1["PONO"].ToString().Trim();
                                dr2["PODATE"] = dr1["PODATE"].ToString().Trim();
                                dr2["LOC"] = dloc.Rows[0][0].ToString().Trim();
                                dr2["LOC_NAME"] = dloc.Rows[0][1].ToString().Trim();
                                dr2["btchno"] = dr1["btchno"].ToString().Trim();
                                dr2["QTY_ACPT"] = "0";
                                dr2["QTY_REJ"] = "0";
                                dr2["QTY_HOLD"] = dr1["QTY_HOLD"].ToString().Trim();
                                dr2["QTY_Acpt_Var"] = "0";
                                model[0].dt2.Rows.Add(dr2);
                            }
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                        }
                    }
                    catch (Exception ex) { ViewBag.scripCall += "showmsgJS(1, '" + ex.Message.ToString().Replace('\'', ' ') + "', 0);"; }
                }
                else if (command == "Save" || command == "Save & New")
                {
                    foreach (DataRow dr in ds.Tables[0].Rows)
                    {
                        decimal QTY_RCVD = 0, QTY_ACPT = 0, QTY_REJ = 0, QTY_HOLD = 0, QTY_ACPT_VAR = 0,
                            QTY_ACPT2 = 0, QTY_REJ2 = 0, QTY_HOLD2 = 0, QTY_ACPT_VAR2 = 0;
                        string fstr = dr["item"].ToString();
                        string icode = dr["icode"].ToString();
                        string INAME = dr["INAME"].ToString();
                        QTY_RCVD = sgen.Make_decimal(dr["QTY_RCVD"].ToString());
                        QTY_ACPT = sgen.Make_decimal(dr["QTY_ACPT"].ToString());
                        QTY_REJ = sgen.Make_decimal(dr["QTY_REJ"].ToString());
                        QTY_HOLD = sgen.Make_decimal(dr["QTY_HOLD"].ToString());
                        QTY_ACPT_VAR = sgen.Make_decimal(dr["QTY_ACPT_VAR"].ToString());
                        string PONO = dr["PONO"].ToString();
                        string PODATE = dr["PODATE"].ToString();
                        if (QTY_ACPT + QTY_REJ + QTY_HOLD + QTY_ACPT_VAR != QTY_RCVD)
                        {
                            ViewBag.scripCall += "showmsgJS(1, 'Item " + INAME + ", Reveiced Qty is Not mathing with Quality Qty in Grid 1.Please Check', 2);"; ModelState.Clear(); return View(model);
                        }
                        var filtered = model[0].dt2.Select("item='" + fstr + "'");
                        foreach (var row in filtered)
                        {
                            decimal acpt = 0, rej = 0, hold = 0, vari = 0;
                            QTY_ACPT2 += acpt = sgen.Make_decimal(row["QTY_ACPT"].ToString());
                            QTY_REJ2 += rej = sgen.Make_decimal(row["QTY_REJ"].ToString());
                            QTY_HOLD2 += hold = sgen.Make_decimal(row["QTY_HOLD"].ToString());
                            QTY_ACPT_VAR2 += vari = sgen.Make_decimal(row["QTY_ACPT_VAR"].ToString());
                            List<decimal> decs = new List<decimal> { acpt, rej, hold, vari };
                            if (decs.Where(w => w > 0).ToList().Count > 1)
                            {
                                string loc = row["LOC_NAME"].ToString();
                                ViewBag.scripCall += "showmsgJS(1, 'Item " + INAME + " has multiple values on location " + loc + ".Please Check', 2);"; ModelState.Clear(); return View(model);
                            }
                        }
                        if (QTY_ACPT != QTY_ACPT2) { ViewBag.scripCall += "showmsgJS(1, 'Qty_ACPT does not match with Location Grid of Item " + INAME + "', 2);"; return View(model); }
                        if (QTY_REJ != QTY_REJ2) { ViewBag.scripCall += "showmsgJS(1, 'QTY_REJ does not match with Location Grid of Item " + INAME + "', 2);"; return View(model); }
                        if (QTY_HOLD != QTY_HOLD2) { ViewBag.scripCall += "showmsgJS(1, 'QTY_HOLD does not match with Location Grid of Item " + INAME + "', 2);"; return View(model); }
                        if (QTY_ACPT_VAR != QTY_ACPT_VAR2) { ViewBag.scripCall += "showmsgJS(1, 'QTY_ACPT_VAR does not match with Location Grid of Item " + INAME + "', 2);"; return View(model); }
                    }
                    try
                    {
                        Satransaction sat1 = new Satransaction(userCode, MyGuid);
                        var tmodel = model.FirstOrDefault();
                        string currdate = sgen.server_datetime(userCode);
                        if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                        {
                            isedit = true;
                            vch_num = model[0].Col25;
                        }
                        else
                        {
                            isedit = false;
                            mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                            vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        }
                        dataTable = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                        for (int i = 0; i < model[0].dt2.Rows.Count; i++)
                        {
                            #region btchtrans
                            DataRow dr = dataTable.NewRow();
                            dr["rec_id"] = "0";
                            dr["vch_num"] = vch_num;
                            dr["vch_date"] = currdate;
                            dr["mrnno"] = model[0].Col16; ;
                            dr["mrndate"] = sgen.Savedate(model[0].Col17, true);
                            dr["chlno"] = model[0].Col18;
                            dr["chldate"] = sgen.Savedate(model[0].Col19, true);
                            dr["invno"] = model[0].Col20;
                            dr["invdate"] = sgen.Savedate(model[0].Col21, true);
                            dr["acode"] = model[0].Col23; ;
                            dr["icode"] = model[0].dt2.Rows[i]["Icode"].ToString();
                            dr["iname"] = model[0].dt2.Rows[i]["IName"].ToString();
                            dr["cpartno"] = model[0].dt2.Rows[i]["Partno"].ToString();
                            dr["uom"] = model[0].dt2.Rows[i]["Uom"].ToString();
                            dr["btchno"] = model[0].dt2.Rows[i]["Btchno"].ToString();
                            dr["loc"] = model[0].dt2.Rows[i]["Loc"].ToString();
                            dr["locname"] = model[0].dt2.Rows[i]["Loc_Name"].ToString();
                            dr["type"] = "Q" + model[0].Col12;
                            if (!model[0].dt2.Rows[i]["Qty_Acpt"].ToString().Trim().Equals("0"))
                            {
                                dr["qtyin"] = sgen.Make_decimal(model[0].dt2.Rows[i]["Qty_Acpt"].ToString());
                                dr["store"] = "Y";
                            }
                            else if (!model[0].dt2.Rows[i]["Qty_Rej"].ToString().Trim().Equals("0"))
                            {
                                dr["qtyin"] = sgen.Make_decimal(model[0].dt2.Rows[i]["Qty_Rej"].ToString());
                                dr["store"] = "R";
                            }
                            else if (!model[0].dt2.Rows[i]["Qty_Hold"].ToString().Trim().Equals("0"))
                            {
                                dr["qtyin"] = sgen.Make_decimal(model[0].dt2.Rows[i]["Qty_Hold"].ToString());
                                dr["store"] = "H";
                            }
                            else if (!model[0].dt2.Rows[i]["Qty_Acpt_Var"].ToString().Trim().Equals("0"))
                            {
                                dr["type"] = "V" + model[0].Col12;
                                dr["qtyin"] = sgen.Make_decimal(model[0].dt2.Rows[i]["Qty_Acpt_Var"].ToString());
                                dr["store"] = "Y";
                            }
                            else { continue; }
                            dr["pono"] = model[0].dt2.Rows[i]["Pono"].ToString();
                            dr["podate"] = sgen.Savedate(model[0].dt2.Rows[i]["Podate"].ToString(), false);
                            // shiv
                            if (isedit)
                            {
                                dr["client_id"] = model[0].Col1.Trim();
                                dr["client_unit_id"] = model[0].Col2.Trim();
                                dr["ent_by"] = model[0].Col3;
                                dr["ent_date"] = model[0].Col4;
                                dr["edit_by"] = userid_mst;
                                dr["edit_date"] = currdate;
                            }
                            else
                            {
                                dr["client_id"] = clientid_mst;
                                dr["client_unit_id"] = unitid_mst;
                                dr["ent_by"] = userid_mst;
                                dr["ent_date"] = currdate;
                                dr["edit_by"] = "-";
                                dr["edit_date"] = currdate;
                            }
                            dataTable.Rows.Add(dr);
                            #endregion
                        }
                        res = sgen.Update_data_uncommit2(userCode, dataTable, model[0].Col10.Trim(), model[0].Col8, isedit, sat1);
                        if (res == true)
                        {
                            dt = cmd_Fun.GetStructure(userCode, "itransaction");
                            for (int k = 0; k < model[0].dt1.Rows.Count; k++)
                            {
                                DataTable dtitrans = new DataTable();
                                mq2 = model[0].dt1.Rows[k]["item"].ToString().Trim();
                                dtitrans = sgen.getdata(userCode, "select * from itransaction p where (p.client_id||p.client_unit_id||p.icode||to_char(p.vch_date,'yyyymmdd')||p.type||" +
                                    "p.pono||to_char(p.podate,'yyyymmdd')||p.invno||to_char(p.invdate,'yyyymmdd')||p.btchno)='" + mq2 + "'");
                                dtitrans.Rows[0]["rec_id"] = "0";
                                dtitrans.Rows[0]["client_id"] = clientid_mst;
                                dtitrans.Rows[0]["client_unit_id"] = unitid_mst;
                                dtitrans.Rows[0]["ent_by"] = userid_mst;
                                dtitrans.Rows[0]["ent_date"] = currdate;
                                dtitrans.Rows[0]["edit_by"] = "-";
                                dtitrans.Rows[0]["edit_date"] = currdate;
                                dtitrans.Rows[0]["type"] = "Q" + dtitrans.Rows[0]["type"].ToString();
                                dtitrans.Rows[0]["inspected"] = "Y";
                                dtitrans.Rows[0]["btchno"] = model[0].dt1.Rows[k]["btchno"].ToString();
                                if ((sgen.Make_decimal(model[0].dt1.Rows[k]["qty_acpt"].ToString()) + sgen.Make_decimal(model[0].dt1.Rows[k]["qty_acpt_var"].ToString())) > 0)
                                {
                                    dtitrans.Rows[0]["store"] = "Y";
                                    dtitrans.Rows[0]["qtyin"] = sgen.Make_decimal(model[0].dt1.Rows[k]["qty_acpt"].ToString()) + sgen.Make_decimal(model[0].dt1.Rows[k]["qty_acpt_var"].ToString());
                                    dtitrans.AcceptChanges();
                                    ok = sgen.Update_data_uncommit2(userCode, dtitrans, "itransaction", "", false, sat1);
                                }
                                if ((sgen.Make_decimal(model[0].dt1.Rows[k]["qty_hold"].ToString())) > 0)
                                {
                                    dtitrans.Rows[0]["store"] = "H";
                                    dtitrans.Rows[0]["qtyin"] = sgen.Make_decimal(model[0].dt1.Rows[k]["qty_hold"].ToString());
                                    dtitrans.AcceptChanges();
                                    ok = sgen.Update_data_uncommit2(userCode, dtitrans, "itransaction", "", false, sat1);
                                }
                                if ((sgen.Make_decimal(model[0].dt1.Rows[k]["qty_rej"].ToString())) > 0)
                                {
                                    dtitrans.Rows[0]["store"] = "R";
                                    dtitrans.Rows[0]["qtyin"] = sgen.Make_decimal(model[0].dt1.Rows[k]["qty_rej"].ToString());
                                    dtitrans.AcceptChanges();
                                    ok = sgen.Update_data_uncommit2(userCode, dtitrans, "itransaction", "", false, sat1);
                                }
                            }
                            if (ok != true)
                            {
                                sat1.Rollback();
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                                ViewBag.scripCall += "showmsgJS(1, 'Data Not Saved', 0);";
                                ModelState.Clear();
                                return View(model);
                            }
                            sat1.Commit();
                            //mq0 = "update itransaction p set p.inspected='Y' where (p.client_id||p.client_unit_id||p.icode||to_char(p.vch_date,'yyyymmdd')||p.type||" +
                            //        "p.pono||to_char(p.podate,'yyyymmdd')||p.invno||to_char(p.invdate,'yyyymmdd')||p.btchno)='" + mq2 + "'";
                            //sgen.execute_cmd(userCode, mq0);
                            model = new List<Tmodelmain>();
                            model.Add(new Tmodelmain
                            {
                                Col13 = "Save",
                                Col100 = "Save & New",
                                Col121 = "S",
                                Col122 = "<u>S</u>ave",
                                Col123 = "Save & Ne<u>w</u>",
                                Col9 = tmodel.Col9,
                                Col10 = tmodel.Col10,
                                Col11 = tmodel.Col11,
                                Col12 = tmodel.Col12,
                                Col14 = tmodel.Col14,
                                Col15 = tmodel.Col15,
                                dt1 = null,
                                dt2 = null
                            });
                            if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                            {
                                ViewBag.vnew = "";
                                ViewBag.vedit = "";
                                ViewBag.vsave = "disabled='disabled'";
                                ViewBag.vsavenew = "disabled='disabled'";
                                ViewBag.scripCall = "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                            }
                            else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                            {
                                try
                                {
                                    Make_query("amount_exp", "Select MRN", "NEW", "1", "", "");
                                    ViewBag.scripCall = "callFoo('Select MRN');";
                                    ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                                }
                                catch (Exception ex) { }
                            }
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else
                        {
                            sat1.Rollback();
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            ViewBag.scripCall += "showmsgJS(1, 'Data Not Saved', 0);";
                        }
                    }
                    catch (Exception ex) { ViewBag.scripCall += "showmsgJS(1, '" + ex.Message.ToString().Replace('\'', ' ') + "', 0);"; }
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command == "-")
                {
                    if (model[0].dt1.Rows.Count > 1)
                    {
                        string fstr = model[0].dt1.Rows[sgen.Make_int(hfrow)]["item"].ToString();
                        foreach (var row in model[0].dt2.Select("item='" + fstr + "'"))
                        {
                            model[0].dt2.Rows.Remove(row);
                        }
                        model[0].dt1.Rows.RemoveAt(sgen.Make_int(hfrow));
                    }
                    else { model[0].dt1 = (DataTable)sgen.GetSession(MyGuid, "RQUA1"); }
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
                else if (command == "2+")
                {
                    DataRow drr = model[0].dt2.NewRow();
                    drr.ItemArray = model[0].dt2.Rows[sgen.Make_int(hfrow)].ItemArray;
                    drr["loc"] = "-";
                    drr["LOC_NAME"] = "-";
                    drr["BTCHNO"] = "-";
                    drr["QTY_ACPT"] = "0";
                    drr["QTY_REJ"] = "0";
                    drr["QTY_HOLD"] = "0";
                    drr["QTY_ACPT_VAR"] = "0";
                    drr["REMARK"] = "-";
                    model[0].dt2.Rows.InsertAt(drr, sgen.Make_int(hfrow) + 1);
                    //if (model[0].dt1.Rows.Count > 1) model[0].dt1.Rows.RemoveAt(sgen.Make_int(hfrow));
                    //else { model[0].dt1 = (DataTable)Session["RQUA"]; }
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
                else if (command == "2-")
                {
                    if (model[0].dt2.Rows.Count > 1) model[0].dt2.Rows.RemoveAt(sgen.Make_int(hfrow));
                    else { model[0].dt1 = (DataTable)sgen.GetSession(MyGuid, "RQUA"); }
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region phy_verify
        public ActionResult phy_verify()
        {
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            FillMst(MyGuid);
            chkRef();
            ViewBag.vnew = "";
            ViewBag.vedit = "";
            ViewBag.vsave = "disabled='disabled'";
            ViewBag.vsavenew = "disabled='disabled'";
            ViewBag.scripCall = "disableForm();";
            List<Tmodelmain> model = new List<Tmodelmain>();
            Tmodelmain tm1 = new Tmodelmain();
            List<SelectListItem> mod1 = new List<SelectListItem>();
            mid_mst = EncryptDecrypt.Decrypt(Request.QueryString["mid"]);
            tm1.Col9 = "PHYSICAL VERIFICATION";
            tm1.Col10 = "btchtrans";
            tm1.Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            tm1.Col12 = "37";
            tm1.Col13 = "Save";
            tm1.Col100 = "Save & New";
            tm1.Col121 = "S";
            tm1.Col122 = "<u>S</u>ave";
            tm1.Col123 = "Save & Ne<u>w</u>";
            tm1.Col14 = mid_mst.Trim();
            tm1.Col15 = MyGuid.Trim();
            tm1.SelectedItems1 = new string[] { "" };
            tm1.SelectedItems2 = new string[] { "" };
            TempData[MyGuid + "_TList1"] = tm1.TList1 = mod1;
            TempData[MyGuid + "_TList2"] = tm1.TList2 = mod1;
            DataTable dtb = (DataTable)sgen.GetSession(MyGuid, "URIGHTS");
            try
            {
                dtb = dtb.Select("m_id='" + tm1.Col14 + "'").CopyToDataTable();
                if (dtb.Rows.Count > 0)
                {
                    tm1.Col133 = dtb.Rows[0]["btnnew"].ToString();
                    tm1.Col134 = dtb.Rows[0]["btnedit"].ToString();
                    tm1.Col135 = dtb.Rows[0]["btnview"].ToString();
                    // model[0].Col33 = dtb.Rows[0]["btnextend"].ToString();
                }
            }
            catch (Exception ex) { }
            model.Add(tm1);
            return View(model);
        }
        public List<Tmodelmain> new_phy_verify(List<Tmodelmain> model)
        {
            List<SelectListItem> mod1 = new List<SelectListItem>();
            List<SelectListItem> mod2 = new List<SelectListItem>();
            sgen.SetSession(MyGuid, "EDMODE", "N");
            ViewBag.vnew = "disabled='disabled'";
            ViewBag.vedit = "disabled='disabled'";
            ViewBag.vsave = "";
            ViewBag.vsavenew = "";
            ViewBag.scripCall = "enableForm();";
            mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12 + "'" + model[0].Col11.Trim() + "";
            vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
            //sgen.SetSession(MyGuid, "TTYPE", model[0].Col12);
            model[0].Col17 = "1";
            model[0].Col18 = vch_num;
            model[0].Col20 = sgen.server_datetime_local(userCode);
            TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.dept(userCode, clientid_mst, unitid_mst);
            TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2 = cmd_Fun.desig(userCode, unitid_mst);
            model[0].SelectedItems1 = new string[] { "" };
            model[0].SelectedItems2 = new string[] { "" };
            mq = "select '-' as SNo,'-' as ICode,'-' as IName,'-' PartNo,'-' as UOM,'0' as Qty_in_stock,'0' as Qty_Phy,'0' Variation,'-' as Remark,'0' LocCode," +
                "'-' Loc,'0' Pkt_Stk,'0' No_of_pkt from dual";
            DataTable dtn = sgen.getdata(userCode, mq);
            model[0].dt1 = dtn;
            sgen.SetSession(MyGuid, "KDTPHY", dtn);
            return model;
        }
        [HttpPost]
        public ActionResult phy_verify(List<Tmodelmain> model, string command, string hfrow, string hftable, HttpPostedFileBase upd1)
        {
            try
            {
                FillMst(model[0].Col15);
                DataTable dtm = sgen.settable(hftable);
                model[0].dt1 = dtm;
                var tmodel = model.FirstOrDefault();
                #region ddl
                List<SelectListItem> mod1 = new List<SelectListItem>();
                List<SelectListItem> mod2 = new List<SelectListItem>();
                TempData[MyGuid + "_TList1"] = model[0].TList1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                TempData[MyGuid + "_TList2"] = model[0].TList2 = (List<SelectListItem>)TempData[MyGuid + "_TList2"];
                if (tmodel.SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                if (tmodel.SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
                #endregion
                DataTable dt = new DataTable();
                DataTable dataTable = new DataTable();
                if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command == "New")
                {
                    model = new_phy_verify(model);
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {
                    Satransaction sat1 = new Satransaction(userCode, MyGuid);
                    try
                    {
                        if (model[0].Col133 == "N")
                        {
                            ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for save data , please contact your admin', 2);";
                            return View(model);
                        }
                        if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-"))
                        {
                            ViewBag.scripCall += "showmsgJS(1,'Please Select item in grid', 2);";
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            return View(model);
                        }
                        type = model[0].Col12.Trim();
                        string currdate = sgen.server_datetime(userCode);
                        if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                        {
                            isedit = true;
                            vch_num = model[0].Col18;
                        }
                        else
                        {
                            isedit = false;
                            mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                            vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                            model[0].Col18 = vch_num;
                        }
                        string vdate = sgen.Make_date_S(model[0].Col20);
                        dataTable = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                        for (int i = 0; i < model[0].dt1.Rows.Count; i++)
                        {
                            if (isedit)
                            {
                                string fstr = model[0].Col2 + model[0].Col16 + model[0].dt1.Rows[i]["icode"].ToString() + model[0].Col12;
                                mq = "select t.icode,sum(nvl(t.qtyin,0)) Received,sum(nvl(t.qtyout, 0)) Issued,sum(nvl(t.qtyin, 0)) - sum(nvl(t.qtyout, 0)) qtystk " +
                                    "from itransaction t where trim(t.store) = 'Y' and t.client_unit_id='" + unitid_mst + "' and t.icode='" + model[0].dt1.Rows[i]["icode"].ToString() + "' " +
                                    "and (client_unit_id||vch_num||icode||type)<>'" + fstr + "' group by t.icode";
                                mq = sgen.seekval(userCode, mq, "qtystk");
                                int curstk = (sgen.Make_int(mq) + sgen.Make_int(model[0].dt1.Rows[i][9].ToString()));
                                if (curstk.ToString().Trim().Contains("-"))
                                {
                                    ViewBag.vnew = "disabled='disabled'";
                                    ViewBag.vedit = "disabled='disabled'";
                                    ViewBag.vsave = "";
                                    ViewBag.vsavenew = "";
                                    ViewBag.scripCall += "showmsgJS(1, 'You cannot set your stock to negative (-ve)', 2);";
                                    return View(model);
                                }
                            }

                            DataRow dr = dataTable.NewRow();
                            dr["vch_num"] = vch_num;
                            dr["type"] = type;
                            dr["vch_date"] = vdate;
                            dr["deptno"] = model[0].SelectedItems1.FirstOrDefault();
                            dr["desig"] = model[0].SelectedItems2.FirstOrDefault();
                            dr["totremark"] = model[0].Col21;
                            dr["icode"] = model[0].dt1.Rows[i]["Icode"].ToString();
                            dr["iname"] = model[0].dt1.Rows[i]["IName"].ToString();
                            dr["cpartno"] = model[0].dt1.Rows[i]["partno"].ToString();
                            dr["uom"] = model[0].dt1.Rows[i]["UOM"].ToString();
                            dr["qtystk"] = model[0].dt1.Rows[i]["Qty_in_stock"].ToString();
                            dr["qtychl"] = model[0].dt1.Rows[i]["Qty_Phy"].ToString();
                            if (model[0].dt1.Rows[i]["Variation"].ToString().Trim().StartsWith("-")) dr["qtyin"] = model[0].dt1.Rows[i]["Variation"].ToString().Trim().Replace("-", "");
                            else dr["qtyout"] = model[0].dt1.Rows[i]["Variation"].ToString().Trim();
                            //dr["irate"] = model[0].dt1.Rows[i]["Rate"].ToString() == "" ? "0" : model[0].dt1.Rows[i]["Rate"].ToString();
                            //dr["iamount"] = model[0].dt1.Rows[i]["Amount"].ToString() == "" ? "0" : model[0].dt1.Rows[i]["Amount"].ToString();
                            dr["iremark"] = model[0].dt1.Rows[i]["Remark"].ToString();
                            dr["loc"] = model[0].dt1.Rows[i]["LocCode"].ToString();
                            dr["locname"] = model[0].dt1.Rows[i]["Loc"].ToString();
                            dr["pktstk"] = model[0].dt1.Rows[i]["Pkt_Stk"].ToString();
                            dr["pktno"] = model[0].dt1.Rows[i]["No_of_pkt"].ToString() == "" ? "0" : model[0].dt1.Rows[i]["No_of_pkt"].ToString();
                            dr["store"] = "Y";
                            dr["rec_id"] = "0";
                            // shiv
                            if (isedit)
                            {
                                dr["client_id"] = model[0].Col1.Trim();
                                dr["client_unit_id"] = model[0].Col2.Trim();
                                dr["ent_by"] = model[0].Col3;
                                dr["ent_date"] = model[0].Col4;
                                dr["edit_by"] = userid_mst;
                                dr["edit_date"] = currdate;
                            }
                            else
                            {
                                dr["client_id"] = clientid_mst;
                                dr["client_unit_id"] = unitid_mst;
                                dr["ent_by"] = userid_mst;
                                dr["ent_date"] = currdate;
                                dr["edit_by"] = "-";
                                dr["edit_date"] = currdate;
                            }
                            dataTable.Rows.Add(dr);
                        }
                        res = sgen.Update_data_uncommit2(userCode, dataTable, model[0].Col10.Trim(), model[0].Col8, isedit, sat1);
                        if (res == true)
                        {
                            dataTable.AcceptChanges();
                            DataTable dtbtch = new DataTable();
                            dtbtch = Btch_GroupBy(dataTable);
                            dt = cmd_Fun.GetStructure(userCode, "itransaction");
                            for (int i = 0; i < dtbtch.Rows.Count; i++)
                            {
                                DataRow dr = dt.NewRow();
                                dr["vch_num"] = dtbtch.Rows[i]["vch_num"].ToString();
                                dr["type"] = dtbtch.Rows[i]["type"].ToString();
                                dr["vch_date"] = dtbtch.Rows[i]["vch_date"].ToString();
                                dr["deptno"] = dtbtch.Rows[i]["deptno"].ToString();
                                dr["desig"] = dtbtch.Rows[i]["desig"].ToString();
                                dr["totremark"] = dtbtch.Rows[i]["totremark"].ToString();
                                dr["icode"] = dtbtch.Rows[i]["icode"].ToString();
                                dr["iname"] = dtbtch.Rows[i]["iname"].ToString();
                                dr["cpartno"] = dtbtch.Rows[i]["cpartno"].ToString();
                                dr["uom"] = dtbtch.Rows[i]["uom"].ToString();
                                dr["qtystk"] = dtbtch.Rows[i]["qtystk"].ToString();
                                dr["qtychl"] = dtbtch.Rows[i]["qtychl"].ToString();
                                dr["qtyin"] = dtbtch.Rows[i]["qtyin"].ToString();
                                dr["qtyout"] = dtbtch.Rows[i]["qtyout"].ToString();
                                //dr["irate"] = dtbtch.Rows[i]["irate"].ToString();
                                //dr["iamount"] = dtbtch.Rows[i]["iamount"].ToString();                                
                                dr["pktstk"] = dtbtch.Rows[i]["pktstk"].ToString();
                                dr["pktno"] = dtbtch.Rows[i]["pktno"].ToString();
                                dr["store"] = "Y";
                                dr["rec_id"] = "0";
                                // shiv
                                if (isedit)
                                {
                                    dr["client_id"] = model[0].Col1.Trim();
                                    dr["client_unit_id"] = model[0].Col2.Trim();
                                    dr["ent_by"] = model[0].Col3;
                                    dr["ent_date"] = model[0].Col4;
                                    dr["edit_by"] = userid_mst;
                                    dr["edit_date"] = currdate;
                                }
                                else
                                {
                                    dr["client_id"] = clientid_mst;
                                    dr["client_unit_id"] = unitid_mst;
                                    dr["ent_by"] = userid_mst;
                                    dr["ent_date"] = currdate;
                                    dr["edit_by"] = "-";
                                    dr["edit_date"] = currdate;
                                }
                                dt.Rows.Add(dr);
                            }
                            ok = sgen.Update_data_uncommit2(userCode, dt, "itransaction", "", false, sat1);
                            if (ok != true)
                            {
                                sat1.Rollback();
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                                ViewBag.scripCall += "showmsgJS(1, 'Data Not Saved', 0);";
                                ModelState.Clear();
                                return View(model);
                            }
                            //ViewBag.vnew = "";
                            //ViewBag.vedit = "";
                            //ViewBag.vsave = "disabled='disabled'";
                            //ViewBag.vsavenew = "disabled='disabled'";
                            sat1.Commit();
                            dt = (DataTable)sgen.GetSession(MyGuid, "KDTPHY");
                            model = new List<Tmodelmain>();
                            model.Add(new Tmodelmain
                            {
                                Col9 = tmodel.Col9,
                                Col10 = tmodel.Col10,
                                Col11 = tmodel.Col11,
                                Col12 = tmodel.Col12,
                                Col13 = "Save",
                                Col14 = tmodel.Col14,
                                Col15 = tmodel.Col15,
                                Col100 = "Save & New",
                                Col121 = "S",
                                Col122 = "<u>S</u>ave",
                                Col123 = "Save & Ne<u>w</u>",
                                TList1 = mod1,
                                TList2 = mod2,
                                SelectedItems1 = new string[] { "" },
                                SelectedItems2 = new string[] { "" },
                                dt1 = null
                            });
                            if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                            {
                                ViewBag.vnew = "";
                                ViewBag.vedit = "";
                                ViewBag.vsave = "disabled='disabled'";
                                ViewBag.vsavenew = "disabled='disabled'";
                                ViewBag.vsavenew = "disabled='disabled'";
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                            }
                            else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                            {
                                try
                                {
                                    model = new_phy_verify(model);
                                    ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                                }
                                catch (Exception ex) { }
                            }
                            //ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else
                        {
                            sat1.Rollback();
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            ViewBag.scripCall += "showmsgJS(1, 'Data Not Saved', 0);";
                        }
                    }
                    catch (Exception ex)
                    {
                        ViewBag.scripCall = "showmsgJS(1,'" + ex.Message.ToString().Replace('\'', ' ') + "', 0);"; sat1.Rollback();
                    }
                }
                else if (command == "Import")
                {
                    HttpPostedFileBase file1 = upd1;
                    DataTable dti = new DataTable();
                    if (file1.ContentLength > 1)
                    {
                        string ext = Path.GetExtension(file1.FileName).ToLower();
                        if (ext == ".csv")
                        {
                            string filesavepath = AppDomain.CurrentDomain.BaseDirectory + "\\Uploads\\" + cg_com_name.Replace(" ", "")
                                + "\\file" + DateTime.Now.ToString("ddMMyyyyhhmmfff") + ext;
                            file1.SaveAs(filesavepath);
                            // Read sample data from CSV file
                            int i = 0;
                            using (CsvFileReader reader = new CsvFileReader(filesavepath))
                            {
                                CsvRow row = new CsvRow();
                                while (reader.ReadRow(row))
                                {
                                    DataRow dr = dt.NewRow();
                                    for (int c = 0; c < row.Count; c++)
                                    {
                                        if (i == 0) { dt.Columns.Add(row[c].ToString()); }
                                        else { dr[c] = row[c].ToString(); }
                                        //if (c > dt.Columns.Count) break;                                                                 
                                    }
                                    i++;
                                    dt.Rows.Add(dr);
                                }
                            }
                        }
                        string icodes = "";
                        try
                        {
                            dt.Rows[0].Delete();
                            for (int k = 0; k < dt.Rows.Count; k++)
                            {
                                mq = sgen.seekval(userCode, "select icode from item where icode='" + dt.Rows[k]["icode"].ToString() + "' and type='IT' and " +
                                    "find_in_set(client_unit_id,'" + unitid_mst + "')=1", "icode");
                                if (mq.Trim() == "0")
                                {
                                    ViewBag.vnew = "disabled='disabled'";
                                    ViewBag.vedit = "disabled='disabled'";
                                    ViewBag.vsave = "";
                                    ViewBag.vsavenew = "";
                                    ViewBag.scripCall += "showmsgJS(1,'Icode: " + dt.Rows[k]["icode"].ToString() + " not found,please check.', 0);";
                                    ModelState.Clear();
                                    return View(model);
                                }
                                else
                                {
                                    icodes = icodes + mq + ",";
                                }
                            }
                            //if (model[0].Col12 == "36")
                            //{
                            //    mq = "select '0' Sno,it.icode,it.iname,it.cpartno partno,um.master_name uom,s.closing qty_in_stock,'0' as Qty_in,'0' Qty_out," +
                            //        "'0' rate,'0' amount,'-' remark,itb.loc loccode,location_name(itb.client_id||itb.client_unit_id||itb.loc) loc,'0' no_of_pkt from item it " +
                            //   "inner join itbal itb on find_in_set(itb.client_unit_id,'" + unitid_mst + "')=1 and itb.type='IT' and  it.icode=itb.icode " +
                            //   "inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,'" + unitid_mst + "')=1 " +
                            //   "left join (select (nvl(t.client_unit_id,'0')||i.icode) as fstr,i.icode,i.iname as Item_Name,sum(nvl(t.qtyin,0))-sum(nvl(t.qtyout,0)) as closing  from item i " +
                            //   "left join itransaction t on t.icode=i.icode and T.client_unit_id='" + unitid_mst + "' where " +
                            //   "length(i.icode)>4 group by t.client_unit_id,i.icode,i.iname order by i.icode) s on it.icode=s.icode " +
                            //   "where it.type='IT' and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 and " +
                            //   "it.icode in ('" + icodes.TrimEnd(',').Replace(",", "','").Trim() + "')";
                            //}
                            //else if (model[0].Col12 == "37")
                            //{
                            //mq = "select '0' Sno,it.icode,it.iname,it.cpartno partno,um.master_name uom,nvl(s.closing, 0) qty_in_stock,'0' as Qty_Phy,'0' Variation," +
                            //    "'0' rate,'0' amount,'-' remark,nvl(s.loc, itb.loc) loccode,location_name(it.client_id || it.client_unit_id || nvl(s.loc, itb.loc)) loc," +
                            //    "'0' No_of_pkt from item it " +
                            //    "inner join itbal itb on it.icode = itb.icode and itb.type = 'IT' and find_in_set(itb.client_unit_id, it.client_unit_id)=1 " +
                            //    "inner join master_setting um on um.master_id = it.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, it.client_unit_id)= 1 " +
                            //    "left join (select (nvl(t.client_unit_id,'0')|| i.icode) as fstr,i.icode,i.iname as Item_Name ,sum(nvl(t.qtyin, 0)) - sum(nvl(t.qtyout, 0)) closing," +
                            //    "sum(nvl(t.pktno, 0)) pktno,t.loc from item i " +
                            //    "inner join(select icode, type, client_id, loc, client_unit_id, qtyin, qtyout, (case when substr(type, 1, 1) in ('0', '1') then " +
                            //    "pktno when type = '36' then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end) pktno from btchtrans) t on " +
                            //    "t.icode = i.icode and t.client_unit_id = i.client_unit_id where length(i.icode)> 4 group by t.client_unit_id,i.icode,i.iname,t.loc order by i.icode) s " +
                            //    "on it.icode = s.icode where it.type = 'IT' and " +
                            //    "find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 and it.icode in ('" + icodes.TrimEnd(',').Replace(",", "','").Trim() + "')";

                            mq = "select '0' Sno,it.icode,it.iname,it.cpartno partno,um.master_name uom,nvl(s.closing, 0) qty_in_stock,'0' as Qty_Phy,'0' Variation," +
                             "'-' remark,nvl(s.loc, itb.loc) loccode,location_name(it.client_id || it.client_unit_id || nvl(s.loc, itb.loc)) loc,nvl(s.pktno, 0) Pkt_Stk," +
                             "'0' No_of_pkt from item it " +
                             "inner join itbal itb on it.icode = itb.icode and itb.type = 'IT' and find_in_set(itb.client_unit_id, it.client_unit_id)=1 " +
                             "inner join master_setting um on um.master_id = it.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, it.client_unit_id)= 1 " +
                             "left join(select (nvl(t.client_unit_id,'0')|| i.icode) as fstr,i.icode,i.iname as Item_Name ,sum(nvl(t.qtyin, 0)) - sum(nvl(t.qtyout, 0)) closing," +
                             "sum(nvl(t.pktno, 0)) pktno,t.loc from item i " +
                             "inner join(select icode, type, client_id, loc, client_unit_id, qtyin, qtyout, (case when substr(type, 1, 1) in ('0', '1') then " +
                             "pktno when type = '36' then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end) pktno from btchtrans) t on " +
                             "t.icode = i.icode and t.client_unit_id = i.client_unit_id where length(i.icode)> 4 group by t.client_unit_id,i.icode,i.iname,t.loc order by i.icode) s " +
                             "on it.icode = s.icode where it.type = 'IT' and " +
                             "find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 and it.icode in ('" + icodes.TrimEnd(',').Replace(",", "','").Trim() + "')";

                            //}
                            DataTable dt2 = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                //if (model[0].Col12.Equals("36"))
                                //{
                                //    var results = from tblxl in dt.AsEnumerable()
                                //                  join tblitm in dt2.AsEnumerable() on tblxl["icode"] equals tblitm["icode"]
                                //                  select new
                                //                  {
                                //                      sno = tblitm["sno"],
                                //                      icode = tblxl["icode"],
                                //                      iname = tblitm["iname"],
                                //                      partno = tblitm["partno"],
                                //                      uom = tblitm["uom"],
                                //                      qty_in_stock = tblitm["qty_in_stock"],
                                //                      qty_in = tblxl["qty_in"],
                                //                      qty_out = tblitm["qty_out"],
                                //                      rate = tblxl["rate"],
                                //                      amount = tblxl["amount"],
                                //                      remark = tblxl["remark"],
                                //                      loccode = tblitm["loccode"],
                                //                      loc = tblitm["loc"],
                                //                      no_of_pkt = tblitm["no_of_pkt"]
                                //                  };
                                //    results.ToList();
                                //    DataTable dtk = sgen.ToDataTable(results.ToList());
                                //    model[0].dt1 = dtk;
                                //}
                                //else
                                //{
                                var results = from tblxl in dt.AsEnumerable()
                                              join tblitm in dt2.AsEnumerable() on tblxl["icode"] equals tblitm["icode"]
                                              select new
                                              {
                                                  sno = tblitm["sno"],
                                                  icode = tblxl["icode"],
                                                  iname = tblitm["iname"],
                                                  partno = tblitm["partno"],
                                                  uom = tblitm["uom"],
                                                  qty_in_stock = tblitm["qty_in_stock"],
                                                  qty_phy = tblxl["qty_phy"],
                                                  variation = tblitm["variation"],
                                                  //rate = tblxl["rate"],
                                                  //amount = tblxl["amount"],
                                                  remark = tblxl["remark"],
                                                  loccode = tblitm["loccode"],
                                                  loc = tblitm["loc"],
                                                  Pkt_Stk = tblitm["Pkt_Stk"],
                                                  no_of_pkt = tblxl["no_of_pkt"]
                                              };
                                results.ToList();
                                DataTable dtk = sgen.ToDataTable(results.ToList());
                                model[0].dt1 = dtk;
                                //}
                                ViewBag.vsave = "";
                                ViewBag.vimport = "";
                            }
                        }
                        catch (Exception err) { sgen.showmsg(1, err.Message.ToString(), 0); }
                    }
                }
                else if (command == "-")
                {
                    if (model[0].dt1.Rows.Count > 1) model[0].dt1.Rows.RemoveAt(sgen.Make_int(hfrow));
                    else
                    {
                        model[0].dt1 = (DataTable)sgen.GetSession(MyGuid, "KDTPHY");
                    }
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        private static DataTable Btch_GroupBy(DataTable BtchTable)
        {
            DataTable dtbtch;
            var t1 = BtchTable.AsEnumerable().GroupBy(k => new
            {
                client_id = k.Field<string>("client_id"),
                client_unit_id = k.Field<string>("client_unit_id"),
                ent_by = k.Field<string>("ent_by"),
                ent_date = k.Field<DateTime>("ent_date"),
                edit_by = k.Field<string>("edit_by"),
                edit_date = k.Field<DateTime>("edit_date"),
                vch_num = k.Field<string>("vch_num"),
                vch_date = k.Field<DateTime>("vch_date"),
                type = k.Field<string>("type"),
                mrnno = k.Field<string>("mrnno"),
                mrndate = k.Field<DateTime>("mrndate"),
                chlno = k.Field<string>("chlno"),
                chldate = k.Field<DateTime>("chldate"),
                invno = k.Field<string>("invno"),
                invdate = k.Field<DateTime>("invdate"),
                pono = k.Field<string>("pono"),
                podate = k.Field<DateTime>("podate"),
                acode = k.Field<string>("acode"),
                icode = k.Field<string>("icode"),
                iname = k.Field<string>("iname"),
                cpartno = k.Field<string>("cpartno"),
                uom = k.Field<string>("uom"),
                deptno = k.Field<string>("deptno"),
                desig = k.Field<string>("desig"),
                totremark = k.Field<string>("totremark"),
            });
            sgenFun sgen = new sgenFun(MyGuid);
            var t2 = t1.Select(c =>
            {
                var row = BtchTable.NewRow();
                row["client_id"] = c.Key.client_id;
                row["client_unit_id"] = c.Key.client_unit_id;
                row["ent_by"] = c.Key.ent_by;
                row["ent_date"] = c.Key.ent_date;
                row["edit_by"] = c.Key.edit_by;
                row["edit_date"] = c.Key.edit_date;
                row["vch_num"] = c.Key.vch_num;
                row["vch_date"] = c.Key.vch_date;
                row["type"] = c.Key.type;
                row["mrnno"] = c.Key.mrnno;
                row["mrndate"] = c.Key.mrndate;
                row["chlno"] = c.Key.chlno;
                row["chldate"] = c.Key.chldate;
                row["invno"] = c.Key.invno;
                row["chldate"] = c.Key.chldate;
                row["pono"] = c.Key.pono;
                row["podate"] = c.Key.podate;
                row["acode"] = c.Key.acode;
                row["icode"] = c.Key.icode;
                row["iname"] = c.Key.iname;
                row["cpartno"] = c.Key.cpartno;
                row["uom"] = c.Key.uom;
                row["deptno"] = c.Key.deptno;
                row["desig"] = c.Key.desig;
                row["totremark"] = c.Key.totremark;
                row["qtystk"] = c.Sum(k => sgen.Make_decimal(k.Field<object>("qtystk")));
                row["qtyin"] = c.Sum(k => sgen.Make_decimal(k.Field<object>("qtyin")));
                row["qtyout"] = c.Sum(k => sgen.Make_decimal(k.Field<object>("qtyout")));
                row["qtyrcvd"] = c.Sum(k => sgen.Make_decimal(k.Field<object>("qtyrcvd")));
                row["pktstk"] = c.Sum(k => sgen.Make_decimal(k.Field<object>("pktstk")));
                row["pktno"] = c.Sum(k => sgen.Make_decimal(k.Field<object>("pktno")));
                return row;
            });
            dtbtch = t2.CopyToDataTable();
            return dtbtch;
        }
        [HttpGet]
        public FileResult temp(List<Tmodelmain> model)
        {
            FillMst();
            model = (List<Tmodelmain>)sgen.GetSession(MyGuid, "model");
            //if (model[0].Col12 == "36")
            //{
            //    mq = "SELECT '' Icode,'0' Qty_in,'0' Rate,'0' Amount,'' Remark,'0' No_Of_Pkt from Dual";
            //}
            //else if (model[0].Col12 == "37")
            //{
            mq = "SELECT '' Icode,'' Qty_phy,'' Remark,'0' No_Of_Pkt from Dual";
            //}
            DataTable dtl = new DataTable();
            dtl = sgen.getdata(userCode, mq);
            string cg_com_name = sgen.GetCookie(MyGuid, "cg_com_name");
            Byte[] fileBytes = sgen.Exp_to_csv_new(dtl, "phyopitem", cg_com_name);
            return File(fileBytes, System.Net.Mime.MediaTypeNames.Application.Octet, "phyopitem");
        }
        #endregion
        #region phy_verifyn
        public ActionResult phy_verifyn()
        {
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            FillMst(MyGuid);
            chkRef();
            ViewBag.vnew = "";
            ViewBag.vedit = "";
            ViewBag.vsave = "disabled='disabled'";
            ViewBag.vsavenew = "disabled='disabled'";
            ViewBag.scripCall = "disableForm();";
            List<Tmodelmain> model = new List<Tmodelmain>();
            Tmodelmain tm1 = new Tmodelmain();
            List<SelectListItem> mod1 = new List<SelectListItem>();
            mid_mst = EncryptDecrypt.Decrypt(Request.QueryString["mid"]);
            tm1.Col9 = "PHYSICAL VERIFICATION";
            tm1.Col10 = "btchtrans";
            tm1.Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            tm1.Col12 = "37";
            tm1.Col13 = "Save";
            tm1.Col100 = "Save & New";
            tm1.Col121 = "S";
            tm1.Col122 = "<u>S</u>ave";
            tm1.Col123 = "Save & Ne<u>w</u>";
            tm1.Col14 = mid_mst.Trim();
            tm1.Col15 = MyGuid.Trim();
            tm1.SelectedItems1 = new string[] { "" };
            tm1.SelectedItems2 = new string[] { "" };
            TempData[MyGuid + "_TList1"] = tm1.TList1 = mod1;
            TempData[MyGuid + "_TList2"] = tm1.TList2 = mod1;
            DataTable dtb = (DataTable)sgen.GetSession(MyGuid, "URIGHTS");
            try
            {
                dtb = dtb.Select("m_id='" + tm1.Col14 + "'").CopyToDataTable();
                if (dtb.Rows.Count > 0)
                {
                    tm1.Col133 = dtb.Rows[0]["btnnew"].ToString();
                    tm1.Col134 = dtb.Rows[0]["btnedit"].ToString();
                    tm1.Col135 = dtb.Rows[0]["btnview"].ToString();
                }
            }
            catch (Exception ex) { }
            model.Add(tm1);
            return View(model);
        }
        public List<Tmodelmain> new_phy_verifyn(List<Tmodelmain> model)
        {
            List<SelectListItem> mod1 = new List<SelectListItem>();
            List<SelectListItem> mod2 = new List<SelectListItem>();
            sgen.SetSession(MyGuid, "EDMODE", "N");
            ViewBag.vnew = "disabled='disabled'";
            ViewBag.vedit = "disabled='disabled'";
            ViewBag.vsave = "";
            ViewBag.vsavenew = "";
            ViewBag.scripCall = "enableForm();";
            mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12 + "'" + model[0].Col11.Trim() + "";
            vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
            model[0].Col17 = "1";
            model[0].Col18 = vch_num;
            model[0].Col20 = sgen.server_datetime_local(userCode);
            TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.dept(userCode, clientid_mst, unitid_mst);
            TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2 = cmd_Fun.desig(userCode, unitid_mst);
            model[0].SelectedItems1 = new string[] { "" };
            model[0].SelectedItems2 = new string[] { "" };
            mq = "select '-' as SNo,'-' as ICode,'-' as IName,'-' PartNo,'-' as UOM,'0' as Qty_in_stock,'0' as Qty_Phy,'0' Variation,'-' as Remark,'0' LocCode," +
                "'-' Loc,'0' Pkt_Stk,'0' No_of_pkt,'0' batchno from dual";
            DataTable dtn = sgen.getdata(userCode, mq);
            model[0].dt1 = dtn;
            sgen.SetSession(MyGuid, "KDTPHYN", dtn);
            return model;
        }
        [HttpPost]
        public ActionResult phy_verifyn(List<Tmodelmain> model, string command, string hfrow, string hftable, HttpPostedFileBase upd1)
        {
            try
            {
                FillMst(model[0].Col15);
                DataTable dtm = sgen.settable(hftable);
                model[0].dt1 = dtm;
                var tmodel = model.FirstOrDefault();
                #region ddl
                List<SelectListItem> mod1 = new List<SelectListItem>();
                List<SelectListItem> mod2 = new List<SelectListItem>();
                TempData[MyGuid + "_TList1"] = model[0].TList1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                TempData[MyGuid + "_TList2"] = model[0].TList2 = (List<SelectListItem>)TempData[MyGuid + "_TList2"];
                if (tmodel.SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                if (tmodel.SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
                #endregion
                DataTable dt = new DataTable();
                DataTable dataTable = new DataTable();
                if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command == "New")
                {
                    model = new_phy_verifyn(model);
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {
                    Satransaction sat1 = new Satransaction(userCode, MyGuid);
                    try
                    {
                        if (model[0].Col133 == "N")
                        {
                            ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for save data , please contact your admin', 2);";
                            return View(model);
                        }
                        if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-"))
                        {
                            ViewBag.scripCall += "showmsgJS(1,'Please Select item in grid', 2);";
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            return View(model);
                        }
                        type = model[0].Col12.Trim();
                        string currdate = sgen.server_datetime(userCode);
                        if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                        {
                            isedit = true;
                            vch_num = model[0].Col18;
                        }
                        else
                        {
                            isedit = false;
                            mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                            vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                            model[0].Col18 = vch_num;
                        }
                        string vdate = sgen.Make_date_S(model[0].Col20);
                        dataTable = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                        for (int i = 0; i < model[0].dt1.Rows.Count; i++)
                        {
                            if (isedit)
                            {
                                string fstr = model[0].Col2 + model[0].Col16 + model[0].dt1.Rows[i]["icode"].ToString() + model[0].Col12;
                                mq = "select t.icode,sum(nvl(t.qtyin,0)) Received,sum(nvl(t.qtyout, 0)) Issued,sum(nvl(t.qtyin, 0)) - sum(nvl(t.qtyout, 0)) qtystk " +
                                    "from itransaction t where trim(t.store) = 'Y' and t.client_unit_id='" + unitid_mst + "' and t.icode='" + model[0].dt1.Rows[i]["icode"].ToString() + "' " +
                                    "and (client_unit_id||vch_num||icode||type)<>'" + fstr + "' group by t.icode";
                                mq = sgen.seekval(userCode, mq, "qtystk");
                                int curstk = (sgen.Make_int(mq) + sgen.Make_int(model[0].dt1.Rows[i][9].ToString()));
                                if (curstk.ToString().Trim().Contains("-"))
                                {
                                    ViewBag.vnew = "disabled='disabled'";
                                    ViewBag.vedit = "disabled='disabled'";
                                    ViewBag.vsave = "";
                                    ViewBag.vsavenew = "";
                                    ViewBag.scripCall += "showmsgJS(1, 'You cannot set your stock to negative (-ve)', 2);";
                                    return View(model);
                                }
                            }

                            DataRow dr = dataTable.NewRow();
                            dr["vch_num"] = vch_num;
                            dr["type"] = type;
                            dr["vch_date"] = vdate;
                            dr["deptno"] = model[0].SelectedItems1.FirstOrDefault();
                            dr["desig"] = model[0].SelectedItems2.FirstOrDefault();
                            dr["totremark"] = model[0].Col21;
                            dr["icode"] = model[0].dt1.Rows[i]["Icode"].ToString();
                            dr["iname"] = model[0].dt1.Rows[i]["IName"].ToString();
                            dr["cpartno"] = model[0].dt1.Rows[i]["partno"].ToString();
                            dr["uom"] = model[0].dt1.Rows[i]["UOM"].ToString();
                            dr["qtystk"] = model[0].dt1.Rows[i]["Qty_in_stock"].ToString();
                            dr["qtychl"] = model[0].dt1.Rows[i]["Qty_Phy"].ToString();
                            if (model[0].dt1.Rows[i]["Variation"].ToString().Trim().StartsWith("-")) dr["qtyin"] = model[0].dt1.Rows[i]["Variation"].ToString().Trim().Replace("-", "");
                            else dr["qtyout"] = model[0].dt1.Rows[i]["Variation"].ToString().Trim();
                            dr["iremark"] = model[0].dt1.Rows[i]["Remark"].ToString();
                            dr["loc"] = model[0].dt1.Rows[i]["LocCode"].ToString();
                            dr["locname"] = model[0].dt1.Rows[i]["Loc"].ToString();
                            dr["pktstk"] = model[0].dt1.Rows[i]["Pkt_Stk"].ToString();
                            dr["pktno"] = model[0].dt1.Rows[i]["No_of_pkt"].ToString() == "" ? "0" : model[0].dt1.Rows[i]["No_of_pkt"].ToString();
                            dr["btchno"] = model[0].dt1.Rows[i]["batchno"].ToString();
                            dr["store"] = "Y";
                            dr["rec_id"] = "0";
                            // shiv
                            if (isedit)
                            {
                                dr["client_id"] = model[0].Col1.Trim();
                                dr["client_unit_id"] = model[0].Col2.Trim();
                                dr["ent_by"] = model[0].Col3;
                                dr["ent_date"] = model[0].Col4;
                                dr["edit_by"] = userid_mst;
                                dr["edit_date"] = currdate;
                            }
                            else
                            {
                                dr["client_id"] = clientid_mst;
                                dr["client_unit_id"] = unitid_mst;
                                dr["ent_by"] = userid_mst;
                                dr["ent_date"] = currdate;
                                dr["edit_by"] = "-";
                                dr["edit_date"] = currdate;
                            }
                            dataTable.Rows.Add(dr);
                        }
                        res = sgen.Update_data_uncommit2(userCode, dataTable, model[0].Col10.Trim(), model[0].Col8, isedit, sat1);
                        if (res == true)
                        {
                            dataTable.AcceptChanges();
                            DataTable dtbtch = new DataTable();
                            dtbtch = Btch_GroupBybatch(dataTable);
                            dt = cmd_Fun.GetStructure(userCode, "itransaction");
                            for (int i = 0; i < dtbtch.Rows.Count; i++)
                            {
                                DataRow dr = dt.NewRow();
                                dr["vch_num"] = dtbtch.Rows[i]["vch_num"].ToString();
                                dr["type"] = dtbtch.Rows[i]["type"].ToString();
                                dr["vch_date"] = dtbtch.Rows[i]["vch_date"].ToString();
                                dr["deptno"] = dtbtch.Rows[i]["deptno"].ToString();
                                dr["desig"] = dtbtch.Rows[i]["desig"].ToString();
                                dr["totremark"] = dtbtch.Rows[i]["totremark"].ToString();
                                dr["icode"] = dtbtch.Rows[i]["icode"].ToString();
                                dr["iname"] = dtbtch.Rows[i]["iname"].ToString();
                                dr["cpartno"] = dtbtch.Rows[i]["cpartno"].ToString();
                                dr["uom"] = dtbtch.Rows[i]["uom"].ToString();
                                dr["qtystk"] = dtbtch.Rows[i]["qtystk"].ToString();
                                dr["qtychl"] = dtbtch.Rows[i]["qtychl"].ToString();
                                dr["qtyin"] = dtbtch.Rows[i]["qtyin"].ToString();
                                dr["qtyout"] = dtbtch.Rows[i]["qtyout"].ToString();
                                dr["pktstk"] = dtbtch.Rows[i]["pktstk"].ToString();
                                dr["pktno"] = dtbtch.Rows[i]["pktno"].ToString();
                                dr["btchno"] = dtbtch.Rows[i]["btchno"].ToString();
                                dr["store"] = "Y";
                                dr["rec_id"] = "0";
                                // shiv
                                if (isedit)
                                {
                                    dr["client_id"] = model[0].Col1.Trim();
                                    dr["client_unit_id"] = model[0].Col2.Trim();
                                    dr["ent_by"] = model[0].Col3;
                                    dr["ent_date"] = model[0].Col4;
                                    dr["edit_by"] = userid_mst;
                                    dr["edit_date"] = currdate;
                                }
                                else
                                {
                                    dr["client_id"] = clientid_mst;
                                    dr["client_unit_id"] = unitid_mst;
                                    dr["ent_by"] = userid_mst;
                                    dr["ent_date"] = currdate;
                                    dr["edit_by"] = "-";
                                    dr["edit_date"] = currdate;
                                }
                                dt.Rows.Add(dr);
                            }
                            ok = sgen.Update_data_uncommit2(userCode, dt, "itransaction", "", false, sat1);
                            if (ok != true)
                            {
                                sat1.Rollback();
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                                ViewBag.scripCall += "showmsgJS(1, 'Data Not Saved', 0);";
                                ModelState.Clear();
                                return View(model);
                            }
                            sat1.Commit();
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            dt = (DataTable)sgen.GetSession(MyGuid, "KDTPHYN");
                            model = new List<Tmodelmain>();
                            model.Add(new Tmodelmain
                            {
                                Col9 = tmodel.Col9,
                                Col10 = tmodel.Col10,
                                Col11 = tmodel.Col11,
                                Col12 = tmodel.Col12,
                                Col13 = "Save",
                                Col14 = tmodel.Col14,
                                Col15 = tmodel.Col15,
                                Col100 = "Save & New",
                                Col121 = "S",
                                Col122 = "<u>S</u>ave",
                                Col123 = "Save & Ne<u>w</u>",
                                TList1 = mod1,
                                TList2 = mod2,
                                SelectedItems1 = new string[] { "" },
                                SelectedItems2 = new string[] { "" },
                                dt1 = null
                            });
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else
                        {
                            sat1.Rollback();
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            ViewBag.scripCall += "showmsgJS(1, 'Data Not Saved', 0);";
                        }
                    }
                    catch (Exception ex)
                    {
                        ViewBag.scripCall = "showmsgJS(1,'" + ex.Message.ToString().Replace('\'', ' ') + "', 0);"; sat1.Rollback();
                    }
                }
                else if (command == "-")
                {
                    if (model[0].dt1.Rows.Count > 1) model[0].dt1.Rows.RemoveAt(sgen.Make_int(hfrow));
                    else { model[0].dt1 = (DataTable)sgen.GetSession(MyGuid, "KDTPHY"); }
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        private static DataTable Btch_GroupBybatch(DataTable BtchTable)
        {
            DataTable dtbtch;
            var t1 = BtchTable.AsEnumerable().GroupBy(k => new
            {
                client_id = k.Field<string>("client_id"),
                client_unit_id = k.Field<string>("client_unit_id"),
                ent_by = k.Field<string>("ent_by"),
                ent_date = k.Field<DateTime>("ent_date"),
                edit_by = k.Field<string>("edit_by"),
                edit_date = k.Field<DateTime>("edit_date"),
                vch_num = k.Field<string>("vch_num"),
                vch_date = k.Field<DateTime>("vch_date"),
                type = k.Field<string>("type"),
                mrnno = k.Field<string>("mrnno"),
                mrndate = k.Field<DateTime>("mrndate"),
                chlno = k.Field<string>("chlno"),
                chldate = k.Field<DateTime>("chldate"),
                invno = k.Field<string>("invno"),
                invdate = k.Field<DateTime>("invdate"),
                pono = k.Field<string>("pono"),
                podate = k.Field<DateTime>("podate"),
                acode = k.Field<string>("acode"),
                icode = k.Field<string>("icode"),
                iname = k.Field<string>("iname"),
                cpartno = k.Field<string>("cpartno"),
                uom = k.Field<string>("uom"),
                deptno = k.Field<string>("deptno"),
                desig = k.Field<string>("desig"),
                totremark = k.Field<string>("totremark"),
                btchno = k.Field<string>("btchno"),
            });
            sgenFun sgen = new sgenFun(MyGuid);
            var t2 = t1.Select(c =>
            {
                var row = BtchTable.NewRow();
                row["client_id"] = c.Key.client_id;
                row["client_unit_id"] = c.Key.client_unit_id;
                row["ent_by"] = c.Key.ent_by;
                row["ent_date"] = c.Key.ent_date;
                row["edit_by"] = c.Key.edit_by;
                row["edit_date"] = c.Key.edit_date;
                row["vch_num"] = c.Key.vch_num;
                row["vch_date"] = c.Key.vch_date;
                row["type"] = c.Key.type;
                row["mrnno"] = c.Key.mrnno;
                row["mrndate"] = c.Key.mrndate;
                row["chlno"] = c.Key.chlno;
                row["chldate"] = c.Key.chldate;
                row["invno"] = c.Key.invno;
                row["chldate"] = c.Key.chldate;
                row["pono"] = c.Key.pono;
                row["podate"] = c.Key.podate;
                row["acode"] = c.Key.acode;
                row["icode"] = c.Key.icode;
                row["iname"] = c.Key.iname;
                row["cpartno"] = c.Key.cpartno;
                row["uom"] = c.Key.uom;
                row["deptno"] = c.Key.deptno;
                row["desig"] = c.Key.desig;
                row["totremark"] = c.Key.totremark;
                row["btchno"] = c.Key.btchno;
                row["qtystk"] = c.Sum(k => sgen.Make_decimal(k.Field<object>("qtystk")));
                row["qtyin"] = c.Sum(k => sgen.Make_decimal(k.Field<object>("qtyin")));
                row["qtyout"] = c.Sum(k => sgen.Make_decimal(k.Field<object>("qtyout")));
                row["qtyrcvd"] = c.Sum(k => sgen.Make_decimal(k.Field<object>("qtyrcvd")));
                row["pktstk"] = c.Sum(k => sgen.Make_decimal(k.Field<object>("pktstk")));
                row["pktno"] = c.Sum(k => sgen.Make_decimal(k.Field<object>("pktno")));
                return row;
            });
            dtbtch = t2.CopyToDataTable();
            return dtbtch;
        }
        #endregion
        #region location_tfr
        public ActionResult location_tfr()
        {
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            FillMst(MyGuid);
            // shiv
            chkRef();
            ViewBag.vnew = "";
            ViewBag.vedit = "";
            ViewBag.vsave = "disabled='disabled'";
            ViewBag.vsavenew = "disabled='disabled'";
            ViewBag.scripCall = "disableForm();";
            List<Tmodelmain> model = new List<Tmodelmain>();
            Tmodelmain tm1 = new Tmodelmain();
            List<SelectListItem> mod1 = new List<SelectListItem>();
            List<SelectListItem> mod2 = new List<SelectListItem>();
            mid_mst = EncryptDecrypt.Decrypt(Request.QueryString["mid"]);
            tm1.Col10 = "btchtrans";
            tm1.Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            tm1.Col13 = "Save";
            tm1.Col100 = "Save & New";
            tm1.Col121 = "S";
            tm1.Col122 = "<u>S</u>ave";
            tm1.Col123 = "Save & Ne<u>w</u>";
            tm1.Col14 = mid_mst.Trim();
            tm1.Col15 = MyGuid.Trim();

            tm1.SelectedItems1 = new string[] { "" };

            tm1.SelectedItems2 = new string[] { "" };
            TempData[MyGuid + "_TList1"] = tm1.TList1 = mod1;
            TempData[MyGuid + "_TList2"] = tm1.TList2 = mod2;
            DataTable dt = sgen.getdata(userCode, "select '-' as SNo,'-' as Icode,'-' as IName,'-' PartNo,'-' as UOM,'0' as Qty_in_stock,'0' as Qty_tfr,'0' Bal_Stk,'-' as Remark,'-' as Curr_Loc," +
                "'0' LocCode,'-' Loc from dual");
            tm1.dt1 = dt;
            sgen.SetSession(MyGuid, "KDTPHY", dt);
            model.Add(tm1);
            return View(model);
        }
        [HttpPost]
        public ActionResult location_tfr(List<Tmodelmain> model, string command, string hfrow, string hftable)
        {
            try
            {
                FillMst(model[0].Col15);
                DataTable dtm = sgen.settable(hftable);
                model[0].dt1 = dtm;
                var tmodel = model.FirstOrDefault();
                List<SelectListItem> mod1 = new List<SelectListItem>();
                List<SelectListItem> mod2 = new List<SelectListItem>();
                TempData[MyGuid + "_TList1"] = model[0].TList1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                TempData[MyGuid + "_TList2"] = model[0].TList2 = (List<SelectListItem>)TempData[MyGuid + "_TList2"];
                //TempData[MyGuid + "_TList1"] = model[0].TList1;
                //TempData[MyGuid + "_TList2"] = model[0].TList2;
                if (tmodel.SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                if (tmodel.SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
                DataTable dt = new DataTable();
                DataTable dataTable = new DataTable();
                if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                // shiv
                else if (command == "New")
                {
                    sgen.SetSession(MyGuid, "EDMODE", "N");
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                    ViewBag.scripCall = "enableForm();";
                    mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='86'" + model[0].Col11.Trim() + "";
                    vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                    model[0].Col18 = vch_num;
                    model[0].Col20 = sgen.server_datetime_dt_local(userCode).ToString(sgen.Getdateformat(), CultureInfo.InvariantCulture);
                    model[0].Col12 = "86";
                    sgen.SetSession(MyGuid, "KISTYPE", "86");
                    model[0].Col17 = "1";
                    model[0].Col9 = "Location Transfer";
                    #region getdept
                    TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1 = cmd_Fun.dept(userCode, clientid_mst, unitid_mst);

                    #endregion
                    #region getdesig
                    TempData[MyGuid + "_Tlist2"] = model[0].TList2 = mod2 = cmd_Fun.desig(userCode, unitid_mst);

                    #endregion

                    model[0].SelectedItems1 = new string[] { "" };

                    model[0].SelectedItems2 = new string[] { "" };
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {
                    Satransaction sat1 = new Satransaction(userCode, MyGuid);
                    try
                    {
                        type = model[0].Col12.Trim();
                        string currdate = sgen.server_datetime(userCode);
                        if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                        {
                            isedit = true;
                            vch_num = model[0].Col18;
                        }
                        else
                        {
                            isedit = false;
                            mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                            vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                            model[0].Col18 = vch_num;
                        }
                        string vdate = sgen.Savedate(model[0].Col20, false);
                        //dataTable = sgen.getdata(userCode, "select  * from " + model[0].Col10.Trim() + "  where  1=2");
                        dataTable = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                        for (int i = 0; i < model[0].dt1.Rows.Count; i++)
                        {
                            if (sgen.Make_decimal(model[0].dt1.Rows[i]["Qty_tfr"].ToString()) > 0)
                            {
                                DataRow dr = dataTable.NewRow();
                                dr["vch_num"] = vch_num;
                                dr["type"] = type;
                                dr["vch_date"] = vdate;
                                dr["deptno"] = model[0].SelectedItems1.FirstOrDefault();
                                dr["desig"] = model[0].SelectedItems2.FirstOrDefault();
                                dr["totremark"] = model[0].Col21;
                                dr["icode"] = model[0].dt1.Rows[i]["Icode"].ToString();
                                dr["iname"] = model[0].dt1.Rows[i]["IName"].ToString();
                                dr["cpartno"] = model[0].dt1.Rows[i]["partno"].ToString();
                                dr["uom"] = model[0].dt1.Rows[i]["UOM"].ToString();
                                dr["qtystk"] = model[0].dt1.Rows[i]["Qty_in_stock"].ToString();
                                dr["qtyin"] = "0";
                                dr["qtyout"] = model[0].dt1.Rows[i]["Qty_tfr"].ToString().Trim();
                                dr["iremark"] = model[0].dt1.Rows[i]["Remark"].ToString();
                                dr["loc"] = model[0].dt1.Rows[i]["sno"].ToString().Substring(16, 24);
                                dr["locname"] = model[0].dt1.Rows[i]["Curr_Loc"].ToString();
                                dr["rec_id"] = "0";
                                dr["store"] = "Y";
                                {
                                    dr["client_id"] = clientid_mst;
                                    dr["client_unit_id"] = unitid_mst;
                                    dr["ent_by"] = userid_mst;
                                    dr["ent_date"] = currdate;
                                    dr["edit_by"] = "-";
                                    dr["edit_date"] = currdate;
                                }
                                dataTable.Rows.Add(dr);
                                dr = dataTable.NewRow();
                                dr["vch_num"] = vch_num;
                                dr["type"] = type;
                                dr["vch_date"] = vdate;
                                dr["deptno"] = model[0].SelectedItems1.FirstOrDefault();
                                dr["desig"] = model[0].SelectedItems2.FirstOrDefault();
                                dr["totremark"] = model[0].Col21;
                                dr["icode"] = model[0].dt1.Rows[i]["Icode"].ToString();
                                dr["iname"] = model[0].dt1.Rows[i]["IName"].ToString();
                                dr["cpartno"] = model[0].dt1.Rows[i]["partno"].ToString();
                                dr["uom"] = model[0].dt1.Rows[i]["UOM"].ToString();
                                dr["qtystk"] = model[0].dt1.Rows[i]["Qty_in_stock"].ToString();
                                dr["qtyin"] = model[0].dt1.Rows[i]["Qty_tfr"].ToString().Trim();
                                dr["qtyout"] = "0";
                                dr["iremark"] = model[0].dt1.Rows[i]["Remark"].ToString();
                                dr["loc"] = model[0].dt1.Rows[i]["LocCode"].ToString();
                                dr["locname"] = model[0].dt1.Rows[i]["Loc"].ToString();
                                dr["store"] = "Y";
                                dr["rec_id"] = "0";
                                {
                                    dr["client_id"] = clientid_mst;
                                    dr["client_unit_id"] = unitid_mst;
                                    dr["ent_by"] = userid_mst;
                                    dr["ent_date"] = currdate;
                                    dr["edit_by"] = "-";
                                    dr["edit_date"] = currdate;
                                }
                                dataTable.Rows.Add(dr);
                            }
                        }
                        res = sgen.Update_data(userCode, dataTable, model[0].Col10.Trim(), model[0].Col8, false);
                        if (res != true)
                        {
                            sat1.Rollback();
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            ViewBag.scripCall += "showmsgJS(1, 'Data Not Saved', 0);";
                            ModelState.Clear();
                            return View(model);
                        }
                        sat1.Commit();
                        ViewBag.vnew = "";
                        ViewBag.vedit = "";
                        ViewBag.vsave = "disabled='disabled'";
                        ViewBag.vsavenew = "disabled='disabled'";
                        dt = (DataTable)sgen.GetSession(MyGuid, "KDTPHY");
                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col13 = "Save",
                            //Col9 = tmodel.Col9,
                            Col10 = tmodel.Col10,
                            Col11 = tmodel.Col11,
                            //Col12 = tmodel.Col12,
                            Col14 = tmodel.Col14,
                            Col15 = tmodel.Col15,
                            TList1 = mod1,
                            SelectedItems1 = new string[] { "" },
                            TList2 = mod2,
                            SelectedItems2 = new string[] { "" },
                            dt1 = dt
                        });
                        //ViewBag.scripCall = "showmsgJS(1, 'Record Saved Successfully', 1);disableForm();";
                        ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                    }
                    catch (Exception ex) { ViewBag.scripCall = "showmsgJS(1,'" + ex.Message.ToString().Replace('\'', ' ') + "', 0);"; sat1.Rollback(); }
                }
                else if (command == "-")
                {
                    if (model[0].dt1.Rows.Count > 1) model[0].dt1.Rows.RemoveAt(sgen.Make_int(hfrow));
                    else { model[0].dt1 = (DataTable)sgen.GetSession(MyGuid, "KDTPHY"); }
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region filter form
        public ActionResult filter_inv(string headid, string mid, string m_id, string btnid)
        {
            FillMst();
            chkRef();
            List<Tmodelmain> model = new List<Tmodelmain>();
            Tmodelmain tm1 = new Tmodelmain();
            List<SelectListItem> ct_list = new List<SelectListItem>();
            List<SelectListItem> ut_list = new List<SelectListItem>();
            List<SelectListItem> m_list = new List<SelectListItem>();
            List<SelectListItem> kdp_list = new List<SelectListItem>();
            List<SelectListItem> kdg_list = new List<SelectListItem>();
            #region client id's
            mq = sgen.seekval(userCode, "select client_id from user_details where vch_num='" + userid_mst + "'", "client_id");
            if (!role_mst.ToUpper().Equals("OWNER")) where = " and company_profile_id in ('" + mq.Replace(",", "','") + "')";
            DataTable dtcomp = new DataTable();
            mq = "SELECT Company_Profile_Id, company_name ||'('|| company_profile_id ||')'  as nameid FROM company_profile " +
                "where type='CP' " + where + " order by company_name";
            dtcomp = sgen.getdata(userCode, mq);
            if (dtcomp.Rows.Count > 0)
            {
                foreach (DataRow dr in dtcomp.Rows)
                {
                    ct_list.Add(new SelectListItem { Text = dr["nameid"].ToString(), Value = dr["Company_Profile_Id"].ToString() });
                }
            }
            TempData[MyGuid + "_ct_list"] = ct_list;
            #endregion
            tm1.TList1 = ct_list;
            #region unit id's                   
            mq1 = sgen.seekval(userCode, "select client_unit_id from user_details where vch_num='" + userid_mst + "'", "client_unit_id");
            if (!role_mst.ToUpper().Equals("OWNER")) where = " and cup_id in ('" + mq1.Replace(",", "','") + "')";
            mq = clientid_mst;
            tm1.Col31 = clientid_mst;
            mq = "SELECT cup_id,(unit_name||' ('||cup_Id||')') as nameid FROM company_unit_profile where company_profile_id in (" + mq + ")" + where + " and unit_status='1' order by unit_name";
            DataTable dtunit = new DataTable();
            dtunit = sgen.getdata(userCode, mq);
            if (dtunit.Rows.Count > 0)
            {
                foreach (DataRow dr in dtunit.Rows)
                {
                    ut_list.Add(new SelectListItem { Text = dr["nameid"].ToString(), Value = dr["cup_id"].ToString() });
                }
            }
            TempData[MyGuid + "_ut_list"] = ut_list;
            #endregion
            tm1.TList2 = ut_list;
            tm1.Col9 = headid;
            tm1.Col10 = mid;
            tm1.Col11 = m_id;
            tm1.Col12 = btnid;
            tm1.SelectedItems1 = new string[] { clientid_mst };
            tm1.SelectedItems2 = new string[] { unitid_mst };
            model.Add(tm1);
            return PartialView(model);
        }
        [HttpPost]
        public ActionResult filter_inv(List<Tmodelmain> model, string command)
        {
            try
            {
                FillMst();
                List<SelectListItem> ct_list = new List<SelectListItem>();
                List<SelectListItem> ut_list = new List<SelectListItem>();
                ct_list = (List<SelectListItem>)TempData[MyGuid + "_ct_list"];
                ut_list = (List<SelectListItem>)TempData[MyGuid + "_ut_list"];
                TempData[MyGuid + "_ct_list"] = ct_list;
                TempData[MyGuid + "_ut_list"] = ct_list;
                if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                if (model[0].SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
                if (command == "DDL_CHANGE")
                {
                    try
                    {
                        #region unit id's                   
                        mq1 = sgen.seekval(userCode, "select client_unit_id from user_details where vch_num='" + userid_mst + "'", "client_unit_id");
                        if (!role_mst.ToUpper().Equals("OWNER")) where = " and cup_id in ('" + mq1.Replace(",", "','") + "')";
                        mq = string.Join(",", model[0].SelectedItems1);
                        model[0].Col31 = mq;
                        mq = "SELECT cup_id,(unit_name||' ('||cup_Id||')') as nameid FROM company_unit_profile where company_profile_id in (" + mq + ")" + where + " and unit_status='1' order by unit_name";
                        DataTable dtunit = new DataTable();
                        dtunit = sgen.getdata(userCode, mq);
                        if (dtunit.Rows.Count > 0)
                        {
                            foreach (DataRow dr in dtunit.Rows)
                            {
                                ut_list.Add(new SelectListItem { Text = dr["nameid"].ToString(), Value = dr["cup_id"].ToString() });
                            }
                        }
                        TempData[MyGuid + "_ut_list"] = ut_list;
                        #endregion
                        model[0].TList1 = ct_list;
                        model[0].TList2 = ut_list;
                        model[0].SelectedItems2 = new string[] { "" };
                    }
                    catch (Exception ex) { ViewBag.scripCall = "showmsgJS(1, '" + ex.Message.ToString() + "', 0);"; }
                }
                else if (command == "Search")
                {
                    sgen.SetSession(MyGuid, "KCOMMAND", model[0].Col12.Trim());
                    sgen.SetSession(MyGuid, "KDDL_CL", model[0].Col31);
                    sgen.SetSession(MyGuid, "KDDL_UT", String.Join(",", model[0].SelectedItems2));
                    sgen.SetSession(MyGuid, "TXTFROMDATE", model[0].Col21);
                    sgen.SetSession(MyGuid, "TXTTODATE", model[0].Col22);
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return PartialView(model);
        }
        #endregion
        #region stat report
        public ActionResult inv_rpt()
        {
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            FillMst(MyGuid);
            chkRef();
            List<Tmodelmain> model = new List<Tmodelmain>();
            Tmodelmain tm1 = new Tmodelmain();
            mid_mst = EncryptDecrypt.Decrypt(Request.QueryString["mid"]);
            if (mid_mst.Trim().Equals("9011.2")) { tm1.Col9 = "ESI REPORT"; }
            tm1.Col10 = mid_mst.Trim();
            tm1.Col11 = MyGuid.Trim();
            sgen.SetSession(MyGuid, "TR_MID", mid_mst.Trim());
            model.Add(tm1);
            return View(model);
        }
        [HttpPost]
        public ActionResult inv_rpt(List<Tmodelmain> model, string command)
        {
            FillMst(model[0].Col15);
            string cl = "", ut = "", monthid = "", dept = "", desig = "", cond_dpjoin = "", cond_dgjoin = "";
            DataSet dst = new DataSet();
            DataTable dt = new DataTable();
            //DataTable dtm = new DataTable();
            string tab_name = " ";
            string type_desc = "";
            string type = "";
            if (sgen.GetSession(MyGuid, "KDDL_CL") != null) cl = sgen.GetSession(MyGuid, "KDDL_CL").ToString();
            if (sgen.GetSession(MyGuid, "KDDL_UT") != null) ut = sgen.GetSession(MyGuid, "KDDL_UT").ToString();
            if (sgen.GetSession(MyGuid, "KDDL_MONTH") != null) monthid = sgen.GetSession(MyGuid, "KDDL_MONTH").ToString();
            if (sgen.GetSession(MyGuid, "KDDL_DEPT") != null) dept = sgen.GetSession(MyGuid, "KDDL_DEPT").ToString();
            if (sgen.GetSession(MyGuid, "KDDL_DESIG") != null) desig = sgen.GetSession(MyGuid, "KDDL_DESIG").ToString();
            if (sgen.GetSession(MyGuid, "KCOMMAND") != null) command = sgen.GetSession(MyGuid, "KCOMMAND").ToString();
            if (cl == "") { ViewBag.scripCall = "showmsgJS(1,'Please Select Company_Name',2)"; return View(model); }
            //if (dept.Trim() != "") { cond_dpjoin = " and em.emp_dept in ('" + dept.Replace(",", "','") + "') "; }
            //if (desig.Trim() != "") { cond_dgjoin = " and em.emp_desig in ('" + desig.Replace(",", "','") + "') "; }
            #region month checking
            int currmonth = sgen.Make_int(monthid);
            int curryear = sgen.Make_int(Ac_Year.Split(' ')[0].Trim());
            string lastyyyymmm = "";
            string curryyyymmm = "";
            if (currmonth <= 12 && currmonth > 4)
            {
                lastyyyymmm = curryear + sgen.padlc((currmonth - 1), 3);
                curryyyymmm = curryear + sgen.padlc((currmonth), 3);
            }
            else if (currmonth == 1)
            {
                lastyyyymmm = curryear + sgen.padlc((currmonth - 1), 3);
                curryyyymmm = (curryear + 1) + sgen.padlc((currmonth), 3);
            }
            else if (currmonth > 1 && currmonth < 4)
            {
                lastyyyymmm = (curryear + 1) + sgen.padlc((currmonth - 1), 3);
                curryyyymmm = (curryear + 1) + sgen.padlc((currmonth), 3);
            }
            else if (currmonth == 4)
            {
                lastyyyymmm = curryear + sgen.padlc((currmonth - 1), 3);
                curryyyymmm = curryear + sgen.padlc((currmonth), 3);
            }
            sgen.SetSession(MyGuid, "curryyyymmm", curryyyymmm);
            #endregion
            DataTable dtr = new DataTable();
            dtr.Columns.Add("temp");
            DataRow dr = dtr.NewRow();
            dr["temp"] = "temp";
            dtr.Rows.Add(dr);
            if (model[0].Col10.Trim().Equals("9011.2"))
            {
                if (command == "Monthly Challan")
                {
                    mq = "select a.salary_yr,A.Month,a.Emp_Code,a.Ext_Code,a.old_empcode,a.Emp_Name,a.Father_Name,a.Dob,a.Doj,a.esi_no,a.paid_days," +
                        "sum(a.wages) as wags,sum(a.ESI) as esi from  (SELECT ESP.HEAD_NAME,trim(substr(esp.currmmmyyyy,0,4)) as salary_yr, trim(esp.month_name) Month," +
                        "trim(upper(em.emp_code)) Emp_Code,trim(upper(em.external_empno)) Ext_Code,trim(em.old_empcode) old_empcode," +
                        "trim(upper(((em.first_name) || ' ' ||REPLACE(nvl((em.middle_name), ''), '0', '') || ' ' || REPLACE(nvl((em.last_name), ''), '0', '')))) Emp_Name," +
                        "trim(upper((em.f_name))) Father_Name ,trim(to_char(convert_tz((em.dob), 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "')) Dob , " +
                        "trim(to_char(convert_tz((em.st_dt), 'UTC', '" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "')) Doj,trim(upper((em.esi_no))) esi_no," +
                        "to_number(trim(esp.paid_days)) paid_days," +
                        "(case when trim(nvl(hm.col31,'N'))= 'Y' and upper(esp.head_type) = 'EARNING' then sum(esp.head_count) else 0 end) wages," +
                        "(case when head_id in (000014, 000022) and upper(esp.head_type)= 'DEDUCTION' then sum(to_number(trim(head_count))) else 0 end) as ESI " +
                        "from emp_salary_process esp INNER JOIN emp_master em on esp.emp_code = em.vch_num and em.type = 'EMP' " +
                        "and em.client_unit_id = esp.client_unit_id  and em.emp_status = 'Y' and to_char(em.ex_dt,'YYYY')= '1900' inner join " +
                        "vehicle_master hm on hm.type = 'KSP' and hm.client_unit_id = esp.client_unit_id and hm.vch_num = esp.head_id " +
                        "where esp.client_unit_id  in ('" + ut + "') and esp.type = 'ESP' and esp.head_flag = 'ESH' and esp.currmmmyyyy = '" + curryyyymmm + "' " +
                        "group by  esp.month_name,upper((em.first_name || ' ' || REPLACE(nvl(em.middle_name, ''), '0', '') || ' ' || REPLACE(nvl(em.last_name, ''), '0', ''))),em.emp_code,em.external_empno," +
                        "upper(em.f_name),to_char(convert_tz(em.dob, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "'), " +
                        "to_char(convert_tz(em.st_dt, 'UTC', '" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "')," +
                        "upper(em.esi_no),esp.paid_days,substr(esp.currmmmyyyy, 0, 4),em.old_empcode,head_id,esp.head_type,esp.head_name,esp.month_name,hm.col31) a " +
                        "group by a.salary_yr,A.Month,a.Emp_Code,a.Ext_Code,a.old_empcode,a.Emp_Name,a.Father_Name ,a.Dob ,a.Doj,a.esi_no,a.paid_days having sum(a.ESI)>0 " +
                        "order by a.emp_code asc";
                    dt = sgen.getdata(userCode, mq);
                    if (dt.Rows.Count > 0)
                    {
                        sgen.open_report_bydt_xml(userCode, dt, "ESI_Report", "ESI Report");
                    }
                }
                if (command == "Half Yearly Return Form-5") { sgen.open_report_bydt_xml(userCode, dtr, "esi_form5_return", "Form 5"); }
                if (command == "ESI XL Report")
                {
                    mq = @"SELECT esp.month_name Month,upper(em.emp_code) Emp_Code,upper(em.external_empno) Ext_Code,
upper((em.first_name|| ' '|| REPLACE(nvl(em.middle_name, ''), '0', '')|| ' '|| em.last_name)) Emp_Name,upper(em.f_name) Father_Name,
to_char(convert_tz(em.dob, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') Dob," +
        "to_char(convert_tz(em.st_dt, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') Doj,upper(em.esi_no) ESI_No," +
        "esp.paid_days Paid_Days, esp.client_unit_id,sum(if (esp.head_type = 'Earning',esp.head_count,0)) Gross_Rate," +
        "sum(if (esp.head_id = '000014',esp.head_count,0)) as Esi,(sum(if (esp.head_id = '000014',esp.head_count,0))*100)/ replace(esim.col5, '%', '') as Esiable," +
        "sum(if (esp.head_id in (select sh.vch_num as heads from vehicle_master sh where sh.type = 'KSP' and sh.client_unit_id = '" + ut + "' and sh.cur_state <> '3' and sh.cur_state <> '0' and sh.date2 > utc_timestamp() and sh.col31 = 'Y'),esp.head_count,0)) as Esi_Gross," +
        "round(cast((sum(if (esp.head_id = '000014',esp.head_count,0))*100)/ replace(esim.col5, '%', '') as decimal (10, 2)) *cast(replace(esim.col5, '%', '') as decimal (5, 2)) / 100,0) Employee_contri," +
        "round(cast((sum(if (esp.head_id = '000014',esp.head_count,0))*100)/ replace(esim.col5, '%', '') as decimal (10, 2)) *cast(replace(esim.col6, '%', '') as decimal (5, 2)) / 100,0) Employer_contri " +
        "from emp_salary_process esp " +
        "LEFT JOIN vehicle_master esim on 1 = 1 and esim.type = 'KES' and esim.client_unit_id = '" + ut + "' " +
        "INNER JOIN emp_master em on esp.emp_code = em.vch_num and em.type = 'EMP' and em.client_unit_id = '" + ut + "' " +
        "where esp.client_unit_id = '" + ut + "' and esp.type = 'ESP' and esp.head_flag = 'ESH' and esp.month_id = '" + monthid + "' " +
        "group by esp.month_name,upper(em.emp_code),upper(em.external_empno),upper(em.esi_no),upper((em.first_name|| ' '|| REPLACE(nvl(em.middle_name, ''), '0', '')|| ''|| em.last_name))," +
        "upper(em.f_name),esp.paid_days,to_char(convert_tz(em.dob, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "'),to_char(convert_tz(em.st_dt, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "'),esp.client_unit_id";
                    dt = sgen.getdata(userCode, mq);
                    mq1 = sgen.open_grid_dt("Employee Monthly ESI Report", dt, 0);
                    if (mq1 == "ok") { ViewBag.scripCall = "callFoo('Employee Monthly ESI Report');"; }
                    else { ViewBag.scripCall = "showmsgJS(1,'No Data Found',2);"; }
                    return View(model);
                }
            }
            //ViewBag.scripCall = "OpenSingle('../../../../../erp/schoolReports_Rpts/Filter_Report_xml.aspx','95%','900px','Reports');";
            ViewBag.scripCall += "showRptnew('Reports');";
            return View(model);
        }
        #endregion
        #region dpr
        public ActionResult dpr()
        {
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            FillMst(MyGuid);

            chkRef();
            ViewBag.vnew = "";
            ViewBag.vedit = "";
            ViewBag.vsave = "disabled='disabled'";
            ViewBag.vsavenew = "disabled='disabled'";
            ViewBag.scripCall = "disableForm();";
            List<Tmodelmain> model = new List<Tmodelmain>();
            Tmodelmain tm1 = new Tmodelmain();
            List<SelectListItem> mod1 = new List<SelectListItem>();
            List<SelectListItem> mod2 = new List<SelectListItem>();
            List<SelectListItem> mod3 = new List<SelectListItem>();
            mid_mst = EncryptDecrypt.Decrypt(Request.QueryString["mid"]);
            tm1.Col10 = "itransaction";
            tm1.Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            tm1.Col13 = "Save";
            tm1.Col100 = "Save & New";
            tm1.Col121 = "S";
            tm1.Col122 = "<u>S</u>ave";
            tm1.Col123 = "Save & Ne<u>w</u>";
            tm1.Col14 = mid_mst.Trim();
            tm1.Col15 = MyGuid.Trim();
            tm1.TList1 = mod1;
            tm1.SelectedItems1 = new string[] { "" };
            tm1.TList2 = mod2;
            tm1.SelectedItems2 = new string[] { "" };
            tm1.TList3 = mod3;
            tm1.SelectedItems3 = new string[] { "" };

            DataTable dt = sgen.getdata(userCode, "select '-' as  SNo ,'-' as Icode,'-' as IName,'-' PartNo,'-' as UOM,'0' as  Qty_in_stock,'0' as Qty_Produce," +
                "'0' as Qty_Act_Rec,'0' Qty_Req_Bal,'-' as Remark,'0' BatchNo,'0' Scrap from dual");
            tm1.dt1 = dt;
            sgen.SetSession(MyGuid, "DTDPR1", dt);

            dt = sgen.getdata(userCode, "select '-' as SNo ,'-' as Icode,'-' as IName,'-' PartNo,'-' as UOM,'0' as Qty_in_stock,'0' as Qty_Act_Rec,'-' as Remark," +
                "'0' LocCode,'-' Loc from dual");
            tm1.dt2 = dt;
            sgen.SetSession(MyGuid, "DTDPR2", dt);
            sgen.SetSession(MyGuid, "KDPTYPE", null);
            model.Add(tm1);
            return View(model);
        }
        [HttpPost]
        public ActionResult dpr(List<Tmodelmain> model, string command, string hfrow, string hftable)
        {
            try
            {
                FillMst(model[0].Col15);
                DataSet ds = sgen.setDS(hftable);
                model[0].dt1 = ds.Tables[0];
                model[0].dt2 = ds.Tables[1];
                var tm = model.FirstOrDefault();
                #region
                List<SelectListItem> mod1 = new List<SelectListItem>();
                List<SelectListItem> mod2 = new List<SelectListItem>();
                List<SelectListItem> mod3 = new List<SelectListItem>();
                TempData[MyGuid + "_TList1"] = model[0].TList1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                TempData[MyGuid + "_TList2"] = model[0].TList2 = (List<SelectListItem>)TempData[MyGuid + "_TList2"];
                TempData[MyGuid + "_TList3"] = model[0].TList3 = (List<SelectListItem>)TempData[MyGuid + "_TList3"];
                //TempData[MyGuid + "_TList1"] = model[0].TList1;
                //TempData[MyGuid + "_TList2"] = model[0].TList2;
                //TempData[MyGuid + "_TList3"] = model[0].TList3;
                if (tm.SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                if (tm.SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
                if (tm.SelectedItems3 == null) model[0].SelectedItems3 = new string[] { "" };
                #endregion
                DataTable dt = new DataTable();
                if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command == "Fill Location")
                {
                    if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-"))
                    {
                        ViewBag.scripCall += "showmsgJS(1,'Please Select item in grid-1', 2);";
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                        return View(model);
                    }
                    if (model[0].dt2.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt2.Rows.RemoveAt(0); }
                    var dttt = model[0].dt2.Clone();
                    model[0].dt2 = dttt;
                    foreach (DataRow dr1 in model[0].dt1.Rows)
                    {
                        string icode = dr1["icode"].ToString().Trim();
                        DataTable dloc = sgen.getdata(userCode, "select itb.loc,location_name(itb.client_id||itb.client_unit_id||itb.loc) from itbal itb " +
               "where trim(itb.icode)='" + icode + "' and itb.type='IT' and itb.client_unit_id='" + unitid_mst + "'");
                        DataTable dtlocs = sgen.locclosing_all(userCode, unitid_mst + icode, FN_From_Date + "!~!~!~!~!" + model[0].Col20);
                        DataRow dr2 = model[0].dt2.NewRow();
                        dr2["sno"] = dr1["icode"].ToString().Trim() + unitid_mst + dloc.Rows[0][0].ToString().Trim();
                        dr2["Icode"] = dr1["icode"].ToString().Trim();
                        dr2["INAME"] = dr1["INAME"].ToString().Trim();
                        dr2["PARTNO"] = dr1["PARTNO"].ToString().Trim();
                        dr2["UOM"] = dr1["UOM"].ToString().Trim();
                        dr2["Qty_In_Stock"] = dr1["Qty_In_Stock"].ToString().Trim();
                        dr2["Qty_Act_Rec"] = dr1["Qty_Act_Rec"].ToString().Trim();
                        dr2["Remark"] = "-";
                        dr2["LocCode"] = dloc.Rows[0][0].ToString().Trim();
                        dr2["LOC"] = dloc.Rows[0][1].ToString().Trim();
                        model[0].dt2.Rows.Add(dr2);
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                    }
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {
                    try
                    {
                        if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-"))
                        {
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            ViewBag.scripCall += "mytoast('warning', 'toast-top-right', 'Please select item in grid-1');";
                            ModelState.Clear();
                            return View(model);
                        }
                        if (model[0].dt2.Rows[0]["icode"].ToString().Trim().Equals("-"))
                        {
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            ViewBag.scripCall += "mytoast('warning', 'toast-top-right', 'Please select item in grid-2');";
                            ModelState.Clear();
                            return View(model);
                        }
                        Satransaction sat1 = new Satransaction(userCode, MyGuid);
                        string currdate = sgen.server_datetime(userCode);
                        if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                        {
                            isedit = true;
                            vch_num = model[0].Col18;
                        }
                        else
                        {
                            isedit = false;
                            mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                            vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                            model[0].Col18 = vch_num;
                        }
                        foreach (DataRow dr in ds.Tables[0].Rows)
                        {
                            decimal QTY_Produce = 0, QTY_Act_Rec = 0, QTY_Act_Rec2 = 0;
                            string icode2 = "";
                            string fstr = dr["sno"].ToString();
                            string icode = dr["icode"].ToString();
                            string INAME = dr["INAME"].ToString();
                            QTY_Produce = sgen.Make_decimal(dr["QTY_Produce"].ToString());
                            QTY_Act_Rec = sgen.Make_decimal(dr["QTY_Act_Rec"].ToString());
                            if (QTY_Act_Rec > QTY_Produce)
                            {
                                ViewBag.scripCall += "showmsgJS(1, 'Item " + INAME + ", Reveiced Qty is not matching with Qty_Act_Rec in Grid 1,Please Check', 2);";
                                ModelState.Clear();
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                                return View(model);
                            }
                            var filtered = model[0].dt2.Select("icode='" + icode + "'");
                            foreach (var row in filtered)
                            {
                                decimal act2 = 0;
                                icode2 = row["icode"].ToString();
                                QTY_Act_Rec2 += act2 = sgen.Make_decimal(row["QTY_Act_Rec"].ToString());
                            }
                            if (QTY_Act_Rec != QTY_Act_Rec2)
                            {
                                ViewBag.scripCall += "showmsgJS(1, 'Qty_Act_Rec does not match with Location Grid of Item " + INAME + "', 2);";
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                                return View(model);
                            }
                        }
                        DataTable dataTable = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                        for (int i = 0; i < model[0].dt1.Rows.Count; i++)
                        {
                            DataRow dr = dataTable.NewRow();
                            dr["vch_num"] = vch_num;
                            dr["type"] = model[0].Col12;
                            dr["vch_date"] = sgen.Make_date_S(model[0].Col20);
                            dr["deptno"] = model[0].SelectedItems1.FirstOrDefault();
                            dr["deptname"] = model[0].TList1.SingleOrDefault(w => w.Value == model[0].SelectedItems1.FirstOrDefault()).Text;
                            dr["desig"] = model[0].SelectedItems2.FirstOrDefault();
                            dr["aname"] = model[0].SelectedItems3.FirstOrDefault();//opname
                            dr["totremark"] = model[0].Col21;
                            dr["icode"] = model[0].dt1.Rows[i]["Icode"].ToString();
                            dr["iname"] = model[0].dt1.Rows[i]["IName"].ToString();
                            dr["cpartno"] = model[0].dt1.Rows[i]["partno"].ToString();
                            dr["uom"] = model[0].dt1.Rows[i]["UOM"].ToString();
                            dr["qtystk"] = model[0].dt1.Rows[i]["Qty_in_stock"].ToString();
                            dr["qtychl"] = model[0].dt1.Rows[i]["Qty_Produce"].ToString();
                            dr["qtyin"] = model[0].dt1.Rows[i]["Qty_Act_Rec"].ToString();
                            dr["qtybal"] = model[0].dt1.Rows[i]["Qty_Req_bal"].ToString();
                            dr["iremark"] = model[0].dt1.Rows[i]["Remark"].ToString();
                            dr["btchno"] = model[0].dt1.Rows[i]["BatchNo"].ToString();//batchno
                            dr["qtyrcvd"] = model[0].dt1.Rows[i]["Scrap"].ToString();//scrap
                            dr["store"] = "Y";
                            dr["rec_id"] = "0";
                            // shiv
                            if (isedit)
                            {
                                dr["client_id"] = model[0].Col1.Trim();
                                dr["client_unit_id"] = model[0].Col2.Trim();
                                dr["ent_by"] = model[0].Col3;
                                dr["ent_date"] = model[0].Col4;
                                dr["edit_by"] = userid_mst;
                                dr["edit_date"] = currdate;
                            }
                            else
                            {
                                dr["client_id"] = clientid_mst;
                                dr["client_unit_id"] = unitid_mst;
                                dr["ent_by"] = userid_mst;
                                dr["ent_date"] = currdate;
                                dr["edit_by"] = "-";
                                dr["edit_date"] = currdate;
                            }
                            dataTable.Rows.Add(dr);
                        }
                        res = sgen.Update_data_uncommit2(userCode, dataTable, model[0].Col10.Trim(), model[0].Col8, isedit, sat1);
                        if (res == true)
                        {
                            dt = cmd_Fun.GetStructure(userCode, "btchtrans");
                            for (int i = 0; i < model[0].dt2.Rows.Count; i++)
                            {
                                DataRow dr = dt.NewRow();
                                dr["vch_num"] = vch_num;
                                dr["type"] = model[0].Col12;
                                dr["vch_date"] = sgen.Savedate(model[0].Col20, false);
                                dr["deptno"] = model[0].SelectedItems1.FirstOrDefault();
                                dr["desig"] = model[0].SelectedItems2.FirstOrDefault();
                                dr["totremark"] = model[0].Col21;
                                dr["icode"] = model[0].dt2.Rows[i]["icode"].ToString();
                                dr["iname"] = model[0].dt2.Rows[i]["iname"].ToString();
                                dr["cpartno"] = model[0].dt2.Rows[i]["partno"].ToString();
                                dr["uom"] = model[0].dt2.Rows[i]["UOM"].ToString();
                                dr["qtystk"] = model[0].dt2.Rows[i]["Qty_in_stock"].ToString();
                                dr["qtyin"] = model[0].dt2.Rows[i]["QTY_Act_Rec"].ToString().Trim();
                                dr["iremark"] = model[0].dt2.Rows[i]["Remark"].ToString();
                                dr["loc"] = model[0].dt2.Rows[i]["LocCode"].ToString();
                                dr["locname"] = model[0].dt2.Rows[i]["Loc"].ToString();//NOT SAVING
                                dr["store"] = "Y";
                                dr["rec_id"] = "0";
                                // shiv
                                if (isedit)
                                {
                                    dr["client_id"] = model[0].Col1.Trim();
                                    dr["client_unit_id"] = model[0].Col2.Trim();
                                    dr["ent_by"] = model[0].Col3;
                                    dr["ent_date"] = model[0].Col4;
                                    dr["edit_by"] = userid_mst;
                                    dr["edit_date"] = currdate;
                                }
                                else
                                {
                                    dr["client_id"] = clientid_mst;
                                    dr["client_unit_id"] = unitid_mst;
                                    dr["ent_by"] = userid_mst;
                                    dr["ent_date"] = currdate;
                                    dr["edit_by"] = "-";
                                    dr["edit_date"] = currdate;
                                }
                                dt.Rows.Add(dr);
                            }
                            ok = sgen.Update_data_uncommit2(userCode, dt, "btchtrans", model[0].Col8, isedit, sat1);
                            if (ok != true)
                            {
                                sat1.Rollback();
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                                ViewBag.scripCall += "showmsgJS(1, 'Data Not Saved', 0);";
                                ModelState.Clear();
                                return View(model);
                            }
                            sat1.Commit();
                            model = new List<Tmodelmain>();
                            model.Add(new Tmodelmain
                            {
                                Col13 = "Save",
                                Col100 = "Save & New",
                                Col121 = "S",
                                Col122 = "<u>S</u>ave",
                                Col123 = "Save & Ne<u>w</u>",
                                Col10 = tm.Col10,
                                Col11 = tm.Col11,
                                Col14 = tm.Col14,
                                Col15 = tm.Col15,
                                TList1 = mod1,
                                SelectedItems1 = new string[] { "" },
                                TList2 = mod2,
                                SelectedItems2 = new string[] { "" },
                                TList3 = mod3,
                                SelectedItems3 = new string[] { "" },
                                dt1 = (DataTable)sgen.GetSession(MyGuid, "DTDPR1"),
                                dt2 = (DataTable)sgen.GetSession(MyGuid, "DTDPR2")
                            });
                            sgen.SetSession(MyGuid, "KDPTYPE", null);
                            if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                            {
                                ViewBag.vnew = "";
                                ViewBag.vedit = "";
                                ViewBag.vsave = "disabled='disabled'";
                                ViewBag.vsavenew = "disabled='disabled'";
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                            }
                            else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                            {
                                Make_query("dpr", "Select Production Type", "NEW", "1", "", "");
                                ViewBag.scripCall = "callFoo('Select Production Type');";
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                                //mq = sgen.seekval(userCode, "select to_char(vch_date,'yyyymmdd') vch_date from master_setting where type='KDP' and master_id='" + tm.Col12 + "'", "vch_date");
                                //Session["SSEEKVAL"] = clientid_mst + unitid_mst + tm.Col12 + mq + "KDP";
                                //model = CallbackFun("NEW", "N", actionName, controllerName, model);
                            }
                        }
                        else
                        {
                            sat1.Rollback();
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            ViewBag.scripCall += "showmsgJS(1, 'Data Not Saved', 0);";
                        }
                    }
                    catch (Exception ex) { ViewBag.scripCall += "showmsgJS(1,'" + ex.Message.ToString().Replace('\'', ' ') + "', 0);"; }
                }
                else if (command == "-")
                {
                    if (model[0].dt1.Rows.Count > 1) model[0].dt1.Rows.RemoveAt(sgen.Make_int(hfrow));
                    else { model[0].dt1 = (DataTable)sgen.GetSession(MyGuid, "DTDPR1"); }
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
                else if (command == "2-")
                {
                    if (model[0].dt2.Rows.Count > 1) model[0].dt2.Rows.RemoveAt(sgen.Make_int(hfrow));
                    else { model[0].dt2 = (DataTable)sgen.GetSession(MyGuid, "DTDPR2"); }
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region dispatch
        public ActionResult dispatch()
        {
            FillMst();
            ViewBag.vfill = "disabled='disabled'";
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            model[0].Col10 = "itransaction";//for out
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col16 = "btchtrans";//for out
            sgen.SetSession(MyGuid, "KDS_DT1", null);
            sgen.SetSession(MyGuid, "KDS_DT2", null);
            sgen.SetSession(MyGuid, "KDSTYPE", null);
            model[0].Col64 = "";
            return View(model);
        }
        [HttpPost]
        public ActionResult dispatch(List<Tmodelmain> model, string command, string hfrow, string hftable)
        {
            try
            {
                FillMst();
                DataSet ds = new DataSet();
                if (hftable.Trim() != "")
                {
                    ds = sgen.setDS(hftable);
                    model[0].dt1 = ds.Tables[0];
                    model[0].dt2 = ds.Tables[1];
                    if (model[0].dt1.Rows.Count == 0) model[0].dt1 = ((DataTable)sgen.GetSession(MyGuid, "KDS_DT1"));
                    if (model[0].dt2.Rows.Count == 0) model[0].dt2 = ((DataTable)sgen.GetSession(MyGuid, "KDS_DT2"));
                }
                var tm = model.FirstOrDefault();
                if (command == "Cancel") { return CancelFun(model); }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command == "Fill Location")
                {
                    if (model[0].dt1.Rows[0]["Icode"].ToString().Trim().Equals("-"))
                    {
                        ViewBag.scripCall += "showmsgJS(1,'Please Select item in grid-1', 0);";
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                        return View(model);
                    }
                    if (model[0].dt1.Rows[0]["Qty_Out"].ToString().Trim().Equals("0") || model[0].dt1.Rows[0]["Qty_Out"].ToString().Trim().Equals(""))
                    {
                        ViewBag.scripCall += "showmsgJS(1,'Please Fill Out Quantity in grid-1', 0);";
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                        return View(model);
                    }
                    try
                    {
                        if (model[0].dt2 != null && model[0].dt2.Rows[0]["Icode"].ToString().Trim().Equals("-")) { model[0].dt2.Rows.RemoveAt(0); }
                    }
                    catch (Exception err) { }
                    var dttt = model[0].dt2.Clone();
                    model[0].dt2 = dttt;
                    foreach (DataRow dr1 in model[0].dt1.Rows)
                    {
                        try
                        {
                            if (model[0].dt1.Rows[0]["Icode"].ToString().Trim().Equals("-"))
                            {
                                ViewBag.scripCall += "showmsgJS(1,'Please Select item in grid-1', 2);";
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                                return View(model);
                            }
                            try
                            {
                                if (model[0].dt2.Rows[0]["Icode"].ToString().Trim().Equals("-")) { model[0].dt2.Rows.RemoveAt(0); }
                            }
                            catch (Exception err) { }
                            var dt7 = model[0].dt2.Clone();
                            model[0].dt2 = dt7;
                            DataTable dtbtch;
                            dtbtch = model[0].dt1.Clone();
                            var t1 = model[0].dt1.AsEnumerable().GroupBy(k => new
                            {
                                icode = k.Field<string>("icode"),
                                iname = k.Field<string>("iname"),
                                partno = k.Field<string>("partno"),
                                uom = k.Field<string>("uom"),
                                //qty_in_stock = k.Field<string>("qty_in_stock"),
                            });
                            var t2 = t1.Select(c =>
                            {
                                var row = dtbtch.NewRow();
                                row["icode"] = c.Key.icode;
                                row["iname"] = c.Key.iname;
                                row["partno"] = c.Key.partno;
                                row["uom"] = c.Key.uom;
                                //row["qty_in_stock"] = c.Key.qty_in_stock;
                                row["qty_out"] = c.Sum(k => sgen.Make_decimal(k.Field<string>("qty_out")));
                                return row;
                            });
                            dtbtch = t2.CopyToDataTable();
                            foreach (DataRow dr3 in dtbtch.Rows)
                            {
                                decimal qtyout = sgen.Make_decimal(dr3["qty_out"].ToString().Trim());
                                if (qtyout <= 0)
                                {
                                    ViewBag.vnew = "disabled='disabled'";
                                    ViewBag.vedit = "disabled='disabled'";
                                    ViewBag.vsave = "";
                                    ViewBag.vsavenew = "";
                                    ViewBag.scripCall += "showmsgJS(1,'Please FILL Out Qty in Item " + dr3["iname"].ToString() + "', 2);";
                                    model[0].dt2 = (DataTable)sgen.GetSession(MyGuid, "KNRGP_DT2");
                                    break;
                                }
                                string icode = dr3["icode"].ToString().Trim();
                                DataTable dloc = sgen.getdata(userCode, "select itb.loc,location_name(itb.client_id||itb.client_unit_id||itb.loc) from itbal itb " +
                                "where trim(itb.icode)='" + icode + "' and itb.type='IT' and itb.client_unit_id='" + unitid_mst + "'");
                                //  cond = " and t.client_unit_id||t.vch_num||t.type not in ('" + unitid_mst + model[0].Col18 + model[0].Col12 + "')";
                                DataTable dtlocs = sgen.locclosing_all(userCode, unitid_mst + icode, FN_From_Date + "!~!~!~!~!" + model[0].Col22);
                                int rcnt = dtlocs.Rows.Count;
                                if (rcnt == 0)
                                {
                                    ViewBag.scripCall += "showmsgJS(1,'Item " + icode + " stock is zero' , 0);";
                                    ViewBag.vnew = "disabled='disabled'";
                                    ViewBag.vedit = "disabled='disabled'";
                                    ViewBag.vsave = "";
                                    ViewBag.vsavenew = "";
                                    return View(model);
                                }
                                DataColumn dc = new DataColumn("ordd", typeof(int));
                                dc.DefaultValue = "0";
                                dtlocs.Columns.Add(dc);
                                var rind = sgen.seekval_dt_rowindex(dtlocs, "loc='" + dloc.Rows[0]["loc"].ToString().Trim() + "'");
                                try
                                {
                                    dtlocs.Rows[rind - 1]["ordd"] = rcnt;
                                }
                                catch (Exception err) { }
                                DataView dv = dtlocs.DefaultView;
                                dv.Sort = "ordd asc";
                                dtlocs = dv.ToTable();
                                foreach (DataRow dr in dtlocs.Rows)
                                {
                                    if (qtyout <= 0) break;
                                    DataRow dr2 = model[0].dt2.NewRow();
                                    dr2["sno"] = unitid_mst + dr3["icode"].ToString().Trim() + dloc.Rows[0][0].ToString().Trim();
                                    dr2["Icode"] = dr3["icode"].ToString().Trim();
                                    dr2["INAME"] = dr3["INAME"].ToString().Trim();
                                    dr2["PARTNO"] = dr3["PARTNO"].ToString().Trim();
                                    dr2["UOM"] = dr3["UOM"].ToString().Trim();
                                    dr2["Qty_In_Stock"] = dr["closing"].ToString().Trim();
                                    decimal lclos = sgen.Make_decimal(dr["closing"].ToString().Trim());
                                    if (qtyout > lclos)
                                    {
                                        dr2["Qty_Out"] = lclos;
                                        qtyout = qtyout - lclos;
                                    }
                                    else
                                    {
                                        dr2["Qty_Out"] = qtyout;
                                        qtyout = 0;
                                    }
                                    dr2["Remark"] = "-";
                                    dr2["LocCode"] = dr["loc"].ToString().Trim();
                                    dr2["LOC"] = dr["loc_name"].ToString().Trim();
                                    model[0].dt2.Rows.Add(dr2);
                                }
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                            }
                        }
                        catch (Exception ex) { ViewBag.scripCall += "showmsgJS(1,'" + ex.Message.ToString().Replace('\'', ' ') + "', 0);"; }
                    }
                    if (model[0].dt1.Rows.Count == 0) model[0].dt1 = ((DataTable)sgen.GetSession(MyGuid, "KDS_DT1"));
                    if (model[0].dt2 == null || model[0].dt2.Rows.Count == 0) model[0].dt2 = ((DataTable)sgen.GetSession(MyGuid, "KDS_DT2"));
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {
                    if (model[0].Col133 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for save Dispatch, please contact your admin', 2);";
                        return View(model);
                    }
                    if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-"))
                    {
                        ViewBag.scripCall += "showmsgJS(1,'Please Select item in grid-1', 2);";
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                        return View(model);
                    }
                    if (model[0].dt2.Rows[0]["icode"].ToString().Trim().Equals("-"))
                    {
                        ViewBag.scripCall += "showmsgJS(1,'Please fill location in grid-2', 2);";
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                        return View(model);
                    }
                    foreach (DataRow dr in ds.Tables[0].Rows)
                    {
                        decimal QTY_REQ = 0, QTY_Out = 0, QTY_Out2 = 0;
                        string fstr = dr["sno"].ToString();
                        string icode = dr["icode"].ToString();
                        string INAME = dr["INAME"].ToString();
                        DataTable dtbtch;
                        dtbtch = model[0].dt1.Clone();
                        var t1 = model[0].dt1.AsEnumerable().GroupBy(k => new
                        {
                            icode = k.Field<string>("icode"),
                            iname = k.Field<string>("iname"),
                            partno = k.Field<string>("partno"),
                        });
                        var t2 = t1.Select(c =>
                        {
                            var row = dtbtch.NewRow();
                            row["icode"] = c.Key.icode;
                            row["iname"] = c.Key.iname;
                            row["partno"] = c.Key.partno;
                            row["qty_out"] = c.Sum(k => sgen.Make_decimal(k.Field<string>("qty_out")));
                            row["Qty_Req"] = c.Sum(k => sgen.Make_decimal(k.Field<string>("Qty_Req")));
                            return row;
                        });
                        dtbtch = t2.CopyToDataTable();
                        var filtered1 = dtbtch.Select("icode='" + icode + "'");
                        foreach (var row in filtered1)
                        {
                            //decimal out2 = 0;
                            //QTY_Out2 += out2 = sgen.Make_decimal(row["QTY_Out"].ToString());
                            QTY_Out = sgen.Make_decimal(row["qty_out"].ToString());
                            QTY_REQ = sgen.Make_decimal(row["Qty_Req"].ToString());
                        }
                        DataTable dtbtch2;
                        dtbtch2 = model[0].dt2.Clone();
                        var t21 = model[0].dt2.AsEnumerable().GroupBy(k => new
                        {
                            icode = k.Field<string>("icode"),
                            iname = k.Field<string>("iname"),
                            partno = k.Field<string>("partno"),
                        });
                        var t22 = t21.Select(c =>
                        {
                            var row = dtbtch2.NewRow();
                            row["icode"] = c.Key.icode;
                            row["iname"] = c.Key.iname;
                            row["partno"] = c.Key.partno;
                            row["qty_out"] = c.Sum(k => sgen.Make_decimal(k.Field<string>("qty_out")));
                            //row["Qty_Req"] = c.Sum(k => sgen.Make_decimal(k.Field<string>("Qty_Req")));
                            return row;
                        });
                        dtbtch2 = t22.CopyToDataTable();
                        if (QTY_REQ > 0)
                        {
                            if (QTY_Out > QTY_REQ)
                            {
                                ViewBag.scripCall += "showmsgJS(1, 'Item " + INAME + ", Required Qty is not matching with Out Qty in Grid 1,Please Check', 2);";
                                ModelState.Clear();
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                                return View(model);
                            }
                        }
                        var filtered = dtbtch2.Select("icode='" + icode + "'");
                        foreach (var row in filtered)
                        {
                            decimal out2 = 0;
                            QTY_Out2 += out2 = sgen.Make_decimal(row["QTY_Out"].ToString());
                        }
                        if (QTY_Out != QTY_Out2)
                        {
                            ViewBag.scripCall += "showmsgJS(1, 'Qty_Out does not match with Location Grid of Item " + INAME + "', 2);";
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            return View(model);
                        }
                    }
                    DataTable dataTable = new DataTable();
                    Satransaction sat1 = new Satransaction(userCode, MyGuid);
                    try
                    {
                        string currdate = sgen.server_datetime(userCode);
                        if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                        {
                            isedit = true;
                            vch_num = model[0].Col18;
                        }
                        else
                        {
                            isedit = false;
                            mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                            vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                            model[0].Col18 = vch_num;
                        }
                        string ret_date = sgen.Savedate(model[0].Col22, false);
                        dataTable = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                        for (int i = 0; i < model[0].dt1.Rows.Count; i++)
                        {
                            DataRow dr = dataTable.NewRow();
                            dr["vch_num"] = vch_num;
                            dr["type"] = model[0].Col12;
                            //dr["vch_date"] = currdate;
                            dr["acode"] = model[0].Col49;//party code
                            dr["type2"] = model[0].Col30;//so type code
                            dr["vch_date"] = sgen.Make_date_S(model[0].Col22);//dsp date
                            dr["aname"] = model[0].Col23;//sender name
                            dr["contactno"] = model[0].Col24;//sender cont.
                            dr["totremark"] = model[0].Col25;
                            dr["deptname"] = model[0].Col31; //terms of del
                            dr["dspno"] = model[0].Col34; //manual doc no
                            dr["dspdate"] = sgen.Make_date_S(model[0].Col35); //manual date
                            dr["rgptype"] = model[0].Col32; //vehno
                            dr["icode"] = model[0].dt1.Rows[i]["Icode"].ToString();
                            dr["iname"] = model[0].dt1.Rows[i]["IName"].ToString();
                            dr["cpartno"] = model[0].dt1.Rows[i]["partno"].ToString();
                            dr["uom"] = model[0].dt1.Rows[i]["UOM"].ToString();
                            dr["qtystk"] = model[0].dt1.Rows[i]["Qty_in_stock"].ToString();
                            dr["qtychl"] = model[0].dt1.Rows[i]["Qty_Req"].ToString();
                            dr["qtyout"] = model[0].dt1.Rows[i]["QTY_Out"].ToString().Trim();
                            dr["qtybal"] = model[0].dt1.Rows[i]["qty_Req_bal"].ToString();
                            dr["iremark"] = model[0].dt1.Rows[i]["Remark"].ToString();
                            dr["pono"] = model[0].dt1.Rows[i]["Order_Id"].ToString();
                            if (sgen.GetSession(MyGuid, "KDSTYPE").ToString() != "62" && sgen.GetSession(MyGuid, "KDSTYPE").ToString() != "ST")
                            {
                                dr["TMODE"] = model[0].dt1.Rows[i]["PO_No"].ToString();
                                dr["CHLDATE"] = sgen.Make_date_S(model[0].dt1.Rows[i]["PO_Date"].ToString());
                                dr["VEHNO"] = model[0].dt1.Rows[i]["SO_No"].ToString();
                                dr["INVDATE"] = sgen.Make_date_S(model[0].dt1.Rows[i]["SO_Date"].ToString());
                                if (sgen.GetSession(MyGuid, "KDSTYPE").ToString() == "61")
                                {
                                    dr["GDISC"] = model[0].dt1.Rows[i]["Sdl_no"].ToString();
                                    dr["EWAYDATE"] = sgen.Make_date_S(model[0].dt1.Rows[i]["Sdl_date"].ToString());
                                }
                            }
                            dr["store"] = "Y";
                            dr["rec_id"] = "0";
                            if (isedit)
                            {
                                dr["client_id"] = model[0].Col1.Trim();
                                dr["client_unit_id"] = model[0].Col2.Trim();
                                dr["ent_by"] = model[0].Col3;
                                dr["ent_date"] = model[0].Col4;
                                dr["edit_by"] = userid_mst;
                                dr["edit_date"] = currdate;
                            }
                            else
                            {
                                dr["client_id"] = clientid_mst;
                                dr["client_unit_id"] = unitid_mst;
                                dr["ent_by"] = userid_mst;
                                dr["ent_date"] = currdate;
                                dr["edit_by"] = "-";
                                dr["edit_date"] = currdate;
                            }
                            dataTable.Rows.Add(dr);
                        }
                        res = sgen.Update_data_uncommit2(userCode, dataTable, model[0].Col10.Trim(), model[0].Col8, isedit, sat1);
                        if (res == true)
                        {
                            dataTable = new DataTable();
                            dataTable = cmd_Fun.GetStructure(userCode, "btchtrans");
                            for (int i = 0; i < model[0].dt2.Rows.Count; i++)
                            {
                                DataRow dr = dataTable.NewRow();
                                dr["vch_num"] = vch_num;
                                dr["type"] = model[0].Col12;
                                dr["vch_date"] = sgen.Make_date_S(model[0].Col22);//dsp date
                                dr["acode"] = model[0].Col49;//party code
                                dr["chldate"] = ret_date;//return date
                                dr["chlno"] = model[0].Col23;//sender name
                                dr["invno"] = model[0].Col24;//sender cont.
                                dr["totremark"] = model[0].Col25;
                                dr["icode"] = model[0].dt2.Rows[i]["icode"].ToString();
                                dr["iname"] = model[0].dt2.Rows[i]["iname"].ToString();
                                dr["cpartno"] = model[0].dt2.Rows[i]["partno"].ToString();
                                dr["uom"] = model[0].dt2.Rows[i]["UOM"].ToString();
                                dr["qtystk"] = model[0].dt2.Rows[i]["Qty_in_stock"].ToString();
                                dr["qtyout"] = model[0].dt2.Rows[i]["Qty_Out"].ToString().Trim();
                                dr["iremark"] = model[0].dt2.Rows[i]["Remark"].ToString();
                                dr["loc"] = model[0].dt2.Rows[i]["LocCode"].ToString();
                                dr["locname"] = model[0].dt2.Rows[i]["Loc"].ToString();
                                dr["store"] = "Y";
                                dr["rec_id"] = "0";
                                // shiv
                                if (isedit)
                                {
                                    dr["client_id"] = model[0].Col1.Trim();
                                    dr["client_unit_id"] = model[0].Col2.Trim();
                                    dr["ent_by"] = model[0].Col3;
                                    dr["ent_date"] = model[0].Col4;
                                    dr["edit_by"] = userid_mst;
                                    dr["edit_date"] = currdate;
                                }
                                else
                                {
                                    dr["client_id"] = clientid_mst;
                                    dr["client_unit_id"] = unitid_mst;
                                    dr["ent_by"] = userid_mst;
                                    dr["ent_date"] = currdate;
                                    dr["edit_by"] = "-";
                                    dr["edit_date"] = currdate;
                                }
                                dataTable.Rows.Add(dr);
                            }
                            ok = sgen.Update_data_uncommit2(userCode, dataTable, "btchtrans", model[0].Col17, isedit, sat1);
                            if (ok)
                            {
                                if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                                {
                                    sat1.Commit();
                                    ViewBag.vnew = "";
                                    ViewBag.vedit = "";
                                    ViewBag.vsave = "disabled='disabled'";
                                    ViewBag.vsavenew = "disabled='disabled'";
                                    ViewBag.vfill = "disabled='disabled'";
                                    ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                                }
                                else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                                {
                                    try
                                    {
                                        sat1.Commit();
                                        Make_query("dispatch", "Select Order Type", "SOTYPE", "1", "", "");
                                        ViewBag.scripCall = "callFoo('Select Dispatch Type');";
                                        ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                                    }
                                    catch (Exception ex)
                                    {
                                        ViewBag.scripCall += "mytoast('error', 'toast-top-right', '" + ex.Message.ToString().Trim() + "');";
                                    }
                                }
                                //sat1.Commit();
                                //ViewBag.vnew = "";
                                //ViewBag.vedit = "";
                                //ViewBag.vsave = "disabled='disabled'";
                                //ViewBag.vsavenew = "disabled='disabled'";
                                //ViewBag.vfill = "disabled='disabled'";
                                model = new List<Tmodelmain>();
                                model.Add(new Tmodelmain
                                {
                                    Col13 = "Save",
                                    Col100 = "Save & New",
                                    Col121 = "S",
                                    Col122 = "<u>S</u>ave",
                                    Col123 = "Save & Ne<u>w</u>",
                                    Col10 = tm.Col10,
                                    Col11 = tm.Col11,
                                    Col12 = tm.Col12,
                                    Col14 = tm.Col14,
                                    Col15 = tm.Col15,
                                    dt1 = null,
                                    dt2 = null,
                                });
                                sgen.SetSession(MyGuid, "KDS_DT1", null);
                                sgen.SetSession(MyGuid, "KDS_DT2", null);
                                sgen.SetSession(MyGuid, "KDSTYPE", null);
                                sgen.SetSession(MyGuid, "CST_ID", null);
                                sgen.SetSession(MyGuid, "SO_TYP", null);
                                //ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                            }
                            else
                            {
                                sat1.Rollback();
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                                ViewBag.scripCall += "showmsgJS(1, 'Data Not Saved', 0);";
                                ModelState.Clear();
                                return View(model);
                            }
                        }
                        else
                        {
                            sat1.Rollback();
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            ViewBag.scripCall += "showmsgJS(1, 'Data Not Saved', 0);";
                        }
                    }
                    catch (Exception ex) { ViewBag.scripCall = "showmsgJS(1,'" + ex.Message.ToString().Replace('\'', ' ') + "', 0);"; sat1.Rollback(); }
                }
                else if (command == "-")
                {
                    if (model[0].dt1.Rows.Count > 1) model[0].dt1.Rows.RemoveAt(sgen.Make_int(hfrow));
                    else { model[0].dt1 = (DataTable)sgen.GetSession(MyGuid, "KDS_DT1"); }
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
                else if (command == "2-")
                {
                    if (model[0].dt2.Rows.Count > 1) model[0].dt2.Rows.RemoveAt(sgen.Make_int(hfrow));
                    else { model[0].dt2 = (DataTable)sgen.GetSession(MyGuid, "KDS_DT2"); }
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region dispatch Schedule
        public ActionResult dis_sch()
        {
            FillMst();
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            ViewBag.vimport = "disabled='disabled";
            DataTable dt = new DataTable();
            model[0].Col10 = "kc_tab";//for out
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col40 = "DSC"; //dispatch shedule
            dt = sgen.getdata(userCode, "select '' as Item, '1' as SNo ,'-' as Icode,'-' as IName,'-' PartNo,'-' as UOM,'0' as Order_qty,'0' as Plan_qty," +
                "'-' as Sdl_start_dt,'-' as Sdl_end_dt,'0' as PO_No,'-' PO_Date,'0' SO_No,'-' SO_Date,'-' as Remark from dual");
            model[0].dt1 = dt;
            sgen.SetSession(MyGuid, "DIS_SCH_DT", model[0].dt1);
            //DataTable dtb = (DataTable)Session["URIGHTS"];
            //try
            //{
            //    dtb = dtb.Select("m_id='" + model[0].Col14 + "'").CopyToDataTable();
            //    if (dtb.Rows.Count > 0)
            //    {
            //        model[0].Col91 = dtb.Rows[0]["btnnew"].ToString();
            //        model[0].Col92 = dtb.Rows[0]["btnedit"].ToString();
            //        model[0].Col93 = dtb.Rows[0]["btnview"].ToString();
            //    }
            //}
            //catch (Exception ex) { }
            return View(model);
        }
        [HttpPost]
        public ActionResult dis_sch(List<Tmodelmain> model, string command, string hfrow, string hftable, HttpPostedFileBase upd1)
        {
            try
            {
                FillMst();
                DataTable dtm = sgen.settable(hftable);
                model[0].dt1 = dtm;
                var tm = model.FirstOrDefault();
                if (command == "Cancel") { return CancelFun(model); }
                else if (command == "Callback")
                {
                    //if (model[0].Col92 == "N")
                    //{
                    //    ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for edit Dis Schedule, please contact your admin', 2);disableForm();";
                    //    return View(model);
                    //}
                    model = StartCallback(model);
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {
                    if (model[0].Col133 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for save Dis Schedule, please contact your admin', 2);";
                        return View(model);
                    }
                    if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-"))
                    {
                        ViewBag.scripCall += "showmsgJS(1,'Please Select item in grid-1', 2);";
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                        return View(model);
                    }
                    DataTable dtbtch;
                    dtbtch = model[0].dt1.Clone();
                    var t1 = model[0].dt1.AsEnumerable().GroupBy(k => new
                    {
                        icode = k.Field<string>("icode"),
                        iname = k.Field<string>("iname"),
                        partno = k.Field<string>("partno"),
                        uom = k.Field<string>("uom"),
                        //qty_in_stock = k.Field<string>("qty_in_stock"),
                    });
                    var t2 = t1.Select(c =>
                    {
                        var row = dtbtch.NewRow();
                        row["icode"] = c.Key.icode;
                        row["iname"] = c.Key.iname;
                        row["partno"] = c.Key.partno;
                        row["uom"] = c.Key.uom;
                        row["Order_qty"] = c.Sum(k => sgen.Make_decimal(k.Field<string>("Order_qty")));
                        row["Plan_qty"] = c.Sum(k => sgen.Make_decimal(k.Field<string>("Plan_qty")));
                        return row;
                    });
                    dtbtch = t2.CopyToDataTable();
                    decimal QTY_Out = 0, QTY_REQ = 0;
                    //QTY_Out2 += out2 = sgen.Make_decimal(row["QTY_Out"].ToString());
                    QTY_Out = sgen.Make_decimal(dtbtch.Rows[0]["Order_qty"].ToString());
                    QTY_REQ = sgen.Make_decimal(dtbtch.Rows[0]["Plan_qty"].ToString());
                    if (QTY_Out > 0)
                    {
                        if (QTY_Out < QTY_REQ)
                        {
                            ViewBag.scripCall += "showmsgJS(1, 'Plan Quantity Should not be more Then Order Quantity ,Please Check', 2);";
                            ModelState.Clear();
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            return View(model);
                        }
                    }
                    DataTable dataTable = new DataTable();
                    bool Result = false;
                    //Satransaction sat1 = new Satransaction(userCode,MyGuid);
                    try
                    {
                        string currdate = sgen.server_datetime(userCode);
                        if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                        {
                            isedit = true;
                            vch_num = model[0].Col16;
                        }
                        else
                        {
                            isedit = false;
                            mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                            vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                            model[0].Col16 = vch_num;
                            //string condi = sgen.seekval(userCode, "select col2 from " + model[0].Col10 + " where type='" + model[0].Col12 + "' and client_id='" + clientid_mst + "'  and " +
                            //          "col2='" + model[0].Col23 + "' and client_unit_id='" + unitid_mst + "' " + mq1 + "", "col2");
                            //if (!condi.Equals("0"))
                            //{
                            //    //Means Already Exits.... 
                            //    ViewBag.vnew = "disabled='disabled'";
                            //    ViewBag.vedit = "disabled='disabled'";
                            //    ViewBag.scripCall = "showmsgJS(1,'Schedule No Already Exists',2)";
                            //    return View(model);
                            //}
                        }
                        //string ret_date = sgen.Savedate(model[0].Col22, false);
                        dataTable = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                        for (int i = 0; i < model[0].dt1.Rows.Count; i++)
                        {
                            DataRow dr = dataTable.NewRow();
                            dr["vch_num"] = vch_num; //sdl no
                            dr["type"] = model[0].Col12;
                            dr["vch_date"] = currdate;
                            dr["col1"] = model[0].Col49;//party code
                                                        //dr["date1"] = sgen.Savedate(model[0].Col22, false);    // doc date
                            dr["date1"] = sgen.Make_date_S(model[0].Col22);    // doc date
                                                                               // dr["col2"] = model[0].Col23;//sdl no
                            dr["col3"] = model[0].Col26;//po no
                            dr["col4"] = model[0].Col29; //so no
                            dr["col21"] = model[0].Col28; //remark
                            dr["col20"] = model[0].Col40; //hf so type
                            dr["date2"] = sgen.Make_date_S(model[0].Col24); //sd st date
                            dr["date3"] = sgen.Make_date_S(model[0].Col25); //sd end date
                            dr["date4"] = sgen.Make_date_S(model[0].Col27); //po dt
                            dr["date7"] = sgen.Make_date_S(model[0].Col31); //so dt
                            dr["col5"] = model[0].dt1.Rows[i]["Icode"].ToString();
                            dr["col27"] = model[0].dt1.Rows[i]["IName"].ToString();
                            dr["col7"] = model[0].dt1.Rows[i]["PartNo"].ToString();
                            dr["col8"] = model[0].dt1.Rows[i]["UOM"].ToString();
                            dr["col9"] = model[0].dt1.Rows[i]["Order_qty"].ToString().Trim();
                            dr["col10"] = model[0].dt1.Rows[i]["Plan_qty"].ToString();
                            dr["col11"] = model[0].dt1.Rows[i]["PO_No"].ToString();
                            if (model[0].dt1.Rows[i]["Sdl_start_dt"].ToString() != "")
                            {
                                dr["date8"] = sgen.Make_date_S(model[0].dt1.Rows[i]["Sdl_start_dt"].ToString());
                                dr["date9"] = sgen.Make_date_S(model[0].dt1.Rows[i]["Sdl_end_dt"].ToString());
                            }
                            //dr["date5"] = model[0].dt1.Rows[i]["PO_Date"].ToString();
                            dr["date5"] = sgen.Make_date_S(model[0].dt1.Rows[i]["PO_Date"].ToString());
                            dr["col13"] = model[0].dt1.Rows[i]["SO_No"].ToString();
                            dr["col12"] = model[0].dt1.Rows[i]["Remark"].ToString();
                            dr["date6"] = sgen.Make_date_S(model[0].dt1.Rows[i]["SO_Date"].ToString());
                            // shiv
                            dr = getsave(currdate, dr, model);
                            dataTable.Rows.Add(dr);
                        }
                        Result = sgen.Update_data(userCode, dataTable, model[0].Col10.Trim(), model[0].Col8, isedit);
                        if (Result == true)
                        {
                            model = new List<Tmodelmain>();
                            model.Add(new Tmodelmain
                            {
                                Col10 = tm.Col10,
                                Col53 = tm.Col53,
                                Col54 = tm.Col54,
                                Col11 = tm.Col11,
                                Col13 = "Save",
                                Col100 = "Save & New",
                                Col121 = "S",
                                Col122 = "<u>S</u>ave",
                                Col123 = "Save & Ne<u>w</u>",
                                Col14 = tm.Col14,
                                Col15 = tm.Col15,
                                Col12 = tm.Col12,
                                Col40 = "DSC",
                                dt1 = (DataTable)sgen.GetSession(MyGuid, "DIS_SCH_DT")
                            });

                            if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                            {
                                ViewBag.vnew = "";
                                ViewBag.vedit = "";
                                ViewBag.vsave = "disabled='disabled'";
                                ViewBag.vsavenew = "disabled='disabled'";
                                ViewBag.vimport = "disabled='disabled";
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                            }
                            else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                            {
                                try
                                {
                                    Make_query("dis_sch", "Select SO Type", "NEW", "1", "", "");
                                    ViewBag.scripCall = "callFoo('Select Dispatch Schedule Type');";
                                    ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                                }
                                catch (Exception ex)
                                {
                                    ViewBag.scripCall += "mytoast('error', 'toast-top-right', '" + ex.Message.ToString().Trim() + "');";
                                }
                            }
                        }
                    }
                    catch (Exception ex) { ViewBag.scripCall = "showmsgJS(1,'" + ex.Message.ToString() + "', 0);"; }
                }
                else if (command == "Import")
                {
                    HttpPostedFileBase file1 = upd1;
                    DataTable dt = new DataTable();
                    if (file1.ContentLength > 1)
                    {
                        string ext = Path.GetExtension(file1.FileName).ToLower();
                        if (ext == ".csv")
                        {
                            string filesavepath = AppDomain.CurrentDomain.BaseDirectory + "\\Uploads\\" + cg_com_name.Replace(" ", "")
                                + "\\file" + DateTime.Now.ToString("ddMMyyyyhhmmfff") + ext;
                            file1.SaveAs(filesavepath);
                            // Read sample data from CSV file
                            int i = 0;
                            using (CsvFileReader reader = new CsvFileReader(filesavepath))
                            {
                                CsvRow row = new CsvRow();
                                while (reader.ReadRow(row))
                                {
                                    DataRow dr = dt.NewRow();
                                    for (int c = 0; c < row.Count; c++)
                                    {
                                        if (i == 0) { dt.Columns.Add(row[c].ToString()); }
                                        else { dr[c] = row[c].ToString(); }
                                        //if (c > dt.Columns.Count) break;                                                                 
                                    }
                                    i++;
                                    dt.Rows.Add(dr);
                                }
                            }
                        }
                        try
                        {
                            dt.Rows[0].Delete();
                            for (int k = 0; k < dt.Rows.Count; k++)
                            {
                                mq = sgen.seekval(userCode, "select icode from item where icode='" + dt.Rows[k]["icode"].ToString() + "' and type='IT' and client_unit_id='" + unitid_mst + "'", "icode");
                                if (mq.Trim() == "0")
                                {
                                    ViewBag.vnew = "disabled='disabled'";
                                    ViewBag.vedit = "disabled='disabled'";
                                    ViewBag.vsave = "";
                                    ViewBag.vsavenew = "";
                                    ViewBag.scripCall += "showmsgJS(1,'Icode: " + dt.Rows[k]["icode"].ToString() + " not found,please check.', 0);";
                                    ModelState.Clear();
                                    return View(model);
                                }
                                else
                                {
                                    mq = sgen.seekval(userCode, "select icode from purchasesc where icode='" + dt.Rows[k]["icode"].ToString() + "' and pur_type = 'NPI' and substr(type,1,1)='4' and client_unit_id='" + unitid_mst + "'", "icode");
                                    if (mq.Trim() == "0")
                                    {
                                        ViewBag.vnew = "disabled='disabled'";
                                        ViewBag.vedit = "disabled='disabled'";
                                        ViewBag.vsave = "";
                                        ViewBag.vsavenew = "";
                                        ViewBag.scripCall += "showmsgJS(1,'Icode: " + dt.Rows[k]["icode"].ToString() + " not found in Sales Order,please check.', 0);";
                                        ModelState.Clear();
                                        return View(model);
                                    }
                                }
                            }
                            mq1 = "select '-' as item,'0' Sno,it.icode as Icode,it.iname as Iname,it.cpartno Partno,hsn.master_name as HSN,nvl(pc.bal_qty, '0') as Order_qty," +
                                   "um.master_name as UOM,pc.po_no as po_num,to_char(pc.date1, '" + sgen.Getsqldateformat() + "') as po_date,to_char" +
                                   "(pc.vch_date, '" + sgen.Getsqldateformat() + "') as so_date,pc.vch_num as so_no from item it inner join (select a.po_no, a.vch_num, a.icode, a.type, " +
                                   "a.so_qty,a.vch_date, a.date1,nvl(sum(a.invoice_qty), '0') as used_qty,a.so_qty - nvl(sum(a.invoice_qty), '0') as bal_qty from " +
                                   "(select pc.vch_num, pc.gothrchrg as po_no, pc.date1, pc.vch_date, pc.icode, pc.type, pc.qtyord as so_qty, iv.qtyout as invoice_qty from purchasesc pc " +
                                   "left join itransaction iv on iv.sono = pc.vch_num and iv.potype = '51' and pc.icode=iv.icode and iv.client_unit_id = pc.client_unit_id " +
                                   "where pc.pur_type = 'NPI' and substr(pc.type, 1, 1) = '4' and pc.client_unit_id = '" + unitid_mst + "' union all " +
                                   "select pc.vch_num, pc.gothrchrg as po_no, pc.date1, pc.vch_date, pc.icode, pc.type, pc.qtyord as so_qty, dp.qtyout as dsp_qty from purchasesc pc " +
                                   "left join itransaction dp on dp.VEHNO = pc.vch_num and dp.type = '60' and pc.icode=dp.icode and dp.client_unit_id = pc.client_unit_id" +
                                   " where pc.pur_type = 'NPI' and substr(pc.type, 1, 1) = '4' union all select pc.vch_num, pc.gothrchrg as po_no, pc.date1,pc.vch_date, pc.icode, " +
                                   "pc.type, pc.qtyord as so_qty, ds.col10 as dsp_qty from purchasesc pc left join kc_tab ds on ds.col13 = pc.vch_num and pc.icode=ds.col5 and ds.col20 = 'DSC' and" +
                                   " ds.client_unit_id = pc.client_unit_id where pc.pur_type = 'NPI' and substr(pc.type, 1, 1) = '4') a group" +
                                   " by(a.vch_num, a.icode, a.type, a.so_qty, a.po_no, a.vch_date, a.date1)) pc on pc.icode = it.icode left join master_setting um on" +
                                   " um.master_id = it.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, it.client_unit_id)= 1 " +
                                   "left join master_setting hsn on hsn.master_id = it.hsno and hsn.type = 'HSN' and " +
                                   "find_in_set(hsn.client_unit_id, it.client_unit_id)= 1 " +
                                   "where it.type = 'IT' and find_in_set(it.client_unit_id, '" + unitid_mst + "')=1  and " +
                                   "pc.type='" + sgen.GetSession(MyGuid, "SO_type").ToString() + "' and pc.vch_num " +
                                   "in ('" + sgen.GetSession(MyGuid, "So_num").ToString().Trim().TrimEnd(',').Replace(",", "','").Trim().ToString() + "') and" +
                                   " it.sale='Y' " + where + " ";
                            //mq1 = "select '-' item,'0' Sno,i.icode,i.iname,i.cpartno partno,u.master_name uom,h.master_name hsn,h.group_name taxrate,nvl(s.closing, 0) qty_in_stock," +
                            //    "'0' iamount,'0' taxamount,'0' lineamount,'' Delivery_date from item i " +
                            //    "inner join  master_setting u on u.master_id = i.uom and u.type = 'UMM' and find_in_set(u.client_id, i.client_id)= 1 and find_in_set(u.client_unit_id, i.client_unit_id)= 1 " +
                            //    "inner join  master_setting h on h.master_id = i.hsno and h.type = 'HSN' and find_in_set(h.client_id, i.client_id)= 1 and find_in_set(h.client_unit_id, i.client_unit_id)= 1 " +
                            //    "left join(select t.client_unit_id, t.icode, sum(nvl(t.qtyin, 0)) as Received, sum(nvl(t.qtyout, 0)) Issued," +
                            //    "sum(nvl(t.qtyin, 0)) - sum(nvl(t.qtyout, 0)) as closing from itransaction t where trim(t.store) = 'Y' group by t.icode," +
                            //    "t.client_unit_id ) s on i.icode = s.icode and i.client_unit_id = s.client_unit_id " +
                            //    "where i.type = 'IT' and i.client_id = '" + clientid_mst + "' and i.client_unit_id = '" + unitid_mst + "'";
                            DataTable dt2 = sgen.getdata(userCode, mq1);
                            if (dt2.Rows.Count > 0)
                            {
                                var results = from table1 in dt.AsEnumerable()
                                              join table2 in dt2.AsEnumerable() on table1["icode"] equals table2["icode"]
                                              select new
                                              {
                                                  item = table2["item"],
                                                  sno = table2["sno"],
                                                  icode = table1["icode"],
                                                  iname = table2["iname"],
                                                  partno = table2["partno"],
                                                  uom = table2["uom"],
                                                  order_qty = table2["order_qty"],
                                                  PLAN_QTY = table1["PLAN_QTY"],
                                                  SDL_START_DT = table1["SDL_START_DT"],
                                                  SDL_END_DT = table1["SDL_END_DT"],
                                                  PO_No = table2["po_num"],
                                                  PO_Date = table2["po_date"],
                                                  SO_No = table2["so_no"],
                                                  SO_Date = table2["so_date"],
                                                  remark = table1["remark"]
                                              };
                                results.ToList();
                                DataTable dtk = sgen.ToDataTable(results.ToList());
                                if (dtk.Rows.Count > 0)
                                {
                                    model[0].dt1 = dtk;
                                    ViewBag.vimport = "disabled='disabled";
                                    ViewBag.vnew = "disabled='disabled'";
                                    ViewBag.vedit = "disabled='disabled'";
                                    ViewBag.vsave = "";
                                    ViewBag.vsavenew = "";
                                }
                                else
                                {
                                    ViewBag.vnew = "disabled='disabled'";
                                    ViewBag.vedit = "disabled='disabled'";
                                    ViewBag.vsave = "";
                                    ViewBag.vsavenew = "";
                                    ViewBag.scripCall += "showmsgJS(1,'Data Not Found,Please Check', 0);";
                                    ModelState.Clear();
                                    return View(model);
                                }
                                ViewBag.vsave = "";
                                ViewBag.vimport = "";
                            }
                        }
                        catch (Exception err) { sgen.showmsg(1, err.Message.ToString(), 0); }
                    }
                }
                else if (command == "-")
                {
                    if (model[0].dt1.Rows.Count > 1) model[0].dt1.Rows.RemoveAt(sgen.Make_int(hfrow));
                    else { model[0].dt1 = (DataTable)sgen.GetSession(MyGuid, "DIS_SCH_DT"); }
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
                //else if (command == "2-")
                //{
                //    if (model[0].dt2.Rows.Count > 1) model[0].dt2.Rows.RemoveAt(sgen.Make_int(hfrow));
                //    else { model[0].dt2 = (DataTable)Session["DIS_SCH_DT"]; }
                //    ViewBag.vnew = "disabled='disabled'";
                //    ViewBag.vedit = "disabled='disabled'";
                //    ViewBag.vsave = "";
                //    ViewBag.vsavenew = "";
                //}
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        [HttpGet]
        public FileResult sdltemp(List<Tmodelmain> model)
        {
            FillMst();
            model = (List<Tmodelmain>)sgen.GetSession(MyGuid, "model");
            DataTable dtl = new DataTable();
            mq = "SELECT '' icode,'' Plan_qty,'' Sdl_start_dt,'' Sdl_end_dt,'' Remark from Dual";
            dtl = sgen.getdata(userCode, mq);
            string cg_com_name = sgen.GetCookie(MyGuid, "cg_com_name");
            Byte[] fileBytes = sgen.Exp_to_csv_new(dtl, "sdltemp", cg_com_name);
            return File(fileBytes, System.Net.Mime.MediaTypeNames.Application.Octet, "sdltemp");
        }
        #endregion
        #region inv_conf
        public ActionResult inv_conf()
        {
            FillMst();
            chkRef();
            List<Tmodelmain> model = new List<Tmodelmain>();
            Tmodelmain tm1 = new Tmodelmain();
            DataTable dt = new DataTable();
            mid_mst = EncryptDecrypt.Decrypt(Request.QueryString["mid"]);
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            tm1.Col10 = "master_setting";
            tm1.Col11 = " and client_id = '" + clientid_mst + "'";
            tm1.Col14 = mid_mst.Trim();
            tm1.Col15 = MyGuid.Trim();
            mq = "select master_name,type from master_setting where type in ('CF0','CF1')" + tm1.Col11 + "";
            dt = sgen.getdata(userCode, mq);
            if (dt.Rows.Count > 0)
            {
                tm1.Col18 = sgen.seekval_dt(dt, "type='CF0'", "master_name");
                tm1.Chk1 = sgen.seekval_dt(dt, "type='CF1'", "master_name") == "Y" ? true : false;
            }
            model.Add(tm1);
            return View(model);
        }
        [HttpPost]
        public ActionResult inv_conf(List<Tmodelmain> model, string command, string hfrow, string hftable)
        {
            try
            {
                FillMst();
                var tm = model.FirstOrDefault();
                if (command.ToUpper() == "EVALTYPE") model[0].Col12 = "CF0";
                if (command.ToUpper() == "ISSVAL") model[0].Col12 = "CF1";
                DataTable dataTable = new DataTable();
                try
                {
                    string issueval = "N";
                    string currdate = sgen.server_datetime(userCode);
                    sgen.SetSession(MyGuid, "EDMODE", "N");
                    isedit = false;
                    mq = "select max(to_number(master_id)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                    vch_num = sgen.genNo(userCode, mq, 3, "auto_genid");
                    dataTable = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                    DataRow dr = dataTable.NewRow();
                    dr["master_id"] = vch_num.Trim();
                    dr["vch_date"] = currdate;
                    dr["type"] = model[0].Col12;
                    if (model[0].Col12.Trim() == "CF0")
                    {
                        if (model[0].Col18 != null) dr["master_name"] = model[0].Col18;
                        else { ViewBag.scripCall += "showmsgJS(1, 'Please select inventory evaluation', 0);"; }
                    }
                    else if (model[0].Col12.Trim() == "CF1")
                    {
                        if (model[0].Chk1 == true) issueval = "Y";
                        dr["master_name"] = issueval;
                    }
                    dr["rec_id"] = "0";
                    dr["master_entby"] = userid_mst;
                    dr["master_entdate"] = currdate;
                    dr["master_editby"] = "-";
                    dr["master_editdate"] = currdate;
                    dr["client_id"] = clientid_mst;
                    dr["client_unit_id"] = unitid_mst;
                    dataTable.Rows.Add(dr);
                    res = sgen.Update_data(userCode, dataTable, model[0].Col10.Trim(), "(client_id||client_unit_id||type)='" + clientid_mst + unitid_mst + model[0].Col12 + "'", isedit);
                    if (res)
                    {
                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col10 = tm.Col10,
                            Col11 = tm.Col11,
                            Col14 = tm.Col14,
                            Col15 = tm.Col15,
                        });
                        ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                    }
                    else { ViewBag.scripCall += "showmsgJS(1, 'Data Not Saved', 0);"; }
                }
                catch (Exception ex) { ViewBag.scripCall = "showmsgJS(1,'" + ex.Message.ToString().Replace('\'', ' ') + "', 0);"; }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region PDI
        //brijesh
        public ActionResult pdi()
        {
            FillMst();
            List<Tmodelmain> model = new List<Tmodelmain>();
            //List<SelectListItem> mod1 = new List<SelectListItem>();
            //List<SelectListItem> mod2 = new List<SelectListItem>();
            model = getload(model);
            ViewBag.vfill = "disabled='disabled'";
            model[0].Col9 = "PRE DISPATCH INSPECTION";
            model[0].Col10 = "Itransaction";
            model[0].Col11 = "and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "'";
            model[0].Col12 = "19"; //pre dispatch insp
            model[0].Col13 = "Save";
            model[0].Col23 = "btchtrans";//for out
            //model[0].Col100 = "Save & New";
            DataTable dt = sgen.getdata(userCode, "select '' Item, '1' as SNo, '-' as Icode, '-' as IName, '0' as Sub_group, " +
                "'0' as Qty_in_stock, '0' as Qty_PDI, '0' as OK_PDI,b.master_name||'('|| master_id ||')' as rej from dual inner join" +
                " (select * from master_setting where type = 'PDI' and client_unit_id = '" + unitid_mst + "') b " +
                "on 1 = 1");
            Pivot pvt = new Pivot(dt, MyGuid);
            DataTable dataTable = pvt.PivotData("Qty_in_stock", AggregateFunction.Max, new string[]
            { "Item","SNo", "icode", "iname", "Sub_group","Qty_in_stock","Qty_PDI","OK_PDI" }, new string[] { "rej" });
            model[0].dt1 = dataTable;
            sgen.SetSession(MyGuid, "PDI_DT", dataTable);
            dt = sgen.getdata(userCode, "select '-' as SNo ,'-' as Icode,'-' as IName,'-' PartNo,'-' as UOM,'0' as Qty_Out,'-' as Remark,'0' LocCode,'-' Loc from dual");
            model[0].dt2 = dt;
            sgen.SetSession(MyGuid, "PDI_DT2", model[0].dt2);
            //model[0].TList1 = mod1;
            //model[0].TList2 = mod2;
            //model[0].SelectedItems1 = new string[] { "" };
            //model[0].SelectedItems2 = new string[] { "" };
            return View(model);
        }
        public List<Tmodelmain> new_pdi(List<Tmodelmain> model)
        {
            try
            {
                model = getnew(model);
                ViewBag.vfill = "disabled='disabled'";
                model[0].Col17 = sgen.server_datetime_local(userCode);
                model[0].Col13 = "Save";
            }
            catch (Exception ex) { }
            return model;
        }
        [HttpPost]
        public ActionResult pdi(List<Tmodelmain> model, string command, string hfrow, string hftable)
        {
            try
            {
                FillMst();
                var tm = model.FirstOrDefault();
                DataSet ds = new DataSet();
                if (hftable.Trim() != "")
                {
                    ds = sgen.setDS(hftable);
                    model[0].dt1 = ds.Tables[0];
                    model[0].dt2 = ds.Tables[1];
                    if (model[0].dt1.Rows.Count == 0) model[0].dt1 = ((DataTable)sgen.GetSession(MyGuid, "PDI_DT"));
                    if (model[0].dt2.Rows.Count == 0) model[0].dt2 = ((DataTable)sgen.GetSession(MyGuid, "PDI_DT2"));
                }
                //#region ddl          
                //List<SelectListItem> mod1 = new List<SelectListItem>();
                //model[0].TList1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                //TempData[MyGuid + "_TList1"] = model[0].TList1;
                //if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                //List<SelectListItem> mod2 = new List<SelectListItem>();
                //model[0].TList2 = (List<SelectListItem>)TempData[MyGuid + "_TList2"];
                //TempData[MyGuid + "_TList2"] = model[0].TList2;
                //if (tm.SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
                //#endregion
                if (command == "New")
                {
                    model = new_pdi(model);
                    //string date = DateTime.Now.ToShortDateString();
                    //string date = sgen.Make_date_S(currdate);
                    //model[0].Col17 = sgen.server_datetime_local(userCode);
                    //#region getdept
                    //mod1 = cmd_Fun.dept(userCode, clientid_mst, unitid_mst);
                    //TempData[MyGuid + "_TList1"] = mod1;
                    //model[0].TList1 = mod1;
                    //#endregion
                    //#region getdesig
                    //mod2 = cmd_Fun.desig(userCode, clientid_mst, unitid_mst);
                    //TempData[MyGuid + "_TList2"] = mod2;
                    //model[0].TList2 = mod2;
                    //#endregion
                    //model[0].Col13 = "Save";
                    //model[0].Col100 = "Save & New";
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command == "Fill Location")
                {
                    if (model[0].dt1.Rows[0]["Icode"].ToString().Trim().Equals("-"))
                    {
                        ViewBag.scripCall += "showmsgJS(1,'Please Select item in grid-1', 0);";
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                        return View(model);
                    }
                    if (model[0].dt1.Rows[0]["Qty_pdi"].ToString().Trim().Equals("0") || model[0].dt1.Rows[0]["Qty_pdi"].ToString().Trim().Equals(""))
                    {
                        ViewBag.scripCall += "showmsgJS(1,'Please Fill Out Quantity in grid-1', 0);";
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                        return View(model);
                    }
                    try
                    {
                        if (model[0].dt2 != null && model[0].dt2.Rows[0]["Icode"].ToString().Trim().Equals("-")) { model[0].dt2.Rows.RemoveAt(0); }
                    }
                    catch (Exception err) { }
                    var dttt = model[0].dt2.Clone();
                    model[0].dt2 = dttt;
                    foreach (DataRow dr1 in model[0].dt1.Rows)
                    {
                        try
                        {
                            if (model[0].dt1.Rows[0]["Icode"].ToString().Trim().Equals("-"))
                            {
                                ViewBag.scripCall += "showmsgJS(1,'Please Select item in grid-1', 2);";
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                                return View(model);
                            }
                            try
                            {
                                if (model[0].dt2.Rows[0]["Icode"].ToString().Trim().Equals("-")) { model[0].dt2.Rows.RemoveAt(0); }
                            }
                            catch (Exception err) { }
                            var dt7 = model[0].dt2.Clone();
                            model[0].dt2 = dt7;
                            DataTable dtbtch;
                            dtbtch = model[0].dt1.Clone();
                            var t1 = model[0].dt1.AsEnumerable().GroupBy(k => new
                            {
                                icode = k.Field<string>("icode"),
                                iname = k.Field<string>("iname"),
                                sub_group = k.Field<string>("sub_group"),
                                //partno = k.Field<string>("partno"),
                                //uom = k.Field<string>("uom"),
                                //qty_in_stock = k.Field<string>("qty_in_stock"),
                            });
                            var t2 = t1.Select(c =>
                            {
                                var row = dtbtch.NewRow();
                                row["icode"] = c.Key.icode;
                                row["iname"] = c.Key.iname;
                                row["sub_group"] = c.Key.sub_group;
                                //row["partno"] = c.Key.partno;
                                //row["uom"] = c.Key.uom;
                                //row["qty_in_stock"] = c.Key.qty_in_stock;
                                row["qty_pdi"] = c.Sum(k => sgen.Make_decimal(k.Field<string>("qty_pdi")));
                                row["ok_pdi"] = c.Sum(k => sgen.Make_decimal(k.Field<string>("ok_pdi")));
                                return row;
                            });
                            dtbtch = t2.CopyToDataTable();
                            foreach (DataRow dr3 in dtbtch.Rows)
                            {
                                decimal qtyout = sgen.Make_decimal(dr3["ok_pdi"].ToString().Trim());
                                if (qtyout <= 0)
                                {
                                    ViewBag.vnew = "disabled='disabled'";
                                    ViewBag.vedit = "disabled='disabled'";
                                    ViewBag.vsave = "";
                                    ViewBag.vsavenew = "";
                                    ViewBag.scripCall += "showmsgJS(1,'Please FILL Ok PDI Qty in Item " + dr3["iname"].ToString() + "', 2);";
                                    model[0].dt2 = (DataTable)sgen.GetSession(MyGuid, "PDI_DT2");
                                    break;
                                }
                                string icode = dr3["icode"].ToString().Trim();
                                DataTable dloc = sgen.getdata(userCode, "select itb.loc,location_name(itb.client_id||itb.client_unit_id||itb.loc) as loc_name from itbal itb " +
                                "where trim(itb.icode)='" + icode + "' and itb.type='IT' and itb.client_unit_id='" + unitid_mst + "'");
                                //DataTable dtlocs = sgen.locclosing_all(userCode, unitid_mst + icode, "");
                                //int rcnt = dtlocs.Rows.Count;
                                //if (rcnt == 0)
                                //{
                                //    ViewBag.scripCall += "showmsgJS(1,'Item " + icode + " stock is zero' , 0);";
                                //    return View(model);
                                //}
                                //DataColumn dc = new DataColumn("ordd", typeof(int));
                                //dc.DefaultValue = "0";
                                //dtlocs.Columns.Add(dc);
                                //var rind = sgen.seekval_dt_rowindex(dtlocs, "loc='" + dloc.Rows[0]["loc"].ToString().Trim() + "'");
                                //try
                                //{
                                //    dtlocs.Rows[rind - 1]["ordd"] = rcnt;
                                //}
                                //catch (Exception err) { }
                                DataView dv = dtbtch.DefaultView;
                                dv.Sort = "iname asc";
                                dtbtch = dv.ToTable();
                                foreach (DataRow dr in dloc.Rows)
                                {
                                    if (qtyout <= 0) break;
                                    DataRow dr2 = model[0].dt2.NewRow();
                                    dr2["sno"] = unitid_mst + dr3["icode"].ToString().Trim() + dloc.Rows[0][0].ToString().Trim();
                                    dr2["Icode"] = dr3["icode"].ToString().Trim();
                                    dr2["INAME"] = dr3["INAME"].ToString().Trim();
                                    dr2["Qty_Out"] = dr3["ok_pdi"].ToString().Trim();
                                    dr2["PARTNO"] = /*dr3["PARTNO"].ToString().Trim();*/"-";
                                    dr2["UOM"] = /*dr3["UOM"].ToString().Trim();*/"-";
                                    //dr2["Qty_In_Stock"] = dr["closing"].ToString().Trim();
                                    //decimal lclos = sgen.Make_decimal(dr["closing"].ToString().Trim());
                                    //if (qtyout > lclos)
                                    //{
                                    //    dr2["Qty_Out"] = lclos;
                                    //    qtyout = qtyout - lclos;
                                    //}
                                    //else
                                    //{
                                    dr2["Qty_Out"] = qtyout;
                                    qtyout = 0;
                                    //}
                                    dr2["Remark"] = "-";
                                    dr2["LocCode"] = dr["loc"].ToString().Trim();
                                    dr2["LOC"] = dr["loc_name"].ToString().Trim();
                                    model[0].dt2.Rows.Add(dr2);
                                }
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                            }
                        }
                        catch (Exception ex) { ViewBag.scripCall += "showmsgJS(1,'" + ex.Message.ToString().Replace('\'', ' ') + "', 0);"; }
                    }
                    if (model[0].dt1.Rows.Count == 0) model[0].dt1 = ((DataTable)sgen.GetSession(MyGuid, "KDS_DT1"));
                    if (model[0].dt2 == null || model[0].dt2.Rows.Count == 0) model[0].dt2 = ((DataTable)sgen.GetSession(MyGuid, "KDS_DT2"));
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {
                    if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-"))
                    {
                        ViewBag.scripCall += "showmsgJS(1,'Please Select item in grid-1', 2);";
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                        return View(model);
                    }
                    if (model[0].dt2.Rows[0]["icode"].ToString().Trim().Equals("-"))
                    {
                        ViewBag.scripCall += "showmsgJS(1,'Please fill location in grid-2', 2);";
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                        return View(model);
                    }
                    foreach (DataRow dr in ds.Tables[0].Rows)
                    {
                        decimal QTY_REQ = 0, QTY_Out = 0, QTY_Out2 = 0;
                        string fstr = dr["sno"].ToString();
                        string icode = dr["icode"].ToString();
                        string INAME = dr["INAME"].ToString();
                        //QTY_REQ = sgen.Make_decimal(dr["Qty_Req"].ToString());
                        //QTY_Out = sgen.Make_decimal(dr["QTY_Out"].ToString());
                        DataTable dtbtch;
                        dtbtch = model[0].dt1.Clone();
                        var t1 = model[0].dt1.AsEnumerable().GroupBy(k => new
                        {
                            icode = k.Field<string>("icode"),
                            iname = k.Field<string>("iname"),
                            //partno = k.Field<string>("partno"),
                        });
                        var t2 = t1.Select(c =>
                        {
                            var row = dtbtch.NewRow();
                            row["icode"] = c.Key.icode;
                            row["iname"] = c.Key.iname;
                            //row["partno"] = c.Key.partno;
                            row["qty_pdi"] = c.Sum(k => sgen.Make_decimal(k.Field<string>("qty_pdi")));
                            row["ok_pdi"] = c.Sum(k => sgen.Make_decimal(k.Field<string>("ok_pdi")));
                            return row;
                        });
                        dtbtch = t2.CopyToDataTable();
                        var filtered1 = dtbtch.Select("icode='" + icode + "'");
                        foreach (var row in filtered1)
                        {
                            //decimal out2 = 0;
                            //QTY_Out2 += out2 = sgen.Make_decimal(row["QTY_Out"].ToString());
                            QTY_Out = sgen.Make_decimal(row["qty_pdi"].ToString());
                            QTY_REQ = sgen.Make_decimal(row["ok_pdi"].ToString());
                        }
                        DataTable dtbtch2;
                        dtbtch2 = model[0].dt2.Clone();
                        var t21 = model[0].dt2.AsEnumerable().GroupBy(k => new
                        {
                            icode = k.Field<string>("icode"),
                            iname = k.Field<string>("iname"),
                            partno = k.Field<string>("partno"),
                        });
                        var t22 = t21.Select(c =>
                        {
                            var row = dtbtch2.NewRow();
                            row["icode"] = c.Key.icode;
                            row["iname"] = c.Key.iname;
                            row["partno"] = c.Key.partno;
                            row["qty_out"] = c.Sum(k => sgen.Make_decimal(k.Field<string>("qty_out")));
                            //row["Qty_Req"] = c.Sum(k => sgen.Make_decimal(k.Field<string>("Qty_Req")));
                            return row;
                        });
                        dtbtch2 = t22.CopyToDataTable();
                        if (QTY_REQ > 0)
                        {
                            if (QTY_REQ > QTY_Out)
                            {
                                ViewBag.scripCall += "showmsgJS(1, 'Item " + INAME + ", OK_Qty is not matching with PDI Qty in Grid 1,Please Check', 2);";
                                ModelState.Clear();
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                                return View(model);
                            }
                        }
                        var filtered = dtbtch2.Select("icode='" + icode + "'");
                        foreach (var row in filtered)
                        {
                            decimal out2 = 0;
                            QTY_Out2 += out2 = sgen.Make_decimal(row["QTY_Out"].ToString());
                        }
                        if (QTY_REQ != QTY_Out2)
                        {
                            ViewBag.scripCall += "showmsgJS(1, 'Ok_pdi does not match with Location Grid's Qty_out of Item " + INAME + "', 2);";
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            return View(model);
                        }
                    }
                    Satransaction sat = new Satransaction(userCode, MyGuid);
                    try
                    {
                        string found = "", inactive_date = "";
                        var tmodel = model.FirstOrDefault();
                        string currdate = sgen.server_datetime(userCode);
                        ent_date = currdate;
                        DataTable dtstr = new DataTable();
                        if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                        {
                            mq1 = " and vch_num<>'" + tmodel.Col16.Trim() + "'";
                            isedit = true;
                            vch_num = tmodel.Col16.Trim();
                        }
                        else
                        {
                            isedit = false;
                            vch_num = sgen.genNo(userCode, "select max(to_number (vch_num)) as max from " + model[0].Col10 + " where client_id='" + clientid_mst + "'" +
                                                           " and client_unit_id='" + unitid_mst + "' and type='" + model[0].Col12 + "'", 6, "max");
                        }
                        int kcount = 0;
                        kcount = 8;
                        //dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                        bool Result = false;
                        bool Result1 = false;
                        if (tmodel.Col8 == null) tmodel.Col8 = "";
                        if (tmodel.Col24 == null) tmodel.Col24 = "";
                        DataTable dri0 = cmd_Fun.GetStructure(userCode, "iprod");
                        DataTable dri1 = cmd_Fun.GetStructure(userCode, "iprod");
                        dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                        DataTable dataTable = cmd_Fun.GetStructure(userCode, "btchtrans");
                        for (int i = 0; i < model[0].dt1.Rows.Count; i++)
                        {
                            decimal pdi_qty = 0, r_pdi_qty = 0, ok_pdi = 0;
                            DataRow dr = dtstr.NewRow();
                            dr["vch_num"] = vch_num;
                            dr["type"] = model[0].Col12;
                            dr["vch_date"] = sgen.Make_date_S(model[0].Col17);
                            dr["aname"] = model[0].Col18;//operator name
                            dr["acode"] = model[0].Col21;//operator code
                                                         //dr["deptno"] = model[0].SelectedItems1.FirstOrDefault();
                                                         //dr["desig"] = model[0].SelectedItems2.FirstOrDefault();
                            dr["icode"] = model[0].dt1.Rows[i]["Icode"].ToString();
                            dr["iname"] = model[0].dt1.Rows[i]["IName"].ToString();
                            dr["deptname"] = model[0].dt1.Rows[i]["Sub_group"].ToString();
                            dr["qtystk"] = model[0].dt1.Rows[i]["Qty_in_stock"].ToString();
                            dr["qtychl"] = model[0].dt1.Rows[i]["Qty_PDI"].ToString().Trim();
                            dr["qtyin"] = model[0].dt1.Rows[i]["OK_PDI"].ToString();
                            pdi_qty = sgen.Make_decimal(model[0].dt1.Rows[i]["Qty_PDI"].ToString().Trim());
                            //ok_pdi_qty = sgen.Make_decimal(model[0].dt1.Rows[i]["OK_PDI"].ToString().Trim());
                            decimal qtypdi = 0, itemstk = 0;
                            itemstk = sgen.Make_decimal(model[0].dt1.Rows[0]["Qty_in_stock"].ToString());
                            if (itemstk < pdi_qty)
                            {
                                //sat.Rollback();
                                ViewBag.scripCall += "showmsgJS(1, 'PDI Quantity Should not be more Then Stock in Line " + (i + 1) + " ,Please Check', 2);";
                                ModelState.Clear();
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                                return View(model);
                            }
                            ok_pdi = sgen.Make_decimal(model[0].dt1.Rows[i]["OK_PDI"].ToString().Trim());
                            dr["store"] = "Y";
                            dr = getsave(currdate, dr, model);
                            dtstr.Rows.Add(dr);
                            //DataTable dri0 = cmd_Fun.GetStructure(userCode, "Iprod");
                            dr = dri0.NewRow();
                            dr["vch_num"] = vch_num;
                            dr["type"] = "10P";
                            dr["vch_date"] = sgen.Make_date_S(model[0].Col17);
                            dr["icode"] = model[0].dt1.Rows[i]["Icode"].ToString();
                            dr["iname"] = model[0].dt1.Rows[i]["IName"].ToString();
                            dr["stage"] = "100";
                            dr["stage1"] = "-";
                            dr["qtyout"] = model[0].dt1.Rows[i]["Qty_PDI"].ToString().Trim().Split('(')[0].Trim();
                            dr = getsave(currdate, dr, model);
                            dri0.Rows.Add(dr);
                            //if (Result && Result1)
                            //{
                            for (int k = kcount; k < model[0].dt1.Columns.Count; k++)
                            {
                                DataRow dr1 = dri1.NewRow();
                                dr1["vch_num"] = vch_num.Trim();
                                dr1["vch_date"] = sgen.Make_date_S(model[0].Col17);
                                //if (isedit) dr1["vch_date"] = sgen.Make_date_S(model[0].Col17); ;
                                dr1["type"] = "10R";
                                dr1["icode"] = model[0].dt1.Rows[i]["Icode"].ToString();
                                dr1["iname"] = model[0].dt1.Rows[i]["IName"].ToString();
                                if (model[0].dt1.Rows[i][k].ToString() != "")
                                {
                                    dr1["QTYIN"] = model[0].dt1.Rows[i][k].ToString().Trim().Split('(')[0].Trim();
                                    r_pdi_qty += sgen.Make_decimal(model[0].dt1.Rows[i][k].ToString().Trim().Split('(')[0].Trim());
                                }
                                else
                                {
                                    dr1["QTYIN"] = "0";
                                }
                                dr1["rejname"] = model[0].dt1.Columns[k].ColumnName.ToString().Trim().Split('(')[0].Trim();
                                dr1["rejcode"] = model[0].dt1.Columns[k].ColumnName.ToString().Trim().Split('(')[1].Trim().Split(')')[0].Trim();
                                dr1["mstage"] = "100";
                                dr1["stage1"] = "101";
                                dr1 = getsave(currdate, dr1, model);
                                dri1.Rows.Add(dr1);
                            }
                            decimal ok_plus_rej = 0;
                            ok_plus_rej = r_pdi_qty + ok_pdi;
                            if (pdi_qty != ok_plus_rej)
                            {
                                sat.Rollback();
                                ViewBag.scripCall += "showmsgJS(1, 'Total PDI qty not matching in Sr. No. " + (i + 1) + " ,Please Re-enter the correct Qty', 2);";
                                ModelState.Clear();
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                                return View(model);
                            }
                            //brijesh
                            dr = dataTable.NewRow();
                            dr["vch_num"] = vch_num;
                            dr["type"] = model[0].Col12;
                            dr["vch_date"] = sgen.Make_date_S(model[0].Col17);//dsp date
                            dr["acode"] = model[0].Col21;//party code
                            dr["chldate"] = currdate;//return date
                            dr["chlno"] = model[0].Col18;//sender name
                                                         //dr["invno"] = model[0].Col24;//sender cont.
                            dr["totremark"] = model[0].Col19;
                            dr["icode"] = model[0].dt2.Rows[i]["icode"].ToString();
                            dr["iname"] = model[0].dt2.Rows[i]["iname"].ToString();
                            dr["cpartno"] = model[0].dt2.Rows[i]["partno"].ToString();
                            dr["uom"] = model[0].dt2.Rows[i]["UOM"].ToString();
                            //dr["qtystk"] = model[0].dt2.Rows[i]["Qty_in_stock"].ToString();
                            dr["qtyin"] = model[0].dt2.Rows[i]["Qty_Out"].ToString().Trim();
                            dr["iremark"] = model[0].dt2.Rows[i]["Remark"].ToString();
                            dr["loc"] = model[0].dt2.Rows[i]["LocCode"].ToString();
                            dr["locname"] = model[0].dt2.Rows[i]["Loc"].ToString();
                            dr["store"] = "Y";
                            dr["rec_id"] = "0";
                            // shiv
                            if (isedit)
                            {
                                dr["client_id"] = model[0].Col1.Trim();
                                dr["client_unit_id"] = model[0].Col2.Trim();
                                dr["ent_by"] = model[0].Col3;
                                dr["ent_date"] = model[0].Col4;
                                dr["edit_by"] = userid_mst;
                                dr["edit_date"] = currdate;
                            }
                            else
                            {
                                dr["client_id"] = clientid_mst;
                                dr["client_unit_id"] = unitid_mst;
                                dr["ent_by"] = userid_mst;
                                dr["ent_date"] = currdate;
                                dr["edit_by"] = "-";
                                dr["edit_date"] = currdate;
                            }
                            dataTable.Rows.Add(dr);
                            //}
                        }
                        Result = sgen.Update_data_fast1_uncommit(userCode, dtstr, model[0].Col10.Trim(), tmodel.Col8.TrimEnd('\'') + "19'".ToString(), isedit, sat);
                        Result1 = sgen.Update_data_fast1_uncommit(userCode, dri0, "iprod", tmodel.Col8.TrimEnd('\'') + "10P'".ToString(), isedit, sat);
                        var Result2 = sgen.Update_data_fast1_uncommit(userCode, dri1, "iprod", tmodel.Col8.TrimEnd('\'') + "10R'".ToString(), isedit, sat);
                        ok = sgen.Update_data_fast1_uncommit(userCode, dataTable, "btchtrans", tmodel.Col24.TrimEnd('\'') + "19'".ToString(), isedit, sat);
                        if (Result && Result1 && Result2 && ok)
                        {
                            sat.Commit();
                            model = new List<Tmodelmain>();
                            model.Add(new Tmodelmain
                            {
                                //Col16 = tm.Col16,
                                Col17 = "",
                                Col1 = "",
                                Col18 = "",
                                Col9 = tm.Col9,
                                Col10 = tm.Col10,
                                Col11 = tm.Col11,
                                Col12 = tm.Col12,
                                Col13 = "Save",
                                Col14 = tm.Col14,
                                Col15 = tm.Col15,
                                Col100 = "Save & New",
                                Col121 = "S",
                                Col122 = "<u>S</u>ave",
                                Col123 = "Save & Ne<u>w</u>",
                                //TList1 = mod1,
                                //TList2 = mod2,
                                //SelectedItems1 = new string[] { "" },
                                //SelectedItems2 = new string[] { "" },
                                dt1 = (DataTable)sgen.GetSession(MyGuid, "PDI_DT"),
                                dt2 = (DataTable)sgen.GetSession(MyGuid, "PDI_DT2")
                            });
                            if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                            {
                                ViewBag.vnew = "";
                                ViewBag.vedit = "";
                                ViewBag.vsave = "disabled='disabled'";
                                ViewBag.vsavenew = "disabled='disabled'";
                                ViewBag.vfill = "disabled='disabled'";
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                            }
                            else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                            {
                                try
                                {
                                    model = new_pdi(model);
                                    ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                                }
                                catch (Exception ex) { }
                            }
                        }
                        else
                        {
                            sat.Rollback();
                            ViewBag.scripCall = "showmsgJS(3, 'Record Not Saved', 1);";
                        }
                    }
                    catch (Exception ex) { sat.Rollback(); ViewBag.scripCall = "showmsgJS(1, '" + ex.Message.ToString() + "', 1);"; }
                }
                else if (command == "-")
                {
                    if (model[0].dt1.Rows.Count > 1) model[0].dt1.Rows.RemoveAt(sgen.Make_int(hfrow));
                    else { model[0].dt1 = (DataTable)sgen.GetSession(MyGuid, "PDI_DT"); }
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
                else if (command == "2-")
                {
                    if (model[0].dt2.Rows.Count > 1) model[0].dt2.Rows.RemoveAt(sgen.Make_int(hfrow));
                    else { model[0].dt2 = (DataTable)sgen.GetSession(MyGuid, "KDS_DT2"); }
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region pdin
        //brijesh
        public ActionResult pdin()
        {
            FillMst();
            List<Tmodelmain> model = new List<Tmodelmain>();
            List<SelectListItem> mod1 = new List<SelectListItem>();
            model = getload(model);
            ViewBag.vfill = "disabled='disabled'";
            model[0].Col9 = "PRE DISPATCH INSPECTION";
            model[0].Col10 = "Itransaction";
            model[0].Col11 = "and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "'";
            model[0].Col12 = "19"; //pre dispatch insp
            model[0].Col13 = "Save";
            model[0].Col23 = "btchtrans";//for out
            //model[0].Col100 = "Save & New";
            DataTable dt = sgen.getdata(userCode, "select '' Item, '1' as SNo, '-' as Icode, '-' as IName, '0' as Sub_group, " +
                "'0' as Qty_in_stock, '0' as Qty_PDI, '0' as OK_PDI,b.master_name||'('|| master_id ||')' as rej from dual inner join" +
                " (select * from master_setting where type = 'PDI' and client_unit_id = '" + unitid_mst + "') b " +
                "on 1 = 1");
            Pivot pvt = new Pivot(dt, MyGuid);
            DataTable dataTable = pvt.PivotData("Qty_in_stock", AggregateFunction.Max, new string[]
            { "Item","SNo", "icode", "iname", "Sub_group","Qty_in_stock","Qty_PDI","OK_PDI" }, new string[] { "rej" });
            model[0].dt1 = dataTable;
            sgen.SetSession(MyGuid, "PDI_DT", dataTable);
            dt = sgen.getdata(userCode, "select '-' as SNo ,'-' as Icode,'-' as IName,'-' PartNo,'-' as UOM,'0' as Qty_Out,'-' as Remark,'0' LocCode,'-' Loc from dual");
            model[0].dt2 = dt;
            sgen.SetSession(MyGuid, "PDI_DT2", model[0].dt2);
            model[0].TList1 = mod1;
            model[0].SelectedItems1 = new string[] { "" };
            return View(model);
        }
        public List<Tmodelmain> new_pdin(List<Tmodelmain> model)
        {
            try
            {
                model = getnew(model);
                ViewBag.vfill = "disabled='disabled'";
                model[0].Col17 = sgen.server_datetime_local(userCode);
                model[0].Col13 = "Save";
            }
            catch (Exception ex) { }
            return model;
        }
        [HttpPost]
        public ActionResult pdin(List<Tmodelmain> model, string command, string hfrow, string hftable)
        {
            try
            {
                FillMst();
                var tm = model.FirstOrDefault();
                DataSet ds = new DataSet();
                if (hftable.Trim() != "")
                {
                    ds = sgen.setDS(hftable);
                    model[0].dt1 = ds.Tables[0];
                    model[0].dt2 = ds.Tables[1];
                    if (model[0].dt1.Rows.Count == 0) model[0].dt1 = ((DataTable)sgen.GetSession(MyGuid, "PDI_DT"));
                    if (model[0].dt2.Rows.Count == 0) model[0].dt2 = ((DataTable)sgen.GetSession(MyGuid, "PDI_DT2"));
                }
                List<SelectListItem> mod1 = new List<SelectListItem>();
                model[0].TList1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                TempData[MyGuid + "_TList1"] = model[0].TList1;
                if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                if (command == "New")
                {
                    model = new_pdi(model);
                    #region getstage
                    mod1 = cmd_Fun.prodallstage(userCode, unitid_mst);
                    TempData[MyGuid + "_TList1"] = mod1;
                    model[0].TList1 = mod1;
                    #endregion                    
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command == "Fill Location")
                {
                    if (model[0].dt1.Rows[0]["Icode"].ToString().Trim().Equals("-"))
                    {
                        ViewBag.scripCall += "showmsgJS(1,'Please Select item in grid-1', 0);";
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                        return View(model);
                    }
                    if (model[0].dt1.Rows[0]["Qty_pdi"].ToString().Trim().Equals("0") || model[0].dt1.Rows[0]["Qty_pdi"].ToString().Trim().Equals(""))
                    {
                        ViewBag.scripCall += "showmsgJS(1,'Please Fill Out Quantity in grid-1', 0);";
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                        return View(model);
                    }
                    try
                    {
                        if (model[0].dt2 != null && model[0].dt2.Rows[0]["Icode"].ToString().Trim().Equals("-")) { model[0].dt2.Rows.RemoveAt(0); }
                    }
                    catch (Exception err) { }
                    var dttt = model[0].dt2.Clone();
                    model[0].dt2 = dttt;
                    foreach (DataRow dr1 in model[0].dt1.Rows)
                    {
                        try
                        {
                            if (model[0].dt1.Rows[0]["Icode"].ToString().Trim().Equals("-"))
                            {
                                ViewBag.scripCall += "showmsgJS(1,'Please Select item in grid-1', 2);";
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                                return View(model);
                            }
                            try
                            {
                                if (model[0].dt2.Rows[0]["Icode"].ToString().Trim().Equals("-")) { model[0].dt2.Rows.RemoveAt(0); }
                            }
                            catch (Exception err) { }
                            var dt7 = model[0].dt2.Clone();
                            model[0].dt2 = dt7;
                            DataTable dtbtch;
                            dtbtch = model[0].dt1.Clone();
                            var t1 = model[0].dt1.AsEnumerable().GroupBy(k => new
                            {
                                icode = k.Field<string>("icode"),
                                iname = k.Field<string>("iname"),
                                sub_group = k.Field<string>("sub_group"),
                                //partno = k.Field<string>("partno"),
                                //uom = k.Field<string>("uom"),
                                //qty_in_stock = k.Field<string>("qty_in_stock"),
                            });
                            var t2 = t1.Select(c =>
                            {
                                var row = dtbtch.NewRow();
                                row["icode"] = c.Key.icode;
                                row["iname"] = c.Key.iname;
                                row["sub_group"] = c.Key.sub_group;
                                //row["partno"] = c.Key.partno;
                                //row["uom"] = c.Key.uom;
                                //row["qty_in_stock"] = c.Key.qty_in_stock;
                                row["qty_pdi"] = c.Sum(k => sgen.Make_decimal(k.Field<string>("qty_pdi")));
                                row["ok_pdi"] = c.Sum(k => sgen.Make_decimal(k.Field<string>("ok_pdi")));
                                return row;
                            });
                            dtbtch = t2.CopyToDataTable();
                            foreach (DataRow dr3 in dtbtch.Rows)
                            {
                                decimal qtyout = sgen.Make_decimal(dr3["ok_pdi"].ToString().Trim());
                                if (qtyout <= 0)
                                {
                                    ViewBag.vnew = "disabled='disabled'";
                                    ViewBag.vedit = "disabled='disabled'";
                                    ViewBag.vsave = "";
                                    ViewBag.vsavenew = "";
                                    ViewBag.scripCall += "showmsgJS(1,'Please FILL Ok PDI Qty in Item " + dr3["iname"].ToString() + "', 2);";
                                    model[0].dt2 = (DataTable)sgen.GetSession(MyGuid, "PDI_DT2");
                                    break;
                                }
                                string icode = dr3["icode"].ToString().Trim();
                                DataTable dloc = sgen.getdata(userCode, "select itb.loc,location_name(itb.client_id||itb.client_unit_id||itb.loc) as loc_name from itbal itb " +
                                "where trim(itb.icode)='" + icode + "' and itb.type='IT' and itb.client_unit_id='" + unitid_mst + "'");
                                //DataTable dtlocs = sgen.locclosing_all(userCode, unitid_mst + icode, "");
                                //int rcnt = dtlocs.Rows.Count;
                                //if (rcnt == 0)
                                //{
                                //    ViewBag.scripCall += "showmsgJS(1,'Item " + icode + " stock is zero' , 0);";
                                //    return View(model);
                                //}
                                //DataColumn dc = new DataColumn("ordd", typeof(int));
                                //dc.DefaultValue = "0";
                                //dtlocs.Columns.Add(dc);
                                //var rind = sgen.seekval_dt_rowindex(dtlocs, "loc='" + dloc.Rows[0]["loc"].ToString().Trim() + "'");
                                //try
                                //{
                                //    dtlocs.Rows[rind - 1]["ordd"] = rcnt;
                                //}
                                //catch (Exception err) { }
                                DataView dv = dtbtch.DefaultView;
                                dv.Sort = "iname asc";
                                dtbtch = dv.ToTable();
                                foreach (DataRow dr in dloc.Rows)
                                {
                                    if (qtyout <= 0) break;
                                    DataRow dr2 = model[0].dt2.NewRow();
                                    dr2["sno"] = unitid_mst + dr3["icode"].ToString().Trim() + dloc.Rows[0][0].ToString().Trim();
                                    dr2["Icode"] = dr3["icode"].ToString().Trim();
                                    dr2["INAME"] = dr3["INAME"].ToString().Trim();
                                    dr2["Qty_Out"] = dr3["ok_pdi"].ToString().Trim();
                                    dr2["PARTNO"] = /*dr3["PARTNO"].ToString().Trim();*/"-";
                                    dr2["UOM"] = /*dr3["UOM"].ToString().Trim();*/"-";
                                    //dr2["Qty_In_Stock"] = dr["closing"].ToString().Trim();
                                    //decimal lclos = sgen.Make_decimal(dr["closing"].ToString().Trim());
                                    //if (qtyout > lclos)
                                    //{
                                    //    dr2["Qty_Out"] = lclos;
                                    //    qtyout = qtyout - lclos;
                                    //}
                                    //else
                                    //{
                                    dr2["Qty_Out"] = qtyout;
                                    qtyout = 0;
                                    //}
                                    dr2["Remark"] = "-";
                                    dr2["LocCode"] = dr["loc"].ToString().Trim();
                                    dr2["LOC"] = dr["loc_name"].ToString().Trim();
                                    model[0].dt2.Rows.Add(dr2);
                                }
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                            }
                        }
                        catch (Exception ex) { ViewBag.scripCall += "showmsgJS(1,'" + ex.Message.ToString().Replace('\'', ' ') + "', 0);"; }
                    }
                    if (model[0].dt1.Rows.Count == 0) model[0].dt1 = ((DataTable)sgen.GetSession(MyGuid, "KDS_DT1"));
                    if (model[0].dt2 == null || model[0].dt2.Rows.Count == 0) model[0].dt2 = ((DataTable)sgen.GetSession(MyGuid, "KDS_DT2"));
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {
                    if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-"))
                    {
                        ViewBag.scripCall += "showmsgJS(1,'Please Select item in grid-1', 2);";
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                        return View(model);
                    }
                    if (model[0].dt2.Rows[0]["icode"].ToString().Trim().Equals("-"))
                    {
                        ViewBag.scripCall += "showmsgJS(1,'Please fill location in grid-2', 2);";
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                        return View(model);
                    }
                    foreach (DataRow dr in ds.Tables[0].Rows)
                    {
                        decimal QTY_REQ = 0, QTY_Out = 0, QTY_Out2 = 0;
                        string fstr = dr["sno"].ToString();
                        string icode = dr["icode"].ToString();
                        string INAME = dr["INAME"].ToString();
                        //QTY_REQ = sgen.Make_decimal(dr["Qty_Req"].ToString());
                        //QTY_Out = sgen.Make_decimal(dr["QTY_Out"].ToString());
                        DataTable dtbtch;
                        dtbtch = model[0].dt1.Clone();
                        var t1 = model[0].dt1.AsEnumerable().GroupBy(k => new
                        {
                            icode = k.Field<string>("icode"),
                            iname = k.Field<string>("iname"),
                            //partno = k.Field<string>("partno"),
                        });
                        var t2 = t1.Select(c =>
                        {
                            var row = dtbtch.NewRow();
                            row["icode"] = c.Key.icode;
                            row["iname"] = c.Key.iname;
                            //row["partno"] = c.Key.partno;
                            row["qty_pdi"] = c.Sum(k => sgen.Make_decimal(k.Field<string>("qty_pdi")));
                            row["ok_pdi"] = c.Sum(k => sgen.Make_decimal(k.Field<string>("ok_pdi")));
                            return row;
                        });
                        dtbtch = t2.CopyToDataTable();
                        var filtered1 = dtbtch.Select("icode='" + icode + "'");
                        foreach (var row in filtered1)
                        {
                            //decimal out2 = 0;
                            //QTY_Out2 += out2 = sgen.Make_decimal(row["QTY_Out"].ToString());
                            QTY_Out = sgen.Make_decimal(row["qty_pdi"].ToString());
                            QTY_REQ = sgen.Make_decimal(row["ok_pdi"].ToString());
                        }
                        DataTable dtbtch2;
                        dtbtch2 = model[0].dt2.Clone();
                        var t21 = model[0].dt2.AsEnumerable().GroupBy(k => new
                        {
                            icode = k.Field<string>("icode"),
                            iname = k.Field<string>("iname"),
                            partno = k.Field<string>("partno"),
                        });
                        var t22 = t21.Select(c =>
                        {
                            var row = dtbtch2.NewRow();
                            row["icode"] = c.Key.icode;
                            row["iname"] = c.Key.iname;
                            row["partno"] = c.Key.partno;
                            row["qty_out"] = c.Sum(k => sgen.Make_decimal(k.Field<string>("qty_out")));
                            //row["Qty_Req"] = c.Sum(k => sgen.Make_decimal(k.Field<string>("Qty_Req")));
                            return row;
                        });
                        dtbtch2 = t22.CopyToDataTable();
                        if (QTY_REQ > 0)
                        {
                            if (QTY_REQ > QTY_Out)
                            {
                                ViewBag.scripCall += "showmsgJS(1, 'Item " + INAME + ", OK_Qty is not matching with PDI Qty in Grid 1,Please Check', 2);";
                                ModelState.Clear();
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                                return View(model);
                            }
                        }
                        var filtered = dtbtch2.Select("icode='" + icode + "'");
                        foreach (var row in filtered)
                        {
                            decimal out2 = 0;
                            QTY_Out2 += out2 = sgen.Make_decimal(row["QTY_Out"].ToString());
                        }
                        if (QTY_REQ != QTY_Out2)
                        {
                            ViewBag.scripCall += "showmsgJS(1, 'Ok_pdi does not match with Location Grid's Qty_out of Item " + INAME + "', 2);";
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            return View(model);
                        }
                    }
                    Satransaction sat = new Satransaction(userCode, MyGuid);
                    try
                    {
                        string found = "", inactive_date = "";
                        var tmodel = model.FirstOrDefault();
                        string currdate = sgen.server_datetime(userCode);
                        ent_date = currdate;
                        DataTable dtstr = new DataTable();
                        if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                        {
                            mq1 = " and vch_num<>'" + tmodel.Col16.Trim() + "'";
                            isedit = true;
                            vch_num = tmodel.Col16.Trim();
                        }
                        else
                        {
                            isedit = false;
                            vch_num = sgen.genNo(userCode, "select max(to_number (vch_num)) as max from " + model[0].Col10 + " where " +
                            "client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "' and type='" + model[0].Col12 + "'", 6, "max");
                        }
                        int kcount = 0;
                        kcount = 8;
                        //dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                        bool Result = false;
                        bool Result1 = false;
                        if (tmodel.Col8 == null) tmodel.Col8 = "";
                        if (tmodel.Col24 == null) tmodel.Col24 = "";
                        DataTable dri0 = cmd_Fun.GetStructure(userCode, "iprod");
                        DataTable dri1 = cmd_Fun.GetStructure(userCode, "iprod");
                        dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                        DataTable dataTable = cmd_Fun.GetStructure(userCode, "btchtrans");
                        for (int i = 0; i < model[0].dt1.Rows.Count; i++)
                        {
                            decimal pdi_qty = 0, r_pdi_qty = 0, ok_pdi = 0;
                            DataRow dr = dtstr.NewRow();
                            dr["vch_num"] = vch_num;
                            dr["type"] = model[0].Col12;
                            dr["type2"] = model[0].Col12;
                            dr["vch_date"] = sgen.Make_date_S(model[0].Col17);
                            dr["aname"] = model[0].Col18;//operator name
                            dr["acode"] = model[0].Col21;//operator code
                                                         //dr["deptno"] = model[0].SelectedItems1.FirstOrDefault();
                                                         //dr["desig"] = model[0].SelectedItems2.FirstOrDefault();
                            dr["icode"] = model[0].dt1.Rows[i]["Icode"].ToString();
                            dr["iname"] = model[0].dt1.Rows[i]["IName"].ToString();
                            dr["deptname"] = model[0].dt1.Rows[i]["Sub_group"].ToString();
                            dr["qtystk"] = model[0].dt1.Rows[i]["Qty_in_stock"].ToString();
                            dr["qtychl"] = model[0].dt1.Rows[i]["Qty_PDI"].ToString().Trim();
                            dr["qtyin"] = model[0].dt1.Rows[i]["OK_PDI"].ToString();
                            pdi_qty = sgen.Make_decimal(model[0].dt1.Rows[i]["Qty_PDI"].ToString().Trim());
                            //ok_pdi_qty = sgen.Make_decimal(model[0].dt1.Rows[i]["OK_PDI"].ToString().Trim());
                            decimal qtypdi = 0, itemstk = 0;
                            itemstk = sgen.Make_decimal(model[0].dt1.Rows[0]["Qty_in_stock"].ToString());
                            if (itemstk < pdi_qty)
                            {
                                //sat.Rollback();
                                ViewBag.scripCall += "showmsgJS(1, 'PDI Quantity Should not be more Then Stock in Line " + (i + 1) + " ,Please Check', 2);";
                                ModelState.Clear();
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                                return View(model);
                            }
                            ok_pdi = sgen.Make_decimal(model[0].dt1.Rows[i]["OK_PDI"].ToString().Trim());
                            dr["store"] = "Y";
                            dr = getsave(currdate, dr, model);
                            dtstr.Rows.Add(dr);
                            //DataTable dri0 = cmd_Fun.GetStructure(userCode, "Iprod");
                            dr = dri0.NewRow();
                            dr["vch_num"] = vch_num;
                            dr["type"] = "10P";
                            dr["type2"] = model[0].Col12;
                            dr["vch_date"] = sgen.Make_date_S(model[0].Col17);
                            dr["icode"] = model[0].dt1.Rows[i]["Icode"].ToString();
                            dr["iname"] = model[0].dt1.Rows[i]["IName"].ToString();
                            dr["stage"] = model[0].SelectedItems1.FirstOrDefault();
                            dr["stage1"] = "-";
                            dr["qtyout"] = model[0].dt1.Rows[i]["Qty_PDI"].ToString().Trim().Split('(')[0].Trim();
                            dr = getsave(currdate, dr, model);
                            dri0.Rows.Add(dr);
                            //if (Result && Result1)
                            //{
                            for (int k = kcount; k < model[0].dt1.Columns.Count; k++)
                            {
                                DataRow dr1 = dri1.NewRow();
                                dr1["vch_num"] = vch_num.Trim();
                                dr1["vch_date"] = sgen.Make_date_S(model[0].Col17);
                                //if (isedit) dr1["vch_date"] = sgen.Make_date_S(model[0].Col17); ;
                                dr1["type"] = "10R";
                                dr["type2"] = model[0].Col12;
                                dr1["icode"] = model[0].dt1.Rows[i]["Icode"].ToString();
                                dr1["iname"] = model[0].dt1.Rows[i]["IName"].ToString();
                                if (model[0].dt1.Rows[i][k].ToString() != "")
                                {
                                    dr1["QTYIN"] = model[0].dt1.Rows[i][k].ToString().Trim().Split('(')[0].Trim();
                                    r_pdi_qty += sgen.Make_decimal(model[0].dt1.Rows[i][k].ToString().Trim().Split('(')[0].Trim());
                                }
                                else
                                {
                                    dr1["QTYIN"] = "0";
                                }
                                dr1["rejname"] = model[0].dt1.Columns[k].ColumnName.ToString().Trim().Split('(')[0].Trim();
                                dr1["rejcode"] = model[0].dt1.Columns[k].ColumnName.ToString().Trim().Split('(')[1].Trim().Split(')')[0].Trim();
                                dr1["mstage"] = "100";
                                dr1["stage1"] = "101";
                                dr1 = getsave(currdate, dr1, model);
                                dri1.Rows.Add(dr1);
                            }
                            decimal ok_plus_rej = 0;
                            ok_plus_rej = r_pdi_qty + ok_pdi;
                            if (pdi_qty != ok_plus_rej)
                            {
                                sat.Rollback();
                                ViewBag.scripCall += "showmsgJS(1, 'Total PDI qty not matching in Sr. No. " + (i + 1) + " ,Please Re-enter the correct Qty', 2);";
                                ModelState.Clear();
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                                return View(model);
                            }
                            //brijesh
                            dr = dataTable.NewRow();
                            dr["vch_num"] = vch_num;
                            dr["type"] = model[0].Col12;
                            dr["type2"] = model[0].Col12;
                            dr["vch_date"] = sgen.Make_date_S(model[0].Col17);//dsp date
                            dr["acode"] = model[0].Col21;//party code
                            dr["chldate"] = currdate;//return date
                            dr["chlno"] = model[0].Col18;//sender name
                                                         //dr["invno"] = model[0].Col24;//sender cont.
                            dr["totremark"] = model[0].Col19;
                            dr["icode"] = model[0].dt2.Rows[i]["icode"].ToString();
                            dr["iname"] = model[0].dt2.Rows[i]["iname"].ToString();
                            dr["cpartno"] = model[0].dt2.Rows[i]["partno"].ToString();
                            dr["uom"] = model[0].dt2.Rows[i]["UOM"].ToString();
                            //dr["qtystk"] = model[0].dt2.Rows[i]["Qty_in_stock"].ToString();
                            dr["qtyin"] = model[0].dt2.Rows[i]["Qty_Out"].ToString().Trim();
                            dr["iremark"] = model[0].dt2.Rows[i]["Remark"].ToString();
                            dr["loc"] = model[0].dt2.Rows[i]["LocCode"].ToString();
                            dr["locname"] = model[0].dt2.Rows[i]["Loc"].ToString();
                            dr["store"] = "Y";
                            dr["rec_id"] = "0";
                            // shiv
                            if (isedit)
                            {
                                dr["client_id"] = model[0].Col1.Trim();
                                dr["client_unit_id"] = model[0].Col2.Trim();
                                dr["ent_by"] = model[0].Col3;
                                dr["ent_date"] = model[0].Col4;
                                dr["edit_by"] = userid_mst;
                                dr["edit_date"] = currdate;
                            }
                            else
                            {
                                dr["client_id"] = clientid_mst;
                                dr["client_unit_id"] = unitid_mst;
                                dr["ent_by"] = userid_mst;
                                dr["ent_date"] = currdate;
                                dr["edit_by"] = "-";
                                dr["edit_date"] = currdate;
                            }
                            dataTable.Rows.Add(dr);
                            //}
                        }
                        Result = sgen.Update_data_fast1_uncommit(userCode, dtstr, model[0].Col10.Trim(), tmodel.Col8.TrimEnd('\'') + "19'".ToString(), isedit, sat);
                        Result1 = sgen.Update_data_fast1_uncommit(userCode, dri0, "iprod", tmodel.Col8.TrimEnd('\'') + "10P'".ToString(), isedit, sat);
                        var Result2 = sgen.Update_data_fast1_uncommit(userCode, dri1, "iprod", tmodel.Col8.TrimEnd('\'') + "10R'".ToString(), isedit, sat);
                        ok = sgen.Update_data_fast1_uncommit(userCode, dataTable, "btchtrans", tmodel.Col24.TrimEnd('\'') + "19'".ToString(), isedit, sat);
                        if (Result && Result1 && Result2 && ok)
                        {
                            sat.Commit();
                            model = new List<Tmodelmain>();
                            model.Add(new Tmodelmain
                            {
                                //Col16 = tm.Col16,
                                Col17 = "",
                                Col1 = "",
                                Col18 = "",
                                Col9 = tm.Col9,
                                Col10 = tm.Col10,
                                Col11 = tm.Col11,
                                Col12 = tm.Col12,
                                Col13 = "Save",
                                Col14 = tm.Col14,
                                Col15 = tm.Col15,
                                Col100 = "Save & New",
                                Col121 = "S",
                                Col122 = "<u>S</u>ave",
                                Col123 = "Save & Ne<u>w</u>",
                                //TList1 = mod1,
                                //TList2 = mod2,
                                //SelectedItems1 = new string[] { "" },
                                //SelectedItems2 = new string[] { "" },
                                dt1 = (DataTable)sgen.GetSession(MyGuid, "PDI_DT"),
                                dt2 = (DataTable)sgen.GetSession(MyGuid, "PDI_DT2")
                            });
                            if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                            {
                                ViewBag.vnew = "";
                                ViewBag.vedit = "";
                                ViewBag.vsave = "disabled='disabled'";
                                ViewBag.vsavenew = "disabled='disabled'";
                                ViewBag.vfill = "disabled='disabled'";
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                            }
                            else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                            {
                                try
                                {
                                    model = new_pdi(model);
                                    ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                                }
                                catch (Exception ex) { }
                            }
                        }
                        else
                        {
                            sat.Rollback();
                            ViewBag.scripCall = "showmsgJS(3, 'Record Not Saved', 1);";
                        }
                    }
                    catch (Exception ex) { sat.Rollback(); ViewBag.scripCall = "showmsgJS(1, '" + ex.Message.ToString() + "', 1);"; }
                }
                else if (command == "-")
                {
                    if (model[0].dt1.Rows.Count > 1) model[0].dt1.Rows.RemoveAt(sgen.Make_int(hfrow));
                    else { model[0].dt1 = (DataTable)sgen.GetSession(MyGuid, "PDI_DT"); }
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
                else if (command == "2-")
                {
                    if (model[0].dt2.Rows.Count > 1) model[0].dt2.Rows.RemoveAt(sgen.Make_int(hfrow));
                    else { model[0].dt2 = (DataTable)sgen.GetSession(MyGuid, "KDS_DT2"); }
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region gate in
        public ActionResult g_in()
        {
            FillMst();
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            List<SelectListItem> mod1 = new List<SelectListItem>();
            model[0].Col9 = "GATE IN";
            model[0].Col10 = "kc_tab";
            model[0].Col18 = "1";
            model[0].Col35 = "1";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "GIN"; //Gate in
            model[0].TList1 = mod1;
            model[0].SelectedItems1 = new string[] { "" };
            return View(model);
        }
        public List<Tmodelmain> newg_in(List<Tmodelmain> model)
        {
            try
            {
                model = getnew(model);
                model[0].Col13 = "Save";
                model[0].Col100 = "Save & New";
                model[0].Col121 = "S";
                model[0].Col122 = "<u>S</u>ave";
                model[0].Col123 = "Save & Ne<u>w</u>";
                model[0].Col18 = "0";
                model[0].Col35 = "0";
                List<SelectListItem> mod1 = new List<SelectListItem>();
                #region 3.Transportmode
                TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1 = cmd_Fun.transportmode(userCode, unitid_mst);
                #endregion

            }
            catch (Exception ex) { }
            return model;
        }
        [HttpPost]
        // [OutputCache(Duration = 10, VaryByParam = "none", Location=System.Web.UI.OutputCacheLocation.Client, NoStore=true)]
        public ActionResult g_in(List<Tmodelmain> model, string command)
        {
            try
            {
                FillMst();
                var tm = model.FirstOrDefault();
                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_Tlist1"];
                TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1;

                if (tm.SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                if (command == "New")
                {
                    try
                    {
                        if (model[0].Col133 == "N")
                        {
                            ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for create New Gate In, please contact your admin', 2);disableForm();";
                            return View(model);
                        }
                        model = newg_in(model);
                    }
                    catch (Exception ex) { }
                }
                else if (command == "Cancel") { return CancelFun(model); }
                else if (command == "Callback")
                {
                    //if (model[0].Col134 == "N")
                    //{
                    //    ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for edit Gate In, please contact your admin', 2);disableForm();";
                    //    return View(model);
                    //}
                    model = StartCallback(model);
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {
                    if (model[0].Col133 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for Save Gate In, please contact your admin', 2);disableForm();";
                        return View(model);
                    }
                    DataTable dataTable = new DataTable();
                    bool Result = false;
                    try
                    {
                        string currdate = sgen.server_datetime(userCode);
                        if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                        {
                            isedit = true;
                            vch_num = model[0].Col16;
                        }
                        else
                        {
                            isedit = false;
                            mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                            vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                            model[0].Col16 = vch_num;
                        }
                        dataTable = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                        for (int i = 0; i < model.Count; i++)
                        {
                            DataRow dr = dataTable.NewRow();
                            dr["vch_num"] = vch_num;
                            dr["type"] = model[0].Col12;
                            dr["vch_date"] = currdate;
                            dr["col1"] = model[0].Col49;//party code
                            dr["date1"] = sgen.Make_date_S(model[0].Col17);    // doc date
                            dr["date2"] = sgen.Make_date_S(model[0].Col23);    // eway date
                            dr["date3"] = sgen.Make_date_S(model[0].Col25);    // documnet date
                            dr["date4"] = sgen.Make_date_S(model[0].Col27);    // challan date
                            dr["col2"] = model[0].Col18;//prty type
                            dr["col3"] = model[0].SelectedItems1.FirstOrDefault();//t mode
                            dr["col4"] = model[0].Col22; //Eway bill no
                            dr["col5"] = model[0].Col24;//documnet No.
                            dr["col7"] = model[0].Col26;//challan no.
                            dr["col8"] = model[0].Col28; //Number Of Packet
                            dr["col9"] = model[0].Col29;//Invoice Value
                            dr["col11"] = model[0].Col20;//gst no
                            dr["col32"] = model[0].Col19;//party
                            dr["col31"] = model[0].Col21;//party add
                            dr["col12"] = model[0].Col30;//person name
                            dr["col13"] = model[0].Col31;//mob
                            dr["col14"] = model[0].Col32;//buy ref
                            dr["col48"] = model[0].Col33;//remark
                            dr["col16"] = model[0].Col34;//doc
                            dr["col47"] = model[0].Col35;//doc type
                            dr["col17"] = model[0].Col36;//
                            dr["date5"] = sgen.Make_date_S(model[0].Col37);
                            dr["date6"] = sgen.Make_date_S(model[0].Col38);//
                            dr = getsave(currdate, dr, model);
                            dataTable.Rows.Add(dr);
                        }
                        Result = sgen.Update_data(userCode, dataTable, model[0].Col10.Trim(), model[0].Col8, isedit);
                        if (Result == true)
                        {
                            string reg_no = "", Email_id = "", send_type = "", phone_No = "", xclass = "", sec = "", emailidcc = "", msg_txt = "", account = "";
                            string email = "", DetailSms = "0", DetailEmail = "0", xtitle = "";
                            int cnt = 0;
                            DataTable dtmail = sgen.getdata(userCode, "select col2 as Temp_Set_For,nvl(col5,'0') as email_id,col7 as lang,nvl(col6,'0') as mobile_no,col9,col10,col1 as Body_Text,col3 as signature,col8 as Email_Heading from enx_tab where type = 'ETP' and client_unit_id = '" + unitid_mst + "' and col13 = '011'");
                            if (dtmail.Rows.Count > 0)
                            {
                                if (dtmail.Rows[0]["mobile_no"].ToString() != null && dtmail.Rows[0]["mobile_no"].ToString() != "0" && dtmail.Rows[0]["col10"].ToString().Equals("Y"))
                                {
                                    try
                                    {
                                        #region SMS
                                        BulkSMS bulk = new BulkSMS(userCode, clientid_mst, unitid_mst, MyGuid);
                                        string[] ph_cc = (dtmail.Rows[0]["mobile_no"].ToString().Split(','));
                                        string phone_cc = "";
                                        for (Int32 y = 0; y < ph_cc.Length; y++)
                                        {
                                            phone_cc = ph_cc[y];
                                            if ((phone_cc != "0"))
                                            {
                                                msg_txt = sgen.ExtractHtmlInnerText(dtmail.Rows[0]["Body_Text"].ToString().Replace("\r\n", " %0a"));
                                                bulk.Add_sms(phone_cc, msg_txt, dtmail.Rows[0]["lang"].ToString() == "2");
                                            }
                                        }
                                        bulk.Send_SMS_Bulk();
                                        #endregion
                                    }
                                    catch (Exception ex)
                                    {
                                        ViewBag.vnew = "";
                                        ViewBag.vedit = "";
                                        ViewBag.vsave = "disabled='disabled'";
                                        ViewBag.vsavenew = "disabled='disabled'";
                                        ViewBag.scripCall += "mytoast('error', 'toast-top-right', '" + ex.Message.ToString().Trim() + "');";
                                    }
                                }
                                if (dtmail.Rows[0]["email_id"].ToString() != null && dtmail.Rows[0]["email_id"].ToString() != "0")
                                {
                                    try
                                    {
                                        #region SEND MAIL
                                        string mailfrom = "";
                                        DataTable datatable = new DataTable();
                                        datatable = sgen.getdata(userCode, "select com_email from company_profile where Company_Profile_Id='" + clientid_mst + "' and type='CP'");
                                        if (datatable.Rows.Count > 0)
                                        {
                                            mailfrom = Convert.ToString(datatable.Rows[0]["com_email"].ToString());
                                        }
                                        string mailcc = string.Join(",", dtmail.Rows[0]["email_id"].ToString());
                                        mailcc = mailcc.Replace("'", "");
                                        string[] itar = mailcc.Trim().Split(',');
                                        Mailer mailer = new Mailer(userCode, clientid_mst, unitid_mst, MyGuid);
                                        var body = new StringBuilder();
                                        if (itar.Length > 0)
                                        {
                                            for (Int32 y = 0; y < itar.Length; y++)
                                            {
                                                string[] Emialar = itar[y].Replace("(", "").Replace(")", "").Trim().Split(' ');
                                                if (sgen.ValidateEmail(Emialar[0].ToString()))
                                                {
                                                    if (emailidcc.Equals("")) emailidcc = Emialar[0].ToString();
                                                    else
                                                    {
                                                        emailidcc = emailidcc + "," + Emialar[0].ToString();
                                                    }
                                                }
                                            }
                                            Email_id = emailidcc;
                                            xtitle = "";
                                            xtitle = "Mr Owner, You are Being Informed By Your Gate Department";
                                            body.AppendLine(@"<b style='color:#3caee9; font-size: 20px'>" + dtmail.Rows[0]["Email_Heading"].ToString() + " </b><br /><hr style='border:1px solid black' />" +
                                            "<p>Hi <b>" + xtitle + " : </b>,</p><table style='font-weight:600'>");
                                            body.AppendLine(@"</table><br /><p>" + dtmail.Rows[0]["Body_Text"].ToString() + "</p><p>ThankYou,<br />" + dtmail.Rows[0]["signature"].ToString() + "<br /></p><br />");
                                            sgen.Send_mail_SA1(userCode, clientid_mst, unitid_mst, mailfrom, emailidcc, Email_id, body.ToString(), dtmail.Rows[0]["Email_Heading"].ToString(), "");
                                            mailer.Add_Mail(Email_id, dtmail.Rows[0]["Email_Heading"].ToString(), body.ToString());
                                            mailer.Send_Email_Bulk();
                                        }
                                        #endregion
                                    }
                                    catch (Exception ex)
                                    {
                                        ViewBag.vnew = "";
                                        ViewBag.vedit = "";
                                        ViewBag.vsave = "disabled='disabled'";
                                        ViewBag.vsavenew = "disabled='disabled'";
                                        ViewBag.scripCall += "mytoast('error', 'toast-top-right', '" + ex.Message.ToString().Trim() + "');";
                                    }
                                }
                            }
                            model = new List<Tmodelmain>();
                            model.Add(new Tmodelmain
                            {
                                Col10 = tm.Col10,
                                Col9 = tm.Col9,
                                Col11 = tm.Col11,
                                Col13 = "Save",
                                Col100 = "Save & New",
                                Col121 = "S",
                                Col122 = "<u>S</u>ave",
                                Col123 = "Save & Ne<u>w</u>",
                                Col14 = tm.Col14,
                                Col15 = tm.Col15,
                                Col12 = tm.Col12,
                                Col18 = tm.Col18,
                                Col35 = tm.Col35,
                                TList1 = mod1,
                                SelectedItems1 = new string[] { "" }
                            });
                            sgen.SetSession(MyGuid, "BGINPARTY", null);
                            if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                            {
                                ViewBag.vnew = "";
                                ViewBag.vedit = "";
                                ViewBag.vsave = "disabled='disabled'";
                                ViewBag.vsavenew = "disabled='disabled'";
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                            }
                            else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                            {
                                try
                                {
                                    model = newg_in(model);
                                    ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                                }
                                catch (Exception ex)
                                {
                                    ViewBag.scripCall += "mytoast('error', 'toast-top-right', '" + ex.Message.ToString().Trim() + "');";
                                }
                            }
                        }
                    }
                    catch (Exception ex) { ViewBag.scripCall = "showmsgJS(1,'" + ex.Message.ToString() + "', 0);"; }
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region gate out
        public ActionResult g_out()
        {
            FillMst();
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            List<SelectListItem> mod1 = new List<SelectListItem>();
            model[0].Col9 = "GATE OUT";
            model[0].Col10 = "kc_tab";
            model[0].Col18 = "1";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "GOT"; //Gate Out
            model[0].TList1 = mod1;
            model[0].SelectedItems1 = new string[] { "" };
            return View(model);
        }
        public List<Tmodelmain> newg_out(List<Tmodelmain> model)
        {
            try
            {
                model = getnew(model);
                model[0].Col13 = "Save";
                model[0].Col100 = "Save & New";
                model[0].Col121 = "S";
                model[0].Col122 = "<u>S</u>ave";
                model[0].Col123 = "Save & Ne<u>w</u>";
                model[0].Col18 = "0";
                List<SelectListItem> mod1 = new List<SelectListItem>();
                #region 3.Transportmode
                TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1 = cmd_Fun.transportmode(userCode, unitid_mst);
                #endregion

            }
            catch (Exception ex) { }
            return model;
        }
        [HttpPost]
        public ActionResult g_out(List<Tmodelmain> model, string command)
        {
            try
            {
                FillMst();
                var tm = model.FirstOrDefault();
                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_Tlist1"];
                TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1;

                if (tm.SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                if (command == "New")
                {
                    if (model[0].Col133 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for Create New Gate Out, please contact your admin', 2);";
                        return View(model);
                    }
                    model = newg_out(model);
                }
                else if (command == "Cancel") { return CancelFun(model); }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {
                    if (model[0].Col133 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for Save Gate Out, please contact your admin', 2);";
                        return View(model);
                    }
                    DataTable dataTable = new DataTable();
                    bool Result = false;
                    try
                    {
                        string currdate = sgen.server_datetime(userCode);
                        if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                        {
                            isedit = true;
                            vch_num = model[0].Col16;
                        }
                        else
                        {
                            isedit = false;
                            mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                            vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                            model[0].Col16 = vch_num;
                            //string condi = sgen.seekval(userCode, "select col2 from " + model[0].Col10 + " where type='" + model[0].Col12 + "' and client_id='" + clientid_mst + "'  and " +
                            //          "col2='" + model[0].Col23 + "' and client_unit_id='" + unitid_mst + "' " + mq1 + "", "col2");
                            //if (!condi.Equals("0"))
                            //{
                            //    //Means Already Exits.... 
                            //    ViewBag.vnew = "disabled='disabled'";
                            //    ViewBag.vedit = "disabled='disabled'";
                            //    ViewBag.scripCall = "showmsgJS(1,'Schedule No Already Exists',2)";
                            //    return View(model);
                            //}
                        }
                        dataTable = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                        for (int i = 0; i < model.Count; i++)
                        {
                            DataRow dr = dataTable.NewRow();
                            dr["vch_num"] = vch_num;
                            dr["type"] = model[0].Col12;
                            dr["vch_date"] = currdate;
                            dr["col1"] = model[0].Col49;//party code
                            dr["date1"] = sgen.Make_date_S(model[0].Col17);    // doc date
                            dr["date2"] = sgen.Make_date_S(model[0].Col23);    // eway date
                            dr["date3"] = sgen.Make_date_S(model[0].Col25);    // documnet date
                            dr["date4"] = sgen.Make_date_S(model[0].Col27);    // challan date
                            dr["col2"] = model[0].Col18;//doc type
                            dr["col3"] = model[0].SelectedItems1.FirstOrDefault();//t mode
                            dr["col4"] = model[0].Col22; //Eway bill no
                            dr["col5"] = model[0].Col24;//documnet No.
                            dr["col7"] = model[0].Col26;//challan no.
                            dr["col8"] = model[0].Col28; //Number Of Packet
                            dr["col9"] = model[0].Col29;//Invoice Value
                            dr["col11"] = model[0].Col20;//gst no
                            dr["col32"] = model[0].Col19;//party
                            dr["col31"] = model[0].Col21;//party add
                            dr["col12"] = model[0].Col30;//person name
                            dr["col13"] = model[0].Col31;//mob
                            dr["col21"] = model[0].Col32;//document
                            dr["col42"] = model[0].Col33;//document type
                                                         //dr["col10"] = model[0].Col30;//Remark
                            dr = getsave(currdate, dr, model);
                            dataTable.Rows.Add(dr);
                        }
                        Result = sgen.Update_data(userCode, dataTable, model[0].Col10.Trim(), model[0].Col8, isedit);
                        if (Result == true)
                        {
                            model = new List<Tmodelmain>();
                            model.Add(new Tmodelmain
                            {
                                Col9 = tm.Col9,
                                Col10 = tm.Col10,
                                Col11 = tm.Col11,
                                Col13 = "Save",
                                Col100 = "Save & New",
                                Col121 = "S",
                                Col122 = "<u>S</u>ave",
                                Col123 = "Save & Ne<u>w</u>",
                                Col14 = tm.Col14,
                                Col15 = tm.Col15,
                                Col12 = tm.Col12,
                                Col18 = tm.Col18,
                                TList1 = mod1,
                                SelectedItems1 = new string[] { "" }
                            });
                            if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                            {
                                ViewBag.vnew = "";
                                ViewBag.vedit = "";
                                ViewBag.vsave = "disabled='disabled'";
                                ViewBag.vsavenew = "disabled='disabled'";
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                            }
                            else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                            {
                                try
                                {
                                    model = newg_out(model);
                                    ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                                }
                                catch (Exception ex)
                                {
                                    ViewBag.scripCall += "mytoast('error', 'toast-top-right', '" + ex.Message.ToString().Trim() + "');";
                                }
                            }
                        }
                    }
                    catch (Exception ex) { ViewBag.scripCall = "showmsgJS(1,'" + ex.Message.ToString() + "', 0);"; }
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region Pending gate in
        public ActionResult p_g_in()
        {
            FillMst();
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            model[0].Col9 = "PENDING GATE IN";
            model[0].Col10 = "kc_tab";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "PGN"; //Pending Gate in
            DataTable dt = sgen.getdata(userCode, "select '0' as  SNo ,'-' as Doc_type,'-' as Doc_no,'-' Doc_date,'-'  Party_name,'-' as Doc_value,'0' as  Closer_date,'-' as Remark from dual");
            model[0].dt1 = dt;
            sgen.SetSession(MyGuid, "BPI_DT", dt);
            return View(model);
        }
        public List<Tmodelmain> new_p_g_in(List<Tmodelmain> model)
        {
            try
            {
                model = getnew(model);
                //model[0].Col13 = "Save";
                //model[0].Col100 = "Save & New";
                //model[0].Col121 = "S";
                //model[0].Col122 = "<u>S</u>ave";
                //model[0].Col123 = "Save & Ne<u>w</u>";
                model[0].Col17 = sgen.server_datetime_local(userCode);
            }
            catch (Exception ex) { }
            return model;
        }
        [HttpPost]
        public ActionResult p_g_in(List<Tmodelmain> model, string command, string hfrow, string hftable)
        {
            try
            {
                FillMst();
                var tm = model.FirstOrDefault();
                DataTable dtm = sgen.settable(hftable);
                model[0].dt1 = dtm;
                if (command == "New")
                {
                    if (model[0].Col133 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for Create New Entry, please contact your admin', 2);";
                        return View(model);
                    }
                    model = new_p_g_out(model);
                }
                else if (command == "Cancel") { return CancelFun(model); }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command == "-")
                {
                    if (model[0].dt1.Rows.Count > 1) model[0].dt1.Rows.RemoveAt(sgen.Make_int(hfrow));
                    else { model[0].dt1 = ((DataTable)sgen.GetSession(MyGuid, "BPI_DT")).Copy(); }
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {
                    if (model[0].Col133 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for Save Entry, please contact your admin', 2);disableForm();";
                        return View(model);
                    }
                    DataTable dataTable = new DataTable();
                    bool Result = false;
                    try
                    {
                        string currdate = sgen.server_datetime(userCode);
                        if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                        {
                            isedit = true;
                            vch_num = model[0].Col16;
                        }
                        else
                        {
                            isedit = false;
                            mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                            vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                            model[0].Col16 = vch_num;
                        }
                        dataTable = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                        for (int i = 0; i < model[0].dt1.Rows.Count; i++)
                        {
                            DataRow dr = dataTable.NewRow();
                            dr["vch_num"] = vch_num;
                            dr["type"] = model[0].Col12;
                            dr["vch_date"] = currdate;
                            //dr["col2"] = model[0].SelectedItems1.FirstOrDefault();//dept
                            //dr["col3"] = model[0].SelectedItems2.FirstOrDefault();//desig
                            dr["date1"] = sgen.Make_date_S(model[0].Col17);//doc date
                                                                           //dr["col4"] = model[0].Col18;//req by
                            dr["col31"] = model[0].Col19;//remark
                            dr["col5"] = model[0].dt1.Rows[i]["DOC_TYPE"].ToString();
                            dr["col6"] = model[0].dt1.Rows[i]["DOC_NO"].ToString();
                            dr["date3"] = sgen.Make_date_S(model[0].dt1.Rows[i]["DOC_DATE"].ToString());
                            dr["col8"] = model[0].dt1.Rows[i]["PARTY_NAME"].ToString();
                            dr["col9"] = model[0].dt1.Rows[i]["DOC_VALUE"].ToString();
                            dr["col10"] = model[0].dt1.Rows[i]["REMARK"].ToString();
                            dr["date2"] = sgen.Make_date_S(model[0].dt1.Rows[i]["CLOSER_DATE"].ToString());
                            dr = getsave(currdate, dr, model);
                            dataTable.Rows.Add(dr);
                        }
                        Result = sgen.Update_data(userCode, dataTable, model[0].Col10.Trim(), model[0].Col8, isedit);
                        if (Result == true)
                        {
                            model = new List<Tmodelmain>();
                            model.Add(new Tmodelmain
                            {
                                Col10 = tm.Col10,
                                Col11 = tm.Col11,
                                Col9 = tm.Col9,
                                Col13 = "Save",
                                Col100 = "Save & New",
                                Col121 = "S",
                                Col122 = "<u>S</u>ave",
                                Col123 = "Save & Ne<u>w</u>",
                                Col14 = tm.Col14,
                                Col15 = tm.Col15,
                                Col12 = tm.Col12,
                                dt1 = (DataTable)sgen.GetSession(MyGuid, "BPI_DT")
                            });
                            if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                            {
                                ViewBag.vnew = "";
                                ViewBag.vedit = "";
                                ViewBag.vsave = "disabled='disabled'";
                                ViewBag.vsavenew = "disabled='disabled'";
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                            }
                            else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                            {
                                try
                                {
                                    model = new_p_g_out(model);
                                    ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                                }
                                catch (Exception ex)
                                {
                                    ViewBag.scripCall += "mytoast('error', 'toast-top-right', '" + ex.Message.ToString().Trim() + "');";
                                }
                            }
                        }
                    }
                    catch (Exception ex) { ViewBag.scripCall = "showmsgJS(1,'" + ex.Message.ToString() + "', 0);"; }
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region Pending gate out
        public ActionResult p_g_out()
        {
            FillMst();
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            model[0].Col9 = "PENDING GATE OUT";
            model[0].Col10 = "kc_tab";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "PGO"; //Pending Gate Out
            DataTable dt = sgen.getdata(userCode, "select '0' as  SNo ,'-' as Doc_type,'-' as Doc_no,'-' Doc_date,'-'  Party_name,'-' as Doc_value,'0' as  Closer_date,'-' as Remark from dual");
            model[0].dt1 = dt;
            sgen.SetSession(MyGuid, "BGP_DT", dt);
            return View(model);
        }
        public List<Tmodelmain> new_p_g_out(List<Tmodelmain> model)
        {
            try
            {
                model = getnew(model);
                //model[0].Col13 = "Save";
                //model[0].Col100 = "Save & New";
                //model[0].Col121 = "S";
                //model[0].Col122 = "<u>S</u>ave";
                //model[0].Col123 = "Save & Ne<u>w</u>";
                model[0].Col17 = sgen.server_datetime_local(userCode);
            }
            catch (Exception ex) { }
            return model;
        }
        [HttpPost]
        public ActionResult p_g_out(List<Tmodelmain> model, string command, string hfrow, string hftable)
        {
            try
            {
                FillMst();
                var tm = model.FirstOrDefault();
                DataTable dtm = sgen.settable(hftable);
                model[0].dt1 = dtm;
                if (command == "New")
                {
                    if (model[0].Col133 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for Create New Entry, please contact your admin', 2);";
                        return View(model);
                    }
                    model = new_p_g_out(model);
                }
                else if (command == "Cancel") { return CancelFun(model); }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command == "-")
                {
                    if (model[0].dt1.Rows.Count > 1) model[0].dt1.Rows.RemoveAt(sgen.Make_int(hfrow));
                    else { model[0].dt1 = ((DataTable)sgen.GetSession(MyGuid, "BGP_DT")).Copy(); }
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {
                    if (model[0].Col133 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for Save Entry, please contact your admin', 2);disableForm();";
                        return View(model);
                    }
                    DataTable dataTable = new DataTable();
                    bool Result = false;
                    try
                    {
                        string currdate = sgen.server_datetime(userCode);
                        if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                        {
                            isedit = true;
                            vch_num = model[0].Col16;
                        }
                        else
                        {
                            isedit = false;
                            mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                            vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                            model[0].Col16 = vch_num;
                        }
                        dataTable = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                        for (int i = 0; i < model[0].dt1.Rows.Count; i++)
                        {
                            DataRow dr = dataTable.NewRow();
                            dr["vch_num"] = vch_num;
                            dr["type"] = model[0].Col12;
                            dr["vch_date"] = currdate;
                            dr["date1"] = sgen.Make_date_S(model[0].Col17);//doc date
                                                                           //dr["col4"] = model[0].Col18;//req by
                            dr["col31"] = model[0].Col19;//remark
                            dr["col5"] = model[0].dt1.Rows[i]["DOC_TYPE"].ToString();
                            dr["col6"] = model[0].dt1.Rows[i]["DOC_NO"].ToString();
                            dr["date3"] = sgen.Make_date_S(model[0].dt1.Rows[i]["DOC_DATE"].ToString());
                            dr["col8"] = model[0].dt1.Rows[i]["PARTY_NAME"].ToString();
                            dr["col9"] = model[0].dt1.Rows[i]["DOC_VALUE"].ToString();
                            dr["col10"] = model[0].dt1.Rows[i]["REMARK"].ToString();
                            dr["date2"] = sgen.Make_date_S(model[0].dt1.Rows[i]["CLOSER_DATE"].ToString());
                            dr = getsave(currdate, dr, model);
                            dataTable.Rows.Add(dr);
                        }
                        Result = sgen.Update_data(userCode, dataTable, model[0].Col10.Trim(), model[0].Col8, isedit);
                        if (Result == true)
                        {
                            model = new List<Tmodelmain>();
                            model.Add(new Tmodelmain
                            {
                                Col10 = tm.Col10,
                                Col11 = tm.Col11,
                                Col9 = tm.Col9,
                                Col13 = "Save",
                                Col100 = "Save & New",
                                Col121 = "S",
                                Col122 = "<u>S</u>ave",
                                Col123 = "Save & Ne<u>w</u>",
                                Col14 = tm.Col14,
                                Col15 = tm.Col15,
                                Col12 = tm.Col12,
                                dt1 = (DataTable)sgen.GetSession(MyGuid, "BGP_DT")
                            });
                            if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                            {
                                ViewBag.vnew = "";
                                ViewBag.vedit = "";
                                ViewBag.vsave = "disabled='disabled'";
                                ViewBag.vsavenew = "disabled='disabled'";
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                            }
                            else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                            {
                                try
                                {
                                    model = new_p_g_out(model);
                                    ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                                }
                                catch (Exception ex)
                                {
                                    ViewBag.scripCall += "mytoast('error', 'toast-top-right', '" + ex.Message.ToString().Trim() + "');";
                                }
                            }
                        }
                    }
                    catch (Exception ex) { ViewBag.scripCall = "showmsgJS(1,'" + ex.Message.ToString() + "', 0);"; }
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region Close Pending 
        public ActionResult p_close()
        {
            FillMst();
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            model[0].Col10 = "enx_tab";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            DataTable dt;
            switch (mid_mst)
            {
                case "21009.4":
                    model[0].Col9 = "CLOSE PENDING SO";
                    model[0].Col12 = "CPS";
                    dt = sgen.getdata(userCode, "select '-' as  Item ,'0' as SNo ,'-' as Icode,'-' as IName,'-' PartNo,'0' Bal_Qty,'0' Close_qty,'-' as SO_No,'-' as SO_Date,'-' as Remark from dual");
                    model[0].dt1 = dt;
                    sgen.SetSession(MyGuid, "BCPI_DT", dt.Copy());
                    break;
                case "17003.8":
                    model[0].Col9 = "CLOSE PENDING MRS";
                    model[0].Col12 = "CPM";
                    dt = sgen.getdata(userCode, "select '-' as  Item ,'0' as SNo ,'-' as Icode,'-' as IName,'-' PartNo,'0' Bal_Qty,'0' Close_qty,'-' as Mrs_no,'-' as Mrs_date,'-' as Remark from dual");
                    model[0].dt1 = dt;
                    sgen.SetSession(MyGuid, "BCPI_DT", dt.Copy());
                    break;
                case "17003.9":
                    model[0].Col9 = "CLOSE PENDING DISPATCH CHL";
                    model[0].Col12 = "CPC";
                    dt = sgen.getdata(userCode, "select '-' as  Item ,'0' as SNo ,'-' as Icode,'-' as IName,'-' PartNo,'0' Bal_Qty,'0' Close_qty,'-' as dsp_no,'-' as dsp_date,'-' as Remark from dual");
                    model[0].dt1 = dt;
                    sgen.SetSession(MyGuid, "BCPI_DT", dt.Copy());
                    break;
                case "17004.2":
                    model[0].Col9 = "CLOSE PENDING INDENT";
                    model[0].Col12 = "CPI";
                    dt = sgen.getdata(userCode, "select '-' as  Item,'1' as  SNo,'-' as Icode,'-' as IName,'-' PARTNO,'0'  Bal_Qty,'0' Close_qty,'-' ind_no,'-' ind_date,'-' as Remark from dual");
                    model[0].dt1 = dt;
                    sgen.SetSession(MyGuid, "BCPI_DT", dt.Copy());
                    break;
                case "17002.6":
                    model[0].Col9 = "CLOSE PENDING MRN";
                    model[0].Col12 = "CMR";
                    dt = sgen.getdata(userCode, "select '-' as  Item,'1' as  SNo,'-' as Icode,'-' as IName,'-' PARTNO,'0'  Bal_Qty,'0' Close_qty,'-' sdl_no,'-' sdl_date,'-' as Remark from dual");
                    model[0].dt1 = dt;
                    sgen.SetSession(MyGuid, "BCPI_DT", dt.Copy());
                    break;
                case "21002.3":
                    model[0].Col9 = "CLOSE PENDING DIS. SCHEDULE";
                    model[0].Col12 = "CPD";
                    dt = sgen.getdata(userCode, "select '-' as  Item,'1' as  SNo,'-' as Icode,'-' as IName,'-' PARTNO,'0'  Bal_Qty,'0' Close_qty,'-' sdl_no,'-' sdl_date,'-' as Remark from dual");
                    model[0].dt1 = dt;
                    sgen.SetSession(MyGuid, "BCPI_DT", dt.Copy());
                    break;
                case "28002.3":
                    model[0].Col9 = "CLOSE PENDING PUR ORDER";
                    model[0].Col12 = "POR";
                    dt = sgen.getdata(userCode, "select '-' Item,'0' as  SNo ,'-' as Icode,'-' as IName,'-' PARTNO,'0' Bal_qty,'0' Close_qty,'0' PO_NO,'-' PO_Date,'-' as Remark from dual");
                    model[0].dt1 = dt;
                    sgen.SetSession(MyGuid, "BCPI_DT", dt.Copy());
                    break;
                case "39008.2":
                    model[0].Col9 = "CLOSE PENDING PRD ORDER";
                    model[0].Col12 = "COR";
                    dt = sgen.getdata(userCode, "select '-' Item,'0' as  SNo ,'-' as Icode,'-' as IName,'-' PARTNO,'0' Bal_qty,'0' Close_qty,'0' PRD_NO,'-' PRD_Date,'-' as Remark from dual");
                    model[0].dt1 = dt;
                    sgen.SetSession(MyGuid, "BCPI_DT", dt.Copy());
                    break;
                case "21009.6":
                    model[0].Col9 = "CLOSE PENDING PERFORMA INVOICE";
                    model[0].Col12 = "PRI";
                    dt = sgen.getdata(userCode, "select '-' Item,'0' as  SNo ,'-' as Icode,'-' as IName,'-' PARTNO,'0' Bal_qty,'0' Close_qty,'0' PI_NO,'-' PI_Date,'-' as Remark from dual");
                    model[0].dt1 = dt;
                    sgen.SetSession(MyGuid, "BCPI_DT", dt.Copy());
                    break;
                case "21009.7":
                    model[0].Col9 = "CLOSE PENDING QUOTATION";
                    model[0].Col12 = "CPQ";
                    dt = sgen.getdata(userCode, "select '-' Item,'0' as  SNo ,'-' as Icode,'-' as IName,'-' PARTNO,'0' Bal_qty,'0' Close_qty,'0' QUOT_NO,'-' QUOT_Date,'-' as Remark from dual");
                    model[0].dt1 = dt;
                    sgen.SetSession(MyGuid, "BCPI_DT", dt.Copy());
                    break;
            }
            sgen.SetSession(MyGuid, "MENUID", mid_mst);
            return View(model);
        }
        public List<Tmodelmain> new_p_close(List<Tmodelmain> model)
        {
            try
            {
                model = getnew(model);
                model[0].Col17 = sgen.server_datetime_local(userCode);
            }
            catch (Exception ex) { }
            return model;
        }
        [HttpPost]
        public ActionResult p_close(List<Tmodelmain> model, string command, string hfrow, string hftable)
        {
            try
            {
                FillMst();
                var tm = model.FirstOrDefault();
                DataTable dtm = sgen.settable(hftable);
                model[0].dt1 = dtm;
                if (command == "New")
                {
                    if (model[0].Col133 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for Create New entry, please contact your admin', 2);disableForm();";
                        return View(model);
                    }
                    model = new_p_close(model);
                }
                else if (command == "Cancel") { return CancelFun(model); }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {
                    if (model[0].Col133 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for Save Details, please contact your admin', 2);disableForm();";
                        return View(model);
                    }
                    if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-"))
                    {
                        ViewBag.scripCall += "showmsgJS(1,'Please Select item in grid', 2);";
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                        return View(model);
                    }
                    DataTable dataTable = new DataTable();
                    bool Result = false;
                    try
                    {
                        string currdate = sgen.server_datetime(userCode);
                        if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                        {
                            isedit = true;
                            vch_num = model[0].Col16;
                        }
                        else
                        {
                            isedit = false;
                            mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                            vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                            model[0].Col16 = vch_num;
                        }
                        dataTable = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                        for (int i = 0; i < model[0].dt1.Rows.Count; i++)
                        {
                            DataRow dr = dataTable.NewRow();
                            dr["vch_num"] = vch_num;
                            dr["type"] = model[0].Col12;
                            //dr["vch_date"] = currdate;
                            dr["vch_date"] = sgen.Make_date_S(model[0].Col17);//doc date
                            dr["col6"] = model[0].Col19;//remark
                            dr["col5"] = model[0].Col20;//so no 1
                            dr["date2"] = sgen.Make_date_S(model[0].Col21);//so date 2
                            dr["col7"] = model[0].dt1.Rows[i][2].ToString(); //icode
                            dr["col8"] = model[0].dt1.Rows[i][3].ToString();//iname
                            dr["col9"] = model[0].dt1.Rows[i][4].ToString();//partno
                            dr["col10"] = model[0].dt1.Rows[i][5].ToString();//bal qty
                            dr["col11"] = model[0].dt1.Rows[i][6].ToString();//close qty
                            dr["col12"] = model[0].dt1.Rows[i][7].ToString();//so no
                            dr["date1"] = sgen.Make_date_S(model[0].dt1.Rows[i][8].ToString());//so date
                            dr["col13"] = model[0].dt1.Rows[i][9].ToString();//remark
                            dr = getsave(currdate, dr, model);
                            dataTable.Rows.Add(dr);
                        }
                        Result = sgen.Update_data(userCode, dataTable, model[0].Col10.Trim(), model[0].Col8, isedit);
                        if (Result == true)
                        {
                            model = new List<Tmodelmain>();
                            model.Add(new Tmodelmain
                            {
                                Col10 = tm.Col10,
                                Col11 = tm.Col11,
                                Col9 = tm.Col9,
                                Col13 = "Save",
                                Col100 = "Save & New",
                                Col121 = "S",
                                Col122 = "<u>S</u>ave",
                                Col123 = "Save & Ne<u>w</u>",
                                Col14 = tm.Col14,
                                Col15 = tm.Col15,
                                Col12 = tm.Col12,
                                dt1 = (DataTable)sgen.GetSession(MyGuid, "BCPI_DT")
                            });
                            if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                            {
                                ViewBag.vnew = "";
                                ViewBag.vedit = "";
                                ViewBag.vsave = "disabled='disabled'";
                                ViewBag.vsavenew = "disabled='disabled'";
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                            }
                            else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                            {
                                try
                                {
                                    model = new_p_g_out(model);
                                    ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                                }
                                catch (Exception ex)
                                {
                                    ViewBag.scripCall += "mytoast('error', 'toast-top-right', '" + ex.Message.ToString().Trim() + "');";
                                }
                            }
                        }
                    }
                    catch (Exception ex) { ViewBag.scripCall = "showmsgJS(1,'" + ex.Message.ToString() + "', 0);"; }
                }
                else if (command == "-")
                {
                    if (model[0].dt1.Rows.Count > 1) model[0].dt1.Rows.RemoveAt(sgen.Make_int(hfrow));
                    else { model[0].dt1 = (DataTable)sgen.GetSession(MyGuid, "BCPI_DT"); }
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region sms_mail_tmp
        public ActionResult sms_mail_tmp()
        {
            FillMst();
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            model[0].Col9 = "SMS & EMAIL TEMPLATE";
            model[0].Col10 = "enx_tab";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "ETP";
            return View(model);
        }
        [HttpPost]
        public ActionResult sms_mail_tmp(List<Tmodelmain> model, string command, string mid)
        {
            try
            {
                string fdt = "", tdt = "";
                FillMst();
                var tm = model.FirstOrDefault();
                if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command.Trim() == "Save" || command.Trim() == "Update")
                {
                    try
                    {
                        var tmodel = model.FirstOrDefault();
                        string currdate = sgen.server_datetime(userCode);
                        DataTable dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                        isedit = true;
                        vch_num = model[0].Col16;
                        //else
                        //{
                        //    isedit = false;
                        //    mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                        //    vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        //    model[0].Col16 = vch_num;
                        //    mq1 = "";
                        //}
                        DataRow dr = dtstr.NewRow();
                        dr["type"] = model[0].Col12;
                        dr["vch_num"] = vch_num.Trim();
                        dr["vch_date"] = sgen.Savedate(currdate, false);
                        dr["col1"] = model[0].Col18;      // body text
                        dr["col3"] = model[0].Col19;      // singnature
                        dr["col8"] = model[0].Col17;      // email heading
                        dr["col7"] = model[0].Col20;      // language
                        dr["col2"] = model[0].Col21;      //  set for
                        dr["col13"] = model[0].Col22;      // set for id
                        dr["col5"] = model[0].Col23;      // emial
                        dr["col6"] = model[0].Col24;      // mobiles
                        dr["col9"] = model[0].Chk1 == true ? "Y" : "N"; //send Mail
                        dr["col10"] = model[0].Chk2 == true ? "Y" : "N"; //send Phone (SMS)
                        dr = getsave(currdate, dr, model);
                        dtstr.Rows.Add(dr);
                        //  bool Result = sgen.Update_data(userCode, dtstr, model[0].Col10.Trim(), tmodel.Col8, isedit);
                        bool Result = sgen.Update_data_fast1(userCode, dtstr, model[0].Col10.Trim(), tmodel.Col8, isedit);
                        if (Result == true)
                        {
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.scripCall = "mytoast('success', 'toast-top-right', 'Data Updated Successfully');disableForm();";
                            model = new List<Tmodelmain>();
                            model.Add(new Tmodelmain
                            {
                                Col10 = tm.Col10,
                                Col11 = tm.Col11,
                                Col12 = tm.Col12,
                                Col13 = "Save",
                                Col14 = tm.Col14,
                                Col15 = tm.Col15,
                                Col9 = tm.Col9,
                            });
                        }
                        else
                        {
                            ViewBag.scripCall = "showmsgJS(1, 'Record Not Saved', 2);";
                        }
                    }
                    catch (Exception ex) { sgen.showmsg(1, ex.Message.ToString(), 0); }
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region  qctemp
        public ActionResult qctemp()
        {
            FillMst();
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            model[0].Col9 = "QC TEMPLATE";
            model[0].Col10 = "inspvch";
            model[0].Col11 = " and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "'";
            model[0].Col12 = "QCT"; // BOM       
            DataTable dt = sgen.getdata(userCode, "select '0' as  SNo ,'-' Parameter,'-' Specification,'-' Min,'-' Max,'-' Test_cond,'-' Method_of_test from dual");
            model[0].dt1 = dt;
            sgen.SetSession(MyGuid, "dtqctemp", dt);
            return View(model);
        }
        [HttpPost]
        public ActionResult qctemp(List<Tmodelmain> model, string command, string hfrow, string hftable)
        {
            try
            {
                FillMst();
                DataTable dtm = sgen.settable(hftable);
                model[0].dt1 = dtm;
                var tm = model.FirstOrDefault();
                if (command == "New")
                {
                    try
                    {
                        model = getnew(model);
                        model[0].Col17 = sgen.server_datetime_local(userCode);
                    }
                    catch (Exception ex) { }
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    if (sgen.GetSession(MyGuid, "btnval") != null) btnval = sgen.GetSession(MyGuid, "btnval").ToString();
                    model = CallbackFun(btnval, "N", actionName, controllerName, model);
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
                else if (command == "btnmain")
                {
                    if (model[0].Col18 != null && model[0].Col18 != "")
                    {
                        mq = sgen.seekval(userCode, "select icode from inspvch where type='" + model[0].Col12 + "'" + model[0].Col11 + " and icode='" + model[0].Col18 + "'", "icode");
                        if (mq.Trim() != "0") { ViewBag.scripCall += "showmsgJS(1,'Data already exist for this item code', 2);"; }
                        else
                        {
                            sgen.SetSession(MyGuid, "SSEEKVAL", clientid_mst + unitid_mst + model[0].Col18);
                            CallbackFun("ITEM", "", actionName, controllerName, model);
                        }
                    }
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
                else if (command == "+")
                {
                    DataRow dr = model[0].dt1.NewRow();
                    dr["Sno"] = "";
                    dr["Parameter"] = "-";
                    dr["Specification"] = "-";
                    dr["Min"] = "-";//min
                    dr["Max"] = "-";//max
                    dr["Test_cond"] = "-";//test condition
                    dr["Method_of_test"] = "-";//method of test
                    model[0].dt1.Rows.Add(dr);
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {
                    try
                    {
                        var tmodel = model.FirstOrDefault();
                        string currdate = sgen.server_datetime(userCode);
                        if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                        {
                            mq1 = " and vch_num<>'" + model[0].Col16 + "'";
                            isedit = true;
                            vch_num = model[0].Col16;
                        }
                        else
                        {
                            mq1 = "";
                            isedit = false;
                            mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                            vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                            model[0].Col16 = vch_num;
                        }
                        mq = "select icode from inspvch where type='" + model[0].Col12 + "'" + model[0].Col11 + " and icode='" + model[0].Col18 + "'" + mq1 + "";
                        mq = sgen.seekval(userCode, mq, "icode");
                        if (mq != "0")
                        {
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            ViewBag.scripCall += "showmsgJS(1,'Data already exist for this item code', 2);";
                        }
                        DataTable dataTable = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                        for (int i = 0; i < model[0].dt1.Rows.Count; i++)
                        {
                            DataRow dr = dataTable.NewRow();
                            dr["type"] = model[0].Col12;
                            dr["vch_num"] = vch_num.Trim();
                            dr["vch_date"] = sgen.Savedate(model[0].Col17, true);
                            dr["icode"] = model[0].Col19;//main icode
                                                         //dt====
                            dr["rno"] = model[0].dt1.Rows[i][0].ToString().Trim();//sno
                            dr["param"] = model[0].dt1.Rows[i][1].ToString();//param
                            dr["spec"] = model[0].dt1.Rows[i][2].ToString();//spec
                            dr["min"] = model[0].dt1.Rows[i][3].ToString();//min
                            dr["max"] = model[0].dt1.Rows[i][4].ToString();//max                      
                            dr["tcond"] = model[0].dt1.Rows[i][5].ToString();//test condition                   
                            dr["tmeth"] = model[0].dt1.Rows[i][6].ToString();//method of test                     
                                                                             //======                        
                            dr = getsave(currdate, dr, model, isedit);
                            dataTable.Rows.Add(dr);
                        }
                        res = sgen.Update_data(userCode, dataTable, model[0].Col10.Trim(), tmodel.Col8, isedit);
                        if (res)
                        {
                            if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                            {
                                ViewBag.vnew = "";
                                ViewBag.vedit = "";
                                ViewBag.vsave = "disabled='disabled'";
                                ViewBag.vsavenew = "disabled='disabled'";
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                            }
                            else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                            {
                                try
                                {
                                    model = getnew(model);
                                    model[0].Col17 = sgen.server_datetime_local(userCode);
                                    model[0].Col22 = "1";
                                    ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                                }
                                catch (Exception ex) { }
                            }
                            model = new List<Tmodelmain>();
                            model.Add(new Tmodelmain
                            {
                                Col9 = tmodel.Col9,
                                Col10 = tmodel.Col10,
                                Col11 = tmodel.Col11,
                                Col12 = tmodel.Col12,
                                Col13 = "Save",
                                Col14 = tmodel.Col14,
                                Col15 = tmodel.Col15,
                                dt1 = (DataTable)sgen.GetSession(MyGuid, "dtqctemp"),
                                Col100 = "Save & New"
                            });
                        }
                    }
                    catch (Exception ex) { ViewBag.scripCall = "showmsgJS(1,'" + ex.Message.ToString() + "', 0);"; }
                }
                else if (command == "-")
                {
                    if (model[0].dt1.Rows.Count > 1) model[0].dt1.Rows.RemoveAt(sgen.Make_int(hfrow));
                    else model[0].dt1 = (DataTable)sgen.GetSession(MyGuid, "dtqctemp");
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region GATE IN ITEM
        public ActionResult g_in_item()
        {
            FillMst("");
            List<Tmodelmain> model = new List<Tmodelmain>();
            List<SelectListItem> mod1 = new List<SelectListItem>();
            model = getload(model);
            model[0].Col10 = "itransaction";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            //model[0].Col12 = "GII";
            DataTable dt = sgen.getdata(userCode, "select '' Item,'1' as  SNo ,'-' as Icode,'-' as IName,'-' PARTNO,'-'  HSN,'-' as UOM,'0' as po_bal_qty,'0' Qty_Chl,'0' Qty_In," +
                "'0' NoOfPKT_Box,'-' as Remark,'0' PO_Number,'-' PO_Date,'-' as Location from dual");
            model[0].dt1 = dt;
            sgen.SetSession(MyGuid, "BGIN_DT", dt);
            model[0].TList1 = mod1;
            model[0].SelectedItems1 = new string[] { "" };
            ModelState.Clear();
            return View(model);
        }
        [HttpPost]
        public ActionResult g_in_item(List<Tmodelmain> model, string command, string hfrow, string hftable, HttpPostedFileBase upd1)
        {
            try
            {
                FillMst(model[0].Col15);
                DataTable dtm = sgen.settable(hftable);
                model[0].dt1 = dtm;
                var tm = model.FirstOrDefault();
                List<SelectListItem> mod1 = new List<SelectListItem>();
                model[0].TList1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                TempData[MyGuid + "_TList1"] = model[0].TList1;
                if (tm.SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {
                    try
                    {
                        if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-"))
                        {
                            ViewBag.scripCall += "showmsgJS(1,'Please Select item in grid-1', 2);";
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            return View(model);
                        }
                        string currdate = sgen.server_datetime(userCode);
                        if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                        {
                            mq1 = " and vch_num<>'" + model[0].Col16.Trim() + "'";
                            isedit = true;
                            vch_num = model[0].Col16;
                        }
                        else
                        {
                            mq1 = "";
                            isedit = false;
                            mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                            vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        }
                        DataTable dataTable = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                        for (int i = 0; i < model[0].dt1.Rows.Count; i++)
                        {
                            #region dr
                            DataRow dr = dataTable.NewRow();
                            dr["type"] = model[0].Col12;
                            dr["vch_num"] = vch_num.Trim();
                            dr["vch_date"] = sgen.Make_date_S(model[0].Col17);
                            dr["acode"] = model[0].Col18;
                            dr["chlno"] = model[0].Col26;
                            dr["chldate"] = sgen.Make_date_S(model[0].Col27);
                            dr["tmode"] = model[0].SelectedItems1.FirstOrDefault();
                            dr["ewayno"] = model[0].Col24;
                            dr["ewaydate"] = sgen.Make_date_S(model[0].Col25);
                            dr["invno"] = model[0].Col22;
                            dr["invdate"] = sgen.Make_date_S(model[0].Col23);
                            dr["contactno"] = model[0].Col29;
                            dr["REQ_BY"] = model[0].Col28;
                            dr["sdlno"] = model[0].Col30;
                            dr["DATE1"] = sgen.Make_date_S(model[0].Col31);
                            dr["TOTREMARK"] = model[0].Col32;
                            //dt====
                            dr["rno"] = model[0].dt1.Rows[i][1].ToString();
                            dr["icode"] = model[0].dt1.Rows[i]["ICODE"].ToString();
                            dr["iname"] = model[0].dt1.Rows[i]["INAME"].ToString();
                            dr["cpartno"] = model[0].dt1.Rows[i]["PARTNO"].ToString();
                            dr["hsno"] = model[0].dt1.Rows[i]["HSN"].ToString();
                            dr["uom"] = model[0].dt1.Rows[i]["UOM"].ToString();
                            dr["qtychl"] = model[0].dt1.Rows[i]["QTY_CHL"].ToString().Trim();
                            dr["qtyrcvd"] = model[0].dt1.Rows[i]["QTY_IN"].ToString().Trim();
                            dr["QTYBAL"] = model[0].dt1.Rows[i]["po_bal_qty"].ToString().Trim();
                            dr["pktno"] = model[0].dt1.Rows[i]["NOOFPKT_BOX"].ToString() == "" ? "0" : model[0].dt1.Rows[i]["NOOFPKT_BOX"].ToString();//noofpkt/box
                            dr["iremark"] = model[0].dt1.Rows[i]["remark"].ToString();
                            dr["pono"] = model[0].dt1.Rows[i]["po_number"].ToString();
                            dr["podate"] = sgen.Make_date_S(model[0].dt1.Rows[i]["po_date"].ToString());
                            dr = getsave(currdate, dr, model);
                            #endregion
                            dataTable.Rows.Add(dr);
                        }
                        res = true; ok = true;
                        res = sgen.Update_data_fast1(userCode, dataTable, model[0].Col10.Trim(), model[0].Col8, isedit);
                        if (res && ok)
                        {
                            string reg_no = "", Email_id = "", send_type = "", phone_No = "", xclass = "", sec = "", emailidcc = "", msg_txt = "", account = "";
                            string email = "", DetailSms = "0", DetailEmail = "0", xtitle = "";
                            int cnt = 0;
                            try
                            {
                                DataTable dtmail = sgen.getdata(userCode, "select col2 as Temp_Set_For,nvl(col5,'0') as email_id,col7 as lang,nvl(col6,'0') as mobile_no,col9,col10,col1 as Body_Text,col3 as signature,col8 as Email_Heading from enx_tab where type = 'ETP' and client_unit_id = '" + unitid_mst + "' and col13 = '013'");
                                if (dtmail.Rows[0]["mobile_no"].ToString() != null && dtmail.Rows[0]["mobile_no"].ToString() != "0" && dtmail.Rows[0]["col10"].ToString().Equals("Y"))
                                {
                                    #region SMS
                                    BulkSMS bulk = new BulkSMS(userCode, clientid_mst, unitid_mst, MyGuid);
                                    string[] ph_cc = (dtmail.Rows[0]["mobile_no"].ToString().Split(','));
                                    string phone_cc = "";
                                    for (Int32 y = 0; y < ph_cc.Length; y++)
                                    {
                                        phone_cc = ph_cc[y];
                                        if ((phone_cc != "0"))
                                        {
                                            msg_txt = sgen.ExtractHtmlInnerText(dtmail.Rows[0]["Body_Text"].ToString().Replace("\r\n", " %0a"));
                                            //string smsstatus = sgen.Send_Sms(userCode, clientid_mst, unitid_mst, phone_cc, msg_txt, dtmail.Rows[0]["lang"].ToString() == "2");
                                            bulk.Add_sms(phone_cc, msg_txt, dtmail.Rows[0]["lang"].ToString() == "2");
                                            // smsstatus = sgen.Send_Sms(userCode, clientid_mst, unitid_mst, phone_cc, msg_txt, dtmail.Rows[0]["lang"].ToString() == "2");
                                        }
                                    }
                                    bulk.Send_SMS_Bulk();
                                    #endregion
                                }
                                else if (dtmail.Rows[0]["email_id"].ToString() != null && dtmail.Rows[0]["email_id"].ToString() != "0")
                                {
                                    #region SEND MAIL
                                    string mailfrom = "";
                                    DataTable datatable = new DataTable();
                                    datatable = sgen.getdata(userCode, "select com_email from company_profile where Company_Profile_Id='" + clientid_mst + "' and type='CP'");
                                    if (datatable.Rows.Count > 0)
                                    {
                                        mailfrom = Convert.ToString(datatable.Rows[0]["com_email"].ToString());
                                    }
                                    string mailcc = string.Join(",", dtmail.Rows[0]["email_id"].ToString());
                                    mailcc = mailcc.Replace("'", "");
                                    string[] itar = mailcc.Trim().Split(',');
                                    Mailer mailer = new Mailer(userCode, clientid_mst, unitid_mst, MyGuid);
                                    var body = new StringBuilder();
                                    if (itar.Length > 0)
                                    {
                                        for (Int32 y = 0; y < itar.Length; y++)
                                        {
                                            string[] Emialar = itar[y].Replace("(", "").Replace(")", "").Trim().Split(' ');
                                            if (sgen.ValidateEmail(Emialar[0].ToString()))
                                            {
                                                if (emailidcc.Equals("")) emailidcc = Emialar[0].ToString();
                                                else
                                                {
                                                    emailidcc = emailidcc + "," + Emialar[0].ToString();
                                                }
                                            }
                                        }
                                        Email_id = emailidcc;
                                        xtitle = "";
                                        //xtitle = "Mr Owner, Your Order has Been Gate In  and Gate_in no is : '" + model[0].Col16 + "'";
                                        xtitle = "Mr Owner, You are Being Informed By Your Gate Department";
                                        body.AppendLine(@"<b style='color:#3caee9; font-size: 20px'>" + dtmail.Rows[0]["Email_Heading"].ToString() + " </b><br /><hr style='border:1px solid black' />" +
                                        "<p>Hi <b>" + xtitle + " : </b>,</p><table style='font-weight:600'>");
                                        //foreach (DataRow drl in dataTable.Rows)
                                        //{
                                        //    if (Email_id != "")
                                        //    {
                                        //        drl["col9"].ToString();
                                        //        body.AppendLine(@"<tr><td>Subject </td><td>: " + drl["col9"] + " </td>" +
                                        //             "</tr><tr><td> Chapter Name </td><td>: " + drl["col10"] + " </td></tr>" +
                                        //             "<tr><td> Topic </td><td>: " + drl["col11"] + " </td></tr>" +
                                        //             "<tr><td> Remarks </td><td>: " + drl["col4"] + " </td></tr>");
                                        //        body.AppendLine("<br><br>");
                                        //    }
                                        //}
                                        body.AppendLine(@"</table><br /><p>" + dtmail.Rows[0]["Body_Text"].ToString() + "</p><p>ThankYou,<br />" + dtmail.Rows[0]["signature"].ToString() + "<br /></p><br />");
                                        //body.AppendLine(@"</table><br /><p>" + dtmail.Rows[0]["Body_Text"].ToString() + "</p><p>ThankYou,<br />" + clientname_mst + "<br /></p><br />");
                                        sgen.Send_mail_SA1(userCode, clientid_mst, unitid_mst, mailfrom, emailidcc, Email_id, body.ToString(), dtmail.Rows[0]["Email_Heading"].ToString(), "");
                                        mailer.Add_Mail(Email_id, dtmail.Rows[0]["Email_Heading"].ToString(), body.ToString());
                                    }
                                    mailer.Send_Email_Bulk();
                                    #endregion
                                }
                            }
                            catch (Exception err) { ViewBag.scripCall += "mytoast('error', 'toast-top-right', 'Mail Not Sent');"; }
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                            model = new List<Tmodelmain>();
                            model.Add(new Tmodelmain
                            {
                                Col10 = tm.Col10,
                                Col11 = tm.Col11,
                                Col13 = "Save",
                                Col100 = "Save & New ",
                                Col121 = "S",
                                Col122 = "<u>S</u>ave",
                                Col123 = "Save & Ne<u>w</u>",
                                Col14 = tm.Col14,
                                Col15 = tm.Col15,
                                dt1 = (DataTable)sgen.GetSession(MyGuid, "BGIN_DT"),
                                TList1 = mod1,
                                SelectedItems1 = new string[] { "" },
                            });
                        }
                        else
                        {
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            ViewBag.scripCall += "showmsgJS(1, 'Data Not Saved', 0);";
                            ModelState.Clear();
                            return View(model);
                        }
                    }
                    catch (Exception ex) { ViewBag.scripCall += "showmsgJS(1,'" + ex.Message.ToString().Replace("'", "") + "', 0);"; }
                }
                else if (command == "Import")
                {
                    HttpPostedFileBase file1 = upd1;
                    DataTable dt = new DataTable();
                    if (file1.ContentLength > 1)
                    {
                        string ext = Path.GetExtension(file1.FileName).ToLower();
                        if (ext == ".csv")
                        {
                            string filesavepath = AppDomain.CurrentDomain.BaseDirectory + "\\Uploads\\" + cg_com_name.Replace(" ", "")
                                + "\\file" + DateTime.Now.ToString("ddMMyyyyhhmmfff") + ext;
                            file1.SaveAs(filesavepath);
                            // Read sample data from CSV file
                            int i = 0;
                            using (CsvFileReader reader = new CsvFileReader(filesavepath))
                            {
                                CsvRow row = new CsvRow();
                                while (reader.ReadRow(row))
                                {
                                    DataRow dr = dt.NewRow();
                                    for (int c = 0; c < row.Count; c++)
                                    {
                                        if (i == 0) { dt.Columns.Add(row[c].ToString()); }
                                        else { dr[c] = row[c].ToString(); }
                                        //if (c > dt.Columns.Count) break;                                                                 
                                    }
                                    i++;
                                    dt.Rows.Add(dr);
                                }
                            }
                        }
                        try
                        {
                            dt.Rows[0].Delete();
                            for (int k = 0; k < dt.Rows.Count; k++)
                            {
                                mq = sgen.seekval(userCode, "select icode from item where icode='" + dt.Rows[k]["icode"].ToString() + "' and type='IT' and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "'", "icode");
                                if (mq.Trim() == "0")
                                {
                                    ViewBag.vnew = "disabled='disabled'";
                                    ViewBag.vedit = "disabled='disabled'";
                                    ViewBag.vsave = "";
                                    ViewBag.vsavenew = "";
                                    ViewBag.scripCall += "showmsgJS(1,'Icode: " + dt.Rows[k]["icode"].ToString() + " not found,please check.', 0);";
                                    ModelState.Clear();
                                    return View(model);
                                }
                            }
                            mq1 = "select '' item,'0' Sno,i.icode,i.iname,i.cpartno partno,u.master_name uom,h.master_name hsn,h.group_name taxrate," +
                                "'0' iamount,'0' taxamount,'0' lineamount,'0' po_number,'-' po_date,location_name('" + clientid_mst + "'||'" + unitid_mst + "'||itb.loc) as location from item i " +
                                "inner join itbal itb on i.icode=itb.icode and i.type=itb.type and i.client_unit_id=itb.client_unit_id " +
                                "inner join  master_setting u on u.master_id = i.uom and u.type = 'UMM' and find_in_set(u.client_unit_id, i.client_unit_id)= 1 " +
                                "inner join  master_setting h on h.master_id = i.hsno and h.type = 'HSN' and find_in_set(h.client_unit_id, i.client_unit_id)= 1 " +
                                "where i.type = 'IT' and i.client_unit_id = '" + unitid_mst + "'";
                            DataTable dt2 = sgen.getdata(userCode, mq1);
                            if (dt2.Rows.Count > 0)
                            {
                                var results = from table1 in dt.AsEnumerable()
                                              join table2 in dt2.AsEnumerable() on table1["icode"] equals table2["icode"]
                                              select new
                                              {
                                                  item = table2["item"],
                                                  sno = table2["sno"],
                                                  icode = table1["icode"],
                                                  iname = table2["iname"],
                                                  partno = table2["partno"],
                                                  hsn = table2["hsn"],
                                                  uom = table2["uom"],
                                                  taxrate = table2["taxrate"],
                                                  qty_chl = table1["qty_chl"],
                                                  qty_in = table1["qty_in"],
                                                  irate = table1["irate"],
                                                  disc_type = table1["disc_type"],
                                                  disc_rate = table1["disc_rate"],
                                                  iamount = table2["iamount"],
                                                  taxamount = table2["taxamount"],
                                                  discamount = table1["discamount"],
                                                  lineamount = table2["lineamount"],
                                                  noofpkt_box = table1["noofpkt_box"],
                                                  remark = table1["remark"],
                                                  po_number = table2["po_number"],
                                                  po_date = table2["po_date"],
                                                  batchno = table1["batchno"],
                                                  location = table2["location"]
                                              };
                                results.ToList();
                                DataTable dtk = sgen.ToDataTable(results.ToList());
                                model[0].dt1 = dtk;
                                ViewBag.vsave = "";
                                ViewBag.vimport = "";
                            }
                        }
                        catch (Exception err) { sgen.showmsg(1, err.Message.ToString(), 0); }
                    }
                }
                else if (command == "-")
                {
                    if (model[0].dt1.Rows.Count > 1) model[0].dt1.Rows.RemoveAt(sgen.Make_int(hfrow));
                    else { model[0].dt1 = (DataTable)sgen.GetSession(MyGuid, "BGIN_DT"); }
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion        
        #region  qcinsp
        public ActionResult qcinsp()
        {
            FillMst();
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            model[0].Col9 = "QC INSPECTION";
            model[0].Col10 = "inspvch";
            model[0].Col11 = " and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "'";
            model[0].Col12 = "QCI";
            DataTable dt = sgen.getdata(userCode, "select '0' SNo,'-' Parameter,'-' Specification,'-' Min,'-' Max,'-' Test_cond,'-' Method_of_test ,'-' Result1," +
                "'-' Result2,'-' Result3,'-' Result4,'-' Result5 from dual");
            model[0].dt1 = dt;
            model[0].Col40 = "Choose Fie";
            sgen.SetSession(MyGuid, "dtqcinsp", dt);
            return View(model);
        }
        [HttpPost]
        public ActionResult qcinsp(List<Tmodelmain> model, string command, string hfrow, string hftable, HttpPostedFileBase upd1)
        {
            try
            {
                FillMst();
                DataTable dtm = sgen.settable(hftable);
                model[0].dt1 = dtm;
                var tm = model.FirstOrDefault();
                if (command == "New")
                {
                    try
                    {
                        model = getnew(model);
                        model[0].Col17 = sgen.server_datetime_local(userCode);
                    }
                    catch (Exception ex) { }
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    if (sgen.GetSession(MyGuid, "delid") != null) { btnval = "FDEL"; }
                    else if (sgen.GetSession(MyGuid, "btnval") != null) btnval = sgen.GetSession(MyGuid, "btnval").ToString();
                    model = CallbackFun(btnval, "N", actionName, controllerName, model);
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {
                    try
                    {
                        Satransaction sat1 = new Satransaction(userCode, MyGuid);
                        var tmodel = model.FirstOrDefault();
                        string currdate = sgen.server_datetime(userCode);
                        if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                        {
                            mq1 = " and vch_num<>'" + model[0].Col16 + "'";
                            isedit = true;
                            vch_num = model[0].Col16;
                        }
                        else
                        {
                            mq1 = "";
                            isedit = false;
                            mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                            vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                            model[0].Col16 = vch_num;
                        }
                        mq = "select icode from inspvch where type='" + model[0].Col12 + "'" + model[0].Col11 + " and icode='" + model[0].Col18 + "' and type2='" + model[0].Col19 + "' " +
                            "and acode='" + model[0].Col20 + "' " + mq1 + "";
                        mq = sgen.seekval(userCode, mq, "icode");
                        if (mq != "0")
                        {
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            ViewBag.scripCall += "showmsgJS(1,'Data already exist for this mrn no.', 2);";
                        }
                        DataTable dataTable = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                        for (int i = 0; i < model[0].dt1.Rows.Count; i++)
                        {
                            DataRow dr = dataTable.NewRow();
                            dr["type"] = model[0].Col12;
                            dr["vch_num"] = vch_num.Trim();
                            dr["vch_date"] = sgen.Savedate(model[0].Col17, true);//insp dt                        
                            dr["mrntype"] = model[0].Col20;//mrn type
                            dr["icode"] = model[0].Col18;//mrnicode
                            dr["mrnno"] = model[0].Col21;//mrnno
                            dr["mrndate"] = sgen.Make_date_S(model[0].Col22);//mrndt
                            dr["chlno"] = model[0].Col23;//chlno
                            dr["chldate"] = sgen.Make_date_S(model[0].Col24);//chl dt
                            dr["invno"] = model[0].Col25;//invno
                            dr["invdate"] = sgen.Make_date_S(model[0].Col26);//inv dt
                            dr["acode"] = model[0].Col28;//party vchnum
                            dr["ag"] = model[0].Col31;//agency
                            dr["rptno"] = model[0].Col32;//rptno
                            dr["rptdate"] = model[0].Col33;//rpt date
                            dr["remark"] = model[0].Col34;//remark
                                                          //dt====
                            dr["rno"] = model[0].dt1.Rows[i][0].ToString().Trim();//sno
                            dr["param"] = model[0].dt1.Rows[i][1].ToString();//param
                            dr["spec"] = model[0].dt1.Rows[i][2].ToString();//spec
                            dr["min"] = model[0].dt1.Rows[i][3].ToString();//min
                            dr["max"] = model[0].dt1.Rows[i][4].ToString();//max                      
                            dr["tcond"] = model[0].dt1.Rows[i][5].ToString();//test cond                      
                            dr["tmeth"] = model[0].dt1.Rows[i][6].ToString();//method odf test
                            dr["res1"] = model[0].dt1.Rows[i][7].ToString();//test1                      
                            dr["res2"] = model[0].dt1.Rows[i][8].ToString();//test2                 
                            dr["res3"] = model[0].dt1.Rows[i][9].ToString();//test3                      
                            dr["res4"] = model[0].dt1.Rows[i][10].ToString();//test4                      
                            dr["res5"] = model[0].dt1.Rows[i][11].ToString();//test5
                                                                             //======                        
                            dr = getsave(currdate, dr, model, isedit);
                            dataTable.Rows.Add(dr);
                        }
                        res = sgen.Update_data_uncommit2(userCode, dataTable, model[0].Col10.Trim(), tmodel.Col8, isedit, sat1);
                        if (res)
                        {
                            try
                            {
                                if (upd1.ContentLength > 1000)
                                {
                                    DataTable dtfile = new DataTable();
                                    dtfile = cmd_Fun.GetStructure(userCode, "file_tab");
                                    string serverpath = Server.MapPath("~/Uploads/" + cg_com_name.Replace(" ", "") + "/");
                                    //test doc Image                                                                  
                                    HttpPostedFileBase file1 = upd1;
                                    ctype1 = file1.ContentType;
                                    fileName1 = file1.FileName;
                                    path1 = clientid_mst + unitid_mst + userid_mst + currdate + "_" + fileName1;
                                    encpath1 = sgen.Convert_Stringto64(path1).ToString();
                                    finalpath1 = serverpath + encpath1;
                                    file1.SaveAs(finalpath1);
                                    filesave(model, currdate, dtfile, fileName1, encpath1, "Test Document", ctype1);
                                    res = sgen.Update_data_uncommit2(userCode, dtfile, "file_tab", "", false, sat1);
                                    if (!res)
                                    {
                                        sat1.Rollback();
                                        ViewBag.vnew = "disabled='disabled'";
                                        ViewBag.vedit = "disabled='disabled'";
                                        ViewBag.vsave = "";
                                        ViewBag.vsavenew = "";
                                        ViewBag.scripCall += "showmsgJS(1, 'Image data have error', 0);";
                                        ModelState.Clear();
                                        return View(model);
                                    }
                                }
                            }
                            catch (Exception ex) { }
                            if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                            {
                                ViewBag.vnew = "";
                                ViewBag.vedit = "";
                                ViewBag.vsave = "disabled='disabled'";
                                ViewBag.vsavenew = "disabled='disabled'";
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                            }
                            else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                            {
                                try
                                {
                                    model = getnew(model);
                                    model[0].Col17 = sgen.server_datetime_local(userCode);
                                    model[0].Col22 = "1";
                                    ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                                }
                                catch (Exception ex) { }
                            }
                            sat1.Commit();
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                            model = new List<Tmodelmain>();
                            model.Add(new Tmodelmain
                            {
                                Col13 = "Save",
                                Col9 = tmodel.Col9,
                                Col10 = tmodel.Col10,
                                Col11 = tmodel.Col11,
                                Col12 = tmodel.Col12,
                                Col14 = tmodel.Col14,
                                Col15 = tmodel.Col15,
                                dt1 = (DataTable)sgen.GetSession(MyGuid, "dtqcinsp"),
                                Col100 = "Save & New"
                            });
                        }
                        else
                        {
                            sat1.Rollback();
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            ViewBag.scripCall += "showmsgJS(1, 'Data not save', 0);";
                            ModelState.Clear();
                            return View(model);
                        }
                    }
                    catch (Exception ex) { ViewBag.scripCall = "showmsgJS(1,'" + ex.Message.ToString() + "', 0);"; }
                }
                else if (command == "-")
                {
                    if (model[0].dt1.Rows.Count > 1) model[0].dt1.Rows.RemoveAt(sgen.Make_int(hfrow));
                    else model[0].dt1 = (DataTable)sgen.GetSession(MyGuid, "dtqcinsp");
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        private void filesave(List<Tmodelmain> model, string currdate, DataTable dtfile, string filename, string filepath, string filetitle, string content_type)
        {
            DataRow drf = dtfile.NewRow();
            drf["vch_num"] = model[0].Col16;
            drf["type"] = model[0].Col12;
            drf["ref_code"] = model[0].Col16;
            drf["ref_code1"] = model[0].Col16;
            drf["col1"] = filetitle;
            drf["rec_id"] = "0";
            drf["vch_date"] = currdate;
            drf["file_name"] = filename;
            drf["file_path"] = filepath;
            drf["col2"] = content_type;
            drf["ent_by"] = userid_mst;
            drf["ent_date"] = currdate;
            drf["client_id"] = clientid_mst;
            drf["client_unit_id"] = unitid_mst;
            drf["edit_by"] = userid_mst;
            drf["edit_date"] = currdate;
            dtfile.Rows.Add(drf);
        }
        [HttpGet]
        public FileResult fdown(string value, string Myguid)
        {
            FillMst(Myguid);
            if (!value.Trim().Equals(""))
            {
                DataTable dt2 = new DataTable();
                mq = "select file_name,file_path from file_tab where rec_id='" + value.Trim() + "' and type='QCI' and client_unit_id='" + unitid_mst + "'";
                dt2 = sgen.getdata(userCode, mq);
                if (dt2.Rows.Count > 0)
                {
                    path1 = Convert.ToString(dt2.Rows[0]["file_path"]);
                    fileName1 = Convert.ToString(dt2.Rows[0]["file_name"]);
                }
            }
            byte[] fileBytes = System.IO.File.ReadAllBytes(Server.MapPath("~/Uploads/" + cg_com_name.Replace(" ", "") + "/" + path1));
            return File(fileBytes, System.Net.Mime.MediaTypeNames.Application.Octet, fileName1);
        }
        [HttpPost]
        public void fdelete(string value, string Myguid)
        {
            sgen.SetSession(Myguid, "delid", value);
        }
        #endregion
        #region item_opening
        public ActionResult item_opening()
        {
            FillMst();
            chkRef();
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            List<SelectListItem> mod1 = new List<SelectListItem>();
            model[0].Col10 = "itbal_enx";
            model[0].Col9 = "ITEM OPENING";
            model[0].Col12 = "IT";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";

            model[0].SelectedItems1 = new string[] { "" };
            TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
            DataTable dt = sgen.getdata(userCode, "select '-' as SNo,'-' as ICode,'-' as IName,'-' PartNo,'-' as UOM,'0' as Opening_qty,'0' no_of_pkt,'0' amount from dual");
            model[0].dt1 = dt;
            sgen.SetSession(MyGuid, "BOPNDT", dt);
            ViewBag.vopbal = "disabled='disabled'";
            return View(model);
        }
        public List<Tmodelmain> new_item_opening(List<Tmodelmain> model)
        {
            #region Dropdwon
            List<SelectListItem> mod1 = new List<SelectListItem>();
            #endregion
            model = getnew(model);
            ViewBag.vopbal = "";
            mod1 = new List<SelectListItem>();
            TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.iloc(userCode, unitid_mst);
            return model;
        }
        [HttpPost]
        public ActionResult item_opening(List<Tmodelmain> model, string command, string hfrow, string hftable, HttpPostedFileBase upd1)
        {
            try
            {
                FillMst(model[0].Col15);
                DataTable dtm = sgen.settable(hftable);
                string year = year_from.Substring(6, 4);
                model[0].dt1 = dtm;
                var tmodel = model.FirstOrDefault();
                #region ddl
                List<SelectListItem> mod1 = new List<SelectListItem>();
                model[0].TList1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                TempData[MyGuid + "_TList1"] = model[0].TList1;
                if (tmodel.SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                #endregion
                DataTable dt = new DataTable();
                DataTable dataTable = new DataTable();
                if (command == "New")
                {
                    model = new_item_opening(model);
                }
                if (command == "Cancel") { return CancelFun(model); }
                else if (command == "Callback") { model = StartCallback(model); }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {
                    try
                    {
                        if (model[0].Col133 == "N")
                        {
                            ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for save data , please contact your admin', 2);";
                            return View(model);
                        }
                        if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-"))
                        {
                            ViewBag.scripCall += "showmsgJS(1,'Please Select item in grid', 2);";
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            return View(model);
                        }
                        string currdate = sgen.server_datetime(userCode);
                        if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                        {
                            isedit = true;
                            vch_num = model[0].Col16;
                        }
                        else
                        {
                            isedit = false;
                            mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                            vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                            model[0].Col16 = vch_num;
                        }
                        string vdate = sgen.Make_date_S(model[0].Col17);
                        dataTable = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                        cond = "";
                        for (int i = 0; i < model[0].dt1.Rows.Count; i++)
                        {
                            if (model[0].dt1.Rows[i]["Opening_qty"].ToString().Trim().Equals("0") || model[0].dt1.Rows[i]["Opening_qty"].ToString().Trim().Equals("") ||
                                model[0].dt1.Rows[i]["no_of_pkt"].ToString().Trim().Equals("0") || model[0].dt1.Rows[i]["no_of_pkt"].ToString().Trim().Equals("") ||
                                model[0].dt1.Rows[i]["amount"].ToString().Trim().Equals("0") || model[0].dt1.Rows[i]["amount"].ToString().Trim().Equals(""))
                            {
                                ViewBag.scripCall += "showmsgJS(1,'Please Fill Opening Quantity, No of Pkt and Amount in grid-1', 0);";
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                                return View(model);
                            }

                            DataRow dr = dataTable.NewRow();
                            dr["vch_num"] = vch_num;
                            dr["type"] = model[0].Col12;
                            dr["vch_date"] = vdate;
                            dr["LOC"] = model[0].SelectedItems1.FirstOrDefault();
                            dr["icode"] = model[0].dt1.Rows[i]["Icode"].ToString();
                            dr["acyear"] = year;
                            dr["OP_" + year] = model[0].dt1.Rows[i]["Opening_qty"].ToString();
                            dr["pkt_" + year] = model[0].dt1.Rows[i]["no_of_pkt"].ToString();
                            dr["amt_" + year] = model[0].dt1.Rows[i]["amount"].ToString();
                            cond += "('" + model[0].dt1.Rows[i]["Icode"].ToString() + model[0].SelectedItems1.FirstOrDefault() + year + "')";
                            dr = getsave(currdate, dr, model);
                            dataTable.Rows.Add(dr);
                        }
                        Satransaction sat = new Satransaction(userCode, MyGuid);
                        if (cond.Length > 3) cond = cond.Substring(0, cond.Length - 1);
                        cond = "type='IT' and  (trim(icode)||trim(loc)||trim(acyear)) in (" + cond + ")";
                        ok = sgen.Update_data_fast1_uncommit(userCode, dataTable, model[0].Col10.Trim(), cond, true, sat);
                        if (ok == true)
                        {
                            for (int i = 0; i < model[0].dt1.Rows.Count; i++)
                            {
                                cmd = "select nvl(sum(op_" + year + "),0) from itbal_enx where icode='" + model[0].dt1.Rows[i]["Icode"].ToString() + "' and acyear='" + year + "' and vch_num not in ('" + vch_num + "')";
                                string cmdpkt = "select nvl(sum(pkt_" + year + "),0) from itbal_enx where icode='" + model[0].dt1.Rows[i]["Icode"].ToString() + "' and acyear='" + year + "' and vch_num not in ('" + vch_num + "')";
                                string cmdamt = "select nvl(sum(amt_" + year + "),0) from itbal_enx where icode='" + model[0].dt1.Rows[i]["Icode"].ToString() + "' and acyear='" + year + "' and vch_num not in ('" + vch_num + "')";

                                res = sat.Execute_cmd("update ITBAL set op_" + year + " = (" + cmd + " + " + sgen.Make_decimal(model[0].dt1.Rows[i]["Opening_qty"].ToString()) + ")," +
                                    "pkt_" + year + " = (" + cmdpkt + " + " + sgen.Make_decimal(model[0].dt1.Rows[i]["no_of_pkt"].ToString()) + ")," +
                                    "amt_" + year + " = (" + cmdamt + " + " + sgen.Make_decimal(model[0].dt1.Rows[i]["amount"].ToString()) + ") " +
                                    "WHERE ICODE='" + model[0].dt1.Rows[i]["Icode"].ToString() + "' and client_unit_id='" + unitid_mst + "'");
                                if (!res) break;
                            }
                            if (res)
                            {
                                sat.Commit();
                                //ViewBag.vnew = "";
                                //ViewBag.vedit = "";
                                //ViewBag.vsave = "disabled='disabled'";
                                //ViewBag.vsavenew = "disabled='disabled'";
                                ViewBag.vopbal = "disabled='disabled'";
                                dt = (DataTable)sgen.GetSession(MyGuid, "BOPNDT");
                                model = new List<Tmodelmain>();
                                model.Add(new Tmodelmain
                                {
                                    Col13 = "Save",
                                    Col100 = "Save & New",
                                    Col121 = "S",
                                    Col122 = "<u>S</u>ave",
                                    Col123 = "Save & Ne<u>w</u>",
                                    Col9 = tmodel.Col9,
                                    Col10 = tmodel.Col10,
                                    Col11 = tmodel.Col11,
                                    Col12 = tmodel.Col12,
                                    Col14 = tmodel.Col14,
                                    Col15 = tmodel.Col15,
                                    TList1 = mod1,
                                    SelectedItems1 = new string[] { "" },
                                    dt1 = dt
                                });

                                if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                                {
                                    ViewBag.vnew = "";
                                    ViewBag.vedit = "";
                                    ViewBag.vsave = "disabled='disabled'";
                                    ViewBag.vsavenew = "disabled='disabled'";
                                    ViewBag.vsavenew = "disabled='disabled'";
                                    ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                                }
                                else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                                {
                                    try
                                    {
                                        model = new_item_opening(model);
                                        ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                                    }
                                    catch (Exception ex) { }
                                }
                                //  ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                            }
                            else
                            {
                                sat.Rollback();
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vopbal = "";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                                ViewBag.scripCall += "showmsgJS(1, 'Error in Updation of Stock', 0);";
                            }
                        }
                        else
                        {
                            sat.Rollback();
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vopbal = "";
                            ViewBag.vsavenew = "";
                            ViewBag.scripCall += "showmsgJS(1, 'Data Not Saved', 0);";
                        }
                    }
                    catch (Exception ex) { ViewBag.scripCall = "showmsgJS(1,'" + ex.Message.ToString().Replace('\'', ' ') + "', 0);"; }
                }
                else if (command == "-")
                {
                    if (model[0].dt1.Rows.Count > 1) model[0].dt1.Rows.RemoveAt(sgen.Make_int(hfrow));
                    else { model[0].dt1 = (DataTable)sgen.GetSession(MyGuid, "BOPNDT"); }
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
                else if (command == "Update OPbal")
                {
                    isedit = false;
                    string currdate = sgen.server_datetime(userCode);
                    mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                    vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                    string vdate = sgen.Make_date_S(model[0].Col17);
                    dataTable = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());

                    var Year = sgen.GetCookie(MyGuid, "Ac_Year").Split(' ')[0].Trim();//2020
                    var Lastyr = sgen.Make_int(Year) - 1;
                    //var lfrom = sgen.seekval(userCode, "select to_char(year_from,'"+sgen.Getsqldateformat()+"') year_from from com_year where substr(com_year,0,4)='" + Lastyr + "'", "year_from");
                    //var lto = sgen.seekval(userCode, "select to_char(year_to,'" + sgen.Getsqldateformat() + "') year_to from com_year where substr(com_year,0,4)='" + Lastyr + "'", "year_to");
                    var lfrom = sgen.seekval(userCode, "select to_char(from_date,'" + sgen.Getsqldateformat() + "') from_date from add_academic_year where substr(academic_year,0,4)='" + Lastyr + "' and client_id='" + clientid_mst + "'", "from_date");
                    var lto = sgen.seekval(userCode, "select to_char(to_date,'" + sgen.Getsqldateformat() + "') to_date from add_academic_year where substr(academic_year,0,4)='" + Lastyr + "' and client_id='" + clientid_mst + "'", "to_date");

                    //mq = "select icode, loc, client_unit_id, sum(op) op, sum(pktop) pktop,sum(qtyin) qtyin,sum(qtyout) qtyout,sum(pktno) pktno" +
                    //   ",sum(op)+sum(qtyin)-sum(qtyout) cl,sum(pktop) +sum(pktno) as pktcl from (select icode, loc, client_unit_id, nvl(op_" + Lastyr + ",0) op,nvl(pkt_2019, 0) pktop,0 qtyin,0 qtyout,0 pktno from itbal_enx " +
                    //  "union all select icode,loc,client_unit_id,sum(to_number(qtyin)) - sum(to_number(qtyout)) op,sum((case when substr(type, 1, 1) in ('0', '1') then pktno " +
                    //  "when substr(type, 1, 1) in ('2', '3', '4') then - pktno else pktno end)) pktop,sum(to_number(qtyin)) qtyin,sum(to_number(qtyout)) qtyout,0 pktno from btchtrans " +
                    //  "where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between to_date('" + lfrom + "', '" + sgen.Getsqldateformat() + "') and " +
                    //  "to_date('" + lfrom + "','" + sgen.Getsqldateformat() + "')-1 group by icode,loc,client_unit_id union all " +
                    //  "select icode,loc,client_unit_id,0 op,0 pktop,to_number(qtyin) qtyin,to_number(qtyout) qtyout,nvl(sum((case when substr(type, 1, 1) in ('0', '1') then " +
                    //  "pktno when substr(type, 1, 1) in ('2', '3', '4') then - pktno else pktno end)),0) pktno from btchtrans where trim(store) = 'Y' and " +
                    //  "to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between to_date('" + lfrom + "', '" + sgen.Getsqldateformat() + "') and " +
                    //  "to_date('" + lto + "','" + sgen.Getsqldateformat() + "') group by icode,loc,client_unit_id,to_number(qtyin),to_number(qtyout)) a group by " +
                    //  "icode, loc, client_unit_id) t group by  icode, loc, client_unit_id";

                    mq = "select icode,loc,client_unit_id,sum(op) op,sum(pktop) pktop,sum(qtyin) qtyin,sum(qtyout) out,sum(op)+sum(qtyin)-sum(qtyout) closing," +
                        "sum(pktop) + sum(pktno) pktclosing,sum(iamount) iamount from " +
                        "(select icode, loc, client_unit_id, nvl(op_" + Lastyr + ",0) op,nvl(pkt_" + Lastyr + ", 0) pktop,0 qtyin,0 qtyout,0 pktno,nvl(amt_" + Lastyr + ", 0) iamount from itbal_enx " +
                        "union all select icode,loc,client_unit_id,sum(to_number(qtyin)) - sum(to_number(qtyout)) op,sum((case when substr(type, 1, 1) in ('0', '1') then pktno " +
                        "when substr(type, 1, 1) in ('2', '3', '4') then - pktno else pktno end)) pktop,sum(to_number(qtyin)) qtyin,sum(to_number(qtyout)) qtyout,0 pktno," +
                        "(case when to_number(nvl(qtyin, 0)) = 0 then - to_number(nvl(iamount, 0)) else to_number(nvl(iamount, 0)) end) iamount from btchtrans " +
                        "where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between to_date('" + lfrom + "', '" + sgen.Getsqldateformat() + "') " +
                        "and to_date('" + lfrom + "','" + sgen.Getsqldateformat() + "')-1 group by icode,loc,client_unit_id,(case when to_number(nvl(qtyin, 0)) = 0 then - to_number(nvl(iamount, 0)) else to_number(nvl(iamount, 0)) end) " +
                        "union all select icode,loc,client_unit_id,0 op,0 pktop,sum(to_number(qtyin)) qtyin,sum(to_number(qtyout)) qtyout,nvl(sum((case when substr(type, 1, 1) in ('0', '1') " +
                        "then pktno when substr(type, 1, 1) in ('2', '3', '4') then - pktno else pktno end)),0) pktno,(case when to_number(nvl(qtyin, 0)) = 0 then - to_number(nvl(iamount, 0)) else to_number(nvl(iamount, 0)) end) iamount " +
                        "from btchtrans where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between " +
                        "to_date('" + lfrom + "', '" + sgen.Getsqldateformat() + "') and to_date('" + lto + "','" + sgen.Getsqldateformat() + "') " +
                        "group by icode,loc,client_unit_id,(case when to_number(nvl(qtyin, 0)) = 0 then - to_number(nvl(iamount, 0)) else to_number(nvl(iamount, 0)) end)) a " +
                        "where client_unit_id='" + unitid_mst + "' " +
                        "group by icode, loc, client_unit_id order by icode asc";
                    DataTable dtu = sgen.getdata(userCode, mq);
                    if (dtu.Rows.Count > 0)
                    {
                        string lastitem = "", titem = "";
                        Satransaction sat = new Satransaction(userCode, MyGuid);

                        string foundyr = sgen.seekval(userCode, "select acyear from itbal_enx where acyear='" + Year + "' and client_unit_id='" + unitid_mst + "'", "acyear");
                        if (foundyr == Year)
                        {
                            isedit = true;
                            model[0].Col8 = "acyear='" + Year + "'";
                        }
                        for (int i = 0; i < dtu.Rows.Count; i++)
                        {
                            titem = dtu.Rows[i]["Icode"].ToString().Trim();
                            if (titem.Length > 9)
                            {
                                DataRow dr = dataTable.NewRow();
                                dr["vch_num"] = vch_num;
                                dr["type"] = model[0].Col12;
                                dr["vch_date"] = vdate;
                                dr["LOC"] = dtu.Rows[i]["loc"].ToString().Trim();
                                dr["icode"] = dtu.Rows[i]["Icode"].ToString().Trim();
                                dr["acyear"] = Year;
                                dr["OP_" + Year] = dtu.Rows[i]["closing"].ToString();
                                dr["pkt_" + Year] = dtu.Rows[i]["pktclosing"].ToString();
                                dr["amt_" + Year] = dtu.Rows[i]["iamount"].ToString();
                                dr = getsave(currdate, dr, model);
                                dataTable.Rows.Add(dr);

                                if (!lastitem.Equals(titem))
                                {
                                    lastitem = titem;
                                    var qtcl = dtu.Compute("sum(closing)", "icode='" + titem + "'").ToString();
                                    var pkcl = dtu.Compute("sum(pktclosing)", "icode='" + titem + "'").ToString();
                                    var amtcl = dtu.Compute("sum(iamount)", "icode='" + titem + "'").ToString();
                                    mq1 = "update itbal set op_" + Year + "='" + qtcl + "',pkt_" + Year + "='" + pkcl + "',amt_" + Year + "='" + amtcl + "' where trim(icode||client_unit_id)='" + titem + unitid_mst + "'";
                                    res = sat.Execute_cmd(mq1);
                                    if (!res) break;
                                }
                            }
                        }
                        res = sgen.Update_data_uncommit2(userCode, dataTable, model[0].Col10.Trim(), model[0].Col8, isedit, sat);
                        if (res)
                        {
                            sat.Commit();
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vopbal = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            dt = (DataTable)sgen.GetSession(MyGuid, "BOPNDT");
                            model = new List<Tmodelmain>();
                            model.Add(new Tmodelmain
                            {
                                Col13 = "Save",
                                Col9 = tmodel.Col9,
                                Col10 = tmodel.Col10,
                                Col11 = tmodel.Col11,
                                Col12 = tmodel.Col12,
                                Col14 = tmodel.Col14,
                                Col15 = tmodel.Col15,
                                TList1 = mod1,
                                SelectedItems1 = new string[] { "" },
                                dt1 = dt
                            });
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else
                        {
                            sat.Rollback();
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vopbal = "";
                            ViewBag.vsavenew = "";
                            ViewBag.scripCall += "showmsgJS(1, 'Data Not Saved', 0);";
                        }
                    }
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region item_openingn
        public ActionResult item_openingn()
        {
            FillMst();
            chkRef();
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            List<SelectListItem> mod1 = new List<SelectListItem>();
            model[0].Col10 = "itransaction";
            model[0].Col9 = "ITEM OPENING";
            model[0].Col12 = "1A";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].SelectedItems1 = new string[] { "" };
            TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
            DataTable dt = sgen.getdata(userCode, "select '-' as SNo,'-' as ICode,'-' as IName,'-' PartNo,'-' as UOM,'0' as Opening_qty,'0' no_of_pkt,'0' amount,'0' batchno from dual");
            model[0].dt1 = dt;
            sgen.SetSession(MyGuid, "BOPNDT", dt);
            ViewBag.vopbal = "disabled='disabled'";
            return View(model);
        }
        public List<Tmodelmain> new_item_openingn(List<Tmodelmain> model)
        {
            List<SelectListItem> mod1 = new List<SelectListItem>();
            model = getnew(model);
            ViewBag.vopbal = "";
            mod1 = new List<SelectListItem>();
            TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.iloc(userCode, unitid_mst);
            return model;
        }
        [HttpPost]
        public ActionResult item_openingn(List<Tmodelmain> model, string command, string hfrow, string hftable, HttpPostedFileBase upd1)
        {
            try
            {
                FillMst(model[0].Col15);
                DataTable dtm = sgen.settable(hftable);
                string year = year_from.Substring(6, 4);
                model[0].dt1 = dtm;
                var tm = model.FirstOrDefault();
                #region ddl
                List<SelectListItem> mod1 = new List<SelectListItem>();
                model[0].TList1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                TempData[MyGuid + "_TList1"] = model[0].TList1;
                if (tm.SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                #endregion
                DataTable dt = new DataTable();
                DataTable dataTable = new DataTable();
                if (command == "New")
                {
                    model = new_item_openingn(model);
                }
                if (command == "Cancel") { return CancelFun(model); }
                else if (command == "Callback") { model = StartCallback(model); }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {
                    try
                    {
                        string conds = "";
                        Satransaction sat = new Satransaction(userCode, model[0].Col15);
                        if (model[0].Col133 == "N")
                        {
                            ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for save data , please contact your admin', 2);";
                            return View(model);
                        }
                        if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-"))
                        {
                            ViewBag.scripCall += "showmsgJS(1,'Please Select item in grid', 2);";
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            return View(model);
                        }
                        string currdate = sgen.server_datetime(userCode);
                        if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                        {
                            isedit = true;
                            vch_num = model[0].Col16;
                        }
                        else
                        {
                            isedit = false;
                            mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                            vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                            model[0].Col16 = vch_num;
                        }
                        string vdate = sgen.Make_date_S(model[0].Col17);
                        dataTable = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                        for (int i = 0; i < model[0].dt1.Rows.Count; i++)
                        {
                            #region itransaction
                            DataRow dr2 = dataTable.NewRow();
                            dr2["type"] = model[0].Col12;
                            dr2["vch_num"] = vch_num.Trim();
                            dr2["vch_date"] = vdate;
                            //dt===
                            dr2["rno"] = model[0].dt1.Rows[i][0].ToString();
                            dr2["icode"] = model[0].dt1.Rows[i][1].ToString();
                            dr2["iname"] = model[0].dt1.Rows[i][2].ToString();
                            dr2["cpartno"] = model[0].dt1.Rows[i][3].ToString();
                            dr2["uom"] = model[0].dt1.Rows[i][4].ToString();
                            dr2["qtychl"] = model[0].dt1.Rows[i][5].ToString();
                            dr2["qtyin"] = model[0].dt1.Rows[i][5].ToString();
                            dr2["iamount"] = sgen.Round2Decimals(sgen.Make_decimal(model[0].dt1.Rows[i][7].ToString().Trim()), 2).ToString().Trim();
                            dr2["pktno"] = model[0].dt1.Rows[i][6].ToString() == "" ? "0" : model[0].dt1.Rows[i][6].ToString();//noofpkt/box                            
                            dr2["btchno"] = model[0].dt1.Rows[i][8].ToString();
                            dr2["store"] = "Y";
                            dr2["inspected"] = "Y";
                            dr2["rec_id"] = "0";
                            conds += "('" + clientid_mst + unitid_mst + model[0].Col12 + dr2["icode"].ToString() + dr2["btchno"].ToString() + "'),";
                            if (isedit)
                            {
                                dr2["client_id"] = model[0].Col1.Trim();
                                dr2["client_unit_id"] = model[0].Col2.Trim();
                                dr2["ent_by"] = model[0].Col3;
                                dr2["ent_date"] = model[0].Col4;
                                dr2["edit_by"] = userid_mst;
                                dr2["edit_date"] = currdate;
                            }
                            else
                            {
                                dr2["client_id"] = clientid_mst;
                                dr2["client_unit_id"] = unitid_mst;
                                dr2["ent_by"] = userid_mst;
                                dr2["ent_date"] = currdate;
                                dr2["edit_by"] = "-";
                                dr2["edit_date"] = currdate;
                            }
                            dataTable.Rows.Add(dr2);
                            #endregion
                        }
                        if (conds.Length > 3) conds = conds.Substring(0, conds.Length - 1);
                        cond = "(trim(client_id)||trim(client_unit_id)||trim(type)||trim(icode)||trim(btchno)) in (" + conds + ")";
                        ok = sgen.Update_data_fast1_uncommit(userCode, dataTable, model[0].Col10.Trim(), cond, true, sat);
                        if (ok == true)
                        {
                            DataTable dtbtch = new DataTable();
                            dtbtch = cmd_Fun.GetStructure(userCode, "btchtrans");
                            for (int i = 0; i < model[0].dt1.Rows.Count; i++)
                            {
                                #region
                                DataRow dr3 = dtbtch.NewRow();
                                dr3["vch_num"] = vch_num.Trim();
                                dr3["type"] = model[0].Col12;
                                dr3["doc_type"] = vch_num + model[0].Col12 + model[0].dt1.Rows[i][8].ToString(); //doc+type+batchno
                                dr3["vch_date"] = vdate;
                                dr3["rno"] = model[0].dt1.Rows[i][0].ToString();
                                dr3["icode"] = model[0].dt1.Rows[i][1].ToString();
                                dr3["iname"] = model[0].dt1.Rows[i][2].ToString();
                                dr3["cpartno"] = model[0].dt1.Rows[i][2].ToString();
                                dr3["uom"] = model[0].dt1.Rows[i][4].ToString();
                                dr3["qtyin"] = model[0].dt1.Rows[i][5].ToString();
                                dr3["loc"] = model[0].SelectedItems1.FirstOrDefault();
                                dr3["locname"] = model[0].TList1.SingleOrDefault(w => w.Value == model[0].SelectedItems1.FirstOrDefault()).Text;//locname
                                dr3["store"] = "Y";
                                dr3["pktno"] = model[0].dt1.Rows[i][6].ToString() == "" ? "0" : model[0].dt1.Rows[i][6].ToString();//noofpkt/box
                                dr3["btchno"] = model[0].dt1.Rows[i][8].ToString();
                                dr3["rec_id"] = "0";
                                // shiv
                                if (isedit)
                                {
                                    dr3["client_id"] = model[0].Col1.Trim();
                                    dr3["client_unit_id"] = model[0].Col2.Trim();
                                    dr3["ent_by"] = model[0].Col3;
                                    dr3["ent_date"] = model[0].Col4;
                                    dr3["edit_by"] = userid_mst;
                                    dr3["edit_date"] = currdate;
                                }
                                else
                                {
                                    dr3["client_id"] = clientid_mst;
                                    dr3["client_unit_id"] = unitid_mst;
                                    dr3["ent_by"] = userid_mst;
                                    dr3["ent_date"] = currdate;
                                    dr3["edit_by"] = "-";
                                    dr3["edit_date"] = currdate;
                                }
                                dtbtch.Rows.Add(dr3);
                                #endregion
                            }
                            res = sgen.Update_data_fast1_uncommit(userCode, dtbtch, "btchtrans", cond, true, sat);
                            if (!res)
                            {
                                sat.Rollback();
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vopbal = "";
                                ViewBag.vsavenew = "";
                                ViewBag.scripCall += "showmsgJS(1, 'Data Not Saved', 0);";
                            }

                            sat.Commit();
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.scripCall = "disableForm();";
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";

                            model = new List<Tmodelmain>();
                            model.Add(new Tmodelmain
                            {
                                Col9 = tm.Col9,
                                Col10 = tm.Col10,
                                Col11 = tm.Col11,
                                Col12 = tm.Col12,
                                Col13 = "Save",
                                Col14 = tm.Col14,
                                Col15 = tm.Col15,
                                Col100 = "Save & New ",
                                Col121 = "S",
                                Col122 = "<u>S</u>ave",
                                Col123 = "Save & Ne<u>w</u>",
                                dt1 = (DataTable)sgen.GetSession(MyGuid, "BOPNDT"),
                                TList1 = mod1,
                                SelectedItems1 = new string[] { "" },
                            });
                        }
                        else
                        {
                            sat.Rollback();
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vopbal = "";
                            ViewBag.vsavenew = "";
                            ViewBag.scripCall += "showmsgJS(1, 'Data Not Saved', 0);";
                        }
                    }
                    catch (Exception ex) { ViewBag.scripCall = "showmsgJS(1,'" + ex.Message.ToString().Replace('\'', ' ') + "', 0);"; }
                }
                else if (command == "-")
                {
                    if (model[0].dt1.Rows.Count > 1) model[0].dt1.Rows.RemoveAt(sgen.Make_int(hfrow));
                    else { model[0].dt1 = (DataTable)sgen.GetSession(MyGuid, "BOPNDT"); }
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region invreps2
        public ActionResult invreps2()
        {
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            FillMst(MyGuid);
            mid_mst = EncryptDecrypt.Decrypt(Request.QueryString["mid"]);
            if (userCode.Equals("")) { return Redirect(sgenFun.callbackurl); }
            if (Request.UrlReferrer == null) { return Redirect(sgenFun.callbackurl); }
            List<Tmodelmain> model = new List<Tmodelmain>();
            Tmodelmain tm1 = new Tmodelmain();
            mid_mst = "17005.1";
            tm1.Col10 = "itransaction";
            tm1.Col9 = "Stock Summary";
            tm1.Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            tm1.Col13 = "Save";
            tm1.Col100 = "Save & New";
            tm1.Col14 = mid_mst.Trim();
            tm1.Col15 = MyGuid.Trim();
            model.Add(tm1);
            return View(model);
        }
        [HttpPost]
        public ActionResult invreps2(List<Tmodelmain> model, string command)
        {
            try
            {
                string fdt = "", tdt = "", title = "", btnval = "", cl = "", ut = "";
                int seektype = 0;
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();
                DataTable dt = new DataTable();
                if (sgen.GetSession(MyGuid, "KDDL_CL") != null) cl = sgen.GetSession(MyGuid, "KDDL_CL").ToString();
                if (sgen.GetSession(MyGuid, "KDDL_UT") != null) ut = sgen.GetSession(MyGuid, "KDDL_UT").ToString().Replace(",", "','");
                if (sgen.GetSession(MyGuid, "KPDFDT") != null) fdt = sgen.GetSession(MyGuid, "KPDFDT").ToString();
                if (sgen.GetSession(MyGuid, "KPDTDT") != null) tdt = sgen.GetSession(MyGuid, "KPDTDT").ToString();
                if (sgen.GetSession(MyGuid, "KPDCMD") != null) command = sgen.GetSession(MyGuid, "KPDCMD").ToString();

                string tcp = "", tut = "", tfromdt = "", ttodate = "";
                try
                {
                    tcp = sgen.GetSession(MyGuid, "KDDL_CL").ToString();
                    tut = sgen.GetSession(MyGuid, "KDDL_UT").ToString();
                    tfromdt = sgen.GetSession(MyGuid, "TXTFROMDATE").ToString();
                    ttodate = sgen.GetSession(MyGuid, "TXTTODATE").ToString();
                }
                catch (Exception err) { }
                string date_period = "from " + fdt + " to " + tdt + "";
                switch (command.Trim())
                {
                    case "MRN Summary (Party Wise)":
                        cmd = "select '-' fstr,mr.type as mrn_type,it.vch_num as party_code,it.c_name as party,mr.basicamt basic_amt,mr.netamt net_amount from clients_mst it " +
                            "inner join itransaction mr on mr.acode = it.vch_num and mr.type in ('01', '02', '05', '07', '09') and " +
                            "to_date(to_char(mr.vch_date,'DDMMYYYY'),'DDMMYYYY') between to_date('" + fdt + "', '" + sgen.Getsqldateformat() + "') and to_date('" + tdt + "','" + sgen.Getsqldateformat() + "') " +
                            "where it.type = 'BCD' and find_in_set(it.client_unit_id, '" + unitid_mst + "') = 1 " +
                            "group by(it.vch_num, it.c_name, mr.type,mr.basicamt,mr.netamt)";
                        title = "MRN Summary (Party Wise) " + date_period + "";
                        seektype = 0;
                        break;
                    case "Pending Invoice Against Dispatch":
                        cmd = "select '-' as fstr,nvl(iv.invoice_no,'-') as invoice_no,nvl(to_char(iv.invoice_dt, '" + sgen.Getsqldateformat() + "'),'-') as invoice_dt," +
                            "dp.acode,cl.c_name as party_name,dp.type2 ord_type,dp.icode,dp.vch_num as dsp_no,to_char(dp.vch_date,'" + sgen.Getsqldateformat() + "') as dsp_date,dp.qtychl as disp_qty," +
                            "nvl(iv.invoice_qty,'0') invoice_qty,dp.qtychl - nvl(iv.invoice_qty, '0') as pending_disp from itransaction dp " +
                            "left join (select a.invoice_no,a.invoice_dt,a.acode,a.ord_type,a.icode,a.dspno,a.dspdate,sum(a.qtyout) as invoice_qty,a.client_id," +
                            "a.client_unit_id from(select vch_num invoice_no,vch_date invoice_dt, acode,type as ord_type,icode,dspno,dspdate," +
                            "qtyout,client_id,client_unit_id from itransaction where potype = '53') a group by (a.invoice_no, a.invoice_dt, a.acode," +
                            "a.ord_type,a.icode,a.dspno,a.dspdate,a.client_id,a.client_unit_id)) iv on dp.vch_num = iv.dspno and dp.icode = iv.icode " +
                            "and dp.acode = iv.acode and iv.ord_type = dp.type2 and dp.client_unit_id=iv.client_unit_id and dp.vch_date = iv.dspdate " +
                            "inner join clients_mst cl on cl.vch_num = dp.acode and cl.type = 'BCD' and find_in_set(cl.client_unit_id,dp.client_unit_id)=1 " +
                            "and substr(cl.vch_num,0,3)='303' where substr(dp.type,1,1)= '6' and substr(dp.type2,1,1)= '4' and " +
                            "dp.client_unit_id = '" + unitid_mst + "' and to_date(to_char(dp.vch_date,'DDMMYYYY'),'DDMMYYYY') between to_date('" + fdt + "', '" + sgen.Getsqldateformat() + "') and to_date('" + tdt + "','" + sgen.Getsqldateformat() + "')";
                        title = "Pending Invoice Against Dispatch " + date_period + "";
                        seektype = 0;
                        break;
                    case "Party Wise Sale":
                        cmd = "select '-' as fstr, iv.acode as party_code,cl.C_name as Party_name,cl.c_gstin as Gst_no,sum(iv.gserchrg) as IGST,sum(iv.gloadchrg) as SGST,sum(iv.gamc) as CGST,sum(iv.basicamt) as basic_amt,sum(iv.ginstlchrg) GrossAmt,sum(iv.netamt) as net_amount from clients_mst cl inner join (select distinct '-' as fstr,iv.acode,iv.gserchrg,iv.gloadchrg,iv.gamc,iv.basicamt,iv.ginstlchrg,iv.netamt,iv.client_unit_id" +
                            " from itransaction iv where substr(iv.type,1,1)= '4' and substr(iv.potype,1,1)= '5' and iv.client_unit_id = '" + unitid_mst + "' and to_date(to_char(iv.vch_date, 'DDMMYYYY'), 'DDMMYYYY') between " +
                            "to_date('" + fdt + "','" + sgen.Getsqldateformat() + "') and to_date('" + tdt + "','" + sgen.Getsqldateformat() + "')) iv on cl.vch_num = iv.acode and find_in_set(cl.client_unit_id, iv.client_unit_id)=1 where cl.type = 'BCD' and find_in_set(cl.client_unit_id,'" + unitid_mst + "')= 1 and substr(cl.vch_num,0,3)= '303' group by(iv.acode, cl.C_name, cl.c_gstin)";
                        title = "Party Wise Sale " + date_period + "";
                        seektype = 0;
                        break;
                    case "MRN Summary (Item Wise)":
                        cmd = "select it.icode,it.iname,sum(mr.qtyrcvd) as mrn_qty,sum(mr.basicamt) as basic_amt,sum(mr.netamt) as net_amount from item it " +
                            "inner join itransaction mr on mr.icode = it.icode and mr.type in ('01', '02', '05', '07', '09') and to_date(to_char(mr.vch_date,'DDMMYYYY'),'DDMMYYYY') between to_date('" + fdt + "', '" + sgen.Getsqldateformat() + "') and to_date('" + tdt + "','" + sgen.Getsqldateformat() + "') " +
                            "where it.type = 'IT' and it.client_unit_id in ('" + ut + "') group by(it.icode, it.iname, mr.type)";
                        title = "MRN Summary (Item Wise) " + date_period + "";
                        seektype = 0;
                        break;
                    case "Item Wise Sale":
                        cmd = "select '-' as fstr, it.icode,it.iname,hsn.master_name as hsn_code,iv.IGST,iv.SGST,iv.CGST,iv.basic_amt,iv.GrossAmt,iv.net_amount from " +
                             "item it inner join(select iv.icode as item_code,iv.iname as item_name,sum(iv.gserchrg) as IGST,sum(iv.gloadchrg) as SGST,sum(iv.gamc) as CGST,sum(iv.basicamt) as basic_amt,sum(iv.ginstlchrg) GrossAmt,sum(iv.netamt) as net_amount from itransaction iv where substr(iv.type, 1, 1) = '4' and substr(iv.potype,1,1)= '5' and iv.client_unit_id = '" + unitid_mst + "' and to_date(to_char(iv.vch_date,'DDMMYYYY'),'DDMMYYYY') between " +
                             "to_date('" + fdt + "','" + sgen.Getsqldateformat() + "') and to_date('" + tdt + "','" + sgen.Getsqldateformat() + "') " +
                             "group by(iv.icode, iv.iname) ) iv on it.icode = iv.item_code inner join master_setting hsn on hsn.master_id = it.hsno and hsn.type = 'HSN' and find_in_set(hsn.client_id, it.client_id)= 1 and find_in_set(hsn.client_unit_id, it.client_unit_id)= 1 where it.type = 'IT' and it.sale='Y' and find_in_set(it.client_unit_id, '" + unitid_mst + "')=1";
                        title = "item Wise Sale " + date_period + "";
                        seektype = 0;
                        break;
                    case "MRN Report Detailed":
                        cmd = "select (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) as fstr," +
                             "p.vch_num MRN_Type_Code,tp.master_name as MRN_type,to_char(convert_tz(p.vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') MRN_Date" +
                             ",c.vch_num as party_code,c.c_name as Party_Name,c.c_gstin as Party_Gstin,c.addr as Party_Address,p.chlno Challan_No," +
                             " p.ewayno Eway_BillNo, nvl(kt.vch_num, '-') as gate_in_no,to_char(p.ewaydate, '" + sgen.Getsqldateformat() + "') as Eway_BillDate," +
                             "to_char(p.invdate, '" + sgen.Getsqldateformat() + "') as inv_date,p.invno Inv_No, p.tmode Transport, p.icode Item_Code," +
                             " p.iname Item_Name, p.cpartno Part_No, p.uom UOM, p.hsno HSN, p.taxrate TaxRate, qtychl Challan_Qty,qtyrcvd In_Qty, p.irate " +
                             "ItemRate, p.disctype,p.discrate,p.iamount ItemAmt, p.taxamt TaxAmt, p.lineamount LineAmt, p.basicamt BasicAmt, p.pktno as " +
                             "NOOFPKT_BOX,p.iremark remark, p.pono,to_char(p.podate, '" + sgen.Getsqldateformat() + "') as podate,p.btchno " +
                             "from itransaction p left join kc_tab kt on p.gatein_no = (kt.client_id || kt.vch_num || kt.type) and kt.type = 'GIN'" +
                             " and p.client_unit_id = kt.client_unit_id inner join clients_mst c on p.acode = c.vch_num" +
                             " and c.client_unit_id = p.client_unit_id and c.type = 'BCD' and substr(c.vch_num,0,3)='203' " +
                             "inner join master_setting tp on tp.master_id=p.type and tp.type='KMR' and find_in_set(tp.client_unit_id, p.client_unit_id)= 1   " +
                             "where p.client_unit_id = '" + unitid_mst + "' and p.type in ('01', '02', '05', '07', '09')  and to_date(to_char(p.vch_date,'DDMMYYYY'),'DDMMYYYY') between " +
                             "to_date('" + fdt + "','" + sgen.Getsqldateformat() + "') and to_date('" + tdt + "','" + sgen.Getsqldateformat() + "') order by p.vch_num desc";
                        title = "MRN Summary " + date_period + "";
                        seektype = 0;
                        break;
                    case "Item Ledger":
                        cmd = "select (it.icode||it.client_id||it.client_unit_id) fstr,mg.master_name maingrp,mg.master_id as mg_code,sg.iname subgrp,sg.icode as sg_code,it.icode,it.iname,it.cpartno,um.master_name Primary_Unit, nvl(s.closing, '0') as Qty_in_Stock" +
                              " from item it left join (select t.client_unit_id, t.icode, sum(nvl(t.qtyin, 0)) as Received,sum(nvl(t.qtyout, 0)) as Issued ,sum(nvl(t.qtyin, 0)) - sum(nvl(t.qtyout, 0)) as closing from itransaction t where trim(t.store) = 'Y'" +
                              " group by t.icode,t.client_unit_id ) s on it.icode = s.icode and it.client_unit_id = s.client_unit_id  inner join master_setting um on it.uom = um.master_id and um.type = 'UMM' and find_in_set(um.client_id, it.client_id)= 1" +
                              " and find_in_set(um.client_unit_id, it.client_unit_id) = 1 inner join master_setting mg on mg.master_id = substr(it.icode, 1, 3) and mg.type = 'KIG' and find_in_set(mg.client_unit_id, it.client_unit_id)= 1" +
                              " inner join item sg on sg.icode = substr(it.icode, 1, 5) and sg.type = 'SG' and find_in_set(sg.client_unit_id, it.client_unit_id)= 1 where it.type = 'IT' and " +
                              "find_in_set(it.client_unit_id,'" + unitid_mst + "')= 1 and it.status = 'Y' and substr(it.icode,1,1) not in ('8', '9') and to_date(it.vch_date) " +
                              "between to_date('" + fdt + "','" + sgen.Getsqldateformat() + "') and to_date('" + tdt + "','" + sgen.Getsqldateformat() + "')";
                        title = "Item Ledger " + date_period + "";
                        seektype = 0;
                        break;
                    case "Service Item Ledger":
                        cmd = "select (it.vch_num||it.client_id||it.client_unit_id) fstr,mg.master_name maingrp,mg.master_id as mg_code,sg.iname subgrp,sg.icode as sg_code,it.vch_num as icode,it.col3 as iname,um.master_name Primary_Unit, nvl(s.closing, '0') as Qty_in_Stock from enx_tab2 it left join (select t.client_unit_id, t.icode, sum(nvl(t.qtyin, 0)) as Received,sum(nvl(t.qtyout, 0)) as Issued ,sum(nvl(t.qtyin, 0)) - sum(nvl(t.qtyout, 0)) as closing from itransaction t where trim(t.store) = 'Y' group by t.icode,t.client_unit_id ) s on it.vch_num = s.icode and it.client_unit_id = s.client_unit_id  inner join master_setting um on it.col7 = um.master_id and um.type = 'UMM' and find_in_set(um.client_id, it.client_id)= 1 and find_in_set(um.client_unit_id, it.client_unit_id) = 1 inner join master_setting mg on mg.master_id = substr(it.col6,1,3) and mg.type = 'KIG' and find_in_set(mg.client_unit_id, it.client_unit_id)= 1 inner join item sg on sg.icode = it.col6 and sg.type = 'SG' and find_in_set(sg.client_unit_id, it.client_unit_id)= 1 where it.type = 'SMT' and find_in_set(it.client_unit_id,'" + unitid_mst + "')= 1 and to_date(it.vch_date) " +
                              "between to_date('" + fdt + "','" + sgen.Getsqldateformat() + "') and to_date('" + tdt + "','" + sgen.Getsqldateformat() + "')";
                        title = "Service Item Ledger " + date_period + "";
                        seektype = 0;
                        break;
                    case "Pending Dispatch Against SO":
                        //cmd = "select '-' as fstr,pc.acode as prty_code,cl.c_name as party_name,pc.icode,pc.iname,pc.type ord_type,pc.vch_num as so_no," +
                        //     "nvl(iv.invoice_no,'-') as Doc_no,to_char(pc.vch_date,'" + sgen.Getsqldateformat() + "') as so_date,nvl(to_char(iv.invoice_dt, '" + sgen.Getsqldateformat() + "'),'-') Doc_date," +
                        //     "pc.qtyord as order_qty,nvl(iv.used_qty,'0') as used_qty,pc.qtyord-nvl(used_qty,'0') as pending_so from purchasesc pc left join(select a.invoice_no," +
                        //     " a.invoice_dt, acode, ord_type, icode,iname, so_no, sodate, sum(a.qtyout) as used_qty,a.client_id,a.client_unit_id from(select vch_num invoice_no," +
                        //     " vch_date invoice_dt, acode,type as ord_type,icode,iname,sono as so_no,sodate,qtyout,client_id,client_unit_id from itransaction where " +
                        //     "substr(type,1,1)='4' and potype = '51' union all select vch_num invoice_no,vch_date invoice_dt,acode, potype as ord_type,icode,iname,sono as so_no" +
                        //     ",sodate,qtyout,client_id,client_unit_id from itransaction where substr(type,1,1)='4' and potype='51' union all select vch_num, vch_date, acode," +
                        //     " type2, icode,iname, VEHNO, INVDATE, qtyout, client_id, client_unit_id from itransaction where type = '60' union all select vch_num, vch_date, " +
                        //     "acode, type2, icode,iname, VEHNO, INVDATE, qtyout, client_id, client_unit_id from itransaction where type = '61') a group by(a.invoice_no," +
                        //     " a.invoice_dt, acode, ord_type, icode,iname, so_no, sodate, client_id,client_unit_id)) iv on iv.so_no = pc.vch_num and iv.sodate = pc.vch_date " +
                        //     "and iv.acode = pc.acode and iv.icode = pc.icode and iv.ord_type = pc.type and pc.client_unit_id = iv.client_unit_id " +
                        //     "left join clients_mst cl on cl.vch_num = pc.acode and cl.type = 'BCD' and cl.client_unit_id = pc.client_unit_id " +
                        //     "where pc.pur_type = 'NPI' and substr(pc.type,1,1)= '4' and pc.client_unit_id = '" + unitid_mst + "'" +
                        //     " and to_date(to_char(pc.vch_date,'DDMMYYYY'),'DDMMYYYY') between to_date('" + fdt + "','" + sgen.Getsqldateformat() + "') and" +
                        //     " to_date('" + tdt + "','" + sgen.Getsqldateformat() + "')";

                        cmd = "select (it.icode || pc.type || pc.vch_num || to_char(it.vch_date, 'yyyymmdd') || it.type) as fstr" +
                             ",it.icode as Icode,it.iname as Iname,cl.c_name as party,it.cpartno Partno" +
                             ",um.master_name as UOM,pc.vch_num as so_no,to_char(pc.vch_date, '" + sgen.Getsqldateformat() + "') as so_date,nvl(pc.so_qty, '0') as Order_qty,nvl(pc.used_qty, '0') as Used_qty,nvl(pc.bal_qty, '0') as Bal_qty from item it inner join (select a.po_no, a.vch_num, a.icode, a.type, a.so_qty,a.vch_date, a.date1,a.acode,a.client_id,a.client_unit_id," +
                             "nvl(sum(a.invoice_qty), '0') as used_qty,a.so_qty - nvl(sum(a.invoice_qty), '0') as bal_qty from (select pc.vch_num, pc.gothrchrg as po_no, pc.date1," +
                             " pc.vch_date, pc.icode, pc.type, pc.qtyord as so_qty,iv.qtyout as invoice_qty,pc.acode,pc.client_id,pc.client_unit_id from purchasesc pc left join" +
                             " itransaction iv on iv.sono = pc.vch_num and iv.potype = '51' and pc.icode=iv.icode and iv.client_unit_id = pc.client_unit_id " +
                             "where pc.pur_type = 'NPI' and substr(pc.type, 1, 1) = '4' and pc.client_unit_id = '" + unitid_mst + "' union all " +
                             "select pc.vch_num, pc.gothrchrg as po_no, pc.date1, pc.vch_date, pc.icode, pc.type, pc.qtyord as so_qty, dp.qtyout as dsp_qty,pc.acode,pc.client_id," +
                             "pc.client_unit_id from purchasesc pc left join itransaction dp on dp.VEHNO = pc.vch_num and dp.type = '60' and pc.icode=dp.icode and dp.client_unit_id = pc.client_unit_id where pc.pur_type = 'NPI' and substr(pc.type, 1, 1) = '4' union all select pc.vch_num, " +
                             "pc.gothrchrg as po_no,pc.date1,pc.vch_date, pc.icode, pc.type, pc.qtyord as so_qty, ds.col10 as dsp_qty,pc.acode,pc.client_id,pc.client_unit_id from" +
                             " purchasesc pc left join kc_tab ds on ds.col13 = pc.vch_num and pc.icode=ds.col5 and ds.col20 = 'DSC' and" +
                             " ds.client_unit_id =pc.client_unit_id where pc.pur_type = 'NPI' and substr(pc.type, 1, 1) = '4' union all select pc.vch_num, pc.gothrchrg as po_no," +
                             " pc.date1, pc.vch_date, pc.icode, pc.type, pc.qtyord as so_qty,co.col11 as invoice_qty,pc.acode,pc.client_id,pc.client_unit_id from purchasesc" +
                             " pc left join enx_tab co on co.col7=pc.icode and pc.vch_num = co.col5 and co.type='CPS' and co.client_unit_id='" + unitid_mst + "' where pc.pur_type = 'NPI' and substr(pc.type, 1, 1) = '4') a group by(a.vch_num, a.icode,a.type, a.so_qty,a.po_no, " +
                             "a.vch_date, a.date1,a.acode,a.client_id,a.client_unit_id)) pc on pc.icode = it.icode and pc.bal_qty > 0 " +
                             " inner join clients_mst cl on cl.vch_num = pc.acode and cl.type='BCD' and find_in_set(cl.client_unit_id,pc.client_unit_id)=1 " +
                             "left join master_setting um on um.master_id = it.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, it.client_unit_id)= 1 " +
                             "where it.type='IT' and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 and to_date(to_char(pc.vch_date,'DDMMYYYY'),'DDMMYYYY') between to_date('" + fdt + "','" + sgen.Getsqldateformat() + "') and" +
                             " to_date('" + tdt + "','" + sgen.Getsqldateformat() + "')";
                        title = "Pending Dispatch Against SO " + date_period + "";
                        seektype = 0;
                        break;
                    case "Pending Dispatch Against Dispatch Sch":
                        #region WITHOUT CLOSE PENDING
                        //cmd = "select '-' as fstr,kt.col1 as prty_code,cl.c_name as party_name,kt.col5 as icode,kt.col27 as iname,kt.type ord_type," +
                        //     "(case when iv.ord_type = '52' then 'Invoiced' when iv.ord_type = '61' then 'Dispatched' else iv.ord_type end) as type,kt.vch_num as sdl_no," +
                        //     "to_char(kt.date1, '" + sgen.Getsqldateformat() + "') as sdl_date,to_char(kt.date8, '" + sgen.Getsqldateformat() + "') as sdl_start_date,to_char(kt.date9, '" + sgen.Getsqldateformat() + "') as sdl_end_date" +
                        //     ",nvl(iv.invoice_no, '-') as Doc_no,nvl(to_char(iv.invoice_dt, '" + sgen.Getsqldateformat() + "'), '-') Doc_date,kt.col10 as order_qty,nvl(iv.used_qty, '0') " +
                        //     "as used_qty,kt.col10 - nvl(iv.used_qty, '0') as pending_sdl from kc_tab kt left join (select a.invoice_no,a.invoice_dt,a.acode,a.ord_type," +
                        //     "a.type,a.icode,a.iname,a.sdlno,a.sdldate, sum(a.qtyout) as used_qty,a.client_id,a.client_unit_id from(select vch_num invoice_no," +
                        //     " vch_date invoice_dt, acode, type, potype as ord_type,icode,iname,sdlno,to_char(sdldate, 'ddMMYYY') as sdldate,nvl(qtyout, '0') as qtyout" +
                        //     ",client_id,client_unit_id from itransaction where substr(type, 1, 1) = '4' and potype = '52' union all select vch_num, vch_date, acode," +
                        //     " type2, type, icode, iname, GDISC, to_char(EWAYDATE, 'ddMMYYYY') sdldate,nvl(qtyout, '0') as qtyout, client_id,client_unit_id from itransaction " +
                        //     "where type = '61' and substr(type2,1,1)= '4') a group by(a.invoice_no, a.invoice_dt, acode, a.ord_type, a.type, a.icode, a.iname, a.sdlno," +
                        //     " a.sdldate, a.client_id, a.client_unit_id)) iv on iv.sdlno = kt.vch_num and iv.acode = kt.col1 and iv.icode = kt.col5 and iv.type = kt.type" +
                        //     " and kt.client_unit_id = iv.client_unit_id left join clients_mst cl on cl.vch_num = kt.col1 and cl.type =" +
                        //     " 'BCD' and cl.client_unit_id = kt.client_unit_id where substr(kt.type,1,1)= '4' and kt.col20 = 'DSC' " +
                        //     "and kt.client_unit_id = '" + unitid_mst + "' and to_date(to_char(kt.date1,'DDMMYYYY'),'DDMMYYYY') between to_date('" + fdt + "','" + sgen.Getsqldateformat() + "') and" +
                        //     " to_date('" + tdt + "','" + sgen.Getsqldateformat() + "') order by kt.vch_num "; 
                        #endregion
                        cmd = "select '-' as fstr,kt.col1 as prty_code,cl.c_name as party_name,kt.col5 as icode,kt.col27 as iname,kt.type ord_type,(case when iv.ord_type = '52' then 'Invoiced' when iv.ord_type = '61' then 'Dispatched' when iv.ord_type = 'CPD' then 'CLOSED' else iv.ord_type end) as type,kt.vch_num as sdl_no," +
                            "to_char(kt.date1, '" + sgen.Getsqldateformat() + "') as sdl_date,to_char(kt.date8, '" + sgen.Getsqldateformat() + "') as sdl_start_date,to_char(kt.date9, '" + sgen.Getsqldateformat() + "') as sdl_end_date,nvl(iv.invoice_no, '-') as Doc_no,nvl(to_char(iv.invoice_dt, '" + sgen.Getsqldateformat() + "'), '-') Doc_date,kt.col10 as order_qty,nvl(iv.used_qty, '0') as used_qty" +
                            ",kt.col10 - nvl(iv.used_qty, '0') as pending_sdl from kc_tab kt left join (select a.invoice_no, a.invoice_dt, a.ord_type, a.type, a.icode, a.iname, a.sdlno, a.sdldate, sum(a.qtyout) as used_qty, a.client_id,a.client_unit_id from(select vch_num invoice_no, vch_date invoice_dt, type, potype as ord_type" +
                            ", icode, iname, sdlno,to_char(sdldate, 'ddMMYYY') as sdldate, nvl(qtyout, '0') as qtyout, client_id, client_unit_id from itransaction where substr(type, 1, 1) = '4' and potype = '52' union all select vch_num, vch_date, type2, type, icode, iname, GDISC, to_char(EWAYDATE, 'ddMMYYYY') sdldate, nvl(qtyout, '0') as qtyout" +
                            ", client_id, client_unit_id from itransaction where type = '61' and substr(type2, 1, 1) = '4' UNION ALL select vch_num invoice_no, vch_date invoice_dt, type ord_type, type, col7 icode, col8 iname, col12 sdlno, to_char(date1, 'ddMMYYYY') sdldate,nvl(col11, '0') as qtyout, client_id, client_unit_id" +
                            " from ENX_TAB where type = 'CPD' AND CLIENT_UNIT_ID = '" + unitid_mst + "') a group by(a.invoice_no,a.invoice_dt, a.ord_type, a.type, a.icode, a.iname, a.sdlno, a.sdldate, a.client_id, a.client_unit_id)) iv on iv.sdlno = kt.vch_num and iv.icode = kt.col5 and kt.client_unit_id = iv.client_unit_id " +
                            "left join clients_mst cl on cl.vch_num = kt.col1 and cl.type = 'BCD' and cl.client_unit_id = kt.client_unit_id where substr(kt.type,1,1)= '4' and kt.col20 = 'DSC' and to_date(to_char(kt.date1,'DDMMYYYY'),'DDMMYYYY') between to_date('" + fdt + "','" + sgen.Getsqldateformat() + "') and " +
                            "to_date('" + tdt + "','" + sgen.Getsqldateformat() + "') order by kt.vch_num";
                        title = "Pending Dispatch against Dispatch Schedule " + date_period + "";
                        seektype = 0;
                        break;
                    case "Pending MRS":
                        cmd = "select (it.client_id||it.client_unit_id||mr.vch_num||it.icode||mr.type||to_char(it.vch_date,'yyyymmdd')||it.type) as fstr, " +
                             "mr.icode,it.iname,it.cpartno PartNo,mr.vch_num mrs_no,to_char(mr.vch_date,'" + sgen.Getsqldateformat() + "') Req_Date,nvl(s.closing,'0') as qty_in_stock" +
                             ",mr.Qty_Req,mr.issued_qty,mr.bal_qty from " +
                             "item it inner join (select distinct a.vch_num,a.type,a.icode,a.client_id,a.client_unit_id,a.vch_date,a.Qty_Req,a.desig," +
                             "a.deptno,sum(a.issued_qty) as issued_qty,(a.Qty_Req - nvl(sum(a.issued_qty), '0')) as bal_qty " +
                             "from(select mr.vch_num,mr.type,mr.icode,mr.client_id,mr.client_unit_id,mr.vch_date,mr.desig,mr.deptno, " +
                             "mr.qtychl Qty_Req,nvl(iv.qtyout,'0') as issued_qty from itransactionc mr left join itransaction iv on " +
                             "iv.icode=mr.icode and iv.chlno = mr.vch_num and iv.type = '32' and " +
                             "iv.client_unit_id = '" + unitid_mst + "'  where upper(mr.type) in ('3A', '3B') and mr.client_unit_id = '" + unitid_mst + "' " +
                             "union all select mr.vch_num,mr.type,mr.icode," +
                             "mr.client_id,mr.client_unit_id,mr.vch_date,mr.desig,mr.deptno,mr.qtychl Qty_Req,nvl(iv.col11,'0') as closed_qty " +
                             "from itransactionc mr left join enx_tab iv on iv.col7=mr.icode and iv.col12 = mr.vch_num and iv.type = 'CPM'" +
                             " and iv.client_unit_id = '" + unitid_mst + "'  where upper(mr.type) in ('3A', '3B') and " +
                             "mr.client_unit_id = '" + unitid_mst + "') a group by(a.vch_num," +
                             "a.type,a.icode,a.client_id,a.client_unit_id,a.vch_date,a.desig,a.deptno,a.Qty_Req)) mr on mr.icode=it.icode " +
                             "and find_in_set(mr.client_unit_id,it.client_unit_id)=1 and mr.bal_qty > 0 left join(select t.client_unit_id, t.icode,sum(nvl(t.qtyin,0))" +
                             " as Received,sum(nvl(t.qtyout, 0)) as Issued,sum(nvl(t.qtyin, 0)) - sum(nvl(t.qtyout, 0)) as closing from itransaction t where trim(t.store) = 'Y' group" +
                             " by t.icode,t.client_unit_id ) s on it.icode = s.icode and find_in_set(s.client_unit_id, it.client_unit_id)=1 where it.type='IT' " +
                             "and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1" +
                             " and to_date(to_char(mr.vch_date,'DDMMYYYY'),'DDMMYYYY') between to_date('" + fdt + "','" + sgen.Getsqldateformat() + "') and " +
                             "to_date('" + tdt + "','" + sgen.Getsqldateformat() + "')";
                        title = "Pending MRS " + date_period + "";
                        seektype = 0;
                        break;
                    case "Pending PO":
                        cmd = "select (pono||podate||potype) fstr,pono,podate,potype,icode,iname,partycode,partyname,max(to_number(qtyord)) qtyord,sum(to_number(qtyin)) qtyin," +
                             "(max(to_number(qtyord))-sum(to_number(qtyin))) qtybalance,sum(to_number(iamount)) iamount " +
                             "from (select p.vch_num pono,to_char(p.vch_date,'" + sgen.Getsqldateformat() + "') podate,p.type potype," +
                             "p.icode,it.iname,p.acode Partycode,cl.c_name Partyname,nvl(p.qtyord, 0) qtyord,nvl(i.qtyin, 0) qtyin,nvl(i.irate, 0) irate," +
                             "nvl(i.iamount, 0) iamount,i.vch_num mrnno,to_char(i.vch_date,'" + sgen.Getsqldateformat() + "') mrndate," +
                             "i.type mrntype,i.invno,to_char(i.invdate,'" + sgen.Getsqldateformat() + "') invdate,i.chlno," +
                             "to_char(i.chldate,'" + sgen.Getsqldateformat() + "') chldate,utol,ltol " +
                             "from purchases p " +
                             "inner join itransaction i on i.pono = p.vch_num and to_char(i.podate, 'ddmmyyyy') = to_char(p.vch_date, 'ddmmyyyy') and i.client_unit_id = p.client_unit_id and i.acode = p.acode and i.store = 'Y' " +
                             "inner join item it on it.icode = p.icode and it.type = 'IT' and find_in_set(p.client_unit_id,it.client_unit_id)=1 " +
                             "inner join clients_mst cl on cl.vch_num = p.acode and cl.type = 'BCD' and substr(cl.vch_num,0,3)='203' and cl.client_unit_id = p.client_unit_id " +
                             "where p.type in ('50', '51', '52', '53') and p.client_unit_id = '" + unitid_mst + "'  and to_date(to_char(p.vch_date,'DDMMYYYY'),'DDMMYYYY') between" +
                             " to_date('" + fdt + "','" + sgen.Getsqldateformat() + "') and to_date('" + tdt + "','" + sgen.Getsqldateformat() + "')) " +
                             //"group by pono,podate,potype,icode,iname,partycode,partyname having (max(to_number(qtyord))-sum(to_number(qtyin)))> 0";
                             "group by pono,podate,potype,icode,iname,partycode,partyname,ltol having sum(to_number(qtyin))<(max(to_number(qtyord))-round((max(to_number(qtyord))*to_number(ltol))/100))";
                        title = "Pending Po Summary " + date_period + "";
                        seektype = 0;
                        break;
                    case "Stock Summary":
                    case "Stock Summary Print":
                    case "Stock Moment Report":
                        //cmd = "select (nvl(t.client_unit_id,'0')||i.icode) as fstr,i.icode Item_Code,gd.master_name Maingrp,mg.master_name Itemgrp,sg.iname Itemsubgrp," +
                        //    "i.iname Item_Name,i.cpartno PartNo,um.master_name as UOM,sum(t.qtyin) as Received,sum(t.qtyout) Issued," +
                        //    "sum(t.qtyin) - sum(t.qtyout) Closing,sum(nvl(t.pktno, 0)) pktno,round(case when sum(t.qtyin)- sum(t.qtyout) = 0 then 0 else " +
                        //    "(sum(t.iamount) / (sum(t.qtyin) - sum(t.qtyout))) end) Rate,sum(t.iamount) Amount from item i " +
                        //    "left join (select vch_date,client_id, client_unit_id, icode, iname, to_number(nvl(qtyin,0)) qtyin,to_number(nvl(qtyout, 0)) qtyout," +
                        //    "(case when to_number(nvl(qtyin, 0)) = 0 then - to_number(nvl(iamount, 0)) else to_number(nvl(iamount, 0)) end) iamount," +
                        //    "(case when substr(type, 1, 1) in ('0', '1') then pktno when type = '36' then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end) pktno " +
                        //    "from itransaction where length(icode) > 5 and store = 'Y') t on t.icode = i.icode and t.client_unit_id = i.client_unit_id " +
                        //    "and to_date(to_char(t.vch_date,'" + sgen.Getsqldateformat() + "'),'" + sgen.Getsqldateformat() + "') between TO_DATE('" + fdt + "', '" + sgen.Getsqldateformat() + "') AND TO_DATE('" + tdt + "','" + sgen.Getsqldateformat() + "') " +
                        //    "inner join master_setting gd on gd.classid = SUBSTR(i.icode, 1, 1) and gd.type = 'KGP' " +
                        //    "inner join master_setting mg on mg.master_id = substr(i.icode, 1, 3) and mg.type = 'KIG' and find_in_set(mg.client_unit_id , i.client_unit_id)=1 " +
                        //    "inner join item sg on sg.icode = substr(i.icode, 1, 5) and sg.type = 'SG' and find_in_set(sg.client_unit_id , i.client_unit_id)=1 " +
                        //    "inner join master_setting um on um.master_id = i.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, i.client_unit_id)= 1 " +
                        //    "where length(i.icode)> 5 and find_in_set(i.client_unit_id, '" + unitid_mst + "')= 1 " +
                        //    "group by nvl(t.client_unit_id, '0'),i.icode,gd.master_name,mg.master_name,sg.iname,i.iname,um.master_name,i.cpartno order by i.icode";

                        cmd = "select (nvl(t.client_unit_id,'0')||i.icode) as fstr,i.icode Item_Code,gd.master_name Maingrp,mg.master_name Itemgrp,sg.iname Itemsubgrp,i.iname Item_Name," +
                            "i.cpartno PartNo, um.master_name UOM,t.op as Opening, t.qtyin Received, t.qtyout Issued, t.closing,t.pktno,round(case when t.closing = 0 then 0 else ((t.iamount) / (t.closing)) end) Rate," +
                            "t.iamount Amount from item i " +
                            "left join (select icode,client_unit_id,sum(op) op,sum(pktop) pktop,sum(qtyin) qtyin,sum(qtyout) qtyout,sum(op) + sum(qtyin) - sum(qtyout) closing," +
                            "sum(pktop) + sum(pktno) pktno,sum(iamount) iamount from " +
                            "(select icode, client_unit_id, nvl(op_" + fdt.Substring(6, 4) + ", 0) op, nvl(pkt_" + fdt.Substring(6, 4) + ", 0) pktop, 0 qtyin, 0 qtyout,0 pktno,nvl(amt_" + fdt.Substring(6, 4) + ",0) iamount from itbal " +
                            "union all " +
                            "select icode,client_unit_id,sum(to_number(qtyin)) - sum(to_number(qtyout)) op,sum((case when substr(type, 1, 1) in ('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktop," +
                            "sum(to_number(qtyin)) qtyin,sum(to_number(qtyout)) qtyout,0 pktno,(case when to_number(nvl(qtyin, 0)) = 0 then - to_number(nvl(iamount, 0)) else to_number(nvl(iamount, 0)) end) iamount " +
                            "from itransaction where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between " +
                            "to_date('" + year_from.Split(' ')[0] + "', '" + sgen.Getsqldateformat() + "') and to_date('" + fdt + "','" + sgen.Getsqldateformat() + "')-1 group by icode,client_unit_id," +
                            "(case when to_number(nvl(qtyin, 0)) = 0 then - to_number(nvl(iamount, 0)) else to_number(nvl(iamount, 0)) end) " +
                            "union all " +
                            "select icode, client_unit_id,0 as op,0 as pktop,sum(to_number(qtyin)) qtyin,sum(to_number(qtyout)) qtyout,sum((case when substr(type, 1, 1) in ('0', '1') then " +
                            "pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktno,(case when to_number(nvl(qtyin, 0)) = 0 then - to_number(nvl(iamount, 0)) else " +
                            "to_number(nvl(iamount, 0)) end) iamount from itransaction where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') " +
                            "between to_date('" + fdt + "', '" + sgen.Getsqldateformat() + "') and to_date('" + tdt + "','" + sgen.Getsqldateformat() + "') group by icode,client_unit_id," +
                            "(case when to_number(nvl(qtyin, 0)) = 0 then - to_number(nvl(iamount, 0)) else to_number(nvl(iamount, 0)) end)) a group by icode, client_unit_id) t " +
                            "on t.icode = i.icode and t.client_unit_id = i.client_unit_id " +
                            "inner join master_setting gd on gd.classid = SUBSTR(i.icode, 1, 1) and gd.type = 'KGP' " +
                            "inner join master_setting mg on mg.master_id = substr(i.icode, 1, 3) and mg.type = 'KIG' and find_in_set(mg.client_unit_id, i.client_unit_id)= 1 " +
                            "inner join item sg on sg.icode = substr(i.icode, 1, 5) and sg.type = 'SG' and find_in_set(sg.client_unit_id , i.client_unit_id)= 1 " +
                            "inner join master_setting um on um.master_id = i.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, i.client_unit_id)= 1 " +
                            "where length(i.icode)> 5 and find_in_set(i.client_unit_id, '" + unitid_mst + "')= 1 order by i.icode";
                        if (command.Trim().Equals("Stock Moment Report")) title = "Stock Moment Report " + date_period + "";
                        else title = "Stock Summary Report " + date_period + "";
                        if (command.Trim().Equals("Stock Moment Report"))
                        {
                            btnval = "STKMM";
                            seektype = 2;
                        }
                        else
                        {
                            btnval = "ISUM";
                            seektype = 1;
                        }
                        sgen.SetSession(MyGuid, "btnval", btnval);
                        break;
                    case "Stock Summary With Rate":
                        //cmd = "select (nvl(t.client_unit_id,'0')||i.icode) as fstr,i.icode Item_Code,gd.master_name Maingrp,mg.master_name Itemgrp,sg.iname Itemsubgrp," +
                        //    "i.iname Item_Name, i.cpartno PartNo, um.master_name as UOM,sum(t.qtyin) as Received,sum(t.qtyout) Issued,sum(t.qtyin) - sum(t.qtyout) Closing," +
                        //    "sum(nvl(t.pktno, 0)) pktno,(case when to_number(nvl(a.irate,0))=0 then to_number(nvl(i.rate,0)) else to_number(nvl(a.irate,0)) end) Rate," +
                        //    "((sum(t.qtyin) - sum(t.qtyout)) * ((case when to_number(nvl(a.irate, 0)) = 0 then to_number(nvl(i.rate,0)) else to_number(nvl(a.irate, 0)) end))) Amount " +
                        //    "from item i " +
                        //    "left join(select vch_date, client_id, client_unit_id, icode, iname, to_number(nvl(qtyin,0)) qtyin,to_number(nvl(qtyout, 0)) qtyout," +
                        //    "(case when to_number(nvl(qtyin, 0)) = 0 then - to_number(nvl(iamount, 0)) else to_number(nvl(iamount, 0)) end) iamount," +
                        //    "(case when substr(type, 1, 1) in ('0', '1') then pktno when type = '36' then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end) pktno " +
                        //    "from itransaction where length(icode) > 5 and store = 'Y') t on t.icode = i.icode and t.client_unit_id = i.client_unit_id " +
                        //    "and to_date(to_char(t.vch_date,'" + sgen.Getsqldateformat() + "'),'" + sgen.Getsqldateformat() + "') between TO_DATE('" + fdt + "', '" + sgen.Getsqldateformat() + "') AND TO_DATE('" + tdt + "','" + sgen.Getsqldateformat() + "') " +
                        //    "left join(select a.icode, a.irate, a.vch_num from itransaction a inner join (select max(vch_num) vch_num, icode from itransaction " +
                        //    "where type in ('01','02') and client_unit_id = '" + unitid_mst + "' group by icode) b on b.vch_num = a.vch_num and b.icode = a.icode " +
                        //    "where a.type in ('01', '02') and a.client_unit_id = '" + unitid_mst + "') a on a.icode = i.icode " +
                        //    "inner join master_setting gd on gd.classid = SUBSTR(i.icode, 1, 1) and gd.type = 'KGP' " +
                        //    "inner join master_setting mg on mg.master_id = substr(i.icode, 1, 3) and mg.type = 'KIG' and mg.client_unit_id = i.client_unit_id " +
                        //    "inner join item sg on sg.icode = substr(i.icode, 1, 5) and sg.type = 'SG' and sg.client_unit_id = i.client_unit_id " +
                        //    "inner join master_setting um on um.master_id = i.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, i.client_unit_id)= 1 " +
                        //    "where length(i.icode)> 5 and find_in_set(i.client_unit_id, '" + unitid_mst + "')= 1 " +
                        //    "group by nvl(t.client_unit_id, '0'),i.icode,gd.master_name,mg.master_name,sg.iname,i.iname,um.master_name,i.cpartno,a.irate,i.rate order by i.icode";

                        cmd = "select (nvl(t.client_unit_id,'0')||i.icode) as fstr,i.icode Item_Code,gd.master_name Maingrp,mg.master_name Itemgrp,sg.iname Itemsubgrp," +
    "i.iname Item_Name, i.cpartno PartNo, nvl(um.master_name,'-') as UOM,sum(t.qtyin) as Received,sum(t.qtyout) Issued,sum(t.qtyin) - sum(t.qtyout) Closing," +
    "sum(nvl(t.pktno, 0)) pktno,(case when to_number(nvl(a.irate,0))=0 then to_number(nvl(i.rate,0)) else to_number(nvl(a.irate,0)) end) Rate," +
    "((sum(t.qtyin) - sum(t.qtyout)) * ((case when to_number(nvl(a.irate, 0)) = 0 then to_number(nvl(i.rate,0)) else to_number(nvl(a.irate, 0)) end))) Amount " +
    "from item i " +
    "left join(select vch_date, client_id, client_unit_id, icode, iname, to_number(nvl(qtyin,0)) qtyin,to_number(nvl(qtyout, 0)) qtyout," +
    "(case when to_number(nvl(qtyin, 0)) = 0 then - to_number(nvl(iamount, 0)) else to_number(nvl(iamount, 0)) end) iamount," +
    "(case when substr(type, 1, 1) in ('0', '1') then pktno when type = '36' then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end) pktno " +
    "from itransaction where length(icode) > 5 and store = 'Y') t on t.icode = i.icode and t.client_unit_id = i.client_unit_id " +
    "and to_date(to_char(t.vch_date,'" + sgen.Getsqldateformat() + "'),'" + sgen.Getsqldateformat() + "') between TO_DATE('" + fdt + "', '" + sgen.Getsqldateformat() + "') AND TO_DATE('" + tdt + "','" + sgen.Getsqldateformat() + "') " +
    "left join(select a.icode, a.irate, a.vch_num,a.vch_date from itransaction a inner join (select max(vch_num) vch_num, icode,vch_date from itransaction " +
    "where type in ('01','02') and client_unit_id = '" + unitid_mst + "' and to_date(to_char(vch_date,'" + sgen.Getsqldateformat() + "'),'" + sgen.Getsqldateformat() + "') between TO_DATE('" + fdt + "', '" + sgen.Getsqldateformat() + "') " +
    "and TO_DATE('" + tdt + "','" + sgen.Getsqldateformat() + "') group by icode,vch_date) b on b.vch_num = a.vch_num and b.icode = a.icode and b.vch_date=a.vch_date " +
    "where a.type in ('01', '02') and a.client_unit_id = '" + unitid_mst + "') a on a.icode = i.icode " +
    "inner join master_setting gd on gd.classid = SUBSTR(i.icode, 1, 1) and gd.type = 'KGP' " +
    "inner join master_setting mg on mg.master_id = substr(i.icode, 1, 3) and mg.type = 'KIG' and find_in_set(mg.client_unit_id , i.client_unit_id)=1 " +
    "inner join item sg on sg.icode = substr(i.icode, 1, 5) and sg.type = 'SG' and find_in_set(sg.client_unit_id , i.client_unit_id)=1 " +
    "inner join master_setting um on um.master_id = i.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, i.client_unit_id)= 1 " +
    "where length(i.icode)> 5 and find_in_set(i.client_unit_id, '" + unitid_mst + "')= 1 " +
    "group by nvl(t.client_unit_id, '0'),i.icode,gd.master_name,mg.master_name,sg.iname,i.iname,um.master_name,i.cpartno,a.irate,i.rate order by i.icode";
                        title = "Stock Summary With Rate " + date_period + "";
                        btnval = "SWR";
                        seektype = 0;
                        sgen.SetSession(MyGuid, "btnval", btnval);
                        break;
                    case "Callback":
                        btnval = sgen.GetSession(MyGuid, "btnval").ToString();
                        model = StartCallback(model, btnval);
                        break;
                }
                if (command == "Auto Indents")
                {
                    mq = @"select i.client_unit_id,i.icode,i.uom,i.cpartno, i.iname,max(reorder) as reorder,max(i.minstk) minstk,sum(nvl(s.qtyin,0)) as qtyin,sum(nvl(s.qtyout,0)) qtyout,sum(nvl(s.closing,0)) as closing  
from item i left outer join  (
select  trim(t.client_unit_id) as client_unit_id,trim(t.icode) as icode,sum(replace(nvl(t.qtyout,0),'NaN',0)) qtyout,sum(replace(nvl(t.qtyin,0),'NaN',0)) as qtyin
,sum(replace(nvl(t.qtyin,0),'NaN',0))-sum(replace(nvl(t.qtyout,0),'NaN',0)) as closing from  itransaction t where trim(t.store) not in ('R','W')  group by t.icode,t.client_unit_id
union all  
 select trim(p.client_unit_id) client_unit_id, trim(p.icode) as icode,sum(p.qtyord) as qtyord ,sum(replace(nvl(t.qtyin,0),'NaN',0)) as qtyin,
 sum(p.qtyord)-sum(replace(nvl(t.qtyin,0),'NaN',0)) as closing  from purchases p left  join itransaction t on p.client_unit_id=t.client_unit_id and p.icode=t.icode
 and p.vch_num=t.pono and to_char(p.vch_date,'DDMMYYYY')=TO_CHAR(t.podate,'DDMMYYYY') AND p.type=t.potype  and trim(t.store) not in ('R','W') group by p.icode,p.client_unit_id
  union all
 select trim(p.client_unit_id) client_unit_id, trim(p.icode) as icode,sum(p.qtyord) as qtyord ,sum(replace(nvl(t.qtyord,0),'NaN',0)) as 
 qtyin,sum(p.qtyord)-sum(replace(nvl(t.qtyord,0),'NaN',0)) as closing  from purchases p left  join purchases t on p.client_unit_id=t.client_unit_id and p.icode=t.icode
 and p.vch_num=t.indno and to_char(p.vch_date,'DDMMYYYY')=TO_CHAR(t.inddate,'DDMMYYYY') where p.type='66' and t.type<>'66' group by p.icode,p.client_unit_id
) s on  s.icode=i.icode and s.client_unit_id=i.client_unit_id   where length(trim(i.icode))>4 and i.client_unit_id='" + unitid_mst + "' " +
    "group by i.client_unit_id,i.icode, i.iname,i.uom,i.cpartno having max(i.minstk)>sum(nvl(s.closing,0))";
                    DataTable dt1 = new DataTable();
                    dt1 = sgen.getdata(userCode, mq);
                    if (dt1.Rows.Count > 0)
                    {
                        try
                        {
                            string currdate = sgen.server_datetime(userCode);
                            {
                                isedit = false;
                                mq = "select max(to_number(vch_num)) as auto_genid from purchases a where type='66' and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "'";
                                vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                            }
                            DataTable dataTable = cmd_Fun.GetStructure(userCode, "purchases");
                            for (int i = 0; i < dt1.Rows.Count; i++)
                            {
                                DataRow dr = dataTable.NewRow();
                                dr["vch_num"] = vch_num;
                                dr["type"] = "66";
                                dr["vch_date"] = currdate;
                                dr["deptno"] = "001";
                                dr["deptname"] = "001";
                                dr["desig"] = "001";
                                dr["reqby"] = userid_mst;
                                dr["totremark"] = "Minimum Level Requisitions";
                                dr["icode"] = dt1.Rows[i]["Icode"].ToString();
                                dr["iname"] = dt1.Rows[i]["IName"].ToString();
                                dr["cpartno"] = dt1.Rows[i]["cpartno"].ToString();
                                dr["hsno"] = "-";
                                dr["uom"] = dt1.Rows[i]["UOM"].ToString();
                                dr["qtystk"] = dt1.Rows[i]["closing"].ToString();
                                dr["qtyord"] = dt1.Rows[i]["reorder"].ToString();
                                dr["iamount"] = "0";
                                dr["iremark"] = "-";
                                dr["rec_id"] = "0";
                                // shiv
                                if (isedit)
                                {
                                    dr["client_id"] = clientid_mst;
                                    dr["client_unit_id"] = unitid_mst;
                                    dr["ent_by"] = userid_mst;
                                    dr["ent_date"] = currdate;
                                    dr["edit_by"] = userid_mst;
                                    dr["edit_date"] = currdate;
                                }
                                else
                                {
                                    dr["client_id"] = clientid_mst;
                                    dr["client_unit_id"] = unitid_mst;
                                    dr["ent_by"] = userid_mst;
                                    dr["ent_date"] = currdate;
                                    dr["edit_by"] = "-";
                                    dr["edit_date"] = currdate;
                                }
                                dataTable.Rows.Add(dr);
                            }
                            bool Result = sgen.Update_data(userCode, dataTable, "purchases", "-", false);
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            if (Result == true)
                            {
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                            }
                        }
                        catch (Exception ex) { ViewBag.scripCall = "showmsgJS(1,'" + ex.Message.ToString().Replace('\'', ' ') + "', 0);"; }
                    }
                }
                else if (command == "Slow and Non Moving")
                {
                    mq = "";
                    dt = sgen.getdata(userCode, mq);
                    sgen.open_report_bydt_xml(userCode, dt, "slow_moving", "Report");
                    ViewBag.scripCall += "showRptnew('Slow and Non Moving');";
                }
                else if (command == "Pending MRN")
                {
                    mq = "";
                    dt = sgen.getdata(userCode, mq);
                    sgen.open_report_bydt_xml(userCode, dt, "slow_moving", "Report");
                    ViewBag.scripCall += "showRptnew('Pending MRN');";
                }
                else if (command == "last Rec and Issue Inv")
                {
                    mq = "";
                    dt = sgen.getdata(userCode, mq);
                    sgen.open_report_bydt_xml(userCode, dt, "last_entry_inv", "Report");
                    //ViewBag.scripCall = "OpenSingle('../../../../../erp/schoolReports_Rpts/Filter_Report_xml.aspx','95%','900px','Reports');";
                    ViewBag.scripCall += "showRptnew('last Rec and Issue Inv');";
                }
                else if (command == "Stock Summary Print")
                {
                    dt = sgen.getdata(userCode, cmd);
                    if (dt.Rows.Count > 0)
                    {
                        sgen.open_report_bydt_xml(userCode, dt, "isumpr", "Report");
                        ViewBag.scripCall += "showRptnew('Stock Summary Print');";
                    }
                }
                else if (command != "Callback")
                {
                    sgen.open_grid(title, cmd, seektype);
                    ViewBag.scripCall = "callFoo('" + title + "');";
                    sgen.SetSession(MyGuid, "KPDCMD", null);
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region item_issued 2
        public ActionResult item_isd()
        {
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            FillMst(MyGuid);
            chkRef();
            ViewBag.vnew = "";
            ViewBag.vedit = "";
            ViewBag.vsave = "disabled='disabled'";
            ViewBag.vsavenew = "disabled='disabled'";
            ViewBag.vfill = "disabled='disabled'";
            ViewBag.scripCall = "disableForm();";
            List<Tmodelmain> model = new List<Tmodelmain>();
            Tmodelmain tm1 = new Tmodelmain();
            List<SelectListItem> mod1 = new List<SelectListItem>();
            mid_mst = EncryptDecrypt.Decrypt(Request.QueryString["mid"]);
            tm1.Col10 = "itransaction";
            tm1.Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            tm1.Col13 = "Save";
            tm1.Col100 = "Save & New";
            tm1.Col14 = mid_mst.Trim();
            tm1.Col15 = MyGuid.Trim();
            tm1.Col121 = "S";
            tm1.Col122 = "<u>S</u>ave";
            tm1.Col123 = "Save & Ne<u>w</u>";

            tm1.SelectedItems1 = new string[] { "" };

            tm1.SelectedItems2 = new string[] { "" };

            tm1.SelectedItems3 = new string[] { "" };

            tm1.SelectedItems4 = new string[] { "" };
            TempData[MyGuid + "_TList1"] = tm1.TList1 = mod1;
            TempData[MyGuid + "_TList2"] = tm1.TList2 = mod1;
            TempData[MyGuid + "_TList3"] = tm1.TList3 = mod1;
            TempData[MyGuid + "_TList4"] = tm1.TList4 = mod1;
            tm1.dt1 = null;
            tm1.dt2 = null;
            sgen.SetSession(MyGuid, "dtbase1", null);
            sgen.SetSession(MyGuid, "dtbase2", null);
            sgen.SetSession(MyGuid, "KISTYPE", null);
            tm1.Col28 = m_module3;
            DataTable dtb = (DataTable)sgen.GetSession(MyGuid, "URIGHTS");
            try
            {
                dtb = dtb.Select("m_id='" + tm1.Col14 + "'").CopyToDataTable();
                if (dtb.Rows.Count > 0)
                {
                    tm1.Col133 = dtb.Rows[0]["btnnew"].ToString();
                    tm1.Col134 = dtb.Rows[0]["btnedit"].ToString();
                    tm1.Col135 = dtb.Rows[0]["btnview"].ToString();
                    // model[0].Col33 = dtb.Rows[0]["btnextend"].ToString();
                }
            }
            catch (Exception ex) { }
            model.Add(tm1);
            return View(model);
        }
        [HttpPost]
        public ActionResult item_isd(List<Tmodelmain> model, string command, string hfrow, string hftable)
        {
            try
            {
                FillMst(model[0].Col15);
                DataSet ds = new DataSet();
                if (hftable.Trim() != "")
                {
                    ds = sgen.setDS(hftable);
                    model[0].dt1 = ds.Tables[0];
                    model[0].dt2 = ds.Tables[1];
                    if (model[0].dt2.Rows.Count == 0) model[0].dt2 = ((DataTable)sgen.GetSession(MyGuid, "dtkin"));
                    if (model[0].dt1.Rows.Count == 0) model[0].dt1 = ((DataTable)sgen.GetSession(MyGuid, "dtkin"));
                }
                var tm = model.FirstOrDefault();
                #region ddl
                List<SelectListItem> mod1 = new List<SelectListItem>();
                List<SelectListItem> mod2 = new List<SelectListItem>();
                List<SelectListItem> mod3 = new List<SelectListItem>();
                List<SelectListItem> mod4 = new List<SelectListItem>();
                TempData[MyGuid + "_TList1"] = model[0].TList1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                TempData[MyGuid + "_TList2"] = model[0].TList2 = (List<SelectListItem>)TempData[MyGuid + "_TList2"];
                TempData[MyGuid + "_TList3"] = model[0].TList3 = (List<SelectListItem>)TempData[MyGuid + "_TList3"];
                TempData[MyGuid + "_TList4"] = model[0].TList4 = (List<SelectListItem>)TempData[MyGuid + "_TList4"];
                if (tm.SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                if (tm.SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
                if (tm.SelectedItems3 == null) model[0].SelectedItems3 = new string[] { "" };
                if (tm.SelectedItems4 == null) model[0].SelectedItems4 = new string[] { "" };
                #endregion
                DataTable dt = new DataTable();
                if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    if (sgen.GetSession(MyGuid, "btnval") != null) btnval = sgen.GetSession(MyGuid, "btnval").ToString();
                    model = CallbackFun(btnval, "N", actionName, controllerName, model);
                    if (btnval.Trim().ToUpper().Equals("PRINT"))
                    {
                        ViewBag.vnew = "";
                        ViewBag.vedit = "";
                        ViewBag.vsave = "disabled='disabled'";
                        ViewBag.vsavenew = "disabled='disabled'";
                    }
                    else
                    {
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                    }
                }
                else if (command == "Fill Location")
                {
                    if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-"))
                    {
                        ViewBag.scripCall += "showmsgJS(1,'Please Select item in grid-1', 0);";
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                        return View(model);
                    }
                    try
                    {
                        if (model[0].dt2 != null && model[0].dt2.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt2.Rows.RemoveAt(0); }
                    }
                    catch (Exception err) { }
                    var dttt = model[0].dt2.Clone();
                    model[0].dt2 = dttt;
                    foreach (DataRow dr1 in model[0].dt1.Rows)
                        try
                        {
                            if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-"))
                            {
                                ViewBag.scripCall += "showmsgJS(1,'Please Select item in grid-1', 2);";
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                                return View(model);
                            }
                            try
                            {
                                if (model[0].dt2.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt2.Rows.RemoveAt(0); }
                            }
                            catch (Exception err) { }
                            var dt7 = model[0].dt2.Clone();
                            model[0].dt2 = dt7;
                            foreach (DataRow dr3 in model[0].dt1.Rows)
                            {
                                decimal qtyissue = sgen.Make_decimal(dr3["qty_issue"].ToString().Trim());
                                if (qtyissue <= 0)
                                {
                                    ViewBag.vnew = "disabled='disabled'";
                                    ViewBag.vedit = "disabled='disabled'";
                                    ViewBag.vsave = "";
                                    ViewBag.vsavenew = "";
                                    ViewBag.scripCall += "showmsgJS(1,'Please FILL Issue Qty in Item " + dr3["iname"].ToString() + "', 2);";
                                    model[0].dt2 = (DataTable)sgen.GetSession(MyGuid, "dtbase2");
                                    break;
                                }
                                string icode = dr3["icode"].ToString().Trim();
                                // Shiv
                                DataTable dloc = sgen.getdata(userCode, "select itb.loc,location_name(itb.client_id||itb.client_unit_id||itb.loc) from itbal itb " +
                                    "where trim(itb.icode)='" + icode + "' and itb.type='IT' land itb.client_unit_id='" + unitid_mst + "'");
                                DataTable dtlocs = sgen.locclosing_all(userCode, unitid_mst + icode, "");
                                int rcnt = dtlocs.Rows.Count;
                                if (rcnt == 0)
                                {
                                    ViewBag.scripCall += "showmsgJS(1,'Item " + icode + " stock is zero' , 0);";
                                    return View(model);
                                }
                                DataColumn dc = new DataColumn("ordd", typeof(int));
                                dc.DefaultValue = "0";
                                dtlocs.Columns.Add(dc);
                                try
                                {
                                    var rind = sgen.seekval_dt_rowindex(dtlocs, "loc='" + dloc.Rows[0]["loc"].ToString().Trim() + "'");
                                    dtlocs.Rows[rind - 1]["ordd"] = rcnt;
                                }
                                catch (Exception err) { }
                                DataView dv = dtlocs.DefaultView;
                                dv.Sort = "ordd asc";
                                dtlocs = dv.ToTable();
                                foreach (DataRow dr in dtlocs.Rows)
                                {
                                    if (qtyissue <= 0) break;
                                    DataRow dr2 = model[0].dt2.NewRow();
                                    dr2["sno"] = unitid_mst + dr3["icode"].ToString().Trim() + dr["LOC"].ToString().Trim();
                                    dr2["Icode"] = dr3["icode"].ToString().Trim();
                                    dr2["INAME"] = dr3["INAME"].ToString().Trim();
                                    dr2["PARTNO"] = dr3["PARTNO"].ToString().Trim();
                                    dr2["UOM"] = dr3["UOM"].ToString().Trim();
                                    dr2["Qty_In_Stock"] = dr["closing"].ToString().Trim();
                                    decimal lclos = sgen.Make_decimal(dr["closing"].ToString().Trim());
                                    if (qtyissue > lclos)
                                    {
                                        dr2["Qty_Issue"] = lclos;
                                        qtyissue = qtyissue - lclos;
                                    }
                                    else
                                    {
                                        dr2["Qty_Issue"] = qtyissue;
                                        qtyissue = 0;
                                    }
                                    dr2["Remark"] = "-";
                                    dr2["LocCode"] = dr["loc"].ToString().Trim();
                                    dr2["LOC"] = dr["loc_name"].ToString().Trim();
                                    model[0].dt2.Rows.Add(dr2);
                                }
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                            }
                        }
                        catch (Exception ex) { ViewBag.scripCall += "showmsgJS(1,'" + ex.Message.ToString().Replace('\'', ' ') + "', 0);"; }
                    if (model[0].dt2.Rows.Count == 0) model[0].dt2 = ((DataTable)sgen.GetSession(MyGuid, "dtbase2"));
                    if (model[0].dt1.Rows.Count == 0) model[0].dt1 = ((DataTable)sgen.GetSession(MyGuid, "dtbase1"));
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {
                    if (model[0].Col133 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for save data , please contact your admin', 2);";
                        return View(model);
                    }
                    string mmt = "";
                    if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-"))
                    {
                        ViewBag.scripCall += "showmsgJS(1,'Please Select item in grid-1', 2);";
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                        return View(model);
                    }
                    if (model[0].dt2.Rows[0]["icode"].ToString().Trim().Equals("-"))
                    {
                        ViewBag.scripCall += "showmsgJS(1,'Please FILL location in grid-2', 2);";
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                        return View(model);
                    }
                    foreach (DataRow dr in ds.Tables[0].Rows)
                    {
                        decimal QTY_REQ = 0, QTY_ISSUE = 0, QTY_ISSUE2 = 0;
                        string fstr = dr["sno"].ToString();
                        string icode = dr["icode"].ToString();
                        string INAME = dr["INAME"].ToString();
                        QTY_REQ = sgen.Make_decimal(dr["QTY_REQ"].ToString());
                        QTY_ISSUE = sgen.Make_decimal(dr["QTY_ISSUE"].ToString());
                        if (QTY_ISSUE > QTY_REQ)
                        {
                            ViewBag.scripCall += "showmsgJS(1, 'Item " + INAME + ", Required Qty is not matching with Issue Qty in Grid 1,Please Check', 2);";
                            ModelState.Clear();
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            return View(model);
                        }
                        var filtered = model[0].dt2.Select("icode='" + icode + "'");
                        foreach (var row in filtered)
                        {
                            decimal issue2 = 0;
                            QTY_ISSUE2 += issue2 = sgen.Make_decimal(row["QTY_ISSUE"].ToString());
                        }
                        if (QTY_ISSUE != QTY_ISSUE2)
                        {
                            ViewBag.scripCall += "showmsgJS(1, 'Qty_Issue does not match with Location Grid of Item " + INAME + "', 2);";
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            return View(model);
                        }
                    }
                    mmt = model[0].SelectedItems4.FirstOrDefault();
                    DataTable dataTable = new DataTable();
                    DataTable dtpd = new DataTable();
                    Satransaction sat1 = new Satransaction(userCode, MyGuid);
                    try
                    {
                        string currdate = sgen.server_datetime(userCode);
                        if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                        {
                            isedit = true;
                            vch_num = model[0].Col18;
                        }
                        else
                        {
                            isedit = false;
                            mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                            vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                            model[0].Col18 = vch_num;
                        }
                        string vch_date = sgen.Savedate(model[0].Col20, false);
                        dataTable = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                        dtpd = cmd_Fun.GetStructure(userCode, "iprod");
                        for (int i = 0; i < model[0].dt1.Rows.Count; i++)
                        {
                            #region get_rate_amt
                            //DataTable dtin = new DataTable();
                            //DataTable dtout = new DataTable();
                            //DataTable dtavg = new DataTable();
                            //decimal qtyout = 0, qtyin = 0, cl = 0, bal = 0, rt = 0, totamt = 0, totqty = 0, myrate = 0, amt = 0;
                            //mq1 = "select group_name evaltype from master_setting mg where md.subjectid='" + model[0].dt1.Rows[i]["icode"].ToString().Substring(0, 1).Trim() + "'";
                            //mq1 = sgen.seekval(userCode, mq1, "evaltype");//evaluation type
                            //if (mq1.Trim() == "0")
                            //{
                            //    mq1 = "select master_name evaltype from master_setting where type='CF0' and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "'";
                            //    mq1 = sgen.seekval(userCode, mq1, "evaltype");//evaluation type
                            //    if (mq1.Trim() == "0")
                            //    {
                            //        ViewBag.scripCall += "showmsgJS(1, 'Please create master of inventory evaluation', 2);";
                            //        return View(model);
                            //    }
                            //}                        
                            //if (mq1.Trim() == "002")
                            //{
                            //    mq = "select i.rec_id,i.vch_num,i.vch_date,i.type,i.icode,i.qtyin,i.qtyout,i.irate,i.iamount,'0' cl,'0' bal from itransaction i " +
                            //        "where (i.client_unit_id||i.icode)='" + unitid_mst + model[0].dt1.Rows[i]["icode"].ToString().Trim() + "' and i.type in " +
                            //        "('Q01','Q02','36','10','11','30','32','21','22') and i.store='Y' order by i.vch_date,i.type asc"; //mrn_w_po,w/o_po,openg,return both,issue both,rgp,nrgp
                            //    dtavg = sgen.getdata(userCode, mq); //in
                            //    if (dtavg.Rows.Count <= 0)
                            //    {
                            //        ViewBag.scripCall += "showmsgJS(1, 'No data found for IN OUT Stock', 2);";
                            //        return View(model);
                            //    }
                            //}
                            //else if (mq1.Trim() == "001")
                            //{
                            //    mq = "select i.rec_id,i.vch_num,i.vch_date,i.type,i.icode,i.qtyin,i.qtyout,i.irate,i.iamount,'0' cl,i.qtyin bal from itransaction i " +
                            //        "where (i.client_unit_id||i.icode)='" + unitid_mst + model[0].dt1.Rows[i]["icode"].ToString().Trim() + "' and i.type in " +
                            //        "('Q01','Q02','36') and i.store='Y' order by i.vch_date,i.type asc"; //mrn_w_po,w/o_po,openg
                            //    dtin = sgen.getdata(userCode, mq); //in
                            //    if (dtin.Rows.Count <= 0)
                            //    {
                            //        ViewBag.scripCall += "showmsgJS(1, 'No data found for IN Stock', 2);";
                            //        return View(model);
                            //    }
                            //    mq0 = "select i.rec_id,i.vch_num,i.vch_date,i.type,i.icode,i.qtyin,i.qtyout,i.irate,i.iamount,'0' cl,'0' bal from itransaction i " +
                            //        "where (i.client_unit_id||i.icode) in ('" + URL + "') and i.type in ('10','11','30','32','21','22') and i.store='Y' " +
                            //        "order by i.vch_date,i.type asc";//gen_ret,agnst_issue,w_req,w/o_req,rgp,nrgp
                            //    dtout = sgen.getdata(userCode, mq0); //out
                            //    if (dtout.Rows.Count <= 0)
                            //    {
                            //        ViewBag.scripCall += "showmsgJS(1, 'No data found for OUT Stock', 2);";
                            //        return model;
                            //    }
                            //}
                            ////fifo
                            //if (mq1.Trim() == "001")
                            //{
                            //    List<string> recs = new List<string>();
                            //    mq = "UPDATE itransaction SET irate = CASE";
                            //    mq1 = "UPDATE itransaction SET iamount = CASE";
                            //    for (int o = 0; o < dtout.Rows.Count; o++) //out dt
                            //    {
                            //        if (dtout.Rows[o]["type"].ToString().StartsWith("1"))
                            //        {
                            //            totamt = 0; totqty = 0;
                            //            qtyin = sgen.Make_decimal(dtout.Rows[o]["qtyin"].ToString());
                            //            for (int i = 0; i < dtout.Rows.Count; i++) //in dt
                            //            {
                            //                qtyout = sgen.Make_decimal(dtout.Rows[i]["qtyout"].ToString());
                            //                cl = sgen.Make_decimal(dtout.Rows[i]["cl"].ToString());
                            //                rt = sgen.Make_decimal(dtout.Rows[i]["irate"].ToString());
                            //                bal = qtyout - cl;
                            //                if (bal == qtyin)
                            //                {
                            //                    totqty = totqty + qtyin;
                            //                    dtout.Rows[i]["cl"] = qtyout;//in bal
                            //                    totamt += rt * qtyin;
                            //                    qtyin = 0;
                            //                }
                            //                else if (bal > qtyin)
                            //                {
                            //                    totqty += qtyin;
                            //                    dtout.Rows[i]["cl"] = cl + qtyin;//in bal
                            //                    totamt += rt * qtyin;
                            //                    qtyin = 0;
                            //                }
                            //                else if (bal < qtyin)
                            //                {
                            //                    totqty += bal;
                            //                    dtout.Rows[i]["cl"] = cl + bal;//in bal
                            //                    totamt += rt * bal;
                            //                    qtyin = qtyin - bal;
                            //                }
                            //                if (qtyin == 0) break;
                            //            }
                            //            myrate = totamt / totqty;
                            //            dtout.Rows[o]["irate"] = myrate;
                            //            dtout.Rows[o]["iamount"] = totamt;//out amt
                            //        }
                            //        else
                            //        {
                            //            totamt = 0; totqty = 0;
                            //            qtyout = sgen.Make_decimal(dtout.Rows[o]["qtyout"].ToString());
                            //            for (int i = 0; i < dtin.Rows.Count; i++) //in dt
                            //            {
                            //                qtyin = sgen.Make_decimal(dtin.Rows[i]["qtyin"].ToString());
                            //                cl = sgen.Make_decimal(dtin.Rows[i]["cl"].ToString());
                            //                rt = sgen.Make_decimal(dtin.Rows[i]["irate"].ToString());
                            //                bal = qtyin - cl;
                            //                if (bal == qtyout)
                            //                {
                            //                    totqty = totqty + qtyout;
                            //                    dtin.Rows[i]["cl"] = qtyin;//in bal
                            //                    totamt += rt * qtyout;
                            //                    qtyout = 0;
                            //                }
                            //                else if (bal > qtyout)
                            //                {
                            //                    totqty += qtyout;
                            //                    dtin.Rows[i]["cl"] = cl + qtyout;//in bal
                            //                    totamt += rt * qtyout;
                            //                    qtyout = 0;
                            //                }
                            //                else if (bal < qtyout)
                            //                {
                            //                    totqty += bal;
                            //                    dtin.Rows[i]["cl"] = cl + bal;//in bal
                            //                    totamt += rt * bal;
                            //                    qtyout = qtyout - bal;
                            //                }
                            //                if (qtyout == 0) break;
                            //            }
                            //            myrate = totamt / totqty;
                            //            dtout.Rows[o]["irate"] = myrate;
                            //            dtout.Rows[o]["iamount"] = totamt;//out amt
                            //        }
                            //        string rec = dtout.Rows[o]["recid"].ToString();
                            //        recs.Add(rec);
                            //        mq += " WHEN rec_id = '" + rec + "' THEN " + myrate + "";
                            //        mq1 += " WHEN rec_id = '" + rec + "' THEN " + totamt + "";
                            //    }
                            //    mq += " where rec_id in (" + string.Join("','", recs) + "'";
                            //    mq1 += " where rec_id in (" + string.Join("','", recs) + "'";
                            //    var qtyout = 25;
                            //    for (int i = 0; i < dtin.Rows.Count; i++) //in dt
                            //    {
                            //        qtyin = sgen.Make_decimal(dtin.Rows[i]["qtyin"].ToString());
                            //        cl = sgen.Make_decimal(dtin.Rows[i]["cl"].ToString());
                            //        rt = sgen.Make_decimal(dtin.Rows[i]["irate"].ToString());
                            //        bal = qtyin - cl;
                            //        if (bal == qtyout)
                            //        {
                            //            totqty = totqty + qtyout;
                            //            dtin.Rows[i]["cl"] = qtyin;//in bal
                            //            totamt += rt * qtyout;
                            //            qtyout = 0;
                            //        }
                            //        else if (bal > qtyout)
                            //        {
                            //            totqty += qtyout;
                            //            dtin.Rows[i]["cl"] = cl + qtyout;//in bal
                            //            totamt += rt * qtyout;
                            //            qtyout = 0;
                            //        }
                            //        else if (bal < qtyout)
                            //        {
                            //            totqty += bal;
                            //            dtin.Rows[i]["cl"] = cl + bal;//in bal
                            //            totamt += rt * bal;
                            //            qtyout = qtyout - bal;
                            //        }
                            //        if (qtyout == 0) break;
                            //    }
                            //    //sgen.execute_cmd(userCode, mq);
                            //    //sgen.execute_cmd(userCode, mq1);
                            //}
                            ////average moving price
                            //else if (mq1.Trim() == "002")
                            //{
                            //    dtin = dtavg.Select("type in ('Q01','Q02','36')").CopyToDataTable();
                            //    dtout = dtavg.Select("type in ('10','11','30','32','21','22')").CopyToDataTable();
                            //    List<string> recs = new List<string>();
                            //    mq = "UPDATE itransaction SET irate = CASE";
                            //    mq1 = "UPDATE itransaction SET iamount = CASE";
                            //    for (int o = 0; o < dtout.Rows.Count; o++) //out dt
                            //    {
                            //        var dtin_t = dtin.AsEnumerable().Where(w => w.Field<DateTime>("vch_date") <= ((DateTime)dtout.Rows[o]["vch_date"])).CopyToDataTable();
                            //        DataTable dtttt = new DataTable();
                            //        dtttt.Columns.Add("totqty");
                            //        dtttt.Columns.Add("totamt");
                            //        var t1 = dtin_t.AsEnumerable().GroupBy(k => new
                            //        {
                            //            icode = k.Field<string>("icode")
                            //        });
                            //        var t2 = t1.Select(c =>
                            //        {
                            //            var row = dtttt.NewRow();
                            //            row["icode"] = c.Key.icode;
                            //            row["totqty"] = c.Sum(k => k.Field<decimal>("qtyin"));
                            //            row["totamt"] = c.Sum(k => k.Field<decimal>("iamount"));
                            //            return row;
                            //        });
                            //        dtttt = t2.CopyToDataTable();
                            //        totamt = 0; totqty = 0;
                            //        qtyout = sgen.Make_decimal(dtout.Rows[o]["qtyout"].ToString());
                            //        bal = sgen.Make_decimal(dtttt.Rows[0][0].ToString());
                            //        amt = sgen.Make_decimal(dtttt.Rows[0][1].ToString());
                            //        rt = amt / bal;
                            //        //myrate = totamt / totqty;
                            //        dtout.Rows[o]["irate"] = rt;
                            //        dtout.Rows[o]["iamount"] = qtyout * rt;//out amt
                            //        string rec = dtout.Rows[o]["recid"].ToString();
                            //        recs.Add(rec);
                            //        mq += " WHEN rec_id = '" + rec + "' THEN " + myrate + "";
                            //        mq1 += " WHEN rec_id = '" + rec + "' THEN " + totamt + "";
                            //    }
                            //    mq += " where rec_id in (" + string.Join("','", recs) + "'";
                            //    mq1 += " where rec_id in (" + string.Join("','", recs) + "'";
                            //    //sgen.execute_cmd(userCode, mq);
                            //    //sgen.execute_cmd(userCode, mq1);
                            //}
                            #endregion
                            #region
                            #region wip in iprod
                            if (mmt.Trim() == "002")//WIP
                            {
                                DataRow dr = dtpd.NewRow();
                                dr["vch_num"] = vch_num;
                                dr["type"] = model[0].Col12;
                                dr["vch_date"] = vch_date;//issuedate                                                     
                                dr["icode"] = model[0].dt1.Rows[i]["Icode"].ToString();
                                dr["iname"] = model[0].dt1.Rows[i]["IName"].ToString();
                                dr["acode"] = model[0].SelectedItems1.FirstOrDefault();//dept                         
                                dr["stage"] = "001";//FROM stage                        
                                dr["qtyin"] = sgen.Make_decimal(model[0].dt1.Rows[i]["Qty_Issue"].ToString().Trim());//produce qty                                                  s                      
                                dr["pflag"] = "W";//consume pd   
                                dr["rec_id"] = "0";
                                // shiv
                                if (isedit)
                                {
                                    dr["client_id"] = model[0].Col1.Trim();
                                    dr["client_unit_id"] = model[0].Col2.Trim();
                                    dr["ent_by"] = model[0].Col3;
                                    dr["ent_date"] = model[0].Col4;
                                    dr["edit_by"] = userid_mst;
                                    dr["edit_date"] = currdate;
                                }
                                else
                                {
                                    dr["client_id"] = clientid_mst;
                                    dr["client_unit_id"] = unitid_mst;
                                    dr["ent_by"] = userid_mst;
                                    dr["ent_date"] = currdate;
                                    dr["edit_by"] = "-";
                                    dr["edit_date"] = currdate;
                                }
                                dtpd.Rows.Add(dr);
                            }
                            #endregion
                            #region wip in itransaction (not in use)
                            //if (mmt.Trim() == "002")//WIP
                            //{
                            //    DataRow dr = dataTable.NewRow();
                            //    dr["vch_num"] = vch_num;
                            //    dr["type"] = model[0].Col12;
                            //    dr["vch_date"] = vch_date;//issuedate
                            //    dr["deptno"] = model[0].SelectedItems1.FirstOrDefault();
                            //    dr["desig"] = model[0].SelectedItems2.FirstOrDefault();
                            //    dr["totremark"] = model[0].Col21;
                            //    dr["cond"] = model[0].Col22;//orderid
                            //    if (model[0].Col12 == "32")//with mrs
                            //    {
                            //        dr["chlno"] = model[0].Col23;//mrsno
                            //        dr["chldate"] = sgen.Savedate(model[0].Col24, false);//mrsdate
                            //    }
                            //    dr["icode"] = model[0].dt1.Rows[i]["Icode"].ToString();
                            //    dr["iname"] = model[0].dt1.Rows[i]["IName"].ToString();
                            //    dr["cpartno"] = model[0].dt1.Rows[i]["partno"].ToString();
                            //    dr["uom"] = model[0].dt1.Rows[i]["UOM"].ToString();
                            //    dr["qtystk"] = model[0].dt1.Rows[i]["Qty_in_stock"].ToString();
                            //    dr["qtychl"] = model[0].dt1.Rows[i]["Qty_req"].ToString();
                            //    dr["qtyin"] = model[0].dt1.Rows[i]["QTY_ISSUE"].ToString().Trim();
                            //    dr["qtybal"] = model[0].dt1.Rows[i]["qty_Req_bal"].ToString();
                            //    dr["iremark"] = model[0].dt1.Rows[i]["Remark"].ToString();
                            //    dr["pono"] = model[0].dt1.Rows[i]["Order_Id"].ToString();
                            //    dr["irate"] = model[0].dt1.Rows[i]["rate"].ToString();
                            //    dr["iamount"] = model[0].dt1.Rows[i]["amount"].ToString();
                            //    dr["mmt"] = mmt.Trim();
                            //    dr["btchno"] = model[0].SelectedItems3.FirstOrDefault();//fixedlocid
                            //    dr["cond"] = model[0].TList3.SingleOrDefault(w => w.Value == model[0].SelectedItems3.FirstOrDefault()).Text;//fixedlocname
                            //    dr["store"] = "Y";
                            //    dr["inspected"] = "W";
                            //    dr["rec_id"] = "0";
                            //    // shiv
                            //    if (isedit)
                            //    {
                            //        dr["client_id"] = model[0].Col1.Trim();
                            //        dr["client_unit_id"] = model[0].Col2.Trim();
                            //        dr["ent_by"] = model[0].Col3;
                            //        dr["ent_date"] = model[0].Col4;
                            //        dr["edit_by"] = userid_mst;
                            //        dr["edit_date"] = currdate;
                            //    }
                            //    else
                            //    {
                            //        dr["client_id"] = clientid_mst;
                            //        dr["client_unit_id"] = unitid_mst;
                            //        dr["ent_by"] = userid_mst;
                            //        dr["ent_date"] = currdate;
                            //        dr["edit_by"] = "-";
                            //        dr["edit_date"] = currdate;
                            //    }
                            //    dataTable.Rows.Add(dr);
                            //}
                            #endregion
                            #region consume in itransaction
                            DataRow dr1 = dataTable.NewRow();
                            dr1["vch_num"] = vch_num;
                            dr1["type"] = model[0].Col12;
                            dr1["vch_date"] = vch_date;//issuedate
                            dr1["deptno"] = model[0].SelectedItems1.FirstOrDefault();
                            dr1["desig"] = model[0].SelectedItems2.FirstOrDefault();
                            dr1["btchno"] = model[0].SelectedItems3.FirstOrDefault();
                            dr1["totremark"] = model[0].Col21;
                            dr1["cond"] = model[0].Col22;//orderid
                            if (model[0].Col12 == "32")//with mrs
                            {
                                dr1["chlno"] = model[0].Col23;//mrsno
                                dr1["chldate"] = sgen.Savedate(model[0].Col24, false);//mrsdate
                            }
                            dr1["icode"] = model[0].dt1.Rows[i]["Icode"].ToString();
                            dr1["iname"] = model[0].dt1.Rows[i]["IName"].ToString();
                            dr1["cpartno"] = model[0].dt1.Rows[i]["partno"].ToString();
                            dr1["uom"] = model[0].dt1.Rows[i]["UOM"].ToString();
                            dr1["qtystk"] = model[0].dt1.Rows[i]["Qty_in_stock"].ToString();
                            dr1["qtychl"] = model[0].dt1.Rows[i]["Qty_req"].ToString();
                            dr1["qtyout"] = model[0].dt1.Rows[i]["QTY_ISSUE"].ToString().Trim();
                            dr1["qtybal"] = model[0].dt1.Rows[i]["qty_Req_bal"].ToString();
                            dr1["iremark"] = model[0].dt1.Rows[i]["Remark"].ToString();
                            dr1["pono"] = model[0].dt1.Rows[i]["Order_Id"].ToString();
                            dr1["pktno"] = model[0].dt1.Rows[i]["No_of_pkt"].ToString() == "" ? "0" : model[0].dt1.Rows[i]["No_of_pkt"].ToString();
                            dr1["irate"] = model[0].dt1.Rows[i]["rate"].ToString();
                            dr1["iamount"] = model[0].dt1.Rows[i]["amount"].ToString();
                            dr1["mmt"] = mmt.Trim();
                            dr1["store"] = "Y";
                            dr1["inspected"] = "C";
                            dr1["rec_id"] = "0";
                            // shiv
                            if (isedit)
                            {
                                dr1["client_id"] = model[0].Col1.Trim();
                                dr1["client_unit_id"] = model[0].Col2.Trim();
                                dr1["ent_by"] = model[0].Col3;
                                dr1["ent_date"] = model[0].Col4;
                                dr1["edit_by"] = userid_mst;
                                dr1["edit_date"] = currdate;
                            }
                            else
                            {
                                dr1["client_id"] = clientid_mst;
                                dr1["client_unit_id"] = unitid_mst;
                                dr1["ent_by"] = userid_mst;
                                dr1["ent_date"] = currdate;
                                dr1["edit_by"] = "-";
                                dr1["edit_date"] = currdate;
                            }
                            dataTable.Rows.Add(dr1);
                            #endregion
                            #endregion
                        }
                        if (dtpd.Rows.Count > 0)
                        {
                            res1 = sgen.Update_data_uncommit2(userCode, dtpd, "iprod", model[0].Col8, isedit, sat1);
                            if (!res1)
                            {
                                sat1.Rollback();
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                                ViewBag.scripCall += "showmsgJS(1, 'Wip data not saved', 0);";
                                ModelState.Clear();
                                return View(model);
                            }
                        }
                        res = sgen.Update_data_uncommit2(userCode, dataTable, model[0].Col10.Trim(), model[0].Col8, isedit, sat1);
                        if (res == true)
                        {
                            dt = cmd_Fun.GetStructure(userCode, "btchtrans");
                            for (int i = 0; i < model[0].dt2.Rows.Count; i++)
                            {
                                #region dr
                                #region wip btchtrans not in use
                                //if (mmt.Trim() == "002")
                                //{
                                //    DataRow dr = dt.NewRow();
                                //    dr["vch_num"] = vch_num;
                                //    dr["type"] = model[0].Col12;
                                //    dr["vch_date"] = vch_date;
                                //    dr["deptno"] = model[0].SelectedItems1.FirstOrDefault();
                                //    dr["desig"] = model[0].SelectedItems2.FirstOrDefault();
                                //    dr["totremark"] = model[0].Col21;
                                //    dr["ordid"] = model[0].Col22;//orderid
                                //    if (model[0].Col12 == "32")//with mrs
                                //    {
                                //        dr["chlno"] = model[0].Col23;//mrsno
                                //        dr["chldate"] = sgen.Savedate(model[0].Col24, false);//mrsdate
                                //    }
                                //    dr["icode"] = model[0].dt2.Rows[i]["icode"].ToString();
                                //    dr["iname"] = model[0].dt2.Rows[i]["iname"].ToString();
                                //    dr["cpartno"] = model[0].dt2.Rows[i]["partno"].ToString();
                                //    dr["uom"] = model[0].dt2.Rows[i]["UOM"].ToString();
                                //    dr["qtystk"] = model[0].dt2.Rows[i]["Qty_in_stock"].ToString();
                                //    dr["qtyin"] = model[0].dt2.Rows[i]["QTY_ISSUE"].ToString().Trim();
                                //    dr["iremark"] = model[0].dt2.Rows[i]["Remark"].ToString();
                                //    dr["loc"] = model[0].SelectedItems3.FirstOrDefault();
                                //    dr["locname"] = model[0].TList3.SingleOrDefault(w => w.Value == model[0].SelectedItems3.FirstOrDefault()).Text;
                                //    dr["mmt"] = mmt.Trim();
                                //    dr["store"] = "Y";
                                //    dr["pono"] = "W";
                                //    dr["rec_id"] = "0";
                                //    // shiv
                                //    if (isedit)
                                //    {
                                //        dr["client_id"] = model[0].Col1.Trim();
                                //        dr["client_unit_id"] = model[0].Col2.Trim();
                                //        dr["ent_by"] = model[0].Col3;
                                //        dr["ent_date"] = model[0].Col4;
                                //        dr["edit_by"] = userid_mst;
                                //        dr["edit_date"] = currdate;
                                //    }
                                //    else
                                //    {
                                //        dr["client_id"] = clientid_mst;
                                //        dr["client_unit_id"] = unitid_mst;
                                //        dr["ent_by"] = userid_mst;
                                //        dr["ent_date"] = currdate;
                                //        dr["edit_by"] = "-";
                                //        dr["edit_date"] = currdate;
                                //    }
                                //    dt.Rows.Add(dr);
                                //}
                                #endregion
                                #region issue btchtrans consume
                                DataRow dr1 = dt.NewRow();
                                dr1["vch_num"] = vch_num;
                                dr1["type"] = model[0].Col12;
                                dr1["vch_date"] = vch_date;
                                dr1["deptno"] = model[0].SelectedItems1.FirstOrDefault();
                                dr1["desig"] = model[0].SelectedItems2.FirstOrDefault();
                                dr1["totremark"] = model[0].Col21;
                                dr1["ordid"] = model[0].Col22;//orderid
                                if (model[0].Col12 == "32")//with mrs
                                {
                                    dr1["chlno"] = model[0].Col23;//mrsno
                                    dr1["chldate"] = sgen.Savedate(model[0].Col24, false);//mrsdate
                                }
                                dr1["icode"] = model[0].dt2.Rows[i]["icode"].ToString();
                                dr1["iname"] = model[0].dt2.Rows[i]["iname"].ToString();
                                dr1["cpartno"] = model[0].dt2.Rows[i]["partno"].ToString();
                                dr1["uom"] = model[0].dt2.Rows[i]["UOM"].ToString();
                                dr1["qtystk"] = model[0].dt2.Rows[i]["Qty_in_stock"].ToString();
                                dr1["qtyout"] = model[0].dt2.Rows[i]["QTY_ISSUE"].ToString().Trim();
                                dr1["iremark"] = model[0].dt2.Rows[i]["Remark"].ToString();
                                dr1["loc"] = model[0].dt2.Rows[i]["LocCode"].ToString();
                                dr1["locname"] = model[0].dt2.Rows[i]["Loc"].ToString();
                                dr1["mmt"] = mmt.Trim();
                                dr1["store"] = "Y";
                                dr1["pono"] = "C";//flag
                                dr1["rec_id"] = "0";
                                // shiv
                                if (isedit)
                                {
                                    dr1["client_id"] = model[0].Col1.Trim();
                                    dr1["client_unit_id"] = model[0].Col2.Trim();
                                    dr1["ent_by"] = model[0].Col3;
                                    dr1["ent_date"] = model[0].Col4;
                                    dr1["edit_by"] = userid_mst;
                                    dr1["edit_date"] = currdate;
                                }
                                else
                                {
                                    dr1["client_id"] = clientid_mst;
                                    dr1["client_unit_id"] = unitid_mst;
                                    dr1["ent_by"] = userid_mst;
                                    dr1["ent_date"] = currdate;
                                    dr1["edit_by"] = "-";
                                    dr1["edit_date"] = currdate;
                                }
                                dt.Rows.Add(dr1);
                                #endregion
                                #endregion
                            }
                            ok = sgen.Update_data_uncommit2(userCode, dt, "btchtrans", model[0].Col8, isedit, sat1);
                            if (ok != true)
                            {
                                sat1.Rollback();
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                                ViewBag.scripCall += "showmsgJS(1, 'Data Not Saved', 0);";
                                ModelState.Clear();
                                return View(model);
                            }
                            sat1.Commit();
                            if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                            {
                                //sat1.Commit();
                                ViewBag.vnew = "";
                                ViewBag.vedit = "";
                                ViewBag.vsave = "disabled='disabled'";
                                ViewBag.vsavenew = "disabled='disabled'";
                                ViewBag.vfill = "disabled='disabled'";
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                            }
                            else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                            {
                                try
                                {
                                    //sat1.Commit();
                                    ViewBag.vnew = "";
                                    ViewBag.vedit = "";
                                    ViewBag.vsave = "disabled='disabled'";
                                    ViewBag.vsavenew = "disabled='disabled'";
                                    ViewBag.vfill = "disabled='disabled'";
                                    Make_query("item_issued", "Select Item Issued Type", "NEW", "1", "", "");
                                    ViewBag.scripCall = "callFoo('Select Item Issued Type');";
                                    ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                                }
                                catch (Exception ex)
                                {
                                    ViewBag.scripCall += "mytoast('error', 'toast-top-right', '" + ex.Message.ToString().Trim() + "');";
                                }
                            }
                            model = new List<Tmodelmain>();
                            model.Add(new Tmodelmain
                            {
                                Col13 = "Save",
                                Col100 = "Save & New",
                                Col121 = "S",
                                Col122 = "<u>S</u>ave",
                                Col123 = "Save & Ne<u>w</u>",
                                Col10 = tm.Col10,
                                Col11 = tm.Col11,
                                Col14 = tm.Col14,
                                Col15 = tm.Col15,
                                TList1 = mod1,
                                SelectedItems1 = new string[] { "" },
                                TList2 = mod2,
                                SelectedItems2 = new string[] { "" },
                                TList3 = mod3,
                                SelectedItems3 = new string[] { "" },
                                TList4 = mod4,
                                SelectedItems4 = new string[] { "" },
                                dt1 = null,
                                dt2 = null
                            });
                            sgen.SetSession(MyGuid, "dtbase1", null);
                            sgen.SetSession(MyGuid, "dtbase2", null);
                            sgen.SetSession(MyGuid, "KISTYPE", null);
                            //ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else
                        {
                            sat1.Rollback();
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            ViewBag.scripCall += "showmsgJS(1, 'Data Not Saved', 0);";
                        }
                    }
                    catch (Exception ex) { ViewBag.scripCall = "showmsgJS(1,'" + ex.Message.ToString().Replace('\'', ' ') + "', 0);"; sat1.Rollback(); }
                }
                else if (command == "-")
                {
                    if (model[0].dt1.Rows.Count > 1) model[0].dt1.Rows.RemoveAt(sgen.Make_int(hfrow));
                    else { model[0].dt1 = (DataTable)sgen.GetSession(MyGuid, "dtbase1"); }
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
                else if (command == "2-")
                {
                    if (model[0].dt2.Rows.Count > 1) model[0].dt2.Rows.RemoveAt(sgen.Make_int(hfrow));
                    else { model[0].dt2 = (DataTable)sgen.GetSession(MyGuid, "dtbase2"); }
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region apprv_config
        public ActionResult apprv_config()
        {
            FillMst();
            chkRef();
            ViewBag.vnew = "";
            ViewBag.vedit = "";
            ViewBag.vsave = "disabled='disabled'";
            ViewBag.scripCall = "disableForm();";
            mid_mst = EncryptDecrypt.Decrypt(Request.QueryString["mid"]);
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            var model = new List<Tmodelmain>();
            Tmodelmain tm1 = new Tmodelmain();
            List<SelectListItem> mod1 = new List<SelectListItem>();
            tm1.TList1 = tm1.TList2 = tm1.TList3 = mod1;
            tm1.SelectedItems1 = new string[] { "" };
            tm1.SelectedItems2 = new string[] { "" };
            tm1.SelectedItems3 = new string[] { "" };
            if (mid_mst.Trim().Equals("17001.30"))
            {
                mq = "select param1 from controls where type='CTL' and m_module3='-' and id='000002'";
                mq = sgen.seekval(userCode, mq, "param1");
                sgen.SetSession(MyGuid, "APPRPARAM", mq);
                if (mq == "1")
                {
                    tm1.Col18 = "Y";//dept
                    tm1.Col19 = "N";//ig
                    tm1.Col20 = "N";//amt
                }
                else if (mq == "2")
                {
                    tm1.Col18 = "N";//dept
                    tm1.Col19 = "Y";//ig
                    tm1.Col20 = "N";//amt
                }
                else if (mq == "3")
                {
                    tm1.Col18 = "Y";//dept
                    tm1.Col19 = "Y";//ig
                    tm1.Col20 = "N";//amt
                }
                else { ViewBag.scripCall += "showmsgJS(1, 'Please configure setting', 2);"; }
                tm1.Col9 = "INDENT APPROVAL CONFIG";
                tm1.Col12 = "KC1";
            }
            else if (mid_mst.Trim().Equals("28004.16"))
            {
                mq = "select param1 from controls where type='CTL' and m_module3='-' and id='000003'";
                mq = sgen.seekval(userCode, mq, "param1");
                sgen.SetSession(MyGuid, "APPRPARAM", mq);
                if (mq == "1")
                {
                    tm1.Col18 = "N";//dept
                    tm1.Col19 = "N";//ig
                    tm1.Col20 = "Y";//amt
                }
                else if (mq == "2")
                {
                    tm1.Col18 = "N";//dept
                    tm1.Col19 = "Y";//ig
                    tm1.Col20 = "N";//amt
                }
                else if (mq == "3")
                {
                    tm1.Col18 = "N";//dept
                    tm1.Col19 = "Y";//ig
                    tm1.Col20 = "Y";//amt
                }
                else { ViewBag.scripCall += "showmsgJS(1, 'Please configure setting', 2);"; }
                tm1.Col9 = "PO APPROVAL CONFIG";
                tm1.Col12 = "KC2";
            }
            else if (mid_mst.Trim().Equals("21001.15"))
            {
                mq = "select param1 from controls where type='CTL' and m_module3='-' and id='000004'";
                mq = sgen.seekval(userCode, mq, "param1");
                sgen.SetSession(MyGuid, "APPRPARAM", mq);
                if (mq == "1")
                {
                    tm1.Col18 = "N";//dept
                    tm1.Col19 = "N";//ig
                    tm1.Col20 = "Y";//amt
                }
                else if (mq == "2")
                {
                    tm1.Col18 = "N";//dept
                    tm1.Col19 = "Y";//ig
                    tm1.Col20 = "N";//amt
                }
                else if (mq == "3")
                {
                    tm1.Col18 = "N";//dept
                    tm1.Col19 = "Y";//ig
                    tm1.Col20 = "Y";//amt
                }
                else { ViewBag.scripCall += "showmsgJS(1, 'Please configure setting', 2);"; }
                tm1.Col9 = "SO APPROVAL CONFIG";
                tm1.Col12 = "KC3";
            }
            tm1.Col10 = "enx_tab";
            tm1.Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            tm1.Col13 = "Save";
            tm1.Col14 = mid_mst.Trim();
            tm1.Col15 = MyGuid.Trim();
            sgen.SetSession(MyGuid, "APPRTYPE", tm1.Col12.Trim());
            sgen.SetSession(MyGuid, "APPRMID", tm1.Col14.Trim());
            model.Add(tm1);
            return View(model);
        }
        [HttpPost]
        public ActionResult apprv_config(List<Tmodelmain> model, string command)
        {
            try
            {
                FillMst();
                var tm = model.FirstOrDefault();
                #region ddl
                List<SelectListItem> mod1 = new List<SelectListItem>();
                List<SelectListItem> mod2 = new List<SelectListItem>();
                List<SelectListItem> mod3 = new List<SelectListItem>();
                tm.TList1 = mod1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                tm.TList2 = mod2 = (List<SelectListItem>)TempData[MyGuid + "_TList2"];
                tm.TList3 = mod3 = (List<SelectListItem>)TempData[MyGuid + "_TList3"];
                //tm.TList1 = mod1;
                //tm.TList2 = mod2;
                //tm.TList3 = mod3;
                if (tm.SelectedItems1 == null) tm.SelectedItems1 = new string[] { "" };
                if (tm.SelectedItems2 == null) tm.SelectedItems2 = new string[] { "" };
                if (tm.SelectedItems3 == null) tm.SelectedItems3 = new string[] { "" };
                #endregion
                if (command == "New")
                {
                    //try
                    //{
                    sgen.SetSession(MyGuid, "EDMODE", "N");
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.scripCall = "enableForm();";
                    mq = "select max(to_number(vch_num)) auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12 + "'" + model[0].Col11 + "";
                    vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                    model[0].Col16 = vch_num;
                    mod1 = new List<SelectListItem>();
                    mod2 = new List<SelectListItem>();
                    mod3 = new List<SelectListItem>();
                    TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.dept(userCode, clientid_mst, unitid_mst);

                    if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                    TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2 = cmd_Fun.itemgrp(userCode, clientid_mst, unitid_mst);

                    if (model[0].SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
                    TempData[MyGuid + "_TList3"] = model[0].TList3 = mod3 = cmd_Fun.username(userCode);

                    if (model[0].SelectedItems3 == null) model[0].SelectedItems3 = new string[] { "" };
                    //}
                    //catch (Exception ex) { }
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {
                    //try
                    //{
                    if (model[0].Col14.Trim().Equals("17001.30")) mq2 = "000002";
                    else if (model[0].Col14.Trim().Equals("28004.16")) mq2 = "000003";
                    else if (model[0].Col14.Trim().Equals("21001.15")) mq2 = "000004";
                    mq0 = sgen.seekval(userCode, "select param1 from controls where type='CTL' and id='" + mq2 + "' and m_module3='-'", "param1");
                    var tmodel = model.FirstOrDefault();
                    string currdate = sgen.server_datetime(userCode);
                    type = model[0].Col12;
                    DataTable dtstr = new DataTable();
                    dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        mq1 = " and vch_num <> '" + model[0].Col16.Trim() + "'";
                        isedit = true;
                        vch_num = model[0].Col16.Trim();
                    }
                    else
                    {
                        mq = "select max(to_number(vch_num)) auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12 + "'" + model[0].Col11 + "";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        isedit = false;
                    }
                    cond = sgen.seekval(userCode, "select col3 from " + model[0].Col10.Trim() + " a where col3='" + model[0].SelectedItems3.FirstOrDefault().Trim() + "' and type='" + model[0].Col12 + "'" + model[0].Col11 + "" + mq1 + "", "col3");
                    if (!cond.Equals("0"))
                    {
                        ViewBag.scripCall = "showmsgJS(1, 'User Already Exists', 2);";
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        return View(model);
                    }
                    #region dtstr module
                    DataRow dr = dtstr.NewRow();
                    dr["rec_id"] = "0";
                    dr["vch_num"] = vch_num.Trim();
                    dr["vch_date"] = currdate;
                    dr["type"] = type.Trim();
                    dr["col1"] = string.Join(",", model[0].SelectedItems1);//dept
                    dr["col2"] = string.Join(",", model[0].SelectedItems2);//ig                    
                    dr["col3"] = model[0].SelectedItems3.FirstOrDefault();//user
                    dr["col4"] = model[0].Col17;//amount
                    dr["col5"] = mq0;//indapproval type
                    if (isedit)
                    {
                        dr["ent_by"] = model[0].Col3;
                        dr["ent_date"] = model[0].Col4;
                        dr["client_id"] = model[0].Col1;
                        dr["client_unit_id"] = model[0].Col2;
                        //dr["rec_id"] = model[0].Col7;
                        dr["edit_by"] = userid_mst;
                        dr["edit_date"] = currdate;
                    }
                    else
                    {
                        dr["ent_by"] = userid_mst;
                        dr["ent_date"] = currdate;
                        dr["edit_by"] = "-";
                        dr["edit_date"] = currdate;
                        dr["client_id"] = clientid_mst;
                        dr["client_unit_id"] = unitid_mst;
                    }
                    dtstr.Rows.Add(dr);
                    #endregion
                    res = sgen.Update_data_fast1(userCode, dtstr, model[0].Col10.Trim(), model[0].Col8, isedit);
                    if (res)
                    {
                        ViewBag.vnew = "";
                        ViewBag.vedit = "";
                        ViewBag.vsave = "disabled='disabled'";
                        ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col9 = tmodel.Col9,
                            Col10 = tmodel.Col10,
                            Col11 = tmodel.Col11,
                            Col12 = tmodel.Col12,
                            Col13 = "Save",
                            Col14 = tmodel.Col14,
                            Col15 = tmodel.Col15,
                            Col18 = tmodel.Col18,
                            Col19 = tmodel.Col19,
                            Col20 = tmodel.Col20,
                            TList1 = mod1,
                            TList2 = mod2,
                            TList3 = mod3,
                            SelectedItems1 = new string[] { "" },
                            SelectedItems2 = new string[] { "" },
                            SelectedItems3 = new string[] { "" }
                        });
                    }
                    else { ViewBag.scripCall = "showmsgJS(1, 'Data Not Saved', 0);"; }
                    //}
                    //catch (Exception ex) { ViewBag.scripCall = "showmsgJS(1,'" + ex.Message.ToString() + "', 0);"; }
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region indappr
        public ActionResult indappr()
        {
            FillMst();
            chkRef();
            ViewBag.vnew = "";
            ViewBag.vedit = "";
            ViewBag.vsave = "disabled='disabled'";
            mid_mst = EncryptDecrypt.Decrypt(Request.QueryString["mid"]);
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            var model = new List<Tmodelmain>();
            Tmodelmain tm1 = new Tmodelmain();
            tm1.Col9 = "INDENT APPROVAL";
            tm1.Col10 = "purchases";
            tm1.Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            tm1.Col12 = "66";
            tm1.Col13 = "Save";
            tm1.Col14 = mid_mst.Trim();
            tm1.Col15 = MyGuid.Trim();

            string dept = "", ig = "", cols = "";
            mq = "select col1 dept,col2 ig,col5 apptype from enx_tab where type='KC1' and client_unit_id='" + unitid_mst + "' and col3='" + userid_mst + "'";
            DataTable dt = sgen.getdata(userCode, mq);
            if (dt.Rows.Count > 0)
            {
                mq0 = dt.Rows[0]["apptype"].ToString();
                if (mq0.Trim() == "1")
                {
                    dept = dt.Rows[0]["dept"].ToString().Replace(",", "','");
                    cols = " and p.deptno in ('" + dept + "')";
                }
                else if (mq0.Trim() == "2")
                {
                    ig = dt.Rows[0]["ig"].ToString().Replace(",", "','");
                    cols = " and substr(p.icode,1,3) in ('" + ig + "')";
                }
                else if (mq0.Trim() == "3")
                {
                    dept = dt.Rows[0]["dept"].ToString().Replace(",", "','");
                    ig = dt.Rows[0]["ig"].ToString().Replace(",", "','");
                    cols = " and p.deptno in ('" + dept + "') and substr(p.icode,1,3) in ('" + ig + "')";
                }
            }

            mq = "select '' SNo,'false' chk,p.ver,p.vch_num indno,p.vch_date inddate,u.user_id entby,p.ent_date,d.master_name dept,g.master_name desig,p.icode,i.iname," +
                "p.qtyord Qtyreq from purchases p " +
                "inner join user_details u on u.vch_num = p.ent_by and u.type = 'CPR' " +
                "inner join master_setting d on d.master_id = p.deptno and d.type = 'MDP' and find_in_set(d.client_unit_id, p.client_unit_id)= 1 " +
                "inner join master_setting g on g.master_id = p.desig and g.type = 'MDG' and find_in_set(g.client_unit_id, p.client_unit_id)= 1 " +
                "inner join item i on i.icode = p.icode and i.type = 'IT' and find_in_set(i.client_unit_id, p.client_unit_id)= 1 " +
                "where p.type = '66' and p.client_unit_id = '" + unitid_mst + "' and p.approved = 'N'" + cols + " order by p.vch_num desc";
            tm1.dt1 = sgen.getdata(userCode, mq);
            model.Add(tm1);
            return View(model);
        }
        [HttpPost]
        public ActionResult indappr(List<Tmodelmain> model, string command, string hfrow, string hftable)
        {
            try
            {
                FillMst();
                DataSet ds = new DataSet();
                if (hftable.Trim() != "")
                {
                    ds = sgen.setDS(hftable);
                    model[0].dt1 = ds.Tables[0];
                }
                var tm = model.FirstOrDefault();
                if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command == "Approved")
                {
                    string currdate = sgen.server_datetime(userCode);
                    for (int i = 0; i < model[0].dt1.Rows.Count; i++)
                    {
                        if (Convert.ToBoolean(model[0].dt1.Rows[i][1].ToString()) == true)
                        {
                            mq = "update purchases set approved='Y',appby='" + userid_mst + "',appdate=to_date('" + currdate + "','YYYY-MM-DD HH24:MI:SS') where " +
                                "vch_num='" + model[0].dt1.Rows[0][3].ToString() + "' and type='66' and client_unit_id='" + unitid_mst + "' and " +
                                "icode='" + model[0].dt1.Rows[0][9].ToString() + "'";
                            res = sgen.execute_cmd(userCode, mq);
                        }
                    }
                    if (res)
                    {
                        ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Approved Successfully');disableForm();";
                        return RedirectToAction(actionName, new { @m_id = EncryptDecrypt.Encrypt(model[0].Col15), @mid = EncryptDecrypt.Encrypt(model[0].Col14) });
                    }
                    else { ViewBag.scripCall = "showmsgJS(1, 'Something went wrong in approving', 0);"; }
                }
                else if (command == "Reject")
                {
                    string currdate = sgen.server_datetime(userCode);
                    for (int i = 0; i < model[0].dt1.Rows.Count; i++)
                    {
                        if (Convert.ToBoolean(model[0].dt1.Rows[i][1].ToString()) == true)
                        {
                            mq = "update purchases set approved='R',appby='" + userid_mst + "',appdate=to_date('" + currdate + "','YYYY-MM-DD HH24:MI:SS') where " +
                                "vch_num='" + model[0].dt1.Rows[0][3].ToString() + "' and type='66' and client_unit_id='" + unitid_mst + "' and " +
                                "icode='" + model[0].dt1.Rows[0][9].ToString() + "'";
                            res = sgen.execute_cmd(userCode, mq);
                        }
                    }
                    if (res)
                    {
                        ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Reject Successfully');disableForm();";
                        return RedirectToAction(actionName, new { @m_id = EncryptDecrypt.Encrypt(model[0].Col15), @mid = EncryptDecrypt.Encrypt(model[0].Col14) });
                    }
                    else { ViewBag.scripCall = "showmsgJS(1, 'Something went wrong in approving', 0);"; }
                }
                else if (command == "Hold")
                {
                    string currdate = sgen.server_datetime(userCode);
                    for (int i = 0; i < model[0].dt1.Rows.Count; i++)
                    {
                        if (Convert.ToBoolean(model[0].dt1.Rows[i][1].ToString()) == true)
                        {
                            mq = "update purchases set approved='H',appby='" + userid_mst + "',appdate=to_date('" + currdate + "','YYYY-MM-DD HH24:MI:SS') where " +
                                "vch_num='" + model[0].dt1.Rows[0][3].ToString() + "' and type='66' and client_unit_id='" + unitid_mst + "' and " +
                                "icode='" + model[0].dt1.Rows[0][9].ToString() + "'";
                            res = sgen.execute_cmd(userCode, mq);
                        }
                    }
                    if (res)
                    {
                        ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Hold Successfully');disableForm();";
                        return RedirectToAction(actionName, new { @m_id = EncryptDecrypt.Encrypt(model[0].Col15), @mid = EncryptDecrypt.Encrypt(model[0].Col14) });
                    }
                    else { ViewBag.scripCall = "showmsgJS(1, 'Something went wrong in approving', 0);"; }
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
    }
}