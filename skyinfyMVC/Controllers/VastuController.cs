using skyinfyMVC.Models;
using System;
using System.Collections.Generic;
using System.Data;
using System.Globalization;
using System.Diagnostics;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Text;
using System.Web;
using System.Web.Mvc;
using System.Web.UI;
using QRCoder;
using System.Drawing;
using System.Net;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using MailKit.Net.Imap;
using HtmlAgilityPack;
using MailKit;
using MailKit.Search;
using System.Text.RegularExpressions;
using System.Net.Http;

namespace skyinfyMVC.Controllers
{
    public class VastuController : Controller
    {
        // GET: Vastu 
        static string mq = "", mq1 = "", vch_num = "", btnval = "", tab_name = "", type = "", type_desc = "", tab_name1 = "", mid_mst = "",
            MyGuid = "", year_from = "", year_to = "", xprdrange = "", Ac_Year_id = "", actionName = "", controllerName = "", isgstr = "N", ent_date = "", clientname_mst = "", currencyformat = "";
        #region
        public static string cmd = "", where = "", userCode = "", userid_mst = "", cg_com_name = "", clientid_mst = "", unitid_mst = "";
        #endregion
        #region 26 feb
        Random random = new Random();
        public static string name = "", ctype1 = "", ctype2 = "", ctype3 = "", ctype4 = "", ctype5 = "", ctype6 = "", ctype7 = "",
        finalpath1 = "", finalpath2 = "", finalpath3 = "", finalpath4 = "", finalpath5 = "", finalpath6 = "", finalpath7 = "", path1 = "", path2 = "", path3 = "", path4 = "",
        path5 = "", path6 = "", path7 = "", fileName1 = "", fileName2 = "", fileName3 = "", fileName4 = "", fileName5 = "", fileName6 = "", fileName7 = "", encpath1 = "",
        encpath2 = "", encpath3 = "", encpath4 = "", encpath5 = "", encpath6 = "", encpath7 = "", role_mst = "", m_module3 = "";
        public static string isscholarship = "N", istransfer = "N", issibling = "N", isfamily = "N", ishobby = "N", havetransport = "",
            isperadd = "N", isdisable = "N", sameas = "", gender = "", isemailauth = "", isphoneauth = "", sa_id = "", mq2 = "", mq3 = "", status = "", typedesc = "";
        #endregion
        string remark = "";
        bool res = false;
        bool ok = false;
        //public static sgenFun sgen;
        //public static Cmd_Fun cmd_Fun;
        sgenFun sgen;
        Cmd_Fun cmd_Fun;
        public static bool isedit = false;
        public static int cli = 0;
        bool chk;
        //===============getload==========
        #region main fun
        public void FillMst(string Myguid = "")
        {
            MyGuid = Myguid;
            //sgen = new sgenFun(MyGuid);
            if (MyGuid == "") { MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]); }
            //if (MyGuid == "") MyGuid = sgen.GetCookie("", "MyGuid");
            sgen = new sgenFun(MyGuid);
            cmd_Fun = new Cmd_Fun(MyGuid);
            userCode = sgen.GetCookie(MyGuid, "userCode");
            role_mst = sgen.GetCookie(MyGuid, "role_mst");
            userid_mst = sgen.GetCookie(MyGuid, "userid_mst");
            Ac_Year_id = sgen.GetCookie(MyGuid, "Ac_Year_id");
            cg_com_name = sgen.GetCookie(MyGuid, "cg_com_name");
            clientid_mst = sgen.GetCookie(MyGuid, "clientid_mst");
            clientid_mst = sgen.GetCookie(MyGuid, "clientid_mst");
            clientid_mst = sgen.GetCookie(MyGuid, "clientid_mst");
            unitid_mst = sgen.GetCookie(MyGuid, "unitid_mst");
            clientname_mst = sgen.GetCookie(MyGuid, "clientname_mst");
            m_module3 = sgen.GetCookie(MyGuid, "m_module3");
            actionName = this.ControllerContext.RouteData.Values["action"].ToString();
            controllerName = this.ControllerContext.RouteData.Values["controller"].ToString();
            sgen.SetSession(MyGuid, "viewName", actionName);
            sgen.SetSession(MyGuid, "controllerName", controllerName);
            currencyformat = sgen.GetCookie(MyGuid, "currencyformat");
            year_to = sgen.GetCookie(MyGuid, "year_to");
            year_from = sgen.GetCookie(MyGuid, "year_from");
            xprdrange = "and to_date(to_char(vch_DATE,'ddMMyyyy'),'ddMMyyyy') between to_date('" + year_from + "','" + sgen.Getsqldatetimeformat() + "') " +
          "and to_date('" + year_to + "','" + sgen.Getsqldatetimeformat() + "')";
        }
        public List<Tmodelmain> getload(List<Tmodelmain> model)
        {
            chkRef();
            Tmodelmain tm1 = new Tmodelmain();
            mid_mst = EncryptDecrypt.Decrypt(Request.QueryString["mid"]);
            if (MyGuid == "")
            {
                MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            }
            if (EncryptDecrypt.Decrypt(Request.QueryString["m_id"]) == "")
            {
            }
            ViewBag.vnew = "";
            ViewBag.vedit = "";
            ViewBag.vsave = "disabled='disabled'";
            ViewBag.vsavenew = "disabled='disabled'";
            ViewBag.scripCall = "disableForm();";
            tm1.Col13 = "Save";
            tm1.Col100 = "Save & New";
            tm1.Col121 = "S";
            tm1.Col122 = "<u>S</u>ave";
            tm1.Col123 = "Save & Ne<u>w</u>";
            tm1.Col14 = mid_mst.Trim();
            tm1.Col15 = MyGuid.Trim();
            model.Add(tm1);
            return model;
        }
        public List<Tmodelmain> getnew(List<Tmodelmain> model)
        {
            sgen.SetSession(MyGuid, "EDMODE", "N");
            //string defval = "";
            ViewBag.vnew = "disabled='disabled'";
            ViewBag.vedit = "disabled='disabled'";
            ViewBag.vsave = "";
            ViewBag.vsavenew = "";
            ViewBag.scripCall = "enableForm();";
            if (actionName == "s_party")
            {
                mq = "select max(to_number(substr(vch_num,4,8))) as auto_genid from " + model[0].Col10.Trim() + " a where  type in ('" + model[0].Col12.Trim() + "' ,'DD" + model[0].Col12 + "')" + model[0].Col11.Trim() + " and substr(vch_num,0,3)='" + model[0].Col131 + "'";
                vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                vch_num = model[0].Col131 + vch_num;
            }
            else
            {
                mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
            }
            model[0].Col16 = vch_num;
            return model;
        }
        public List<Tmodelmain> getedit(List<Tmodelmain> model, DataTable dtt, string param)
        {
            sgen.SetSession(MyGuid, "EDMODE", "Y");
            model[0].Col1 = dtt.Rows[0]["client_id"].ToString();
            model[0].Col2 = dtt.Rows[0]["client_unit_id"].ToString();
            model[0].Col3 = dtt.Rows[0]["ent_by"].ToString();
            model[0].Col4 = dtt.Rows[0]["ent_date"].ToString();
            model[0].Col7 = dtt.Rows[0]["rec_id"].ToString();
            model[0].Col8 = "client_id||client_unit_id||vch_num|| to_char(vch_date, 'yyyymmdd')|| type = '" + param + "'";
            model[0].Col13 = "Update";
            model[0].Col100 = "Update & New";
            model[0].Col121 = "U";
            model[0].Col122 = "<u>U</u>pdate";
            model[0].Col123 = "Update & Ne<u>w</u>";
            return model;
        }
        private List<Tmodelmain> StartCallback(List<Tmodelmain> model)
        {
            // if (sgen.GetSession(MyGuid,"btnval") != null) btnval =sgen.GetSession(MyGuid, "btnval").ToString();
            if (sgen.GetSession(MyGuid, "delid") != null) { btnval = "FDEL"; }
            else if (sgen.GetSession(MyGuid, "btnval") != null) btnval = sgen.GetSession(MyGuid, "btnval").ToString();
            model = CallbackFun(btnval, "N", actionName, controllerName, model);
            ViewBag.vnew = "disabled='disabled'";
            ViewBag.vedit = "disabled='disabled'";
            ViewBag.vsave = "";
            ViewBag.vsavenew = "";

            if (btnval.ToUpper() == "VIEW")
            {
                ViewBag.vsave = "disabled='disabled'";
                ViewBag.vsavenew = "disabled='disabled'";
                model[0].Col13 = "Save";
                model[0].Col100 = "Save & New";
                model[0].Col121 = "S";
                model[0].Col122 = "<u>S</u>ave";
                model[0].Col123 = "Save & Ne<u>w</u>";
                ViewBag.scripCall = "disableForm();";

            }
            return model;
        }
        public DataRow getsave(string curdt, DataRow drn, List<Tmodelmain> model, bool edit)
        {
            drn["rec_id"] = "0";
            if (edit)
            {
                //drn["rec_id"] = model[0].Col7;
                drn["ent_by"] = model[0].Col3;
                drn["ent_date"] = model[0].Col4;
                drn["client_id"] = clientid_mst;
                drn["client_unit_id"] = unitid_mst;
                drn["edit_by"] = userid_mst;
                drn["edit_date"] = curdt;
            }
            else
            {
                drn["ent_by"] = userid_mst;
                drn["ent_date"] = curdt;
                drn["edit_by"] = "-";
                drn["edit_date"] = curdt;
                drn["client_id"] = clientid_mst;
                drn["client_unit_id"] = unitid_mst;
            }
            return drn;
        }
        private ActionResult CancelFun(List<Tmodelmain> model)
        {
            return RedirectToAction(actionName, new { @m_id = EncryptDecrypt.Encrypt(model[0].Col15), @mid = EncryptDecrypt.Encrypt(model[0].Col14) });
        }
        public ActionResult Index()
        {
            return View();
        }
        public DataRow getsave(string curdt, DataRow drn, List<Tmodelmain> model)
        {
            bool edit = false;
            // if (Session["EDMODE"].ToString().Equals("Y"))
            if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
            {
                edit = true;
                vch_num = model[0].Col16.Trim();
            }
            else
            {
                edit = false;
                mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
            }
            drn["vch_num"] = vch_num;
            drn["rec_id"] = "0";
            if (edit)
            {
                //drn["rec_id"] = model[0].Col7;
                drn["ent_by"] = model[0].Col3;
                drn["ent_date"] = model[0].Col4;
                drn["client_id"] = clientid_mst;
                drn["client_unit_id"] = unitid_mst;
                drn["edit_by"] = userid_mst;
                drn["edit_date"] = curdt;
            }
            else
            {
                drn["ent_by"] = userid_mst;
                drn["ent_date"] = curdt;
                drn["edit_by"] = "-";
                drn["edit_date"] = curdt;
                drn["client_id"] = clientid_mst;
                drn["client_unit_id"] = unitid_mst;
            }
            return drn;
        }
        public void chkRef()
        {
            if (userCode.Equals("")) Response.Redirect(sgenFun.callbackurl);
            if (Request.UrlReferrer == null) { Response.Redirect(sgenFun.callbackurl); }
        }
        #endregion
        //=====================make query===========
        #region make query
        public void Make_query(string viewname, string title, string btnval, string seektype, string param1, string param2, string Myguid = "")
        {
            string condition = "";
            FillMst(MyGuid);
            // Session["btnval"] = btnval;
            sgen.SetSession(MyGuid, "btnval", btnval);
            string accname = sgen.getstring(userCode, "select name from controls where client_id='" + clientid_mst + "' and param5='CUSTOMER DETAIL' and  param3='ORGANISATION NAME'");

            if (accname.Contains(' ')) { accname = accname.TrimEnd().Replace(' ', '_'); }
            switch (viewname.ToLower())
            {
                #region new_cust
                //                case "new_cust":
                //                    switch (btnval.ToUpper())
                //                    {
                //                        case "EDIT":
                //                        case "VIEW":
                //                        case "PRINT":
                //                            cmd = @"select cp.client_id||cp.client_unit_id||cp.vch_num||to_char(cp.vch_date,'yyyymmdd')||cp.type as fstr,cp.c_name as cust_name,
                //to_char(cp.dob,  '" + sgen.Getsqldateformat() + "') as DOB," +
                //"to_char(cp.doa,  '" + sgen.Getsqldateformat() + "') as DOA," +
                //"cp.cpemail as email,cs.country_name,cs.state_name,cs.district_name,cs.city_name,cs.teh_name,cs.v_name,cp.cpaddr as address,ms.master_name as prop_type," +
                //"to_char(convert_tz(cp.MT_DT, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "')  as meeting_datetime," +
                //"cp.cpcont as Mob_No,cp.CPLANDNO as Phone_No,cp.cpaltcont as Alt_No,cp.refered_by As Refered_by,cp.file_no as File_no,cp.remark from clients_mst cp " +
                //"left join country_state cs on cs.rec_id = cp.city  left join master_setting ms on ms.master_id = cp.PR_TYPE and ms.type='PRT' and ms.client_id='" + clientid_mst + "' and ms.client_unit_id='" + unitid_mst + "'" +
                //"where cp.type = 'BCD' and cp.client_id='" + clientid_mst + "' and cp.client_unit_id='" + unitid_mst + "' and cp.cfrm='N' order by cp.vch_num";
                //                            break;
                //                        case "ADD1":
                //                        case "ADD2":
                //                            //cmd = "SELECT client_id||client_unit_id||vch_num||to_char(vch_date, 'yyyymmdd')||type as fstr,v_name as village,teh_name as tehsil,district_name," +
                //                            //    "state_gst_code,state_name,country_name,std_code,alpha_2,alpha_3,country_code,region FROM country_state where type = 'CSV' and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "'";
                //                            cmd = "select distinct alpha_2||state_gst_code ||city_name as fstr," +
                //                                "alpha_2,country_name,state_gst_code,state_name ,city_name from country_state   order by state_name desc ";
                //                            break;
                //                    }
                //                    break;
                //                #endregion
                //#region new_follow
                //case "new_follow":
                //    switch (btnval.ToUpper())
                //    {
                //        case "EDIT":
                //        case "VIEW":
                //            cmd = @"select ex.client_id||ex.client_unit_id||ex.vch_num||to_char(ex.vch_date,'yyyymmdd')||ex.type as fstr
                //                  ,cp.c_name,ex.col1 as Remark,to_char(convert_tz(ex.date1, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') as Remark_Date" +
                //                  ",nvl(ud.FIRST_NAME|| ' '|| ud.MIDDLE_NAME|| ' '|| ud.last_name, '-') as user_name," +
                //                  " nvl(u.FIRST_NAME|| ' '|| u.MIDDLE_NAME|| ' '|| u.last_name, '-') as ent_by,to_char" +
                //                  "( convert_tz( ex.Ent_Date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') as Ent_Date " +
                //                  "from enx_tab2 ex inner join clients_mst cp on cp.vch_num=ex.col2 and cp.type='BCD' and cp.client_id=ex.client_id and cp.cfrm='N' " +
                //                  "and cp.client_unit_id=ex.client_unit_id inner join user_details ud on lpad(ud.rec_id, 6, 0)=ex.col3 and ud.type='CPR'" +
                //                  " inner join user_details u on lpad(u.rec_id, 6, 0)=ex.ent_by and ud.type='CPR' WHERE ex.type='VFC' and" +
                //                  " ex.client_id='" + clientid_mst + "' and ex.client_unit_id='" + unitid_mst + "'";
                //            break;
                //        case "CUST":
                //            cmd = "select (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr," +
                //                         "a.c_name as Name,a.pincode as Pincode,a.isgstr IsGst,a.c_gstin as GSTIN,a.type_desc as Search_text," +
                //                         "a.cpname as PerName,a.cpcont as PerContact,a.cpaltcont as PerAltContact,a.cpemail as PerEmail,a.cpdesig " +
                //                         "as PerDesig from clients_mst a where a.type in ('BCD') and a.client_id='" +
                //                         clientid_mst + "' and a.client_unit_id='" + unitid_mst + "' and a.cfrm = 'N' order by a.vch_num desc";
                //            break;
                //    }
                //    break;
                #endregion
                #region Family Detail
                case "conf_cust":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            cmd = "select distinct ex.client_id||ex.client_unit_id||ex.vch_num||to_char(ex.vch_date,'yyyymmdd')||ex.type as fstr,ex.vch_num as doc_no," +
                                "ex.col1 as customerid,nvl(cp.c_name,'-') cust_name from enx_tab2 ex left join" +
                                " clients_mst cp on cp.vch_num = cast(ex.col1 as varchar2(100)) and cp.type='BCD' and cp.client_unit_id=ex.client_unit_id " +
                                "and cp.cfrm='Y' where ex.client_unit_id='" + unitid_mst + "' and ex.type='BCD'  ORDER BY ex.VCH_NUM DESC";
                            break;
                        case "VIEW":
                            cmd = "select ex.client_id||ex.client_unit_id||ex.vch_num||to_char(ex.vch_date,'yyyymmdd')||ex.type as fstr,ex.vch_num as doc_no," +
                                "ex.col1 as customerid,nvl(cp.c_name,'-') cust_name,ex.col3 as family_mem_Name,ms.master_name as Relation," +
                                "(case when to_char(ex.date1, '" + sgen.Getsqldateformat() + "')='01/01/1900' then '-' else to_char(ex.date1, '" + sgen.Getsqldateformat() + "') end) as family_mem_dob," +
                                "(case when to_char(ex.date2, '" + sgen.Getsqldateformat() + "')='01/01/1900' then '-' else to_char(ex.date2, '" + sgen.Getsqldateformat() + "') end) as family_mem_doa" +
                                " from enx_tab2 ex left join" +
                                " clients_mst cp on cp.vch_num = cast(ex.col1 as varchar2(100)) and cp.type='BCD' and cp.client_unit_id=ex.client_unit_id " +
                                "and cp.cfrm='Y' left join master_setting ms on ms.master_id = ex.col5 and ms.type='REL'  where ex.client_unit_id='" + unitid_mst + "' and ex.type='BCD'  ORDER BY ex.VCH_NUM DESC";
                            break;
                        case "CUST":
                        case "NEW":
                            cmd = @"select distinct cp.client_id||cp.client_unit_id||cp.vch_num||to_char(cp.vch_date,'yyyymmdd')||cp.type||
(case when  f.col1 is null then '_NEW' else '_EDIT' END )||'_'||f.client_id||f.client_unit_id||f.vch_num||to_char(f.vch_date,'yyyymmdd')||f.type  as fstr 
,cp.vch_num as DOC_No,cp.c_name cust_name,
(cp.cpname || ' ' || replace(cp.cp_mname, '0', '') || ' ' || replace(cp.cp_lname,'0','')) as contact_Person,
nvl(cs.city_name,'-') city_name from clients_mst cp " +
"left join country_state cs on cs.rec_id = cp.city " +
"left join enx_tab2 f on cp.vch_num = cast(f.col1 as varchar(100)) and f.type='BCD' and cp.client_unit_id =f.client_unit_id " +
"where cp.type = 'BCD' and cp.client_unit_id='" + unitid_mst + "' and substr(cp.vch_num,0,3)='303' order by cp.vch_num desc ";
                            break;
                        case "ADD1":
                            cmd = "select distinct alpha_2||state_gst_code ||city_name as fstr," +
                               "alpha_2,country_name,state_gst_code,state_name ,city_name from country_state   order by state_name desc ";
                            break;
                    }
                    break;
                #endregion
                #region Family Detail
                case "conf_custn":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            cmd = "select distinct ex.client_id||ex.client_unit_id||ex.vch_num||to_char(ex.vch_date,'yyyymmdd')||ex.type as fstr,ex.vch_num as doc_no," +
                                "ex.col1 as customerid,nvl(cp.c_name,'-') cust_name from enx_tab2 ex left join" +
                                " clients_mst cp on cp.vch_num = cast(ex.col1 as varchar2(100)) and cp.type='BCD' and cp.client_unit_id=ex.client_unit_id " +
                                "and cp.cfrm='Y' where ex.client_unit_id='" + unitid_mst + "' and ex.type='BCD'  ORDER BY ex.VCH_NUM DESC";
                            break;
                        case "VIEW":
                            cmd = "select ex.client_id||ex.client_unit_id||ex.vch_num||to_char(ex.vch_date,'yyyymmdd')||ex.type as fstr,ex.vch_num as doc_no," +
                                "ex.col1 as customerid,nvl(cp.c_name,'-') cust_name,ex.col3 as family_mem_Name,ms.master_name as Relation," +
                                "(case when to_char(ex.date1, '" + sgen.Getsqldateformat() + "')='01/01/1900' then '-' else to_char(ex.date1, '" + sgen.Getsqldateformat() + "') end) as family_mem_dob," +
                                "(case when to_char(ex.date2, '" + sgen.Getsqldateformat() + "')='01/01/1900' then '-' else to_char(ex.date2, '" + sgen.Getsqldateformat() + "') end) as family_mem_doa" +
                                " from enx_tab2 ex left join" +
                                " clients_mst cp on cp.vch_num = cast(ex.col1 as varchar2(100)) and cp.type='BCD' and cp.client_unit_id=ex.client_unit_id " +
                                "and cp.cfrm='Y' left join master_setting ms on ms.master_id = ex.col5 and ms.type='REL'  where ex.client_unit_id='" + unitid_mst + "' and ex.type='BCD'  ORDER BY ex.VCH_NUM DESC";
                            break;
                        case "CUST":
                        case "NEW":
                            cmd = @"select distinct cp.client_id||cp.client_unit_id||cp.vch_num||to_char(cp.vch_date,'yyyymmdd')||cp.type||
(case when  f.col1 is null then '_NEW' else '_EDIT' END )||'_'||f.client_id||f.client_unit_id||f.vch_num||to_char(f.vch_date,'yyyymmdd')||f.type  as fstr 
,cp.vch_num as DOC_No,cp.c_name cust_name,
(cp.cpname || ' ' || replace(cp.cp_mname, '0', '') || ' ' || replace(cp.cp_lname,'0','')) as contact_Person,
nvl(cs.city_name,'-') city_name from clients_mst cp " +
"left join country_state cs on cs.rec_id = cp.city " +
"left join enx_tab2 f on cp.vch_num = cast(f.col1 as varchar(100)) and f.type='BCD' and cp.client_unit_id =f.client_unit_id " +
"where cp.type = 'BCD' and cp.client_unit_id='" + unitid_mst + "' and substr(cp.vch_num,0,3)='303' order by cp.vch_num desc ";
                            break;
                        case "ADD1":
                            cmd = "select distinct alpha_2||state_gst_code ||city_name as fstr," +
                               "alpha_2,country_name,state_gst_code,state_name ,city_name from country_state   order by state_name desc ";
                            break;
                    }
                    break;
                #endregion
                #region Account Property
                case "cust_prop":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "PRINT":
                            cmd = @"select distinct ex.client_id||ex.client_unit_id||ex.vch_num||to_char(ex.vch_date,'yyyymmdd')||ex.type as fstr,ex.vch_num as doc_no,ex.col2 as customerid,
nvl(cp.c_name,'-') cust_name,cp.file_no from enx_tab2 ex left join clients_mst cp on cp.vch_num = ex.col2 and cp.type='BCD' and cp.client_unit_id='" + unitid_mst + "' where ex.client_unit_id='" + unitid_mst + "' and ex.type='VCP' order by ex.vch_num DESC";
                            break;
                        case "VIEW":
                            cmd = @"select ex.client_id||ex.client_unit_id||ex.vch_num||to_char(ex.vch_date,'yyyymmdd')||ex.type as fstr,ex.vch_num as doc_no,ex.col2 as customerid,
nvl(cp.c_name,'-') cust_name,cp.file_no, ex.col14 as property_name, nvl(ms.master_name,'-') as property_type, ex.col1 as remark from enx_tab2 ex " +
"left join clients_mst cp on cp.vch_num = ex.col2 and cp.type='BCD' and cp.client_unit_id='" + unitid_mst + "' " +
"left join master_setting ms on " +
"ms.master_id = ex.col6 and ms.type='PRT'  where ex.client_unit_id='" + unitid_mst + "' and ex.type='VCP' order by ex.vch_num DESC";
                            break;
                        case "CUST":
                        case "NEW":
                            cmd = @"select distinct cp.client_id||cp.client_unit_id||cp.vch_num||to_char(cp.vch_date,'yyyymmdd')||cp.type || (case when  f.col1 is null then '_NEW' else '_EDIT' END )
||'_'||f.client_id||f.client_unit_id||f.vch_num||to_char(f.vch_date,'yyyymmdd')||f.type as fstr,cp.vch_num as doc_no,cp.file_no, (case when b.vch_num IS NULL then 'NO' else 'YES' end ) Upload_Attachment,
cp.c_name cust_name,(cp.cpname || ' ' || replace(cp.cp_mname, '0', '') || ' ' || replace(cp.cp_lname,'0','')) as contact_Person, " +
"cp.cpaddr from clients_mst cp " +
"left join enx_tab2 f on cp.vch_num = f.type_desc and f.type='VCP' and f.client_unit_id='" + unitid_mst + "'   " +
" left join (select vch_num from file_tab where type='VCP' and client_unit_id='" + unitid_mst + "' and col1='Property' )  b  on  f.vch_num=b.vch_num" +
" where cp.type = 'BCD' and cp.client_unit_id='" + unitid_mst + "' and substr(cp.vch_num,0,3)='303' order by cp.vch_num desc ";
                            break;
                    }
                    break;
                #endregion
                #region Account Property
                case "cust_propn":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "PRINT":
                            cmd = @"select distinct ex.client_id||ex.client_unit_id||ex.vch_num||to_char(ex.vch_date,'yyyymmdd')||ex.type as fstr,ex.vch_num as doc_no,ex.col2 as customerid,
nvl(cp.c_name,'-') cust_name,cp.file_no from enx_tab2 ex left join clients_mst cp on cp.vch_num = ex.col2 and cp.type='BCD' and cp.client_unit_id='" + unitid_mst + "' where ex.client_unit_id='" + unitid_mst + "' and ex.type='VCP' order by ex.vch_num DESC";
                            break;
                        case "VIEW":
                            cmd = @"select ex.client_id||ex.client_unit_id||ex.vch_num||to_char(ex.vch_date,'yyyymmdd')||ex.type as fstr,ex.vch_num as doc_no,ex.col2 as customerid,
nvl(cp.c_name,'-') cust_name,cp.file_no, ex.col14 as property_name, nvl(ms.master_name,'-') as property_type, ex.col1 as remark from enx_tab2 ex " +
"left join clients_mst cp on cp.vch_num = ex.col2 and cp.type='BCD' and cp.client_unit_id='" + unitid_mst + "' " +
"left join master_setting ms on " +
"ms.master_id = ex.col6 and ms.type='PRT'  where ex.client_unit_id='" + unitid_mst + "' and ex.type='VCP' order by ex.vch_num DESC";
                            break;
                        case "CUST":
                        case "NEW":
                            cmd = @"select distinct cp.client_id||cp.client_unit_id||cp.vch_num||to_char(cp.vch_date,'yyyymmdd')||cp.type || (case when  f.col1 is null then '_NEW' else '_EDIT' END )
||'_'||f.client_id||f.client_unit_id||f.vch_num||to_char(f.vch_date,'yyyymmdd')||f.type as fstr,cp.vch_num as doc_no,cp.file_no, (case when b.vch_num IS NULL then 'NO' else 'YES' end ) Upload_Attachment,
cp.c_name cust_name,(cp.cpname || ' ' || replace(cp.cp_mname, '0', '') || ' ' || replace(cp.cp_lname,'0','')) as contact_Person, " +
"cp.cpaddr from clients_mst cp " +
"left join enx_tab2 f on cp.vch_num = f.type_desc and f.type='VCP' and f.client_unit_id='" + unitid_mst + "'   " +
" left join (select vch_num from file_tab where type='VCP' and client_unit_id='" + unitid_mst + "' and col1='Property' )  b  on  f.vch_num=b.vch_num" +
" where cp.type = 'BCD' and cp.client_unit_id='" + unitid_mst + "' and substr(cp.vch_num,0,3)='303' order by cp.vch_num desc ";
                            break;
                    }
                    break;
                #endregion
                #region comp_doc
                case "comp_doc":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "VIEW":
                            if (sgen.GetSession(MyGuid, "comp_doc") != null) type = sgen.GetSession(MyGuid, "comp_doc").ToString();
                            cmd = "select client_id||client_unit_id||vch_num||to_char(vch_date,'yyyymmdd')||type as fstr,vch_num as Doc_No,file_name File_Name,col3 File_Title,description Description " +
                                "from file_tab where client_unit_id='" + unitid_mst + "' and type='" + type + "' order by vch_num desc";
                            break;
                    }
                    break;
                #endregion
                #region AMC PLAN
                case "amc_plan":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "VIEW":
                            cmd = "select a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type as fstr," +
                                " a.vch_num as doc_no,b.c_name as Customer_Name,a.col1 as remarks, to_char(convert_tz(a.date1,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') as service_Date " +
                                " from enx_tab2 a inner join clients_mst b on b.vch_num = a.col2 and b.type = 'BCD' and" +
                                " a.client_unit_id = '" + unitid_mst + "' where a.type = 'AMC' and a.client_unit_id = '" + unitid_mst + "' " + xprdrange.Replace("vch_DATE", "a.vch_date") + " order by a.rec_id desc";
                            break;
                        case "CUST":
                            cmd = @"select cp.client_id||cp.client_unit_id||cp.vch_num||to_char(cp.vch_date,'yyyymmdd')||cp.type as fstr,cp.c_name cust_name,
to_char(cp.dob,'" + sgen.Getsqldateformat() + "') as DOB," +
"to_char(cp.DOA,'" + sgen.Getsqldateformat() + "') as DOA," +
"cp.cpemail as email,cs.country_name,cs.state_name,cs.district_name,cs.city_name,cs.teh_name,cs.v_name,cp.cpaddr,ms.master_name as prop_type," +
"to_char(convert_tz(cp.MT_DT, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') as meeting_datetime from clients_mst cp " +
"left join country_state cs on cs.rec_id = cp.city  left join master_setting ms on ms.master_id = cp.PR_TYPE and ms.type='PRT' " +
"where cp.type = 'BCD' and cp.client_unit_id='" + unitid_mst + "' and cp.cfrm='Y' ";
                            break;
                    }
                    break;
                #endregion
                #region newvendor_detail
                //case "newvendor_detail":
                //    if (sgen.GetSession(MyGuid, "VD_TYPEMST").ToString() != null)
                //    {
                //        type = sgen.GetSession(MyGuid, "VD_TYPEMST").ToString().Trim();
                //        switch (btnval.ToUpper())
                //        {
                //            case "EDIT":
                //            case "VIEW":
                //            case "PRINT":
                //                cmd = "select (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr," +
                //                          "a.c_name as Name,a.pincode as Pincode,a.isgstr IsGst,a.c_gstin as GSTIN,a.type_desc as Search_text," +
                //                          "a.cpname as PerName,a.cpcont as PerContact,a.cpaltcont as PerAltContact,a.cpemail as PerEmail,a.cpdesig " +
                //                          "as PerDesig from clients_mst a where a.type in ('" + type + "','DD" + type + "') and a.client_id='" +
                //                          clientid_mst + "' and a.client_unit_id='" + unitid_mst + "'";
                //                break;
                //            case "ADD1":
                //            case "ADD2":
                //                //cmd = "SELECT client_id||client_unit_id||vch_num||to_char(vch_date, 'yyyymmdd')||type as fstr,v_name as village,teh_name as tehsil,district_name," +
                //                //    "state_gst_code,state_name,country_name,std_code,alpha_2,alpha_3,country_code,region FROM country_state where type = 'CSV' and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "'";
                //                cmd = "select distinct alpha_2||state_gst_code ||city_name as fstr," +
                //                "alpha_2,country_name,state_gst_code,state_name ,city_name from country_state   order by state_name desc ";
                //                break;
                //        }
                //    }
                //    break;
                #endregion
                #region Create Lead 
                case "lead":
                    switch (btnval.ToUpper())
                    {
                        case "PARTY":
                            //                         
                            mq1 = "select (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.vch_num as DOC_no,b.c_name as Parent_Account," +
                                 "a.c_name as Account_Name, (case when a.type_desc='0' then '-' else a.type_desc end) as Search_text, (case when a.cpname='0' then '-' else a.cpname end) as Per_Name," +
                                 "(case when a.cpcont='0000000000' or a.cpcont='0' then '-' else a.cpcont end) as Per_Contact," +
                                 "(case when a.cpemail='ab@ab.ab' or a.cpemail='0' then '-' else a.cpemail end) as Per_Email," +
                                 " 'Account Detail' as Data_Source from clients_mst a " +
                                 "left join clients_mst b on a.parent_id=b.vch_num " +
                                 " and a.client_unit_id=b.client_unit_id and b.type='BCD' where a.type in ('BCD') and a.client_unit_id='" + unitid_mst + "' and substr(a.vch_num,0,3)='303'";
                            mq2 = "select (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.vch_num as DOC_no,a.c_name as Parent_Account," +
                                "a.c_name as Account_Name ,(case when a.type_desc='0' then '-' else a.type_desc end) as Search_text,(case when a.cpname='0' then '-' else a.cpname end) as Per_Name," +
                                "(case when a.cpcont='0000000000' or a.cpcont='0' then '-' else a.cpcont end) as Per_Contact," +
                                 "(case when a.cpemail='ab@ab.ab' or a.cpemail='0' then '-' else a.cpemail end) as Per_Email" +
                                ", 'Prospect Data' as Data_Source  from clients_mst a  where a.type in ('PRO') and" +
                                " a.client_unit_id = '" + unitid_mst + "' and (a.Pros is null or a.Pros = 'N' or a.Pros = '0') and substr(a.vch_num,0,3)='909' ";
                            cmd = mq1 + " union " + mq2;
                            break;
                        case "EDIT":
                        case "VIEW":

                            if (role_mst != "owner")
                            {
                                condition = "and a.ent_by='" + userid_mst + "'";
                            }
                            cmd = "select (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr," +
                                " a.vch_num as lead_no,to_char(convert_tz(a.vch_date, 'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') as lead_date" +
                                ",(case when a.cust_name='0' then '-' else a.cust_name end) as Customer_Name, " +
                                "(case when length(a.refered_by)=1  and a.refered_by='0' then '-' else a.refered_by end ) refered_by ,c.master_name as Lead_source,d.master_name as lead_status," +
                                "to_char(convert_tz(a.ent_date, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') as Entry_Date from " +
                                " lead_master a  left join master_setting c on a.ld_source = c.master_id and c.type = 'SRC' and find_in_set(c.client_unit_id, '" + unitid_mst + "')= 1 " +
                                "left join master_setting d on a.ld_status = d.master_id and d.type = 'LST' and find_in_set(d.client_unit_id, '" + unitid_mst + "')= 1 " +
                                "where a.type = 'LED' and " +
                                "a.client_unit_id = '" + unitid_mst + "' " + condition + " and a.lead_con='N' order by a.vch_num desc";
                            break;
                        case "ADD1":
                            cmd = "select distinct alpha_2||state_gst_code ||city_name as fstr," +
                            "country_name,state_name ,city_name from country_state   order by state_name desc ";
                            break;
                    }
                    break;
                #endregion
                #region Booking 
                case "booking":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            cmd = "select (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.vch_num bookingno," +
                                  "to_char(convert_tz(a.bookdt, 'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') as DateofBooking,a.occasion," +
                                  "a.foodtype,a.custname CustomerName,a.amt Amount,a.tot Total from func a " +
                                  "where a.type = 'BOK' and a.client_unit_id = '" + unitid_mst + "'";
                            break;
                        case "PRINT":
                        case "VIEW":
                            cmd = "select (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.vch_num booking_no," +
                                  "to_char(convert_tz(a.bookdt, 'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') as Date_of_Booking,a.occasion," +
                                  "to_char(convert_tz(a.dof, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') as Date_of_Func,a.pax," +
                                  "a.foodtype food_type,a.venueadd venue_add,m.master_name menu,v.master_name venue,a.servchk1 decor_chk,a.servtxt1 decor,a.servchk2 dj_chk," +
                                  "a.servtxt2 dj,a.servchk3 driverfood_chk,a.servtxt3 driverfood,a.servchk4 heater_chk,a.servtxt4 heater,a.servchk5 mistfan_chk," +
                                  "a.servtxt5 mistfan,a.servchk6 valet_chk,a.servtxt6 valet,a.servchk7 bar_chk,a.servtxt7 bar,a.custname Customer_Name,to_char(a.dob,'ddMMyyyy') dob," +
                                  "a.custadd Customer_Add,a.contno Contactno,a.altcont Alternate_Contact,a.email,a.bname bride_name,a.gname groom_name,a.hostedby hosted_by," +
                                  "a.remark,a.amt Amount,a.gst,a.mcd,a.tot Total,a.adv Advance,a.bal balance from func a " +
                                  "inner join master_setting m on m.master_id=a.menu and m.type='MEN' and find_in_set(m.client_unit_id,a.client_unit_id)=1 " +
                                  "inner join master_setting v on v.master_id=a.menu and v.type='VEN' and find_in_set(v.client_unit_id,a.client_unit_id)=1 " +
                                  "where a.type = 'BOK' and a.client_unit_id = '" + unitid_mst + "'";
                            break;
                        case "UPC":
                            cmd = "select (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.vch_num booking_no," +
                                  "to_char(convert_tz(a.bookdt, 'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') as Date_of_Booking,a.pax," +
                                  "to_char(convert_tz(a.dof, 'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') as Date_of_Func,a.occasion," +
                                  "a.foodtype food_type,a.venueadd venue_add,m.master_name menu,v.master_name venue,a.servchk1 decor_chk,a.servtxt1 decor,a.servchk2 dj_chk," +
                                  "a.servtxt2 dj,a.servchk3 driverfood_chk,a.servtxt3 driverfood,a.servchk4 heater_chk,a.servtxt4 heater,a.servchk5 mistfan_chk," +
                                  "a.servtxt5 mistfan,a.servchk6 valet_chk,a.servtxt6 valet,a.servchk7 bar_chk,a.servtxt7 bar,a.custname Customer_Name,to_char(a.dob,'ddMMyyyy') dob," +
                                  "a.custadd Customer_Add,a.contno Contactno,a.altcont Alternate_Contact,a.email,a.bname bride_name,a.gname groom_name,a.hostedby hosted_by," +
                                  "a.remark,a.amt Amount,a.gst,a.mcd,a.tot Total,a.adv Advance,a.bal balance from func a " +
                                  "inner join master_setting m on m.master_id=a.menu and m.type='MEN' and find_in_set(m.client_unit_id,a.client_unit_id)=1 " +
                                  "inner join master_setting v on v.master_id=a.menu and v.type='VEN' and find_in_set(v.client_unit_id,a.client_unit_id)=1 " +
                                  "where a.type = 'BOK' and a.client_unit_id = '" + unitid_mst + "' and a.status='N' and to_date(a.dof,'" + sgen.Getsqldateformat() + "')>sysdate";
                            break;
                    }
                    break;
                #endregion
                #region lead_detail
                case "lead_detail":
                    switch (btnval.ToUpper())
                    {
                        case "PARTY":
                            mq1 = "select (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,b.c_name as Parent_Account," +
                               "a.c_name as Account_Name,a.pincode as Pincode,a.type_desc as Search_text," +
                               "a.cpname as PerName,a.cpcont as PerContact,a.cpaltcont as PerAltContact,a.cpemail as PerEmail,a.cpdesig " +
                               "as PerDesig, 'Account Detail' as Data_Source from clients_mst a left join clients_mst b on a.parent_id=b.vch_num " +
                               " and a.client_unit_id='" + unitid_mst + "' and b.type='BCD' where a.type in ('BCD') and a.client_unit_id='" + unitid_mst + "' and substr(a.vch_num,0,3)='303'";
                            mq2 = "select (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.c_name as Parent_Account," +
                                "a.c_name as Account_Name ,a.pincode as Pincode,a.type_desc as Search_text," +
                                "a.cpname as PerName,a.cpcont as PerContact,a.cpaltcont as PerAltContact ,a.cpemail as PerEmail, a.cpdesig as PerDesig , " +
                                "'Prospect Data' as Data_Source  from clients_mst a  where a.type in ('PRO') and a.client_unit_id = '" + unitid_mst + "' and (a.Pros is null or a.Pros = 'N') and substr(a.vch_num,0,3)='909' ";
                            cmd = mq1 + " union " + mq2;
                            break;
                        case "ADD1":
                            cmd = "select distinct alpha_2||state_gst_code ||city_name as fstr," +
                            "alpha_2,country_name,state_gst_code,state_name ,city_name from country_state   order by state_name desc ";
                            break;
                    }
                    break;
                #endregion
                #region lead Convert
                case "lead_convert":
                    switch (btnval.ToUpper())
                    {
                        case "PARTY":
                            //                         
                            mq1 = "select (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,b.c_name as Parent_Account," +
                                  "a.c_name as Account_Name,a.pincode as Pincode,a.type_desc as Search_text," +
                                  "a.cpname as PerName,a.cpcont as PerContact,a.cpaltcont as PerAltContact,a.cpemail as PerEmail,a.cpdesig " +
                                  "as PerDesig, 'Account Detail' as Data_Source from clients_mst a left join clients_mst b on a.parent_id=b.vch_num " +
                                  " and b.client_unit_id='" + unitid_mst + "' and b.type='BCD' where a.type in ('BCD') and a.client_unit_id='" + unitid_mst + "' and substr(a.vch_num,0,3)='303'";
                            //mq2 = "select (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.c_name" +
                            //    " as Client_Name,a.c_name as UnitName ,a.pincode as Pincode,a.isgstr IsGst, a.c_gstin as GSTIN,a.type_desc as" +
                            //    " Search_text,a.cpname as PerName,a.cpcont as PerContact,a.cpaltcont as PerAltContact ,a.cpemail as PerEmail" +
                            //    ",a.cpdesig as PerDesig , 'Prospect Data' as Data_Source  from clients_mst a  where a.type in ('PDA') and a.client_id = '" + clientid_mst + "' and" +
                            //    " a.client_unit_id = '" + unitid_mst + "' and a.Pros is null or a.Pros = 'N' ";
                            // cmd = mq1 + " union " + mq2;
                            cmd = mq1;
                            break;
                        case "CONTACT":
                            if (sgen.GetSession(MyGuid, "ld_acc") != null)
                            {
                                //string fstr = Session["ld_acc"].ToString().Replace("BCD", "BCN");
                                string fstr = sgen.GetSession(MyGuid, "ld_acc").ToString();
                                cmd = "select (a.client_id||a.client_unit_id||a.ref_code||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr," +
                                    " vch_num,(a.cpname || ' ' || replace(a.cp_mname, '0', '') || ' ' || replace(a.cp_lname,'0','')) as contact_Person  from clients_mst a " +
                                    "where a.client_id||a.client_unit_id||a.ref_code||to_char(a.vch_date,'yyyymmdd')||a.type ='" + fstr + "'";
                            }
                            break;
                    }
                    break;
                #endregion
                #region crm_reports
                case "crm_reports":
                    switch (btnval.ToUpper())
                    {
                        case "LEADDETAIL":
                            string[] dt_url = sgen.GetSession(MyGuid, "SSEEKVAL").ToString().Split('_');
                            String URL = dt_url[0].ToString();

                            mq = "select '-' as fstr,vch_num LEAD_NO,vch_date LEAD_DATE,'' PARENT_ACCOUNT,cust_id ACCOUNT_NO,cust_name ACCOUNT_NAME,'' COUNTRY,'' STATE,'' CITY,pincode PIN_CODE,'' BUSINESS_TYPE" +
                                ",address ACCOUNT_ADDRESS,'' SELECT_CONTACT_PERSON,cp_fname FIRST_NAME, cp_mname MIDDLE_NAME,cp_lname LAST_NAME, desig DESIGNATION,dept DEPARTMENT" +
                                ", emailid EMAIL_ID,mobile_no MOBILE_NO, contact_no CONTACT_NO,al_contact ALTERNATE_CONTACT_NO, dob DATE_OF_BIRTH,doa DATE_OF_ANNIVERSARY" +
                                ", cp_add CP_ADDRESS,''LEAD_OWNER,'' LEAD_SOURCE,'' LEAD_STATUS,ot_source OTHER_LEAD_SOURCE,'' PRODUCT,'' ASSIGNED_TO,'' COUNTRY_CODE" +
                                ",refered_by REFERED_BY,'' LEAD_ACCOUNT_TYPE,cust_name NEW_ACCOUNT_NAME, cpcontother CP_OTHER_CONTACT_NO,cpemailother CP_OTHER_EMAIL_ID" +
                                ", pr_loc PREFERRED_LOCATION,remark REMARK,budget BUDGET, funding FUNDING,''PARTY_LOCATION from  lead_master a where 1 = 2";
                            DataTable dtmain = sgen.getdata(userCode, mq);
                            condition = "";
                            string cond = "fstr";

                            // DataTable dtdaily = (DataTable)sgen.GetSession(MyGuid, "tmp_lead");
                            DataTable dtdaily = cmd_Fun.getsessiondt(userCode, "LEAD MASTER", "select id,param1,param2,upper(param3) param3 ,name from controls where trim(upper(param5))='LEAD MASTER' and type='VDC' and client_id='" + clientid_mst + "'");
                            dtdaily = sgen.seekval_dt(dtdaily, "param2='Y'");
                            string[] param3 = dtdaily.AsEnumerable().Select(r => r.Field<string>("Param3")).ToArray();
                            if (param3.Length > 0)
                            {
                                foreach (DataColumn col in dtmain.Columns)
                                {
                                    string colname = col.ToString();
                                    for (Int32 i = 0; i < param3.Length; i++)
                                    {
                                        string ctrcol = param3[i].ToString();
                                        if (ctrcol.Contains('.'))
                                        {
                                            ctrcol = ctrcol.Replace('.', ' ');
                                        }
                                        if (ctrcol.Contains(' '))
                                        {
                                            ctrcol = ctrcol.TrimEnd().Replace(' ', '_');
                                        }
                                        if (ctrcol.Contains('/'))
                                        {
                                            ctrcol = ctrcol.TrimEnd().Replace('/', '_');
                                        }
                                        if ((colname == ctrcol) && (!cond.Contains(colname)))
                                        {
                                            cond = cond + ',' + ctrcol;
                                        }
                                    }
                                }
                            }
                            cond = cond + ",Entry_By,Entry_Date";

                            cmd = "select distinct (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr, a.vch_num as LEAD_NO," +
                                "to_char(convert_tz(a.vch_date, 'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') as LEAD_DATE,a.cust_id ACCOUNT_NO,a.cust_name ACCOUNT_NAME,nvl(at.first_name||' '||replace" +
                                "(at.middle_name,'0','')||''||replace(at.last_name,'0',''),'-') as ASSIGNED_TO,nvl(p.master_name, '-') as PRODUCT,nvl(bt.master_name, '-') as BUSINESS_TYPE" +
                                ",nvl(a.cp_id, '-') SELECT_CONTACT_PERSON,nvl(atp.master_name, '-') as LEAD_ACCOUNT_TYPE, nvl(a.refered_by, '-') REFERED_BY,a.pincode PIN_CODE, a.address " +
                                "ACCOUNT_ADDRESS, a.cp_fname FIRST_NAME, a.cp_mname MIDDLE_NAME, a.cp_lname LAST_NAME, a.desig DESIGNATION, a.dept DEPARTMENT, a.emailid EMAIL_ID," +
                                " a.mobile_no MOBILE_NO, a.contact_no CONTACT_NO, a.al_contact ALTERNATE_CONTACT_NO,to_char(a.dob,'" + sgen.Getsqldateformat() + "') DATE_OF_BIRTH,to_char(a.doa,'" + sgen.Getsqldateformat() + "') DATE_OF_ANNIVERSARY, c.master_name as " +
                                "LEAD_SOURCE,nvl(d.master_name, '-') as LEAD_STATUS, b.c_name PARENT_ACCOUNT, cs.std_code COUNTRY_CODE,'-' REMARK,a.ot_source as OTHER_LEAD_SOURCE,a.cp_add as CP_ADDRESS, ud.first_name || ' ' || replace(ud.middle_name, '0', '') || '' || replace(ud.last_name, '0', '') as " +
                                "LEAD_OWNER,a.cust_name NEW_ACCOUNT_NAME, a.cpcontother CP_OTHER_CONTACT_NO, a.cpemailother CP_OTHER_EMAIL_ID,(case when a.ploc = '001' then 'Domestic' " +
                                "when a.ploc = '002' then 'Overseas' else a.ploc end) as PARTY_LOCATION,a.pr_loc PREFERRED_LOCATION, a.budget BUDGET, a.funding FUNDING," +
                                " nvl(cs.country_name, '-') as COUNTRY,nvl(cs.state_name, '-') as STATE,nvl(cs.city_name, '-') CITY,u.first_name || ' ' || replace(u.middle_name, '0', '') " +
                                "|| '' || replace(u.last_name, '0', '') as Entry_By,to_char(convert_tz(a.ent_date, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') " +
                                "as Entry_Date from lead_master a " +
                                "left join master_setting c on a.ld_source = c.master_id and c.type = 'SRC' and find_in_set(c.client_unit_id, '" + unitid_mst + "')= 1 " +
                                "left join master_setting d on a.ld_status = d.master_id and d.type = 'LST' and find_in_set(d.client_unit_id, '" + unitid_mst + "')= 1 " +
                                "left join master_setting p on a.ld_product = p.master_id and p.type = 'PNM' and find_in_set(p.client_unit_id, '" + unitid_mst + "')= 1 " +
                                "left join master_setting bt on a.bsn_type = bt.master_id and bt.type = 'CMN' and find_in_set(bt.client_unit_id, '" + unitid_mst + "')= 1 " +
                                "left join master_setting atp on a.client_type = atp.master_id and atp.type = 'CLI' and find_in_set(atp.client_unit_id, '" + unitid_mst + "')= 1 " +
                                "left join user_details ud on ud.rec_id = a.ld_owner left join user_details at on at.rec_id = a.ld_owner " +
                                "left join country_state cs on cs.rec_id = a.city " +
                                "left join clients_mst b on b.parent_id in(select distinct b.parent_id from clients_mst b" +
                                " where b.vch_num= a.cust_id and b.client_unit_id='" + unitid_mst + "' ) and a.cust_id=b.vch_num  and b.client_unit_id='" + unitid_mst + "'" +
                                " inner join  user_details u on u.vch_num = a.ent_by where a.type = 'LED' and a.client_unit_id = '" + unitid_mst + "' and  a.client_id||a.client_unit_id||a.type|| a.ent_by='" + URL + "' and to_date(to_char(a.vch_date,'" + sgen.Getsqldateformat() + "'),'" + sgen.Getsqldateformat() + "') between " +
                    "to_date('" + dt_url[1].ToString() + "','" + sgen.Getsqldateformat() + "') and to_date('" + dt_url[2].ToString() + "','" + sgen.Getsqldateformat() + "')";


                            cmd = "select  " + cond + " from (" + cmd + ")a";

                            break;
                        case "ASSIGNEDDETAIL":
                            dt_url = sgen.GetSession(MyGuid, "SSEEKVAL").ToString().Split('_');
                            URL = dt_url[0].ToString();
                            cmd = "select (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr," +
                               " a.vch_num as lead_no,to_char(convert_tz(a.vch_date, 'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') as lead_date" +
                               ",a.cust_name as Customer_Name, nvl(a.refered_by,'-') refered_by ,c.master_name as Lead_source,d.master_name as lead_status," +
                               " ud.first_name || ' ' || replace(ud.middle_name, '0', '') || '' || replace(ud.last_name, '0', '') as lead_Assigned_To," +
                               "u.first_name || ' ' || replace(u.middle_name, '0', '') || '' || replace(u.last_name, '0', '') as Entry_By," +
                               "to_char(convert_tz(a.ent_date, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') as Entry_Date from " +
                               " lead_master a left join (select col5 as asg_to,col2 as lead_id from enx_tab2 where type='VFC' and client_unit_id='" + unitid_mst + "' " +
                               " and vch_num in (select max(vch_num) from enx_tab2 where type = 'VFC' and client_unit_id = '" + unitid_mst + "' group by col2))  b on a.vch_num = b.lead_id   " +
                               "left join master_setting c on a.ld_source = c.master_id and c.type = 'SRC' and find_in_set(c.client_unit_id, '" + unitid_mst + "')= 1 " +
                               "left join master_setting d on a.ld_status = d.master_id and d.type = 'LST' and find_in_set(d.client_unit_id, '" + unitid_mst + "')= 1 " +
                               "left join user_details ud on ud.rec_id = b.asg_to inner join  user_details u on u.vch_num = a.ent_by where a.type = 'LED' and " +
                               "a.client_unit_id = '" + unitid_mst + "' and  a.client_id||a.client_unit_id||a.type|| b.asg_to='" + URL + "' and to_date(to_char(a.vch_date,'" + sgen.Getsqldateformat() + "'),'" + sgen.Getsqldateformat() + "') between " +
                    "to_date('" + dt_url[1].ToString() + "','" + sgen.Getsqldateformat() + "') and to_date('" + dt_url[2].ToString() + "','" + sgen.Getsqldateformat() + "')";
                            break;
                        case "CLOSED":
                            URL = sgen.GetSession(MyGuid, "SSEEKVAL").ToString();
                            cmd = "select  a.vch_num, a.col1 as followup,(case when col12='Y' then 'CLOSED' else 'InProcess' end ) as lead_closed,a.col4 as reason_closing,to_char(convert_tz(a.date1,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') as date1" +
                            ",to_char(convert_tz(a.date2,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') as date2 ,first_name||' '||replace(middle_name,'0','')||" +
                                 "''||replace(last_name,'0','') as user_name , n.master_name as nxt_fl from enx_tab2 a left join user_details ud on a.col5 = " +
                                 "ud.vch_num left join master_setting n on n.master_id = a.col7 and n.type = 'NAM' and " +
                                    "find_in_set(n.client_unit_id, a.client_unit_id)= 1 where a.type = 'VFC' and a.client_id||a.client_unit_id||a.col2 ='" + URL + "'" +
                                 " order by a.vch_num desc";
                            break;
                    }
                    break;
                #endregion
                #region Site Visit
                case "s_visit":
                    switch (btnval.ToUpper())
                    {
                        case "PARTY":
                            //                         
                            cmd = "select (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr, a.c_name as Account_Name,a.type_desc as Search_text," +
                                 "a.cpname as PerName,(case when a.cplandno='0000000000' then '-' else a.cplandno end) as PerContact,(case when a.cpemail='ab@ab.ab' then '-' else a.cpemail end) as PerEmail, 'Account Detail' as Data_Source from clients_mst a " +
                                 "where a.type in ('BCD') and a.client_unit_id='" + unitid_mst + "' and substr(a.vch_num,0,3)='303'";
                            break;
                        case "CONTACT":
                            if (sgen.GetSession(MyGuid, "S_Account") != null)
                            {
                                cmd = "select client_id||client_unit_id||vch_num||to_char(vch_date,'yyyymmdd')||type||ref_code as fstr" +
                                    ",(cpname || ' ' || replace(cp_mname, '0', '') || ' ' || replace(cp_lname, '0', '')) contact_person,(case when cpcont='0000000000' then '-' else cpcont end) as PerContact," +
                                    "(case when cpemail='ab@ab.ab' then '-' else cpemail end) as PerEmail from clients_mst where type='BCD' and" +
                                    " ref_code='" + sgen.GetSession(MyGuid, "S_Account").ToString() + "' and client_unit_id='" + unitid_mst + "' and cpname!='0'";
                            }
                            break;
                        case "EDIT":
                            cmd = "select a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type as fstr, a.vch_num  Doc_No, to_char(convert_tz(a.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') Doc_Date " +
                         ",a.col69  Site_No ,b.c_name as Account_Name ,(replace(c.cpname,'0','-') || ' ' || replace(c.cp_mname, '0', '') || ' ' || replace(c.cp_lname, '0', '')) contact_person," +
                         "(case when  length(a.col23)=1 and a.col23='0' then '-' else a.col23 end)  Architect," +
                         "(case when a.col81 = 'Y' then 'Done' else 'Pending' end ) as SITE_HANDOVER from kc_tab a" +
                         " left join clients_mst b on a.col70=b.vch_num and b.client_unit_id='" + unitid_mst + "' and b.type='BCD'" +
                         " left join clients_mst c on a.col71=c.vch_num and c.client_unit_id='" + unitid_mst + "'  and a.col70=c.ref_code" +
                         " where a.type = 'SVR' and a.client_unit_id='" + unitid_mst + "' order by a.vch_num desc";
                            break;

                        case "VIEW":
                            //cmd = "select a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type as fstr, a.vch_num  Doc_No, to_char(convert_tz(a.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') Doc_Date " +
                            //   ",a.col69  Site_No ,b.c_name as Account_Name ,(replace(c.cpname,'0','-') || ' ' || replace(c.cp_mname, '0', '') || ' ' || replace(c.cp_lname, '0', '')) contact_person," +
                            //   "(case when  length(a.col23)=1 and a.col23='0' then '-' else a.col23 end)  Architect," +
                            //   "(case when  length(a.col26)=1 and a.col26='0' then '-' else a.col26 end) MEASUREMENT_DONE_BY ," +
                            //   "(case when  length(a.col29)=1 and a.col29='0' then '-' else a.col29 end) DRAWINGS_PREPARED_BY ," +
                            //   "(case when  length(a.col38)=1 and a.col38='0' then '-' else a.col38 end)  FINAL_DISCUSSION_HELD_WITH ," +
                            //   "(case when  length(a.col15)=1 and a.col15='0' then '-' else a.col15 end) as Site_Handled_By," +
                            //   "(case when a.col59 = 'Y' then 'Done' else 'Pending' end ) as DISCUSSION_WITH_CUSTOMER ,(case when a.col60 = 'Y' then 'Done' else 'Pending' end ) as Specification " +
                            //   ",(case when a.col61 = 'Y' then 'Done' else 'Pending' end ) as Markings ,(case when a.col62 = 'Y' then 'Done' else 'Pending' end ) as Status_2D  , (case when a.col47 = 'Y' then 'Done' else 'Pending' end ) as PRD_Upper_BOX " +
                            //   ", (case when a.col1 = 'Y' then 'Done' else 'Pending' end ) as PRD_Lower_BOX " +
                            //   ", (case when a.col2 = 'Y' then 'Done' else 'Pending' end ) as DISPATCH_Upper_BOX " +
                            //   ", (case when a.col3 = 'Y' then 'Done' else 'Pending' end ) as DISPATCH_Lower_BOX " +
                            //   ", (case when a.col4 = 'Y' then 'Done' else 'Pending' end ) as INSTALLED_Upper_BOX " +
                            //   ", (case when a.col5 = 'Y' then 'Done' else 'Pending' end ) as INSTALLED_Lower_BOX ," +
                            //   "(case when a.col63 = 'Y' then 'Done' else 'Pending' end ) as Boxes_Status,(case when a.col64 = 'Y' then 'Done' else 'Pending' end ) as REMEASUREMENT_STATUS " +
                            //   ",(case when a.col65 = 'Y' then 'Done' else 'Pending' end ) as POST_BOX_CIVIL_WORK_STATUS " +
                            //   "  , (case when a.col12 = 'Y' then 'Done' else 'Pending' end ) as PRD_SHUTTERS_STATUS" +
                            //   ", (case when a.col13 = 'Y' then 'Done' else 'Pending' end ) as INSTALLED_SHUTTERS_STATUS" +
                            //   ", (case when a.col14 = 'Y' then 'Done' else 'Pending' end ) as DISPATCH_SHUTTERS_STATUS " +
                            //   ",(case when a.col66 = 'Y' then 'Done' else 'Pending' end ) as SHUTTERS_STATUS " +
                            //   ",(case when a.col67 = 'Y' then 'Done' else 'Pending' end ) as VISIT_SCHEDULE " +
                            //  ",(case when a.col81 = 'Y' then 'Done' else 'Pending' end ) as SITE_HANDOVER " +
                            //  "from kc_tab a" +
                            //   " left join clients_mst b on a.col70=b.vch_num and a.client_unit_id=b.client_unit_id and b.type='BCD'" +
                            //   " left join clients_mst c on a.col71=c.vch_num and a.client_unit_id=c.client_unit_id  and a.col70=c.ref_code" +
                            //   " where a.type = 'SVR' and a.client_unit_id='" + unitid_mst + "' order by a.vch_num desc";

                            cmd = "select a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type as fstr, a.vch_num  Doc_No, to_char(convert_tz(a.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') Doc_Date " +
                          ",a.col69  Site_No ,b.c_name as Account_Name ,(replace(c.cpname,'0','-') || ' ' || replace(c.cp_mname, '0', '') || ' ' || replace(c.cp_lname, '0', '')) contact_person," +
                          "(case when  length(a.col23)=1 and a.col23='0' then '-' else a.col23 end)  Architect," +
                          "(case when  length(a.col26)=1 and a.col26='0' then '-' else a.col26 end) MEASUREMENT_DONE_BY ," +
                          "(case when  length(a.col29)=1 and a.col29='0' then '-' else a.col29 end) DRAWINGS_PREPARED_BY ," +
                          "(case when  length(a.col38)=1 and a.col38='0' then '-' else a.col38 end)  FINAL_DISCUSSION_HELD_WITH ," +
                          "(case when  length(a.col15)=1 and a.col15='0' then '-' else a.col15 end) as Site_Handled_By," +
                          "(case when a.col59 = 'Y' then 'Done' else 'Pending' end ) as DISCUSSION_WITH_CUSTOMER ,(case when a.col81 = 'Y' then 'Done' else 'Pending' end ) as SITE_HANDOVER " +
                         "from kc_tab a" +
                          " left join clients_mst b on a.col70=b.vch_num and b.client_unit_id='" + unitid_mst + "' and b.type='BCD'" +
                          " left join clients_mst c on a.col71=c.vch_num and c.client_unit_id='" + unitid_mst + "'  and a.col70=c.ref_code" +
                          " where a.type = 'SVR' and a.client_unit_id='" + unitid_mst + "' order by a.vch_num desc";
                            break;
                    }
                    break;
                #endregion
                #region track_rpt
                case "track_rpt":
                    switch (btnval.ToUpper())
                    {
                        case "ADMIN_TRACK":
                            if (sgen.GetSession(MyGuid, "track") != null)
                            {
                                // reena 3 line
                                string[] trackdata = sgen.GetSession(MyGuid, "track").ToString().Split(',');

                                // reena 2 line done
                                cmd = "select distinct '' as fstr, a.Col1 as latitute,a.Col2 as longitude,a.Col3 as col3,a.Col4 as  col4,a.Col5 as created_datetime,a.created_dt,b.first_name||' '||replace(b.middle_name,'0','')||''||replace(b.last_name,'0','') as user_name from (Select lat as Col1," +
                                      " lang as Col2, '-' as Col3, '-' as Col4, to_char(created_date, '" + sgen.Getsqldatetimeformat() + "') as Col5 ,to_char(created_date,'" + sgen.Getsqldateformat() + "') as created_dt,emp_code  from tracks Where type = 'TRK' and emp_code =" +
                                      " '" + trackdata[2] + "' and to_date(to_char(created_date, 'ddmmyyyy'), 'ddmmyyyy') BETWEEN TO_DATE('" + trackdata[0] + "','yyyy-MM-dd')  AND " +
                                      "TO_DATE('" + trackdata[1] + "','yyyy-MM-dd') and(provider = 'network' or provider = 'gps') ) a inner join user_details b on b.rec_id=a.emp_code    ORDER BY col5 asc  ";
                            }
                            break;
                        case "ADMIN":
                            if (sgen.GetSession(MyGuid, "track") != null)
                            {
                                string[] trackdata = sgen.GetSession(MyGuid, "track").ToString().Split(',');
                                cmd = " Select '' fstr, to_char(created_date,'yyyy-MM-dd hh:mi:ss') as DateTime, vch_num as Report_No,col6 as Message " +
                                    "from enx_tab Where ent_by = '" + trackdata[2] + "' and client_id = '" + clientid_mst + "' and client_unit_id" +
                                    " = '" + unitid_mst + "' and type = 'PER' and to_date(to_char(created_date,'ddmmyyyy'),'ddmmyyyy') BETWEEN TO_DATE" +
                                    "('" + trackdata[0] + "','yyyy-MM-dd')  AND TO_DATE('" + trackdata[1] + "','yyyy-MM-dd ') ORDER BY VCH_NUM ASC ";
                            }
                            break;
                        case "PRV":
                            if (sgen.GetSession(MyGuid, "track") != null)
                            {
                                string[] trackdata = sgen.GetSession(MyGuid, "track").ToString().Split(',');
                                cmd = " Select '' fstr, to_char(created_date,'yyyy-MM-dd hh:mi:ss') as DateTime, vch_num as Report_No,col6 as Message" +
                                    " from enx_tab Where ent_by = '" + userid_mst + "' and client_id = '" + clientid_mst + "' and client_unit_id" +
                                    " = '" + unitid_mst + "' and type = 'PER' and to_date(to_char(created_date,'ddmmyyyy'),'ddmmyyyy') BETWEEN TO_DATE" +
                                    "('" + trackdata[0] + "','yyyy-MM-dd')  AND TO_DATE('" + trackdata[1] + "','yyyy-MM-dd ') ORDER BY VCH_NUM ASC ";
                            }
                            break;
                    }
                    break;
                #endregion
                # region good_wishes
                case "good_wishes":
                    switch (btnval.ToUpper())
                    {
                        case "PRV":
                            {
                                cmd = "select '' as fstr, c_name,contact_person,max(dob_message) dob_message,max(doa_message) doa_message from" +
                                    " ( select replace(nvl(b.c_name,'-'),'0','-') c_name,((replace(b.cpname,'0','-') || ' ' || replace(b.cp_mname, '0', '') " +
                                    "||  ' ' || replace(b.cp_lname, '0', ''))) contact_person, a.col31 as DOB_message,'-' as DOA_Message " +
                                    "from kc_tab a inner  join clients_mst b on find_in_set(a.col41, b.vch_num) = 1 and find_in_set(a.col73, b.ref_code) = 1 and b.type = 'BCD'" +
                                    " where a.type = 'WIS' and a.client_unit_id='" + unitid_mst + "' and a.vch_num='" + param1 + "'" +
                                    "union all" +
                                    " select replace(nvl(b.c_name,'-'),'0','-') c_name,((replace(b.cpname, '0', '-') || ' ' || replace(b.cp_mname, '0', '') " +
                                    "|| ' ' || replace(b.cp_lname, '0', ''))) contact_person,'-' DOB_message , a.col32 DOA_Message " +
                                    "from kc_tab a inner  join clients_mst b on find_in_set(a.col48, b.vch_num) = 1 and find_in_set(a.col74, b.ref_code) = 1 and b.type = 'BCD' " +
                                    "where a.type = 'WIS' and a.client_unit_id='" + unitid_mst + "' and a.vch_num='" + param1 + "')" +
                                    " a group by c_name, contact_person";


                            }
                            break;
                    }
                    break;
                #endregion
                #region s_hover
                case "s_hover":
                    switch (btnval.ToUpper())
                    {
                        case "PARTY":
                            {
                                cmd = "select distinct (b.client_id||b.client_unit_id||b.vch_num||to_char(b.vch_date,'yyyymmdd')||b.type) as fstr," +
                                    " b.c_name as Site_Name ,(case when b.cplandno='0000000000' then '-' else b.cplandno end) as Contactno,b.addr " +
                                    "from  kc_tab a inner join clients_mst b on a.col70 = b.vch_num and b.type = 'BCD' and find_in_set(a.client_unit_id, b.client_unit_id) = 1  where a.type = 'SVR' and a.client_unit_id = '" + unitid_mst + "' and b.c_name != '0'";
                            }
                            break;
                        case "EDIT":
                        case "VIEW":
                        case "PRINT":
                            {
                                cmd = "select distinct (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.vch_num as Doc_No," +
                                    " b.c_name as Site_Name ,b.addr, (case when to_char(a.date1, '" + sgen.Getsqldateformat() + "') = '01/01/1900' then '-' else to_char(a.date1, '" + sgen.Getsqldateformat() + "') end ) Date_of_Material_Dispatch" +
                                    ", (case when to_char(a.date2, '" + sgen.Getsqldateformat() + "') = '01/01/1900' then '-' else to_char(a.date1, '" + sgen.Getsqldateformat() + "') end ) Date_of_Installation_Started" +
                                    ", (case when to_char(a.date3, '" + sgen.Getsqldateformat() + "') = '01/01/1900' then '-' else to_char(a.date1, '" + sgen.Getsqldateformat() + "') end ) Date_of_Installation_Ended" +
                                    ", (case when length(a.col21)=1  and a.col21='0' then '-' else a.col21 end ) as Person_Installing " +
                                    "from  kc_tab a inner join clients_mst b on a.col70 = b.vch_num and b.type = 'BCD' and find_in_set(a.client_unit_id, b.client_unit_id) = 1  where a.type = 'SHO' and a.client_unit_id = '" + unitid_mst + "' and b.c_name != '0' and substr(b.vch_num,0,3)='303' order by a.vch_num desc";
                            }
                            break;
                    }
                    break;
                #endregion
                #region bulk upload
                case "bulk_acc":
                    switch (btnval.ToUpper())
                    {
                        case "SELCTPAGE":
                            {
                                //cmd = "select 'BCD_ADTL' AS Page_code, 'BCD' as ID ,'ACCOUNT DETAIL' as Page_list from dual union all" +
                                //    "  select 'BCD_EXPTY' AS Page_code,'BCD' as ID ,'EXPORT PARTY DETAIL' as Page_list from dual union all " +
                                //    "select 'PVD_VENDTL' AS Page_code,'PVD' as ID ,'NEW VENDOR DETAIL' as Page_list from dual union all " +
                                //    "select 'PVD_IMPVNDR' AS Page_code,'PVD' as ID,'NEW IMPORT VENDOR' as Page_list from dual union all" +
                                //    " select 'PVD_PUBLISHR' AS Page_code, 'PVD' as ID ,'NEW PUBLISHER' as Page_list from dual union all " +
                                //    " select 'BCD_CLIENT' AS Page_code, 'PVD' as ID ,'NEW ACCOUNT DETAIL' as Page_list from dual union all " +
                                //    "select 'PDA_PRSPDTA' AS Page_code, 'PDA' as ID ,'PROSPECT DATA' as Page_list from dual";
                                if (m_module3 == "crmvmain")
                                {
                                    cmd = "select 'BCD_CLIENT' AS Page_code, '303' as ID ,'NEW ACCOUNT DETAIL' as Page_list from dual  union all " +
                                          "select 'PRO_PRSPDTA' AS Page_code, '909' as ID ,'PROSPECT DATA' as Page_list from dual";
                                }
                                //else if (m_module3 == "eximmain")
                                //    {
                                //        cmd = "select 'BCD_ADTL' AS Page_code, '02' as ID ,'EXPORT PARTY DETAIL' as Page_list from dual union all " +
                                //              "select 'PVD_IMPVNDR' AS Page_code,'22' as ID,'NEW IMPORT VENDOR' as Page_list from dual";
                                //    }
                                else if ((m_module3 == "purmain") || (m_module3 == "paymain") || (m_module3 == "bhmain"))
                                {
                                    cmd = "select 'BCD_VENDTL' AS Page_code, '203' as ID ,'NEW VENDOR DETAIL' as Page_list from dual";
                                }
                                else if (m_module3 == "lbrmain")
                                {
                                    cmd = "select 'BCD_PUBLISHR' AS Page_code, '203' as ID ,'NEW PUBLISHER' as Page_list from dual ";
                                }
                                else if (m_module3 == "bnpmain")
                                {
                                    cmd = "select 'BCD_ADTL' AS Page_code, '303' as ID ,'ACCOUNT DETAIL' as Page_list from dual ";
                                }
                            }
                            break;
                        case "EDIT":
                        case "VIEW":
                            {
                                cmd = "select distinct (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr," +
                                    " b.c_name as Site_Name ,b.addr, to_char(a.date1,'" + sgen.Getsqldateformat() + "') Date_of_Material_Dispatch" +
                                    ", to_char(a.date2,'" + sgen.Getsqldateformat() + "') Date_of_Installation_Started" +
                                    ", to_char(a.date3,'" + sgen.Getsqldateformat() + "') Date_of_Installation_Ended" +
                                    ", a.col21 as Person_Installing " +
                                    "from  kc_tab a inner join clients_mst b on a.col70 = b.vch_num and b.type = 'BCD' and find_in_set(a.client_unit_id, b.client_unit_id) = 1  where a.type = 'SHO' and " +
                                    "a.client_unit_id = '" + unitid_mst + "' and b.c_name != '0'";
                            }
                            break;
                    }
                    break;
                #endregion
                #region Transaction Request
                case "trans_req":
                    switch (btnval.ToUpper())
                    {
                        case "PARENT":
                            cmd = cmd_Fun.showparty(unitid_mst);
                            //cmd = "select (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,b.c_name as Parent_Account," +
                            //  "a.c_name as Account_Name,a.pincode as Pincode,a.isgstr IsGst,a.c_gstin as GSTIN,a.type_desc as Search_text," +
                            //  "a.cpname as PerName,(case when a.cpcont='0000000000' then '' else a.cpcont end)  as PerContact,(case when a.cpaltcont='0000000000' then '-' else a.cpaltcont end) as PerAltContact," +
                            //  "(case when a.cpemail='ab@ab.ab' then '-' else a.cpemail end )  as PerEmail,a.cpdesig " +
                            //  "as PerDesig, 'Account Detail' as Data_Source from clients_mst a left join clients_mst b on a.parent_id=b.vch_num " +
                            //  " and a.client_unit_id=b.client_unit_id and b.type='BCD' where a.type in ('BCD') and a.client_unit_id='" + unitid_mst + "' and substr(a.vch_num,0,3)='303'";
                            break;
                        case "SCH_PUR":
                        case "SCH_RED":
                        case "SCH_FROM":
                        case "SCH_TO":
                            cmd = "select (a.client_id||a.client_unit_id||a.master_id||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr," +
                                "a.master_id DocNo,a.master_name Scheme_Name,b.master_name Scheme_Type,a.group_name Description," +
                                "(CASE when a.status = 'Y' THEN 'Active' when a.status = '' THEN 'Active' else 'Inactive' end) Status from master_setting a " +
                                " inner join master_setting b on b.master_id=a.classid " +
                                "and b.type='SCH' and find_in_set(b.client_unit_id,'" + unitid_mst + "')=1" +
                                " where a.type in ('SHN') and a.client_unit_id='" + unitid_mst + "'";
                            break;
                        case "EDIT":
                        case "VIEW":
                            string trans_type = "";
                            string cond = "fstr,Doc_No,type_of_trans";
                            if (sgen.GetSession(Myguid, "dttrans") != null)
                            {
                                if (mid_mst == "35002.1")//Transaction Request
                                {
                                    mq = @"Select ''  fstr,'' Doc_No,'' PARENT_ACCOUNT, '' ACCOUNT_NAME,'' PAN_NO, '' EMAIL_ID, '' CONTACT_NO,'' CONTACT_NAME,'' SELECT_SCHEME_PURCHASE,'' SCHEME_TYPE_PURCHASE
,''SCHEME_NAME_PURCHASE,'' SCH_TYPE_PURCHASE_MANUAL,
'' SCHEME_OPTION_PURCHASE,'' INVESTMENT_OPTION,'' INVESTMENT_AMOUNT,'' INVESTMENT_DATE,'' REMARK_PURCHASE,
'' SELECT_SCHEME_REDEMPTIONS,'' SELECT_SCH_TYPE_REDEMPTIONS,'' SCHEME_NAME_REDEMPTIONS,'' SCHEME_TYPE_REDEMPTIONS,
'' SCHEME_OPTION_REDEMPTIONS,'' FOLIO_NO_REDEMPTIONS,
'' REDEMPTION_AMOUNT,'' REDEMPTION_DATE,'' REMARK_REDEMPTION,'' REDEMPTION_TYPE,'' FROM_SCHEME
,'' SCH_TYPE_FROM_SCHEME_SWITCHES,
'' SCHEME_NAME_FROM_SWITCHES,'' SCHEME_TYPE_FROM_SWITCHES,'' SCHEME_OPTION_FROM_SWITCHES,''
TO_SCHEME,'' SCH_TYPE_TO_SCHEME_SWITCHES,'' SWITCH_TYPE,'' SCHEME_NAME_TO_SWITCHES,'' SCHEME_TYPE_TO_SWITCHES,'SCHEME_TYPE_TO_SCHEME_SWITCHES','' SCHEME_OPTION_TO_SWITCHES
,'' FOLIO_NO_SWITCH ,'' SWITCH_AMOUNT,'' SWITCH_DATE,'' REMARK_SWITCH from trans_req where 1 = 2";
                                }
                                else if (mid_mst == "35002.4")//Purchase Request
                                {
                                    trans_type = "and  a.ispur='Y' ";
                                    mq = @"Select ''  fstr,'' Doc_No,'' PARENT_ACCOUNT, '' ACCOUNT_NAME,'' PAN_NO, '' EMAIL_ID, '' CONTACT_NO,'' CONTACT_NAME,'' SELECT_SCHEME_PURCHASE,'' SCHEME_TYPE_PURCHASE
,''SCHEME_NAME_PURCHASE,'' SCH_TYPE_PURCHASE_MANUAL,
'' SCHEME_OPTION_PURCHASE,'' INVESTMENT_OPTION,'' INVESTMENT_AMOUNT,'' INVESTMENT_DATE,'' REMARK_PURCHASE from trans_req where 1 = 2";
                                }
                                else if (mid_mst == "35002.5")//Redemption Request
                                {
                                    trans_type = "and  a.isrdp='Y' ";
                                    mq = @"Select ''  fstr,'' Doc_No,'' PARENT_ACCOUNT, '' ACCOUNT_NAME,'' PAN_NO, '' EMAIL_ID, '' CONTACT_NO,'' CONTACT_NAME,
'' SELECT_SCHEME_REDEMPTIONS,'' SELECT_SCH_TYPE_REDEMPTIONS,'' SCHEME_NAME_REDEMPTIONS,'' SCHEME_TYPE_REDEMPTIONS,
'' SCHEME_OPTION_REDEMPTIONS,'' FOLIO_NO_REDEMPTIONS,
'' REDEMPTION_AMOUNT,'' REDEMPTION_DATE,'' REMARK_REDEMPTION,'' REDEMPTION_TYPE from trans_req where 1 = 2";
                                }
                                else if (mid_mst == "35002.6")//Switch Request
                                {
                                    trans_type = "and  a.isswt='Y' ";
                                    mq = @"Select ''  fstr,'' Doc_No,'' PARENT_ACCOUNT, '' ACCOUNT_NAME,'' PAN_NO, '' EMAIL_ID, '' CONTACT_NO,'' CONTACT_NAME,'' FROM_SCHEME
,'' SCH_TYPE_FROM_SCHEME_SWITCHES,
'' SCHEME_NAME_FROM_SWITCHES,'' SCHEME_TYPE_FROM_SWITCHES,'' SCHEME_OPTION_FROM_SWITCHES,''
TO_SCHEME,'' SCH_TYPE_TO_SCHEME_SWITCHES,'' SWITCH_TYPE,'' SCHEME_NAME_TO_SWITCHES,'' SCHEME_TYPE_TO_SCHEME_SWITCHES,'' SCHEME_TYPE_TO_SWITCHES,'' SCHEME_OPTION_TO_SWITCHES
,'' FOLIO_NO_SWITCH ,'' SWITCH_AMOUNT,'' SWITCH_DATE,'' REMARK_SWITCH from trans_req where 1 = 2";
                                }
                                DataTable dtmain = sgen.getdata(userCode, mq);
                                DataTable dtdaily = (DataTable)sgen.GetSession(MyGuid, "dttrans");
                                dtdaily = sgen.seekval_dt(dtdaily, "param2='Y'");
                                var dtdist = dtdaily.AsEnumerable().Select(row => row.Field<string>("id")).Distinct().ToList();
                                string[] param3 = dtdaily.AsEnumerable().Select(r => r.Field<string>("Param3")).ToArray();
                                if (param3.Length > 0)
                                {
                                    foreach (DataColumn col in dtmain.Columns)
                                    {
                                        string colname = col.ToString();
                                        for (Int32 i = 0; i < param3.Length; i++)
                                        {
                                            string ctrcol = param3[i].ToString();
                                            if (ctrcol.Contains('.'))
                                            {
                                                ctrcol = ctrcol.Replace('.', ' ');
                                            }
                                            if (ctrcol.Contains(' '))
                                            {
                                                ctrcol = ctrcol.TrimEnd().Replace(' ', '_');
                                            }
                                            if (ctrcol.Contains('/'))
                                            {
                                                ctrcol = ctrcol.TrimEnd().Replace(' ', '_');
                                            }
                                            if (ctrcol.Contains('('))
                                            {
                                                int indx = ctrcol.IndexOf('(');
                                                // ctrcol = ctrcol.TrimEnd().Remove(indx);
                                                ctrcol = ctrcol.Substring(0, indx) + ctrcol.Substring(indx + 1);
                                            }
                                            if (ctrcol.Contains(')'))
                                            {
                                                ctrcol = ctrcol.TrimEnd().Replace(')', ' ');
                                            }
                                            if (colname == ctrcol.Trim())
                                            {
                                                cond = cond + ',' + ctrcol;
                                            }
                                        }
                                    }
                                }
                                cmd = "select (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,((case when a.ispur='Y' then 'Purc' else '' end)" +
                                    "||(case when a.isrdp='Y' then ',' else '' end) ||(case when a.isrdp = 'Y' then 'Rdp' else '' end)|| (case when a.isrdp = 'Y' then ',' else '' end)||" +
                                    "     (case when a.isswt = 'Y' then 'Switch' else '' end)) as type_of_trans," +
                                                                  " a.vch_num Doc_No, c.c_name as Parent_Account, b.c_name as Account_Name, (case when b.panno='AAAAA0000A' then '-' else b.panno end) PAN_NO ," +
                                                                  "(case when  b.cpemail='ab@ab.ab' then '-' else b.cpemail end ) Email_ID ,(case when b.cpcont='0000000000' then '-' else b.cpcont end) as Contact_No," +
                                                                  "((b.cpname || ' ' || replace(b.cp_mname, '0', '') || ' ' || replace(b.cp_lname, '0', ''))) CONTACT_NAME, " +
                                                                  " d.master_name SELECT_SCHEME_PURCHASE,e.master_name as SCHEME_TYPE_PURCHASE,s_name_pur SCHEME_NAME_PURCHASE,a.s_type_pur SCH_TYPE_PURCHASE_MANUAL," +
                                                                  "a.s_opt_pur SCHEME_OPTION_PURCHASE,a.INV_OPT INVESTMENT_OPTION, to_currency(a.inv_amt,'" + currencyformat + "') INVESTMENT_AMOUNT," +
                                                                  "to_char(a.inv_date,'" + sgen.Getsqldateformat() + "') as INVESTMENT_DATE,a.pur_rmk REMARK_PURCHASE," +
                                                                  " f.master_name  SELECT_SCHEME_REDEMPTIONS,g.master_name as SELECT_SCH_TYPE_REDEMPTIONS,a.s_name_rdp SCHEME_NAME_REDEMPTIONS," +
                                                                  "a.s_type_rdp SCHEME_TYPE_REDEMPTIONS,a.s_opt_rdp SCHEME_OPTION_REDEMPTIONS,a.RDP_FOLIO FOLIO_NO_REDEMPTIONS," +
                                                                  "to_currency(a.rdp_amt,'" + currencyformat + "') REDEMPTION_AMOUNT,to_char(a.rdp_date,'" + sgen.Getsqldateformat() + "') as REDEMPTION_DATE," +
                                                                  "a.rdp_rmk REMARK_REDEMPTION,l.master_name REDEMPTION_TYPE, " +
                                                                  " h.master_name FROM_SCHEME,i.master_name as SCH_TYPE_FROM_SCHEME_SWITCHES,a.sname_frm SCHEME_NAME_FROM_SWITCHES,a.stype_frm SCHEME_TYPE_FROM_SWITCHES,a.sopt_frm SCHEME_OPTION_FROM_SWITCHES,a.sopt_to SCHEME_OPTION_TO_SWITCHES,j.master_name TO_SCHEME" +
                                                                  ",k.master_name as SCH_TYPE_TO_SCHEME_SWITCHES,m.master_name SWITCH_TYPE,to_currency(a.swt_amt,'" + currencyformat + "')  SWITCH_AMOUNT," +
                                                                  "to_char(a.swt_date,'" + sgen.Getsqldateformat() + "') as SWITCH_DATE,a.SWT_RMK REMARK_SWITCH ,a.TO_SCH_TYPE SCHEME_TYPE_TO_SCHEME_SWITCHES,a.stype_to SCHEME_TYPE_TO_SWITCHES,a.sname_to SCHEME_NAME_TO_SWITCHES from trans_req a " +
                                                                  " inner join  clients_mst b on a.acc_id = b.vch_num  and find_in_set(b.client_unit_id,'" + unitid_mst + "')= 1 " +
                                                                  " left join clients_mst c on a.p_acc_id = c.vch_num  and a.client_unit_id = c.client_unit_id and b.type = 'BCD'" +
                                                                  " left join master_setting d on d.master_id=a.pur_sch and d.type ='SHN' and find_in_set(d.client_unit_id,'" + unitid_mst + "')= 1 " +
                                                                  " left join master_setting e on d.classid=e.master_id and e.type='SCH' and find_in_set(e.client_unit_id,'" + unitid_mst + "')= 1" +
                                                                  " left join master_setting f on f.master_id=a.rdp_sch and f.type ='SHN' and find_in_set(f.client_unit_id,'" + unitid_mst + "')= 1 " +
                                                                  " left join master_setting g on f.classid=g.master_id and g.type='SCH' and find_in_set(f.client_unit_id,'" + unitid_mst + "')= 1" +
                                                                  " left join master_setting h on h.master_id=a.frm_sch and h.type ='SHN' and find_in_set(h.client_unit_id,'" + unitid_mst + "')= 1 " +
                                                                  " left join master_setting i on h.classid=i.master_id and i.type='SCH' and find_in_set(i.client_unit_id,'" + unitid_mst + "')= 1" +
                                                                  " left join master_setting j on j.master_id=a.TO_SCH and j.type ='SHN' and find_in_set(g.client_unit_id,'" + unitid_mst + "')= 1 " +
                                                                  " left join master_setting k on j.classid=k.master_id and k.type='SCH' and find_in_set(k.client_unit_id,'" + unitid_mst + "')= 1" +
                                                                  " left join master_setting l on a.rdp_type=l.master_id and l.type='SCH' and find_in_set(l.client_unit_id,'" + unitid_mst + "')= 1" +
                                                                  " left join master_setting m on m.master_id=a.SWT_TYPE and m.type ='SWT' and find_in_set(m.client_unit_id,'" + unitid_mst + "')= 1 " +
                                                                  " where a.type = 'REQ' and a.client_unit_id = '" + unitid_mst + "' " + trans_type + " " + xprdrange.Replace("vch_DATE", "a.vch_date") + " order by a.vch_num desc";
                                cmd = "select  " + cond + " from (" + cmd + ")a";
                            }
                            break;
                    }
                    break;
                #endregion
                #region n_freq
                case "n_finreq":
                    switch (btnval.ToUpper())
                    {
                        case "PARENT":
                            cmd = cmd_Fun.showparty(unitid_mst);
                            //cmd = "select (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,b.c_name as Parent_Account," +
                            //  "a.c_name as Account_Name,a.pincode as Pincode,a.type_desc as Search_text," +
                            //  "a.cpname as PerName,(case when a.cpcont='0000000000' then '-' else a.cpcont end) as PerContact," +
                            //  "'Account Detail' as Data_Source from clients_mst a left join clients_mst b on a.parent_id=b.vch_num " +
                            //  " and a.client_unit_id=b.client_unit_id and b.type='BCD' where a.type in ('BCD') and a.client_unit_id='" + unitid_mst + "' and substr(a.vch_num,0,3)='303'";
                            break;
                        case "EDIT":
                            cmd = "select (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.vch_num Doc_No,c.c_name as Parent_Account," +
                                "b.c_name as Account_Name,(case when b.cpcont = '0000000000' then '-' else b.cpcont end) as Contact_No,((replace(b.cpname, '0', '-') || ' ' || replace(b.cp_mname, '0', '') || ' ' || replace(b.cp_lname, '0', ''))) contact_person" +
                                ",a.RDP_FOLIO as folio_no from trans_req a inner join  clients_mst b on a.acc_id = b.vch_num  and find_in_set(b.client_unit_id,'" + unitid_mst + "')= 1" +
                                " left join clients_mst c on a.p_acc_id = c.vch_num  and a.client_unit_id = c.client_unit_id and b.type = 'BCD' " +
                                "where a.type = 'NFR' and a.client_unit_id = '" + unitid_mst + "' " + xprdrange.Replace("vch_DATE", "a.vch_date") + " order by a.vch_num desc";
                            break;
                        case "VIEW":
                            cmd = "select (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.vch_num Doc_No,c.c_name as Parent_Account," +
                                "b.c_name as Account_Name,(case when b.panno='AAAAA0000A' then '-' else b.panno end) pan_no ,fn.master_name as fund_name,(case when b.cpemail = 'ab@ab.ab' then '-' else b.cpemail end ) Email_ID" +
                                ",(case when b.cpcont = '0000000000' then '-' else b.cpcont end) as Contact_No,((replace(b.cpname, '0', '-') || ' ' || replace(b.cp_mname, '0', '') || ' ' || replace(b.cp_lname, '0', ''))) contact_person" +
                                ",a.RDP_FOLIO as folio_no,a.rdp_rmk from trans_req a inner join  clients_mst b on a.acc_id = b.vch_num  and find_in_set(b.client_unit_id,'" + unitid_mst + "')= 1" +
                                " left join clients_mst c on a.p_acc_id = c.vch_num  and a.client_unit_id = c.client_unit_id and b.type = 'BCD' left join master_setting fn on" +
                                " fn.master_id = a.RDP_SCH and fn.type = 'FUD' and find_in_set(fn.client_unit_id, '" + unitid_mst + "')= 1 " +
                                "where a.type = 'NFR' and a.client_unit_id = '" + unitid_mst + "' " + xprdrange.Replace("vch_DATE", "a.vch_date") + " order by a.vch_num desc";
                            break;
                    }
                    break;
                #endregion
                #region pn_unit
                case "pn_unit":
                    switch (btnval.ToUpper())
                    {
                        case "MANUF":
                            cmd = "select client_id||client_unit_id||vch_num||to_char(vch_date,'ddmmyyyy')||type as fstr,vch_num man_code,c_name as man_name from clients_mst where type='BCD' and substr(vch_num,0,3)='303' and client_unit_id='" + unitid_mst + "' and mftr='Y'";
                            break;
                        case "EDIT":
                        case "VIEW":
                            // reena 1 line done
                            cmd = "select client_id||client_unit_id||vch_num||to_char(vch_date,'yyyymmdd')||type as fstr,vch_num Doc_no,to_char(vch_date,'" + sgen.Getsqldateformat() + "') as doc_date,col7 as manufc_code,col5 as manufc_name,col6 as product_name,col9 as prd_catagory from enx_tab2 where type='PNM' and client_unit_id='" + unitid_mst + "' " + xprdrange + "";
                            break;
                    }
                    break;
                #endregion
                #region p_a_client
                case "p_a_client":
                    switch (btnval.ToUpper())
                    {
                        case "CLIENT":
                            //cmd = "select client_id||client_unit_id||vch_num||to_char(vch_date,'ddmmyyyy')||type as fstr,vch_num man_code,c_name as man_name from clients_mst " +
                            //    "where type='BCD' and substr(vch_num,0,3)='303' and client_unit_id='" + unitid_mst + "'";
                            cmd = "select (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,b.c_name as Parent_Account," +
                     "a.c_name as Account_Name,a.pincode as Pincode,a.isgstr IsGst,a.c_gstin as GSTIN,a.type_desc as Search_text," +
                     "a.cpname as PerName,(case when a.cpcont='0000000000' then '-' else a.cpcont end)  as PerContact,(case when a.cpaltcont='0000000000' then '-' else a.cpaltcont end) as PerAltContact,(case when  a.cpemail='ab@ab.ab' then '-' else a.cpemail end )  as PerEmail,a.cpdesig " +
                     "as PerDesig, 'Account Detail' as Data_Source from clients_mst a left join clients_mst b on a.parent_id=b.vch_num " +
                     " and a.client_unit_id=b.client_unit_id and b.type='BCD' where a.type in ('BCD') and a.client_unit_id='" + unitid_mst + "' and substr(a.vch_num,0,3)='303'";
                            break;
                        case "EDIT":
                        case "VIEW":
                            // reena 2 line done
                            cmd = "select pr.client_id||pr.client_unit_id||pr.vch_num||to_char(pr.vch_date,'yyyymmdd')||pr.type as fstr," +
                             "pr.vch_num Doc_no,to_char(pr.vch_date,'" + sgen.Getsqldateformat() + "') as doc_date,to_char(pr.date1, '" + sgen.Getsqldateformat() + "') as pur_date,to_char(pr.date4, '" + sgen.Getsqldateformat() + "') as end_date," +
                             "pr.col7 as client_code,pr.col5 as client_name,pc.col6 as product_name,pr.col10 as product_cat,pc.col5 as manufc_name," +
                             "pr.col6 as amount,pr.col9 as freq,(case when pr.col12 = 'Y' then 'Active' else 'Inactive' end) as status from enx_tab2 pr inner join enx_tab2 pc on pc.vch_num = pr.r_no and " +
                             "pc.type = 'PNM' and pc.client_unit_id = pr.client_unit_id where pr.type = 'PAC' and pr.client_unit_id = '" + unitid_mst + "' " + xprdrange.Replace("vch_DATE", "pr.vch_date") + "";
                            //cmd = "select client_id||client_unit_id||vch_num||to_char(vch_date,'yyyymmdd')||type as fstr,vch_num Doc_no," +
                            //    "to_char(vch_date,'" + sgen.Getsqldateformat() + "') as doc_date,to_char(date1,'" + sgen.Getsqldateformat() + "') as pur_date,col7 as client_code," +
                            //    "col5 as client_name,col10 as product_cat,col6 as amunt,col9 as freq from enx_tab2" +
                            //    " where type='PAC' and client_unit_id='" + unitid_mst + "'";
                            break;
                        case "PRODUCT":
                            //cmd = "select client_id||client_unit_id||vch_num||to_char(vch_date,'ddmmyyyy')||type as fstr," +
                            //    "vch_num Doc_no,to_char(vch_date, '" + sgen.Getsqldateformat() + "') as doc_date,col6 as product_name from enx_tab2 where type = 'PNM'" +
                            //    " and client_unit_id = '" + unitid_mst + "'";
                            //cmd = "select master_id||to_char(vch_date,'ddmmyyyy')||type as fstr,master_id Doc_no," +
                            //    "to_char(vch_date, '" + sgen.Getsqldateformat() + "') as doc_date,master_name as product_cat from master_setting " +
                            //    "where type = 'PNM' and client_unit_id = '" + unitid_mst + "'";

                            // reena 2 line done
                            cmd = "select pr.client_id||pr.client_unit_id||pr.vch_num||to_char(pr.vch_date,'yyyymmdd')||pr.type as fstr" +
                                ",pr.vch_num Doc_no,to_char(pr.vch_date, '" + sgen.Getsqldateformat() + "') as doc_date,pc.master_name as prd_catagory,pr.col7 as manufc_code,pr.col5 as " +
                                "manufc_name,pr.col6 as product_name from enx_tab2 pr inner join" +
                                " master_setting pc on pc.master_id = pr.col9 and pc.type = 'PNM' and find_in_set(pc.client_unit_id," +
                                "'" + unitid_mst + "')= 1 where pr.type = 'PNM' and pr.client_unit_id = '" + unitid_mst + "'";
                            break;
                    }
                    break;
                #endregion
                #region fas insurence
                case "fas_ins":
                    switch (btnval.ToUpper())
                    {
                        case "PARENT":
                            cmd = cmd_Fun.showparty(unitid_mst);
                            break;
                        case "EDIT":
                            cmd = "select (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.vch_num Doc_No," +
                                "to_char(a.vch_date, '" + sgen.Getsqldateformat() + "') doc_date,c.c_name as Parent_Account,b.c_name as Account_Name," +
                                "to_char(a.INV_DATE, '" + sgen.Getsqldateformat() + "') as investment_date,a.SOPT_TO as Premium,to_currency(a.SWT_AMT,'" + currencyformat + "') as sum_assured" +
                                ",pr.col6 as product_name," +
                                "(case when a.RDP_FOLIO = '001' then 'Fresh' when a.RDP_FOLIO = '002' then 'Renewal' else 'Port' end) as Purchase_type,a.pur_rmk " +
                                "remark from trans_req a " +
                                "inner join clients_mst b on a.acc_id = b.vch_num  and find_in_set(b.client_unit_id, '" + unitid_mst + "') = 1 " +
                                "left join clients_mst c on a.p_acc_id = c.vch_num and a.client_unit_id = c.client_unit_id and b.type = 'BCD' " +
                                "inner join enx_tab2 pr on pr.vch_num = a.SWT_FOLIO and pr.type = 'PNM' and pr.client_unit_id = '" + unitid_mst + "' " +
                                "where" +
                                " a.type = 'INS' and a.client_unit_id = '" + unitid_mst + "' " + xprdrange.Replace("vch_DATE", "a.vch_date") + " order by a.vch_num desc";

                            break;
                        case "VIEW":
                            cmd = "select (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.vch_num Doc_No," +
                                "to_char(a.vch_date, '" + sgen.Getsqldateformat() + "') doc_date,c.c_name as Parent_Account,b.c_name as Account_Name," +
                                "to_char(a.INV_DATE, '" + sgen.Getsqldateformat() + "') as investment_date,a.SOPT_TO as Premium,to_currency(a.SWT_AMT, '" + currencyformat + "') as sum_assured" +
                                ",pc.master_name as prd_category,sc.master_name as Prd_sub_category,pr.col6 as product_name,nvl(cl.vch_num, '-') as manufc_code" +
                                ",nvl(cl.c_name, '-') as Manuf_name,to_char(a.TRANS_DATE, '" + sgen.Getsqldateformat() + "') as maturity_date," +
                                "(case when a.ispur = 'Y' then 'YES' when a.ispur = 'N' then 'NO' else a.ispur end) ecs_registered," +
                                "(case when a.RDP_FOLIO = '001' then 'Fresh' when a.RDP_FOLIO = '002' then 'Renewal' else 'Port' end) as Purchase_type,a.pur_rmk " +
                                "remark from trans_req a inner join clients_mst b on a.acc_id = b.vch_num  and find_in_set(b.client_unit_id, '" + unitid_mst + "') = 1 left join clients_mst c on a.p_acc_id = c.vch_num" +
                                " and a.client_unit_id = c.client_unit_id and b.type = 'BCD' inner join enx_tab2 pr on pr.vch_num = a.SWT_FOLIO and pr.type = 'PNM' and pr.client_unit_id = '" + unitid_mst + "' " +
                                "left join master_setting pc on pc.master_id = pr.col9 and pc.type = 'PNM' and find_in_set(pc.client_unit_id,'" + unitid_mst + "')= 1 left join master_setting sc on sc.master_id = pr.col10" +
                                " and sc.type = 'PSC' and find_in_set(sc.client_unit_id,'" + unitid_mst + "')= 1 left join clients_mst cl on cl.vch_num = pr.col7 and substr(cl.vch_num,0,3)= '303' and cl.mftr = 'Y' where" +
                                " a.type = 'INS' and a.client_unit_id = '" + unitid_mst + "' " + xprdrange.Replace("vch_DATE", "a.vch_date") + " order by a.vch_num desc";

                            break;
                        case "PRODUCT":
                            // reena 2 line done
                            cmd = "select pr.client_id||pr.client_unit_id||pr.vch_num||to_char(pr.vch_date,'yyyymmdd')||pr.type as fstr" +
                                ",pr.vch_num Doc_no,pc.master_name as prd_category" +
                                ",sc.master_name as Prd_sub_category,pr.col6 as product_name,nvl(cl.vch_num, '-') as manufc_code" +
                                ",nvl(cl.c_name, '-') as Manuf_name from enx_tab2 pr left join master_setting pc on pc.master_id " +
                                "= pr.col9 and pc.type = 'PNM' and find_in_set(pc.client_unit_id,'" + unitid_mst + "')= 1 " +
                                "left join master_setting sc on sc.master_id = pr.col10 and sc.type = 'PSC' and " +
                                "find_in_set(sc.client_unit_id,'" + unitid_mst + "')= 1 left join clients_mst cl on cl.vch_num" +
                                " = pr.col7 and substr(cl.vch_num,0,3)= '303' and cl.mftr = 'Y' " +
                                "where pr.type = 'PNM' and pr.client_unit_id = '" + unitid_mst + "'";
                            break;
                    }
                    break;
                #endregion
                #region p2p lending
                case "fas_p2p":
                    switch (btnval.ToUpper())
                    {
                        case "PARENT":
                            cmd = cmd_Fun.showparty(unitid_mst);
                            break;
                        case "EDIT":
                            cmd = "select (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.vch_num Doc_No," +
                                "to_char(a.vch_date,'" + sgen.Getsqldateformat() + "') doc_date,c.c_name as Parent_Account,b.c_name as Account_Name,to_currency(a.SWT_AMT,'" + currencyformat + "') as inv_amount,a.pur_rmk remark from trans_req a " +
                                "inner join clients_mst b on a.acc_id = b.vch_num and find_in_set(b.client_unit_id, '" + unitid_mst + "') = 1 " +
                                "left join clients_mst c on a.p_acc_id = c.vch_num  and a.client_unit_id = c.client_unit_id and b.type = 'BCD' " +
                                "where a.type = 'P2P' and a.client_unit_id = '" + unitid_mst + "' " + xprdrange.Replace("vch_DATE", "a.vch_date") + " order by a.vch_num desc";
                            break;
                        case "VIEW":
                            cmd = "select (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.vch_num Doc_No," +
                                "to_char(a.vch_date,'" + sgen.Getsqldateformat() + "') doc_date,c.c_name as Parent_Account,b.c_name as Account_Name,to_char(a.INV_DATE, '" + sgen.Getsqldateformat() + "') " +
                                "as invenstment_date,to_currency(a.SWT_AMT,'" + currencyformat + "') as inv_amount,a.S_NAME_PUR as Scheme_name,a.S_OPT_PUR as inv_horizon,a.pur_rmk remark from trans_req a inner join clients_mst b on a.acc_id = b.vch_num " +
                                "and find_in_set(b.client_unit_id, '" + unitid_mst + "') = 1 left join clients_mst c on a.p_acc_id = c.vch_num  and a.client_unit_id = " +
                                "c.client_unit_id and b.type = 'BCD' where a.type = 'P2P' and a.client_unit_id = '" + unitid_mst + "' " + xprdrange.Replace("vch_DATE", "a.vch_date") + " order by a.vch_num desc";
                            break;
                    }
                    break;
                #endregion
                #region fixed deposit
                case "fas_fix":
                    switch (btnval.ToUpper())
                    {
                        case "PARENT":
                            cmd = cmd_Fun.showparty(unitid_mst);
                            break;
                        case "EDIT":
                            cmd = "select (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.vch_num Doc_No," +
                                "to_char(a.vch_date,'" + sgen.Getsqldateformat() + "') doc_date,c.c_name as Parent_Account,b.c_name as Account_Name,to_char(a.INV_DATE, '" + sgen.Getsqldateformat() + "')" +
                                " as Deposit_date,to_currency(a.SWT_AMT,'" + currencyformat + "') as inv_amount,a.pur_rmk remark from trans_req a inner join clients_mst b on a.acc_id = b.vch_num" +
                                " and find_in_set(b.client_unit_id, '" + unitid_mst + "') = 1 left join clients_mst c on a.p_acc_id = c.vch_num  and a.client_unit_id = " +
                                "c.client_unit_id and b.type = 'BCD' where a.type = 'FIX' and a.client_unit_id =" +
                                " '" + unitid_mst + "' " + xprdrange.Replace("vch_DATE", "a.vch_date") + " order by a.vch_num desc";

                            break;
                        case "VIEW":
                            cmd = "select (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.vch_num Doc_No," +
                                "to_char(a.vch_date,'" + sgen.Getsqldateformat() + "') doc_date,c.c_name as Parent_Account,b.c_name as Account_Name,to_char(a.INV_DATE, '" + sgen.Getsqldateformat() + "')" +
                                " as Deposit_date,mr.c_name as manufecturer,to_currency(a.SWT_AMT,'" + currencyformat + "') as inv_amount,to_char(a.trans_date, '" + sgen.Getsqldateformat() + "') as maturity_date" +
                                ",to_char(a.RDP_DATE, '" + sgen.Getsqldateformat() + "') as Investement_date,a.S_OPT_PUR as fdr_no," +
                                "a.SOPT_TO as roi,a.S_OPT_RDP as form_15,a.pur_rmk remark from trans_req a inner join clients_mst b on a.acc_id = b.vch_num" +
                                " and find_in_set(b.client_unit_id, '" + unitid_mst + "') = 1 left join clients_mst c on a.p_acc_id = c.vch_num  and a.client_unit_id = " +
                                "c.client_unit_id and b.type = 'BCD' left join clients_mst mr on a.RDP_FOLIO = mr.vch_num  and a.client_unit_id = " +
                                "mr.client_unit_id and mr.type = 'BCD' and mr.mftr = 'Y' where a.type = 'FIX' and a.client_unit_id =" +
                                " '" + unitid_mst + "' " + xprdrange.Replace("vch_DATE", "a.vch_date") + " order by a.vch_num desc";

                            break;
                        case "MANUF":
                            cmd = "select client_id||client_unit_id||vch_num||to_char(vch_date,'ddmmyyyy')||type as fstr,vch_num man_code,c_name as man_name from clients_mst where type='BCD' and substr(vch_num,0,3)='303' and client_unit_id='" + unitid_mst + "' and mftr='Y'";
                            break;
                    }
                    break;
                #endregion
                #region fd redemption
                case "fas_fd":
                    switch (btnval.ToUpper())
                    {
                        case "PARENT":
                            mq = cmd_Fun.showparty(unitid_mst);
                            cmd = "select distinct a.* from (" + mq + ") a inner join trans_req b on a.Parent_code = b.p_acc_id and a.account_code =  b.acc_id and b.type='FIX' and b.client_unit_id='" + unitid_mst + "'";
                            break;
                        case "EDIT":
                        case "VIEW":
                            cmd = "select (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.vch_num Doc_No," +
                                "to_char(a.vch_date,'" + sgen.Getsqldateformat() + "') doc_date,c.c_name as Parent_Account,b.c_name as Account_Name,d.S_OPT_PUR as fdr_no," +
                                "to_char(d.vch_date, '" + sgen.Getsqldateformat() + "') as fd_date,a.COL11 as maturity_amount,a.col12 as on_Maturity_date from enx_tab2 a inner join " +
                                "clients_mst b on a.COL5 = b.vch_num and find_in_set(b.client_unit_id, '" + unitid_mst + "') = 1 left join clients_mst c on a.COL6 = c.vch_num  " +
                                "and a.client_unit_id = c.client_unit_id and b.type = 'BCD' inner join trans_req d on d.vch_num=a.COL7 and d.type='FIX' and " +
                                "d.client_unit_id='" + unitid_mst + "' where a.type = 'BFD' and a.client_unit_id='" + unitid_mst + "' " + xprdrange.Replace("vch_DATE", "a.vch_date") + "";
                            break;
                        case "MANUF":
                            if (param1 != null && param1 != "")
                            {
                                where = " and fd.acc_id = '" + param1 + "'";
                            }
                            // reena 2 line done
                            cmd = "select (fd.client_unit_id||fd.vch_num||to_char(fd.vch_date,'yyyymmdd')||fd.type) as fstr,fd.S_OPT_PUR as fdr_no," +
                                "to_char(fd.vch_date, '" + sgen.Getsqldateformat() + "') as fd_date,mf.c_name as manufecturer from trans_req fd inner join clients_mst mf on " +
                                "mf.vch_num = fd.RDP_FOLIO and mf.type = 'BCD' and substr(mf.vch_num,0,3)= '303' where fd.client_unit_id='" + unitid_mst + "' " +
                                "and fd.type = 'FIX' " + where + "";

                            break;
                    }
                    break;
                #endregion
                #region Lead Visit
                case "ld_visit":
                    switch (btnval.ToUpper())
                    {
                        case "CLIENT":
                        case "PRINTPARTY":
                            cmd = "select (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.parent_id Parent_code, b.c_name as Parent_Account," +
                                 "a.c_name as Account_Name,a.type_desc as Search_text," +
                                 "a.cpname as PerName,(case when a.cplandno = '0000000000' then '-' else  a.cplandno end) as PerContact,'Account Detail' as Data_Source from clients_mst a left join clients_mst b on a.parent_id=b.vch_num " +
                                 " and find_in_set(a.client_unit_id,b.client_unit_id)=1 and b.type='BCD' where a.type in ('BCD') and find_in_set_one(a.client_unit_id,'" + unitid_mst + "')=1 and substr(a.vch_num,0,3)='303'";
                            break;
                        case "EDIT":
                        case "PRINT":
                            cmd = "select a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type as fstr," +
                               " a.vch_num  Doc_No, to_char(convert_tz(a.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') Doc_Date ," +
                               "a.col21 add_to_be_visit,a.col16 as visit_done_by,to_char(a.date3, '" + sgen.Getsqldateformat() + "') as visit_Date," +
                               "b.c_name as client_Name,b.addr as address,(case when b.cpcont='0000000000' then '-' else b.cpcont end) as Cont_no from kc_tab a left join clients_mst b on a.col1 = b.vch_num and " +
                               "find_in_set_one(a.client_unit_id, b.client_unit_id)=1 and b.type = 'BCD' where a.type" +
                               " = 'BLV' and a.client_unit_id = '" + unitid_mst + "' order by a.vch_num desc";
                            break;
                        case "VIEW":
                            // reena 7 line done
                            cmd = "select a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type as fstr," +
                                " a.vch_num  Doc_No, to_char(convert_tz(a.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') Doc_Date ," +
                                "a.col21 add_to_be_visit,a.col3 as archetect_if_any,a.col4 as visiting_chrgs,a.col5 as " +
                                "rfrgtr_detailing,a.col22 dishwash_detailing,a.col7 as cylinder,a.col23 as sink_detailing,a.col24 " +
                                "apliances_detailing, a.col10 as directions,a.col25 as elevation,a.col12 as cieling_height,a.col31 " +
                                "as remarks_if_any1,a.col13 as granite_clear_height,a.col14 as ground_platform,a.col15 as elevations" +
                                ",a.col32 as remarks_if_any2,a.col16 as visit_done_by,to_char(a.date3, '" + sgen.Getsqldateformat() + "') as visit_Date," +
                                "b.c_name as client_Name,b.addr as address,(case when b.cpcont='0000000000' then '-' else b.cpcont end) as Cont_no from kc_tab a left join clients_mst b on a.col1 = b.vch_num and " +
                                "find_in_set_one(a.client_unit_id,b.client_unit_id)=1 and b.type = 'BCD' where a.type" +
                                " = 'BLV' and a.client_unit_id = '" + unitid_mst + "' order by a.vch_num desc";
                            break;
                        case "PRINTMSG":
                            cmd = "SELECT MASTER_ID,MASTER_NAME FROM (select '111' as master_id,'Filled Form' as master_name from " +
                                "dual union all select '222' as master_id,'Blank Form' master_name from dual)";
                            break;

                    }
                    break;
                #endregion
                #region mail master
                case "mail_mst":
                    switch (btnval.ToUpper())
                    {
                        case "USER":
                            if (param1 != null)
                            {
                                if (param1 != "" && param1 != "-")
                                {
                                    if (param1 != "") where = " and a.vch_num not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','").Trim().ToString() + "')";
                                }
                            }
                            cmd = "select (a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.vch_num as" +
                                " id,a.first_name||' '||replace(a.middle_name,'0','')||''||replace(a.last_name,'0','') as user_name,a.email,a.con_number" +
                                ",a.per_address from user_details a where a.type='CPR' " + where + "";

                            break;
                        case "EDIT":
                        case "VIEW":
                            cmd = "select (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.vch_num mail_id,a.head_text as mail_name,b.first_name || ' ' || replace(b.middle_name, '0', '') || '' || replace(b.last_name, '0', '') as user_name,b.email,b.con_number,b.per_address,a.mail_cc,a.body_text from alerts a " +
                                "inner join user_details b on a.ref_code1 = b.vch_num and b.type = 'CPR' where a.client_unit_id = '" + unitid_mst + "' and a.type = 'BMM' order by a.vch_num desc";
                            break;
                    }
                    break;
                #endregion
                #region automail template
                case "automail_tmp":
                    switch (btnval.ToUpper())
                    {
                        case "VIEW":
                        case "EDIT":
                            cmd = "select distinct (client_id||client_unit_id|| vch_num || to_char(vch_date, 'yyyymmdd') || type||trim(col13)) as fstr,col2 as Temp_Set_For from enx_tab " +
                                "where type = 'AMT' and client_unit_id = '" + unitid_mst + "'";
                            //cmd = "select (client_id||client_unit_id|| vch_num || to_char(vch_date, 'yyyymmdd') || type) as fstr,col2 as Temp_Set_For,nvl(col5,'-') as email_id,nvl(col6,'-') as mobile_no," +
                            //    "col1 as Body_Text,col8 as Email_Heading from enx_tab " +
                            //    "where type = 'ETP' and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "'";
                            break;
                        case "NEW":
                            cmd = "select * from (select '011' as master_id, 'PROSPECT MAIL (1st)' as set_For from dual union all select '012' as master_id," +
                                " 'PROSPECT MAIL (2nd)' as set_For from dual union all select '013' as master_id,'PROSPECT MAIL (3rd)' as set_For from dual " +
                                "union all select '014' as master_id,'NEW ACCOUNT (SMALL)' as set_For from dual union all select '015' as master_id,'CREATE ORDER (CRM)' as set_For from dual" +
                                " union all select '016' as master_id,'ORDER STATUS (CRM)' as set_For from dual) " +
                                "where master_id not in (select col13 from enx_tab where type = 'AMT')";
                            break;
                    }
                    break;
                #endregion
                #region Create Ticket
                case "cr_ticket":
                    switch (btnval.ToUpper())
                    {

                        case "CONTACT":


                            mq1 = "select  distinct (ct.ref_code||ct.vch_num||to_char(ct.vch_date,'yyyymmdd')||ct.type)  as fstr" +
                                " ,replace(nvl(pr.c_name,'-'),0,'-') as Parent_Account,a.vch_num as Account_No,  a.c_name " + accname + "," +
                                " ((replace(ct.cpname, '0', '-') || ' ' || replace(ct.cp_mname, '0', '') || ' ' || replace(ct.cp_lname, '0', ''))) cp_name, (case when ct.cplandno='0000000000' or ct.cplandno='0' then '-' else ct.cplandno end) CP_MOBILE_NO" +
                                ", (case when ct.cpemail='ab@ab.ab' or ct.cpemail='0' then '-' else ct.cpemail end) CP_EMAIL_ID,'Account Detail' as Data_Source " +
                                "from clients_mst a " +
                                  "left join clients_mst pr on a.parent_id=pr.vch_num and pr.type='BCD' and find_in_set(pr.client_unit_id,'" + unitid_mst + "')= 1 " +
                                "left join clients_mst ct  on a.vch_num=ct.ref_code  and find_in_set(ct.client_unit_id,'" + unitid_mst + "')= 1 and substr(ct.ref_code,0,3)='303' " +
                                "where find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 and a.type in ('BCD')  and (a.mftr is null or a.mftr='0' or a.mftr='N') and (a.pubr is null or a.pubr='0' or a.pubr='N') and substr(a.vch_num,0,3)='303'";

                            mq2 = "select  distinct (ct.ref_code||ct.vch_num||to_char(ct.vch_date,'yyyymmdd')||ct.type)  as fstr" +
                                " ,replace(nvl(pr.c_name,'-'),0,'-') as Parent_Account,a.vch_num as Account_No,  a.c_name " + accname + "," +
                                "  ((replace(ct.cpname, '0', '-') || ' ' || replace(ct.cp_mname, '0', '') || ' ' || replace(ct.cp_lname, '0', ''))) cp_name, (case when ct.cplandno='0000000000' or ct.cplandno='0' then '-' else ct.cplandno end) CP_MOBILE_NO" +
                                ", (case when ct.cpemail='ab@ab.ab' or ct.cpemail='0' then '-' else ct.cpemail end) CP_EMAIL_ID,'Prospect Data' as Data_Source " +
                                "from clients_mst a " +
                                  "left join clients_mst pr on a.parent_id=pr.vch_num and pr.type='BCD' and find_in_set(pr.client_unit_id,'" + unitid_mst + "')= 1 " +
                                "left join clients_mst ct  on a.vch_num=ct.ref_code  and find_in_set(ct.client_unit_id,'" + unitid_mst + "')= 1 and substr(ct.ref_code,0,3)='909' " +
                                "where find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 and a.type in ('PRO')  and  (a.Pros is null or a.Pros = 'N' or a.Pros = '0') and substr(a.vch_num,0,3)='909' ";

                            cmd = mq1 + " union " + mq2;

                            break;

                        case "EDIT":
                        case "VIEW":
                            //cmd = " select  (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.vch_num Ticket_No," +
                            //" b.c_name " + accname + ", ((replace(c.cpname, '0', '-') || ' ' || replace(c.cp_mname, '0', '') || ' ' || replace(c.cp_lname, '0', ''))) contact_person," +
                            //"a.address subject,  d.master_name ticket_type, e.master_name ticket_status, g.master_name ticket_priority, nvl( max(f.col5),'-') ticket_group from lead_master a " +
                            //"inner join clients_mst b on a.cust_id = b.vch_num and a.client_unit_id = b.client_unit_id  " +
                            //" inner join clients_mst c on a.cp_fname = c.vch_num and b.vch_num = c.ref_code and a.client_unit_id = c.client_unit_id " +
                            //" inner join master_setting d on a.ld_owner = d.master_id and d.type = 'TKT' and a.client_unit_id = d.client_unit_id" +
                            //"  left join master_setting e on a.ld_status = e.master_id and e.type = 'TKS' and a.client_unit_id = e.client_unit_id" +
                            //"   left join master_setting g on a.ld_source = g.master_id and g.type = 'TKP' and a.client_unit_id = g.client_unit_id" +
                            //"    left join enx_tab2 f on a.ld_product = f.vch_num and f.type = 'GRP' and a.client_unit_id = f.client_unit_id" +
                            //"  where a.type = 'TCK' and a.client_unit_id = '" + unitid_mst + "' and (a.lead_app is null or a.lead_app='A' or a.lead_app='0')  group by " +
                            //" (a.client_id || a.client_unit_id || a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.type),a.vch_num," +
                            //" b.c_name,((replace(c.cpname, '0', '-') || ' ' || replace(c.cp_mname, '0', '') || ' ' || replace(c.cp_lname, '0', ''))),a.address ," +
                            //"  d.master_name, e.master_name, g.master_name order by a.vch_num desc";

                            cmd = "select (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.vch_num Ticket_No,NVL(b.c_name,'-') " + accname + "," +
                                "((replace(NVL(c.cpname, '0'), '0', '-') || ' ' || replace(c.cp_mname, '0', '') || ' ' || replace(c.cp_lname, '0', ''))) contact_person," +
                                "a.address subject, NVL(d.master_name, '-') ticket_type,NVL(e.master_name, '-') ticket_status,NVL(g.master_name, '-') ticket_priority,nvl(max(f.col5), '-') ticket_group from lead_master a " +
                                "LEFT join clients_mst b on a.cust_id = b.vch_num and a.client_unit_id = b.client_unit_id " +
                                "LEFT join clients_mst c on a.cp_fname = c.vch_num and b.vch_num = c.ref_code and a.client_unit_id = c.client_unit_id " +
                                "LEFT join master_setting d on a.ld_owner = d.master_id and d.type = 'TKT' and a.client_unit_id = d.client_unit_id " +
                                "left join master_setting e on a.ld_status = e.master_id and e.type = 'TKS' and a.client_unit_id = e.client_unit_id " +
                                "left join master_setting g on a.ld_source = g.master_id and g.type = 'TKP' and a.client_unit_id = g.client_unit_id " +
                                "left join enx_tab2 f on a.ld_product = f.vch_num and f.type = 'GRP' and a.client_unit_id = f.client_unit_id " +
                                "where a.type = 'TCK' and a.client_unit_id = '" + unitid_mst + "' and(a.lead_app is null or a.lead_app = 'A' or a.lead_app = '0') " +
                                "group by (a.client_id || a.client_unit_id || a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.type),a.vch_num,b.c_name," +
                                "((replace(NVL(c.cpname, '0'), '0', '-') || ' ' || replace(c.cp_mname, '0', '') || ' ' || replace(c.cp_lname, '0', '')))," +
                                "a.address,d.master_name,e.master_name,g.master_name order by a.vch_num desc";
                            break;
                    }
                    break;
                #endregion
                #region minutes of meeting
                case "mom":
                    switch (btnval.ToUpper())
                    {
                        case "CONTACT":



                            mq1 = "select  distinct (ct.ref_code||ct.vch_num||to_char(ct.vch_date,'yyyymmdd')||ct.type)  as fstr" +
                                " ,replace(nvl(pr.c_name,'-'),0,'-') as Parent_Account,a.vch_num as Account_No,  a.c_name " + accname + "," +
                                "  ((replace(ct.cpname, '0', '-') || ' ' || replace(ct.cp_mname, '0', '') || ' ' || replace(ct.cp_lname, '0', ''))) cp_name, (case when ct.cplandno='0000000000' or ct.cplandno='0' then '-' else ct.cplandno end) CP_MOBILE_NO" +
                                ", (case when ct.cpemail='ab@ab.ab' or ct.cpemail='0'then '-' else ct.cpemail end) CP_EMAIL_ID,'Account Detail' as Data_Source " +
                                "from clients_mst a " +
                                  "left join clients_mst pr on a.parent_id=pr.vch_num and pr.type='BCD' and find_in_set(pr.client_unit_id,'" + unitid_mst + "')= 1 " +
                                "left join clients_mst ct  on a.vch_num=ct.ref_code  and find_in_set(ct.client_unit_id,'" + unitid_mst + "')= 1 and substr(ct.ref_code,0,3)='303' " +
                                "where find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 and a.type in ('BCD')  and (a.mftr is null or a.mftr='0' or a.mftr='N') and (a.pubr is null or a.pubr='0' or a.pubr='N') and substr(a.vch_num,0,3)='303'";

                            mq2 = "select  distinct (ct.ref_code||ct.vch_num||to_char(ct.vch_date,'yyyymmdd')||ct.type)  as fstr" +
                                " ,replace(nvl(pr.c_name,'-'),0,'-') as Parent_Account,a.vch_num as Account_No,  a.c_name " + accname + "," +
                                "  ((replace(ct.cpname, '0', '-') || ' ' || replace(ct.cp_mname, '0', '') || ' ' || replace(ct.cp_lname, '0', ''))) cp_name, (case when ct.cplandno='0000000000' or ct.cplandno='0' then '-' else ct.cplandno end) CP_MOBILE_NO" +
                                ", (case when ct.cpemail='ab@ab.ab' or ct.cpemail='0' then '-' else ct.cpemail end) CP_EMAIL_ID,'Prospect Data' as Data_Source " +
                                "from clients_mst a " +
                                  "left join clients_mst pr on a.parent_id=pr.vch_num and pr.type='BCD' and find_in_set(pr.client_unit_id,'" + unitid_mst + "')= 1 " +
                                "left join clients_mst ct  on a.vch_num=ct.ref_code  and find_in_set(ct.client_unit_id,'" + unitid_mst + "')= 1 and substr(ct.ref_code,0,3)='909' " +
                                "where find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 and a.type in ('PRO')  and  (a.Pros is null or a.Pros = 'N' or a.Pros = '0') and substr(a.vch_num,0,3)='909' ";

                            cmd = mq1 + " union " + mq2;

                            break;

                        case "EDIT":
                        case "VIEW":
                            cmd = " select  (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.vch_num MOM_No, to_char(a.vch_date,'" + sgen.Getsqldateformat() + "') MOM_Date," +
                            " b.c_name " + accname + ", ((replace(c.cpname, '0', '-') || ' ' || replace(c.cp_mname, '0', '') || ' ' || replace(c.cp_lname, '0', ''))) contact_person," +
                            "a.address subject from lead_master a " +
                            "inner join clients_mst b on a.cust_id = b.vch_num and find_in_set(b.client_unit_id,'" + unitid_mst + "')=1   " +
                            " inner join clients_mst c on a.cp_fname = c.vch_num and b.vch_num = c.ref_code and  find_in_set(c.client_unit_id,'" + unitid_mst + "')=1 " +
                            "  where a.type = 'MOM' and a.client_unit_id = '" + unitid_mst + "' order by a.vch_num desc";
                            break;
                    }
                    break;
                #endregion
                #region crm summary
                case "crm_summ":
                    switch (btnval.ToUpper())
                    {

                        case "PARENT":
                            sgen.SetSession(MyGuid, "crm_summ", null);
                            sgen.SetSession(MyGuid, "crm_summ_comm", null);
                            sgen.SetSession(MyGuid, "crm_summ_acc", null);
                            sgen.SetSession(MyGuid, "crm_summ_ct", null);
                            cmd = "select (a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr," +
                                      "a.vch_num doc_no,a.c_name as Name," +
                                      "a.cpname as Per_Name,(case when a.cpcont='0000000000' or a.cpcont='0' then '-' else a.cpcont end) as Per_Contact," +
                                      "(case when a.cpaltcont='0000000000' or a.cpaltcont='0' then '-' else a.cpaltcont end) as Per_AltContact " +
                                      "from clients_mst a where a.client_unit_id='" + unitid_mst + "' and a.type ='BCD' and (Parent_id is null " +
                                      " or parent_id=0 or vch_num=parent_id)  and substr(a.vch_num,0,3)='303'" +
                                      " order by a.vch_num desc";
                            break;



                    }
                    break;
                #endregion
                #region  Ticket detail
                case "ticket_detail":
                    switch (btnval.ToUpper())
                    {
                        case "CONTACT":


                            mq1 = "select  distinct (ct.ref_code||ct.vch_num||to_char(ct.vch_date,'yyyymmdd')||ct.type)  as fstr" +
                                " ,replace(nvl(pr.c_name,'-'),0,'-') as Parent_Account,a.vch_num as Account_No,  a.c_name Account_name," +
                                "  (replace(ct.cpname,'0','') || replace(nvl(ct.cp_mname,'0'),0,'') ||" +
                                " replace(nvl(ct.cp_lname,''),0,'')) cp_name, (case when ct.cplandno='0000000000' then '-' else ct.cplandno end) CP_MOBILE_NO" +
                                ", (case when ct.cpemail='ab@ab.ab' then '-' else ct.cpemail end) CP_EMAIL_ID,'Account Detail' as Data_Source " +
                                "from clients_mst a " +
                                  "left join clients_mst pr on a.parent_id=pr.vch_num and pr.type='BCD' and find_in_set(pr.client_unit_id,'" + unitid_mst + "')= 1 " +
                                "left join clients_mst ct  on a.vch_num=ct.ref_code  and find_in_set(ct.client_unit_id,'" + unitid_mst + "')= 1 and substr(ct.ref_code,0,3)='303' " +
                                "where find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 and a.type in ('BCD')  and (a.mftr is null or a.mftr='0' or a.mftr='N') and (a.pubr is null or a.pubr='0' or a.pubr='N') and substr(a.vch_num,0,3)='303'";

                            mq2 = "select  distinct (ct.ref_code||ct.vch_num||to_char(ct.vch_date,'yyyymmdd')||ct.type)  as fstr" +
                                " ,replace(nvl(pr.c_name,'-'),0,'-') as Parent_Account,a.vch_num as Account_No,  a.c_name Account_name," +
                                "  (replace(ct.cpname,'0','') || replace(nvl(ct.cp_mname,'0'),0,'') ||" +
                                " replace(nvl(ct.cp_lname,''),0,'')) cp_name, (case when ct.cplandno='0000000000' then '-' else ct.cplandno end) CP_MOBILE_NO" +
                                ", (case when ct.cpemail='ab@ab.ab' then '-' else ct.cpemail end) CP_EMAIL_ID,'Prospect Data' as Data_Source " +
                                "from clients_mst a " +
                                  "left join clients_mst pr on a.parent_id=pr.vch_num and pr.type='BCD' and find_in_set(pr.client_unit_id,'" + unitid_mst + "')= 1 " +
                                "left join clients_mst ct  on a.vch_num=ct.ref_code  and find_in_set(ct.client_unit_id,'" + unitid_mst + "')= 1 and substr(ct.ref_code,0,3)='909' " +
                                "where find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 and a.type in ('PRO')  and  (a.Pros is null or a.Pros = 'N' or a.Pros = '0') and substr(a.vch_num,0,3)='909' ";

                            cmd = mq1 + " union " + mq2;

                            break;


                    }
                    break;
                #endregion
                #region Web Ticket
                case "web_ticket":
                    switch (btnval.ToUpper())
                    {

                        case "CONTACT":


                            mq1 = "select  distinct (ct.ref_code||ct.vch_num||to_char(ct.vch_date,'yyyymmdd')||ct.type)  as fstr" +
                                " ,replace(nvl(pr.c_name,'-'),0,'-') as Parent_Account,a.vch_num as Account_No,  a.c_name " + accname + "," +
                                " ((replace(ct.cpname, '0', '-') || ' ' || replace(ct.cp_mname, '0', '') || ' ' || replace(ct.cp_lname, '0', ''))) cp_name, (case when ct.cplandno='0000000000' or ct.cplandno='0' then '-' else ct.cplandno end) CP_MOBILE_NO" +
                                ", (case when ct.cpemail='ab@ab.ab' or ct.cpemail='0' then '-' else ct.cpemail end) CP_EMAIL_ID,'Account Detail' as Data_Source " +
                                "from clients_mst a " +
                                  "left join clients_mst pr on a.parent_id=pr.vch_num and pr.type='BCD' and find_in_set(pr.client_unit_id,'" + unitid_mst + "')= 1 " +
                                "left join clients_mst ct  on a.vch_num=ct.ref_code  and find_in_set(ct.client_unit_id,'" + unitid_mst + "')= 1 and substr(ct.ref_code,0,3)='303' " +
                                "where find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 and a.type in ('BCD')  and (a.mftr is null or a.mftr='0' or a.mftr='N') and (a.pubr is null or a.pubr='0' or a.pubr='N') and substr(a.vch_num,0,3)='303'";

                            mq2 = "select  distinct (ct.ref_code||ct.vch_num||to_char(ct.vch_date,'yyyymmdd')||ct.type)  as fstr" +
                                " ,replace(nvl(pr.c_name,'-'),0,'-') as Parent_Account,a.vch_num as Account_No,  a.c_name " + accname + "," +
                                "  ((replace(ct.cpname, '0', '-') || ' ' || replace(ct.cp_mname, '0', '') || ' ' || replace(ct.cp_lname, '0', ''))) cp_name, (case when ct.cplandno='0000000000' or ct.cplandno='0' then '-' else ct.cplandno end) CP_MOBILE_NO" +
                                ", (case when ct.cpemail='ab@ab.ab' or ct.cpemail='0' then '-' else ct.cpemail end) CP_EMAIL_ID,'Prospect Data' as Data_Source " +
                                "from clients_mst a " +
                                  "left join clients_mst pr on a.parent_id=pr.vch_num and pr.type='BCD' and find_in_set(pr.client_unit_id,'" + unitid_mst + "')= 1 " +
                                "left join clients_mst ct  on a.vch_num=ct.ref_code  and find_in_set(ct.client_unit_id,'" + unitid_mst + "')= 1 and substr(ct.ref_code,0,3)='909' " +
                                "where find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 and a.type in ('PRO')  and  (a.Pros is null or a.Pros = 'N' or a.Pros = '0') and substr(a.vch_num,0,3)='909' ";

                            cmd = mq1 + " union " + mq2;

                            break;


                    }
                    break;
                #endregion
                #region Web Ticket list
                case "web_tlist":
                    switch (btnval.ToUpper())
                    {

                        case "APPROVED":
                            cmd = " select (a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,  a.vch_num Ticket_No, to_char(a.vch_date,'" + sgen.Getsqldateformat() + "') doc_date," +
                              " b.c_name account_name, ((replace(c.cpname, '0', '-') || ' ' || replace(c.cp_mname, '0', '') || ' ' || replace(c.cp_lname, '0', ''))) contact_person," +
                              "a.address subject " +
                              " ,d.master_name ticket_type from lead_master a " +
                              "inner join clients_mst b on a.cust_id = b.vch_num and a.client_unit_id = b.client_unit_id " +
                              " inner join clients_mst c on a.cp_fname = c.vch_num and b.vch_num = c.ref_code and a.client_unit_id = b.client_unit_id " +
                              " inner join master_setting d on a.ld_owner = d.master_id and d.type = 'TKT' and a.client_unit_id = d.client_unit_id" +
                              "  where a.type = 'TCK' and a.client_unit_id = '" + unitid_mst + "' and a.lead_con='N' and  a.lead_app='A'   group by " +
                               " (a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type),a.vch_num, b.c_name,to_char(a.vch_date,'" + sgen.Getsqldateformat() + "') , ((replace(c.cpname, '0', '-') || ' ' || " +
                               "replace(c.cp_mname, '0', '') || ' ' || replace(c.cp_lname, '0', ''))), a.address , d.master_name order by a.vch_num desc ";

                            break;

                        case "REJECTED":
                            cmd = " select (a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,  a.vch_num Ticket_No, to_char(a.vch_date,'" + sgen.Getsqldateformat() + "') doc_date," +
                               " b.c_name account_name, ((replace(c.cpname, '0', '-') || ' ' || replace(c.cp_mname, '0', '') || ' ' || replace(c.cp_lname, '0', ''))) contact_person," +
                               "a.address subject " +
                               " ,d.master_name ticket_type from lead_master a " +
                               "inner join clients_mst b on a.cust_id = b.vch_num and a.client_unit_id = b.client_unit_id " +
                               " inner join clients_mst c on a.cp_fname = c.vch_num and b.vch_num = c.ref_code and a.client_unit_id = b.client_unit_id " +
                               " inner join master_setting d on a.ld_owner = d.master_id and d.type = 'TKT' and a.client_unit_id = d.client_unit_id" +
                               "  where a.type = 'TCK' and a.client_unit_id = '" + unitid_mst + "' and a.lead_con='N' and  a.lead_app='R'    group by " +
                               " (a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type),a.vch_num, b.c_name,to_char(a.vch_date,'" + sgen.Getsqldateformat() + "') , ((replace(c.cpname, '0', '-') || ' ' || " +
                               "replace(c.cp_mname, '0', '') || ' ' || replace(c.cp_lname, '0', ''))), a.address , d.master_name order by a.vch_num desc ";
                            break;

                    }
                    break;
                #endregion
                #region call Log
                case "call_log":
                    switch (btnval.ToUpper())
                    {

                        case "CONTACT":

                            //if (param1 == "Account")
                            //{
                            //    cmd = "select  distinct (ct.
                            //ref_code ||ct.vch_num||to_char(ct.vch_date,'yyyymmdd')||ct.type)  as fstr" +
                            //        " ,replace(nvl(pr.c_name,'-'),0,'-') as Parent_Account,a.vch_num as Account_No,  a.c_name " + accname + "," +
                            //        " ((replace(ct.cpname, '0', '-') || ' ' || replace(ct.cp_mname, '0', '') || ' ' || replace(ct.cp_lname, '0', ''))) cp_name, (case when ct.cplandno='0000000000' or ct.cplandno='0' then '-' else ct.cplandno end) CP_MOBILE_NO" +
                            //        ", (case when ct.cpemail='ab@ab.ab' or ct.cpemail='0' then '-' else ct.cpemail end) CP_EMAIL_ID,'Account Detail' as Data_Source " +
                            //        "from clients_mst a " +
                            //          "left join clients_mst pr on a.parent_id=pr.vch_num and pr.type='BCD' and find_in_set(pr.client_unit_id,'" + unitid_mst + "')= 1 " +
                            //        "left join clients_mst ct  on a.vch_num=ct.ref_code  and find_in_set(ct.client_unit_id,'" + unitid_mst + "')= 1 and substr(ct.ref_code,0,3)='303' " +
                            //        "where find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 and a.type in ('BCD')  and (a.mftr is null or a.mftr='0' or a.mftr='N') and (a.pubr is null or a.pubr='0' or a.pubr='N') and substr(a.vch_num,0,3)='303'";
                            //}
                            //else if (param1 == "Prospect")
                            //{
                            //    cmd = "select  distinct (ct.ref_code||ct.vch_num||to_char(ct.vch_date,'yyyymmdd')||ct.type)  as fstr" +
                            //    " ,replace(nvl(pr.c_name,'-'),0,'-') as Parent_Account,a.vch_num as Account_No,  a.c_name " + accname + "," +
                            //    "  ((replace(ct.cpname, '0', '-') || ' ' || replace(ct.cp_mname, '0', '') || ' ' || replace(ct.cp_lname, '0', ''))) cp_name, (case when ct.cplandno='0000000000' or ct.cplandno='0' then '-' else ct.cplandno end) CP_MOBILE_NO" +
                            //    ", (case when ct.cpemail='ab@ab.ab' or ct.cpemail='0' then '-' else ct.cpemail end) CP_EMAIL_ID,'Prospect Data' as Data_Source " +
                            //    "from clients_mst a " +
                            //      "left join clients_mst pr on a.parent_id=pr.vch_num and pr.type='BCD' and find_in_set(pr.client_unit_id,'" + unitid_mst + "')= 1 " +
                            //    "left join clients_mst ct  on a.vch_num=ct.ref_code  and find_in_set(ct.client_unit_id,'" + unitid_mst + "')= 1 and substr(ct.ref_code,0,3)='909' " +
                            //    "where find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 and a.type in ('PRO')  and  (a.Pros is null or a.Pros = 'N' or a.Pros = '0') and substr(a.vch_num,0,3)='909' ";

                            //}
                            //else if (param1 == "Lead")
                            //{
                            //    cmd = "select  (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) fstr,replace(nvl(pr.c_name,'-'),0,'-') as Parent_Account," +
                            //        " ( case when  a.cust_id='0' then 'Direct Lead' else a.cust_id end )account_no , nvl(b.c_name, a.cust_name)organisation_name,((replace(ct.cpname, '0', '-') || " +
                            //        " ' ' || replace(ct.cp_mname, '0', '') || ' ' || replace(ct.cp_lname, '0', ''))) cp_name, (case when ct.cplandno = '0000000000' or ct.cplandno = '0'" +
                            //        " then '-' else ct.cplandno end) CP_MOBILE_NO , (case when ct.cpemail = 'ab@ab.ab' or ct.cpemail = '0' then '-' else ct.cpemail end) CP_EMAIL_ID," +
                            //        "a.vch_num lead_no, to_char(a.vch_date, 'dd/MM/YYYY') lead_date from lead_master a left join clients_mst b on a.cust_id = b.vch_num and a.ref_type = b.type" +
                            //        " and find_in_set(b.client_unit_id,'" + unitid_mst + "')= 1 left join clients_mst pr on b.parent_id = pr.vch_num and pr.type = 'BCD' and " +
                            //        "find_in_set(pr.client_unit_id,'" + unitid_mst + "')= 1 left join clients_mst ct  on b.vch_num = ct.ref_code  and ct.vch_num = a.cp_id and a.cust_id" +
                            //        " = ct.ref_code and ct.type = b.type  and find_in_set(ct.client_unit_id,'" + unitid_mst + "')= 1 where a.type = 'LED' and a.client_unit_id = '" + unitid_mst + "'  order by a.vch_num desc ";
                            //}

                            mq1 = "select  distinct (ct.ref_code||ct.vch_num||to_char(ct.vch_date,'yyyymmdd')||ct.type)  as fstr,1 ds" +
                                   " ,replace(nvl(pr.c_name,'-'),0,'-') as Parent_Account,a.vch_num as Account_No,  a.c_name " + accname + "," +
                                   " ((replace(ct.cpname, '0', '-') || ' ' || replace(ct.cp_mname, '0', '') || ' ' || replace(ct.cp_lname, '0', ''))) cp_name, (case when ct.cplandno='0000000000' or ct.cplandno='0' then '-' else ct.cplandno end) CP_MOBILE_NO" +
                                   ", (case when ct.cpemail='ab@ab.ab' or ct.cpemail='0' then '-' else ct.cpemail end) CP_EMAIL_ID,'Account Detail' as Data_Source " +
                                   "from clients_mst a " +
                                     "left join clients_mst pr on a.parent_id=pr.vch_num and pr.type='BCD' and find_in_set(pr.client_unit_id,'" + unitid_mst + "')= 1 " +
                                   "left join clients_mst ct  on a.vch_num=ct.ref_code  and find_in_set(ct.client_unit_id,'" + unitid_mst + "')= 1 and substr(ct.ref_code,0,3)='303' " +
                                   "where find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 and a.type in ('BCD')  and (a.mftr is null or a.mftr='0' or a.mftr='N') and (a.pubr is null or a.pubr='0' or a.pubr='N') and substr(a.vch_num,0,3)='303'";

                            mq2 = "select  distinct (ct.ref_code||ct.vch_num||to_char(ct.vch_date,'yyyymmdd')||ct.type)  as fstr, 2 ds" +
                            " ,replace(nvl(pr.c_name,'-'),0,'-') as Parent_Account,a.vch_num as Account_No,  a.c_name " + accname + "," +
                            "  ((replace(ct.cpname, '0', '-') || ' ' || replace(ct.cp_mname, '0', '') || ' ' || replace(ct.cp_lname, '0', ''))) cp_name, (case when ct.cplandno='0000000000' or ct.cplandno='0' then '-' else ct.cplandno end) CP_MOBILE_NO" +
                            ", (case when ct.cpemail='ab@ab.ab' or ct.cpemail='0' then '-' else ct.cpemail end) CP_EMAIL_ID,'Prospect Data' as Data_Source " +
                            "from clients_mst a " +
                              "left join clients_mst pr on a.parent_id=pr.vch_num and pr.type='BCD' and find_in_set(pr.client_unit_id,'" + unitid_mst + "')= 1 " +
                            "left join clients_mst ct  on a.vch_num=ct.ref_code  and find_in_set(ct.client_unit_id,'" + unitid_mst + "')= 1 and substr(ct.ref_code,0,3)='909' " +
                            "where find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 and a.type in ('PRO')  and  (a.Pros is null or a.Pros = 'N' or a.Pros = '0') and substr(a.vch_num,0,3)='909' ";


                            mq3 = "select  (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) fstr,3 ds,replace(nvl(pr.c_name,'-'),0,'-') as Parent_Account," +
                                " ( case when  a.cust_id='0' then 'Direct Lead' else a.cust_id end )account_no , nvl(b.c_name, a.cust_name)organisation_name,((replace(ct.cpname, '0', '-') || " +
                                " ' ' || replace(ct.cp_mname, '0', '') || ' ' || replace(ct.cp_lname, '0', ''))) cp_name, (case when ct.cplandno = '0000000000' or ct.cplandno = '0'" +
                                " then '-' else ct.cplandno end) CP_MOBILE_NO , (case when ct.cpemail = 'ab@ab.ab' or ct.cpemail = '0' then '-' else ct.cpemail end) CP_EMAIL_ID,'Lead Data' as Data_Source " +
                                " from lead_master a left join clients_mst b on a.cust_id = b.vch_num and a.ref_type = b.type" +
                                " and find_in_set(b.client_unit_id,'" + unitid_mst + "')= 1 left join clients_mst pr on b.parent_id = pr.vch_num and pr.type = 'BCD' and " +
                                "find_in_set(pr.client_unit_id,'" + unitid_mst + "')= 1 left join clients_mst ct  on b.vch_num = ct.ref_code  and ct.vch_num = a.cp_id and a.cust_id" +
                                " = ct.ref_code and ct.type = b.type  and find_in_set(ct.client_unit_id,'" + unitid_mst + "')= 1 where a.type = 'LED' and a.client_unit_id = '" + unitid_mst + "'  and a.cust_id='0' ";



                            mq = mq1 + " union " + mq2 + " union " + mq3;
                            cmd = "select a.fstr,a.parent_account,a.account_no,a.organisation_name,a.cp_name,a.cp_mobile_no," +
                                "a.cp_email_id,a.data_source from (" + mq + ") a where fstr is not null  order by ds";

                            break;

                        case "EDIT":
                        case "VIEW":
                            cmd = "select  (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr," +
                                " a.vch_num doc_no,to_char(a.vch_date,'dd/mm/yyyy') doc_date,replace(nvl(pr.c_name,'-'),0,'-') as Parent_Account," +
                                "b.vch_num as Account_No,  b.c_name as Organisation_Name,((replace(ct.cpname, '0', '-') || ' ' || replace(ct.cp_mname, '0', '') || ' ' || replace(ct.cp_lname, '0', ''))) cp_name" +
                                ",a.col7 call_type,a.col10 Associate_With, cast(a.col24 as varchar(2000)) note " +
                                " from enx_tab2 a inner join clients_mst b on b.vch_num = a.Col5 and" +
                                " find_in_set(b.client_unit_id,'" + unitid_mst + "')= 1 left join clients_mst pr" +
                                " on b.parent_id = pr.vch_num  and find_in_set(pr.client_unit_id,'" + unitid_mst + "')= 1 and pr.vch_num!='0'" +
                                " left join clients_mst ct  on a.col5=ct.ref_code and a.col6=ct.vch_num  and find_in_set(ct.client_unit_id,'" + unitid_mst + "')= 1" +
                                " where a.type = 'CAL' and a.client_unit_id = '" + unitid_mst + "' order by a.vch_num desc ";
                            break;
                    }
                    break;
                #endregion
                #region appointment
                case "appointment":
                    switch (btnval.ToUpper())
                    {

                        case "CONTACT":


                            mq1 = "select  distinct (ct.ref_code||ct.vch_num||to_char(ct.vch_date,'yyyymmdd')||ct.type)  as fstr,1 ds" +
                                " ,replace(nvl(pr.c_name,'-'),0,'-') as Parent_Account,a.vch_num as Account_No,  a.c_name " + accname + "," +
                                " ((replace(ct.cpname, '0', '-') || ' ' || replace(ct.cp_mname, '0', '') || ' ' || replace(ct.cp_lname, '0', ''))) cp_name, (case when ct.cplandno='0000000000' or ct.cplandno='0' then '-' else ct.cplandno end) CP_MOBILE_NO" +
                                ", (case when ct.cpemail='ab@ab.ab' or ct.cpemail='0' then '-' else ct.cpemail end) CP_EMAIL_ID,'Account Detail' as Data_Source " +
                                "from clients_mst a " +
                                  "left join clients_mst pr on a.parent_id=pr.vch_num and pr.type='BCD' and find_in_set(pr.client_unit_id,'" + unitid_mst + "')= 1 " +
                                "left join clients_mst ct  on a.vch_num=ct.ref_code  and find_in_set(ct.client_unit_id,'" + unitid_mst + "')= 1 and substr(ct.ref_code,0,3)='303' " +
                                "where find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 and a.type in ('BCD')  and (a.mftr is null or a.mftr='0' or a.mftr='N') and (a.pubr is null or a.pubr='0' or a.pubr='N') and substr(a.vch_num,0,3)='303'";

                            mq2 = "select  distinct (ct.ref_code||ct.vch_num||to_char(ct.vch_date,'yyyymmdd')||ct.type)  as fstr, 2 ds" +
                            " ,replace(nvl(pr.c_name,'-'),0,'-') as Parent_Account,a.vch_num as Account_No,  a.c_name " + accname + "," +
                            "  ((replace(ct.cpname, '0', '-') || ' ' || replace(ct.cp_mname, '0', '') || ' ' || replace(ct.cp_lname, '0', ''))) cp_name, (case when ct.cplandno='0000000000' or ct.cplandno='0' then '-' else ct.cplandno end) CP_MOBILE_NO" +
                            ", (case when ct.cpemail='ab@ab.ab' or ct.cpemail='0' then '-' else ct.cpemail end) CP_EMAIL_ID,'Prospect Data' as Data_Source " +
                            "from clients_mst a " +
                              "left join clients_mst pr on a.parent_id=pr.vch_num and pr.type='BCD' and find_in_set(pr.client_unit_id,'" + unitid_mst + "')= 1 " +
                            "left join clients_mst ct  on a.vch_num=ct.ref_code  and find_in_set(ct.client_unit_id,'" + unitid_mst + "')= 1 and substr(ct.ref_code,0,3)='909' " +
                            "where find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 and a.type in ('PRO')  and  (a.Pros is null or a.Pros = 'N' or a.Pros = '0') and substr(a.vch_num,0,3)='909' ";


                            mq3 = "select  (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) fstr,3 ds,replace(nvl(pr.c_name,'-'),0,'-') as Parent_Account," +
                                " ( case when  a.cust_id='0' then 'Direct Lead' else a.cust_id end )account_no , nvl(b.c_name, a.cust_name)organisation_name,((replace(ct.cpname, '0', '-') || " +
                                " ' ' || replace(ct.cp_mname, '0', '') || ' ' || replace(ct.cp_lname, '0', ''))) cp_name, (case when ct.cplandno = '0000000000' or ct.cplandno = '0'" +
                                " then '-' else ct.cplandno end) CP_MOBILE_NO , (case when ct.cpemail = 'ab@ab.ab' or ct.cpemail = '0' then '-' else ct.cpemail end) CP_EMAIL_ID,'Lead Data' as Data_Source " +
                                " from lead_master a left join clients_mst b on a.cust_id = b.vch_num and a.ref_type = b.type" +
                                " and find_in_set(b.client_unit_id,'" + unitid_mst + "')= 1 left join clients_mst pr on b.parent_id = pr.vch_num and pr.type = 'BCD' and " +
                                "find_in_set(pr.client_unit_id,'" + unitid_mst + "')= 1 left join clients_mst ct  on b.vch_num = ct.ref_code  and ct.vch_num = a.cp_id and a.cust_id" +
                                " = ct.ref_code and ct.type = b.type  and find_in_set(ct.client_unit_id,'" + unitid_mst + "')= 1 where a.type = 'LED' and a.client_unit_id = '" + unitid_mst + "'  and a.cust_id='0' ";



                            mq = mq1 + " union " + mq2 + " union " + mq3;
                            cmd = "select a.fstr,a.parent_account,a.account_no,a.organisation_name,a.cp_name,a.cp_mobile_no," +
                                "a.cp_email_id,a.data_source from (" + mq + ") a where fstr is not null  order by ds";

                            break;

                        case "EDIT":
                            cmd = " Select  (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr ,o.master_name outcome," +
                                "to_char(a.vch_date, '" + sgen.Getsqldateformat() + "') doc_date,replace(nvl(pr.c_name, '-'), 0, '-') as Parent_Account,b.vch_num as Account_No, " +
                                " b.c_name as Organisation_Name,((replace(ct.cpname, '0', '-') || ' ' || replace(ct.cp_mname, '0', '') || ' ' || replace(ct.cp_lname, '0', ''))) " +
                                "cp_name,a.col7 Related_To, a.col3 Subject,( case when a.col12 = 'Y' then 'YES' else 'No' end) Full_Day, " +
                                " ( case when a.col12='Y' then to_char(a.date1 ,'" + sgen.Getsqldateformat() + "') else  to_char(a.date1,'" + sgen.Getsqldatetimeformat() + "') end) from_date, " +
                                " ( case when a.col12='Y' then to_char(a.date2 ,'" + sgen.Getsqldateformat() + "') else  to_char(a.date2,'" + sgen.Getsqldatetimeformat() + "') end) to_date" +
                                " from enx_tab2 a inner join clients_mst b on b.vch_num = a.Col5 and" +
                                " find_in_set(b.client_unit_id,'" + unitid_mst + "')= 1 left join clients_mst pr" +
                                " on b.parent_id = pr.vch_num  and find_in_set(pr.client_unit_id,'" + unitid_mst + "')= 1 and pr.vch_num!='0' " +
                                " left join clients_mst ct  on a.col5=ct.ref_code and a.col6=ct.vch_num  and find_in_set(ct.client_unit_id,'" + unitid_mst + "')= 1" +
                                " inner join master_setting o on o.master_id= a.Col10 and o.type='OUT' and find_in_set (o.client_unit_id,'" + unitid_mst + "')=1" +
                                "where a.type = 'APP' and a.client_unit_id = '" + unitid_mst + "' and r_no='N' order by a.vch_num desc ";
                            break;

                        case "VIEW":
                            cmd = " Select  (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,( case when a.r_no='R' then 'Re-Shedule' when a.r_no='C' then o.master_name else 'New' end ) Appointment_Status,o.master_name outcome," +
                                "to_char(a.vch_date, '" + sgen.Getsqldateformat() + "') doc_date,replace(nvl(pr.c_name, '-'), 0, '-') as Parent_Account,b.vch_num as Account_No, " +
                                " b.c_name as Organisation_Name,((replace(ct.cpname, '0', '-') || ' ' || replace(ct.cp_mname, '0', '') || ' ' || replace(ct.cp_lname, '0', ''))) " +
                                "cp_name,a.col7 Related_To, a.col3 Subject,( case when a.col12 = 'Y' then 'YES' else 'No' end) Full_Day, " +
                                " ( case when a.col12='Y' then to_char(a.date1 ,'" + sgen.Getsqldateformat() + "') else  to_char(a.date1,'" + sgen.Getsqldatetimeformat() + "') end) from_date, " +
                                " ( case when a.col12='Y' then to_char(a.date2 ,'" + sgen.Getsqldateformat() + "') else  to_char(a.date2,'" + sgen.Getsqldatetimeformat() + "') end) to_date" +
                                " from enx_tab2 a inner join clients_mst b on b.vch_num = a.Col5 and" +
                                " find_in_set(b.client_unit_id,'" + unitid_mst + "')= 1 left join clients_mst pr" +
                                " on b.parent_id = pr.vch_num  and find_in_set(pr.client_unit_id,'" + unitid_mst + "')= 1 and pr.vch_num!='0' " +
                                " left join clients_mst ct  on a.col5=ct.ref_code and a.col6=ct.vch_num  and find_in_set(ct.client_unit_id,'" + unitid_mst + "')= 1" +
                                " inner join master_setting o on o.master_id= a.Col10 and o.type='OUT' and find_in_set (o.client_unit_id,'" + unitid_mst + "')=1" +
                                " where a.type = 'APP' and a.client_unit_id = '" + unitid_mst + "'  order by b.c_name ,a.vch_num desc ";
                            break;
                    }
                    break;
                #endregion
                #region outcome
                case "outcome":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "VIEW":
                            cmd = "select client_id||client_unit_id||vch_num||to_char(vch_date,'yyyymmdd')||type as fstr," +
                                "master_id Outcome_Id,master_name as Outcome_Name, (CASE when status='Y' THEN 'Active' when status = '' THEN 'Active' else 'Inactive' end) as Status, " +
                                "classid as For_Close_Appt from master_setting where" +
                                "  client_unit_id='" + unitid_mst + "' and (type='OUT'or type='DDOUT') order by vch_num desc";
                            break;
                    }
                    break;
                #endregion
                #region small party
                case "s_party":
                    string prefix = "";
                    if (sgen.GetSession(MyGuid, "VD_TYPEMST") != null)
                    {
                        type = sgen.GetSession(MyGuid, "VD_TYPEMST").ToString().Trim();
                        prefix = sgen.GetSession(MyGuid, "VD_PREFIX").ToString().Trim();
                        condition = condition + "and substr(a.vch_num,0,3)='" + prefix + "'";
                        condition = condition + " and (a.mftr is null or a.mftr='0' or a.mftr='N') and (a.pubr is null or a.pubr='0' or a.pubr='N')";
                    }
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "VIEW":
                            cmd = "select distinct (a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr," +
                                   "a.vch_num as doc_no,  a.c_name ORGANISATION_NAME,(case when length(pr.c_name)=1  and pr.c_name='0' then '-' else pr.c_name end ) as Parent_Account," +
                                   "a.type_desc SEARCH_TEXT, replace(ct.cpname,'0','-') cp_first_name, replace(nvl(ct.cp_mname,'-'),'0','-') CP_MIDDLE_NAME, replace(nvl(ct.cp_lname,'-'),'0','-') CP_LAST_NAME," +
                                   "(case when ct.cplandno='0000000000' then '-' else ct.cplandno end) CONTACT_P_MOBILE_NO,nvl(v.master_name,'-') Category " +
                                   "from clients_mst a " +
                                   "left join clients_mst pr on a.parent_id=pr.vch_num and pr.type='BCD' and find_in_set(pr.client_unit_id,'" + unitid_mst + "')= 1 " +
                                   "left join clients_mst ct  on a.vch_num=ct.ref_code  and find_in_set(ct.client_unit_id,'" + unitid_mst + "')= 1 and substr(ct.ref_code,0,3)=" + prefix + " " +
                                   "left join master_setting v on v.master_id=a.vdcat and v.type='VCG' and find_in_set(v.client_unit_id,a.client_unit_id)=1 " +
                                   "where find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 and a.type in ('" + type + "','DD" + type + "') " + condition + " order by a.vch_num desc";

                            break;
                    }
                    break;
                #endregion
                #region create order
                case "cr_order":

                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "VIEW":
                            cmd = "select (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr, a.vch_num order_no, to_char(a.vch_date,'" + sgen.Getsqldateformat() + "') order_date ," +
                                " cp.c_name  customer_name,((replace(ct.cpname, '0', '-') || '- ' || replace(ct.cp_mname, '0', '') || ' ' || replace(ct.cp_lname, '0', ''))) contact_person, " +
                                "(case when(ct.cpemail = 'ab@ab.ab' or ct.cpemail = '0') then ''" +
                                " else ct.cpemail end) CP_Email_ID,(case when(ct.cplandno = '0000000000' " +
                                " or ct.cplandno = '0') then '' else ct.cplandno end  )  cp_phone_no,a.budget" +
                                " order_value, to_char(a.dob, '" + sgen.Getsqldateformat() + "') Expected_Delivery_Date from Lead_Master a " +
                                "inner join clients_mst cp on cp.vch_num = a.cust_id and find_in_set(cp.client_unit_id,'" + unitid_mst + "')= 1" +
                                " and substr(cp.vch_num, 0, 3) = '303' inner join clients_mst ct  on a.cp_id = ct.vch_num" +
                                " and a.cust_id = ct.ref_code  and find_in_set(ct.client_unit_id, '" + unitid_mst + "') = 1" +
                                " and substr(ct.ref_code, 0, 3) = '303' where a.type = 'ORD'and  a.client_unit_id = '" + unitid_mst + "' order by a.vch_num desc";

                            break;
                    }
                    break;
                #endregion
                #region  order status
                case "ord_status":

                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "VIEW":
                            cmd = "select (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr," +
                                " a.vch_num doc_no,to_char(a.vch_date,'" + sgen.Getsqldateformat() + "') doc_date,a.ref_code order_no," +
                                "(case when a.col12 = '1' then 'Order Delay' when a.col12 = '2' then 'Order Dispatch' else 'Order Close' end)" +
                                " order_status from enx_tab2 a  where a.type = 'ORD' and a.client_unit_id = '" + unitid_mst + "' order by a.vch_num desc";

                            break;
                    }
                    break;
                #endregion

                #region frequency master
                case "freqmst":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "DETAIL":
                            cmd = "select (a.master_id||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.master_id as Doc_No,a.master_name as Name," +
                                  "(case when a.master_type='001' then 'Booking when a.master_type='002' then 'Lead' end) type," +
                                  "a.classid as rem_time_in_days,a.SUBJECTID frq_count,a.SECTIONID as interval_in_days,a.client_unit_id Unit_id, " +
                                  "(b.First_name|| ' '|| replace(nvl(b.middle_name, ''),'0','')|| ' '|| replace(nvl(b.last_name,''),'0','')) as Ent_By," +
                                  "to_char(convert_tz(a.master_EntDate, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') as Ent_Date " +
                                  "from master_setting a " +
                                  "left join user_details b on a.master_entby = b.vch_num and b.type = 'CPR' " +
                                  "where a.type = 'CRF' and a.client_unit_id='" + unitid_mst + "' order by a.master_id asc";
                            break;
                    }
                    break;

                #endregion

                #region phone template
                case "phonetmp":
                    switch (btnval.ToUpper())
                    {
                        case "VIEW":
                        case "EDIT":
                            cmd = "select (a.client_id||a.client_unit_id||a.vch_num || to_char(a.vch_date, 'yyyymmdd') ||a.type) fstr,a.vch_num templete_id," +
                                "a.col2 as template_name,(case when a.col3='001' then 'Lead' when a.col3='002' then 'Booking' when a.col3='003' then 'Booking Cancel' when a.col3='004' then 'Feedback' end) type " +
                                "from enx_tab2 a where a.type = 'PTP' and a.client_unit_id = '" + unitid_mst + "'";
                            break;
                    }
                    break;
                    #endregion
            }
            sgen.open_grid(title, cmd, sgen.Make_int(seektype));
            ViewBag.pageurl = sgen.GetSession(MyGuid, "pageurl").ToString();
        }
        #endregion
        //========================callback==============
        #region call back
        public List<Tmodelmain> CallbackFun(string btnval, string edmode, string viewName, string controllerName, List<Tmodelmain> model)
        {
            FillMst(MyGuid);
            var tm = model.FirstOrDefault();
            String URL = sgen.GetSession(MyGuid, "SSEEKVAL").ToString();
            string defcall = "";
            List<Tmodelmain> rpt_model = new List<Tmodelmain>();
            List<SelectListItem> mod1 = new List<SelectListItem>();
            List<SelectListItem> mod2 = new List<SelectListItem>();
            List<SelectListItem> mod3 = new List<SelectListItem>();
            List<SelectListItem> mod4 = new List<SelectListItem>();
            List<SelectListItem> mod5 = new List<SelectListItem>();
            List<SelectListItem> mod6 = new List<SelectListItem>();
            List<SelectListItem> mod7 = new List<SelectListItem>();
            List<SelectListItem> mod8 = new List<SelectListItem>();
            List<SelectListItem> mod9 = new List<SelectListItem>();
            List<SelectListItem> mod10 = new List<SelectListItem>();
            List<SelectListItem> mod11 = new List<SelectListItem>();
            List<SelectListItem> mod12 = new List<SelectListItem>();
            List<SelectListItem> mod13 = new List<SelectListItem>();
            List<SelectListItem> mod14 = new List<SelectListItem>();
            List<SelectListItem> mod15 = new List<SelectListItem>();
            List<SelectListItem> mod16 = new List<SelectListItem>();
            DataTable dtt = new DataTable();
            switch (viewName.ToLower())
            {
                #region new_cust
                //                case "new_cust":
                //                    mq = @"select cp.sez, cp.PR_TYPE ,cp.refered_by, cp.file_no,cp.occ_type,cp.panno,cp.BILL_ADD,cp.rec_id,cp.c_name as cust_name,
                // to_char(cp.dob, '" + sgen.Getsqldateformat() + "') as dob," +
                //"to_char(cp.doa, '" + sgen.Getsqldateformat() + "') as doa," +
                //"to_char(convert_tz(cp.MT_DT, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldatetimeformat() + "') as MT_DT," +
                //"cp.cpemail as email,cs.alpha_2 as country_id,cs.country_name,cs.state_gst_code as state_id ,cs.state_name," +
                //"cs.district_name,cs.city_name,cs.teh_name,cs.v_name,cp.city" +
                //",ba.alpha_2 as country_id2,ba.country_name as country_name2, ba.state_gst_code as state_id2 ," +
                //"ba.state_name as state_name2 ,ba.district_name as district_name2,ba.city_name as city_name," +
                //"ba.teh_name as teh_name2,ba.v_name as v_name2 ,cp.city2,cp.cpaddr2," +
                //"cp.c_gstin as cust_gstin_no,cp.CPLANDNO landline,cp.cpcont mob,cp.cpaltcont altmob,cp.cpaddr,ms.master_name as prop_type,cp.remark,cp.client_id," +
                //"cp.client_unit_id,cp.vch_num,cp.ent_by,cp.ent_date,cp.latlong,cp.google_add,cp.client_type from clients_mst cp " +
                //"left join country_state cs on cs.rec_id = cp.city  " +
                //"left join country_state ba on ba.rec_id = cp.city2  " +
                //"inner join master_setting ms on ms.master_id = cp.PR_TYPE and ms.type='PRT' and ms.client_id='" + clientid_mst + "' and ms.client_unit_id='" + unitid_mst + "' " +
                //"where cp.client_id||cp.client_unit_id|| cp.vch_num||to_char(cp.vch_date, 'yyyymmdd')|| cp.type='" + URL + "' ";
                //                    dtt = sgen.getdata(userCode, mq);
                //                    if (dtt.Rows.Count > 0)
                //                    {
                //                        #region bindpro_type
                //                        mod1 = cmd_Fun.protype(userCode, unitid_mst);
                //                        TempData[MyGuid + "_TList1"] = mod1;
                //                        #endregion
                //                        #region occupation type
                //                        mod2 = cmd_Fun.occtype(userCode, unitid_mst);
                //                        TempData[MyGuid + "_TList2"] = mod2;
                //                        #endregion
                //                        #region  SALES/SERVICE AREA
                //                        mod1 = cmd_Fun.salearea(userCode, unitid_mst);
                //                        TempData[MyGuid + "_TList3"] = mod3;
                //                        #endregion
                //                        DataRow dr = dtt.Rows[0];
                //                        model[0].Col1 = dr["client_id"].ToString();
                //                        model[0].Col2 = dr["client_unit_id"].ToString();
                //                        model[0].Col3 = dr["ent_by"].ToString();
                //                        model[0].Col4 = dr["ent_date"].ToString();
                //                        model[0].Col7 = dr["rec_id"].ToString();
                //                        model[0].Col8 = "(client_id|| client_unit_id|| vch_num|| to_char(vch_date, 'yyyymmdd')|| type) = '" + URL + "'";
                //                        model[0].Col9 = tm.Col9;
                //                        model[0].Col10 = tm.Col10;
                //                        model[0].Col11 = tm.Col11;
                //                        model[0].Col12 = tm.Col12;
                //                        model[0].Col14 = tm.Col14;
                //                        model[0].Col15 = tm.Col15;
                //                        model[0].Col18 = dr["vch_num"].ToString();
                //                        model[0].Col16 = dr["city"].ToString();//village id
                //                        model[0].Col19 = dr["cust_name"].ToString();//name
                //                        model[0].Col20 = dr["dob"].ToString();//dob
                //                        model[0].Col21 = dr["doa"].ToString();//doa                
                //                        model[0].Col22 = dr["email"].ToString();
                //                        model[0].Col23 = dr["cpaddr"].ToString();
                //                        model[0].Col24 = dr["v_name"].ToString();
                //                        model[0].Col25 = dr["teh_name"].ToString();
                //                        model[0].Col26 = dr["city_name"].ToString();
                //                        model[0].Col27 = dr["district_name"].ToString();
                //                        model[0].Col28 = dr["state_name"].ToString();
                //                        model[0].Col29 = dr["country_name"].ToString();
                //                        model[0].Col30 = dr["MT_DT"].ToString();//meeting datetime
                //                        model[0].Col31 = dr["remark"].ToString();
                //                        model[0].Col33 = dr["mob"].ToString();//mobile                                              
                //                        model[0].Col34 = dr["landline"].ToString();//landline
                //                        model[0].Col35 = "file_tab";
                //                        model[0].Col36 = dr["altmob"].ToString();//altno
                //                        model[0].Col37 = dr["refered_by"].ToString();//ref by
                //                        model[0].Col38 = dr["file_no"].ToString();//old file no
                //                        model[0].Col40 = dr["cust_gstin_no"].ToString();//gstin
                //                        model[0].Col41 = dr["panno"].ToString();//pan no
                //                        if (dr["BILL_ADD"].ToString() == "Y")
                //                        {
                //                            model[0].Chk1 = true;
                //                        }
                //                        else { model[0].Chk1 = false; }
                //                        if (dr["sez"].ToString() == "Y")
                //                        {
                //                            model[0].Chk2 = true;
                //                        }
                //                        else { model[0].Chk2 = false; }
                //                        model[0].Col76 = dr["latlong"].ToString();
                //                        model[0].Col77 = dr["google_add"].ToString();
                //                        model[0].Col42 = dr["v_name2"].ToString();
                //                        model[0].Col43 = dr["teh_name2"].ToString();
                //                        model[0].Col44 = dr["district_name2"].ToString();
                //                        model[0].Col45 = dr["state_name2"].ToString();
                //                        model[0].Col46 = dr["country_name2"].ToString();
                //                        model[0].Col47 = dr["cpaddr2"].ToString();
                //                        model[0].Col48 = dr["city2"].ToString();//village id billing
                //                        model[0].Col49 = dr["country_id"].ToString();//country id
                //                        model[0].Col50 = dr["state_id"].ToString();// state id
                //                        model[0].Col51 = dr["country_id2"].ToString();// country id 2
                //                        model[0].Col52 = dr["state_id2"].ToString();// state id 2
                //                        model[0].TList1 = mod1;
                //                        model[0].SelectedItems1 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["PR_TYPE"].ToString()).Distinct()).Split(',');
                //                        model[0].TList2 = mod2;
                //                        model[0].TList3 = mod3;
                //                        model[0].SelectedItems2 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["occ_type"].ToString()).Distinct()).Split(',');
                //                        model[0].SelectedItems3 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["client_type"].ToString()).Distinct()).Split(',');
                //                        DataTable dtf = new DataTable();
                //                        dtf = sgen.getdata(userCode, "select rec_id,file_name,file_path,col1 from file_tab where" +
                //                            " ref_code='" + dtt.Rows[0]["vch_num"].ToString() + "' and type='BCD' and " +
                //                            "client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "'");
                //                        List<Tmodelmain> ltmf = new List<Tmodelmain>();
                //                        foreach (DataRow drf in dtf.Rows)
                //                        {
                //                            Tmodelmain tmf = new Tmodelmain();
                //                            tmf.Col4 = drf["file_path"].ToString();
                //                            tmf.Col1 = drf["file_name"].ToString();
                //                            tmf.Col2 = drf["col1"].ToString();
                //                            tmf.Col3 = drf["rec_id"].ToString();
                //                            ltmf.Add(tmf);
                //                        }
                //                        model[0].LTM1 = ltmf;
                //                    }
                //                    switch (btnval.ToUpper())
                //                    {
                //                        case "EDIT":
                //                            if (dtt.Rows.Count > 0)
                //                            {
                //                               sgen.SetSession(MyGuid,"EDMODE", "Y");
                //                                DataTable dt = new DataTable();
                //                                DataRow dr = dtt.Rows[0];
                //                                model[0].Col8 = "client_id|| client_unit_id|| vch_num|| to_char(vch_date, 'yyyymmdd')|| type = '" + URL + "'";
                //                                model[0].Col3 = dr["ent_by"].ToString();
                //                                model[0].Col4 = dr["ent_date"].ToString();
                //                                model[0].Col1 = dr["client_id"].ToString();
                //                                model[0].Col2 = dr["client_unit_id"].ToString();
                //                                model[0].Col7 = dr["rec_id"].ToString();
                //                                model[0].Col9 = tm.Col9;
                //                                model[0].Col10 = tm.Col10;
                //                                model[0].Col11 = tm.Col11;
                //                                model[0].Col12 = tm.Col12;
                //                                model[0].Col13 = "Update";
                //                                model[0].Col14 = tm.Col14;
                //                                model[0].Col15 = tm.Col15;
                //                                model[0].Col18 = dr["vch_num"].ToString();
                //                            }
                //                            break;
                //                        case "VIEW":
                //                            if (dtt.Rows.Count > 0)
                //                            {
                //                                ViewBag.scripCall = "disableForm();";
                //                            }
                //                            break;
                //                        case "ADD1":
                //                            //mq = "select * from country_state where client_id||client_unit_id||vch_num|| to_char(vch_date, 'yyyymmdd')||type='" + URL + "'";
                //                            mq = "select * from country_state where alpha_2||state_gst_code ||city_name='" + URL + "'";
                //                            DataTable dt1 = new DataTable();
                //                            dt1 = sgen.getdata(userCode, mq);
                //                            if (dt1.Rows.Count > 0)
                //                            {
                //                                model[0].Col29 = dt1.Rows[0]["country_name"].ToString();
                //                                model[0].Col28 = dt1.Rows[0]["state_name"].ToString();
                //                                model[0].Col27 = dt1.Rows[0]["city_name"].ToString(); //replace with city
                //                                //model[0].Col25 = dt1.Rows[0]["teh_name"].ToString();
                //                                //model[0].Col24 = dt1.Rows[0]["v_name"].ToString();
                //                                model[0].Col16 = dt1.Rows[0]["rec_id"].ToString();
                //                                model[0].Col49 = dt1.Rows[0]["alpha_2"].ToString();
                //                                model[0].Col50 = dt1.Rows[0]["state_gst_code"].ToString();
                //                                if (model[0].Chk1 == true)
                //                                {
                //                                    //model[0].Col42 = dt1.Rows[0]["v_name"].ToString();
                //                                    //model[0].Col43 = dt1.Rows[0]["teh_name"].ToString();
                //                                    model[0].Col44 = dt1.Rows[0]["city_name"].ToString();//replace with city
                //                                    model[0].Col45 = dt1.Rows[0]["state_name"].ToString();
                //                                    model[0].Col46 = dt1.Rows[0]["country_name"].ToString();
                //                                    model[0].Col48 = dt1.Rows[0]["rec_id"].ToString();
                //                                    model[0].Col51 = dt1.Rows[0]["alpha_2"].ToString();
                //                                    model[0].Col52 = dt1.Rows[0]["state_gst_code"].ToString();
                //                                }
                //                            }
                //                            break;
                //                        case "ADD2":
                //                            //mq = "select * from country_state where client_id||client_unit_id||vch_num|| to_char(vch_date, 'yyyymmdd')||type='" + URL + "'";
                //                            mq = "select * from country_state where alpha_2||state_gst_code ||city_name='" + URL + "'";
                //                            dt1 = new DataTable();
                //                            dt1 = sgen.getdata(userCode, mq);
                //                            if (dt1.Rows.Count > 0)
                //                            {
                //                                //model[0].Col42 = dt1.Rows[0]["v_name"].ToString();
                //                                //model[0].Col43 = dt1.Rows[0]["teh_name"].ToString();
                //                                model[0].Col44 = dt1.Rows[0]["city_name"].ToString();//replace with city
                //                                model[0].Col45 = dt1.Rows[0]["state_name"].ToString();
                //                                model[0].Col46 = dt1.Rows[0]["country_name"].ToString();
                //                                model[0].Col48 = dt1.Rows[0]["rec_id"].ToString();
                //                                model[0].Col51 = dt1.Rows[0]["alpha_2"].ToString();
                //                                model[0].Col52 = dt1.Rows[0]["state_gst_code"].ToString();
                //                            }
                //                            break;
                //                        case "FDEL":
                //                            string fid = sgen.GetSession(MyGuid, "delid").ToString();
                //                            res = sgen.execute_cmd(userCode, "Delete from file_tab WHERE rec_id='" + fid + "' and type='VNC' and client_id='"
                //              + clientid_mst + "' and client_unit_id='" + unitid_mst + "'");
                //                           sgen.SetSession(MyGuid,"delid", null);
                //                            if (res)
                //                            {
                //                                var LTM = model[0].LTM1;
                //                                for (int d = 0; d < LTM.Count; d++)
                //                                {
                //                                    var id = LTM[d].Col3;
                //                                    if (id == fid) { model[0].LTM1.RemoveAt(d); }
                //                                }
                //                            }
                //                            break;
                //                        case "PRINT":
                //                            mq = "select sp.master_name as service_area, (select file_path from file_tab where type='BCD' and client_id='" + clientid_mst + "' " +
                //                                " and client_unit_id='" + unitid_mst + "' and col1='Client' and ref_code1=cp.vch_num and rownum<2) as cl_file_path ," +
                //                                "(select file_path from file_tab where type='BCD' and client_id='" + clientid_mst + "'  and client_unit_id='" + unitid_mst + "'" +
                //                                " and col1='Property' and ref_code1=cp.vch_num and rownum<2) as pr_file_path,oc.master_name as occ_name, " +
                //                                "cp.PR_TYPE ,cp.refered_by, cp.file_no,cp.occ_type,cp.panno,cp.BILL_ADD,cp.rec_id,cp.c_name as cust_name, " +
                //                                "to_char(cp.dob, '" + sgen.Getsqldateformat() + "') as dob," +
                //                                "to_char(cp.doa, '" + sgen.Getsqldateformat() + "') as doa," +
                //                                "to_char(convert_tz(cp.MT_DT, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldatetimeformat() + "') as MT_DT," +
                //                                "cp.cpemail as email,cs.alpha_2 as country_id,cs.country_name,cs.state_gst_code as state_id ,cs.state_name," +
                //                                "cs.district_name,cs.city_name,cs.teh_name,cs.v_name,cp.city" + ",ba.alpha_2 as country_id2,ba.country_name as " +
                //                                "country_name2, ba.state_gst_code as state_id2 ,ba.state_name as state_name2 ,ba.district_name as district_name2," +
                //                                "ba.city_name as city_name, ba.teh_name as teh_name2,ba.v_name as v_name2 ,cp.city2,cp.cpaddr2,cp.c_gstin as" +
                //                                "cust_gstin_no,cp.CPLANDNO landline,cp.cpcont mob,cp.cpaltcont altmob,cp.cpaddr,ms.master_name as prop_type," +
                //                                "cp.remark,cp.client_id,cp.client_unit_id,cp.vch_num,cp.ent_by,cp.ent_date,cp.latlong,cp.google_add," +
                //                                "cp.client_type from clients_mst cp  left join country_state cs on cs.rec_id = cp.city " +
                //                                " and cs.client_id='" + clientid_mst + "' and cs.client_unit_id='" + unitid_mst + "' left join country_state ba " +
                //                                "on ba.rec_id = cp.city2  and ba.client_id = '" + clientid_mst + "' and ba.client_unit_id " +
                //                                "= '" + unitid_mst + "' left join master_setting ms on ms.master_id = cp.PR_TYPE and ms.type='PRT' " +
                //                                " and ms.client_id='" + clientid_mst + "' and ms.client_unit_id='" + unitid_mst + "' left join master_setting oc " +
                //                                "on cp.occ_type= oc.master_id and cp.client_unit_id=oc.client_unit_id and oc.type='OCC' left join master_setting sp " +
                //                                "on cp.occ_type= sp.master_id and cp.client_unit_id=sp.client_unit_id and sp.type='SSA' where cp.client_id||cp.client_unit_id||" +
                //                                " cp.vch_num||to_char(cp.vch_date, 'yyyymmdd')|| cp.type='" + URL + "' ";
                //                            DataTable dtm = new DataTable();
                //                            dtm = sgen.getdata(userCode, mq);
                //                            if (dtm.Rows.Count > 0)
                //                            {
                //                                dtm.Columns.Add("clientimage", typeof(Byte[]));
                //                                dtm.Columns.Add("propimage", typeof(Byte[]));
                //                                foreach (DataRow dr in dtm.Rows)
                //                                {
                //                                    FileStream fs;
                //                                    BinaryReader br;
                //                                    string cl_file_path = Server.MapPath("~/Uploads/") + cg_com_name.Replace(" ", "") + "/" + dr["cl_file_path"].ToString();
                //                                    string pr_file_path = Server.MapPath("~/Uploads/") + cg_com_name.Replace(" ", "") + "/" + dr["pr_file_path"].ToString();
                //                                    try
                //                                    {
                //                                        fs = new FileStream(cl_file_path, FileMode.Open);
                //                                        br = new BinaryReader(fs);
                //                                        byte[] Image = new byte[fs.Length + 1];
                //                                        Image = br.ReadBytes(Convert.ToInt32((fs.Length)));
                //                                        dr["clientimage"] = Image;
                //                                        br.Close();
                //                                        fs.Close();
                //                                    }
                //                                    catch
                //                                    {
                //                                        cl_file_path = Server.MapPath("~/Uploads/") + "person-icon.png";
                //                                        fs = new FileStream(cl_file_path, FileMode.Open);
                //                                        br = new BinaryReader(fs);
                //                                        byte[] Image = new byte[fs.Length + 1];
                //                                        Image = br.ReadBytes(Convert.ToInt32((fs.Length)));
                //                                        dr["clientimage"] = Image;
                //                                        br.Close();
                //                                        fs.Close();
                //                                    }
                //                                    try
                //                                    {
                //                                        fs = new FileStream(pr_file_path, FileMode.Open);
                //                                        br = new BinaryReader(fs);
                //                                        byte[] Image = new byte[fs.Length + 1];
                //                                        Image = br.ReadBytes(Convert.ToInt32((fs.Length)));
                //                                        dr["propimage"] = Image;
                //                                        br.Close();
                //                                        fs.Close();
                //                                    }
                //                                    catch
                //                                    {
                //                                        pr_file_path = Server.MapPath("~/Uploads/") + "person-icon.png";
                //                                        fs = new FileStream(pr_file_path, FileMode.Open);
                //                                        br = new BinaryReader(fs);
                //                                        byte[] Image = new byte[fs.Length + 1];
                //                                        Image = br.ReadBytes(Convert.ToInt32((fs.Length)));
                //                                        dr["propimage"] = Image;
                //                                        br.Close();
                //                                        fs.Close();
                //                                    }
                //                                }
                //                                dtm.AcceptChanges();
                //                                sgen.open_report_bydt(userCode, dtm, "new_client", "New Client Detail");
                //                                ViewBag.scripCall = "OpenSingle('../../../../../erp/schoolReports_Rpts/Filter_Report_xml.aspx','95%','900px','Reports');";
                //                            }
                //                            break;
                //                    }
                //                    break;
                //                #endregion
                //#region new_follow
                //case "new_follow":
                //    mq = @"select ex.col5,ex.vch_num as doc_no,ex.cOL2 as cust_id,cp.c_name cust_name,cp.cpaddr address,cp.city as addressid,cp.PR_TYPE 
                //     as proptype,cpemail as email,ex.col1 as Remark,to_char(convert_tz(ex.date1, 'UTC', '" + sgen.Gettimezone() + "'), " +
                //     "'" + sgen.Getsqldatetimeformat() + "') as entdate," +
                //     "to_char(cp.dob, '" + sgen.Getsqldateformat() + "') as dob," +
                //     "to_char(cp.doa, '" + sgen.Getsqldateformat() + "') as doa," +
                //     "to_char(convert_tz(cp.MT_DT, 'UTC', '" + sgen.Gettimezone() + "'), " +
                //     "'" + sgen.Getsqldatetimeformat() + "')   as meetingdt,cs.country_name,cs.state_name,cs.district_name,cs.city_name,cs.teh_name," +
                //     "cs.v_name,ms.master_name as proptype_name,ex.col3 as user_name,b.user_id,ex.rec_id,ex.vch_num,ex.client_id,ex.client_unit_id," +
                //     "ex.ent_by,ex.ent_date,ex.edit_by,ex.edit_date from enx_tab2 ex inner join clients_mst cp on cp.vch_num=ex.col2" +
                //     " and cp.type='BCD' and cp.client_id=ex.client_id and cp.client_unit_id=ex.client_unit_id left join country_state cs" +
                //     " on cs.rec_id = cp.city  left join master_setting ms on ms.master_id = cp.PR_TYPE" +
                //     " and ms.type='PRT' inner join user_details b on ex.col3 = lpad(b.rec_id, 6, 0) and b.type = 'CPR'" +
                //     " where ex.client_id|| ex.client_unit_id|| ex.vch_num|| to_char(ex.vch_date, 'yyyymmdd')|| ex.type='" + URL + "' ";
                //    dtt = sgen.getdata(userCode, mq); ;
                //    if (dtt.Rows.Count > 0)
                //    {
                //      sgen.SetSession(MyGuid,"adttmp", dtt);
                //        DataRow dr = dtt.Rows[0];
                //        model[0].Col19 = dr["cust_name"].ToString();
                //        model[0].Col20 = dr["dob"].ToString();
                //        model[0].Col21 = dr["doa"].ToString();
                //        model[0].Col30 = dr["meetingdt"].ToString();
                //        model[0].Col22 = dr["email"].ToString();
                //        model[0].Col23 = dr["address"].ToString();
                //        model[0].Col16 = dr["addressid"].ToString();
                //        model[0].Col24 = dr["v_name"].ToString();
                //        model[0].Col25 = dr["teh_name"].ToString();
                //        model[0].Col26 = dr["city_name"].ToString();
                //        model[0].Col27 = dr["district_name"].ToString();
                //        model[0].Col28 = dr["state_name"].ToString();
                //        model[0].Col29 = dr["country_name"].ToString();
                //        model[0].Col37 = dr["col5"].ToString();
                //        #region bindpro_type
                //        mod1 = cmd_Fun.protype(userCode, unitid_mst);
                //       TempData[MyGuid + "_TList1"] = mod1;
                //        #endregion
                //        model[0].TList1 = mod1;
                //        model[0].SelectedItems1 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["proptype"].ToString()).Distinct()).Split(',');
                //        foreach (DataRow dr1 in dtt.Rows)
                //        {
                //            string rmk = "";
                //            if (model[0].Col37 == "D")
                //            {
                //                rmk = "Date : " + dr1["entdate"] + "" + Environment.NewLine;
                //                remark = remark + rmk + "Remark : " + " " + dr1["remark"] + Environment.NewLine + Environment.NewLine + "";
                //            }
                //            else
                //            {
                //                rmk = "Date : " + dr["entdate"] + "" + Environment.NewLine;
                //                remark = remark + rmk + "User : " + dr1["user"] + " " + ',' + " " + "Remark : " + " " + dr1["remark"] + Environment.NewLine + Environment.NewLine + "";
                //            }
                //        }
                //        model[0].Col31 = remark;
                //        DataTable dtf = new DataTable();
                //        dtf = sgen.getdata(userCode, "select rec_id,file_name,file_path,col1 from file_tab where" +
                //            " ref_code='" + dtt.Rows[0]["vch_num"].ToString() + "' and type='VFC' and " +
                //            "client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "'");
                //        List<Tmodelmain> ltmf = new List<Tmodelmain>();
                //        foreach (DataRow drf in dtf.Rows)
                //        {
                //            Tmodelmain tmf = new Tmodelmain();
                //            tmf.Col1 = drf["file_name"].ToString();
                //            tmf.Col2 = drf["col1"].ToString();
                //            tmf.Col3 = drf["rec_id"].ToString();
                //            ltmf.Add(tmf);
                //        }
                //        model[0].LTM1 = ltmf;
                //    }
                //    switch (btnval.ToUpper())
                //    {
                //        case "EDIT":
                //            if (dtt.Rows.Count > 0)
                //            {
                //                sgen.SetSession(MyGuid,"EDMODE","Y");
                //                DataTable dt = new DataTable();
                //                DataRow dr = dtt.Rows[0];
                //                model[0].Col8 = "client_id|| client_unit_id|| vch_num|| to_char(vch_date, 'yyyymmdd')|| type = '" + URL + "'";
                //                model[0].Col3 = dr["ent_by"].ToString();
                //                model[0].Col4 = dr["ent_date"].ToString();
                //                model[0].Col18 = dr["vch_num"].ToString();
                //                model[0].Col1 = dr["client_id"].ToString();
                //                model[0].Col2 = dr["client_unit_id"].ToString();
                //                //model[0].Col7 = dr["rec_id"].ToString();
                //                model[0].Col9 = tm.Col9;
                //                model[0].Col10 = tm.Col10;
                //                model[0].Col11 = tm.Col11;
                //                model[0].Col12 = tm.Col12;
                //                model[0].Col13 = "Update";
                //                model[0].Col14 = tm.Col14;
                //                model[0].Col15 = tm.Col15;
                //            }
                //            break;
                //        case "VIEW":
                //            if (dtt.Rows.Count > 0)
                //            {
                //                ViewBag.scripCall = "disableForm();";
                //            }
                //            break;
                //        case "CUST":
                //            mq = "select PR_TYPE col1, cpcont as mob_no,replace(CPLANDNO,'0','') as landln_no,replace(cpaltcont,'0','') as alt_no,refered_by as referred_by,file_no as old_file_no,occ_type as occ_id," +
                //                "cp.vch_num,cp.c_name cust_name," +
                //                "to_char( cp.dob,'" + sgen.Getsqldateformat() + "')   as DOB," +
                //                "to_char( cp.doa,'" + sgen.Getsqldateformat() + "')  as DOA," +
                //                "cp.cpemail as email,cs.country_name,cs.state_name,cs.district_name,cs.city_name,cs.teh_name,cs.v_name," +
                //                "cp.cpaddr address,ms.master_name as prop_type,cp.c_gstin,to_char( convert_tz(cp.MT_DT,'UTC','" + sgen.Gettimezone() + "')," +
                //                "'" + sgen.Getsqldatetimeformat() + "')  as meeting_datetime,cp.remark from clients_mst cp left join country_state cs " +
                //                "on cs.rec_id = cp.city  left join master_setting ms on ms.master_id = cp.PR_TYPE " +
                //                "and ms.type = 'PRT' where cp.client_id||cp.client_unit_id||cp.vch_num|| to_char(cp.vch_date, 'yyyymmdd')||cp.type='" + URL + "'";
                //            DataTable dt1 = new DataTable();
                //            dt1 = sgen.getdata(userCode, mq);
                //            if (dt1.Rows.Count > 0)
                //            {
                //                #region bindpro_type
                //                mod1 = cmd_Fun.protype(userCode, unitid_mst);
                //                TempData[MyGuid + "_TList1"] = mod1;
                //                #endregion
                //                #region occupation type
                //                mod2 = cmd_Fun.occtype(userCode, unitid_mst);
                //                TempData[MyGuid + "_TList2"] = mod2;
                //                #endregion
                //                model[0].Col19 = dt1.Rows[0]["cust_name"].ToString();
                //                model[0].Col20 = dt1.Rows[0]["DOB"].ToString();
                //                model[0].Col21 = dt1.Rows[0]["DOA"].ToString();
                //                model[0].Col22 = dt1.Rows[0]["email"].ToString();
                //                model[0].Col23 = dt1.Rows[0]["address"].ToString();
                //                model[0].Col24 = dt1.Rows[0]["v_name"].ToString();
                //                model[0].Col25 = dt1.Rows[0]["teh_name"].ToString();
                //                model[0].Col26 = dt1.Rows[0]["city_name"].ToString();
                //                model[0].Col27 = dt1.Rows[0]["district_name"].ToString();
                //                model[0].Col28 = dt1.Rows[0]["state_name"].ToString();
                //                model[0].Col29 = dt1.Rows[0]["country_name"].ToString();
                //                model[0].Col30 = dt1.Rows[0]["meeting_datetime"].ToString();
                //                model[0].Col36 = dt1.Rows[0]["vch_num"].ToString();
                //                model[0].Col38 = dt1.Rows[0]["mob_no"].ToString();
                //                model[0].Col39 = dt1.Rows[0]["landln_no"].ToString();
                //                model[0].Col40 = dt1.Rows[0]["alt_no"].ToString();
                //                model[0].Col41 = dt1.Rows[0]["referred_by"].ToString();
                //                model[0].Col42 = dt1.Rows[0]["old_file_no"].ToString();
                //                model[0].TList1 = mod1;
                //                model[0].SelectedItems1 = System.String.Join(",", dt1.Rows.OfType<DataRow>().Select(r => r["col1"].ToString()).Distinct()).Split(',');
                //                model[0].TList2 = mod2;
                //                model[0].SelectedItems2 = System.String.Join(",", dt1.Rows.OfType<DataRow>().Select(r => r["occ_id"].ToString()).Distinct()).Split(',');
                //            }
                //            break;
                //    }
                //    break;
                #endregion
                #region Family Detail
                case "conf_cust":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":

                            //mq = "select cp.client_id||cp.client_unit_id|| cp.vch_num|| to_char(cp.vch_date, 'yyyymmdd')|| cp.type as cpfstr, ex.col5 as relation, ex.ent_by,ex.client_id,ex.client_unit_id,ex.ent_date,ex.rec_id,ex.vch_num as doc_no " +
                            //    ",ex.col2 as customerid,cp.c_name cust_name,ex.col3 as Name," +
                            //  "to_char(ex.date1,'" + sgen.Getsqldateformat() + "') as r_dob," +
                            //  "to_char(ex.date2,'" + sgen.Getsqldateformat() + "') as r_doa, cp.MT_DT,cp.client_type,cp.panno,cp.BILL_ADD ,cp.PR_TYPE col1, cp.rec_id,cp.vch_num," +
                            //  "cp.occ_type occ,to_char( cp.dob,'" + sgen.Getsqldateformat() + "') DOB," +
                            //"to_char(cp.doa, '" + sgen.Getsqldateformat() + "') DOA,cp.cpemail email," +
                            //"cs.country_name,cs.state_name,cs.district_name,cs.city_name,cs.teh_name,cs.v_name,cp.cpaddr address,cp.c_gstin cust_gstin_no," +
                            //"cpcont mob,replace(CPLANDNO,'0','') land,replace(cpaltcont,'0','') alt,refered_by ref," +
                            //"to_char(convert_tz(cp.MT_DT, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') meeting_datetime,cp.remark,file_no old," +
                            //"cp.city vid,cp.latlong,cp.google_add,cp.cpaddr2,cp.city2 ,cs.alpha_2 as country_id,cs.state_gst_code as state_id" +
                            //",ba.alpha_2 as country_id2, ba.state_gst_code as state_id2 from enx_tab2 ex left join clients_mst cp " +
                            //"on cp.vch_num = cast(ex.col1 as varchar2(100)) and cp.type='BCD' and cp.client_id=ex.client_id and cp.client_unit_id=ex.client_unit_id  " +
                            //"left join country_state cs on cs.rec_id = cp.city  left join country_state ba on ba.rec_id =" +
                            //" cp.city2  " +
                            //"where  ex.client_id|| ex.client_unit_id|| ex.vch_num||to_char(ex.vch_date, 'yyyymmdd')|| ex.type= '" + URL + "'";

                            mq = "select cp.client_id||cp.client_unit_id|| cp.vch_num|| to_char(cp.vch_date, 'yyyymmdd')|| cp.type as cpfstr,cp.c_name cust_name,  ex.col3 as Name," +
                              "(case when to_char(ex.date1,'" + sgen.Getsqldateformat() + "')='01/01/1900' then '' else to_char(ex.date1,'" + sgen.Getsqldateformat() + "') end) as r_dob," +
                              "(case when to_char(ex.date2,'" + sgen.Getsqldateformat() + "')='01/01/1900' then '' else to_char(ex.date2,'" + sgen.Getsqldateformat() + "') end) as r_doa , ex.col5 as relation " +
                              ", ex.ent_by,ex.client_id,ex.client_unit_id,ex.ent_date,ex.rec_id,ex.vch_num as doc_no,cp.city vid,cp.vch_num  from enx_tab2 ex " +
                              "left join clients_mst cp on cp.vch_num = cast(ex.col1 as varchar2(100)) and cp.type='BCD' and cp.client_unit_id=ex.client_unit_id  " +
                            " where  ex.client_id|| ex.client_unit_id|| ex.vch_num||to_char(ex.vch_date, 'yyyymmdd')|| ex.type= '" + URL + "'";


                            DataTable dt1 = sgen.getdata(userCode, mq);
                            if (dt1.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "EDMODE", "Y");
                                #region  relation_master
                                TempData[MyGuid + "_TList1"] = mod1 = cmd_Fun.relation(userCode, unitid_mst);

                                #endregion
                                model[0].LTM2 = new List<Tmodelmain>();
                                for (int i = 0; i < dt1.Rows.Count; i++)
                                {
                                    Tmodelmain ltm = new Tmodelmain();
                                    ltm.Col35 = dt1.Rows[i]["name"].ToString();
                                    ltm.Col36 = dt1.Rows[i]["r_dob"].ToString();
                                    ltm.Col37 = dt1.Rows[i]["r_doa"].ToString();
                                    ltm.SelectedItems1 = new string[] { dt1.Rows[i]["relation"].ToString() };
                                    ltm.TList1 = mod1;
                                    model[0].LTM2.Add(ltm);
                                }
                                #region bindpro_type
                                //TempData[MyGuid + "_TList3"] = model[0].TList3 = mod3 = cmd_Fun.protype(userCode, unitid_mst);

                                #endregion
                                #region occupation type
                                // string defval = "";
                                // TempData[MyGuid + "_TList5"] = model[0].TList5 = mod5 = cmd_Fun.occtype(userCode, unitid_mst, out defval);

                                #endregion
                                #region  typeofclient
                                // string defval = "";
                                //  TempData[MyGuid + "_TList4"] = model[0].TList4 = mod4 = cmd_Fun.clienttype(userCode, unitid_mst, out defval);

                                #endregion
                                model[0].Col1 = dt1.Rows[0]["client_id"].ToString();
                                model[0].Col2 = dt1.Rows[0]["client_unit_id"].ToString();
                                model[0].Col3 = dt1.Rows[0]["ent_by"].ToString();
                                model[0].Col4 = dt1.Rows[0]["ent_date"].ToString();
                                model[0].Col16 = dt1.Rows[0]["vid"].ToString();
                                model[0].Col18 = dt1.Rows[0]["doc_no"].ToString();
                                model[0].Col19 = dt1.Rows[0]["cust_name"].ToString();
                                //model[0].Col20 = dt1.Rows[0]["DOB"].ToString();
                                //model[0].Col21 = dt1.Rows[0]["DOA"].ToString();
                                //model[0].Col22 = dt1.Rows[0]["email"].ToString();
                                //model[0].Col23 = dt1.Rows[0]["address"].ToString();
                                //model[0].Col24 = dt1.Rows[0]["v_name"].ToString();
                                //model[0].Col25 = dt1.Rows[0]["teh_name"].ToString();
                                //model[0].Col27 = dt1.Rows[0]["district_name"].ToString();
                                //model[0].Col28 = dt1.Rows[0]["state_name"].ToString();
                                //model[0].Col29 = dt1.Rows[0]["country_name"].ToString();
                                //model[0].Col30 = dt1.Rows[0]["meeting_datetime"].ToString();
                                //model[0].Col31 = dt1.Rows[0]["remark"].ToString();
                                //model[0].Col33 = dt1.Rows[0]["mob"].ToString();
                                //model[0].Col34 = dt1.Rows[0]["land"].ToString();
                                //model[0].Col36 = dt1.Rows[0]["alt"].ToString();
                                //model[0].Col37 = dt1.Rows[0]["ref"].ToString();
                                //model[0].Col38 = dt1.Rows[0]["old"].ToString();
                                model[0].Col45 = dt1.Rows[0]["vch_num"].ToString();
                                model[0].Col46 = dt1.Rows[0]["rec_id"].ToString();
                                model[0].Col13 = "Update";
                                model[0].Col100 = "Update & New";
                                model[0].Col121 = "U";
                                model[0].Col122 = "<u>U</u>pdate";
                                model[0].Col123 = "Update & Ne<u>w</u>";
                                model[0].Col8 = "client_id||client_unit_id|| vch_num|| to_char(vch_date, 'yyyymmdd')|| type = '" + URL + "'";
                                model[0].Col48 = "client_id||client_unit_id|| vch_num|| to_char(vch_date, 'yyyymmdd')|| type = '" + dt1.Rows[0]["cpfstr"].ToString() + "'";
                                //model[0].Col49 = dt1.Rows[0]["cpaddr2"].ToString();
                                //model[0].Col50 = dt1.Rows[0]["city2"].ToString();//village id billing
                                //model[0].Col51 = dt1.Rows[0]["country_id"].ToString();//country id
                                //model[0].Col52 = dt1.Rows[0]["state_id"].ToString();// state id
                                //model[0].Col53 = dt1.Rows[0]["country_id2"].ToString();// country id 2
                                //model[0].Col54 = dt1.Rows[0]["state_id2"].ToString();// state id 2
                                //model[0].Col55 = dt1.Rows[0]["BILL_ADD"].ToString();// 
                                //model[0].Col56 = dt1.Rows[0]["panno"].ToString();//                                
                                //model[0].Col57 = dt1.Rows[0]["MT_DT"].ToString();// 
                                //model[0].Col76 = dt1.Rows[0]["latlong"].ToString();
                                //model[0].Col77 = dt1.Rows[0]["google_add"].ToString();

                                // model[0].SelectedItems3 = System.String.Join(",", dt1.Rows.OfType<DataRow>().Select(r => r["col1"].ToString()).Distinct()).Split(',');

                                // model[0].SelectedItems5 = System.String.Join(",", dt1.Rows.OfType<DataRow>().Select(r => r["occ"].ToString()).Distinct()).Split(',');

                                //  model[0].SelectedItems4 = System.String.Join(",", dt1.Rows.OfType<DataRow>().Select(r => r["client_type"].ToString()).Distinct()).Split(',');
                                DataTable dtf = new DataTable();
                                dtf = sgen.getdata(userCode, "select rec_id,file_name,file_path,col1,col2 from file_tab where" +
                                    " ref_code='" + dt1.Rows[0]["doc_no"].ToString() + "'  and type='BCD' and " +
                                    "client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "' and col1='Family'");
                                List<Tmodelmain> ltmf = new List<Tmodelmain>();
                                foreach (DataRow drf in dtf.Rows)
                                {
                                    Tmodelmain tmf = new Tmodelmain();
                                    tmf.Col4 = drf["file_path"].ToString();
                                    tmf.Col1 = drf["file_name"].ToString();
                                    tmf.Col2 = drf["col1"].ToString();
                                    tmf.Col3 = drf["rec_id"].ToString();
                                    tmf.Col7 = drf["col2"].ToString();
                                    ltmf.Add(tmf);
                                }
                                model[0].LTM1 = ltmf;
                            }
                            break;
                        case "CUST":
                        case "NEW":
                            //22.03.2020
                            //mq = "select cp.MT_DT,cp.client_type,cp.panno,cp.BILL_ADD ,cp.PR_TYPE col1, cp.rec_id,cp.vch_num,cp.c_name cust_name,cp.occ_type occ" +
                            //    ",to_char(convert_tz( cp.dob,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') DOB," +
                            //    "to_char(convert_tz( cp.doa,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "')  DOA,cp.cpemail email," +
                            //    "cs.country_name,cs.state_name,cs.district_name,cs.city_name,cs.teh_name,cs.v_name,cp.cpaddr address,cp.c_gstin cust_gstin_no," +
                            //    "cpcont mob,replace(CPLANDNO,'0','') land,replace(cpaltcont,'0','') alt,refered_by ref," +
                            //    "to_char(convert_tz(cp.MT_DT, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') meeting_datetime,cp.remark,file_no old," +
                            //    "cp.city vid,cp.latlong,cp.google_add,cp.cpaddr2,cp.city2 ,cs.alpha_2 as country_id,cs.state_gst_code as state_id" +
                            //    ",ba.alpha_2 as country_id2, ba.state_gst_code as state_id2 from clients_mst cp " +
                            //    "left join country_state cs on cs.rec_id = cp.city  left join country_state ba on ba.rec_id = cp.city2  " +
                            //    "where cp.client_id|| cp.client_unit_id|| cp.vch_num|| to_char(cp.vch_date, 'yyyymmdd')||cp.type= '" + URL + "'";

                            mq = "select cp.MT_DT,cp.client_type,cp.panno,cp.BILL_ADD ,cp.PR_TYPE col1, cp.rec_id,cp.vch_num,cp.c_name cust_name,cp.occ_type occ" +
                                ",to_char( cp.dob,'" + sgen.Getsqldateformat() + "') DOB," +
                                "to_char( cp.doa,'" + sgen.Getsqldateformat() + "')  DOA,cp.cpemail email," +
                                "cs.country_name,cs.state_name,cs.district_name,cs.city_name,cs.teh_name,cs.v_name,cp.cpaddr address,cp.c_gstin cust_gstin_no," +
                                "cpcont mob,replace(CPLANDNO,'0','') land,replace(cpaltcont,'0','') alt,refered_by ref," +
                                "to_char(convert_tz(cp.MT_DT, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') meeting_datetime,cp.remark,file_no old," +
                                "cp.city vid,cp.latlong,cp.google_add,cp.cpaddr2,cp.city2 ,cs.alpha_2 as country_id,cs.state_gst_code as state_id" +
                                ",ba.alpha_2 as country_id2, ba.state_gst_code as state_id2 from clients_mst cp " +
                                "left join country_state cs on cs.rec_id = cp.city  left join country_state ba on ba.rec_id = cp.city2  " +
                                "where cp.client_id|| cp.client_unit_id|| cp.vch_num|| to_char(cp.vch_date, 'yyyymmdd')||cp.type= '" + URL + "'";

                            dt1 = new DataTable();
                            dt1 = sgen.getdata(userCode, mq);
                            if (dt1.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "EDMODE", "N");
                                mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                                vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                                model[0].Col18 = vch_num;
                                #region  relation_master
                                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.relation(userCode, unitid_mst);

                                #endregion
                                #region bindpro_type
                                //TempData[MyGuid + "_TList3"] = model[0].TList3 = mod3 = cmd_Fun.protype(userCode, unitid_mst);

                                #endregion
                                #region  typeofclient
                                //  TempData[MyGuid + "_TList4"] = model[0].TList4 = mod4 = cmd_Fun.clienttype(userCode, unitid_mst, out defcall);

                                #endregion
                                #region occupation type
                                // TempData[MyGuid + "_TList5"] = model[0].TList5 = mod5 = cmd_Fun.occtype(userCode, unitid_mst, out defcall);

                                #endregion
                                model[0].Col16 = dt1.Rows[0]["vid"].ToString();
                                model[0].Col19 = dt1.Rows[0]["cust_name"].ToString();
                                model[0].Col20 = dt1.Rows[0]["DOB"].ToString();
                                model[0].Col21 = dt1.Rows[0]["DOA"].ToString();
                                model[0].Col22 = dt1.Rows[0]["email"].ToString();
                                model[0].Col23 = dt1.Rows[0]["address"].ToString();
                                model[0].Col24 = dt1.Rows[0]["v_name"].ToString();
                                model[0].Col25 = dt1.Rows[0]["teh_name"].ToString();
                                model[0].Col27 = dt1.Rows[0]["district_name"].ToString();
                                model[0].Col28 = dt1.Rows[0]["state_name"].ToString();
                                model[0].Col29 = dt1.Rows[0]["country_name"].ToString();
                                model[0].Col30 = dt1.Rows[0]["meeting_datetime"].ToString();
                                model[0].Col31 = dt1.Rows[0]["remark"].ToString();
                                model[0].Col33 = dt1.Rows[0]["mob"].ToString();
                                model[0].Col34 = dt1.Rows[0]["land"].ToString();
                                model[0].Col36 = dt1.Rows[0]["alt"].ToString();
                                model[0].Col37 = dt1.Rows[0]["ref"].ToString();
                                model[0].Col38 = dt1.Rows[0]["old"].ToString();
                                model[0].Col45 = dt1.Rows[0]["vch_num"].ToString();
                                model[0].Col46 = dt1.Rows[0]["rec_id"].ToString();
                                model[0].Col48 = "client_id||client_unit_id|| vch_num|| to_char(vch_date, 'yyyymmdd')|| type = '" + URL + "'";
                                model[0].Col49 = dt1.Rows[0]["cpaddr2"].ToString();
                                model[0].Col50 = dt1.Rows[0]["city2"].ToString();//village id billing
                                model[0].Col51 = dt1.Rows[0]["country_id"].ToString();//country id
                                model[0].Col52 = dt1.Rows[0]["state_id"].ToString();// state id
                                model[0].Col53 = dt1.Rows[0]["country_id2"].ToString();// country id 2
                                model[0].Col54 = dt1.Rows[0]["state_id2"].ToString();// state id 2
                                model[0].Col55 = dt1.Rows[0]["BILL_ADD"].ToString();// 
                                model[0].Col56 = dt1.Rows[0]["panno"].ToString();//                                
                                model[0].Col57 = dt1.Rows[0]["MT_DT"].ToString();// 
                                model[0].Col76 = dt1.Rows[0]["latlong"].ToString();
                                model[0].Col77 = dt1.Rows[0]["google_add"].ToString();


                                //model[0].SelectedItems3 = System.String.Join(",", dt1.Rows.OfType<DataRow>().Select(r => r["col1"].ToString()).Distinct()).Split(',');

                                //  model[0].SelectedItems5 = System.String.Join(",", dt1.Rows.OfType<DataRow>().Select(r => r["occ"].ToString()).Distinct()).Split(',');

                                //   model[0].SelectedItems4 = System.String.Join(",", dt1.Rows.OfType<DataRow>().Select(r => r["client_type"].ToString()).Distinct()).Split(',');
                                DataTable dtf = new DataTable();
                                dtf = sgen.getdata(userCode, "select rec_id,file_name,file_path,col1 from file_tab where" +
                                    " ref_code='" + dt1.Rows[0]["vch_num"].ToString() + "' and col1='Client' and type='VNC' and " +
                                    "client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "'");
                                List<Tmodelmain> ltmf = new List<Tmodelmain>();
                                foreach (DataRow drf in dtf.Rows)
                                {
                                    Tmodelmain tmf = new Tmodelmain();
                                    tmf.Col4 = drf["file_path"].ToString();
                                    tmf.Col1 = drf["file_name"].ToString();
                                    tmf.Col2 = drf["col1"].ToString();
                                    tmf.Col3 = drf["rec_id"].ToString();
                                    //tmf.TList1 = mod1; // prop type 
                                    ltmf.Add(tmf);
                                }
                                model[0].LTM1 = ltmf;
                            }
                            break;
                        case "ADD1":
                            mq = "select * from country_state where client_id||client_unit_id||vch_num|| to_char(vch_date, 'yyyymmdd')||type='" + URL + "'";
                            dt1 = sgen.getdata(userCode, mq);
                            if (dt1.Rows.Count > 0)
                            {
                                model[0].Col29 = dt1.Rows[0]["country_name"].ToString();
                                model[0].Col28 = dt1.Rows[0]["state_name"].ToString();
                                model[0].Col27 = dt1.Rows[0]["district_name"].ToString();
                                model[0].Col26 = dt1.Rows[0]["city_name"].ToString();
                                model[0].Col25 = dt1.Rows[0]["teh_name"].ToString();
                                model[0].Col24 = dt1.Rows[0]["v_name"].ToString();
                                model[0].Col16 = dt1.Rows[0]["rec_id"].ToString();
                            }
                            break;
                        case "FDEL":
                            string fid = sgen.GetSession(MyGuid, "delid").ToString();
                            res = sgen.execute_cmd(userCode, "Delete from file_tab WHERE rec_id='" + fid + "'  and client_id='"
              + clientid_mst + "' and client_unit_id='" + unitid_mst + "'");
                            sgen.SetSession(MyGuid, "delid", null);
                            if (res)
                            {
                                var LTM = model[0].LTM1;
                                for (int d = 0; d < LTM.Count; d++)
                                {
                                    var id = LTM[d].Col3;
                                    if (id == fid) { model[0].LTM1.RemoveAt(d); }
                                }
                            }
                            break;
                    }
                    break;
                #endregion
                #region Family Detail
                case "conf_custn":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            mq = "select cp.client_id||cp.client_unit_id|| cp.vch_num|| to_char(cp.vch_date, 'yyyymmdd')|| cp.type as cpfstr,cp.c_name cust_name,  ex.col3 as Name," +
                              "(case when to_char(ex.date1,'" + sgen.Getsqldateformat() + "')='01/01/1900' then '' else to_char(ex.date1,'" + sgen.Getsqldateformat() + "') end) as r_dob," +
                              "(case when to_char(ex.date2,'" + sgen.Getsqldateformat() + "')='01/01/1900' then '' else to_char(ex.date2,'" + sgen.Getsqldateformat() + "') end) as r_doa , ex.col5 as relation " +
                              ", ex.ent_by,ex.client_id,ex.client_unit_id,ex.ent_date,ex.rec_id,ex.vch_num as doc_no,cp.city vid,cp.vch_num," +
                              "ex.r_no,nvl(f.file_name, '0') fname,nvl(f.file_path, '0') fpath,nvl(f.col1, '0') ftitle,nvl(f.col2, '0') ftype,nvl(f.rec_id, '0') frec from enx_tab2 ex " +
                              "left join clients_mst cp on cp.vch_num = cast(ex.col1 as varchar2(100)) and cp.type='BCD' and cp.client_unit_id=ex.client_unit_id  " +
                              "left join file_tab f on f.vch_num=ex.vch_num and f.type=ex.type and f.client_id=ex.client_id and f.client_unit_id=ex.client_unit_id and f.r_no = ex.r_no " +
                            " where  ex.client_id|| ex.client_unit_id|| ex.vch_num||to_char(ex.vch_date, 'yyyymmdd')|| ex.type= '" + URL + "'";
                            DataTable dt1 = sgen.getdata(userCode, mq);
                            if (dt1.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "EDMODE", "Y");
                                model[0].Col1 = dt1.Rows[0]["client_id"].ToString();
                                model[0].Col2 = dt1.Rows[0]["client_unit_id"].ToString();
                                model[0].Col3 = dt1.Rows[0]["ent_by"].ToString();
                                model[0].Col4 = dt1.Rows[0]["ent_date"].ToString();
                                model[0].Col8 = "client_id||client_unit_id|| vch_num|| to_char(vch_date, 'yyyymmdd')|| type = '" + URL + "'";
                                model[0].Col13 = "Update";
                                model[0].Col16 = dt1.Rows[0]["vid"].ToString();
                                model[0].Col18 = dt1.Rows[0]["doc_no"].ToString();
                                model[0].Col19 = dt1.Rows[0]["cust_name"].ToString();
                                model[0].Col35 = tm.Col35;
                                model[0].Col45 = dt1.Rows[0]["vch_num"].ToString();
                                model[0].Col46 = dt1.Rows[0]["rec_id"].ToString();
                                model[0].Col48 = "client_id||client_unit_id|| vch_num|| to_char(vch_date, 'yyyymmdd')|| type = '" + dt1.Rows[0]["cpfstr"].ToString() + "'";
                                model[0].Col100 = "Update & New";
                                model[0].Col121 = "U";
                                model[0].Col122 = "<u>U</u>pdate";
                                model[0].Col123 = "Update & Ne<u>w</u>";

                                TempData[MyGuid + "_TList1"] = mod1 = cmd_Fun.relation(userCode, unitid_mst);
                                model[0].LTM1 = new List<Tmodelmain>();
                                for (int i = 0; i < dt1.Rows.Count; i++)
                                {
                                    Tmodelmain ltm = new Tmodelmain();
                                    ltm.Col1 = dt1.Rows[i]["r_no"].ToString();
                                    ltm.Col2 = dt1.Rows[i]["ftitle"].ToString();
                                    ltm.Col3 = dt1.Rows[i]["fpath"].ToString();
                                    ltm.Col4 = dt1.Rows[i]["frec"].ToString();
                                    ltm.Col35 = dt1.Rows[i]["name"].ToString();
                                    ltm.Col36 = dt1.Rows[i]["r_dob"].ToString();
                                    ltm.Col37 = dt1.Rows[i]["r_doa"].ToString();
                                    ltm.SelectedItems1 = new string[] { dt1.Rows[i]["relation"].ToString() };
                                    ltm.TList1 = mod1;
                                    model[0].LTM1.Add(ltm);
                                }
                            }
                            break;
                        case "CUST":
                        case "NEW":
                            mq = "select cp.MT_DT,cp.client_type,cp.panno,cp.BILL_ADD ,cp.PR_TYPE col1, cp.rec_id,cp.vch_num,cp.c_name cust_name,cp.occ_type occ" +
                                ",to_char( cp.dob,'" + sgen.Getsqldateformat() + "') DOB," +
                                "to_char( cp.doa,'" + sgen.Getsqldateformat() + "')  DOA,cp.cpemail email," +
                                "cs.country_name,cs.state_name,cs.district_name,cs.city_name,cs.teh_name,cs.v_name,cp.cpaddr address,cp.c_gstin cust_gstin_no," +
                                "cpcont mob,replace(CPLANDNO,'0','') land,replace(cpaltcont,'0','') alt,refered_by ref," +
                                "to_char(convert_tz(cp.MT_DT, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') meeting_datetime,cp.remark,file_no old," +
                                "cp.city vid,cp.latlong,cp.google_add,cp.cpaddr2,cp.city2 ,cs.alpha_2 as country_id,cs.state_gst_code as state_id" +
                                ",ba.alpha_2 as country_id2, ba.state_gst_code as state_id2 from clients_mst cp " +
                                "left join country_state cs on cs.rec_id = cp.city  left join country_state ba on ba.rec_id = cp.city2  " +
                                "where cp.client_id|| cp.client_unit_id|| cp.vch_num|| to_char(cp.vch_date, 'yyyymmdd')||cp.type= '" + URL + "'";
                            dt1 = new DataTable();
                            dt1 = sgen.getdata(userCode, mq);
                            if (dt1.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "EDMODE", "N");
                                mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                                vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                                model[0].Col18 = vch_num;
                                model[0].Col16 = dt1.Rows[0]["vid"].ToString();
                                model[0].Col19 = dt1.Rows[0]["cust_name"].ToString();
                                model[0].Col20 = dt1.Rows[0]["DOB"].ToString();
                                model[0].Col21 = dt1.Rows[0]["DOA"].ToString();
                                model[0].Col22 = dt1.Rows[0]["email"].ToString();
                                model[0].Col23 = dt1.Rows[0]["address"].ToString();
                                model[0].Col24 = dt1.Rows[0]["v_name"].ToString();
                                model[0].Col25 = dt1.Rows[0]["teh_name"].ToString();
                                model[0].Col27 = dt1.Rows[0]["district_name"].ToString();
                                model[0].Col28 = dt1.Rows[0]["state_name"].ToString();
                                model[0].Col29 = dt1.Rows[0]["country_name"].ToString();
                                model[0].Col30 = dt1.Rows[0]["meeting_datetime"].ToString();
                                model[0].Col31 = dt1.Rows[0]["remark"].ToString();
                                model[0].Col33 = dt1.Rows[0]["mob"].ToString();
                                model[0].Col34 = dt1.Rows[0]["land"].ToString();
                                model[0].Col36 = dt1.Rows[0]["alt"].ToString();
                                model[0].Col37 = dt1.Rows[0]["ref"].ToString();
                                model[0].Col38 = dt1.Rows[0]["old"].ToString();
                                model[0].Col45 = dt1.Rows[0]["vch_num"].ToString();
                                model[0].Col46 = dt1.Rows[0]["rec_id"].ToString();
                                model[0].Col48 = "client_id||client_unit_id|| vch_num|| to_char(vch_date, 'yyyymmdd')|| type = '" + URL + "'";
                                model[0].Col49 = dt1.Rows[0]["cpaddr2"].ToString();
                                model[0].Col50 = dt1.Rows[0]["city2"].ToString();//village id billing
                                model[0].Col51 = dt1.Rows[0]["country_id"].ToString();//country id
                                model[0].Col52 = dt1.Rows[0]["state_id"].ToString();// state id
                                model[0].Col53 = dt1.Rows[0]["country_id2"].ToString();// country id 2
                                model[0].Col54 = dt1.Rows[0]["state_id2"].ToString();// state id 2
                                model[0].Col55 = dt1.Rows[0]["BILL_ADD"].ToString();// 
                                model[0].Col56 = dt1.Rows[0]["panno"].ToString();//                                
                                model[0].Col57 = dt1.Rows[0]["MT_DT"].ToString();// 
                                model[0].Col76 = dt1.Rows[0]["latlong"].ToString();
                                model[0].Col77 = dt1.Rows[0]["google_add"].ToString();

                                mod1 = cmd_Fun.relation(userCode, unitid_mst);
                                model[0].LTM1 = new List<Tmodelmain>();
                                Tmodelmain ltm = new Tmodelmain();
                                ltm.TList1 = mod1;
                                TempData[MyGuid + "_TList1"] = mod1;
                                ltm.SelectedItems1 = new string[] { "" };
                                ltm.Col1 = "1";
                                ltm.Col40 = "Choose File";
                                model[0].LTM1.Add(ltm);
                            }
                            break;
                        case "FDEL":
                            string fid = sgen.GetSession(MyGuid, "delid").ToString();
                            res = sgen.execute_cmd(userCode, "Delete from file_tab WHERE rec_id='" + fid + "'  and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "'");
                            sgen.SetSession(MyGuid, "delid", null);
                            if (res)
                            {
                                var LTM = model[0].LTM1;
                                for (int d = 0; d < LTM.Count; d++)
                                {
                                    var id = LTM[d].Col4;
                                    if (id == fid)
                                    {
                                        //model[0].LTM1.RemoveAt(d);
                                        model[0].LTM1[d].Col2 = "";
                                        model[0].LTM1[d].Col3 = "";
                                        model[0].LTM1[d].Col40 = "";
                                    }
                                }
                            }
                            break;
                    }
                    break;
                #endregion
                #region Account Property
                case "cust_prop":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            //22.03.2020
                            //mq = "select cp.cpaddr,cp.sez, ex.Col4,cp.file_no ,ex.ent_by,ex.client_id,ex.client_unit_id,ex.ent_date,ex.rec_id,ex.vch_num ,ex.col2 as customerid,cp.c_name cust_name,ex.col3 as Name " +
                            //    ",ex.date1 as dob,ex.date2 as doa,ex.col14 as property_name,ex.date3 as pdob,ex.date4 as pdoa,ex.col5 as prop1,ex.col6 as prop_type " +
                            //    ",ms.master_name as property_type,ex.col1 as remark,ex.col3 as user1,ex.date1 as remark_date from enx_tab2 ex " +
                            //    "left join clients_mst cp on cp.vch_num = ex.col2 and cp.type = 'BCD' and cp.client_id = ex.client_id and cp.client_unit_id = ex.client_unit_id " +
                            //    "left join master_setting ms on ms.master_id = ex.col6 and ms.type = 'PRT' " +
                            //    "where ex.client_id|| ex.client_unit_id|| ex.vch_num|| to_char(ex.vch_date, 'yyyymmdd')|| ex.type='" + URL + "' order by ex.r_no ";

                            mq = "select cp.cpaddr,cp.sez, ex.Col4,cp.file_no ,ex.ent_by,ex.client_id,ex.client_unit_id,ex.ent_date,ex.rec_id,ex.vch_num ,ex.col2 as customerid,cp.c_name cust_name,ex.col3 as Name " +
                                ",ex.col14 as property_name,ex.col5 as prop1,ex.col6 as prop_type " +
                                ",ms.master_name as property_type,ex.col1 as remark,ex.col3 as user1,ex.date1 as remark_date from enx_tab2 ex " +
                                "left join clients_mst cp on cp.vch_num = ex.col2 and cp.type = 'BCD' and cp.client_unit_id = ex.client_unit_id " +
                                "left join master_setting ms on ms.master_id = ex.col6 and ms.type = 'PRT' " +
                                "where ex.client_id|| ex.client_unit_id|| ex.vch_num|| to_char(ex.vch_date, 'yyyymmdd')|| ex.type='" + URL + "' order by ex.r_no ";

                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                #region bindpro_type
                                TempData[MyGuid + "_TList2"] = mod2 = cmd_Fun.protype(userCode, unitid_mst);

                                #endregion
                                DataTable dtf = new DataTable();
                                dtf = sgen.getdata(userCode, "select rec_id,file_name,file_path,col1 from file_tab where" +
                                    " vch_num='" + dtt.Rows[0]["vch_num"].ToString() + "' and type='VCP' and " +
                                    "client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "' and col1='Property' ");
                                List<Tmodelmain> ltmf = new List<Tmodelmain>();
                                foreach (DataRow drf in dtf.Rows)
                                {
                                    Tmodelmain tmf = new Tmodelmain();
                                    tmf.Col4 = drf["file_path"].ToString();
                                    tmf.Col1 = drf["file_name"].ToString();
                                    tmf.Col2 = drf["col1"].ToString();
                                    tmf.Col3 = drf["rec_id"].ToString();
                                    ltmf.Add(tmf);
                                }
                                model[0].LTM1 = ltmf;
                                model[0].LTM2 = new List<Tmodelmain>();
                                for (int i = 0; i < dtt.Rows.Count; i++)
                                {
                                    Tmodelmain ltm = new Tmodelmain();
                                    ltm.Col38 = dtt.Rows[i]["property_name"].ToString();
                                    ltm.SelectedItems2 = new string[] { dtt.Rows[i]["prop_type"].ToString() };
                                    ltm.Col39 = dtt.Rows[i]["remark"].ToString();
                                    ltm.Col47 = dtt.Rows[i]["Col4"].ToString();
                                    ltm.TList2 = mod2;
                                    model[0].LTM2.Add(ltm);
                                }
                                sgen.SetSession(MyGuid, "EDMODE", "Y");
                                DataTable dt = new DataTable();
                                DataRow dr = dtt.Rows[0];
                                model[0].Col8 = "client_id|| client_unit_id|| vch_num|| to_char(vch_date, 'yyyymmdd')|| type = '" + URL + "'";
                                model[0].Col3 = dr["ent_by"].ToString();
                                model[0].Col4 = dr["ent_date"].ToString();
                                model[0].Col16 = dr["vch_num"].ToString();
                                model[0].Col1 = dr["client_id"].ToString();
                                model[0].Col2 = dr["client_unit_id"].ToString();
                                model[0].Col7 = dr["rec_id"].ToString();
                                model[0].Col18 = dr["vch_num"].ToString();
                                model[0].Col19 = dr["cust_name"].ToString();
                                model[0].Col45 = dr["customerid"].ToString();
                                model[0].Col46 = dr["file_no"].ToString();
                                //model[0].Col58 = dr["sez"].ToString();
                                model[0].Col9 = tm.Col9;
                                model[0].Col10 = tm.Col10;
                                model[0].Col11 = tm.Col11;
                                model[0].Col12 = tm.Col12;
                                model[0].Col13 = "Update";
                                model[0].Col100 = "Update & New";
                                model[0].Col121 = "U";
                                model[0].Col122 = "<u>U</u>pdate";
                                model[0].Col123 = "Update & Ne<u>w</u>";
                                model[0].Col23 = dr["cpaddr"].ToString();
                            }
                            break;
                        case "CUST":
                        case "NEW":
                            mq = "select cp.sez, cp.file_no,cp.vch_num,cp.c_name,cp.cpaddr,cp.city vid from clients_mst cp  " +
                                "where cp.client_id|| cp.client_unit_id|| cp.vch_num|| to_char(cp.vch_date, 'yyyymmdd')||cp.type= '" + URL + "'";
                            DataTable dt1 = new DataTable();
                            dt1 = sgen.getdata(userCode, mq);
                            if (dt1.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "EDMODE", "N");
                                mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                                vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                                model[0].Col18 = vch_num;
                                model[0].Col16 = dt1.Rows[0]["vid"].ToString();
                                model[0].Col19 = dt1.Rows[0]["c_name"].ToString();
                                model[0].Col46 = dt1.Rows[0]["file_no"].ToString();
                                model[0].Col45 = dt1.Rows[0]["vch_num"].ToString();
                                model[0].Col58 = dt1.Rows[0]["sez"].ToString();
                                model[0].Col23 = dt1.Rows[0]["cpaddr"].ToString();
                            }
                            break;
                        case "FDEL":
                            string fid = sgen.GetSession(MyGuid, "delid").ToString();
                            res = sgen.execute_cmd(userCode, "Delete from file_tab WHERE rec_id='" + fid + "'  and client_id='"
              + clientid_mst + "' and client_unit_id='" + unitid_mst + "'");
                            sgen.SetSession(MyGuid, "delid", null);
                            if (res)
                            {
                                var LTM = model[0].LTM1;
                                for (int d = 0; d < LTM.Count; d++)
                                {
                                    var id = LTM[d].Col3;
                                    if (id == fid) { model[0].LTM1.RemoveAt(d); }
                                }
                            }
                            break;
                        case "PRINT":
                            mq = "select ex.col1 as remark, ex.col14 as Pr_name, nvl(sp.master_name,'-') as service_area,(select file_path from file_tab where type='BCD' and client_id='" + clientid_mst + "' " +
                                " and client_unit_id='" + unitid_mst + "' and col1='Client' and ref_code1=cp.vch_num and rownum<2) as cl_file_path ,(select file_path from file_tab where type='VCP' " +
                                "and client_unit_id = '" + unitid_mst + "' and col1 = 'Property' and ref_code = ex.col2" +
                                " and ref_code1 = ex.R_NO  ) as pr_file_path,oc.master_name as occ_name, cp.PR_TYPE ,cp.refered_by, cp.file_no" +
                                ",cp.occ_type,cp.panno,cp.BILL_ADD , ex.col2 as customerid, cp.c_name as cust_name, to_char" +
                                "(cp.dob,  '" + sgen.Getsqldateformat() + "') as dob,to_char(convert_tz(cp.doa," +
                                "  '" + sgen.Getsqldateformat() + "') as doa,to_char(convert_tz(cp.MT_DT, 'UTC', '" + sgen.Gettimezone() + "')" +
                                ", '" + sgen.Getsqldateformat() + "') as MT_DT,cp.cpemail as email,cs.alpha_2 as country_id,cs.country_name,cs.state_gst_code as state_id " +
                                ",cs.state_name,cs.district_name,cs.city_name,cs.teh_name,cs.v_name,cp.city,ba.alpha_2 as country_id2,ba.country_name as country_name2," +
                                " ba.state_gst_code as state_id2 ,ba.state_name as state_name2 ,ba.district_name as district_name2,ba.city_name as city_name," +
                                " ba.teh_name as teh_name2,ba.v_name as v_name2 ,cp.city2,cp.cpaddr2,cp.c_gstin ascust_gstin_no, cp.CPLANDNO landline, cp.cpcont mob," +
                                " cp.cpaltcont altmob, cp.cpaddr,ms.master_name as prop_type,cp.remark,cp.client_id,cp.client_unit_id,cp.vch_num,cp.ent_by" +
                                ",cp.ent_date,cp.latlong,cp.google_add,cp.client_type from enx_tab2 ex left join clients_mst cp on cp.vch_num = ex.col2 and" +
                                " cp.type = 'BCD' and cp.client_id = ex.client_id and cp.client_unit_id = ex.client_unit_id left join master_setting ms" +
                                " on ms.master_id = ex.col6 and ms.type = 'PRT' left join country_state cs on cs.rec_id = cp.city   " +
                                "and cs.client_unit_id = '" + unitid_mst + "' left join country_state ba on ba.rec_id = cp.city2 " +
                                " and ba.client_id = '" + unitid_mst + "' and ba.client_unit_id = '" + unitid_mst + "' left join master_setting ms" +
                                " on ms.master_id = cp.PR_TYPE and ms.type = 'PRT'  andms.client_unit_id = '" + unitid_mst + "' " +
                                "left join master_setting oc on cp.occ_type = oc.master_id and cp.client_unit_id = oc.client_unit_id and oc.type = 'OCC' " +
                                "left join master_setting sp on cp.occ_type = sp.master_id and cp.client_unit_id = sp.client_unit_id and sp.type = 'SSA' " +
                                " where ex.client_id || ex.client_unit_id || ex.vch_num || to_char(ex.vch_date, 'yyyymmdd') || ex.type = '" + URL + "' order by ex.r_no   ";
                            DataTable dtm = new DataTable();
                            dtm = sgen.getdata(userCode, mq);
                            if (dtm.Rows.Count > 0)
                            {
                                dtm.Columns.Add("clientimage", typeof(Byte[]));
                                dtm.Columns.Add("propimage", typeof(Byte[]));
                                foreach (DataRow dr in dtm.Rows)
                                {
                                    FileStream fs;
                                    BinaryReader br;
                                    string cl_file_path = Server.MapPath("~/Uploads/") + cg_com_name.Replace(" ", "") + "/" + dr["cl_file_path"].ToString();
                                    string pr_file_path = Server.MapPath("~/Uploads/") + cg_com_name.Replace(" ", "") + "/" + dr["pr_file_path"].ToString();
                                    try
                                    {
                                        fs = new FileStream(cl_file_path, FileMode.Open);
                                        br = new BinaryReader(fs);
                                        byte[] Image = new byte[fs.Length + 1];
                                        Image = br.ReadBytes(Convert.ToInt32((fs.Length)));
                                        dr["clientimage"] = Image;
                                        br.Close();
                                        fs.Close();
                                    }
                                    catch
                                    {
                                        cl_file_path = Server.MapPath("~/Uploads/") + "person-icon.png";
                                        fs = new FileStream(cl_file_path, FileMode.Open);
                                        br = new BinaryReader(fs);
                                        byte[] Image = new byte[fs.Length + 1];
                                        Image = br.ReadBytes(Convert.ToInt32((fs.Length)));
                                        dr["clientimage"] = Image;
                                        br.Close();
                                        fs.Close();
                                    }
                                    try
                                    {
                                        fs = new FileStream(pr_file_path, FileMode.Open);
                                        br = new BinaryReader(fs);
                                        byte[] Image = new byte[fs.Length + 1];
                                        Image = br.ReadBytes(Convert.ToInt32((fs.Length)));
                                        dr["propimage"] = Image;
                                        br.Close();
                                        fs.Close();
                                    }
                                    catch
                                    {
                                        pr_file_path = Server.MapPath("~/Uploads/") + "person-icon.png";
                                        fs = new FileStream(pr_file_path, FileMode.Open);
                                        br = new BinaryReader(fs);
                                        byte[] Image = new byte[fs.Length + 1];
                                        Image = br.ReadBytes(Convert.ToInt32((fs.Length)));
                                        dr["propimage"] = Image;
                                        br.Close();
                                        fs.Close();
                                    }
                                }
                                dtm.AcceptChanges();
                                sgen.open_report_bydt(userCode, dtm, "client_prop", "New Client Detail");
                                ViewBag.scripCall += "showRptnew('New Client Detail');";

                                //ViewBag.scripCall = "OpenSingle('../../../../../erp/schoolReports_Rpts/Filter_Report_xml.aspx','95%','900px','Reports');";
                            }
                            break;
                    }
                    break;
                #endregion
                #region Account Property
                case "cust_propn":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            mq = "select cp.cpaddr,cp.sez, ex.Col4,cp.file_no ,ex.ent_by,ex.client_id,ex.client_unit_id,ex.ent_date,ex.rec_id,ex.vch_num ,ex.col2 customerid," +
                                "cp.c_name cust_name,ex.col3 as Name,ex.col14 as property_name,ex.col5 as prop1,ex.col6 as prop_type,ms.master_name as property_type,ex.col1 as remark," +
                                "ex.col3 user1,ex.date1 remark_date,ex.r_no,nvl(f.file_name, '0') fname,nvl(f.file_path, '0') fpath,nvl(f.col1, '0') ftitle,nvl(f.col2, '0') ftype,nvl(f.rec_id, '0') frec " +
                                "from enx_tab2 ex " +
                                "left join clients_mst cp on cp.vch_num = ex.col2 and cp.type = 'BCD' and cp.client_unit_id = ex.client_unit_id " +
                                "left join master_setting ms on ms.master_id = ex.col6 and ms.type = 'PRT' " +
                                "left join file_tab f on f.vch_num=ex.vch_num and f.type=ex.type and f.client_id=ex.client_id and f.client_unit_id=ex.client_unit_id and f.r_no = ex.r_no " +
                                "where ex.client_id|| ex.client_unit_id|| ex.vch_num|| to_char(ex.vch_date, 'yyyymmdd')|| ex.type='" + URL + "' order by ex.r_no ";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "EDMODE", "Y");
                                DataTable dt = new DataTable();
                                DataRow dr = dtt.Rows[0];
                                model[0].Col1 = dr["client_id"].ToString();
                                model[0].Col2 = dr["client_unit_id"].ToString();
                                model[0].Col3 = dr["ent_by"].ToString();
                                model[0].Col4 = dr["ent_date"].ToString();
                                model[0].Col7 = dr["rec_id"].ToString();
                                model[0].Col8 = "client_id|| client_unit_id|| vch_num|| to_char(vch_date, 'yyyymmdd')|| type = '" + URL + "'";
                                model[0].Col9 = tm.Col9;
                                model[0].Col10 = tm.Col10;
                                model[0].Col11 = tm.Col11;
                                model[0].Col12 = tm.Col12;
                                model[0].Col13 = "Update";
                                model[0].Col14 = tm.Col14;
                                model[0].Col15 = tm.Col15;
                                model[0].Col16 = dr["vch_num"].ToString();
                                model[0].Col18 = dr["vch_num"].ToString();
                                model[0].Col19 = dr["cust_name"].ToString();
                                model[0].Col23 = dr["cpaddr"].ToString();
                                model[0].Col35 = tm.Col35;
                                model[0].Col45 = dr["customerid"].ToString();
                                model[0].Col46 = dr["file_no"].ToString();
                                model[0].Col100 = "Update & New";
                                model[0].Col121 = "U";
                                model[0].Col122 = "<u>U</u>pdate";
                                model[0].Col123 = "Update & Ne<u>w</u>";
                                TempData[MyGuid + "_TList2"] = mod2 = cmd_Fun.protype(userCode, unitid_mst);

                                model[0].LTM1 = new List<Tmodelmain>();
                                for (int i = 0; i < dtt.Rows.Count; i++)
                                {
                                    Tmodelmain ltm = new Tmodelmain();
                                    ltm.Col1 = dtt.Rows[i]["r_no"].ToString();
                                    ltm.Col2 = dtt.Rows[i]["ftitle"].ToString();
                                    ltm.Col3 = dtt.Rows[i]["fpath"].ToString();
                                    ltm.Col4 = dtt.Rows[i]["frec"].ToString();
                                    ltm.Col38 = dtt.Rows[i]["property_name"].ToString();
                                    ltm.TList2 = mod2;
                                    ltm.SelectedItems2 = new string[] { dtt.Rows[i]["prop_type"].ToString() };
                                    ltm.Col39 = dtt.Rows[i]["remark"].ToString();
                                    ltm.Col47 = dtt.Rows[i]["Col4"].ToString();
                                    model[0].LTM1.Add(ltm);
                                }
                            }
                            break;
                        case "CUST":
                        case "NEW":
                            mq = "select cp.sez, cp.file_no,cp.vch_num,cp.c_name,cp.cpaddr,cp.city vid from clients_mst cp  " +
                                "where cp.client_id|| cp.client_unit_id|| cp.vch_num|| to_char(cp.vch_date, 'yyyymmdd')||cp.type= '" + URL + "'";
                            DataTable dt1 = new DataTable();
                            dt1 = sgen.getdata(userCode, mq);
                            if (dt1.Rows.Count > 0)
                            {
                                try
                                {
                                    if (model[0].Col30 == "N")
                                    {
                                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for create new account property, please contact your admin', 2);";
                                        return model;
                                    }
                                    sgen.SetSession(MyGuid, "EDMODE", "N");
                                    ViewBag.vnew = "disabled='disabled'";
                                    ViewBag.vedit = "disabled='disabled'";
                                    ViewBag.vsave = "";
                                    ViewBag.vsavenew = "";
                                    ViewBag.scripCall = "enableForm();";
                                    mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                                    vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                                    model[0].Col18 = vch_num;
                                    model[0].Col16 = dt1.Rows[0]["vid"].ToString();
                                    model[0].Col19 = dt1.Rows[0]["c_name"].ToString();
                                    model[0].Col46 = dt1.Rows[0]["file_no"].ToString();
                                    model[0].Col45 = dt1.Rows[0]["vch_num"].ToString();
                                    model[0].Col58 = dt1.Rows[0]["sez"].ToString();
                                    model[0].Col23 = dt1.Rows[0]["cpaddr"].ToString();

                                    mod2 = cmd_Fun.protype(userCode, unitid_mst);
                                    model[0].LTM1 = new List<Tmodelmain>();
                                    Tmodelmain ltm = new Tmodelmain();
                                    ltm.TList2 = mod2;
                                    TempData[MyGuid + "_TList2"] = mod2;
                                    ltm.SelectedItems2 = new string[] { "" };
                                    ltm.Col1 = "1";
                                    ltm.Col40 = "Choose File";
                                    model[0].LTM1.Add(ltm);
                                }
                                catch (Exception ex) { ViewBag.scripCall = "showmsgJS(1, '" + ex.Message.ToString().Replace("'", "") + "', 1);"; }
                            }
                            break;
                        case "FDEL":
                            string fid = sgen.GetSession(MyGuid, "delid").ToString();
                            res = sgen.execute_cmd(userCode, "Delete from file_tab WHERE rec_id='" + fid + "'  and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "'");
                            sgen.SetSession(MyGuid, "delid", null);
                            if (res)
                            {
                                var LTM = model[0].LTM1;
                                for (int d = 0; d < LTM.Count; d++)
                                {
                                    var id = LTM[d].Col4;
                                    if (id == fid)
                                    {
                                        //model[0].LTM1.RemoveAt(d);
                                        model[0].LTM1[d].Col2 = "";
                                        model[0].LTM1[d].Col3 = "";
                                        model[0].LTM1[d].Col40 = "";
                                    }
                                }
                            }
                            break;
                        case "PRINT":
                            mq = "select ex.col1 as remark, ex.col14 as Pr_name, nvl(sp.master_name,'-') as service_area,(select file_path from file_tab where type='BCD' and client_id='" + clientid_mst + "' " +
                                " and client_unit_id='" + unitid_mst + "' and col1='Client' and ref_code1=cp.vch_num and rownum<2) as cl_file_path ,(select file_path from file_tab where type='VCP' " +
                                "and client_unit_id = '" + unitid_mst + "' and col1 = 'Property' and ref_code = ex.col2" +
                                " and ref_code1 = ex.R_NO  ) as pr_file_path,oc.master_name as occ_name, cp.PR_TYPE ,cp.refered_by, cp.file_no" +
                                ",cp.occ_type,cp.panno,cp.BILL_ADD , ex.col2 as customerid, cp.c_name as cust_name, to_char" +
                                "(cp.dob,  '" + sgen.Getsqldateformat() + "') as dob,to_char(convert_tz(cp.doa," +
                                "  '" + sgen.Getsqldateformat() + "') as doa,to_char(convert_tz(cp.MT_DT, 'UTC', '" + sgen.Gettimezone() + "')" +
                                ", '" + sgen.Getsqldateformat() + "') as MT_DT,cp.cpemail as email,cs.alpha_2 as country_id,cs.country_name,cs.state_gst_code as state_id " +
                                ",cs.state_name,cs.district_name,cs.city_name,cs.teh_name,cs.v_name,cp.city,ba.alpha_2 as country_id2,ba.country_name as country_name2," +
                                " ba.state_gst_code as state_id2 ,ba.state_name as state_name2 ,ba.district_name as district_name2,ba.city_name as city_name," +
                                " ba.teh_name as teh_name2,ba.v_name as v_name2 ,cp.city2,cp.cpaddr2,cp.c_gstin ascust_gstin_no, cp.CPLANDNO landline, cp.cpcont mob," +
                                " cp.cpaltcont altmob, cp.cpaddr,ms.master_name as prop_type,cp.remark,cp.client_id,cp.client_unit_id,cp.vch_num,cp.ent_by" +
                                ",cp.ent_date,cp.latlong,cp.google_add,cp.client_type from enx_tab2 ex left join clients_mst cp on cp.vch_num = ex.col2 and" +
                                " cp.type = 'BCD' and cp.client_id = ex.client_id and cp.client_unit_id = ex.client_unit_id left join master_setting ms" +
                                " on ms.master_id = ex.col6 and ms.type = 'PRT' left join country_state cs on cs.rec_id = cp.city   " +
                                "and cs.client_unit_id = '" + unitid_mst + "' left join country_state ba on ba.rec_id = cp.city2 " +
                                " and ba.client_id = '" + unitid_mst + "' and ba.client_unit_id = '" + unitid_mst + "' left join master_setting ms" +
                                " on ms.master_id = cp.PR_TYPE and ms.type = 'PRT'  andms.client_unit_id = '" + unitid_mst + "' " +
                                "left join master_setting oc on cp.occ_type = oc.master_id and cp.client_unit_id = oc.client_unit_id and oc.type = 'OCC' " +
                                "left join master_setting sp on cp.occ_type = sp.master_id and cp.client_unit_id = sp.client_unit_id and sp.type = 'SSA' " +
                                " where ex.client_id || ex.client_unit_id || ex.vch_num || to_char(ex.vch_date, 'yyyymmdd') || ex.type = '" + URL + "' order by ex.r_no   ";
                            DataTable dtm = new DataTable();
                            dtm = sgen.getdata(userCode, mq);
                            if (dtm.Rows.Count > 0)
                            {
                                dtm.Columns.Add("clientimage", typeof(Byte[]));
                                dtm.Columns.Add("propimage", typeof(Byte[]));
                                foreach (DataRow dr in dtm.Rows)
                                {
                                    FileStream fs;
                                    BinaryReader br;
                                    string cl_file_path = Server.MapPath("~/Uploads/") + cg_com_name.Replace(" ", "") + "/" + dr["cl_file_path"].ToString();
                                    string pr_file_path = Server.MapPath("~/Uploads/") + cg_com_name.Replace(" ", "") + "/" + dr["pr_file_path"].ToString();
                                    try
                                    {
                                        fs = new FileStream(cl_file_path, FileMode.Open);
                                        br = new BinaryReader(fs);
                                        byte[] Image = new byte[fs.Length + 1];
                                        Image = br.ReadBytes(Convert.ToInt32((fs.Length)));
                                        dr["clientimage"] = Image;
                                        br.Close();
                                        fs.Close();
                                    }
                                    catch
                                    {
                                        cl_file_path = Server.MapPath("~/Uploads/") + "person-icon.png";
                                        fs = new FileStream(cl_file_path, FileMode.Open);
                                        br = new BinaryReader(fs);
                                        byte[] Image = new byte[fs.Length + 1];
                                        Image = br.ReadBytes(Convert.ToInt32((fs.Length)));
                                        dr["clientimage"] = Image;
                                        br.Close();
                                        fs.Close();
                                    }
                                    try
                                    {
                                        fs = new FileStream(pr_file_path, FileMode.Open);
                                        br = new BinaryReader(fs);
                                        byte[] Image = new byte[fs.Length + 1];
                                        Image = br.ReadBytes(Convert.ToInt32((fs.Length)));
                                        dr["propimage"] = Image;
                                        br.Close();
                                        fs.Close();
                                    }
                                    catch
                                    {
                                        pr_file_path = Server.MapPath("~/Uploads/") + "person-icon.png";
                                        fs = new FileStream(pr_file_path, FileMode.Open);
                                        br = new BinaryReader(fs);
                                        byte[] Image = new byte[fs.Length + 1];
                                        Image = br.ReadBytes(Convert.ToInt32((fs.Length)));
                                        dr["propimage"] = Image;
                                        br.Close();
                                        fs.Close();
                                    }
                                }
                                dtm.AcceptChanges();
                                sgen.open_report_bydt(userCode, dtm, "client_prop", "New Client Detail");
                                ViewBag.scripCall += "showRptnew('New Client Detail');";

                                //ViewBag.scripCall = "OpenSingle('../../../../../erp/schoolReports_Rpts/Filter_Report_xml.aspx','95%','900px','Reports');";
                            }
                            break;
                    }
                    break;
                #endregion
                #region comp_doc
                case "comp_doc":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "VIEW":
                            mq = "select rec_id,ent_by,ent_date,vch_num,client_id,client_unit_id,type,file_name,file_path,description,col1,col2,col3 from file_tab " +
                   "where client_id||client_unit_id||vch_num||to_char(vch_date, 'yyyymmdd')||type='" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                DataRow dr = dtt.Rows[0];
                                sgen.SetSession(MyGuid, "EDMODE", "Y");
                                sgen.SetSession(MyGuid, "delid", null);
                                model[0].Col1 = dr["client_id"].ToString();
                                model[0].Col2 = dr["client_unit_id"].ToString();
                                model[0].Col3 = dr["ent_by"].ToString();
                                model[0].Col4 = dr["ent_date"].ToString();
                                model[0].Col7 = dr["rec_id"].ToString();
                                model[0].Col8 = "client_id|| client_unit_id|| vch_num|| to_char(vch_date, 'yyyymmdd')|| type = '" + URL + "'";
                                model[0].Col9 = tm.Col9;
                                model[0].Col10 = tm.Col10;
                                model[0].Col11 = tm.Col11;
                                model[0].Col12 = tm.Col12;
                                model[0].Col13 = "Update";
                                model[0].Col100 = "Update & New";
                                model[0].Col121 = "U";
                                model[0].Col122 = "<u>U</u>pdate";
                                model[0].Col123 = "Update & Ne<u>w</u>";
                                model[0].Col14 = tm.Col14;
                                model[0].Col15 = tm.Col15;
                                model[0].Col18 = dr["vch_num"].ToString();
                                model[0].Col19 = dr["col3"].ToString();
                                model[0].Col20 = dr["description"].ToString();
                                List<Tmodelmain> ltmf = new List<Tmodelmain>();
                                foreach (DataRow drf in dtt.Rows)
                                {
                                    Tmodelmain tmf = new Tmodelmain();
                                    tmf.Col4 = drf["file_path"].ToString();
                                    tmf.Col1 = drf["file_name"].ToString();
                                    tmf.Col2 = drf["col1"].ToString();
                                    tmf.Col3 = drf["rec_id"].ToString();
                                    tmf.Col5 = drf["col2"].ToString();
                                    tmf.Col6 = drf["col3"].ToString();
                                    ltmf.Add(tmf);
                                }
                                model[0].LTM1 = ltmf;
                            }
                            break;
                        case "FDEL":
                            if (model[0].Col14.Trim().Equals("40004.2")) type = "VCD";
                            else if (model[0].Col14.Trim().Equals("33008.2")) type = "HRP";
                            else type = "VMM";
                            string fid = sgen.GetSession(MyGuid, "delid").ToString();
                            res = sgen.execute_cmd(userCode, "Delete from file_tab WHERE rec_id='" + fid + "' and type='" + type + "' and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "'");
                            sgen.SetSession(MyGuid, "delid", null);
                            if (res)
                            {
                                var LTM = model[0].LTM1;
                                for (int d = 0; d < LTM.Count; d++)
                                {
                                    var id = LTM[d].Col3;
                                    if (id == fid) { model[0].LTM1.RemoveAt(d); }
                                }
                            }
                            break;
                    }
                    break;
                #endregion
                #region AMC PLAN
                case "amc_plan":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            mq = "select a.client_id ,a.client_unit_id,a.ent_by,a.ent_date,a.rec_id,b.cpaddr address, cs.country_name,  a.vch_num as doc_no,b.c_name as Customer_Name,a.col1 as remark," +
                                "to_char(a.date1,'" + sgen.Getsqldateformat() + "')as service_Date " +
                                 ",a.col2 from enx_tab2 a inner join clients_mst b on b.vch_num = a.col2 and b.type = 'BCD' and" +
                                 " a.client_unit_id = b.client_unit_id left join country_state cs on cs.rec_id = b.city  " +
                                 " where a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type = '" + URL + "' order by a.rec_id desc";
                            DataTable dt1 = new DataTable();
                            dt1 = sgen.getdata(userCode, mq);
                            if (dt1.Rows.Count > 0)
                            {
                                model = getedit(model, dt1, URL);
                                model[0].Col16 = dt1.Rows[0]["doc_no"].ToString();
                                model[0].Col18 = dt1.Rows[0]["col2"].ToString();
                                model[0].Col17 = dt1.Rows[0]["Customer_Name"].ToString();
                                model[0].Col19 = dt1.Rows[0]["address"].ToString();
                                model[0].Col20 = dt1.Rows[0]["country_name"].ToString();
                                model[0].dt1 = new DataTable();
                                // model[0].dt1 = ((DataTable)Session["RAMC_DT"]).Clone();
                                model[0].dt1 = ((DataTable)sgen.GetSession(MyGuid, "RAMC_DT")).Clone();
                                for (int i = 0; i < dt1.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["SNo"] = i + 1;
                                    dr["Service_Date"] = dt1.Rows[i]["service_Date"].ToString();
                                    dr["remark"] = dt1.Rows[i]["remark"].ToString();
                                    model[0].dt1.Rows.Add(dr);
                                }
                                model[0].dt1.AcceptChanges();
                            }
                            break;
                        case "CUST":
                            mq = "select cp.MT_DT,cp.client_type,(case when cp.panno='AAAAA0000A' then '' else cp.panno end) panno,cp.BILL_ADD ,cp.PR_TYPE col1, cp.rec_id,cp.vch_num,cp.c_name cust_name,cp.occ_type occ,to_char(convert_tz( cp.dob,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') DOB," +
                                "to_char(cp.doa,'" + sgen.Getsqldateformat() + "') DOA,cp.cpemail email," +
                                "cs.country_name,cs.state_name,cs.district_name,cs.city_name,cs.teh_name,cs.v_name,cp.cpaddr address,cp.c_gstin cust_gstin_no," +
                                "cpcont mob,replace(CPLANDNO,'0','') land,replace(cpaltcont,'0','') alt,refered_by ref," +
                                "to_char(convert_tz(cp.MT_DT, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') meeting_datetime,cp.remark,file_no old," +
                                "cp.city vid,cp.latlong,cp.google_add,cp.cpaddr2,cp.city2 ,cs.alpha_2 as country_id,cs.state_gst_code as state_id" +
                                ",ba.alpha_2 as country_id2, ba.state_gst_code as state_id2 from clients_mst cp " +
                                "left join country_state cs on cs.rec_id = cp.city  left join country_state ba on ba.rec_id = cp.city2  and ba.client_unit_id = '" + unitid_mst + "' " +
                                "where cp.client_id|| cp.client_unit_id|| cp.vch_num|| to_char(cp.vch_date, 'yyyymmdd')||cp.type= '" + URL + "'";
                            dt1 = sgen.getdata(userCode, mq);
                            if (dt1.Rows.Count > 0)
                            {
                                model[0].Col18 = dt1.Rows[0]["vch_num"].ToString();
                                model[0].Col17 = dt1.Rows[0]["cust_name"].ToString();
                                model[0].Col19 = dt1.Rows[0]["address"].ToString();
                                model[0].Col20 = dt1.Rows[0]["country_name"].ToString();
                            }
                            break;
                    }
                    break;
                #endregion
                #region newvendor_detail
                //                case "newvendor_detail":
                //                    switch (btnval.ToUpper())
                //                    {
                //                        case "EDIT":
                //                            // shiv = why select *
                //                            //mq = "select * from clients_mst where (client_id||client_unit_id||vch_num||to_char(vch_date, 'yyyymmdd')|| type) = '" + URL + "'";
                //                            mq = @"select cp.cpdept, cp.cpname, cp.type_desc, cp.isgstr, cp.c_gstin, cp.micrno, cp.tor, cp.status, cp.pincode, cp.addr, cp.ifsc,
                //                                   cp.acctno, cp.contr, cp.swftcd, cp.bnk, cp.curtype, cp.acctype,  cp.ploc, cp.ptype, cp.tanno, 
                //                              cp.msmeno, cp.micrno,cp.bnkaddr, cp.cpdesig,cp.lsrno, cp.sez, cp.PR_TYPE ,cp.refered_by,
                //                            cp.file_no,cp.occ_type,cp.panno,cp.BILL_ADD,cp.rec_id,cp.c_name ,
                //                          to_char(cp.dob, '" + sgen.Getsqldateformat() + "') as dob," +
                //                         "to_char(cp.doa, '" + sgen.Getsqldateformat() + "') as doa," +
                //                        "to_char(convert_tz(cp.MT_DT, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldatetimeformat() + "') as MT_DT," +
                //                        "cp.cpemail ,cs.alpha_2 as country_id,cs.country_name,cs.state_gst_code as state_id ,cs.state_name," +
                //                       "cs.district_name,cs.city_name,cs.teh_name,cs.v_name,cp.city" +
                //                           ",ba.alpha_2 as country_id2,ba.country_name as country_name2, ba.state_gst_code as state_id2 ," +
                //                             "ba.state_name as state_name2 ,ba.district_name as district_name2,ba.city_name as city_name2," +
                //                             "ba.teh_name as teh_name2,ba.v_name as v_name2 ,cp.city2,cp.cpaddr2," +
                //                              "cp.c_gstin as cust_gstin_no,cp.CPLANDNO ,cp.cpcont ,cp.cpaltcont ,cp.cpaddr,ms.master_name as prop_type,cp.remark,cp.client_id," +
                //"cp.client_unit_id,cp.vch_num,cp.ent_by,cp.ent_date,cp.latlong,cp.google_add,cp.client_type from clients_mst cp " +
                //"left join country_state cs on cs.rec_id = cp.city " +
                //"left join country_state ba on ba.rec_id = cp.city2 " +
                //"left join master_setting ms on ms.master_id = cp.PR_TYPE and ms.type='PRT' and ms.client_id='" + clientid_mst + "' and ms.client_unit_id='" + unitid_mst + "' " +
                //"where cp.client_id||cp.client_unit_id|| cp.vch_num||to_char(cp.vch_date, 'yyyymmdd')|| cp.type='" + URL + "' ";
                //                            dtt = new DataTable();
                //                            dtt = sgen.getdata(userCode, mq);
                //                            if (dtt.Rows.Count > 0)
                //                            {
                //                                sgen.SetSession(MyGuid, "EDMODE", "Y");
                //                                // #region country
                //                                // mq = "select distinct country_name,alpha_2 from country_state order by country_name";
                //                                //DataTable dt = sgen.getdata(userCode, mq);
                //                                // if (dt.Rows.Count > 0)
                //                                // {
                //                                //     foreach (DataRow dr1 in dt.Rows)
                //                                //     {
                //                                //         mod1.Add(new SelectListItem { Text = dr1["country_name"].ToString(), Value = dr1["alpha_2"].ToString() });
                //                                //     }
                //                                // }
                //                                // TempData[MyGuid + "_Tlist1"] = mod1;
                //                                // #endregion
                //                                // #region state                   
                //                                // mq = "select distinct state_name,state_gst_code from country_state where alpha_2='" + dtt.Rows[0]["country"] + "' and state_name!='-' order by state_name";
                //                                // dt = sgen.getdata(userCode, mq);
                //                                // if (dt.Rows.Count > 0)
                //                                // {
                //                                //     foreach (DataRow dr1 in dt.Rows)
                //                                //     {
                //                                //         mod2.Add(new SelectListItem { Text = dr1["state_name"].ToString(), Value = dr1["state_gst_code"].ToString() });
                //                                //     }
                //                                // }
                //                                // TempData[MyGuid + "_Tlist2"] = mod2;
                //                                // #endregion
                //                                #region party type
                //                                TempData[MyGuid + "_Tlist3"] = model[0].TList3 = mod3 = cmd_Fun.partytype(userCode, unitid_mst);
                //                                #endregion
                //                                #region party location - fix
                //                                mod4.Add(new SelectListItem { Text = "Domestic", Value = "001" });
                //                                mod4.Add(new SelectListItem { Text = "Overseas", Value = "002" });
                //                                TempData[MyGuid + "_Tlist4"] = model[0].TList4 = mod4;
                //                                #endregion
                //                                #region acc type
                //                                //mq = "select master_id,master_name from master_setting where type='BTM'" + model[0].Col11 + "";
                //                                //DataTable dt = sgen.getdata(userCode, mq);
                //                                //if (dt.Rows.Count > 0)
                //                                //{
                //                                //    foreach (DataRow dr in dt.Rows)
                //                                //    {
                //                                //        mod5.Add(new SelectListItem { Text = dr["master_name"].ToString(), Value = dr["master_id"].ToString() });
                //                                //    }
                //                                //}

                //                                TempData[MyGuid + "_Tlist5"] = model[0].TList5 = mod5 = cmd_Fun.acctypevdm(userCode, unitid_mst);
                //                                #endregion
                //                                #region currency type
                //                                TempData[MyGuid + "_Tlist6"] = model[0].TList6 = mod6 = cmd_Fun.curname(userCode, unitid_mst);

                //                                #endregion
                //                                #region bank name
                //                                TempData[MyGuid + "_Tlist7"] = model[0].TList7 = mod7 = cmd_Fun.bank(userCode, unitid_mst);
                //                                #endregion
                //                                #region bindpro_type
                //                                TempData[MyGuid + "_TList9"] = model[0].TList9 = mod9 = cmd_Fun.protype(userCode, unitid_mst);
                //                                #endregion
                //                                #region occupation type
                //                                TempData[MyGuid + "_TList10"] = model[0].TList10 = mod10 = cmd_Fun.occtype(userCode, unitid_mst);
                //                                #endregion
                //                                #region  SALES/SERVICE AREA
                //                                TempData[MyGuid + "_TList8"] = model[0].TList8 = mod8 = cmd_Fun.salearea(userCode, unitid_mst, out defcall);
                //                                #endregion
                //                                //model[0].TList1 = mod1;
                //                                //model[0].TList2 = mod2;

                //                                //String[] L1 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["country"].ToString()).Distinct()).Split(',');
                //                                //model[0].SelectedItems1 = L1;
                //                                //String[] L2 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["state"].ToString()).Distinct()).Split(',');
                //                                //model[0].SelectedItems2 = L2;
                //                                String[] L3 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["ptype"].ToString()).Distinct()).Split(',');
                //                                model[0].SelectedItems3 = L3;
                //                                String[] L4 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["ploc"].ToString()).Distinct()).Split(',');
                //                                model[0].SelectedItems4 = L4;
                //                                String[] L5 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["acctype"].ToString()).Distinct()).Split(',');
                //                                model[0].SelectedItems5 = L5;
                //                                String[] L6 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["curtype"].ToString()).Distinct()).Split(',');
                //                                model[0].SelectedItems6 = L6;
                //                                String[] L7 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["bnk"].ToString()).Distinct()).Split(',');
                //                                model[0].SelectedItems7 = L7;
                //                                String[] L8 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["client_type"].ToString()).Distinct()).Split(',');
                //                                model[0].SelectedItems8 = L8;
                //                                String[] L9 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["PR_TYPE"].ToString()).Distinct()).Split(',');
                //                                model[0].SelectedItems9 = L9;
                //                                String[] L10 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["occ_type"].ToString()).Distinct()).Split(',');
                //                                model[0].SelectedItems10 = L10;
                //                                model[0].Col1 = dtt.Rows[0]["client_id"].ToString();
                //                                model[0].Col2 = dtt.Rows[0]["client_unit_id"].ToString();
                //                                model[0].Col3 = dtt.Rows[0]["ent_by"].ToString();
                //                                model[0].Col4 = dtt.Rows[0]["ent_date"].ToString();
                //                                model[0].Col7 = dtt.Rows[0]["rec_id"].ToString();
                //                                model[0].Col8 = "(client_id||client_unit_id||vch_num||to_char(vch_date, 'yyyymmdd')|| type) = '" + URL + "'";
                //                                model[0].Col9 = tm.Col9;
                //                                model[0].Col10 = tm.Col10;
                //                                model[0].Col11 = tm.Col11;
                //                                model[0].Col12 = tm.Col12;
                //                                model[0].Col13 = "Update";
                //                                model[0].Col100 = "Update & New";
                //                                model[0].Col14 = tm.Col14;
                //                                model[0].Col15 = tm.Col15;
                //                                model[0].Col17 = dtt.Rows[0]["vch_num"].ToString();
                //                                model[0].Col18 = dtt.Rows[0]["c_name"].ToString();
                //                                model[0].Col22 = dtt.Rows[0]["addr"].ToString();
                //                                model[0].Col23 = dtt.Rows[0]["pincode"].ToString();
                //                                model[0].Col24 = dtt.Rows[0]["c_gstin"].ToString();
                //                                if (dtt.Rows[0]["isgstr"].ToString() == "Y") { model[0].Chk1 = true; }
                //                                model[0].Col25 = dtt.Rows[0]["type_desc"].ToString();
                //                                model[0].Col26 = dtt.Rows[0]["cpname"].ToString();
                //                                model[0].Col27 = dtt.Rows[0]["cpcont"].ToString();
                //                                model[0].Col28 = dtt.Rows[0]["cpaltcont"].ToString();
                //                                model[0].Col29 = dtt.Rows[0]["cpemail"].ToString();
                //                                model[0].Col30 = dtt.Rows[0]["cpaddr"].ToString();
                //                                model[0].Col31 = dtt.Rows[0]["cpdesig"].ToString();
                //                                model[0].Col33 = dtt.Rows[0]["bnkaddr"].ToString();
                //                                model[0].Col34 = dtt.Rows[0]["micrno"].ToString();
                //                                model[0].Col35 = dtt.Rows[0]["tor"].ToString();
                //                                model[0].Col36 = dtt.Rows[0]["panno"].ToString();
                //                                model[0].Col37 = dtt.Rows[0]["msmeno"].ToString();
                //                                model[0].Col38 = dtt.Rows[0]["tanno"].ToString();
                //                                model[0].Col44 = dtt.Rows[0]["status"].ToString() == "Y" ? "Active" : "Inactive";
                //                                model[0].Col45 = tm.Col45;//chkacct
                //                                model[0].Col50 = dtt.Rows[0]["swftcd"].ToString();
                //                                model[0].Col51 = dtt.Rows[0]["acctno"].ToString();
                //                                model[0].Col52 = dtt.Rows[0]["ifsc"].ToString();
                //                                model[0].Col49 = dtt.Rows[0]["country_id"].ToString();
                //                                model[0].Col59 = dtt.Rows[0]["country_name"].ToString();
                //                                model[0].Col71 = dtt.Rows[0]["state_id"].ToString();
                //                                model[0].Col60 = dtt.Rows[0]["state_name"].ToString();
                //                                //model[0].Col63 = dtt.Rows[0]["v_name"].ToString();
                //                                //model[0].Col62 = dtt.Rows[0]["teh_name"].ToString();
                //                                model[0].Col61 = dtt.Rows[0]["city_name"].ToString();
                //                                model[0].Col72 = dtt.Rows[0]["country_id2"].ToString();
                //                                model[0].Col69 = dtt.Rows[0]["country_name2"].ToString();
                //                                model[0].Col73 = dtt.Rows[0]["state_id2"].ToString();
                //                                model[0].Col68 = dtt.Rows[0]["state_name2"].ToString();
                //                                //model[0].Col65 = dtt.Rows[0]["v_name2"].ToString();
                //                                //model[0].Col66 = dtt.Rows[0]["teh_name2"].ToString();
                //                                model[0].Col67 = dtt.Rows[0]["city_name2"].ToString();
                //                                model[0].Col68 = dtt.Rows[0]["state_name2"].ToString();
                //                                model[0].Col69 = dtt.Rows[0]["country_name2"].ToString();
                //                                model[0].Col70 = dtt.Rows[0]["cpaddr2"].ToString();
                //                                model[0].Col48 = dtt.Rows[0]["city2"].ToString();//village id billing
                //                                model[0].Col76 = dtt.Rows[0]["latlong"].ToString();
                //                                model[0].Col77 = dtt.Rows[0]["google_add"].ToString();
                //                                model[0].Col54 = dtt.Rows[0]["remark"].ToString();
                //                                model[0].Col55 = dtt.Rows[0]["refered_by"].ToString();
                //                                model[0].Col56 = dtt.Rows[0]["file_no"].ToString();
                //                                model[0].Col75 = dtt.Rows[0]["MT_DT"].ToString();
                //                                model[0].Col20 = dtt.Rows[0]["dob"].ToString();
                //                                model[0].Col21 = dtt.Rows[0]["doa"].ToString();
                //                                model[0].Col53 = dtt.Rows[0]["cplandno"].ToString();
                //                                model[0].Col78 = dtt.Rows[0]["cpdept"].ToString();
                //                                if (dtt.Rows[0]["contr"].ToString().Trim() == "Y") model[0].Chk2 = true;
                //                                if (dtt.Rows[0]["sez"].ToString() == "Y") { model[0].Chk3 = true; }
                //                                if (dtt.Rows[0]["BILL_ADD"].ToString() == "Y") { model[0].Chk4 = true; }
                //                                DataTable dtf = new DataTable();
                //                                dtf = sgen.getdata(userCode, "select rec_id,file_name,file_path,col1 from file_tab where ref_code1='" + dtt.Rows[0]["vch_num"].ToString() + "' and type in " +
                //                                    "('" + tm.Col12 + "','DD" + model[0].Col12 + "') and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "'");
                //                                List<Tmodelmain> ltmf = new List<Tmodelmain>();
                //                                foreach (DataRow drf in dtf.Rows)
                //                                {
                //                                    Tmodelmain tmf = new Tmodelmain();
                //                                    tmf.Col4 = drf["file_path"].ToString();
                //                                    tmf.Col1 = drf["file_name"].ToString();
                //                                    tmf.Col2 = drf["col1"].ToString();
                //                                    tmf.Col3 = drf["rec_id"].ToString();
                //                                    ltmf.Add(tmf);
                //                                }
                //                                model[0].LTM1 = ltmf;
                //                            }
                //                            break;
                //                        case "FDEL":
                //                            string fid = sgen.GetSession(MyGuid, "delid").ToString();
                //                            res = sgen.execute_cmd(userCode, "Delete from file_tab WHERE rec_id='" + fid + "' and type='PVD' and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "'");
                //                            sgen.SetSession(MyGuid, "delid", null);
                //                            if (res)
                //                            {
                //                                var LTM = model[0].LTM1;
                //                                for (int d = 0; d < LTM.Count; d++)
                //                                {
                //                                    var id = LTM[d].Col3;
                //                                    if (id == fid) { model[0].LTM1.RemoveAt(d); }
                //                                }
                //                            }
                //                            break;
                //                        case "LSR":
                //                            mq = "select from file_tab WHERE type='PVD' and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "'";
                //                            dtt = sgen.getdata(userCode, mq);
                //                            if (dtt.Rows.Count > 0)
                //                            {
                //                                model[0].Col32 = dtt.Rows[0]["lsrno"].ToString();
                //                            }
                //                            break;
                //                        case "ADD1":
                //                            // mq = "select * from country_state where client_id||client_unit_id||vch_num|| to_char(vch_date, 'yyyymmdd')||type='" + URL + "'";
                //                            mq = "select * from country_state where alpha_2||state_gst_code ||city_name='" + URL + "'";
                //                            DataTable dt1 = new DataTable();
                //                            dt1 = sgen.getdata(userCode, mq);
                //                            if (dt1.Rows.Count > 0)
                //                            {
                //                                model[0].Col59 = dt1.Rows[0]["country_name"].ToString();
                //                                model[0].Col60 = dt1.Rows[0]["state_name"].ToString();
                //                                model[0].Col61 = dt1.Rows[0]["city_name"].ToString();
                //                                //model[0].Col26 = dt1.Rows[0]["city_name"].ToString();
                //                                //model[0].Col62 = dt1.Rows[0]["teh_name"].ToString();
                //                                //model[0].Col63 = dt1.Rows[0]["v_name"].ToString();
                //                                model[0].Col64 = dt1.Rows[0]["rec_id"].ToString();
                //                                model[0].Col49 = dt1.Rows[0]["alpha_2"].ToString();
                //                                model[0].Col71 = dt1.Rows[0]["state_gst_code"].ToString();
                //                                if (model[0].Chk4 == true)
                //                                {
                //                                    //model[0].Col65 = dt1.Rows[0]["v_name"].ToString();
                //                                    //model[0].Col66 = dt1.Rows[0]["teh_name"].ToString();
                //                                    model[0].Col67 = dt1.Rows[0]["city_name"].ToString();
                //                                    model[0].Col68 = dt1.Rows[0]["state_name"].ToString();
                //                                    model[0].Col69 = dt1.Rows[0]["country_name"].ToString();
                //                                    model[0].Col48 = dt1.Rows[0]["rec_id"].ToString();
                //                                    model[0].Col72 = dt1.Rows[0]["alpha_2"].ToString();
                //                                    model[0].Col73 = dt1.Rows[0]["state_gst_code"].ToString();
                //                                }
                //                            }
                //                            break;
                //                        case "ADD2":
                //                            // mq = "select * from country_state where client_id||client_unit_id||vch_num|| to_char(vch_date, 'yyyymmdd')||type='" + URL + "'";
                //                            mq = "select * from country_state where alpha_2||state_gst_code ||city_name='" + URL + "'";
                //                            dt1 = new DataTable();
                //                            dt1 = sgen.getdata(userCode, mq);
                //                            if (dt1.Rows.Count > 0)
                //                            {
                //                                //model[0].Col65 = dt1.Rows[0]["v_name"].ToString();
                //                                //model[0].Col66 = dt1.Rows[0]["teh_name"].ToString();
                //                                model[0].Col67 = dt1.Rows[0]["city_name"].ToString();
                //                                model[0].Col68 = dt1.Rows[0]["state_name"].ToString();
                //                                model[0].Col69 = dt1.Rows[0]["country_name"].ToString();
                //                                model[0].Col48 = dt1.Rows[0]["rec_id"].ToString();
                //                                model[0].Col72 = dt1.Rows[0]["alpha_2"].ToString();
                //                                model[0].Col73 = dt1.Rows[0]["state_gst_code"].ToString();
                //                            }
                //                            break;
                //                    }
                //                    break;
                #endregion
                #region Create Lead
                case "lead":
                    switch (btnval.ToUpper())
                    {
                        case "PARTY":
                            mq = "select cp.ploc, cp.cpcontother,cp.cpemailother, cp.leadsrc, a.c_name as parent_acc, cp.client_type, cs.STD_CODE country_code, cp.bsn_type,  substr(cp.vch_num,0,3) as cont_type, cp.type, cp.panno as cust_id," +
                                " cp.vch_num,cp.c_name,cs.alpha_2 as country_id,cs.country_name,cs.state_gst_code as state_id ,cs.state_name," +
                                "cp.city,cs.city_name , " +
                                "(case when cp.pincode='0' then '' else cp.pincode end) pincode, " +
                                "(case when cp.addr='0' then '' else cp.addr end) addr," +
                                "cp.cpname as cp_fname, " +
                                "(case when cp.cp_mname='0' then '' else cp.cp_mname end ) cp_mname," +
                                "(case when cp.cp_Lname='0' then '' else cp.cp_Lname end) cp_Lname ," +
                                "(case when cp.cpdept='0' then '' else cp.cpdept end) cpdept ," +
                                "(case when cp.cpdesig='0' then '' else cp.cpdesig end) cpdesig," +
                                "(case when cp.cpemail='ab@ab.ab' or cp.cpemail='0' then '' else cp.cpemail end) cpemail," +
                                "(case when cp.cpcont='0000000000' or cp.cpcont='0' then '' else cp.cpcont end) cpcont," +
                                "(case when cp.cpaltcont='0000000000' or cp.cpaltcont='0' then '' else cp.cpaltcont end) cpaltcont," +
                                "(case when cp.cplandno='0000000000' or cp.cplandno='0' then '' else cp.cplandno end) cplandno," +
                                "(case when cp.cpaddr='0' then '' else cp.cpaddr end) cpaddr," +
                                "(case when to_char(cp.dob, '" + sgen.Getsqldateformat() + "') = '01/01/1900' then '' else to_char(cp.dob, '" + sgen.Getsqldateformat() + "') end ) as dob, " +
                               "(case when to_char(cp.doa, '" + sgen.Getsqldateformat() + "') = '01/01/1900' then '' else to_char(cp.doa, '" + sgen.Getsqldateformat() + "') end ) as doa from clients_mst cp " +
                               "left join clients_mst a  on a.vch_num=cp.parent_id and a.client_unit_id=cp.client_unit_id  left join country_state cs on cs.rec_id = cp.city " +
                               "where cp.client_id|| cp.client_unit_id|| cp.vch_num|| to_char(cp.vch_date, 'yyyymmdd')|| cp.type='" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                model[0].Col18 = dtt.Rows[0]["vch_num"].ToString();
                                model[0].Col19 = dtt.Rows[0]["c_name"].ToString();
                                model[0].Col40 = dtt.Rows[0]["country_id"].ToString();
                                model[0].Col41 = dtt.Rows[0]["state_id"].ToString();
                                model[0].Col42 = dtt.Rows[0]["city"].ToString();
                                model[0].Col23 = dtt.Rows[0]["country_name"].ToString();
                                model[0].Col24 = dtt.Rows[0]["state_name"].ToString();
                                model[0].Col25 = dtt.Rows[0]["city_name"].ToString();
                                model[0].Col26 = dtt.Rows[0]["pincode"].ToString();
                                model[0].Col27 = dtt.Rows[0]["addr"].ToString();
                                model[0].Col28 = dtt.Rows[0]["cp_fname"].ToString();
                                model[0].Col29 = dtt.Rows[0]["cp_mname"].ToString();
                                model[0].Col30 = dtt.Rows[0]["cp_Lname"].ToString();
                                model[0].Col31 = dtt.Rows[0]["cpdesig"].ToString();
                                model[0].Col32 = dtt.Rows[0]["cpdept"].ToString();
                                model[0].Col33 = dtt.Rows[0]["cpemail"].ToString();
                                model[0].Col36 = dtt.Rows[0]["cpaltcont"].ToString();
                                model[0].Col35 = dtt.Rows[0]["cpcont"].ToString();
                                model[0].Col34 = dtt.Rows[0]["cplandno"].ToString();
                                model[0].Col37 = dtt.Rows[0]["dob"].ToString();
                                model[0].Col38 = dtt.Rows[0]["doa"].ToString();
                                model[0].Col39 = dtt.Rows[0]["cpaddr"].ToString();
                                model[0].Col43 = dtt.Rows[0]["type"].ToString();
                                model[0].Col44 = dtt.Rows[0]["cont_type"].ToString();
                                model[0].Col45 = dtt.Rows[0]["country_code"].ToString();
                                model[0].Col51 = dtt.Rows[0]["parent_acc"].ToString();
                                model[0].Col78 = dtt.Rows[0]["cpcontother"].ToString();
                                model[0].Col79 = dtt.Rows[0]["cpemailother"].ToString();
                                mq = "select vch_num,cpname from clients_mst where  ref_code='" + dtt.Rows[0]["vch_num"].ToString() + "' and client_unit_id='" + unitid_mst + "'";
                                DataTable dtcont = new DataTable();
                                dtcont = sgen.getdata(userCode, mq);
                                if (dtcont.Rows.Count > 0)
                                {
                                    mod6 = sgen.dt_to_selectlist(dtcont);
                                }
                                TempData[MyGuid + "_TList6"] = mod6;
                                model[0].TList6 = mod6;
                                if (dtcont.Rows.Count > 0)
                                {
                                    string cont = dtcont.Rows[0]["vch_num"].ToString();
                                    model[0].SelectedItems6 = System.String.Join(",", dtcont.Rows[0]["vch_num"].ToString()).Split(','); ;
                                }
                                //#region  Business Type
                                //TempData[MyGuid + "_TList7"] = model[0].TList7 = mod7 = cmd_Fun.businesstype(userCode, unitid_mst, out defcall);
                                //model[0].SelectedItems7 = new string[] { defcall };

                                //#endregion
                                //#region acc type

                                //TempData[MyGuid + "_Tlist8"] = model[0].TList8 = mod8 = cmd_Fun.clienttype(userCode, unitid_mst, out defcall);
                                //model[0].SelectedItems8 = new string[] { "" };

                                //#endregion
                                //#region  Lead source
                                //TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2 = cmd_Fun.leadsource(userCode, unitid_mst, out defcall);
                                //model[0].SelectedItems2 = new string[] { defcall };

                                //#endregion
                                //#region party location 
                                //mod9.Add(new SelectListItem { Text = "Domestic", Value = "001" });
                                //mod9.Add(new SelectListItem { Text = "Overseas", Value = "002" });
                                //TempData[MyGuid + "_Tlist9"] = model[0].TList9 = mod9;
                                //#endregion

                                //String[] L2 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["leadsrc"].ToString()).Distinct()).Split(',');
                                //model[0].SelectedItems2 = L2;
                                //String[] L7 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["bsn_type"].ToString()).Distinct()).Split(',');
                                //model[0].SelectedItems7 = L7;
                                //String[] L8 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["client_type"].ToString()).Distinct()).Split(',');
                                //model[0].SelectedItems8 = L8;
                                //String[] L9 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["ploc"].ToString()).Distinct()).Split(',');
                                //model[0].SelectedItems9 = L9;

                                //TempData[MyGuid + "_Tlist10"] = model[0].TList10 = mod10 = cmd_Fun.nextaction(userCode, unitid_mst);  // next followup action

                                //mod11.Add(new SelectListItem { Text = "Male", Value = "Male" });
                                //mod11.Add(new SelectListItem { Text = "Female", Value = "Female" });
                                //TempData[MyGuid + "_Tlist11"] = model[0].TList11 = mod11;
                                //model[0].SelectedItems11 = new string[] { "" };

                                //TempData[MyGuid + "_Tlist12"] = model[0].TList12 = mod12 = cmd_Fun.leadrating(userCode, unitid_mst);  // lead rating


                            }
                            break;
                        case "EDIT":
                            mq = "select a.cp_gender,a.ld_rating, nvl(ex.asg_to,a.ct_person) ct_person, nvl(ex.ld_st,a.ld_status) ld_status,   a.ploc,a.pr_loc,a.budget,a.funding, a.cpcontother,a.cpemailother, b.c_name parent_acc, a.client_type, a.ord_rmk,a.ord_owner,a.ord_source,a.ord_status, a.latlong,a.google_add, cs.std_code country_code, " +
                                "a.bsn_type, a.cp_ref_type, a.ref_type,  a.cp_id, a.vch_num,to_char(convert_tz(a.vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') as vch_date ,a.ent_by," +
                                " to_char(a.ent_date,'" + sgen.GetSaveSqlDateFormat() + "') ent_date,a.client_id,a.client_unit_id,a.cust_id,a.ld_owner,a.ld_source," +
                                "(case when length(a.ot_source)=1  and a.ot_source='0' then '-' else a.ot_source end ) ot_source," +
                                " (case when length((cast(a.remark as varchar(1000))))=1 and cast(a.remark as varchar(1000))='0' then '-' else cast(a.remark as varchar(1000)) end )  remark," +
                                " (case when length(a.refered_by)=1  and a.refered_by='0' then '-' else a.refered_by end )  refered_by," +
                                "(case when length(a.cust_name)=1  and a.cust_name='0' then '-' else a.cust_name end )  cust_name," +
                                "a.ld_product ,cs.alpha_2 as country_id,cs.country_name," +
                                "cs.state_gst_code as state_id ,cs.state_name,a.city,cs.city_name ," +
                                "(case when length(a.pincode)=1  and a.pincode='0' then '' else a.pincode end ) pincode," +
                                "(case when length(a.address)=1  and a.address='0' then '' else a.address end ) address," +
                                "(case when length(a.cp_fname)=1  and a.cp_fname='0' then '' else a.cp_fname end ) cp_fname," +
                                "(case when length(a.cp_mname)=1  and a.cp_mname='0' then '' else a.cp_mname end )  cp_mname," +
                                "(case when length(a.cp_Lname)=1  and a.cp_Lname='0' then '' else a.cp_Lname end )  cp_Lname ," +
                                "(case when length(a.dept)=1  and a.dept='0' then '-' else a.dept end ) dept ," +
                                "(case when (a.emailid='ab@ab.ab' or a.emailid='0') then '' else a.emailid end) emailid," +
                                "(case when length(a.desig)=1  and a.desig='0' then '' else a.desig end ) desig," +
                                "(case when (a.mobile_no='0000000000' or a.mobile_no='0') then '' else a.mobile_no end) mobile_no," +
                                "(case when (a.contact_no='0000000000' or a.contact_no='0') then '' else a.contact_no end) contact_no," +
                                "(case when (a.al_contact='0000000000' or a.al_contact='0') then '' else a.al_contact end) al_contact," +
                                "(case when length(a.cp_add)=1  and a.cp_add='0' then '-' else a.cp_add end ) cp_add," +
                                "(case when to_char(a.dob, '" + sgen.Getsqldateformat() + "') = '01/01/1900' then '-' else to_char(a.dob, '" + sgen.Getsqldateformat() + "') end ) dob," +
                                "(case when to_char(a.doa, '" + sgen.Getsqldateformat() + "') = '01/01/1900' then '-' else to_char(a.doa, '" + sgen.Getsqldateformat() + "') end ) doa," +
                                "(case when to_char(a.dof, '" + sgen.Getsqldateformat() + "') = '01/01/1900' then '-' else to_char(a.dof, '" + sgen.Getsqldateformat() + "') end ) dof,a.pax,a.ld_venue,a.ld_menu,a.tof" +
                                " from lead_master a left join clients_mst b on b.parent_id in(select distinct b.parent_id from clients_mst b where b.vch_num= a.cust_id and b.client_unit_id='" + unitid_mst + "' " +
                                " and (substr(b.vch_num,0,3)='303' or substr(b.vch_num,0,3)='909') ) and a.cust_id=b.vch_num  and a.client_unit_id=b.client_unit_id left join country_state cs on cs.rec_id = a.city " +
                                " left join (select col5 as asg_to ,col6 ld_st,col2 as lead_id from enx_tab2 where type='VFC' " +
                              "and client_unit_id='" + unitid_mst + "'  and vch_num in (select max(vch_num) from enx_tab2 where type = 'VFC' and client_unit_id = '" + unitid_mst + "' group by col2))  ex  on a.vch_num = ex.lead_id  " +
                              "where a.client_id|| a.client_unit_id|| " +
                                "a.vch_num|| to_char(a.vch_date, 'yyyymmdd')|| a.type='" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "EDMODE", "Y");
                                #region  Lead Owner
                                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.username_mod(userCode, m_module3);
                                model[0].SelectedItems1 = new string[] { "" };

                                #endregion
                                #region  Lead source
                                TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2 = cmd_Fun.leadsource(userCode, unitid_mst, out defcall);
                                model[0].SelectedItems2 = new string[] { defcall };

                                #endregion
                                #region  Lead status
                                TempData[MyGuid + "_TList3"] = model[0].TList3 = mod3 = cmd_Fun.leadstatus(userCode, unitid_mst, out defcall);
                                model[0].SelectedItems3 = new string[] { defcall };

                                #endregion
                                #region  Assigned to(Users)
                                TempData[MyGuid + "_TList4"] = model[0].TList4 = mod4 = cmd_Fun.username_mod(userCode, m_module3);
                                model[0].SelectedItems4 = new string[] { "" };

                                #endregion
                                #region  Product
                                TempData[MyGuid + "_TList5"] = model[0].TList5 = mod5 = cmd_Fun.product(userCode, unitid_mst, out defcall);
                                model[0].SelectedItems5 = new string[] { defcall };

                                #endregion
                                #region contactperson
                                mq = "select rec_id,cpname from clients_mst where  vch_num='" + dtt.Rows[0]["cust_id"].ToString() + "' and client_unit_id='" + unitid_mst + "'";
                                DataTable dtcont = new DataTable();
                                dtcont = sgen.getdata(userCode, mq);
                                if (dtcont.Rows.Count > 0)
                                {
                                    mod6 = sgen.dt_to_selectlist(dtcont);
                                }
                                TempData[MyGuid + "_TList6"] = model[0].TList6 = mod6;

                                model[0].SelectedItems6 = new string[] { "" };
                                #endregion
                                #region  Business Type
                                TempData[MyGuid + "_TList7"] = model[0].TList7 = mod7 = cmd_Fun.businesstype(userCode, unitid_mst, out defcall);

                                model[0].SelectedItems7 = new string[] { defcall };

                                #endregion
                                #region acc type
                                TempData[MyGuid + "_Tlist8"] = model[0].TList8 = mod8 = cmd_Fun.clienttype(userCode, unitid_mst, out defcall);

                                model[0].SelectedItems8 = new string[] { defcall };

                                #endregion
                                #region party location 
                                mod9.Add(new SelectListItem { Text = "Domestic", Value = "001" });
                                mod9.Add(new SelectListItem { Text = "Overseas", Value = "002" });
                                TempData[MyGuid + "_Tlist9"] = model[0].TList9 = mod9;
                                #endregion
                                mod11.Add(new SelectListItem { Text = "Male", Value = "Male" });
                                mod11.Add(new SelectListItem { Text = "Female", Value = "Female" });
                                TempData[MyGuid + "_Tlist11"] = model[0].TList11 = mod11;
                                model[0].SelectedItems11 = new string[] { "" };
                                TempData[MyGuid + "_TList12"] = model[0].TList12 = mod12 = cmd_Fun.leadrating(userCode, unitid_mst);
                                model[0].SelectedItems12 = new string[] { "" };
                                #region  Lead venue
                                TempData[MyGuid + "_TList13"] = model[0].TList13 = mod13 = cmd_Fun.leadVenue(userCode, unitid_mst);
                                model[0].SelectedItems13 = new string[] { "" };
                                #endregion
                                #region  Lead menu
                                TempData[MyGuid + "_TList14"] = model[0].TList14 = mod14 = cmd_Fun.leadMenu(userCode, unitid_mst);
                                model[0].SelectedItems14 = new string[] { "" };
                                #endregion
                                #region  Lead tof
                                TempData[MyGuid + "_TList15"] = model[0].TList15 = mod15 = cmd_Fun.leadtof(userCode, unitid_mst);
                                model[0].SelectedItems15 = new string[] { "" };
                                #endregion
                                #region  Lead freq
                                //TempData[MyGuid + "_TList16"] = model[0].TList16 = mod16 = cmd_Fun.leadFreq(userCode, unitid_mst);
                                //model[0].SelectedItems16 = new string[] { "" };
                                #endregion

                                model[0].Col8 = "(client_id||client_unit_id|| vch_num|| to_char(vch_date, 'yyyymmdd')|| type) = '" + URL + "'";
                                model[0].Col3 = dtt.Rows[0]["ent_by"].ToString();
                                model[0].Col4 = dtt.Rows[0]["ent_date"].ToString();
                                model[0].Col16 = dtt.Rows[0]["vch_num"].ToString();
                                model[0].Col17 = dtt.Rows[0]["vch_date"].ToString();
                                model[0].Col18 = dtt.Rows[0]["cust_id"].ToString();
                                if (model[0].Col18 == "0") { model[0].Col58 = dtt.Rows[0]["cust_name"].ToString(); }
                                else { model[0].Col19 = dtt.Rows[0]["cust_name"].ToString(); }
                                model[0].Col20 = dtt.Rows[0]["ot_source"].ToString();
                                model[0].Col21 = dtt.Rows[0]["remark"].ToString();
                                model[0].Col22 = dtt.Rows[0]["refered_by"].ToString();
                                model[0].Col40 = dtt.Rows[0]["country_id"].ToString();
                                model[0].Col41 = dtt.Rows[0]["state_id"].ToString();
                                model[0].Col42 = dtt.Rows[0]["city"].ToString();
                                model[0].Col23 = dtt.Rows[0]["country_name"].ToString();
                                model[0].Col24 = dtt.Rows[0]["state_name"].ToString();
                                model[0].Col25 = dtt.Rows[0]["city_name"].ToString();
                                model[0].Col26 = dtt.Rows[0]["pincode"].ToString();
                                model[0].Col27 = dtt.Rows[0]["address"].ToString();
                                model[0].Col28 = dtt.Rows[0]["cp_fname"].ToString();
                                model[0].Col29 = dtt.Rows[0]["cp_mname"].ToString();
                                model[0].Col30 = dtt.Rows[0]["cp_Lname"].ToString();
                                model[0].Col31 = dtt.Rows[0]["desig"].ToString();
                                model[0].Col32 = dtt.Rows[0]["dept"].ToString();
                                model[0].Col33 = dtt.Rows[0]["emailid"].ToString();
                                model[0].Col34 = dtt.Rows[0]["mobile_no"].ToString();
                                model[0].Col35 = dtt.Rows[0]["contact_no"].ToString();
                                model[0].Col36 = dtt.Rows[0]["al_contact"].ToString();
                                model[0].Col37 = dtt.Rows[0]["dob"].ToString();
                                model[0].Col38 = dtt.Rows[0]["doa"].ToString();
                                model[0].Col39 = dtt.Rows[0]["cp_add"].ToString();
                                model[0].Col43 = dtt.Rows[0]["ref_type"].ToString();
                                model[0].Col44 = dtt.Rows[0]["cp_ref_type"].ToString();
                                model[0].Col45 = dtt.Rows[0]["country_code"].ToString();
                                model[0].Col76 = dtt.Rows[0]["latlong"].ToString();
                                model[0].Col77 = dtt.Rows[0]["google_add"].ToString();
                                model[0].Col55 = dtt.Rows[0]["ord_rmk"].ToString();
                                model[0].Col51 = dtt.Rows[0]["parent_acc"].ToString();
                                model[0].Col78 = dtt.Rows[0]["cpcontother"].ToString();
                                model[0].Col79 = dtt.Rows[0]["cpemailother"].ToString();
                                model[0].Col80 = dtt.Rows[0]["pr_loc"].ToString();
                                model[0].Col81 = dtt.Rows[0]["budget"].ToString();
                                model[0].Col82 = dtt.Rows[0]["funding"].ToString();
                                model[0].Col83 = dtt.Rows[0]["dof"].ToString();
                                model[0].Col84 = dtt.Rows[0]["pax"].ToString();
                                model[0].Col13 = "Update";
                                model[0].Col100 = "Update & New";
                                model[0].Col121 = "U";
                                model[0].Col122 = "<u>U</u>pdate";
                                model[0].Col123 = "Update & Ne<u>w</u>";
                                String[] L1 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["ld_owner"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems1 = L1;
                                String[] L2 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["ld_source"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems2 = L2;
                                String[] L3 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["ld_status"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems3 = L3;
                                String[] L4 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["ct_person"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems4 = L4;
                                String[] L5 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["ld_product"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems5 = L5;
                                String[] L6 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["cp_id"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems6 = L6;
                                String[] L7 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["bsn_type"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems7 = L7;
                                String[] L8 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["client_type"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems8 = L8;
                                String[] L9 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["ploc"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems9 = L9;
                                String[] L11 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["cp_gender"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems11 = L11;
                                String[] L12 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["ld_rating"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems12 = L12;
                                String[] L13 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["ld_venue"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems13 = L13;
                                String[] L14 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["ld_menu"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems14 = L14;
                                String[] L15 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["tof"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems15 = L15;
                                //String[] L16 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["freq"].ToString()).Distinct()).Split(',');
                                //model[0].SelectedItems16 = L16;

                                DataTable dtf = new DataTable();
                                dtf = sgen.getdata(userCode, "select client_id||client_unit_id||vch_num||to_char(vch_date,'yyyymmdd')||type as fstr, rec_id,file_name,file_path,col1,col2,description,Col3 from file_tab where vch_num='" + dtt.Rows[0]["vch_num"].ToString() + "' and type in " +
                                    "('" + tm.Col12 + "','DD" + model[0].Col12 + "') and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "'");
                                List<Tmodelmain> ltmf = new List<Tmodelmain>();
                                string des = "", title = "", f_recid = "";
                                if (dtf.Rows.Count > 0)
                                {
                                    if (dtf.Rows[0]["Col2"].ToString() != "0")
                                    {
                                        foreach (DataRow drf in dtf.Rows)
                                        {
                                            Tmodelmain tmf = new Tmodelmain();
                                            tmf.Col4 = drf["file_path"].ToString();
                                            tmf.Col1 = drf["file_name"].ToString();
                                            tmf.Col2 = drf["col1"].ToString();
                                            tmf.Col3 = drf["rec_id"].ToString();
                                            f_recid = drf["rec_id"].ToString();
                                            tmf.Col5 = drf["description"].ToString();
                                            des = drf["description"].ToString();
                                            title = drf["Col3"].ToString();
                                            tmf.Col6 = drf["col3"].ToString();
                                            tmf.Col7 = drf["col2"].ToString();
                                            model[0].Col49 = "(client_id||client_unit_id|| vch_num|| to_char(vch_date, 'yyyymmdd')|| type) = '" + drf["fstr"].ToString() + "'";
                                            ltmf.Add(tmf);
                                        }
                                    }
                                }
                                model[0].LTM1 = ltmf;
                                model[0].Col46 = des;
                                model[0].Col47 = title;
                                model[0].Col48 = f_recid;
                            }
                            break;
                        case "FDEL":
                            string fid = sgen.GetSession(MyGuid, "delid").ToString();
                            res = sgen.execute_cmd(userCode, "Delete from file_tab WHERE rec_id='" + fid + "'  and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "'");
                            sgen.SetSession(MyGuid, "delid", null);
                            if (res)
                            {
                                var LTM = model[0].LTM1;
                                for (int d = 0; d < LTM.Count; d++)
                                {
                                    var id = LTM[d].Col3;
                                    if (id == fid) { model[0].LTM1.RemoveAt(d); }
                                }
                            }
                            break;
                        case "ADD1":
                            // mq = "select * from country_state where client_id||client_unit_id||vch_num|| to_char(vch_date, 'yyyymmdd')||type='" + URL + "'";
                            mq = "select * from country_state where alpha_2||state_gst_code ||city_name='" + URL + "'";
                            DataTable dt1 = new DataTable();
                            dt1 = sgen.getdata(userCode, mq);
                            if (dt1.Rows.Count > 0)
                            {
                                model[0].Col23 = dt1.Rows[0]["country_name"].ToString();
                                model[0].Col24 = dt1.Rows[0]["state_name"].ToString();
                                model[0].Col25 = dt1.Rows[0]["city_name"].ToString();
                                model[0].Col42 = dt1.Rows[0]["rec_id"].ToString();
                                model[0].Col40 = dt1.Rows[0]["alpha_2"].ToString();
                                model[0].Col41 = dt1.Rows[0]["state_gst_code"].ToString();
                                model[0].Col45 = dt1.Rows[0]["std_code"].ToString();
                            }
                            break;
                    }
                    break;
                #endregion

                #region booking
                case "booking":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            mq = "select a.vch_num,to_char(convert_tz(a.vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') vch_date,a.ent_by," +
                                 "to_char(a.ent_date,'" + sgen.GetSaveSqlDateFormat() + "') ent_date,a.client_id,a.client_unit_id,a.occasion,a.foodtype,a.venueadd,a.pax," +
                                 "a.servchk1,a.servtxt1,a.servchk2,a.servtxt2,a.servchk3,a.servtxt3,a.servchk4,a.servtxt4,a.servchk5,servtxt5,a.servchk6,a.servtxt6," +
                                 "a.servchk7,a.servtxt7,a.custname,a.custadd,a.contno,a.email,a.bname,a.gname,a.hostedby,a.amt,a.gst,a.mcd,a.tot,a.adv,a.bal,a.intremark," +
                                 "(case when to_char(a.dof, '" + sgen.Getsqldateformat() + "') = '01/01/1900' then '-' else to_char(a.dof, '" + sgen.Getsqldateformat() + "') end ) dof," +
                                 "(case when to_char(a.dob, '" + sgen.Getsqldateformat() + "') = '01/01/1900' then '-' else to_char(a.dob, '" + sgen.Getsqldateformat() + "') end ) dob," +
                                 "(case when to_char(a.bdob, '" + sgen.Getsqldateformat() + "') = '01/01/1900' then '-' else to_char(a.bdob, '" + sgen.Getsqldateformat() + "') end ) bdob," +
                                 "(case when to_char(a.gdob, '" + sgen.Getsqldateformat() + "') = '01/01/1900' then '-' else to_char(a.gdob, '" + sgen.Getsqldateformat() + "') end ) gdob," +
                                 "(case when to_char(a.bookdt, '" + sgen.Getsqldateformat() + "') = '01/01/1900' then '-' else to_char(a.gdob, '" + sgen.Getsqldateformat() + "') end ) bookdt," +
                                 "a.venue,a.menu,a.status,a.remark,a.altcont " +
                                 "from func a where a.client_id|| a.client_unit_id||a.vch_num|| to_char(a.vch_date, 'yyyymmdd')|| a.type='" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "EDMODE", "Y");
                                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.leadMenu(userCode, unitid_mst);
                                model[0].SelectedItems1 = new string[] { "" };
                                TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2 = cmd_Fun.leadVenue(userCode, unitid_mst);
                                model[0].SelectedItems2 = new string[] { "" };
                                //TempData[MyGuid + "_TList3"] = model[0].TList3 = mod3 = cmd_Fun.leadFreq(userCode, unitid_mst);
                                //model[0].SelectedItems3 = new string[] { "" };
                                model[0].Col8 = "(client_id||client_unit_id|| vch_num|| to_char(vch_date, 'yyyymmdd')|| type) = '" + URL + "'";
                                model[0].Col3 = dtt.Rows[0]["ent_by"].ToString();
                                model[0].Col4 = dtt.Rows[0]["ent_date"].ToString();
                                model[0].Col16 = dtt.Rows[0]["vch_num"].ToString();
                                model[0].Col17 = dtt.Rows[0]["dof"].ToString();
                                model[0].Col18 = dtt.Rows[0]["occasion"].ToString();
                                model[0].Col19 = dtt.Rows[0]["venueadd"].ToString();
                                model[0].Col20 = dtt.Rows[0]["foodtype"].ToString();
                                model[0].Col21 = dtt.Rows[0]["servtxt1"].ToString();
                                model[0].Col22 = dtt.Rows[0]["servtxt2"].ToString();
                                model[0].Col23 = dtt.Rows[0]["servtxt3"].ToString();
                                model[0].Col24 = dtt.Rows[0]["servtxt4"].ToString();
                                model[0].Col25 = dtt.Rows[0]["servtxt5"].ToString();
                                model[0].Col26 = dtt.Rows[0]["servtxt6"].ToString();
                                model[0].Col27 = dtt.Rows[0]["servtxt7"].ToString();
                                model[0].Chk1 = dtt.Rows[0]["servchk1"].ToString() == "Y" ? true : false;
                                model[0].Chk2 = dtt.Rows[0]["servchk2"].ToString() == "Y" ? true : false;
                                model[0].Chk3 = dtt.Rows[0]["servchk3"].ToString() == "Y" ? true : false;
                                model[0].Chk4 = dtt.Rows[0]["servchk4"].ToString() == "Y" ? true : false;
                                model[0].Chk5 = dtt.Rows[0]["servchk5"].ToString() == "Y" ? true : false;
                                model[0].Chk6 = dtt.Rows[0]["servchk6"].ToString() == "Y" ? true : false;
                                model[0].Chk7 = dtt.Rows[0]["servchk7"].ToString() == "Y" ? true : false;
                                model[0].Col28 = dtt.Rows[0]["custname"].ToString();
                                model[0].Col29 = dtt.Rows[0]["custadd"].ToString();
                                model[0].Col30 = dtt.Rows[0]["contno"].ToString();
                                model[0].Col31 = dtt.Rows[0]["email"].ToString();
                                model[0].Col32 = dtt.Rows[0]["bname"].ToString();
                                model[0].Col33 = dtt.Rows[0]["gname"].ToString();
                                model[0].Col34 = dtt.Rows[0]["hostedby"].ToString();
                                model[0].Col35 = dtt.Rows[0]["amt"].ToString();
                                model[0].Col36 = dtt.Rows[0]["gst"].ToString();
                                model[0].Col37 = dtt.Rows[0]["mcd"].ToString();
                                model[0].Col38 = dtt.Rows[0]["tot"].ToString();
                                model[0].Col39 = dtt.Rows[0]["adv"].ToString();
                                model[0].Col40 = dtt.Rows[0]["bal"].ToString();
                                model[0].Col41 = dtt.Rows[0]["dob"].ToString();
                                model[0].Col42 = dtt.Rows[0]["altcont"].ToString();
                                model[0].Col43 = dtt.Rows[0]["remark"].ToString();
                                model[0].Col44 = dtt.Rows[0]["bdob"].ToString();
                                model[0].Col45 = dtt.Rows[0]["gdob"].ToString();
                                model[0].Col46 = dtt.Rows[0]["intremark"].ToString();
                                model[0].Col47 = dtt.Rows[0]["bookdt"].ToString();
                                model[0].Col48 = dtt.Rows[0]["pax"].ToString();
                                model[0].Col13 = "Update";
                                model[0].Col100 = "Update & New";
                                model[0].Col121 = "U";
                                model[0].Col122 = "<u>U</u>pdate";
                                model[0].Col123 = "Update & Ne<u>w</u>";
                                model[0].Chk7 = dtt.Rows[0]["status"].ToString() == "Y" ? true : false;
                                String[] L1 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["menu"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems1 = L1;
                                String[] L2 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["venue"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems2 = L2;
                                //String[] L3 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["freq"].ToString()).Distinct()).Split(',');
                                //model[0].SelectedItems3 = L3;
                                ViewBag.divcancel = "style=display:block";
                                ViewBag.divmail = "style=display:block";

                                #region attachment
                                DataTable dtf = new DataTable();
                                dtf = sgen.getdata(userCode, "select client_id||client_unit_id||vch_num||to_char(vch_date,'yyyymmdd')||type as fstr, rec_id,file_name," +
                                    "file_path,col1,col2,description,Col3 from file_tab where vch_num='" + dtt.Rows[0]["vch_num"].ToString() + "' and type='" + model[0].Col12 + "' " +
                                    "and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "' and col1='BOK'");
                                model[0].Files1 = new List<Files>();
                                List<Files> ltmf = new List<Files>();
                                if (dtf.Rows.Count > 0)
                                {
                                    try
                                    {
                                        string serverpath = Server.MapPath("~/Uploads/" + cg_com_name.Replace(" ", "") + "/");
                                        foreach (DataRow drf in dtf.Rows)
                                        {
                                            Files tmf = new Files();
                                            var fullPath = serverpath + drf["file_path"].ToString();
                                            byte[] imageArray = System.IO.File.ReadAllBytes(fullPath);
                                            string base64 = Convert.ToBase64String(imageArray);
                                            tmf.FileBase64 = base64;
                                            tmf.FileName = drf["file_name"].ToString();
                                            tmf.ContentType = drf["col2"].ToString();
                                            tmf.FileTitle = drf["col3"].ToString();
                                            tmf.FileDesc = drf["description"].ToString();
                                            ltmf.Add(tmf);
                                        }
                                        model[0].Files1 = ltmf;
                                    }
                                    catch (Exception err)
                                    {
                                        model[0].Files1 = new List<Files>();
                                        Files tm3 = new Files();
                                        tm3.FileName = "-";
                                        model[0].Files1.Add(tm3);
                                    }
                                }
                                else
                                {
                                    model[0].Files1 = new List<Files>();
                                    Files tm3 = new Files();
                                    tm3.FileName = "-";
                                    model[0].Files1.Add(tm3);
                                }

                                #endregion
                            }
                            break;
                        case "PRINT":
                            mq = "select a.vch_num,to_char(convert_tz(a.vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') vch_date,a.ent_by," +
                                 "to_char(a.ent_date,'" + sgen.GetSaveSqlDateFormat() + "') ent_date,a.client_id,a.client_unit_id,a.occasion,a.foodtype,a.venueadd,a.pax," +
                                 "a.servchk1,a.servtxt1,a.servchk2,a.servtxt2,a.servchk3,a.servtxt3,a.servchk4,a.servtxt4,a.servchk5,servtxt5,a.servchk6,a.servtxt6," +
                                 "a.servchk7,a.servtxt7,a.custname,a.custadd,a.contno,a.email,a.bname,a.gname,a.hostedby,a.amt,a.gst,a.mcd,a.tot,a.adv,a.bal,a.intremark," +
                                 "(case when to_char(a.dof, '" + sgen.Getsqldateformat() + "') = '01/01/1900' then '-' else to_char(a.dof, '" + sgen.Getsqldateformat() + "') end ) dof," +
                                 "(case when to_char(a.dob, '" + sgen.Getsqldateformat() + "') = '01/01/1900' then '-' else to_char(a.dob, '" + sgen.Getsqldateformat() + "') end ) dob," +
                                 "(case when to_char(a.bdob, '" + sgen.Getsqldateformat() + "') = '01/01/1900' then '-' else to_char(a.bdob, '" + sgen.Getsqldateformat() + "') end ) bdob," +
                                 "(case when to_char(a.gdob, '" + sgen.Getsqldateformat() + "') = '01/01/1900' then '-' else to_char(a.gdob, '" + sgen.Getsqldateformat() + "') end ) gdob," +
                                 "(case when to_char(a.bookdt, '" + sgen.Getsqldateformat() + "') = '01/01/1900' then '-' else to_char(a.gdob, '" + sgen.Getsqldateformat() + "') end ) bookdt," +
                                 "v.master_name venue,m.master_name menu,a.status,a.remark,a.altcont from func a " +
                                 "inner join master_setting m on m.master_id=a.menu and m.type='MEN' and find_in_set(m.client_unit_id,a.client_unit_id)=1 " +
                                 "inner join master_setting v on v.master_id=a.menu and v.type='VEN' and find_in_set(v.client_unit_id,a.client_unit_id)=1 " +
                                 "where a.client_id|| a.client_unit_id||a.vch_num|| to_char(a.vch_date, 'yyyymmdd')|| a.type='" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                DataSet dsh = new DataSet();
                                dtt.TableName = "prepcur";
                                dsh.Tables.Add(dtt);
                                sgen.open_report_byDs_xml(userCode, dsh, "", "Booking Report");
                                ViewBag.scripCall += "showRptnew('Report');disableForm();";
                            }
                            break;
                    }
                    break;
                #endregion

                #region Lead Detail
                case "lead_detail":
                    switch (btnval.ToUpper())
                    {
                        case "PARTY":
                            mq = "select cp.ploc, cp.cpcontother, cp.cpemailother, a.c_name as parent_acc, cs.STD_CODE country_code,  substr(cp.vch_num,0,3) as cont_type, cp.type, cp.client_type, cp.vch_num,cp.c_name,cs.alpha_2 as country_id,cs.country_name,cs.state_gst_code as state_id ,cs.state_name," +
                               "cp.city,cs.city_name , cp.pincode, cp.addr,cp.cpname as cp_fname, cp.cp_mname,cp.cp_Lname ,cp.cpdept ,cp.cpdesig," +
                               "cp.cpemail,cp.cpcont,cp.cpaltcont,cp.cplandno,cp.cpaddr," +
                               "(case when to_char(cp.dob, '" + sgen.Getsqldateformat() + "') = '01/01/1900' then '' else to_char(cp.dob, '" + sgen.Getsqldateformat() + "') end ) as dob," +
                               " (case when to_char(cp.doa, '" + sgen.Getsqldateformat() + "') = '01/01/1900' then '' else to_char(cp.doa, '" + sgen.Getsqldateformat() + "') end ) as doa " +
                               "from clients_mst cp left join clients_mst a on a.vch_num=cp.parent_id  and a.client_unit_id=cp.client_unit_id and a.type='BCD'  left join country_state cs on cs.rec_id = cp.city where cp.client_id|| cp.client_unit_id|| cp.vch_num|| to_char(cp.vch_date, 'yyyymmdd')|| cp.type='" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                #region party location 
                                mod9.Add(new SelectListItem { Text = "Domestic", Value = "001" });
                                mod9.Add(new SelectListItem { Text = "Overseas", Value = "002" });
                                TempData[MyGuid + "_Tlist9"] = model[0].LTM1[0].TList9 = mod9;
                                #endregion
                                String[] L9 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["ploc"].ToString()).Distinct()).Split(',');
                                model[0].LTM1[0].SelectedItems9 = L9;

                                model[0].LTM1[0].Col18 = dtt.Rows[0]["vch_num"].ToString();
                                model[0].LTM1[0].Col19 = dtt.Rows[0]["c_name"].ToString();
                                model[0].LTM1[0].Col40 = dtt.Rows[0]["country_id"].ToString();
                                model[0].LTM1[0].Col41 = dtt.Rows[0]["state_id"].ToString();
                                model[0].LTM1[0].Col42 = dtt.Rows[0]["city"].ToString();
                                model[0].LTM1[0].Col23 = dtt.Rows[0]["country_name"].ToString();
                                model[0].LTM1[0].Col24 = dtt.Rows[0]["state_name"].ToString();
                                model[0].LTM1[0].Col25 = dtt.Rows[0]["city_name"].ToString();
                                model[0].LTM1[0].Col26 = dtt.Rows[0]["pincode"].ToString();
                                model[0].LTM1[0].Col27 = dtt.Rows[0]["addr"].ToString();
                                model[0].LTM1[0].Col28 = dtt.Rows[0]["cp_fname"].ToString();
                                model[0].LTM1[0].Col29 = dtt.Rows[0]["cp_mname"].ToString();
                                model[0].LTM1[0].Col30 = dtt.Rows[0]["cp_Lname"].ToString();
                                model[0].LTM1[0].Col31 = dtt.Rows[0]["cpdesig"].ToString();
                                model[0].LTM1[0].Col32 = dtt.Rows[0]["cpdept"].ToString();
                                model[0].LTM1[0].Col33 = dtt.Rows[0]["cpemail"].ToString();
                                model[0].LTM1[0].Col34 = dtt.Rows[0]["cplandno"].ToString();
                                model[0].LTM1[0].Col35 = dtt.Rows[0]["cpcont"].ToString();
                                model[0].LTM1[0].Col36 = dtt.Rows[0]["cpaltcont"].ToString();
                                model[0].LTM1[0].Col37 = dtt.Rows[0]["dob"].ToString();
                                model[0].LTM1[0].Col38 = dtt.Rows[0]["doa"].ToString();
                                model[0].LTM1[0].Col39 = dtt.Rows[0]["cpaddr"].ToString();
                                model[0].LTM1[0].Col43 = dtt.Rows[0]["type"].ToString();
                                model[0].LTM1[0].Col44 = dtt.Rows[0]["cont_type"].ToString();
                                model[0].LTM1[0].Col45 = dtt.Rows[0]["country_code"].ToString();
                                model[0].LTM1[0].Col51 = dtt.Rows[0]["parent_acc"].ToString();
                                model[0].LTM1[0].Col78 = dtt.Rows[0]["cpcontother"].ToString();
                                model[0].LTM1[0].Col79 = dtt.Rows[0]["cpemailother"].ToString();
                            }
                            break;
                        case "EDIT":
                        case "VIEW":
                            mq = "select a.cp_gender,a.ld_rating, nvl(ex.asg_to,a.ct_person) ct_person, (case when ex.ld_st ='0' or ex.ld_st is null  then a.ld_status else ex.ld_st end ) ld_status,  " +
                                "(case when a.ploc='0' then '' else a.ploc end) ploc," +
                                "(case when a.pr_loc='0' then '' else a.pr_loc end) pr_loc," +
                                "(case when a.budget='0' then '' else a.budget end) budget," +
                                "(case when a.funding='0' then '' else a.funding end) funding, " +
                                "(case when a.cpcontother='0' then '' else a.cpcontother end) cpcontother, " +
                                "(case when a.cpemailother='0' then '' else a.cpemailother end) cpemailother, c.c_name as parent_acc,  cs.std_code country_code, a.client_type, a.bsn_type, a.cp_ref_type, a.ref_type,  a.cp_id, a.vch_num,to_char(convert_tz(a.vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') as vch_date ,a.ent_by," +
                               " to_char(a.ent_date,'" + sgen.GetSaveSqlDateFormat() + "') ent_date,a.client_id,a.client_unit_id,a.cust_id,a.ld_owner,a.ld_source," +
                               "a.ot_source, a.remark," +
                               "(case when a.refered_by='0' then '' else a.refered_by end) refered_by," +
                               "a.cust_name,a.ld_product ,cs.alpha_2 as country_id,cs.country_name," +
                               "cs.state_gst_code as state_id ,cs.state_name,a.city,cs.city_name , a.pincode, a.address,a.cp_fname, " +
                               "(case when a.cp_mname='0' then '' else a.cp_mname end) cp_mname," +
                               "(case when a.cp_Lname='0' then '' else a.cp_Lname end) cp_Lname ," +
                               "(case when a.dept='0' then '' else a.dept end) dept ," +
                               "(case when a.emailid='0' then '' else a.emailid end) emailid," +
                               "(case when a.desig='0' then '' else a.desig end) desig," +
                               "(case when a.mobile_no='0000000000' or a.mobile_no='0' then '' else a.mobile_no end) mobile_no," +
                               "(case when a.contact_no='0000000000' or a.contact_no='0' then '' else a.contact_no end) contact_no,(case when a.al_contact='0000000000' or a.al_contact='0' then '' else a.al_contact end) al_contact," +
                               "(case when a.cp_add='0' then '' else a.cp_add end) cp_add," +
                               " (case when to_char(a.dob, '" + sgen.Getsqldateformat() + "') = '01/01/1900' then '' else to_char(a.dob, '" + sgen.Getsqldateformat() + "') end ) as dob," +
                               " (case when to_char(a.doa, '" + sgen.Getsqldateformat() + "') = '01/01/1900' then '' else to_char(a.doa, '" + sgen.Getsqldateformat() + "') end ) as doa,a.lead_con,a.pax," +
                               "(case when to_char(a.dof, '" + sgen.Getsqldateformat() + "') = '01/01/1900' then '' else to_char(a.dof, '" + sgen.Getsqldateformat() + "') end ) as dof,a.ld_venue,a.ld_menu,a.tof " +
                               " from lead_master a left join clients_mst b on a.cust_id=b.vch_num and a.client_unit_id=b.client_unit_id and b.type='BCD' " +
                               "  and (substr(b.vch_num,0,3)='303' or substr(b.vch_num,0,3)='909')  left join country_state cs on cs.rec_id = a.city " +
                               " left join clients_mst c on c.vch_num=b.parent_id  and a.client_unit_id=c.client_unit_id and c.type='BCD' " +
                               "left join (select col5 as asg_to ,col6 ld_st,col2 as lead_id from enx_tab2 where type='VFC' " +
                              "and client_unit_id='" + unitid_mst + "'  and vch_num in (select max(vch_num) from enx_tab2 where type = 'VFC' and client_unit_id = '" + unitid_mst + "' group by col2))  ex  on a.vch_num = ex.lead_id " +
                              "where a.client_id|| a.client_unit_id|| " +
                               "a.vch_num|| to_char(a.vch_date, 'yyyymmdd')|| a.type='" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "Lead_Detail", dtt);
                                sgen.SetSession(MyGuid, "EDMODE", "Y");
                                #region detail
                                #region  Lead Owner
                                TempData[MyGuid + "_0TList1"] = model[0].LTM1[0].TList1 = mod1 = cmd_Fun.username_mod(userCode, m_module3);

                                //model[0].LTM1[0].SelectedItems1 = new string[] { "" };

                                #endregion
                                #region  Lead source
                                TempData[MyGuid + "_0TList2"] = model[0].LTM1[0].TList2 = mod2 = cmd_Fun.leadsource(userCode, unitid_mst, out defcall);

                                //model[0].LTM1[0].SelectedItems2 = new string[] { defcall };

                                #endregion
                                #region  Lead status
                                TempData[MyGuid + "_0TList3"] = model[0].LTM1[0].TList3 = mod3 = cmd_Fun.leadstatus(userCode, unitid_mst, out defcall);

                                //model[0].LTM1[0].SelectedItems3 = new string[] { defcall };

                                #endregion
                                #region  Assigned to(USERS)
                                TempData[MyGuid + "_0TList4"] = model[0].LTM1[0].TList4 = mod4 = cmd_Fun.username_mod(userCode, m_module3);

                                model[0].LTM1[0].SelectedItems4 = new string[] { "" };

                                #endregion
                                #region  Product
                                TempData[MyGuid + "_0TList5"] = model[0].LTM1[0].TList5 = mod5 = cmd_Fun.product(userCode, unitid_mst, out defcall);

                                model[0].LTM1[0].SelectedItems5 = new string[] { defcall };

                                #endregion
                                #region contactperson
                                mod8 = new List<SelectListItem>();
                                mq = "select vch_num,cpname from clients_mst where  ref_code='" + dtt.Rows[0]["cust_id"].ToString() + "' and client_unit_id='" + unitid_mst + "'";
                                DataTable dtcont = new DataTable();
                                dtcont = sgen.getdata(userCode, mq);
                                if (dtcont.Rows.Count > 0)
                                {
                                    mod8 = sgen.dt_to_selectlist(dtcont);
                                }
                                TempData[MyGuid + "_0TList6"] = model[0].LTM1[0].TList6 = mod8;

                                model[0].LTM1[0].SelectedItems6 = new string[] { "" };
                                #endregion
                                #region  Business Type
                                TempData[MyGuid + "_0TList7"] = model[0].LTM1[0].TList7 = mod10 = cmd_Fun.businesstype(userCode, unitid_mst, out defcall);

                                model[0].LTM1[0].SelectedItems7 = new string[] { defcall };

                                #endregion
                                #region acc type
                                TempData[MyGuid + "_0Tlist8"] = model[0].LTM1[0].TList8 = mod11 = cmd_Fun.clienttype(userCode, unitid_mst, out defcall);

                                model[0].LTM1[0].SelectedItems8 = new string[] { "" };

                                #endregion
                                #region party location 
                                mod9.Add(new SelectListItem { Text = "Domestic", Value = "001" });
                                mod9.Add(new SelectListItem { Text = "Overseas", Value = "002" });
                                TempData[MyGuid + "_0Tlist9"] = model[0].LTM1[0].TList9 = mod9;
                                #endregion
                                mod13.Add(new SelectListItem { Text = "Male", Value = "Male" });
                                mod13.Add(new SelectListItem { Text = "Female", Value = "Female" });
                                TempData[MyGuid + "_0Tlist11"] = model[0].LTM1[0].TList11 = mod13;
                                model[0].LTM1[0].SelectedItems11 = new string[] { "" };

                                TempData[MyGuid + "_0TList12"] = model[0].LTM1[0].TList12 = mod12 = cmd_Fun.leadrating(userCode, unitid_mst);
                                model[0].LTM1[0].SelectedItems12 = new string[] { "" };

                                TempData[MyGuid + "_0Tlist13"] = model[0].LTM1[0].TList13 = mod14 = cmd_Fun.leadVenue(userCode, unitid_mst);  // VENUE
                                TempData[MyGuid + "_0Tlist14"] = model[0].LTM1[0].TList14 = mod15 = cmd_Fun.leadMenu(userCode, unitid_mst);  // MENU
                                TempData[MyGuid + "_0Tlist15"] = model[0].LTM1[0].TList15 = mod15 = cmd_Fun.leadtof(userCode, unitid_mst);  // tof

                                #endregion
                                #region followup
                                #region  Assigned to
                                TempData[MyGuid + "_FL_TList1"] = model[0].LTM2[0].TList1 = mod6 = cmd_Fun.username_mod(userCode, m_module3);

                                model[0].LTM2[0].SelectedItems1 = new string[] { "" };

                                #endregion
                                #region  lead status
                                mod7 = cmd_Fun.leadstatus(userCode, unitid_mst, out defcall);
                                model[0].LTM2[0].TList2 = mod7;
                                model[0].LTM2[0].SelectedItems2 = new string[] { "" };
                                TempData[MyGuid + "_FL_TList2"] = mod7;
                                #endregion
                                #region  Next Action
                                TempData[MyGuid + "_FL_TList3"] = model[0].LTM2[0].TList3 = mod9 = cmd_Fun.nextaction(userCode, unitid_mst);

                                model[0].LTM2[0].SelectedItems3 = new string[] { "" };

                                #endregion
                                if (dtt.Rows[0]["lead_con"].ToString().Equals("C"))
                                {
                                    model[0].LTM2[0].Col27 = "Re-Opened";
                                    model[0].LTM2[0].Col28 = "Reason Of Re-Open";
                                }
                                else
                                {
                                    model[0].LTM2[0].Col27 = "Closed";
                                    model[0].LTM2[0].Col28 = "Reason Of Closing";
                                }
                                #endregion
                                model[0].LTM1[0].Col8 = "(client_id||client_unit_id|| vch_num|| to_char(vch_date, 'yyyymmdd')|| type) = '" + URL + "'";
                                model[0].LTM1[0].Col12 = "LED";
                                model[0].LTM1[0].Col10 = "Lead_Master";
                                model[0].LTM1[0].Col3 = dtt.Rows[0]["ent_by"].ToString();
                                model[0].LTM1[0].Col4 = dtt.Rows[0]["ent_date"].ToString();
                                model[0].LTM1[0].Col15 = MyGuid;
                                model[0].LTM1[0].Col16 = dtt.Rows[0]["vch_num"].ToString();
                                model[0].LTM1[0].Col17 = dtt.Rows[0]["vch_date"].ToString();
                                model[0].LTM1[0].Col18 = dtt.Rows[0]["cust_id"].ToString();
                                if (model[0].LTM1[0].Col18 == "0") { model[0].LTM1[0].Col58 = dtt.Rows[0]["cust_name"].ToString(); }
                                else { model[0].LTM1[0].Col19 = dtt.Rows[0]["cust_name"].ToString(); }
                                model[0].LTM1[0].Col20 = dtt.Rows[0]["ot_source"].ToString();
                                model[0].LTM1[0].Col21 = dtt.Rows[0]["remark"].ToString();
                                model[0].LTM1[0].Col22 = dtt.Rows[0]["refered_by"].ToString();
                                model[0].LTM1[0].Col40 = dtt.Rows[0]["country_id"].ToString();
                                model[0].LTM1[0].Col41 = dtt.Rows[0]["state_id"].ToString();
                                model[0].LTM1[0].Col42 = dtt.Rows[0]["city"].ToString();
                                model[0].LTM1[0].Col23 = dtt.Rows[0]["country_name"].ToString();
                                model[0].LTM1[0].Col24 = dtt.Rows[0]["state_name"].ToString();
                                model[0].LTM1[0].Col25 = dtt.Rows[0]["city_name"].ToString();
                                model[0].LTM1[0].Col26 = dtt.Rows[0]["pincode"].ToString();
                                model[0].LTM1[0].Col27 = dtt.Rows[0]["address"].ToString();
                                model[0].LTM1[0].Col28 = dtt.Rows[0]["cp_fname"].ToString();
                                model[0].LTM1[0].Col29 = dtt.Rows[0]["cp_mname"].ToString();
                                model[0].LTM1[0].Col30 = dtt.Rows[0]["cp_Lname"].ToString();
                                model[0].LTM1[0].Col31 = dtt.Rows[0]["desig"].ToString();
                                model[0].LTM1[0].Col32 = dtt.Rows[0]["dept"].ToString();
                                model[0].LTM1[0].Col33 = dtt.Rows[0]["emailid"].ToString();
                                model[0].LTM1[0].Col34 = dtt.Rows[0]["mobile_no"].ToString();
                                model[0].LTM1[0].Col35 = dtt.Rows[0]["contact_no"].ToString();
                                model[0].LTM1[0].Col36 = dtt.Rows[0]["al_contact"].ToString();
                                model[0].LTM1[0].Col37 = dtt.Rows[0]["dob"].ToString();
                                model[0].LTM1[0].Col38 = dtt.Rows[0]["doa"].ToString();
                                model[0].LTM1[0].Col39 = dtt.Rows[0]["cp_add"].ToString();
                                model[0].LTM1[0].Col43 = dtt.Rows[0]["ref_type"].ToString();
                                model[0].LTM1[0].Col44 = dtt.Rows[0]["cp_ref_type"].ToString();
                                model[0].LTM1[0].Col45 = dtt.Rows[0]["country_code"].ToString();
                                model[0].LTM1[0].Col51 = dtt.Rows[0]["parent_acc"].ToString();
                                model[0].LTM1[0].Col78 = dtt.Rows[0]["cpcontother"].ToString();
                                model[0].LTM1[0].Col79 = dtt.Rows[0]["cpemailother"].ToString();
                                model[0].LTM1[0].Col80 = dtt.Rows[0]["pr_loc"].ToString();
                                model[0].LTM1[0].Col81 = dtt.Rows[0]["budget"].ToString();
                                model[0].LTM1[0].Col82 = dtt.Rows[0]["funding"].ToString();
                                model[0].LTM1[0].Col83 = dtt.Rows[0]["dof"].ToString();
                                model[0].LTM1[0].Col84 = dtt.Rows[0]["pax"].ToString();
                                model[0].LTM1[0].Col13 = "Update";
                                //model[0].LTM2[0].Col13 = "Save";
                                String[] L1 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["ld_owner"].ToString()).Distinct()).Split(',');
                                model[0].LTM1[0].SelectedItems1 = L1;
                                String[] L2 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["ld_source"].ToString()).Distinct()).Split(',');
                                model[0].LTM1[0].SelectedItems2 = L2;
                                String[] L3 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["ld_status"].ToString()).Distinct()).Split(',');
                                model[0].LTM1[0].SelectedItems3 = L3;
                                String[] L4 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["ct_person"].ToString()).Distinct()).Split(',');
                                model[0].LTM1[0].SelectedItems4 = L4;
                                String[] L5 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["ld_product"].ToString()).Distinct()).Split(',');
                                model[0].LTM1[0].SelectedItems5 = L5;
                                String[] L8 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["cp_id"].ToString()).Distinct()).Split(',');
                                model[0].LTM1[0].SelectedItems6 = L8;
                                String[] L9 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["ploc"].ToString()).Distinct()).Split(',');
                                model[0].LTM1[0].SelectedItems9 = L9;
                                String[] L10 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["bsn_type"].ToString()).Distinct()).Split(',');
                                model[0].LTM1[0].SelectedItems7 = L10;
                                String[] L11 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["client_type"].ToString()).Distinct()).Split(',');
                                model[0].LTM1[0].SelectedItems8 = L11;

                                model[0].LTM1[0].SelectedItems11 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["cp_gender"].ToString()).Distinct()).Split(',');
                                model[0].LTM1[0].SelectedItems12 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["ld_rating"].ToString()).Distinct()).Split(',');
                                model[0].LTM1[0].SelectedItems13 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["ld_venue"].ToString()).Distinct()).Split(',');
                                model[0].LTM1[0].SelectedItems14 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["ld_menu"].ToString()).Distinct()).Split(',');
                                model[0].LTM1[0].SelectedItems15 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["tof"].ToString()).Distinct()).Split(',');

                                DataTable dtf = new DataTable();
                                dtf = sgen.getdata(userCode, "select client_id||client_unit_id||vch_num||to_char(vch_date,'yyyymmdd')||type as fstr, rec_id,file_name,file_path,col1,col2,description,Col3 from file_tab where vch_num='" + dtt.Rows[0]["vch_num"].ToString() + "' and type in " +
                                    "('LED','DDLED') and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "'");
                                List<Tmodelmain> ltmf = new List<Tmodelmain>();
                                string des = "", title = "", f_recid = "";
                                foreach (DataRow drf in dtf.Rows)
                                {
                                    Tmodelmain tmf = new Tmodelmain();
                                    tmf.Col4 = drf["file_path"].ToString();
                                    tmf.Col1 = drf["file_name"].ToString();
                                    tmf.Col2 = drf["col1"].ToString();
                                    tmf.Col3 = drf["rec_id"].ToString();
                                    f_recid = drf["rec_id"].ToString();
                                    tmf.Col5 = drf["description"].ToString();
                                    des = drf["description"].ToString();
                                    title = drf["Col3"].ToString();
                                    tmf.Col6 = drf["col3"].ToString();
                                    tmf.Col7 = drf["col2"].ToString();
                                    model[0].LTM1[0].Col49 = "(client_id||client_unit_id|| vch_num|| to_char(vch_date, 'yyyymmdd')|| type) = '" + drf["fstr"].ToString() + "'";
                                    ltmf.Add(tmf);
                                }
                                model[0].LTM4 = ltmf;
                                model[0].LTM1[0].Col46 = des;
                                model[0].LTM1[0].Col47 = title;
                                model[0].LTM1[0].Col48 = f_recid;
                                #region follow up
                                String[] L6 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["ct_person"].ToString()).Distinct()).Split(',');
                                model[0].LTM2[0].SelectedItems1 = L6;
                                String[] L7 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["ld_status"].ToString()).Distinct()).Split(',');
                                model[0].LTM2[0].SelectedItems2 = L7;
                                model[0].LTM2[0].Col19 = dtt.Rows[0]["vch_num"].ToString();
                                model[0].LTM2[0].Col18 = sgen.server_datetime_local(userCode);
                                mq = "select a.col8, a.col5, a.vch_num ,a.col4 as reason ,col12 as closed, a.col1 as rmk,to_char(convert_tz(a.date1,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') as date1" +
                                    " ,to_char(convert_tz(a.date2,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') as date2 ,first_name||' '||replace(middle_name,'0','')||" +
                                    "''||replace(last_name,'0','') as user_name , n.master_name as nxt_fl from enx_tab2 a left join user_details ud on a.col5 = " +
                                    " ud.vch_num left join master_setting n on n.master_id = a.col7 and n.type = 'NAM' and " +
                                    "find_in_set(n.client_unit_id, a.client_unit_id)= 1 where a.type = 'VFC' and a.client_unit_id='" + unitid_mst + "' " +
                                    "and a.col2='" + dtt.Rows[0]["vch_num"].ToString() + "' order by a.vch_num desc";
                                var tmm = model.FirstOrDefault();
                                dtf = new DataTable();
                                dtf = sgen.getdata(userCode, mq);
                                if (dtf.Rows.Count > 0)
                                {
                                    model[0].LTM2 = new List<Tmodelmain>();
                                    string assign = dtf.Rows[0]["col5"].ToString();
                                    for (int i = 0; i < dtf.Rows.Count; i++)
                                    {
                                        Tmodelmain tltm2 = new Tmodelmain();
                                        tltm2.Col18 = sgen.server_datetime_local(userCode);
                                        tltm2.Col19 = dtt.Rows[0]["vch_num"].ToString();
                                        // tltm2.Col20 = dtf.Rows[0]["date1"].ToString();                                       
                                        tltm2.Col32 = dtf.Rows[0]["date1"].ToString();
                                        tltm2.Col21 = dtf.Rows[i]["user_name"].ToString();
                                        //tltm2.Col23 = dtf.Rows[i]["rmk"].ToString();
                                        if (dtf.Rows[i]["closed"].ToString() == "Y")
                                        {
                                            tltm2.Col23 = "(Lead Is Closed ) " + dtf.Rows[i]["reason"].ToString();
                                        }
                                        else if (dtf.Rows[i]["closed"].ToString() == "R")
                                        {
                                            tltm2.Col23 = "(Lead Is Re-Opened ) " + dtf.Rows[i]["reason"].ToString();
                                        }
                                        else
                                        {
                                            tltm2.Col23 = dtf.Rows[i]["rmk"].ToString();

                                        }
                                        if ((dtf.Rows[i]["col8"].ToString() != null) && (dtf.Rows[i]["col8"].ToString() != "0"))
                                        {
                                            tltm2.Col33 = dtf.Rows[i]["col8"].ToString();
                                        }
                                        if (dtf.Rows[i]["date2"].ToString() != "01/01/1900")
                                        {
                                            tltm2.Col24 = dtf.Rows[i]["date2"].ToString();
                                        }
                                        tltm2.Col25 = dtf.Rows[i]["nxt_fl"].ToString();
                                        tltm2.TList1 = mod6;
                                        tltm2.SelectedItems1 = System.String.Join(",", assign).Split(',');
                                        tltm2.TList2 = mod7;
                                        tltm2.SelectedItems2 = L7;
                                        tltm2.TList3 = mod9;
                                        tltm2.SelectedItems3 = new string[] { "" };
                                        if (dtt.Rows[0]["lead_con"].ToString().Equals("C"))
                                        {
                                            tltm2.Col27 = "Re-Opened";
                                            tltm2.Col28 = "Reason Of Re-Open";
                                        }
                                        else
                                        {
                                            tltm2.Col27 = "Closed";
                                            tltm2.Col28 = "Reason Of Closing";
                                        }
                                        model[0].LTM2.Add(tltm2);
                                    }
                                }
                                model[0].LTM2[0].Col29 = dtt.Rows[0]["parent_acc"].ToString();
                                model[0].LTM2[0].Col30 = dtt.Rows[0]["cust_name"].ToString();
                                model[0].LTM2[0].Col18 = sgen.server_datetime_local(userCode);
                                model[0].LTM2[0].Col20 = sgen.server_datetime_local(userCode);
                                #endregion
                                #region Status
                                string seq = sgen.getstring(userCode, "select sectiontype FROM master_setting  where type = 'LST' and find_in_set(client_unit_id,'" + unitid_mst + "')=1 and master_id='" + dtt.Rows[0]["ld_status"].ToString() + "'");
                                DataTable dt = sgen.getdata(userCode, "SELECT master_id,master_name,(case when master_id<=" + seq + " then 'Y' else 'N' end) as st ,sectiontype FROM master_setting  where type = 'LST' and " +
                                   "find_in_set(client_unit_id,'" + unitid_mst + "')=1 AND STATUS='Y' order by sectiontype ");
                                if (dt.Rows.Count > 0)
                                {
                                    model[0].LTM3 = new List<Tmodelmain>();
                                    for (int i = 0; i < dt.Rows.Count; i++)
                                    {
                                        Tmodelmain tltm3 = new Tmodelmain();
                                        tltm3.Col2 = dt.Rows[i]["master_name"].ToString();
                                        tltm3.Col3 = dt.Rows[i]["st"].ToString();
                                        if (dt.Rows[i]["master_id"].ToString() == dtt.Rows[0]["ld_status"].ToString())
                                        {
                                            tltm3.Col3 = "D";
                                        }
                                        model[0].LTM3.Add(tltm3);
                                    }
                                }
                                #endregion
                            }
                            break;
                        case "ADD1":
                            // mq = "select * from country_state where client_id||client_unit_id||vch_num|| to_char(vch_date, 'yyyymmdd')||type='" + URL + "'";
                            mq = "select * from country_state where alpha_2||state_gst_code ||city_name='" + URL + "'";
                            DataTable dt1 = new DataTable();
                            dt1 = sgen.getdata(userCode, mq);
                            if (dt1.Rows.Count > 0)
                            {
                                model[0].LTM1[0].Col23 = dt1.Rows[0]["country_name"].ToString();
                                model[0].LTM1[0].Col24 = dt1.Rows[0]["state_name"].ToString();
                                model[0].LTM1[0].Col25 = dt1.Rows[0]["city_name"].ToString();
                                model[0].LTM1[0].Col42 = dt1.Rows[0]["rec_id"].ToString();
                                model[0].LTM1[0].Col40 = dt1.Rows[0]["alpha_2"].ToString();
                                model[0].LTM1[0].Col41 = dt1.Rows[0]["state_gst_code"].ToString();
                                model[0].LTM1[0].Col45 = dt1.Rows[0]["std_code"].ToString();
                            }
                            break;
                    }
                    break;
                #endregion
                #region lead Convert
                case "lead_convert":
                    switch (btnval.ToUpper())
                    {
                        case "PARTY":
                            //(case when cp.type = 'PDA' then 'PON' else 'UNC' end ) as cont_type
                            DataTable dt = sgen.getdata(userCode, "select client_id|| client_unit_id|| vch_num|| to_char(vch_date, 'yyyymmdd')|| type as fstr,vch_num,  c_name, (case when type = 'PDA' then 'PON' else 'BCN' end )||vch_num fstr " +
                                " from clients_mst where  client_id|| client_unit_id|| vch_num|| to_char(vch_date, 'yyyymmdd')|| type='" + URL + "'");
                            if (dt.Rows.Count > 0)
                            {
                                model[0].Col18 = dt.Rows[0]["c_name"].ToString();
                                model[0].Col25 = dt.Rows[0]["vch_num"].ToString();
                                model[0].Col27 = dt.Rows[0]["fstr"].ToString();
                                sgen.SetSession(MyGuid, "ld_acc", dt.Rows[0]["fstr"].ToString());
                            }
                            break;
                        case "CONTACT":
                            mq = "select vch_num,(a.cpname || ' ' || replace(a.cp_mname, '0', '') || ' ' || replace(a.cp_lname,'0','')) cpname from clients_mst a" +
                                " where client_id|| client_unit_id|| ref_code|| to_char(vch_date, 'yyyymmdd')|| type='" + URL + "'";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                model[0].Col20 = dt.Rows[0]["cpname"].ToString();
                                model[0].Col26 = dt.Rows[0]["vch_num"].ToString();
                            }
                            break;
                    }
                    break;
                #endregion
                #region crm_reports
                case "crm_reports":
                    switch (btnval.ToUpper())
                    {
                        case "USERLEAD":
                            Make_query("crm_reports", "User Wise Lead Detail", "LEADDETAIL", "", "", "");
                            ViewBag.scripCall = "callFoo('View');";
                            break;
                        case "ASSIGNEDLEAD":
                            Make_query("crm_reports", "User Wise Lead Detail", "ASSIGNEDDETAIL", "", "", "");
                            ViewBag.scripCall = "callFoo('View');";
                            break;
                        case "CLOSED":
                            Make_query("crm_reports", "User Wise Lead Detail", "CLOSED", "", "", "");
                            ViewBag.scripCall = "callFoo('View');";
                            break;
                    }
                    break;
                #endregion
                #region site visit
                case "s_visit":
                    switch (btnval.ToUpper())
                    {
                        case "PARTY":
                            mq = "select cp.vch_num,cp.c_name from clients_mst cp  where" +
                                " cp.client_id|| cp.client_unit_id|| cp.vch_num|| to_char(cp.vch_date, 'yyyymmdd')|| cp.type='" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                model[0].Col81 = dtt.Rows[0]["vch_num"].ToString();
                                sgen.SetSession(MyGuid, "S_Account", dtt.Rows[0]["vch_num"].ToString());
                                model[0].Col19 = dtt.Rows[0]["c_name"].ToString();
                                Make_query("s_visit", "Select Contact Detail", "CONTACT", "1", "", "");
                                // ViewBag.scripCall = "callFoo('Select Party Contact Detail');";
                                ViewBag.scripCall += "callFoo('Select Party Contact Detail');setTableDatat();";
                            }
                            break;
                        case "CONTACT":
                            mq = "select  vch_num,(cpname || ' ' || replace(cp_mname, '0', '') || ' ' || replace(cp_lname, '0', '')) contact_person," +
                                "(case when cpcont='0000000000' then '' else cpcont end) as PerContact," +
                                    "(case when addr='0' then '-' else addr end) addr from clients_mst where type='BCD' and" +
                                    " client_id||client_unit_id||vch_num||to_char(vch_date,'yyyymmdd')||type||ref_code='" + URL + "' ";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                model[0].Col17 = dtt.Rows[0]["contact_person"].ToString();
                                model[0].Col20 = dtt.Rows[0]["addr"].ToString();
                                model[0].Col18 = dtt.Rows[0]["PerContact"].ToString();
                                model[0].Col93 = dtt.Rows[0]["vch_num"].ToString();
                            }
                            break;
                        case "EDIT":
                        case "VIEW":
                            mq = "select  a.vch_num,a.rec_id, a.client_id,a.client_unit_id,a.ent_by," +
                                " a.ent_date ent_date," +
                                " (case when to_char(a.date1, '" + sgen.Getsqldateformat() + "') = '01/01/1900' then '' else to_char(a.date1, '" + sgen.Getsqldateformat() + "') end ) date1," +
                                " (case when to_char(a.date2, '" + sgen.Getsqldateformat() + "') = '01/01/1900' then '' else to_char(a.date2, '" + sgen.Getsqldateformat() + "') end ) date2," +
                                " (case when to_char(a.date3, '" + sgen.Getsqldateformat() + "') = '01/01/1900' then '' else to_char(a.date3, '" + sgen.Getsqldateformat() + "') end ) date3," +
                                " (case when to_char(a.date4, '" + sgen.Getsqldateformat() + "') = '01/01/1900' then '' else to_char(a.date4, '" + sgen.Getsqldateformat() + "') end ) date4," +
                                " (case when to_char(a.date5, '" + sgen.Getsqldateformat() + "') = '01/01/1900' then '' else to_char(a.date5, '" + sgen.Getsqldateformat() + "') end ) date5," +
                                " (case when to_char(a.date6, '" + sgen.Getsqldateformat() + "') = '01/01/1900' then '' else to_char(a.date6, '" + sgen.Getsqldateformat() + "') end ) date6," +
                                " (case when to_char(a.date7, '" + sgen.Getsqldateformat() + "') = '01/01/1900' then '' else to_char(a.date7, '" + sgen.Getsqldateformat() + "') end ) date7," +
                                " (case when to_char(a.date8, '" + sgen.Getsqldateformat() + "') = '01/01/1900' then '' else to_char(a.date8, '" + sgen.Getsqldateformat() + "') end ) date8," +
                                " (case when to_char(a.date9, '" + sgen.Getsqldateformat() + "') = '01/01/1900' then '' else to_char(a.date9, '" + sgen.Getsqldateformat() + "') end ) date9," +
                                " (case when to_char(a.date10, '" + sgen.Getsqldateformat() + "')= '01/01/1900' then '' else to_char(a.date10, '" + sgen.Getsqldateformat() + "') end ) date10," +
                                " (case when to_char(a.date11, '" + sgen.Getsqldateformat() + "')= '01/01/1900' then '' else to_char(a.date11, '" + sgen.Getsqldateformat() + "') end ) date11," +
                                " (case when to_char(a.date12, '" + sgen.Getsqldateformat() + "')= '01/01/1900' then '' else to_char(a.date12, '" + sgen.Getsqldateformat() + "') end ) date12," +
                                " (case when to_char(a.date13, '" + sgen.Getsqldateformat() + "')= '01/01/1900' then '' else to_char(a.date13, '" + sgen.Getsqldateformat() + "') end ) date13," +
                                " (case when to_char(a.date14, '" + sgen.Getsqldateformat() + "')= '01/01/1900' then '' else to_char(a.date14, '" + sgen.Getsqldateformat() + "') end ) date14," +
                                " (case when to_char(a.date15, '" + sgen.Getsqldateformat() + "')= '01/01/1900' then '' else to_char(a.date15, '" + sgen.Getsqldateformat() + "') end ) date15," +
                                " (case when to_char(a.date16, '" + sgen.Getsqldateformat() + "')= '01/01/1900' then '' else to_char(a.date16, '" + sgen.Getsqldateformat() + "') end ) date16," +
                                " (case when to_char(a.date17, '" + sgen.Getsqldateformat() + "')= '01/01/1900' then '' else to_char(a.date17, '" + sgen.Getsqldateformat() + "') end ) date17," +
                                " (case when to_char(a.date18, '" + sgen.Getsqldateformat() + "')= '01/01/1900' then '' else to_char(a.date18, '" + sgen.Getsqldateformat() + "') end ) date18," +
                                " (case when to_char(a.date19, '" + sgen.Getsqldateformat() + "')= '01/01/1900' then '' else to_char(a.date19, '" + sgen.Getsqldateformat() + "') end ) date19," +
                                " (case when to_char(a.date20, '" + sgen.Getsqldateformat() + "')= '01/01/1900' then '' else to_char(a.date20, '" + sgen.Getsqldateformat() + "') end ) date20," +
                                " (case when to_char(a.date21, '" + sgen.Getsqldateformat() + "')= '01/01/1900' then '' else to_char(a.date21, '" + sgen.Getsqldateformat() + "') end ) date21," +
                                " (case when to_char(a.date22, '" + sgen.Getsqldateformat() + "')= '01/01/1900' then '' else to_char(a.date22, '" + sgen.Getsqldateformat() + "') end ) date22," +
                                " (case when to_char(a.date23, '" + sgen.Getsqldateformat() + "')= '01/01/1900' then '' else to_char(a.date23, '" + sgen.Getsqldateformat() + "') end ) date23," +
                                " (case when to_char(a.date24, '" + sgen.Getsqldateformat() + "')= '01/01/1900' then '' else to_char(a.date24, '" + sgen.Getsqldateformat() + "') end ) date24," +
                                " (case when to_char(a.date25, '" + sgen.Getsqldateformat() + "')= '01/01/1900' then '' else to_char(a.date25, '" + sgen.Getsqldateformat() + "') end ) date25," +
                                " (case when to_char(a.date26, '" + sgen.Getsqldateformat() + "')= '01/01/1900' then '' else to_char(a.date26, '" + sgen.Getsqldateformat() + "') end ) date26," +
                                " (case when to_char(a.date27, '" + sgen.Getsqldateformat() + "')= '01/01/1900' then '' else to_char(a.date27, '" + sgen.Getsqldateformat() + "') end ) date27," +
                                " (case when to_char(a.date28, '" + sgen.Getsqldateformat() + "')= '01/01/1900' then '' else to_char(a.date28, '" + sgen.Getsqldateformat() + "') end ) date28," +
                                " (case when to_char(a.date29, '" + sgen.Getsqldateformat() + "')= '01/01/1900' then '' else to_char(a.date29, '" + sgen.Getsqldateformat() + "') end ) date29," +
                                " (case when to_char(a.date30, '" + sgen.Getsqldateformat() + "')= '01/01/1900' then '' else to_char(a.date30, '" + sgen.Getsqldateformat() + "') end ) date30," +
                                " (case when to_char(a.date31, '" + sgen.Getsqldateformat() + "')= '01/01/1900' then '' else to_char(a.date31, '" + sgen.Getsqldateformat() + "') end ) date31," +
                                " (case when to_char(a.date32, '" + sgen.Getsqldateformat() + "')= '01/01/1900' then '' else to_char(a.date32, '" + sgen.Getsqldateformat() + "') end ) date32," +
                                " (case when to_char(a.date33, '" + sgen.Getsqldateformat() + "')= '01/01/1900' then '' else to_char(a.date33, '" + sgen.Getsqldateformat() + "') end ) date33," +
                                " (case when to_char(a.date34, '" + sgen.Getsqldateformat() + "')= '01/01/1900' then '' else to_char(a.date34, '" + sgen.Getsqldateformat() + "') end ) date34," +
                                " (case when to_char(a.date35, '" + sgen.Getsqldateformat() + "')= '01/01/1900' then '' else to_char(a.date35, '" + sgen.Getsqldateformat() + "') end ) date35," +
                                " (case when to_char(a.date36, '" + sgen.Getsqldateformat() + "')= '01/01/1900' then '' else to_char(a.date36, '" + sgen.Getsqldateformat() + "') end ) date36," +
                                " (case when to_char(a.date37, '" + sgen.Getsqldateformat() + "')= '01/01/1900' then '' else to_char(a.date37, '" + sgen.Getsqldateformat() + "') end ) date37," +
                                " (case when to_char(a.date38, '" + sgen.Getsqldateformat() + "')= '01/01/1900' then '' else to_char(a.date38, '" + sgen.Getsqldateformat() + "') end ) date38," +
                                " (case when to_char(a.date39, '" + sgen.Getsqldateformat() + "')= '01/01/1900' then '' else to_char(a.date39, '" + sgen.Getsqldateformat() + "') end ) date39," +
                                " (case when to_char(a.date40, '" + sgen.Getsqldateformat() + "')= '01/01/1900' then '' else to_char(a.date40, '" + sgen.Getsqldateformat() + "') end ) date40," +
                                " a.col1,a.col2,a.col3,a.col4,a.col5,a.col6,a.col7,a.col8,a.col9,a.col10," +
                                " a.col11,a.col12,a.col13,a.col14," +
                                "(case when length(a.col15)=1  and a.col15='0' then '-' else a.col15 end ) col15," +
                                "(case when length(a.col16)=1  and a.col16='0' then '-' else a.col16 end ) col16," +
                                "(case when length(a.col17)=1  and a.col17='0' then '-' else a.col17 end ) col17," +
                                "(case when length(a.col18)=1  and a.col18='0' then '-' else a.col18 end )  col18," +
                                "(case when length(a.col19)=1  and a.col19='0' then '-' else a.col19 end ) col19," +
                                "(case when length(a.col20)=1  and a.col20='0' then '-' else a.col20 end ) col20," +
                                "(case when length(a.col21)=1  and a.col21='0' then '-' else a.col21 end ) col21," +
                                "(case when length(a.col22)=1  and a.col22='0' then '-' else a.col22 end ) col22," +
                                "(case when length(a.col23)=1  and a.col23='0' then '-' else a.col23 end ) col23," +
                                "(case when length(a.col24)=1  and a.col24='0' then '-' else a.col24 end ) col24," +
                                "(case when length(a.col25)=1  and a.col25='0' then '-' else a.col25 end ) col25," +
                                "(case when length(a.col26)=1  and a.col26='0' then '-' else a.col26 end ) col26," +
                                "(case when length(a.col27)=1  and a.col27='0' then '-' else a.col27 end ) col27," +
                                "(case when length(a.col28)=1  and a.col28='0' then '-' else a.col28 end ) col28," +
                                "(case when length(a.col29)=1  and a.col29='0' then '-' else a.col29 end ) col29," +
                                "(case when length(a.col30)=1  and a.col30='0' then '-' else a.col30 end ) col30," +
                                "(case when length(a.col31)=1  and a.col31='0' then '-' else a.col31 end ) col31," +
                                "(case when length(a.col32)=1  and a.col32='0' then '-' else a.col32 end ) col32," +
                                "(case when length(a.col33)=1  and a.col33='0' then '-' else a.col33 end ) col33," +
                                "(case when length(a.col34)=1  and a.col34='0' then '-' else a.col34 end ) col34," +
                                "(case when length(a.col35)=1  and a.col35='0' then '-' else a.col35 end ) col35," +
                                "(case when length(a.col36)=1  and a.col36='0' then '-' else a.col36 end ) col36," +
                                "(case when length(a.col37)=1  and a.col37='0' then '-' else a.col37 end ) col37," +
                                "(case when length(a.col38)=1  and a.col38='0' then '-' else a.col38 end ) col38," +
                                "(case when length(a.col39)=1  and a.col39='0' then '-' else a.col39 end ) col39," +
                                "(case when length(a.col40)=1  and a.col40='0' then '-' else a.col40 end ) col40," +
                                "(case when length((cast(a.col41 as varchar(1000))))=1 and cast(a.col41 as varchar(1000))='0' then '-' else cast(a.col41 as varchar(1000)) end )  col41," +
                                "a.col42,a.col43,a.col44,a.col45,a.col46,a.col47," +
                                "(case when length((cast(a.col48 as varchar(1000))))=1 and cast(a.col48 as varchar(1000))='0' then '-' else cast(a.col48 as varchar(1000)) end )  col48," +
                                "(case when length(a.col49)=1  and a.col49='0' then '-' else a.col49 end ) col49," +
                                "(case when length(a.col50)=1  and a.col50='0' then '-' else a.col50 end ) col50," +
                                "(case when length(a.col51)=1  and a.col51='0' then '-' else a.col51 end ) col51," +
                                "(case when length(a.col52)=1  and a.col52='0' then '-' else a.col52 end ) col52," +
                                "(case when length(a.col53)=1  and a.col53='0' then '-' else a.col53 end ) col53," +
                                "(case when length(a.col54)=1  and a.col54='0' then '-' else a.col54 end ) col54," +
                                "(case when length(a.col55)=1  and a.col55='0' then '-' else a.col55 end ) col55," +
                                "(case when length(a.col56)=1  and a.col56='0' then '-' else a.col56 end ) col56," +
                                "(case when length(a.col57)=1  and a.col57='0' then '-' else a.col57 end ) col57," +
                                "(case when length(a.col58)=1  and a.col58='0' then '-' else a.col58 end ) col58," +
                                "col59,a.col60, a.col61,a.col62,a.col63,a.col64,a.col65,a.col66,a.col67," +
                                "(case when length(a.col68)=1  and a.col68='0' then '-' else a.col68 end ) col68,a.col69,a.col70, a.col71," +
                                "(case when length(a.col72)=1  and a.col72='0' then '-' else a.col72 end ) col72," +
                                "(case when length((cast(a.col73 as varchar(1000))))=1 and cast(a.col73 as varchar(1000))='0' then '-' else cast(a.col73 as varchar(1000)) end )  col73," +
                                "(case when length((cast(a.col74 as varchar(1000))))=1 and cast(a.col74 as varchar(1000))='0' then '-' else cast(a.col74 as varchar(1000)) end )  col74," +
                                "(case when length((cast(a.col75 as varchar(1000))))=1 and cast(a.col75 as varchar(1000))='0' then '-' else cast(a.col75 as varchar(1000)) end )  col75," +
                                "(case when length((cast(a.col76 as varchar(1000))))=1 and cast(a.col76 as varchar(1000))='0' then '-' else cast(a.col76 as varchar(1000)) end )  col76," +
                                "(case when length((cast(a.col77 as varchar(1000))))=1 and cast(a.col77 as varchar(1000))='0' then '-' else cast(a.col77 as varchar(1000)) end )  col77,a.col78,a.col79,col80,col81," +
                                "b.c_name as Account_Name ,(c.cpname || ' ' || replace(c.cp_mname, '0', '') || ' ' ||" +
                                " replace(c.cp_lname, '0', '')) contact_person,(case when c.addr='0' then '-' else c.addr end) addr, (case when c.cplandno='0000000000' then '' else c.cplandno end) cplandno " +
                                "from kc_tab a inner join clients_mst b on a.col70=b.vch_num and " +
                                "a.client_unit_id=b.client_unit_id and b.type='BCD' left join clients_mst c on a.col71=c.vch_num and a.client_unit_id=c.client_unit_id  and a.col70=c.ref_code  where " +
                                " a.client_id|| a.client_unit_id|| a.vch_num|| to_char(a.vch_date, 'yyyymmdd')|| a.type='" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "EDMODE", "Y");
                                model[0].Col16 = dtt.Rows[0]["vch_num"].ToString();
                                model[0].Col1 = dtt.Rows[0]["client_id"].ToString();
                                model[0].Col2 = dtt.Rows[0]["client_unit_id"].ToString();
                                model[0].Col3 = dtt.Rows[0]["ent_by"].ToString();
                                model[0].Col4 = dtt.Rows[0]["ent_date"].ToString();
                                model[0].Col7 = dtt.Rows[0]["rec_id"].ToString();
                                model[0].Col8 = "(client_id||client_unit_id||vch_num||to_char(vch_date, 'yyyymmdd')|| type) = '" + URL + "'";
                                model[0].Col19 = dtt.Rows[0]["Account_Name"].ToString();
                                model[0].Col17 = dtt.Rows[0]["contact_person"].ToString();
                                model[0].Col20 = dtt.Rows[0]["addr"].ToString();
                                model[0].Col18 = dtt.Rows[0]["cplandno"].ToString();
                                model[0].Col93 = dtt.Rows[0]["col71"].ToString();
                                sgen.SetSession(MyGuid, "S_Account", dtt.Rows[0]["col70"].ToString());
                                model[0].Col81 = dtt.Rows[0]["col70"].ToString();
                                model[0].Col21 = dtt.Rows[0]["col23"].ToString();
                                model[0].Col22 = dtt.Rows[0]["col26"].ToString();
                                model[0].Col23 = dtt.Rows[0]["col29"].ToString();
                                model[0].Col24 = dtt.Rows[0]["col38"].ToString();
                                model[0].Col25 = dtt.Rows[0]["col15"].ToString();
                                model[0].Col26 = dtt.Rows[0]["col31"].ToString();
                                model[0].Col27 = dtt.Rows[0]["col16"].ToString();
                                model[0].Col28 = dtt.Rows[0]["col17"].ToString();
                                model[0].Col29 = dtt.Rows[0]["col18"].ToString();
                                model[0].Col30 = dtt.Rows[0]["col19"].ToString();
                                model[0].Col31 = dtt.Rows[0]["col20"].ToString();
                                model[0].Col32 = dtt.Rows[0]["col21"].ToString();
                                model[0].Col33 = dtt.Rows[0]["date1"].ToString();
                                model[0].Col34 = dtt.Rows[0]["col22"].ToString();
                                model[0].Col35 = dtt.Rows[0]["date29"].ToString();
                                model[0].Col36 = dtt.Rows[0]["col24"].ToString();
                                model[0].Col37 = dtt.Rows[0]["Date2"].ToString();
                                model[0].Col38 = dtt.Rows[0]["col25"].ToString();
                                model[0].Col39 = dtt.Rows[0]["date30"].ToString();
                                model[0].Col40 = dtt.Rows[0]["col27"].ToString();
                                model[0].Col41 = dtt.Rows[0]["date3"].ToString();
                                model[0].Col42 = dtt.Rows[0]["col28"].ToString();
                                model[0].Col43 = dtt.Rows[0]["date31"].ToString();
                                model[0].Col44 = dtt.Rows[0]["col30"].ToString();
                                model[0].Col45 = dtt.Rows[0]["date4"].ToString();
                                model[0].Col46 = dtt.Rows[0]["col37"].ToString();
                                model[0].Col47 = dtt.Rows[0]["date32"].ToString();
                                model[0].Col48 = dtt.Rows[0]["date5"].ToString();
                                model[0].Col49 = dtt.Rows[0]["date6"].ToString();
                                model[0].Col50 = dtt.Rows[0]["date7"].ToString();
                                model[0].Col51 = dtt.Rows[0]["date8"].ToString();
                                model[0].Col52 = dtt.Rows[0]["date9"].ToString();
                                model[0].Col53 = dtt.Rows[0]["date10"].ToString();
                                model[0].Col54 = dtt.Rows[0]["date11"].ToString();
                                model[0].Col55 = dtt.Rows[0]["col39"].ToString();
                                model[0].Col56 = dtt.Rows[0]["Date12"].ToString();
                                model[0].Col57 = dtt.Rows[0]["col40"].ToString();
                                model[0].Col58 = dtt.Rows[0]["date13"].ToString();
                                model[0].Col59 = dtt.Rows[0]["col68"].ToString();
                                model[0].Col60 = dtt.Rows[0]["date33"].ToString();
                                model[0].Col61 = dtt.Rows[0]["col32"].ToString();
                                model[0].Col62 = dtt.Rows[0]["date14"].ToString();
                                model[0].Col63 = dtt.Rows[0]["col33"].ToString();
                                model[0].Col64 = dtt.Rows[0]["date15"].ToString();
                                model[0].Col65 = dtt.Rows[0]["col34"].ToString();
                                model[0].Col66 = dtt.Rows[0]["date34"].ToString();
                                model[0].Col80 = dtt.Rows[0]["col35"].ToString();
                                model[0].Col67 = dtt.Rows[0]["date16"].ToString();
                                model[0].Col68 = dtt.Rows[0]["date17"].ToString();
                                model[0].Col69 = dtt.Rows[0]["date18"].ToString();
                                model[0].Col70 = dtt.Rows[0]["date19"].ToString();
                                model[0].Col71 = dtt.Rows[0]["date20"].ToString();
                                model[0].Col72 = dtt.Rows[0]["date21"].ToString();
                                model[0].Col73 = dtt.Rows[0]["date22"].ToString();
                                model[0].Col74 = dtt.Rows[0]["date23"].ToString();
                                model[0].Col75 = dtt.Rows[0]["date24"].ToString();
                                model[0].Col76 = dtt.Rows[0]["date25"].ToString();
                                model[0].Col77 = dtt.Rows[0]["date26"].ToString();
                                model[0].Col78 = dtt.Rows[0]["date27"].ToString();
                                model[0].Col79 = dtt.Rows[0]["date28"].ToString();
                                model[0].Chk1 = dtt.Rows[0]["col42"].ToString() == "Y" ? true : false;
                                model[0].Chk2 = dtt.Rows[0]["col43"].ToString() == "Y" ? true : false;
                                model[0].Chk3 = dtt.Rows[0]["col44"].ToString() == "Y" ? true : false;
                                model[0].Chk4 = dtt.Rows[0]["col45"].ToString() == "Y" ? true : false;
                                model[0].Chk5 = dtt.Rows[0]["col46"].ToString() == "Y" ? true : false;
                                model[0].Chk6 = dtt.Rows[0]["col47"].ToString() == "Y" ? true : false;
                                model[0].Chk7 = dtt.Rows[0]["col1"].ToString() == "Y" ? true : false;
                                model[0].Chk8 = dtt.Rows[0]["col2"].ToString() == "Y" ? true : false;
                                model[0].Chk9 = dtt.Rows[0]["col3"].ToString() == "Y" ? true : false;
                                model[0].Chk10 = dtt.Rows[0]["col4"].ToString() == "Y" ? true : false;
                                model[0].Chk11 = dtt.Rows[0]["col5"].ToString() == "Y" ? true : false;
                                model[0].Chk12 = dtt.Rows[0]["col6"].ToString() == "Y" ? true : false;
                                model[0].Chk13 = dtt.Rows[0]["col7"].ToString() == "Y" ? true : false;
                                model[0].Chk14 = dtt.Rows[0]["col8"].ToString() == "Y" ? true : false;
                                model[0].Chk15 = dtt.Rows[0]["col9"].ToString() == "Y" ? true : false;
                                model[0].Chk16 = dtt.Rows[0]["col10"].ToString() == "Y" ? true : false;
                                model[0].Chk17 = dtt.Rows[0]["col11"].ToString() == "Y" ? true : false;
                                model[0].Chk18 = dtt.Rows[0]["col12"].ToString() == "Y" ? true : false;
                                model[0].Chk19 = dtt.Rows[0]["col13"].ToString() == "Y" ? true : false;
                                model[0].Chk20 = dtt.Rows[0]["col14"].ToString() == "Y" ? true : false;
                                model[0].Col82 = dtt.Rows[0]["Col49"].ToString();
                                model[0].Col91 = dtt.Rows[0]["Col50"].ToString();
                                model[0].Col84 = dtt.Rows[0]["Col51"].ToString();
                                model[0].Col106 = dtt.Rows[0]["Col52"].ToString();
                                model[0].Col107 = dtt.Rows[0]["Col53"].ToString();
                                model[0].Col108 = dtt.Rows[0]["Col54"].ToString();
                                model[0].Col88 = dtt.Rows[0]["Col55"].ToString();
                                model[0].Col89 = dtt.Rows[0]["Col56"].ToString();
                                model[0].Col90 = dtt.Rows[0]["Col57"].ToString();
                                model[0].Chk21 = dtt.Rows[0]["col59"].ToString() == "Y" ? true : false;
                                model[0].Chk22 = dtt.Rows[0]["col60"].ToString() == "Y" ? true : false;
                                model[0].Chk23 = dtt.Rows[0]["col61"].ToString() == "Y" ? true : false;
                                model[0].Chk24 = dtt.Rows[0]["col62"].ToString() == "Y" ? true : false;
                                model[0].Chk25 = dtt.Rows[0]["col63"].ToString() == "Y" ? true : false;
                                model[0].Chk26 = dtt.Rows[0]["col64"].ToString() == "Y" ? true : false;
                                model[0].Chk27 = dtt.Rows[0]["col65"].ToString() == "Y" ? true : false;
                                model[0].Chk28 = dtt.Rows[0]["col66"].ToString() == "Y" ? true : false;
                                model[0].Chk29 = dtt.Rows[0]["col67"].ToString() == "Y" ? true : false;
                                model[0].Col92 = dtt.Rows[0]["Col69"].ToString();
                                model[0].Col13 = "Update";
                                model[0].Col100 = "Update & New";
                                model[0].Col121 = "U";
                                model[0].Col122 = "<u>U</u>pdate";
                                model[0].Col123 = "Update & Ne<u>w</u>";
                                model[0].Col99 = dtt.Rows[0]["Date35"].ToString();
                                model[0].Col101 = dtt.Rows[0]["Date36"].ToString();
                                model[0].Col102 = dtt.Rows[0]["Date37"].ToString();
                                model[0].Col103 = dtt.Rows[0]["Date38"].ToString();
                                model[0].Col104 = dtt.Rows[0]["Date39"].ToString();
                                model[0].Col105 = dtt.Rows[0]["Date40"].ToString();
                                model[0].Chk35 = dtt.Rows[0]["col78"].ToString() == "Y" ? true : false;
                                model[0].Chk36 = dtt.Rows[0]["col79"].ToString() == "Y" ? true : false;
                                model[0].Chk37 = dtt.Rows[0]["col80"].ToString() == "Y" ? true : false;
                                model[0].Chk38 = dtt.Rows[0]["col81"].ToString() == "Y" ? true : false;
                                #region visit schedule
                                mq = "select a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date, 'yyyymmdd')|| type as fstr," +
                                    " a.vch_num,a.rec_id, a.client_id,a.client_unit_id,a.ent_by," +
                               " to_char(convert_tz(a.ent_date, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') ent_date," +
                               "a.col73 sup_dis,a.col49 sup,a.col26 as person_met,a.col50  , to_char(convert_tz(a.date19, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') date19" +
                               " from kc_tab a where a.vch_num='" + model[0].Col16 + "' and a.type='SCH' and a.client_unit_id='" + unitid_mst + "' ";
                                DataTable dt1 = new DataTable();
                                dt1 = sgen.getdata(userCode, mq);
                                if (dt1.Rows.Count > 0)
                                {
                                    model[0].Col83 = "(client_id||client_unit_id||vch_num||to_char(vch_date, 'yyyymmdd')|| type) = '" + dt1.Rows[0]["fstr"].ToString() + "'";
                                    model[0].dt1 = new DataTable();
                                    model[0].dt1 = ((DataTable)sgen.GetSession(MyGuid, "RSCH_DT")).Clone();
                                    for (int i = 0; i < dt1.Rows.Count; i++)
                                    {
                                        DataRow dr = model[0].dt1.NewRow();
                                        dr["SNo"] = i + 1;
                                        dr["SUPERVISOR_DISCUSSION"] = dt1.Rows[i]["sup_dis"].ToString();
                                        dr["SUPERVISIOR_VISIT_BY"] = dt1.Rows[i]["sup"].ToString();
                                        dr["SMS"] = dt1.Rows[0]["col50"].ToString() == "Y" ? true : false;
                                        dr["SUPERVISIOR_VISIT_DATE"] = dt1.Rows[i]["Date19"].ToString();
                                        dr["Person_Met_With"] = dt1.Rows[i]["person_met"].ToString();
                                        model[0].dt1.Rows.Add(dr);
                                    }
                                    model[0].dt1.AcceptChanges();
                                }
                                #endregion
                                #region attachment
                                DataTable dtf = new DataTable();
                                dtf = sgen.getdata(userCode, "select client_id||client_unit_id||vch_num||to_char(vch_date,'yyyymmdd')||type as fstr, rec_id,file_name,file_path,col1,col2,description,Col3 from file_tab where vch_num='" + dtt.Rows[0]["vch_num"].ToString() + "' and type in " +
                                    "('" + tm.Col12 + "','DD" + model[0].Col12 + "') and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "'");
                                List<Tmodelmain> ltmf = new List<Tmodelmain>();
                                string des = "", title = "", f_recid = "";
                                foreach (DataRow drf in dtf.Rows)
                                {
                                    Tmodelmain tmf = new Tmodelmain();
                                    tmf.Col4 = drf["file_path"].ToString();
                                    tmf.Col1 = drf["file_name"].ToString();
                                    tmf.Col2 = drf["col1"].ToString();
                                    tmf.Col3 = drf["rec_id"].ToString();
                                    tmf.Col97 = drf["rec_id"].ToString();
                                    tmf.Col5 = drf["description"].ToString();
                                    des = drf["description"].ToString();
                                    title = drf["Col3"].ToString();
                                    tmf.Col6 = drf["col3"].ToString();
                                    tmf.Col7 = drf["col2"].ToString();
                                    model[0].Col98 = "(client_id||client_unit_id|| vch_num|| to_char(vch_date, 'yyyymmdd')|| type) = '" + drf["fstr"].ToString() + "'";
                                    ltmf.Add(tmf);
                                }
                                model[0].LTM1 = ltmf;
                                //model[0].Col96 = des;
                                //model[0].Col95 = title;
                                #endregion
                            }
                            break;
                        case "FDEL":
                            string fid = sgen.GetSession(MyGuid, "delid").ToString();
                            res = sgen.execute_cmd(userCode, "Delete from file_tab WHERE rec_id='" + fid + "'  and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "'");
                            sgen.SetSession(MyGuid, "delid", null);
                            if (res)
                            {
                                var LTM = model[0].LTM1;
                                for (int d = 0; d < LTM.Count; d++)
                                {
                                    var id = LTM[d].Col3;
                                    if (id == fid) { model[0].LTM1.RemoveAt(d); }
                                }
                            }
                            break;
                    }
                    break;
                #endregion
                #region good_wishes
                case "good_wishes":
                    switch (btnval.ToUpper())
                    {
                        case "PRV":
                            Make_query("good_wishes", "Previous Message List Detail", "PRV", "0", URL, "");
                            ViewBag.scripCall = "callFoo('Previous Message List Detail');";
                            break;
                    }
                    break;
                #endregion
                #region track_rpt
                case "track_rpt":
                    switch (btnval.ToUpper())
                    {
                        case "TRK":
                            string[] trackdata = URL.Split(',');
                            // reena 2 line done
                            mq = "select distinct  Col1 as latitute,Col2 as longitude,Col3 as col3,Col4 as  col4,Col5 as created_datetime,created_dt,'0' as distance from (Select lat as Col1," +
                                        " lang as Col2, provider as Col3, '-' as Col4, to_char(created_date, '" + sgen.Getsqldatetimeformat() + "') as Col5 ,to_char(created_date,'" + sgen.Getsqldateformat() + "') as created_dt  from tracks Where type = 'TRK' and emp_code =" +
                                        " '" + trackdata[1] + "' and to_date(to_char(created_date, 'ddmmyyyy'), 'ddmmyyyy') BETWEEN TO_DATE('" + trackdata[0] + "','dd-MM-yyyy')  AND " +
                                        "TO_DATE('" + trackdata[0] + "','dd-MM-yyyy')  ) a ORDER BY col5 asc ";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "track_map", dtt);
                                ViewBag.scripCall = ViewBag.scripCall + "loaddata();";
                            }
                            break;
                    }
                    break;
                #endregion
                #region s_hover
                case "s_hover":
                    switch (btnval.ToUpper())
                    {
                        case "PARTY":
                            {
                                mq = "select b.vch_num,   b.c_name as Site_Name,c.cpname ,b.cplandno as Contactno,b.addr from clients_mst b " +
                                    "inner join kc_tab a on a.col70=b.vch_num and a.type = 'SVR' and find_in_set(b.client_unit_id, a.client_unit_id) = 1 left join clients_mst c on c.ref_code = a.col70 and " +
                                    "c.type = 'BCD' and find_in_set(c.client_unit_id, a.client_unit_id) = 1" +
                                    " where (b.client_id||b.client_unit_id||b.vch_num||to_char(b.vch_date,'yyyymmdd')||b.type)='" + URL + "'";
                                dtt = sgen.getdata(userCode, mq);
                                if (dtt.Rows.Count > 0)
                                {
                                    model[0].Col17 = dtt.Rows[0]["vch_num"].ToString();
                                    model[0].Col18 = dtt.Rows[0]["Site_Name"].ToString();
                                    model[0].Col19 = dtt.Rows[0]["addr"].ToString();
                                    model[0].Col20 = dtt.Rows[0]["Contactno"].ToString();
                                    model[0].Col43 = dtt.Rows[0]["cpname"].ToString();
                                }
                            }
                            break;
                        case "EDIT":
                            {
                                mq = "select a.vch_num,a.client_id,a.client_unit_id,a.ent_by,a.ent_date,a.rec_id, a.col41, a.col42,a.col11,a.col43,a.col44,a.col45,a.col46,a.col12,a.col13,a.col14,a.col15,a.col16,a.col17," +
                                    "a.col18,a.col48, b.vch_num as acc_id, a.col19,   b.c_name as Site_Name ,c.cpname,b.cplandno as Contactno,b.addr ," +
                                    " b.addr, to_char(a.date1,'" + sgen.Getsqldateformat() + "') date1" +
                                    ", to_char(a.date2,'" + sgen.Getsqldateformat() + "') date2" +
                                    ", to_char(a.date3,'" + sgen.Getsqldateformat() + "') date3" +
                                    ", to_char(a.date4,'" + sgen.Getsqldateformat() + "') date4" +
                                    ", to_char(a.date5,'" + sgen.Getsqldateformat() + "') date5" +
                                    ", a.col21  from kc_tab a inner join clients_mst b" +
                                    " on b.vch_num=a.col70 and b.type='BCD' and find_in_set(b.client_id,a.client_id) =1 and find_in_set(b.client_unit_id,a.client_unit_id) =1 inner join clients_mst c" +
                                    " on c.ref_code=a.col70 and c.type='BCD' and find_in_set(c.client_id,a.client_id) =1 and find_in_set(c.client_unit_id,a.client_unit_id) =1 " +
                                    "where (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type)='" + URL + "'";
                                dtt = sgen.getdata(userCode, mq);
                                if (dtt.Rows.Count > 0)
                                {
                                    sgen.SetSession(MyGuid, "EDMODE", "Y");
                                    model[0].Col16 = dtt.Rows[0]["vch_num"].ToString();
                                    model[0].Col1 = dtt.Rows[0]["client_id"].ToString();
                                    model[0].Col2 = dtt.Rows[0]["client_unit_id"].ToString();
                                    model[0].Col3 = dtt.Rows[0]["ent_by"].ToString();
                                    model[0].Col4 = dtt.Rows[0]["ent_date"].ToString();
                                    model[0].Col7 = dtt.Rows[0]["rec_id"].ToString();
                                    model[0].Col8 = "(client_id||client_unit_id||vch_num||to_char(vch_date, 'yyyymmdd')|| type) = '" + URL + "'";
                                    model[0].Col16 = dtt.Rows[0]["vch_num"].ToString();
                                    model[0].Col17 = dtt.Rows[0]["acc_id"].ToString();
                                    model[0].Col18 = dtt.Rows[0]["Site_Name"].ToString();
                                    model[0].Col19 = dtt.Rows[0]["addr"].ToString();
                                    model[0].Col20 = dtt.Rows[0]["Contactno"].ToString();
                                    model[0].Col43 = dtt.Rows[0]["cpname"].ToString();
                                    model[0].Col42 = dtt.Rows[0]["date1"].ToString();
                                    model[0].Col21 = dtt.Rows[0]["date2"].ToString();
                                    model[0].Col22 = dtt.Rows[0]["date3"].ToString();
                                    model[0].Col23 = dtt.Rows[0]["col21"].ToString();
                                    model[0].Col24 = dtt.Rows[0]["col42"].ToString();
                                    model[0].Col25 = dtt.Rows[0]["col11"].ToString();
                                    model[0].Col26 = dtt.Rows[0]["col43"].ToString();
                                    model[0].Col27 = dtt.Rows[0]["col12"].ToString();
                                    model[0].Col28 = dtt.Rows[0]["col44"].ToString();
                                    model[0].Col29 = dtt.Rows[0]["col13"].ToString();
                                    model[0].Col30 = dtt.Rows[0]["col45"].ToString();
                                    model[0].Col31 = dtt.Rows[0]["col14"].ToString();
                                    model[0].Col32 = dtt.Rows[0]["col46"].ToString();
                                    model[0].Col33 = dtt.Rows[0]["col15"].ToString();
                                    model[0].Col34 = dtt.Rows[0]["col41"].ToString();
                                    model[0].Col35 = dtt.Rows[0]["Date4"].ToString();
                                    model[0].Col36 = dtt.Rows[0]["col16"].ToString();
                                    model[0].Col37 = dtt.Rows[0]["Date5"].ToString();
                                    model[0].Col38 = dtt.Rows[0]["col17"].ToString();
                                    model[0].Col39 = dtt.Rows[0]["col18"].ToString();
                                    model[0].Col40 = dtt.Rows[0]["col48"].ToString();
                                    model[0].Col41 = dtt.Rows[0]["col19"].ToString();
                                    model[0].Col13 = "Update";
                                    model[0].Col100 = "Update & New";
                                }
                            }
                            break;
                        case "PRINT":
                            mq = "select a.vch_num,a.client_id,a.client_unit_id,a.ent_by,a.ent_date,a.rec_id, " +
                            "(case when length((cast(a.col41 as varchar(1000))))=1 and cast(a.col41 as varchar(1000))='0' then '- ' else cast(a.col41 as varchar(1000)) end ) col41," +
                            " (case when length(a.col42)=1  and a.col42='0' then '' else a.col42 end ) col42," +
                            "(case when length(a.col11)=1  and a.col11='0' then '' else a.col11 end ) col11," +
                            "(case when length(a.col43)=1  and a.col43='0' then '' else a.col43 end ) col43," +
                            "(case when length(a.col44)=1  and a.col44='0' then '' else a.col44 end ) col44," +
                            "(case when length(a.col45)=1  and a.col45='0' then '' else a.col45 end ) col45," +
                            "(case when length(a.col46)=1  and a.col46='0' then '' else a.col46 end )col46," +
                            "(case when length(a.col12)=1  and a.col12='0' then '' else a.col12 end ) col12," +
                            "(case when length(a.col13)=1  and a.col13='0' then '' else a.col13 end ) col13," +
                            "(case when length(a.col14)=1  and a.col14='0' then '' else a.col14 end ) col14," +
                            "(case when length(a.col15)=1  and a.col15='0' then '' else a.col15 end ) col15," +
                            "(case when length(a.col16)=1  and a.col16='0' then '' else a.col16 end ) col16," +
                            "(case when length(a.col17)=1  and a.col17='0' then '' else a.col17 end ) col17," +
                             "(case when length(a.col18)=1  and a.col18='0' then '' else a.col18 end ) col18," +
                             "(case when length((cast(a.col48 as varchar(1000))))=1 and cast(a.col48 as varchar(1000))='0' then ' ' else cast(a.col48 as varchar(1000)) end ) col48," +
                             " b.vch_num as acc_id, a.vch_num,   b.c_name as Site_Name ,c.cpname,b.cplandno as Contactno,b.addr ," +
                                " b.c_name as Site_Name ,b.addr, " +
                                "  (case when to_char(a.date1, '" + sgen.Getsqldateformat() + "') = '01/01/1900' then '' else to_char(a.date1, '" + sgen.Getsqldateformat() + "') end )  date1" +
                                ", (case when to_char(a.date2, '" + sgen.Getsqldateformat() + "') = '01/01/1900' then '' else to_char(a.date2, '" + sgen.Getsqldateformat() + "') end ) date2" +
                                ", (case when to_char(a.date3, '" + sgen.Getsqldateformat() + "') = '01/01/1900' then '' else to_char(a.date3, '" + sgen.Getsqldateformat() + "') end ) date3" +
                                ", (case when to_char(a.date4, '" + sgen.Getsqldateformat() + "') = '01/01/1900' then '' else to_char(a.date4, '" + sgen.Getsqldateformat() + "') end ) date4" +
                                ", (case when to_char(a.date5, '" + sgen.Getsqldateformat() + "') = '01/01/1900' then '' else to_char(a.date5, '" + sgen.Getsqldateformat() + "') end ) date5" +
                                ", (case when length(a.col21)=1  and a.col21='0' then '' else a.col21 end ) col21  from kc_tab a inner join clients_mst b" +
                                " on b.vch_num=a.col70 and b.type='BCD' and find_in_set(b.client_id,a.client_id) =1 and find_in_set(b.client_unit_id,a.client_unit_id) =1 inner join clients_mst c" +
                                " on c.ref_code=a.col70 and c.type='BCD' and find_in_set(c.client_id,a.client_id) =1 and find_in_set(c.client_unit_id,a.client_unit_id) =1 " +
                                "where (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type)='" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                sgen.open_report_bydt_xml(userCode, dtt, "s_hover", "Site HandOver");
                                ViewBag.scripCall += "showRptnew('Site Handover');";
                                //ViewBag.scripCall = "OpenSingle('../../../../../erp/schoolReports_Rpts/Filter_Report_xml.aspx','95%','900px','Reports');";
                            }
                            break;
                    }
                    break;
                #endregion
                #region bulk_acc
                case "bulk_acc":
                    switch (btnval.ToUpper())
                    {
                        case "SELCTPAGE":
                            //mq = "select * from (select 'BCD_ADTL' AS Page_code, '01' as ID ,'ACCOUNT DETAIL' as Page_list,'CUSTOMER DETAIL' as param5 from dual union all" +
                            //    " select 'BCD_EXPTY' AS Page_code,'02' as ID ,'EXPORT PARTY DETAIL' as Page_list ,'EXPORT PARTY' as param5 from dual union all " +
                            //    "select 'PVD_VENDTL' AS Page_code,'21' as ID ,'NEW VENDOR DETAIL' as Page_list ,'VENDOR DETAIL' as param5 from dual union all " +
                            //    "select 'PVD_IMPVNDR' AS Page_code,'22' as ID,'NEW IMPORT VENDOR' as Page_list ,'IMPORT PARTY' as param5 from dual union all " +
                            //    "select 'PVD_PUBLISHR' AS Page_code, '23' as ID ,'NEW PUBLISHER' as Page_list  ,'PUBLISHER' as param5 from dual union all " +
                            //    "select 'BCD_CLIENT' AS Page_code, '01' as ID ,'NEW ACCOUNT DETAIL' as Page_list  ,'NEW CLIENT' as param5 from dual union all " +
                            //    "select 'PDA_PRSPDTA' AS Page_code, '21' as ID ,'PROSPECT DATA' as Page_list ,'PROSPECT DATA' as param5  from dual) a " +
                            //    "where a.Page_code = '" + URL + "'";

                            mq = "select * from (select 'BCD' Type, 'BCD_ADTL' AS Page_code, '303' as ID ,'ACCOUNT DETAIL' as Page_list,'CUSTOMER DETAIL' as param5 from dual union all" +
                              " select 'BCD' Type, 'BCD_VENDTL' AS Page_code,'203' as ID ,'NEW VENDOR DETAIL' as Page_list ,'VENDOR DETAIL' as param5 from dual union all " +
                              " select 'BCD' Type, 'BCD_PUBLISHR' AS Page_code, '203' as ID ,'NEW PUBLISHER' as Page_list  ,'PUBLISHER' as param5 from dual union all " +
                              " select 'BCD' Type, 'BCD_CLIENT' AS Page_code, '303' as ID ,'NEW ACCOUNT DETAIL' as Page_list  ,'NEW CLIENT' as param5 from dual union all " +
                              " select 'PRO' Type, 'PRO_PRSPDTA' AS Page_code, '909' as ID ,'PROSPECT DATA' as Page_list ,'PROSPECT DATA' as param5  from dual) a " +
                              "where a.Page_code = '" + URL + "'";

                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                model[0].Col9 += "-" + dtt.Rows[0]["Page_list"].ToString();
                                model[0].Col17 = dtt.Rows[0]["param5"].ToString();
                                model[0].Col18 = dtt.Rows[0]["ID"].ToString();
                                model[0].Col12 = dtt.Rows[0]["Type"].ToString();
                                ViewBag.vsave = "disabled='disabled'";
                            }
                            break;
                    }
                    break;
                #endregion
                #region s_status
                case "s_status":
                    switch (btnval.ToUpper())
                    {
                        case "VIEW":
                            {
                            }
                            break;
                    }
                    break;
                #endregion
                #region Transaction Request
                case "trans_req":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "VIEW":
                        case "PURCHASE":
                            mq = "select a.rdp_type, a.s_name_pur,a.s_type_pur,a.s_opt_pur,a.s_name_rdp,a.s_type_rdp,a.s_opt_rdp,a.sname_frm,a.stype_frm,sopt_frm,sname_to,stype_to,sopt_to," +
                                "a.ispur,a.isrdp,a.isswt, a.rec_id,a.swt_type,a.inv_opt,a.inv_amt," +
                                "(case when to_char(a.inv_date, '" + sgen.Getsqldateformat() + "') = '01/01/1900' then '' else to_char(a.inv_date, '" + sgen.Getsqldateformat() + "') end ) inv_date,a.pur_rmk,a.rdp_folio,rdp_amt," +
                                "(case when to_char(a.rdp_date, '" + sgen.Getsqldateformat() + "') = '01/01/1900' then '' else to_char(a.rdp_date, '" + sgen.Getsqldateformat() + "') end ) rdp_date,a.rdp_rmk,a.swt_folio,a.swt_amt," +
                                "(case when to_char(a.swt_date, '" + sgen.Getsqldateformat() + "') = '01/01/1900' then '' else to_char(a.swt_date, '" + sgen.Getsqldateformat() + "') end ) swt_date,a.swt_rmk, d.master_id pur_sch_id," +
                                "d.master_name pur_Sch_Name,e.master_id as pur_sch_type_id,e.master_name as pur_sch_type,f.master_id red_sch_id,f.master_name red_Sch_Name,g.master_id red_sch_type_id,g.master_name red_sch_type," +
                                "h.master_id fswt_sch_id,h.master_name fswt_Sch_Name,i.master_id as fswt_sch_type_id,i.master_name as fswt_sch_type," +
                                "j.master_id tswt_sch_id,j.master_name tswt_Sch_Name,k.master_id as tswt_sch_type_id,i.master_name as tswt_sch_type," +
                                " a.p_acc_id,a.acc_id, a.vch_num,a.ent_by,a.ent_date,a.client_id,a.client_unit_id ,c.c_name as Parent_Account," +
                                " b.c_name as Account_Name,(case when b.panno='AAAAA0000A' then '-' else b.panno end) panno ,(case when  b.cpemail='ab@ab.ab' then '-' else b.cpemail end ) as Email_ID ,(case when b.cpcont='0000000000' then '-' else b.cpcont end) as Contact_No," +
                                "((replace(b.cpname, '0', '-') || ' ' || replace(b.cp_mname, '0', '') || ' ' || replace(b.cp_lname, '0', ''))) " +
                                "contact_person from trans_req a inner join  clients_mst b on a.acc_id = b.vch_num  and " +
                                "find_in_set(b.client_unit_id,'" + unitid_mst + "')= 1  left join clients_mst c on a.p_acc_id = c.vch_num " +
                                " and a.client_unit_id = c.client_unit_id and b.type = 'BCD'" +
                                " left join master_setting d on d.master_id=a.pur_sch and d.type ='SHN' and find_in_set(d.client_unit_id,'" + unitid_mst + "')= 1 " +
                                " left join master_setting e on d.classid=e.master_id and e.type='SCH' and find_in_set(e.client_unit_id,'" + unitid_mst + "')= 1" +
                                 " left join master_setting f on f.master_id=a.rdp_sch and f.type ='SHN' and find_in_set(f.client_unit_id,'" + unitid_mst + "')= 1 " +
                                " left join master_setting g on f.classid=g.master_id and g.type='SCH' and find_in_set(g.client_unit_id,'" + unitid_mst + "')= 1" +
                                " left join master_setting h on h.master_id=a.frm_sch and h.type ='SHN' and find_in_set(h.client_unit_id,'" + unitid_mst + "')= 1 " +
                                " left join master_setting i on h.classid=i.master_id and i.type='SCH' and find_in_set(i.client_unit_id,'" + unitid_mst + "')= 1" +
                                 " left join master_setting j on j.master_id=a.frm_sch and j.type ='SHN' and find_in_set(j.client_unit_id,'" + unitid_mst + "')= 1 " +
                                " left join master_setting k on j.classid=k.master_id and k.type='SCH' and find_in_set(k.client_unit_id,'" + unitid_mst + "')= 1" +
                                " where (a.client_id || a.client_unit_id || a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.type) = '" + URL + "' ";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                model[0].Col13 = "Update";
                                model[0].Col100 = "Update & New";
                                model[0].Col121 = "U";
                                model[0].Col122 = "<u>U</u>pdate";
                                model[0].Col123 = "Update & Ne<u>w</u>";
                                sgen.SetSession(MyGuid, "EDMODE", "Y");
                                model[0].Col1 = dtt.Rows[0]["client_id"].ToString();
                                model[0].Col2 = dtt.Rows[0]["client_unit_id"].ToString();
                                model[0].Col3 = dtt.Rows[0]["ent_by"].ToString();
                                model[0].Col4 = dtt.Rows[0]["ent_date"].ToString();
                                model[0].Col7 = dtt.Rows[0]["rec_id"].ToString();
                                model[0].Col8 = "(client_id||client_unit_id||vch_num||to_char(vch_date, 'yyyymmdd')|| type) = '" + URL + "'";
                                model[0].Col16 = dtt.Rows[0]["vch_num"].ToString();
                                model[0].Col17 = dtt.Rows[0]["Parent_Account"].ToString();
                                model[0].Col18 = dtt.Rows[0]["p_acc_id"].ToString();
                                model[0].Col19 = dtt.Rows[0]["Account_Name"].ToString();
                                model[0].Col20 = dtt.Rows[0]["acc_id"].ToString();
                                model[0].Col21 = dtt.Rows[0]["panno"].ToString();
                                model[0].Col22 = dtt.Rows[0]["Email_ID"].ToString();
                                model[0].Col23 = dtt.Rows[0]["Contact_No"].ToString();
                                model[0].Col24 = dtt.Rows[0]["contact_person"].ToString();
                                model[0].Col25 = dtt.Rows[0]["pur_Sch_Name"].ToString();
                                model[0].Col26 = dtt.Rows[0]["pur_sch_id"].ToString();
                                model[0].Col27 = dtt.Rows[0]["pur_sch_type"].ToString();
                                model[0].Col28 = dtt.Rows[0]["inv_amt"].ToString();
                                model[0].Col29 = dtt.Rows[0]["inv_date"].ToString();
                                model[0].Col30 = dtt.Rows[0]["pur_rmk"].ToString();
                                model[0].Col59 = dtt.Rows[0]["pur_sch_type_id"].ToString();
                                model[0].Col34 = dtt.Rows[0]["red_Sch_Name"].ToString();
                                model[0].Col35 = dtt.Rows[0]["red_sch_id"].ToString();
                                model[0].Col36 = dtt.Rows[0]["red_sch_type"].ToString();
                                model[0].Col37 = dtt.Rows[0]["red_sch_type_id"].ToString();
                                model[0].Col38 = dtt.Rows[0]["rdp_folio"].ToString();
                                model[0].Col39 = dtt.Rows[0]["rdp_amt"].ToString();
                                model[0].Col40 = dtt.Rows[0]["rdp_date"].ToString();
                                model[0].Col41 = dtt.Rows[0]["rdp_rmk"].ToString();
                                model[0].Col45 = dtt.Rows[0]["fswt_Sch_Name"].ToString();
                                model[0].Col46 = dtt.Rows[0]["fswt_sch_id"].ToString();
                                model[0].Col47 = dtt.Rows[0]["fswt_sch_type"].ToString();
                                model[0].Col48 = dtt.Rows[0]["fswt_sch_type_id"].ToString();
                                model[0].Col49 = dtt.Rows[0]["tswt_Sch_Name"].ToString();
                                model[0].Col50 = dtt.Rows[0]["tswt_sch_id"].ToString();
                                model[0].Col51 = dtt.Rows[0]["tswt_sch_type"].ToString();
                                model[0].Col52 = dtt.Rows[0]["swt_folio"].ToString();
                                //model[0].Col53 = dtt.Rows[0]["swt_folio"].ToString();
                                model[0].Col53 = dtt.Rows[0]["swt_amt"].ToString();
                                model[0].Col54 = dtt.Rows[0]["swt_date"].ToString();
                                model[0].Col55 = dtt.Rows[0]["swt_rmk"].ToString();
                                model[0].Col60 = dtt.Rows[0]["tswt_sch_type_id"].ToString();
                                model[0].Chk1 = dtt.Rows[0]["ispur"].ToString() == "Y" ? true : false;
                                model[0].Chk2 = dtt.Rows[0]["isrdp"].ToString() == "Y" ? true : false;
                                model[0].Chk3 = dtt.Rows[0]["isswt"].ToString() == "Y" ? true : false;
                                model[0].Col61 = dtt.Rows[0]["s_name_pur"].ToString();
                                model[0].Col62 = dtt.Rows[0]["s_type_pur"].ToString();
                                model[0].Col63 = dtt.Rows[0]["s_opt_pur"].ToString();
                                model[0].Col64 = dtt.Rows[0]["s_name_rdp"].ToString();
                                model[0].Col65 = dtt.Rows[0]["s_type_rdp"].ToString();
                                model[0].Col66 = dtt.Rows[0]["s_opt_rdp"].ToString();
                                model[0].Col67 = dtt.Rows[0]["sname_frm"].ToString();
                                model[0].Col68 = dtt.Rows[0]["stype_frm"].ToString();
                                model[0].Col69 = dtt.Rows[0]["sopt_frm"].ToString();
                                model[0].Col70 = dtt.Rows[0]["sname_to"].ToString();
                                model[0].Col71 = dtt.Rows[0]["stype_to"].ToString();
                                model[0].Col72 = dtt.Rows[0]["sopt_to"].ToString();
                                #region investment option 1
                                mod1.Add(new SelectListItem { Text = "SIP", Value = "SIP" });
                                mod1.Add(new SelectListItem { Text = "Lumpsum", Value = "Lumpsum" });
                                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
                                #endregion
                                #region Switch Type
                                TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2 = cmd_Fun.switchtype(userCode, unitid_mst);
                                #endregion
                                #region Redemption Type
                                TempData[MyGuid + "_TList3"] = model[0].TList3 = mod3 = cmd_Fun.rdmptype(userCode, unitid_mst);
                                #endregion
                                String[] L1 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["inv_opt"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems1 = L1;
                                String[] L2 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["swt_type"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems2 = L2;
                                String[] L3 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["rdp_type"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems3 = L3;
                                #region attachment
                                DataTable dtf = new DataTable();
                                #region Purchase
                                dtf = sgen.getdata(userCode, "select client_id||client_unit_id||vch_num||to_char(vch_date,'yyyymmdd')||type as fstr, rec_id,file_name,file_path,col1,col2,description,Col3 from file_tab where vch_num='" + dtt.Rows[0]["vch_num"].ToString() + "' and type in " +
                                    "('" + tm.Col12 + "','DD" + model[0].Col12 + "') and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "' and col1='PUR'");
                                List<Tmodelmain> ltmf = new List<Tmodelmain>();
                                string des = "", title = "", f_recid = "";
                                if (dtf.Rows.Count > 0)
                                {
                                    model[0].Col31 = dtf.Rows[0]["col3"].ToString();
                                    model[0].Col32 = dtf.Rows[0]["description"].ToString();
                                    foreach (DataRow drf in dtf.Rows)
                                    {
                                        Tmodelmain tmf = new Tmodelmain();
                                        tmf.Col4 = drf["file_path"].ToString();
                                        tmf.Col1 = drf["file_name"].ToString();
                                        tmf.Col2 = drf["col1"].ToString();
                                        tmf.Col3 = drf["rec_id"].ToString();
                                        tmf.Col97 = drf["rec_id"].ToString();
                                        tmf.Col5 = drf["description"].ToString();
                                        des = drf["description"].ToString();
                                        title = drf["Col3"].ToString();
                                        tmf.Col6 = drf["col3"].ToString();
                                        tmf.Col7 = drf["col2"].ToString();
                                        //model[0].Col98 = "(client_id||client_unit_id|| vch_num|| to_char(vch_date, 'yyyymmdd')|| type) = '" + drf["fstr"].ToString() + "'";
                                        ltmf.Add(tmf);
                                    }
                                }
                                model[0].LTM1 = ltmf;
                                #endregion
                                #region redemptions
                                dtf = sgen.getdata(userCode, "select client_id||client_unit_id||vch_num||to_char(vch_date,'yyyymmdd')||type as fstr, rec_id,file_name,file_path,col1,col2,description,Col3 from file_tab where vch_num='" + dtt.Rows[0]["vch_num"].ToString() + "' and type in " +
                                    "('" + tm.Col12 + "','DD" + model[0].Col12 + "') and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "' and col1='REDMP'");
                                ltmf = new List<Tmodelmain>();
                                if (dtf.Rows.Count > 0)
                                {
                                    model[0].Col42 = dtf.Rows[0]["col3"].ToString();
                                    model[0].Col43 = dtf.Rows[0]["description"].ToString();
                                    foreach (DataRow drf in dtf.Rows)
                                    {
                                        Tmodelmain tmf = new Tmodelmain();
                                        tmf.Col4 = drf["file_path"].ToString();
                                        tmf.Col1 = drf["file_name"].ToString();
                                        tmf.Col2 = drf["col1"].ToString();
                                        tmf.Col3 = drf["rec_id"].ToString();
                                        tmf.Col97 = drf["rec_id"].ToString();
                                        tmf.Col5 = drf["description"].ToString();
                                        des = drf["description"].ToString();
                                        title = drf["Col3"].ToString();
                                        tmf.Col6 = drf["col3"].ToString();
                                        tmf.Col7 = drf["col2"].ToString();
                                        ltmf.Add(tmf);
                                    }
                                }
                                model[0].LTM2 = ltmf;
                                #endregion
                                #region switches
                                dtf = sgen.getdata(userCode, "select client_id||client_unit_id||vch_num||to_char(vch_date,'yyyymmdd')||type as fstr, rec_id,file_name,file_path,col1,col2,description,Col3 from file_tab where vch_num='" + dtt.Rows[0]["vch_num"].ToString() + "' and type in " +
                                    "('" + tm.Col12 + "','DD" + model[0].Col12 + "') and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "' and col1='SWITCH'");
                                ltmf = new List<Tmodelmain>();
                                if (dtf.Rows.Count > 0)
                                {
                                    model[0].Col56 = dtf.Rows[0]["col3"].ToString();
                                    model[0].Col57 = dtf.Rows[0]["description"].ToString();
                                    foreach (DataRow drf in dtf.Rows)
                                    {
                                        Tmodelmain tmf = new Tmodelmain();
                                        tmf.Col4 = drf["file_path"].ToString();
                                        tmf.Col1 = drf["file_name"].ToString();
                                        tmf.Col2 = drf["col1"].ToString();
                                        tmf.Col3 = drf["rec_id"].ToString();
                                        tmf.Col97 = drf["rec_id"].ToString();
                                        tmf.Col5 = drf["description"].ToString();
                                        des = drf["description"].ToString();
                                        title = drf["Col3"].ToString();
                                        tmf.Col6 = drf["col3"].ToString();
                                        tmf.Col7 = drf["col2"].ToString();
                                        ltmf.Add(tmf);
                                    }
                                }
                                model[0].LTM3 = ltmf;
                                #endregion
                                #endregion
                            }
                            break;
                        case "PARENT":
                            mq = "select a.parent_id,a.vch_num,b.c_name as Parent_Account,a.c_name as Account_Name,(case when a.panno='AAAAA0000A' then '-' else a.panno end) panno,(case when a.cpcont='0000000000' then '-' else a.cpcont end) cpcont," +
                                "(case when  a.cpemail='ab@ab.ab' then '-' else a.cpemail end ) cpemail,((replace(a.cpname, '0', '-') || ' ' || replace(a.cp_mname, '0', '') || ' ' || " +
                                "replace(a.cp_lname, '0', ''))) contact_person from clients_mst a " +
                                " left join clients_mst b on a.parent_id=b.vch_num  and a.client_unit_id=b.client_unit_id and b.type = 'BCD'" +
                                " where(a.client_id || a.client_unit_id || a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.type) = '" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                #region investment option 1
                                mod1.Add(new SelectListItem { Text = "SIP", Value = "SIP" });
                                mod1.Add(new SelectListItem { Text = "Lumpsum", Value = "Lumpsum" });
                                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
                                #endregion
                                #region Switch Type
                                TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2 = cmd_Fun.switchtype(userCode, unitid_mst);
                                #endregion
                                #region Redemption Type
                                TempData[MyGuid + "_TList3"] = model[0].TList3 = mod3 = cmd_Fun.rdmptype(userCode, unitid_mst);
                                #endregion

                                mq1 = "";
                                if ((sgen.GetSession(MyGuid, "EDMODE") == null) || (sgen.GetSession(MyGuid, "EDMODE") == "N"))
                                {
                                    sgen.SetSession(MyGuid, "EDMODE", "N");
                                    mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10 + " where type='" + model[0].Col12 + "' " + model[0].Col11 + "  ";
                                    vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                                    model[0].Col16 = vch_num;
                                }
                                model[0].Col17 = dtt.Rows[0]["Parent_Account"].ToString();
                                model[0].Col18 = dtt.Rows[0]["parent_id"].ToString();
                                model[0].Col19 = dtt.Rows[0]["Account_Name"].ToString();
                                model[0].Col20 = dtt.Rows[0]["vch_num"].ToString();
                                model[0].Col21 = dtt.Rows[0]["panno"].ToString();
                                model[0].Col22 = dtt.Rows[0]["cpemail"].ToString();
                                model[0].Col23 = dtt.Rows[0]["cpcont"].ToString();
                                model[0].Col24 = dtt.Rows[0]["contact_person"].ToString();
                                model[0].Col29 = sgen.server_datetime_local(userCode);
                                model[0].Col40 = sgen.server_datetime_local(userCode);
                                model[0].Col54 = sgen.server_datetime_local(userCode);
                                if (model[0].Col14 == "35002.4")
                                { model[0].Chk1 = true; }
                                else if (model[0].Col14 == "35002.5")
                                { model[0].Chk2 = true; }
                                else if (model[0].Col14 == "35002.6")
                                { model[0].Chk3 = true; }
                                else
                                {
                                    model[0].Chk1 = false;
                                    model[0].Chk2 = false;
                                    model[0].Chk3 = false;
                                }
                            }
                            break;
                        case "SCH_PUR":
                            mq = "select a.master_id sch_id,a.master_name sch_name ,b.master_name sch_type, b.master_id as sch_type_id" +
                                " from master_setting a  inner join master_setting b on b.master_id = a.classid and" +
                                " b.type = 'SCH' and find_in_set(b.client_id, a.client_id)= 1 and find_in_set(b.client_unit_id," +
                                " a.client_unit_id)= 1 where(a.client_id || a.client_unit_id || a.master_id || to_char(a.vch_date," +
                                " 'yyyymmdd') || a.type) = '" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                model[0].Col25 = dtt.Rows[0]["sch_name"].ToString();
                                model[0].Col26 = dtt.Rows[0]["sch_id"].ToString();
                                model[0].Col27 = dtt.Rows[0]["sch_type"].ToString();
                                model[0].Col59 = dtt.Rows[0]["sch_type_id"].ToString();
                            }
                            break;
                        case "SCH_RED":
                            mq = "select a.master_id sch_id,a.master_name sch_name ,b.master_name sch_type, b.master_id as sch_type_id" +
                                " from master_setting a  inner join master_setting b on b.master_id = a.classid and" +
                                " b.type = 'SCH' and find_in_set(b.client_id, a.client_id)= 1 and find_in_set(b.client_unit_id," +
                                " a.client_unit_id)= 1 where(a.client_id || a.client_unit_id || a.master_id || to_char(a.vch_date," +
                                " 'yyyymmdd') || a.type) = '" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                model[0].Col34 = dtt.Rows[0]["sch_name"].ToString();
                                model[0].Col35 = dtt.Rows[0]["sch_id"].ToString();
                                model[0].Col36 = dtt.Rows[0]["sch_type"].ToString();
                                model[0].Col37 = dtt.Rows[0]["sch_type_id"].ToString();
                            }
                            break;
                        case "SCH_FROM":
                            mq = "select a.master_id sch_id,a.master_name sch_name ,b.master_name sch_type, b.master_id as sch_type_id" +
                                " from master_setting a  inner join master_setting b on b.master_id = a.classid and" +
                                " b.type = 'SCH' and find_in_set(b.client_id, a.client_id)= 1 and find_in_set(b.client_unit_id," +
                                " a.client_unit_id)= 1 where(a.client_id || a.client_unit_id || a.master_id || to_char(a.vch_date," +
                                " 'yyyymmdd') || a.type) = '" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                model[0].Col45 = dtt.Rows[0]["sch_name"].ToString();
                                model[0].Col46 = dtt.Rows[0]["sch_id"].ToString();
                                model[0].Col47 = dtt.Rows[0]["sch_type"].ToString();
                                model[0].Col48 = dtt.Rows[0]["sch_type_id"].ToString();
                            }
                            break;
                        case "SCH_TO":
                            mq = "select a.master_id sch_id,a.master_name sch_name ,b.master_name sch_type, b.master_id as sch_type_id" +
                                " from master_setting a  inner join master_setting b on b.master_id = a.classid and" +
                                " b.type = 'SCH' and find_in_set(b.client_id, a.client_id)= 1 and find_in_set(b.client_unit_id," +
                                " a.client_unit_id)= 1 where(a.client_id || a.client_unit_id || a.master_id || to_char(a.vch_date," +
                                " 'yyyymmdd') || a.type) = '" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                model[0].Col49 = dtt.Rows[0]["sch_name"].ToString();
                                model[0].Col50 = dtt.Rows[0]["sch_id"].ToString();
                                model[0].Col51 = dtt.Rows[0]["sch_type"].ToString();
                                model[0].Col60 = dtt.Rows[0]["sch_type_id"].ToString();
                            }
                            break;
                        case "FDEL":
                            string fid = sgen.GetSession(MyGuid, "delid").ToString();
                            res = sgen.execute_cmd(userCode, "Delete from file_tab WHERE rec_id='" + fid + "' and type in ('" + model[0].Col12 + "','DD" + model[0].Col12 + "') and " +
                                "client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "'");
                            //res = sgen.execute_cmd(userCode, "Delete from file_tab WHERE rec_id='" + fid + "' and type='VNC' and client_id='"
                            //+ clientid_mst + "' and client_unit_id='" + unitid_mst + "'");
                            sgen.SetSession(MyGuid, "delid", null);
                            if (res)
                            {
                                var LTM = model[0].LTM1;
                                var LTM2 = model[0].LTM2;
                                var LTM3 = model[0].LTM3;
                                try
                                {
                                    for (int d = 0; d < LTM.Count; d++)
                                    {
                                        var id = LTM[d].Col3;
                                        if (id == fid) { model[0].LTM1.RemoveAt(d); }
                                    }
                                    //model[0].LTM2 = new List<Tmodelmain>();
                                }
                                catch { }
                                try
                                {
                                    for (int d = 0; d < LTM2.Count; d++)
                                    {
                                        var id = LTM2[d].Col3;
                                        if (id == fid) { model[0].LTM2.RemoveAt(d); }
                                    }
                                    //model[0].LTM2 = new List<Tmodelmain>();
                                }
                                catch { }
                                try
                                {
                                    for (int d = 0; d < LTM3.Count; d++)
                                    {
                                        var id = LTM3[d].Col3;
                                        if (id == fid) { model[0].LTM3.RemoveAt(d); }
                                    }
                                    //model[0].LTM3 = new List<Tmodelmain>();
                                }
                                catch { }
                            }
                            break;
                    }
                    break;
                #endregion
                #region n_finreq
                case "n_finreq":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "PURCHASE":
                            mq = "select (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as" +
                                " fstr,a.TRANS_TYPE,to_char(a.TRANS_date,'" + sgen.Getsqldateformat() + "') TRANS_date,a.vch_num Doc_No,a.client_id,a.client_unit_id,a.RDP_SCH,a.ent_by,a.ent_date,a.acc_id,a.p_acc_id,a.rec_id,c.c_name as Parent_Account, b.c_name as Account_Name,(case when b.panno='AAAAA0000A' then '' else b.panno end) panno" +
                                ",fn.master_name as fund_name,a.vch_num,(case when b.cpemail = 'ab@ab.ab' then '-' else b.cpemail end ) " +
                                "Email_ID ,(case when b.cpcont = '0000000000' then '-' else b.cpcont end) as Contact_No" +
                                ",((replace(b.cpname, '0', '-') || ' ' || replace(b.cp_mname, '0', '') || ' ' || replace(b.cp_lname, '0', ''))) " +
                                "contact_person,a.RDP_FOLIO,a.rdp_rmk from trans_req a inner join  clients_mst b on a.acc_id = b.vch_num " +
                                "and find_in_set(b.client_unit_id,'" + unitid_mst + "')= 1 left join clients_mst c on a.p_acc_id = c.vch_num  and a.client_unit_id =" +
                                " c.client_unit_id and b.type = 'BCD' left join master_setting fn on fn.master_id = a.RDP_SCH and fn.type = 'FUD' " +
                                "and find_in_set(fn.client_id, a.client_id)= 1 and find_in_set(fn.client_unit_id, a.client_unit_id)= 1" +
                                " where (a.client_id || a.client_unit_id || a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.type) = '" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            #region fund
                            TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.fundname(userCode, unitid_mst);
                            #endregion
                            #region Transaction Type
                            TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2 = cmd_Fun.transtype(userCode, unitid_mst);
                            #endregion
                            if (dtt.Rows.Count > 0)
                            {
                                model = getedit(model, dtt, URL);
                                model[0].Col16 = dtt.Rows[0]["vch_num"].ToString();
                                model[0].Col17 = dtt.Rows[0]["Parent_Account"].ToString();
                                model[0].Col18 = dtt.Rows[0]["p_acc_id"].ToString();
                                model[0].Col19 = dtt.Rows[0]["Account_Name"].ToString();
                                model[0].Col20 = dtt.Rows[0]["acc_id"].ToString();
                                model[0].Col21 = dtt.Rows[0]["panno"].ToString();
                                model[0].Col22 = dtt.Rows[0]["Email_ID"].ToString();
                                model[0].Col23 = dtt.Rows[0]["Contact_No"].ToString();
                                model[0].Col24 = dtt.Rows[0]["contact_person"].ToString();
                                model[0].Col25 = dtt.Rows[0]["RDP_FOLIO"].ToString();
                                model[0].Col26 = dtt.Rows[0]["RDP_RMK"].ToString();
                                model[0].Col34 = dtt.Rows[0]["TRANS_date"].ToString();
                                String[] L1 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["RDP_SCH"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems1 = L1;
                                String[] L2 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["TRANS_TYPE"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems2 = L2;
                                #region attachment
                                DataTable dtf = new DataTable();
                                dtf = sgen.getdata(userCode, "select client_id||client_unit_id||vch_num||to_char(vch_date,'yyyymmdd')||type as fstr, rec_id,file_name,file_path,col1,col2,description,Col3 from file_tab where vch_num='" + dtt.Rows[0]["vch_num"].ToString() + "' and type in " +
                                    "('" + tm.Col12 + "','DD" + model[0].Col12 + "') and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "' and col1='PUR'");
                                List<Tmodelmain> ltmf = new List<Tmodelmain>();
                                string des = "", title = "", f_recid = "";
                                if (dtf.Rows.Count > 0)
                                {
                                    model[0].Col31 = dtf.Rows[0]["col3"].ToString();
                                    model[0].Col32 = dtf.Rows[0]["description"].ToString();
                                    foreach (DataRow drf in dtf.Rows)
                                    {
                                        Tmodelmain tmf = new Tmodelmain();
                                        tmf.Col4 = drf["file_path"].ToString();
                                        tmf.Col1 = drf["file_name"].ToString();
                                        tmf.Col2 = drf["col1"].ToString();
                                        tmf.Col3 = drf["rec_id"].ToString();
                                        tmf.Col97 = drf["rec_id"].ToString();
                                        tmf.Col5 = drf["description"].ToString();
                                        des = drf["description"].ToString();
                                        title = drf["Col3"].ToString();
                                        tmf.Col6 = drf["col3"].ToString();
                                        tmf.Col7 = drf["col2"].ToString();
                                        //model[0].Col98 = "(client_id||client_unit_id|| vch_num|| to_char(vch_date, 'yyyymmdd')|| type) = '" + drf["fstr"].ToString() + "'";
                                        ltmf.Add(tmf);
                                    }
                                }
                                model[0].LTM1 = ltmf;
                            }
                            #endregion
                            break;
                        case "PARENT":
                            mq = "select a.parent_id,a.vch_num,b.c_name as Parent_Account,a.c_name as Account_Name,(case when b.panno='AAAAA0000A' then '-' else b.panno end) panno,(case when a.cpcont='0000000000' then '' else a.cpcont end) cpcont," +
                                "(case when  a.cpemail='ab@ab.ab' then '-' else a.cpemail end ) cpemail,((replace(a.cpname, '0', '-') || ' ' || replace(a.cp_mname, '0', '') || ' ' || " +
                                "replace(a.cp_lname, '0', ''))) contact_person from clients_mst a " +
                                " left join clients_mst b on a.parent_id=b.vch_num  and a.client_unit_id=b.client_unit_id and b.type = 'BCD'" +
                                " where(a.client_id || a.client_unit_id || a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.type) = '" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "EDMODE", "N");
                                sgen.SetSession(MyGuid, "EDMODE", "N");
                                #region Fund
                                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.fundname(userCode, unitid_mst);
                                #endregion
                                #region Transaction Type
                                TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2 = cmd_Fun.transtype(userCode, unitid_mst);
                                #endregion
                                model = getnew(model);
                                //mod1 = cmd_Fun.fundname(userCode, clientid_mst, unitid_mst);
                                model[0].Col17 = dtt.Rows[0]["Parent_Account"].ToString();
                                model[0].Col18 = dtt.Rows[0]["parent_id"].ToString();
                                model[0].Col19 = dtt.Rows[0]["Account_Name"].ToString();
                                model[0].Col20 = dtt.Rows[0]["vch_num"].ToString();
                                model[0].Col21 = dtt.Rows[0]["panno"].ToString();
                                model[0].Col22 = dtt.Rows[0]["cpemail"].ToString();
                                model[0].Col23 = dtt.Rows[0]["cpcont"].ToString();
                                model[0].Col24 = dtt.Rows[0]["contact_person"].ToString();
                                if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                                if (model[0].SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
                            }
                            break;
                        case "FDEL":
                            string fid = sgen.GetSession(MyGuid, "delid").ToString();
                            res = sgen.execute_cmd(userCode, "Delete from file_tab WHERE rec_id='" + fid + "' and type='NFR' and client_id='"
              + clientid_mst + "' and client_unit_id='" + unitid_mst + "'");
                            sgen.SetSession(MyGuid, "delid", null);
                            if (res)
                            {
                                var LTM = model[0].LTM1;
                                for (int d = 0; d < LTM.Count; d++)
                                {
                                    var id = LTM[d].Col3;
                                    if (id == fid) { model[0].LTM1.RemoveAt(d); }
                                }
                            }
                            break;
                    }
                    break;
                #endregion
                #region pn_unit
                case "pn_unit":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            // reena 1 line done
                            mq = "select vch_num,client_id,col4,client_unit_id,rec_id,ent_by,col10,ent_date,to_char(vch_date,'" + sgen.Getsqldateformat() + "') as doc_date,col7 as manufc_code,col5 as manufc_name,col6 as product_name,col9 as prd_catagory from enx_tab2 where client_id||client_unit_id||vch_num||to_char(vch_date,'yyyymmdd')||type = '" + URL + "'";
                            #region ddll
                            TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.product(userCode, unitid_mst, out defcall);
                            TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2 = cmd_Fun.prd_sub_cat(userCode, unitid_mst);
                            #endregion
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                model = getedit(model, dtt, URL);
                                model[0].Col16 = dtt.Rows[0]["vch_num"].ToString();
                                model[0].Col17 = dtt.Rows[0]["manufc_name"].ToString();
                                model[0].Col18 = dtt.Rows[0]["product_name"].ToString();
                                model[0].Col19 = dtt.Rows[0]["col4"].ToString();
                                model[0].Col21 = dtt.Rows[0]["manufc_code"].ToString();
                                String[] L1 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["prd_catagory"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems1 = L1;
                                String[] L2 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["col10"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems2 = L2;
                                #region attachment
                                DataTable dtf = new DataTable();
                                dtf = sgen.getdata(userCode, "select client_id||client_unit_id||vch_num||to_char(vch_date,'yyyymmdd')||type as fstr, rec_id,file_name,file_path,col1,col2,description,Col3 from file_tab where vch_num='" + dtt.Rows[0]["vch_num"].ToString() + "' and type in " +
                                    "('" + tm.Col12 + "','DD" + model[0].Col12 + "') and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "' and col1='PUR'");
                                List<Tmodelmain> ltmf = new List<Tmodelmain>();
                                string des = "", title = "", f_recid = "";
                                if (dtf.Rows.Count > 0)
                                {
                                    model[0].Col31 = dtf.Rows[0]["col3"].ToString();
                                    model[0].Col32 = dtf.Rows[0]["description"].ToString();
                                    foreach (DataRow drf in dtf.Rows)
                                    {
                                        Tmodelmain tmf = new Tmodelmain();
                                        tmf.Col4 = drf["file_path"].ToString();
                                        tmf.Col1 = drf["file_name"].ToString();
                                        tmf.Col2 = drf["col1"].ToString();
                                        tmf.Col3 = drf["rec_id"].ToString();
                                        tmf.Col97 = drf["rec_id"].ToString();
                                        tmf.Col5 = drf["description"].ToString();
                                        des = drf["description"].ToString();
                                        title = drf["Col3"].ToString();
                                        tmf.Col6 = drf["col3"].ToString();
                                        tmf.Col7 = drf["col2"].ToString();
                                        //model[0].Col98 = "(client_id||client_unit_id|| vch_num|| to_char(vch_date, 'yyyymmdd')|| type) = '" + drf["fstr"].ToString() + "'";
                                        ltmf.Add(tmf);
                                    }
                                }
                                model[0].LTM1 = ltmf;
                            }
                            #endregion
                            break;
                        case "MANUF":
                            mq = "select vch_num man_code,c_name as man_name from clients_mst where  client_id||client_unit_id||vch_num||to_char(vch_date,'ddmmyyyy')||type ='" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                model = getnew(model);
                                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.product(userCode, unitid_mst, out defcall);
                                TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2 = cmd_Fun.prd_sub_cat(userCode, unitid_mst);
                                model[0].Col17 = dtt.Rows[0]["man_name"].ToString();
                                model[0].Col21 = dtt.Rows[0]["man_code"].ToString();
                                if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                                if (model[0].SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
                            }
                            break;
                        case "FDEL":
                            string fid = sgen.GetSession(MyGuid, "delid").ToString();
                            res = sgen.execute_cmd(userCode, "Delete from file_tab WHERE rec_id='" + fid + "' and type='PNM' and client_id='"
              + clientid_mst + "' and client_unit_id='" + unitid_mst + "'");
                            sgen.SetSession(MyGuid, "delid", null);
                            if (res)
                            {
                                var LTM = model[0].LTM1;
                                for (int d = 0; d < LTM.Count; d++)
                                {
                                    var id = LTM[d].Col3;
                                    if (id == fid) { model[0].LTM1.RemoveAt(d); }
                                }
                            }
                            break;
                    }
                    break;
                #endregion
                #region p_a_client
                case "p_a_client":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            //mq = "select vch_num,client_id,col4,r_no,client_unit_id,to_char(date1,'" + sgen.Getsqldateformat() + "') purdt,rec_id,ent_by,ent_date," +
                            //    "to_char(date2,'" + sgen.Getsqldateformat() + "') nxtdt,to_char(date3,'" + sgen.Getsqldateformat() + "') paydt,to_char(vch_date,'" + sgen.Getsqldateformat() + "') doc_date," +
                            //    "col7,col5,col10,col6,col9 from enx_tab2 " +
                            //    "where client_id||client_unit_id||vch_num||to_char(vch_date,'yyyymmdd')||type = '" + URL + "'";

                            // reena 2 line done
                            mq = "select pr.client_id||pr.client_unit_id||pr.vch_num||to_char(pr.vch_date,'yyyymmdd')||pr.type as fstr,pr.rec_id,pr.ent_by,pr.ent_date,pr.client_id,pr.client_unit_id," +
                                "pr.vch_num,to_char(pr.vch_date,'" + sgen.Getsqldateformat() + "') as doc_date,pr.col4,pr.r_no,pr.col18,pr.col12,to_char(pr.date2,'" + sgen.Getsqldateformat() + "') nxtdt,to_char(pr.date4,'" + sgen.Getsqldateformat() + "') endt,to_char(pr.date3,'" + sgen.Getsqldateformat() + "') paydt,to_char(pr.date1, '" + sgen.Getsqldateformat() + "') as purdt," +
                                "pr.col7,pr.col5,pc.col6 as product_name,pr.col10,pc.col5 as manufc_name," +
                                "pr.col6,pr.col9 from enx_tab2 pr inner join enx_tab2 pc on pc.vch_num = pr.r_no and " +
                                "pc.type = 'PNM' and pc.client_unit_id = pr.client_unit_id where pr.client_id||pr.client_unit_id||pr.vch_num||to_char(pr.vch_date,'yyyymmdd')||pr.type = '" + URL + "'";
                            #region ddll
                            TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.freq(userCode, unitid_mst);
                            TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2 = cmd_Fun.purthr(userCode, unitid_mst);
                            #endregion
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                model = getedit(model, dtt, URL);
                                model[0].Col16 = dtt.Rows[0]["vch_num"].ToString();
                                model[0].Col17 = dtt.Rows[0]["col5"].ToString();
                                model[0].Col18 = dtt.Rows[0]["col7"].ToString();
                                model[0].Col19 = dtt.Rows[0]["col10"].ToString();
                                model[0].Col20 = dtt.Rows[0]["col6"].ToString();
                                model[0].Col21 = dtt.Rows[0]["purdt"].ToString();
                                model[0].Col22 = dtt.Rows[0]["col4"].ToString();
                                model[0].Col23 = dtt.Rows[0]["r_no"].ToString();
                                model[0].Col24 = dtt.Rows[0]["nxtdt"].ToString();
                                model[0].Col25 = dtt.Rows[0]["paydt"].ToString();
                                model[0].Col28 = dtt.Rows[0]["endt"].ToString();
                                model[0].Col29 = dtt.Rows[0]["col12"].ToString();
                                model[0].Col26 = dtt.Rows[0]["product_name"].ToString();
                                model[0].Col27 = dtt.Rows[0]["manufc_name"].ToString();
                                String[] L1 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["col9"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems1 = L1;
                                String[] L2 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["col18"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems2 = L2;
                                #region attachment
                                DataTable dtf = new DataTable();
                                dtf = sgen.getdata(userCode, "select client_id||client_unit_id||vch_num||to_char(vch_date,'yyyymmdd')||type as fstr, rec_id,file_name,file_path,col1,col2,description,Col3 from file_tab where vch_num='" + dtt.Rows[0]["vch_num"].ToString() + "' and type in " +
                                    "('" + tm.Col12 + "','DD" + model[0].Col12 + "') and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "' and col1='PUR'");
                                List<Tmodelmain> ltmf = new List<Tmodelmain>();
                                string des = "", title = "", f_recid = "";
                                if (dtf.Rows.Count > 0)
                                {
                                    model[0].Col31 = dtf.Rows[0]["col3"].ToString();
                                    model[0].Col32 = dtf.Rows[0]["description"].ToString();
                                    foreach (DataRow drf in dtf.Rows)
                                    {
                                        Tmodelmain tmf = new Tmodelmain();
                                        tmf.Col4 = drf["file_path"].ToString();
                                        tmf.Col1 = drf["file_name"].ToString();
                                        tmf.Col2 = drf["col1"].ToString();
                                        tmf.Col3 = drf["rec_id"].ToString();
                                        tmf.Col97 = drf["rec_id"].ToString();
                                        tmf.Col5 = drf["description"].ToString();
                                        des = drf["description"].ToString();
                                        title = drf["Col3"].ToString();
                                        tmf.Col6 = drf["col3"].ToString();
                                        tmf.Col7 = drf["col2"].ToString();
                                        //model[0].Col98 = "(client_id||client_unit_id|| vch_num|| to_char(vch_date, 'yyyymmdd')|| type) = '" + drf["fstr"].ToString() + "'";
                                        ltmf.Add(tmf);
                                    }
                                }
                                model[0].LTM1 = ltmf;
                            }
                            #endregion
                            break;
                        case "CLIENT":
                            //mq = "select vch_num man_code,c_name as man_name from clients_mst where client_id||client_unit_id||vch_num||to_char(vch_date,'ddmmyyyy')||type ='" + URL + "'";
                            mq = "select a.parent_id,a.vch_num,b.c_name as Parent_Account,a.c_name as Account_Name,a.panno,(case when a.cpcont='0000000000' then '-' else a.cpcont end) cpcont," +
    "(case when  a.cpemail='ab@ab.ab' then '-' else a.cpemail end ) cpemail,((replace(a.cpname, '0', '-') || ' ' || replace(a.cp_mname, '0', '') || ' ' || " +
    "replace(a.cp_lname, '0', ''))) contact_person from clients_mst a " +
    " left join clients_mst b on a.parent_id=b.vch_num  and a.client_unit_id=b.client_unit_id and b.type = 'BCD'" +
    " where(a.client_id || a.client_unit_id || a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.type) = '" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                model = getnew(model);
                                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.freq(userCode, unitid_mst);
                                TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2 = cmd_Fun.purthr(userCode, unitid_mst);
                                model[0].Col17 = dtt.Rows[0]["Account_Name"].ToString();
                                model[0].Col18 = dtt.Rows[0]["vch_num"].ToString();
                                if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                                if (model[0].SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
                                mq = "select (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'DDMMYYYY')||a.type) Sno,m.c_name Manufacturer," +
                                    "p.col6 Product,a.col6 Amt,f.master_name freq,to_char(a.date2,'" + sgen.Getsqldateformat() + "') Duedt from enx_tab2 a " +
                                    "inner join enx_tab2 p on p.vch_num = a.r_no and p.type = 'PNM' and p.client_id = a.client_id and p.client_unit_id = a.client_unit_id " +
                                    "inner join clients_mst m on m.vch_num = p.col7 and m.type = 'BCD' and substr(m.vch_num,0,3)= '" + dtt.Rows[0]["vch_num"].ToString().Substring(0, 3).Trim() + "' and m.client_unit_id = a.client_unit_id " +
                                    "inner join master_setting f on f.master_id = a.col9 and f.type = 'FRE' and find_in_set(f.client_id, a.client_id)= 1 and find_in_set(f.client_unit_id, a.client_unit_id)= 1 " +
                                    "where a.col7 = '" + dtt.Rows[0]["vch_num"].ToString() + "' and a.type = 'PAC' and a.client_id = '" + clientid_mst + "' and a.client_unit_id = '" + unitid_mst + "'";
                                model[0].dt1 = sgen.getdata(userCode, mq);
                                Make_query(viewName.ToLower(), "Select PRODUCT Name", "PRODUCT", "1", "", "");
                                ViewBag.scripCall = "callFoo('Select PRODUCT Name');";
                            }
                            break;
                        case "PRODUCT":
                            //mq = "select client_id||client_unit_id||vch_num||to_char(vch_date,'ddmmyyyy')||type as fstr," +
                            //    "vch_num Doc_no,to_char(vch_date, '" + sgen.Getsqldateformat() + "') as doc_date,col6 as product_name from enx_tab2" +
                            //    " where client_id||client_unit_id||vch_num||to_char(vch_date,'ddmmyyyy')||type = '" + URL + "'";
                            //mq = "select master_id||to_char(vch_date,'ddmmyyyy')||type as fstr,master_id Doc_no," +
                            //    "to_char(vch_date, '" + sgen.Getsqldateformat() + "') as doc_date,master_name as product_cat from master_setting " +
                            //    "where master_id||to_char(vch_date,'ddmmyyyy')||type = '" + URL + "'";


                            // reena 1 line done
                            mq = "select pr.vch_num Doc_no,to_char(pr.vch_date, '" + sgen.Getsqldateformat() + "') as doc_date,pr.col7 as manufc_code" +
                                ",pr.col5 as manufc_name,pr.col6 as product_name,pc.master_name as prd_catagory from enx_tab2 pr" +
                                " inner join master_setting pc on pc.master_id = pr.col9 and pc.type = 'PNM' and " +
                                "find_in_set(pc.client_unit_id,'" + unitid_mst + "')= 1 where pr.client_id || pr.client_unit_id || pr.vch_num " +
                                "|| to_char(pr.vch_date, 'yyyymmdd') || pr.type = '" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                model[0].Col19 = dtt.Rows[0]["prd_catagory"].ToString();
                                model[0].Col23 = dtt.Rows[0]["Doc_no"].ToString();
                                model[0].Col26 = dtt.Rows[0]["product_name"].ToString();
                                model[0].Col27 = dtt.Rows[0]["manufc_name"].ToString();
                            }
                            break;
                        case "FDEL":
                            string fid = sgen.GetSession(MyGuid, "delid").ToString();
                            res = sgen.execute_cmd(userCode, "Delete from file_tab WHERE rec_id='" + fid + "' and type='PAC' and client_id='"
              + clientid_mst + "' and client_unit_id='" + unitid_mst + "'");
                            sgen.SetSession(MyGuid, "delid", null);
                            if (res)
                            {
                                var LTM = model[0].LTM1;
                                for (int d = 0; d < LTM.Count; d++)
                                {
                                    var id = LTM[d].Col3;
                                    if (id == fid) { model[0].LTM1.RemoveAt(d); }
                                }
                            }
                            break;
                    }
                    break;
                #endregion
                #region fas insurece
                case "fas_ins":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":

                            mq = "select (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.vch_num," +
                                "to_char(a.vch_date,'" + sgen.Getsqldateformat() + "') doc_date,a.client_id,a.client_unit_id,a.ent_by,a.ent_date,a.rec_id,a.acc_id,a.SWT_FOLIO,a.p_acc_id,c.c_name as Parent_Account,b.c_name as Account_Name," +
                                "to_char(a.INV_DATE, '" + sgen.Getsqldateformat() + "') as investment_date,a.FRM_SCH,a.SOPT_TO,a.SWT_AMT," +
                                "pc.master_name as prd_category,a.RDP_TYPE,a.FRM_SCH_TYPE,sc.master_name as Prd_sub_category,pr.col6 as product_name,nvl(cl.vch_num, '-') as " +
                                "manufc_code,nvl(cl.c_name, '-') as Manuf_name,a.TRANS_TYPE,to_char(a.TRANS_DATE, '" + sgen.Getsqldateformat() + "') as maturity_date," +
                                "a.ispur,a.RDP_FOLIO as Purchase_type,a.pur_rmk from trans_req a inner join clients_mst b on a.acc_id = b.vch_num  and " +
                                "find_in_set(b.client_unit_id, '" + unitid_mst + "') = 1 left join clients_mst c on a.p_acc_id = c.vch_num  and a.client_unit_id =" +
                                " c.client_unit_id and b.type = 'BCD' inner join enx_tab2 pr on pr.vch_num = a.SWT_FOLIO and pr.type = 'PNM'" +
                                " and pr.client_unit_id = '" + unitid_mst + "' left join master_setting pc on pc.master_id = pr.col9 and pc.type = 'PNM'" +
                                " and find_in_set(pc.client_unit_id,'" + unitid_mst + "')= 1 left join master_setting sc on sc.master_id = pr.col10 and " +
                                "sc.type = 'PSC' and find_in_set(sc.client_unit_id,'" + unitid_mst + "')= 1 left join clients_mst cl on cl.vch_num = pr.col7 " +
                                "and substr(cl.vch_num,0,3)= '303' and cl.mftr = 'Y' where (a.client_id || a.client_unit_id || a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.type) = '" + URL + "'";

                            dtt = sgen.getdata(userCode, mq);
                            mod1.Add(new SelectListItem { Text = "Fresh", Value = "001" });
                            mod1.Add(new SelectListItem { Text = "Renewal", Value = "002" });
                            mod1.Add(new SelectListItem { Text = "Port", Value = "003" });
                            TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
                            TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2 = cmd_Fun.channel(userCode, unitid_mst);
                            //TempData[MyGuid + "_TList5"] = model[0].TList5 = mod5 = cmd_Fun.product(userCode, unitid_mst, out defcall);
                            TempData[MyGuid + "_TList6"] = model[0].TList6 = mod6 = cmd_Fun.Modeofpayment(userCode, unitid_mst);
                            TempData[MyGuid + "_TList3"] = model[0].TList3 = mod3 = cmd_Fun.freq_reminder(userCode, unitid_mst);
                            //TempData[MyGuid + "_TList4"] = model[0].TList4 = mod4 = cmd_Fun.policysubtype(userCode, unitid_mst);
                            if (dtt.Rows.Count > 0)
                            {
                                model = getedit(model, dtt, URL);
                                model[0].Col16 = dtt.Rows[0]["vch_num"].ToString();
                                model[0].Col17 = dtt.Rows[0]["Parent_Account"].ToString();
                                model[0].Col18 = dtt.Rows[0]["p_acc_id"].ToString();
                                model[0].Col19 = dtt.Rows[0]["Account_Name"].ToString();
                                model[0].Col20 = dtt.Rows[0]["acc_id"].ToString();
                                model[0].Col21 = dtt.Rows[0]["SOPT_TO"].ToString();
                                model[0].Col22 = dtt.Rows[0]["maturity_date"].ToString();
                                model[0].Col23 = dtt.Rows[0]["SWT_AMT"].ToString();
                                model[0].Col24 = dtt.Rows[0]["pur_rmk"].ToString();
                                model[0].Col25 = dtt.Rows[0]["investment_date"].ToString();

                                model[0].Col34 = dtt.Rows[0]["product_name"].ToString();
                                model[0].Col37 = dtt.Rows[0]["Manuf_name"].ToString();
                                model[0].Col38 = dtt.Rows[0]["prd_category"].ToString();
                                model[0].Col39 = dtt.Rows[0]["Prd_sub_category"].ToString();

                                model[0].Col35 = dtt.Rows[0]["SWT_FOLIO"].ToString();//prd code
                                model[0].Col40 = dtt.Rows[0]["FRM_SCH"].ToString();//inside / outside
                                if (dtt.Rows[0]["ispur"].ToString() == "") { model[0].Chk1 = true; } else { model[0].Chk1 = true; }
                                String[] L1 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["Purchase_type"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems1 = L1;
                                String[] L2 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["RDP_TYPE"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems2 = L2;
                                String[] L3 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["FRM_SCH_TYPE"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems3 = L3;
                                //String[] L4 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["FRM_SCH_TYPE"].ToString()).Distinct()).Split(',');
                                //model[0].SelectedItems4 = L4;
                                //String[] L5 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["SWT_FOLIO"].ToString()).Distinct()).Split(',');
                                //model[0].SelectedItems5 = L5;
                                String[] L6 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["TRANS_TYPE"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems6 = L6;
                                #region attachment
                                DataTable dtf = new DataTable();
                                dtf = sgen.getdata(userCode, "select client_id||client_unit_id||vch_num||to_char(vch_date,'yyyymmdd')||type as fstr, rec_id,file_name,file_path,col1,col2,description,Col3 from file_tab where vch_num='" + dtt.Rows[0]["vch_num"].ToString() + "' and type in " +
                                    "('" + tm.Col12 + "','DD" + model[0].Col12 + "') and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "' and col1='PUR'");
                                List<Tmodelmain> ltmf = new List<Tmodelmain>();
                                string des = "", title = "", f_recid = "";
                                if (dtf.Rows.Count > 0)
                                {
                                    model[0].Col31 = dtf.Rows[0]["col3"].ToString();
                                    model[0].Col32 = dtf.Rows[0]["description"].ToString();
                                    foreach (DataRow drf in dtf.Rows)
                                    {
                                        Tmodelmain tmf = new Tmodelmain();
                                        tmf.Col4 = drf["file_path"].ToString();
                                        tmf.Col1 = drf["file_name"].ToString();
                                        tmf.Col2 = drf["col1"].ToString();
                                        tmf.Col3 = drf["rec_id"].ToString();
                                        tmf.Col97 = drf["rec_id"].ToString();
                                        tmf.Col5 = drf["description"].ToString();
                                        des = drf["description"].ToString();
                                        title = drf["Col3"].ToString();
                                        tmf.Col6 = drf["col3"].ToString();
                                        tmf.Col7 = drf["col2"].ToString();
                                        ltmf.Add(tmf);
                                    }
                                }
                                model[0].LTM1 = ltmf;
                            }
                            #endregion
                            break;
                        case "PRODUCT":

                            // reena 1 line done
                            mq = "select '-' as fstr,pr.vch_num Doc_no,to_char(pr.vch_date, '" + sgen.Getsqldateformat() + "') as doc_date,pc.master_name as prd_category,sc.master_name as Prd_sub_category,pr.col6 as product_name,nvl(cl.vch_num, '-') as manufc_code" +
                               ",nvl(cl.c_name, '-') as Manuf_name from enx_tab2 pr left join master_setting pc on pc.master_id = pr.col9 and pc.type = 'PNM' and find_in_set(pc.client_unit_id,'" + unitid_mst + "')= 1 " +
                               "left join master_setting sc on sc.master_id = pr.col10 and sc.type = 'PSC' and find_in_set(sc.client_unit_id,'" + unitid_mst + "')= 1 left join clients_mst cl on cl.vch_num = pr.col7 and " +
                               "substr(cl.vch_num,0,3)= '303' and cl.mftr = 'Y' where pr.client_id || pr.client_unit_id || pr.vch_num || to_char(pr.vch_date, 'yyyymmdd') || pr.type = '" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                model[0].Col34 = dtt.Rows[0]["product_name"].ToString();
                                model[0].Col37 = dtt.Rows[0]["Manuf_name"].ToString();
                                model[0].Col35 = dtt.Rows[0]["Doc_no"].ToString();
                                model[0].Col38 = dtt.Rows[0]["prd_category"].ToString();
                                model[0].Col39 = dtt.Rows[0]["Prd_sub_category"].ToString();
                            }
                            break;
                        case "PARENT":
                            mq = "select a.parent_id,a.vch_num,b.c_name as Parent_Account,a.c_name as Account_Name,(case when b.panno='AAAAA0000A' then '' else b.panno end) panno,(case when a.cpcont='0000000000' then '' else a.cpcont end) cpcont," +
                                "(case when  a.cpemail='ab@ab.ab' then '' else a.cpemail end ) cpemail,((replace(a.cpname, '0', '-') || ' ' || replace(a.cp_mname, '0', '') || ' ' || " +
                                "replace(a.cp_lname, '0', ''))) contact_person from clients_mst a " +
                                " left join clients_mst b on a.parent_id=b.vch_num  and a.client_unit_id=b.client_unit_id and b.type = 'BCD'" +
                                " where(a.client_id || a.client_unit_id || a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.type) = '" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                mod1.Add(new SelectListItem { Text = "Fresh", Value = "001" });
                                mod1.Add(new SelectListItem { Text = "Renewal", Value = "002" });
                                mod1.Add(new SelectListItem { Text = "Port", Value = "003" });
                                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
                                TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2 = cmd_Fun.channel(userCode, unitid_mst);
                                //TempData[MyGuid + "_TList4"] = model[0].TList4 = mod4 = cmd_Fun.policysubtype(userCode, unitid_mst);
                                TempData[MyGuid + "_TList3"] = model[0].TList3 = mod3 = cmd_Fun.freq_reminder(userCode, unitid_mst);
                                TempData[MyGuid + "_TList5"] = model[0].TList5 = mod5 = cmd_Fun.product(userCode, unitid_mst, out defcall);
                                TempData[MyGuid + "_TList6"] = model[0].TList6 = mod6 = cmd_Fun.Modeofpayment(userCode, unitid_mst);
                                model = getnew(model);
                                //mod1 = cmd_Fun.fundname(userCode, clientid_mst, unitid_mst);
                                model[0].Col17 = dtt.Rows[0]["Parent_Account"].ToString();
                                model[0].Col18 = dtt.Rows[0]["parent_id"].ToString();
                                model[0].Col19 = dtt.Rows[0]["Account_Name"].ToString();
                                model[0].Col20 = dtt.Rows[0]["vch_num"].ToString();
                                if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                                if (model[0].SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
                                if (model[0].SelectedItems3 == null) model[0].SelectedItems3 = new string[] { "" };
                                //if (model[0].SelectedItems4 == null) model[0].SelectedItems4 = new string[] { "" };
                                if (model[0].SelectedItems5 == null) model[0].SelectedItems5 = new string[] { "" };
                                if (model[0].SelectedItems6 == null) model[0].SelectedItems6 = new string[] { "" };
                            }
                            break;
                        case "FDEL":
                            string fid = sgen.GetSession(MyGuid, "delid").ToString();
                            res = sgen.execute_cmd(userCode, "Delete from file_tab WHERE rec_id='" + fid + "' and type='INS' and client_id='"
              + clientid_mst + "' and client_unit_id='" + unitid_mst + "'");
                            sgen.SetSession(MyGuid, "delid", null);
                            if (res)
                            {
                                var LTM = model[0].LTM1;
                                for (int d = 0; d < LTM.Count; d++)
                                {
                                    var id = LTM[d].Col3;
                                    if (id == fid) { model[0].LTM1.RemoveAt(d); }
                                }
                            }
                            break;
                    }
                    break;
                #endregion
                #region fas p2p
                case "fas_p2p":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "PURCHASE":
                            mq = "select a.*,to_char(a.INV_DATE,'" + sgen.Getsqldateformat() + "') INV_DATE2,to_char(a.TRANS_DATE,'" + sgen.Getsqldateformat() + "') TRANS_DATE2," +
                                "c.c_name as Parent_Account, b.c_name as Account_Name,(case when b.panno='AAAAA0000A' then '' else b.panno end) panno" +
                                ",fn.master_name as fund_name,a.vch_num,(case when b.cpemail = 'ab@ab.ab' then '' else b.cpemail end ) " +
                                "Email_ID ,(case when b.cpcont = '0000000000' then '' else b.cpcont end) as Contact_No" +
                                ",((replace(b.cpname, '0', '-') || ' ' || replace(b.cp_mname, '0', '') || ' ' || replace(b.cp_lname, '0', ''))) " +
                                "contact_person from trans_req a inner join  clients_mst b on a.acc_id = b.vch_num " +
                                "and find_in_set(b.client_unit_id,'" + unitid_mst + "')= 1 left join clients_mst c on a.p_acc_id = c.vch_num  and a.client_unit_id =" +
                                " c.client_unit_id and b.type = 'BCD' left join master_setting fn on fn.master_id = a.RDP_SCH and fn.type = 'FUD' " +
                                "and find_in_set(fn.client_id, a.client_id)= 1 and find_in_set(fn.client_unit_id, a.client_unit_id)= 1" +
                                " where (a.client_id || a.client_unit_id || a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.type) = '" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.broker(userCode, unitid_mst);
                            //TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2 = cmd_Fun.product(userCode, unitid_mst);
                            //TempData[MyGuid + "_TList3"] = model[0].TList3 = mod3 = cmd_Fun.Modeofpayment(userCode, unitid_mst);

                            if (dtt.Rows.Count > 0)
                            {
                                model = getedit(model, dtt, URL);
                                model[0].Col16 = dtt.Rows[0]["vch_num"].ToString();
                                model[0].Col17 = dtt.Rows[0]["Parent_Account"].ToString();
                                model[0].Col18 = dtt.Rows[0]["p_acc_id"].ToString();
                                model[0].Col19 = dtt.Rows[0]["Account_Name"].ToString();
                                model[0].Col20 = dtt.Rows[0]["acc_id"].ToString();
                                model[0].Col23 = dtt.Rows[0]["SWT_AMT"].ToString();
                                model[0].Col24 = dtt.Rows[0]["pur_rmk"].ToString();
                                model[0].Col25 = dtt.Rows[0]["INV_DATE2"].ToString();
                                model[0].Col33 = dtt.Rows[0]["S_NAME_PUR"].ToString();
                                model[0].Col34 = dtt.Rows[0]["S_OPT_PUR"].ToString();
                                String[] L1 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["RDP_FOLIO"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems1 = L1;
                                //String[] L2 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["RDP_TYPE"].ToString()).Distinct()).Split(',');
                                //model[0].SelectedItems2 = L2;
                                //String[] L3 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["FRM_SCH"].ToString()).Distinct()).Split(',');
                                //model[0].SelectedItems3 = L3;

                                #region attachment
                                DataTable dtf = new DataTable();
                                dtf = sgen.getdata(userCode, "select client_id||client_unit_id||vch_num||to_char(vch_date,'yyyymmdd')||type as fstr, rec_id,file_name,file_path,col1,col2,description,Col3 from file_tab where vch_num='" + dtt.Rows[0]["vch_num"].ToString() + "' and type in " +
                                    "('" + tm.Col12 + "','DD" + model[0].Col12 + "') and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "' and col1='PUR'");
                                List<Tmodelmain> ltmf = new List<Tmodelmain>();
                                string des = "", title = "", f_recid = "";
                                if (dtf.Rows.Count > 0)
                                {
                                    model[0].Col31 = dtf.Rows[0]["col3"].ToString();
                                    model[0].Col32 = dtf.Rows[0]["description"].ToString();
                                    foreach (DataRow drf in dtf.Rows)
                                    {
                                        Tmodelmain tmf = new Tmodelmain();
                                        tmf.Col4 = drf["file_path"].ToString();
                                        tmf.Col1 = drf["file_name"].ToString();
                                        tmf.Col2 = drf["col1"].ToString();
                                        tmf.Col3 = drf["rec_id"].ToString();
                                        tmf.Col97 = drf["rec_id"].ToString();
                                        tmf.Col5 = drf["description"].ToString();
                                        des = drf["description"].ToString();
                                        title = drf["Col3"].ToString();
                                        tmf.Col6 = drf["col3"].ToString();
                                        tmf.Col7 = drf["col2"].ToString();
                                        //model[0].Col98 = "(client_id||client_unit_id|| vch_num|| to_char(vch_date, 'yyyymmdd')|| type) = '" + drf["fstr"].ToString() + "'";
                                        ltmf.Add(tmf);
                                    }
                                }
                                model[0].LTM1 = ltmf;
                            }
                            #endregion
                            break;
                        case "PARENT":
                            mq = "select a.parent_id,a.vch_num,b.c_name as Parent_Account,a.c_name as Account_Name,(case when b.panno='AAAAA0000A' then '' else b.panno end) panno,(case when a.cpcont='0000000000' then '' else a.cpcont end) cpcont," +
                                "(case when  a.cpemail='ab@ab.ab' then '' else a.cpemail end ) cpemail,((replace(a.cpname, '0', '-') || ' ' || replace(a.cp_mname, '0', '') || ' ' || " +
                                "replace(a.cp_lname, '0', ''))) contact_person from clients_mst a " +
                                " left join clients_mst b on a.parent_id=b.vch_num  and a.client_unit_id=b.client_unit_id and b.type = 'BCD'" +
                                " where(a.client_id || a.client_unit_id || a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.type) = '" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                model = getnew(model);
                                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.broker(userCode, unitid_mst);

                                //mod1 = cmd_Fun.fundname(userCode, clientid_mst, unitid_mst);
                                model[0].Col17 = dtt.Rows[0]["Parent_Account"].ToString();
                                model[0].Col18 = dtt.Rows[0]["parent_id"].ToString();
                                model[0].Col19 = dtt.Rows[0]["Account_Name"].ToString();
                                model[0].Col20 = dtt.Rows[0]["vch_num"].ToString();
                                if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                                //if (model[0].SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
                                //if (model[0].SelectedItems3 == null) model[0].SelectedItems3 = new string[] { "" };
                            }
                            break;
                        case "FDEL":
                            string fid = sgen.GetSession(MyGuid, "delid").ToString();
                            res = sgen.execute_cmd(userCode, "Delete from file_tab WHERE rec_id='" + fid + "' and type='P2P' and client_id='"
              + clientid_mst + "' and client_unit_id='" + unitid_mst + "'");
                            sgen.SetSession(MyGuid, "delid", null);
                            if (res)
                            {
                                var LTM = model[0].LTM1;
                                for (int d = 0; d < LTM.Count; d++)
                                {
                                    var id = LTM[d].Col3;
                                    if (id == fid) { model[0].LTM1.RemoveAt(d); }
                                }
                            }
                            break;
                    }
                    break;
                #endregion
                #region fas fix
                case "fas_fix":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "PURCHASE":
                            mq = "select a.*,to_char(a.INV_DATE,'" + sgen.Getsqldateformat() + "') INV_DATE2,to_char(a.TRANS_DATE,'" + sgen.Getsqldateformat() + "') TRANS_DATE2" +
                                ",to_char(a.RDP_DATE,'" + sgen.Getsqldateformat() + "') RDP_DATE2,to_char(a.SWT_DATE,'" + sgen.Getsqldateformat() + "') SWT_DATE2," +
                                "c.c_name as Parent_Account, b.c_name as Account_Name,(case when b.panno='AAAAA0000A' then '' else b.panno end) panno" +
                                ",fn.master_name as fund_name,a.vch_num,(case when b.cpemail = 'ab@ab.ab' then '' else b.cpemail end ) " +
                                "Email_ID ,(case when b.cpcont = '0000000000' then '' else b.cpcont end) as Contact_No" +
                                ",((replace(b.cpname, '0', '-') || ' ' || replace(b.cp_mname, '0', '') || ' ' || replace(b.cp_lname, '0', ''))) " +
                                "contact_person from trans_req a inner join  clients_mst b on a.acc_id = b.vch_num " +
                                "and find_in_set(b.client_unit_id,'" + unitid_mst + "')= 1 left join clients_mst c on a.p_acc_id = c.vch_num  and a.client_unit_id =" +
                                " c.client_unit_id and b.type = 'BCD' left join master_setting fn on fn.master_id = a.RDP_SCH and fn.type = 'FUD' " +
                                "and find_in_set(fn.client_id, a.client_id)= 1 and find_in_set(fn.client_unit_id, a.client_unit_id)= 1" +
                                " where (a.client_id || a.client_unit_id || a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.type) = '" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            //TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.manuf(userCode, unitid_mst);
                            mod2.Add(new SelectListItem { Text = "Fresh", Value = "001" });
                            mod2.Add(new SelectListItem { Text = "Renewal", Value = "002" });
                            TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2;
                            mod3.Add(new SelectListItem { Text = "15G", Value = "001" });
                            mod3.Add(new SelectListItem { Text = "15H", Value = "002" });
                            mod3.Add(new SelectListItem { Text = "NO", Value = "003" });
                            TempData[MyGuid + "_TList3"] = model[0].TList3 = mod3;
                            mod4.Add(new SelectListItem { Text = "Cumulative", Value = "001" });
                            mod4.Add(new SelectListItem { Text = "Payout", Value = "002" });
                            TempData[MyGuid + "_TList4"] = model[0].TList4 = mod4;
                            if (dtt.Rows.Count > 0)
                            {
                                model = getedit(model, dtt, URL);
                                model[0].Col16 = dtt.Rows[0]["vch_num"].ToString();
                                model[0].Col17 = dtt.Rows[0]["Parent_Account"].ToString();
                                model[0].Col18 = dtt.Rows[0]["p_acc_id"].ToString();
                                model[0].Col19 = dtt.Rows[0]["Account_Name"].ToString();
                                model[0].Col20 = dtt.Rows[0]["acc_id"].ToString();
                                model[0].Col23 = dtt.Rows[0]["SWT_AMT"].ToString();
                                model[0].Col24 = dtt.Rows[0]["pur_rmk"].ToString();
                                model[0].Col25 = dtt.Rows[0]["INV_DATE2"].ToString();
                                model[0].Col26 = dtt.Rows[0]["S_OPT_PUR"].ToString();
                                model[0].Col27 = dtt.Rows[0]["S_OPT_RDP"].ToString();
                                model[0].Col28 = dtt.Rows[0]["SOPT_TO"].ToString();
                                model[0].Col29 = dtt.Rows[0]["RDP_DATE2"].ToString();
                                //model[0].Col30 = dtt.Rows[0]["SWT_DATE2"].ToString();
                                model[0].Col22 = dtt.Rows[0]["TRANS_DATE2"].ToString();
                                model[0].Col35 = dtt.Rows[0]["RDP_FOLIO"].ToString();

                                String[] L2 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["RDP_TYPE"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems2 = L2;
                                String[] L3 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["S_OPT_RDP"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems3 = L3;
                                String[] L4 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["SWT_FOLIO"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems4 = L4;

                                DataTable dtp = new DataTable(); mq1 = "select client_id||client_unit_id||vch_num||to_char(vch_date,'ddmmyyyy')||type as fstr,vch_num man_code,c_name as " +
                                    "man_name from clients_mst where vch_num='" + dtt.Rows[0]["RDP_FOLIO"].ToString() + "' and type='BCD' and substr(vch_num,0,3)='303' and client_unit_id='" + unitid_mst + "' " +
                                    "and mftr='Y'";
                                dtp = sgen.getdata(userCode, mq1);
                                if (dtp.Rows.Count > 0)
                                {
                                    model[0].Col34 = dtp.Rows[0]["man_name"].ToString();
                                }
                                #region attachment
                                DataTable dtf = new DataTable();
                                dtf = sgen.getdata(userCode, "select client_id||client_unit_id||vch_num||to_char(vch_date,'yyyymmdd')||type as fstr, rec_id,file_name,file_path,col1,col2,description,Col3 from file_tab where vch_num='" + dtt.Rows[0]["vch_num"].ToString() + "' and type in " +
                                    "('" + tm.Col12 + "','DD" + model[0].Col12 + "') and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "' and col1='PUR'");
                                List<Tmodelmain> ltmf = new List<Tmodelmain>();
                                string des = "", title = "", f_recid = "";
                                if (dtf.Rows.Count > 0)
                                {
                                    model[0].Col31 = dtf.Rows[0]["col3"].ToString();
                                    model[0].Col32 = dtf.Rows[0]["description"].ToString();
                                    foreach (DataRow drf in dtf.Rows)
                                    {
                                        Tmodelmain tmf = new Tmodelmain();
                                        tmf.Col4 = drf["file_path"].ToString();
                                        tmf.Col1 = drf["file_name"].ToString();
                                        tmf.Col2 = drf["col1"].ToString();
                                        tmf.Col3 = drf["rec_id"].ToString();
                                        tmf.Col97 = drf["rec_id"].ToString();
                                        tmf.Col5 = drf["description"].ToString();
                                        des = drf["description"].ToString();
                                        title = drf["Col3"].ToString();
                                        tmf.Col6 = drf["col3"].ToString();
                                        tmf.Col7 = drf["col2"].ToString();
                                        //model[0].Col98 = "(client_id||client_unit_id|| vch_num|| to_char(vch_date, 'yyyymmdd')|| type) = '" + drf["fstr"].ToString() + "'";
                                        ltmf.Add(tmf);
                                    }
                                }
                                model[0].LTM1 = ltmf;
                                #endregion

                            }
                            break;
                        case "MANUF":
                            mq = "select vch_num man_code,c_name as man_name from clients_mst where  client_id||client_unit_id||vch_num||to_char(vch_date,'ddmmyyyy')||type ='" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                model[0].Col34 = dtt.Rows[0]["man_name"].ToString();
                                model[0].Col35 = dtt.Rows[0]["man_code"].ToString();
                            }
                            break;
                        case "PARENT":
                            mq = "select a.parent_id,a.vch_num,b.c_name as Parent_Account,a.c_name as Account_Name,(case when b.panno='AAAAA0000A' then '' else b.panno end) panno,(case when a.cpcont='0000000000' then '' else a.cpcont end) cpcont," +
                                "(case when  a.cpemail='ab@ab.ab' then '' else a.cpemail end ) cpemail,((replace(a.cpname, '0', '-') || ' ' || replace(a.cp_mname, '0', '') || ' ' || " +
                                "replace(a.cp_lname, '0', ''))) contact_person from clients_mst a " +
                                " left join clients_mst b on a.parent_id=b.vch_num  and a.client_unit_id=b.client_unit_id and b.type = 'BCD'" +
                                " where(a.client_id || a.client_unit_id || a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.type) = '" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                // TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.manuf(userCode, unitid_mst);
                                mod2.Add(new SelectListItem { Text = "Fresh", Value = "001" });
                                mod2.Add(new SelectListItem { Text = "Renewal", Value = "002" });
                                TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2;
                                mod3.Add(new SelectListItem { Text = "15G", Value = "001" });
                                mod3.Add(new SelectListItem { Text = "15H", Value = "002" });
                                mod3.Add(new SelectListItem { Text = "NO", Value = "003" });
                                TempData[MyGuid + "_TList3"] = model[0].TList3 = mod3;
                                mod4.Add(new SelectListItem { Text = "Cumulative", Value = "001" });
                                mod4.Add(new SelectListItem { Text = "Payout", Value = "002" });
                                TempData[MyGuid + "_TList4"] = model[0].TList4 = mod4;
                                model = getnew(model);
                                model[0].Col17 = dtt.Rows[0]["Parent_Account"].ToString();
                                model[0].Col18 = dtt.Rows[0]["parent_id"].ToString();
                                model[0].Col19 = dtt.Rows[0]["Account_Name"].ToString();
                                model[0].Col20 = dtt.Rows[0]["vch_num"].ToString();
                                if (model[0].SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
                                if (model[0].SelectedItems4 == null) model[0].SelectedItems4 = new string[] { "" };

                                Make_query("fas_fix", "Select Manufecturer Name", "MANUF", "1", "", "");
                                ViewBag.scripCall = "callFoo('Select Manufecturer Name');";
                            }
                            break;
                        case "FDEL":
                            string fid = sgen.GetSession(MyGuid, "delid").ToString();
                            res = sgen.execute_cmd(userCode, "Delete from file_tab WHERE rec_id='" + fid + "' and type='FIX' and client_id='"
              + clientid_mst + "' and client_unit_id='" + unitid_mst + "'");
                            sgen.SetSession(MyGuid, "delid", null);
                            if (res)
                            {
                                var LTM = model[0].LTM1;
                                for (int d = 0; d < LTM.Count; d++)
                                {
                                    var id = LTM[d].Col3;
                                    if (id == fid) { model[0].LTM1.RemoveAt(d); }
                                }
                            }
                            break;
                    }
                    break;
                #endregion
                #region fd redemption
                case "fas_fd":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":

                            // reena 1 and 2 line done
                            mq = "select a.vch_num,a.ent_date,a.rec_id,a.client_id,a.client_unit_id,a.ent_by,a.edit_by,a.edit_date,to_char(a.vch_date,'" + sgen.Getsqldateformat() + "') doc_date," +
                                "c.c_name as Parent_Account,c.vch_num p_acc_id,b.c_name as Account_Name,b.vch_num acc_id,d.S_OPT_PUR as fdr_no,d.vch_num as fd_doc,to_char(d.vch_date, '" + sgen.Getsqldateformat() + "') as fd_date,a.COL11 as " +
                                "maturity_amount,a.col12,mf.c_name as manufecturer,d.SWT_FOLIO,a.col10 from enx_tab2 a inner join clients_mst b on " +
                                "a.COL5 = b.vch_num and find_in_set(b.client_unit_id, '" + unitid_mst + "') = 1  and b.type = 'BCD' left join clients_mst c on a.COL6 = c.vch_num  and a.client_unit_id =" +
                                " c.client_unit_id and c.type = 'BCD' inner join trans_req d on d.vch_num = a.COL7 and d.type = 'FIX' and d.client_unit_id = '" + unitid_mst + "' " +
                                "left join clients_mst mf on mf.vch_num = d.RDP_FOLIO and mf.type = 'BCD' and substr(mf.vch_num,0,3)= '303' where(a.client_id ||" +
                                " a.client_unit_id || a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.type) = '" + URL + "'";

                            dtt = sgen.getdata(userCode, mq);
                            mod2.Add(new SelectListItem { Text = "On Time", Value = "001" });
                            mod2.Add(new SelectListItem { Text = "Before Maturity", Value = "002" });
                            TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2;
                            mod1.Add(new SelectListItem { Text = "Cumulative", Value = "001" });
                            mod1.Add(new SelectListItem { Text = "Payout", Value = "002" });
                            TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
                            if (dtt.Rows.Count > 0)
                            {
                                model = getedit(model, dtt, URL);
                                model[0].Col16 = dtt.Rows[0]["vch_num"].ToString();
                                model[0].Col17 = dtt.Rows[0]["Parent_Account"].ToString();
                                model[0].Col18 = dtt.Rows[0]["p_acc_id"].ToString();
                                model[0].Col19 = dtt.Rows[0]["Account_Name"].ToString();
                                model[0].Col20 = dtt.Rows[0]["acc_id"].ToString();
                                model[0].Col35 = dtt.Rows[0]["fd_doc"].ToString();
                                model[0].Col34 = dtt.Rows[0]["manufecturer"].ToString();
                                model[0].Col21 = dtt.Rows[0]["fdr_no"].ToString();
                                model[0].Col22 = dtt.Rows[0]["fd_date"].ToString();
                                model[0].Col24 = dtt.Rows[0]["doc_date"].ToString();
                                model[0].Col23 = dtt.Rows[0]["maturity_amount"].ToString();
                                String[] L2 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["col10"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems2 = L2;
                                String[] L1 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["SWT_FOLIO"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems1 = L1;
                                model[0].Chk1 = (dtt.Rows[0]["col12"].ToString() == "Y") ? true : false;
                                #region attachment
                                DataTable dtf = new DataTable();
                                dtf = sgen.getdata(userCode, "select client_id||client_unit_id||vch_num||to_char(vch_date,'yyyymmdd')||type as fstr, rec_id,file_name,file_path,col1,col2,description,Col3 from file_tab where vch_num='" + dtt.Rows[0]["vch_num"].ToString() + "' and type in " +
                                    "('" + tm.Col12 + "','DD" + model[0].Col12 + "') and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "' and col1='PUR'");
                                List<Tmodelmain> ltmf = new List<Tmodelmain>();
                                string des = "", title = "", f_recid = "";
                                if (dtf.Rows.Count > 0)
                                {
                                    model[0].Col31 = dtf.Rows[0]["col3"].ToString();
                                    model[0].Col32 = dtf.Rows[0]["description"].ToString();
                                    foreach (DataRow drf in dtf.Rows)
                                    {
                                        Tmodelmain tmf = new Tmodelmain();
                                        tmf.Col4 = drf["file_path"].ToString();
                                        tmf.Col1 = drf["file_name"].ToString();
                                        tmf.Col2 = drf["col1"].ToString();
                                        tmf.Col3 = drf["rec_id"].ToString();
                                        tmf.Col97 = drf["rec_id"].ToString();
                                        tmf.Col5 = drf["description"].ToString();
                                        des = drf["description"].ToString();
                                        title = drf["Col3"].ToString();
                                        tmf.Col6 = drf["col3"].ToString();
                                        tmf.Col7 = drf["col2"].ToString();
                                        //model[0].Col98 = "(client_id||client_unit_id|| vch_num|| to_char(vch_date, 'yyyymmdd')|| type) = '" + drf["fstr"].ToString() + "'";
                                        ltmf.Add(tmf);
                                    }
                                }
                                model[0].LTM1 = ltmf;
                            }
                            #endregion
                            break;
                        case "MANUF":
                            mq = "select fd.vch_num as doc_no,fd.S_OPT_PUR as fdr_no,to_char(fd.vch_date,'" + sgen.Getsqldateformat() + "') as fd_date,mf.c_name as manufecturer,fd.SWT_FOLIO from trans_req fd inner" +
                                " join clients_mst mf on mf.vch_num=fd.RDP_FOLIO and mf.type='BCD' and substr(mf.vch_num,0,3)='303' where " +
                                "(fd.client_unit_id||fd.vch_num||to_char(fd.vch_date,'yyyymmdd')||fd.type) = '" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                mod1.Add(new SelectListItem { Text = "Cumulative", Value = "001" });
                                mod1.Add(new SelectListItem { Text = "Payout", Value = "002" });
                                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
                                model[0].Col34 = dtt.Rows[0]["manufecturer"].ToString();
                                model[0].Col21 = dtt.Rows[0]["fdr_no"].ToString();
                                model[0].Col22 = dtt.Rows[0]["fd_date"].ToString();
                                model[0].Col35 = dtt.Rows[0]["doc_no"].ToString();
                                String[] L1 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["SWT_FOLIO"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems1 = L1;
                            }
                            break;
                        case "PARENT":
                            mq = "select a.parent_id,a.vch_num,b.c_name as Parent_Account,a.c_name as Account_Name,(case when b.panno='AAAAA0000A' then '' else b.panno end) panno,(case when a.cpcont='0000000000' then '' else a.cpcont end) cpcont," +
                                "(case when  a.cpemail='ab@ab.ab' then '' else a.cpemail end ) cpemail,((replace(a.cpname, '0', '-') || ' ' || replace(a.cp_mname, '0', '') || ' ' || " +
                                "replace(a.cp_lname, '0', ''))) contact_person from clients_mst a " +
                                " left join clients_mst b on a.parent_id=b.vch_num  and a.client_unit_id=b.client_unit_id and b.type = 'BCD'" +
                                " where(a.client_id || a.client_unit_id || a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.type) = '" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                mod2.Add(new SelectListItem { Text = "On Time", Value = "001" });
                                mod2.Add(new SelectListItem { Text = "Before Maturity", Value = "002" });
                                TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2;
                                mod1.Add(new SelectListItem { Text = "Cumulative", Value = "001" });
                                mod1.Add(new SelectListItem { Text = "Payout", Value = "002" });
                                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
                                model = getnew(model);
                                model[0].Col24 = sgen.server_datetime_local(userCode);
                                model[0].Col17 = dtt.Rows[0]["Parent_Account"].ToString();
                                model[0].Col18 = dtt.Rows[0]["parent_id"].ToString();
                                model[0].Col19 = dtt.Rows[0]["Account_Name"].ToString();
                                model[0].Col20 = dtt.Rows[0]["vch_num"].ToString();
                                if (model[0].SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
                                if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };

                                Make_query("fas_fd", "Select FDR No.", "MANUF", "1", model[0].Col18, "");
                                ViewBag.scripCall = "callFoo('Select FDR No.');";
                            }
                            break;
                        case "FDEL":
                            string fid = sgen.GetSession(MyGuid, "delid").ToString();
                            res = sgen.execute_cmd(userCode, "Delete from file_tab WHERE rec_id='" + fid + "' and type='BFD' and client_id='"
              + clientid_mst + "' and client_unit_id='" + unitid_mst + "'");
                            sgen.SetSession(MyGuid, "delid", null);
                            if (res)
                            {
                                var LTM = model[0].LTM1;
                                for (int d = 0; d < LTM.Count; d++)
                                {
                                    var id = LTM[d].Col3;
                                    if (id == fid) { model[0].LTM1.RemoveAt(d); }
                                }
                            }
                            break;
                    }
                    break;
                #endregion
                #region lead visit
                case "ld_visit":
                    switch (btnval.ToUpper())
                    {
                        case "CLIENT":
                            //mq = "select cs.STD_CODE country_code, cp.bsn_type,cp.type, cp.panno as cust_id," +
                            //    " cp.vch_num,cp.c_name,cs.alpha_2 as country_id,cs.country_name,cs.state_gst_code as state_id ,cs.state_name," +
                            //    "cp.city,cs.city_name , cp.pincode, cp.addr,(cpname || ' ' || replace(cp_mname, '0', '') || ' ' || replace(cp_lname, '0', '')) contact_person ,cp.cpdept ,cp.cpdesig," +
                            //    "cp.cpemail,cp.cpcont,cp.cpaltcont,cp.cplandno,cp.cpaddr," +
                            //    "to_char(cp.dob,  '" + sgen.Getsqldateformat() + "') as dob," +
                            //    "to_char(cp.doa,  '" + sgen.Getsqldateformat() + "')" +
                            //    " as doa from clients_mst cp left join country_state cs on cs.rec_id = cp.city where" +
                            //    " cp.client_id|| cp.client_unit_id|| cp.vch_num|| to_char(cp.vch_date, 'yyyymmdd')|| cp.type='" + URL + "'";
                            mq = "select cp.vch_num,cp.c_name, cp.addr,(case when cp.cpcont='0000000000' then '' else cp.cpcont end) cpcont from clients_mst cp where cp.client_id|| cp.client_unit_id|| cp.vch_num|| to_char(cp.vch_date, 'yyyymmdd')|| cp.type='" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                model[0].Col18 = dtt.Rows[0]["vch_num"].ToString();
                                //sgen.SetSession(MyGuid, "S_Account", dtt.Rows[0]["vch_num"].ToString());
                                model[0].Col17 = dtt.Rows[0]["c_name"].ToString();
                                model[0].Col19 = dtt.Rows[0]["addr"].ToString();
                                model[0].Col20 = dtt.Rows[0]["cpcont"].ToString();
                            }
                            break;
                        case "EDIT":
                        case "VIEW":
                            mq = "select a.*," +
                                "to_char(a.date1, '" + sgen.Getsqldateformat() + "') datea1," +
                                " to_char(a.date2, '" + sgen.Getsqldateformat() + "') datea2," +
                                " to_char(a.date3, '" + sgen.Getsqldateformat() + "') datea3," +
                                " to_char(a.date4, '" + sgen.Getsqldateformat() + "') datea4," +
                                "b.c_name as Account_Name,b.addr,(case when b.cpcont='0000000000' then '' else b.cpcont end) cpcont from kc_tab a inner join clients_mst b" +
                                " on a.col1=b.vch_num and a.client_id=b.client_id and a.client_unit_id=b.client_unit_id and b.type='BCD' where " +
                                " a.client_id|| a.client_unit_id|| a.vch_num|| to_char(a.vch_date, 'yyyymmdd')|| a.type='" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                model = getedit(model, dtt, URL);
                                model[0].Col16 = dtt.Rows[0]["vch_num"].ToString();
                                model[0].Col12 = dtt.Rows[0]["type"].ToString();
                                model[0].Col17 = dtt.Rows[0]["Account_Name"].ToString();
                                model[0].Col18 = dtt.Rows[0]["col1"].ToString();
                                model[0].Col19 = dtt.Rows[0]["addr"].ToString();
                                model[0].Col20 = dtt.Rows[0]["cpcont"].ToString();
                                model[0].Col21 = dtt.Rows[0]["col21"].ToString();
                                model[0].Col22 = dtt.Rows[0]["datea1"].ToString();
                                model[0].Col23 = dtt.Rows[0]["datea2"].ToString();
                                model[0].Col24 = dtt.Rows[0]["col3"].ToString();
                                model[0].Col25 = dtt.Rows[0]["col4"].ToString();
                                model[0].Col26 = dtt.Rows[0]["col5"].ToString();
                                model[0].Col27 = dtt.Rows[0]["col22"].ToString();
                                model[0].Col28 = dtt.Rows[0]["col7"].ToString();
                                model[0].Col29 = dtt.Rows[0]["col23"].ToString();
                                model[0].Col30 = dtt.Rows[0]["col24"].ToString();
                                model[0].Col31 = dtt.Rows[0]["col10"].ToString();
                                model[0].Col32 = dtt.Rows[0]["col25"].ToString();
                                model[0].Col33 = dtt.Rows[0]["col12"].ToString();
                                model[0].Col34 = dtt.Rows[0]["col31"].ToString();
                                model[0].Col35 = dtt.Rows[0]["col13"].ToString();
                                model[0].Col36 = dtt.Rows[0]["col14"].ToString();
                                model[0].Col37 = dtt.Rows[0]["col15"].ToString();
                                model[0].Col38 = dtt.Rows[0]["col32"].ToString();
                                model[0].Col39 = dtt.Rows[0]["col16"].ToString();
                                model[0].Col40 = dtt.Rows[0]["datea3"].ToString();
                                model[0].Col41 = dtt.Rows[0]["col11"].ToString();
                            }
                            break;

                        case "PRINT":

                            // reena 2 line done
                            mq = "select a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type as fstr," +
                               " a.vch_num Doc_No, to_char(convert_tz(a.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') Doc_Date ," +
                               "a.col21 add_to_be_visit,a.col3 as archetect_if_any,a.col4 as visiting_chrgs,a.col5 as " +
                               "rfrgtr_detailing,a.col22 dishwash_detailing,a.col7 as cylinder,a.col23 as sink_detailing,a.col24 " +
                               "apliances_detailing, a.col10 as directions,a.col25 as elevation,a.col12 as cieling_height,a.col31 " +
                               "as remarks_if_any1,a.col13 as granite_clear_height,a.col14 as ground_platform,a.col15 as elevations" +
                               ",a.col32 as remarks_if_any2,a.col16 as visit_done_by,to_char(a.date1, '" + sgen.Getsqldateformat() + "') date_of_login," +
                                " to_char(a.date2, '" + sgen.Getsqldateformat() + "') date_of_visit," +
                                " to_char(a.date3, '" + sgen.Getsqldateformat() + "') visit_date,b.c_name as client_Name,b.addr as address,b.cpcont as Cont_no,a.col11 as visit_time from kc_tab a left join clients_mst b on a.col1 = b.vch_num and " +
                               "a.client_id = b.client_id and a.client_unit_id = b.client_unit_id and b.type = 'BCD' where a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type = '" + URL + "'";

                            DataTable dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                sgen.open_report_bydt_xml(userCode, dt, "leadvisit", "Lead Visit Entry");
                                ViewBag.scripCall += "showRptnew('Lead Visit Entry');";
                                //ViewBag.scripCall = "OpenSingle('../../../../../erp/schoolReports_Rpts/Filter_Report_xml.aspx','95%','900px','Reports');";
                            }

                            break;

                        case "PRINTPARTY":
                            mq = "select cs.STD_CODE country_code, cp.bsn_type,cp.type, cp.panno as cust_id," +
                               " cp.vch_num,cp.c_name,cs.alpha_2 as country_id,cs.country_name,cs.state_gst_code as state_id ,cs.state_name," +
                               "cp.city,cs.city_name , cp.pincode, cp.addr,(cpname || ' ' || replace(cp_mname, '0', '') || ' ' || replace(cp_lname, '0', '')) contact_person ,cp.cpdept ,cp.cpdesig," +
                               "cp.cpemail,cp.cpcont,cp.cpaltcont,cp.cplandno,cp.cpaddr," +
                               "to_char(cp.dob,  '" + sgen.Getsqldateformat() + "') as dob," +
                               "to_char(cp.doa,  '" + sgen.Getsqldateformat() + "')" +
                               " as doa from clients_mst cp left join country_state cs on cs.rec_id = cp.city where" +
                               " cp.client_id|| cp.client_unit_id|| cp.vch_num|| to_char(cp.vch_date, 'yyyymmdd')|| cp.type='" + URL + "'";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                sgen.open_report_bydt_xml(userCode, dt, "leadvisit2", "Lead Visit Entry");
                                ViewBag.scripCall += "showRptnew('Lead Visit Entry');";

                                //ViewBag.scripCall = "OpenSingle('../../../../../erp/schoolReports_Rpts/Filter_Report_xml.aspx','95%','900px','Reports');";
                            }

                            break;

                        case "PRINTMSG":
                            mq = "SELECT MASTER_ID,MASTER_NAME FROM (select '111' as master_id,'Filled Form' as master_name from dual union all select '222' as master_id,'Blank Form' master_name from dual) where master_id = '" + URL + "'";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                if (dt.Rows[0]["MASTER_ID"].ToString().Equals("111"))
                                {
                                    Make_query("ld_visit", "Select Entry To Print", "PRINT", "1", "", "");
                                    ViewBag.scripCall = "callFoo('Select Entry To Print');";
                                }
                                else
                                {
                                    Make_query("ld_visit", "Select Party", "PRINTPARTY", "1", "", "");
                                    ViewBag.scripCall = "callFoo('Select Party');";
                                }
                            }

                            break;
                    }
                    break;
                #endregion
                #region mail master
                case "mail_mst":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            mq = "select (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.client_id,a.client_unit_id," +
                                "a.vch_num mail_id,a.head_text as mail_name,a.rec_id,a.ent_by,a.ent_date,b.vch_num as user_id," +
                                "b.first_name || ' ' || replace(b.middle_name, '0', '') || '' || replace(b.last_name, '0', '') as user_name,b.email,b.con_number,b.per_address,a.mail_cc,a.body_text from alerts a " +
                                  "inner join user_details b on a.ref_code1 = b.vch_num and b.type = 'CPR' where (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) = '" + URL + "'";

                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                model = getedit(model, dtt, URL);
                                model[0].Col16 = dtt.Rows[0]["mail_id"].ToString();
                                model[0].Col17 = dtt.Rows[0]["mail_name"].ToString();
                                model[0].Col18 = dtt.Rows[0]["mail_cc"].ToString();
                                model[0].Col19 = dtt.Rows[0]["body_text"].ToString();
                                model[0].dt1 = model[0].dt1.Clone();
                                for (int i = 0; i < dtt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["SNo"] = i + 1;
                                    dr["User_code"] = dtt.Rows[i]["user_id"].ToString();
                                    dr["User_name"] = dtt.Rows[i]["user_name"].ToString();
                                    dr["Address"] = dtt.Rows[i]["per_address"].ToString();
                                    dr["Mobile"] = dtt.Rows[i]["con_number"].ToString();
                                    dr["Email_address"] = dtt.Rows[i]["email"].ToString();
                                    model[0].dt1.Rows.Add(dr);
                                }
                            }
                            break;
                        case "USER":
                            mq = "select (a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.type) as fstr,a.vch_num as" +
                                " id,a.first_name||' '||replace(a.middle_name,'0','')||''||replace(a.last_name,'0','') as user_name,a.email,a.con_number" +
                                ",a.per_address from user_details a where a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.type in ('" + URL + "')";
                            DataTable dt = sgen.getdata(userCode, mq);
                            if (model[0].dt1.Rows[0]["User_code"].ToString().Trim().Equals("-")) { model[0].dt1.Rows.RemoveAt(0); }
                            for (int i = 0; i < dt.Rows.Count; i++)
                            {
                                DataRow dr = model[0].dt1.NewRow();
                                dr["select_"] = dt.Rows[i]["fstr"].ToString();
                                dr["SNo"] = i + 1;
                                dr["User_code"] = dt.Rows[i]["id"].ToString();
                                dr["User_name"] = dt.Rows[i]["user_name"].ToString();
                                dr["Address"] = dt.Rows[i]["per_address"].ToString();
                                dr["Mobile"] = dt.Rows[i]["con_number"].ToString();
                                dr["Email_address"] = dt.Rows[i]["email"].ToString();
                                model[0].dt1.Rows.Add(dr);
                            }
                            break;
                    }
                    break;
                #endregion
                #region automail_temp
                case "automail_tmp":
                    switch (btnval.ToUpper())
                    {
                        case "VIEW":
                        case "EDIT":
                            mq = "select a.vch_num,a.rec_id, a.client_id,a.client_unit_id,a.ent_by," +
                                " to_char(convert_tz(a.ent_date, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') ent_date," +
                                "a.col1,a.col3,a.col2,a.col8,a.col7,a.col9,a.col10,a.ref_code,a.col13,a.col5,a.col6" +
                                "  from enx_tab a where (a.client_id||a.client_unit_id|| a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.type||trim(a.col13)) = '" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "EDMODE", "Y");
                                model[0].Col1 = dtt.Rows[0]["client_id"].ToString();
                                model[0].Col2 = dtt.Rows[0]["client_unit_id"].ToString();
                                model[0].Col3 = dtt.Rows[0]["ent_by"].ToString();
                                model[0].Col4 = dtt.Rows[0]["ent_date"].ToString();
                                model[0].Col7 = dtt.Rows[0]["rec_id"].ToString();
                                model[0].Col8 = "client_id||client_unit_id||vch_num|| to_char(vch_date, 'yyyymmdd')|| type||col13 = '" + URL + "'";
                                model[0].Col13 = "Update";
                                model[0].Col121 = "U";
                                model[0].Col122 = "<u>U</u>pdate";
                                model[0].Col16 = dtt.Rows[0]["vch_num"].ToString();
                                model[0].Col20 = dtt.Rows[0]["col1"].ToString();
                                model[0].Col19 = dtt.Rows[0]["col3"].ToString();
                                model[0].Col17 = dtt.Rows[0]["col8"].ToString();
                                model[0].Col18 = dtt.Rows[0]["col7"].ToString();
                                model[0].Col21 = dtt.Rows[0]["col2"].ToString();
                                model[0].Col22 = dtt.Rows[0]["col13"].ToString();
                                model[0].Col23 = dtt.Rows[0]["col5"].ToString();
                                model[0].Col24 = dtt.Rows[0]["col6"].ToString();
                                model[0].Col25 = dtt.Rows[0]["ref_code"].ToString();
                                model[0].Chk1 = dtt.Rows[0]["col9"].ToString() == "Y" ? true : false;
                                model[0].Chk2 = dtt.Rows[0]["col10"].ToString() == "Y" ? true : false;

                                #region attachment
                                DataTable dtf = new DataTable();
                                dtf = sgen.getdata(userCode, "select client_id||client_unit_id||vch_num||to_char(vch_date,'yyyymmdd')||type as fstr, rec_id,file_name,file_path,col1,col2,description,Col3 from file_tab where vch_num='" + dtt.Rows[0]["vch_num"].ToString() + "' and type in " +
                                    "('" + tm.Col12 + "','DD" + model[0].Col12 + "') and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "' and col1='Mail_temp'");
                                List<Tmodelmain> ltmf = new List<Tmodelmain>();
                                string des = "", title = "", f_recid = "";
                                if (dtf.Rows.Count > 0)
                                {
                                    model[0].Col31 = dtf.Rows[0]["col3"].ToString();
                                    model[0].Col32 = dtf.Rows[0]["description"].ToString();
                                    foreach (DataRow drf in dtf.Rows)
                                    {
                                        Tmodelmain tmf = new Tmodelmain();
                                        tmf.Col4 = drf["file_path"].ToString();
                                        tmf.Col1 = drf["file_name"].ToString();
                                        tmf.Col2 = drf["col1"].ToString();
                                        tmf.Col3 = drf["rec_id"].ToString();
                                        tmf.Col97 = drf["rec_id"].ToString();
                                        title = drf["Col3"].ToString();
                                        tmf.Col7 = drf["col2"].ToString();
                                        ltmf.Add(tmf);
                                    }
                                }
                                model[0].LTM1 = ltmf;
                                #endregion
                            }
                            break;
                        case "NEW":
                            mq = "select * from (select '011' as master_id, 'PROSPECT MAIL (1st)' as set_For from dual union all select '012' as master_id," +
                                " 'PROSPECT MAIL (2nd)' as set_For from dual union all select '013' as master_id,'PROSPECT MAIL (3rd)' as set_For from dual union all select '014' as master_id,'NEW ACCOUNT (SMALL)' as set_For from dual union all select '015' as master_id,'CREATE ORDER (CRM)' as set_For from dual" +
                                " union all select '016' as master_id,'ORDER STATUS (CRM)' as set_For from dual) where master_id='" + URL + "'";

                            DataTable dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "EDMODE", "N");
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                                ViewBag.scripCall = "enableForm();";
                                model[0].Col22 = dt.Rows[0]["master_id"].ToString();
                                model[0].Col21 = dt.Rows[0]["set_For"].ToString();
                                mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12 + "' " + model[0].Col11.Trim() + "";
                                vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                                model[0].Col16 = vch_num;
                            }
                            break;

                        case "FDEL":
                            string fid = sgen.GetSession(MyGuid, "delid").ToString();
                            res = sgen.execute_cmd(userCode, "Delete from file_tab WHERE rec_id='" + fid + "' and type='AMT' and client_id='"
              + clientid_mst + "' and client_unit_id='" + unitid_mst + "'");
                            sgen.SetSession(MyGuid, "delid", null);
                            if (res)
                            {
                                var LTM = model[0].LTM1;
                                for (int d = 0; d < LTM.Count; d++)
                                {
                                    var id = LTM[d].Col3;
                                    if (id == fid) { model[0].LTM1.RemoveAt(d); }
                                }
                            }
                            break;
                    }
                    break;
                #endregion
                #region create ticket
                case "cr_ticket":
                    switch (btnval.ToUpper())
                    {
                        case "CONTACT":
                            mq = "select  (case when (a.cplandno='0000000000' or a.cplandno='0') then '' else a.cplandno end  ) cplandno, b.c_name, a.vch_num,a.ref_code, ((replace(a.cpname, '0', '-') || ' ' || replace(a.cp_mname, '0', '') || ' ' || replace(a.cp_lname, '0', ''))) contact_person," +
                                "  (case when (a.cpemail='ab@ab.ab' or a.cpemail='0') then '' else a.cpemail end) cpemail from clients_mst a  inner join clients_mst b on a.ref_code=b.vch_num  and find_in_set(b.client_unit_id,'" + unitid_mst + "')=1 " +
                                "  where (a.ref_code||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type)='" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                model[0].Col17 = dtt.Rows[0]["vch_num"].ToString();
                                model[0].Col18 = dtt.Rows[0]["ref_code"].ToString();
                                model[0].Col19 = dtt.Rows[0]["contact_person"].ToString();
                                model[0].Col22 = dtt.Rows[0]["cpemail"].ToString();
                                model[0].Col23 = dtt.Rows[0]["cplandno"].ToString();
                                model[0].Col24 = dtt.Rows[0]["c_name"].ToString();
                                mod7 = new List<SelectListItem>();
                                //mq = "select vch_num, (vch_num||'-'||to_char(vch_date,'" + sgen.Getsqldateformat() + "')) as momdt from lead_master where type='MOM' and client_unit_id='"+unitid_mst+ "' and cust_id='"+ model[0].Col18 + "' and cp_fname='"+ model[0].Col17 + "'";
                                mq = "select vch_num, (vch_num||'-'||to_char(vch_date,'" + sgen.Getsqldateformat() + "')) as momdt from lead_master where type='MOM' " +
                                    "and client_unit_id = '" + unitid_mst + "' and cust_id in (select vch_num from clients_mst   where" +
                                    "   parent_id = (select parent_id from clients_mst where vch_num = '" + model[0].Col18 + "' and" +
                                    " find_in_set(client_unit_id,'" + unitid_mst + "')= 1) and length(vch_num)= 9) and find_in_set(client_unit_id,'" + unitid_mst + "')= 1 order by vch_num desc";
                                DataTable dt = sgen.getdata(userCode, mq);
                                if (dt.Rows.Count > 0)
                                {
                                    TempData[MyGuid + "_TList7"] = model[0].TList7 = mod7 = sgen.dt_to_selectlist(dt);
                                }

                                else
                                {
                                    TempData[MyGuid + "_TList7"] = model[0].TList7 = mod7 = sgen.dt_to_selectlist(dt);
                                }

                                if (model[0].Chk3 == true)
                                {
                                    model[0].Chk3 = true;
                                    ViewBag.scripcall = "$('[id *= mom]').show();";
                                }

                            }
                            break;

                        case "EDIT":
                        case "VIEW":
                            mq = "select to_char(a.vch_date,'" + sgen.Getsqldateformat() + "') vch_date, (case when (c.cplandno='0000000000' or c.cplandno='0' ) then '' else c.cplandno end  ) cplandno,  a.INTG_ID,  b.c_name account_name, ((replace(c.cpname, '0', '-') || ' ' || replace(c.cp_mname, '0', '') || ' ' || replace(c.cp_lname, '0', ''))) contact_person," +
                                " (case when (c.cpemail='ab@ab.ab'  or c.cpemail='0')then '' else c.cpemail end) cpemail, a.vch_num,a.client_id,a.client_unit_id,a.ent_by,a.ent_date,a.CP_FNAME,a.cust_id,a.ld_owner,a.ld_status,a.ld_source," +
                                "a.ld_product,a.bsn_type,a.remark,a.address ,a.ORD_SOURCE from lead_master a " +
                                " inner join clients_mst c on a.cp_fname=c.vch_num and a.cust_id=c.ref_code and a.client_unit_id=c.client_unit_id  " +
                                " inner join clients_mst b on a.cust_id = b.vch_num and find_in_set(b.client_unit_id,'" + unitid_mst + "')=1   where (a.client_id||a.client_unit_id|| a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.type)='" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.tickettype(userCode, unitid_mst);     // ticket type
                                TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2 = cmd_Fun.ticketstatus(userCode, unitid_mst);     //ticket status
                                TempData[MyGuid + "_TList3"] = model[0].TList3 = mod3 = cmd_Fun.ticketpriority(userCode, unitid_mst); //ticket priority    
                                TempData[MyGuid + "_TList4"] = model[0].TList4 = mod4 = cmd_Fun.ticketgroup(userCode, unitid_mst);     //ticket grp
                                TempData[MyGuid + "_TList5"] = model[0].TList5 = mod5 = cmd_Fun.username_mod(userCode, m_module3);     //agent
                                TempData[MyGuid + "_TList8"] = model[0].TList8 = mod8 = cmd_Fun.ticketsrc(userCode, unitid_mst);     //ticket source
                                sgen.SetSession(MyGuid, "EDMODE", "Y");
                                model[0].Col1 = dtt.Rows[0]["client_id"].ToString();
                                model[0].Col2 = dtt.Rows[0]["client_unit_id"].ToString();
                                model[0].Col3 = dtt.Rows[0]["ent_by"].ToString();
                                model[0].Col4 = dtt.Rows[0]["ent_date"].ToString();


                                model[0].Col8 = "client_id||client_unit_id||vch_num|| to_char(vch_date, 'yyyymmdd')|| type = '" + URL + "'";
                                model[0].Col13 = "Update";
                                model[0].Col121 = "U";
                                model[0].Col122 = "<u>U</u>pdate";
                                model[0].Col123 = "Update & Ne<u>w</u>";
                                model[0].Col16 = dtt.Rows[0]["vch_num"].ToString();
                                model[0].Col29 = dtt.Rows[0]["vch_date"].ToString();

                                model[0].Col24 = dtt.Rows[0]["account_name"].ToString();
                                model[0].Col17 = dtt.Rows[0]["CP_FNAME"].ToString();
                                model[0].Col18 = dtt.Rows[0]["cust_id"].ToString();
                                model[0].Col19 = dtt.Rows[0]["contact_person"].ToString();
                                model[0].Col20 = dtt.Rows[0]["remark"].ToString();
                                model[0].Col21 = dtt.Rows[0]["address"].ToString();
                                model[0].Col22 = dtt.Rows[0]["cpemail"].ToString();
                                model[0].Col23 = dtt.Rows[0]["cplandno"].ToString();
                                String[] L1 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["ld_owner"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems1 = L1;
                                String[] L2 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["ld_status"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems2 = L2;
                                String[] L3 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["ld_source"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems3 = L3;
                                String[] L4 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["ld_product"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems4 = L4;
                                String[] L5 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["bsn_type"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems5 = L5;
                                mod7 = new List<SelectListItem>();

                                mq = "select vch_num, (vch_num||'-'||to_char(vch_date,'" + sgen.Getsqldateformat() + "')) as momdt from lead_master where type='MOM' " +
                                     "and client_unit_id = '" + unitid_mst + "' and cust_id in (select vch_num from clients_mst   where" +
                                     "   parent_id = (select parent_id from clients_mst where vch_num = '" + model[0].Col18 + "' and" +
                                     " find_in_set(client_unit_id,'" + unitid_mst + "')= 1) and length(vch_num)= 9) and find_in_set(client_unit_id,'" + unitid_mst + "')= 1 order by vch_num desc";
                                DataTable dt = sgen.getdata(userCode, mq);
                                if (dt.Rows.Count > 0)
                                {
                                    TempData[MyGuid + "_TList7"] = model[0].TList7 = mod7 = sgen.dt_to_selectlist(dt);
                                }

                                else
                                {
                                    TempData[MyGuid + "_TList7"] = model[0].TList7 = mod7 = sgen.dt_to_selectlist(dt);
                                }

                                String[] L7 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["INTG_ID"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems7 = L7;

                                String[] L8 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["ORD_SOURCE"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems8 = L8;

                                if (dtt.Rows[0]["INTG_ID"].ToString() != "0")
                                {
                                    model[0].Chk3 = true;
                                    ViewBag.scripcall = "$('[id *= mom]').show();";
                                }


                                //model[0].Col28 = dtt.Rows[0]["ACCTYPE"].ToString();

                                #region attachment
                                DataTable dtf = new DataTable();
                                dtf = sgen.getdata(userCode, "select rec_id,file_name,file_path,col1,col2,description,Col3 from file_tab where vch_num='" + dtt.Rows[0]["vch_num"].ToString() + "' and type in " +
                                    "('" + tm.Col12 + "','DD" + model[0].Col12 + "') and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "' and col1='TCK'");
                                List<Tmodelmain> ltmf = new List<Tmodelmain>();
                                string des = "", title = "", f_recid = "";
                                if (dtf.Rows.Count > 0)
                                {
                                    ;
                                    foreach (DataRow drf in dtf.Rows)
                                    {
                                        Tmodelmain tmf = new Tmodelmain();
                                        tmf.Col4 = drf["file_path"].ToString();
                                        tmf.Col1 = drf["file_name"].ToString();
                                        tmf.Col2 = drf["col1"].ToString();
                                        tmf.Col3 = drf["rec_id"].ToString();

                                        title = drf["Col3"].ToString();
                                        tmf.Col7 = drf["col2"].ToString();
                                        ltmf.Add(tmf);
                                    }
                                }
                                model[0].LTM1 = ltmf;
                                #endregion
                            }


                            break;

                        case "FDEL":
                            string fid = sgen.GetSession(MyGuid, "delid").ToString();
                            res = sgen.execute_cmd(userCode, "Delete from file_tab WHERE rec_id='" + fid + "'  and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "'");
                            sgen.SetSession(MyGuid, "delid", null);
                            if (res)
                            {
                                var LTM = model[0].LTM1;
                                for (int d = 0; d < LTM.Count; d++)
                                {
                                    var id = LTM[d].Col3;
                                    if (id == fid) { model[0].LTM1.RemoveAt(d); }
                                }
                            }
                            break;

                    }
                    break;
                #endregion
                #region Ticket Detail
                case "ticket_detail":
                    switch (btnval.ToUpper())
                    {
                        case "CONTACT":
                            mq = "select  a.cplandno, b.c_name, a.vch_num,a.ref_code, ((replace(a.cpname, '0', '-') || ' ' || replace(a.cp_mname, '0', '') || ' ' || replace(a.cp_lname, '0', ''))) contact_person," +
                                "  a.cpemail from clients_mst a  inner join clients_mst b on a.ref_code=b.vch_num and find_in_set(b.client_unit_id,'" + unitid_mst + "')=1 " +
                                "  where (a.ref_code||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type)='" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                model[0].LTM1[0].Col17 = dtt.Rows[0]["vch_num"].ToString();
                                model[0].LTM1[0].Col18 = dtt.Rows[0]["ref_code"].ToString();
                                model[0].LTM1[0].Col19 = dtt.Rows[0]["contact_person"].ToString();
                                model[0].LTM1[0].Col22 = dtt.Rows[0]["cpemail"].ToString();
                                model[0].LTM1[0].Col23 = dtt.Rows[0]["cplandno"].ToString();
                                model[0].LTM1[0].Col24 = dtt.Rows[0]["c_name"].ToString();
                                mod8 = new List<SelectListItem>();
                                // mq = "select vch_num, (vch_num||'-'||to_char(vch_date,'" + sgen.Getsqldateformat() + "')) as momdt from lead_master where type='MOM' and client_unit_id='" + unitid_mst + "' and cust_id='" + model[0].LTM1[0].Col18 + "' and cp_fname='" + model[0].LTM1[0].Col17 + "'";
                                mq = "select vch_num, (vch_num||'-'||to_char(vch_date,'" + sgen.Getsqldateformat() + "')) as momdt from lead_master where type='MOM' " +
                                     "and client_unit_id = '" + unitid_mst + "' and cust_id in (select vch_num from clients_mst   where" +
                                     "   parent_id = (select parent_id from clients_mst where vch_num = '" + model[0].LTM1[0].Col18 + "' and" +
                                     " find_in_set(client_unit_id,'" + unitid_mst + "')= 1) and length(vch_num)= 9) and find_in_set(client_unit_id,'" + unitid_mst + "')= 1 order by vch_num desc";
                                DataTable dt = sgen.getdata(userCode, mq);
                                if (dt.Rows.Count > 0)
                                {
                                    TempData[MyGuid + "_0TList7"] = model[0].LTM1[0].TList7 = mod8 = sgen.dt_to_selectlist(dt);
                                }

                                else
                                {
                                    TempData[MyGuid + "_0TList7"] = model[0].LTM1[0].TList7 = mod8 = sgen.dt_to_selectlist(dt);
                                }

                                if (model[0].Chk3 == true)
                                {
                                    model[0].Chk3 = true;
                                    ViewBag.scripcall = "$('[id *= mom]').show();";
                                }

                            }
                            break;

                        case "EDIT":
                        case "VIEW":
                            mq = "select d.c_name as parent_acc, to_char(a.vch_date,'" + sgen.Getsqldateformat() + "') vch_date, a.ld_product, a.ORD_SOURCE,  a.INTG_ID,  a.lead_con, b.c_name account_name, ((replace(c.cpname, '0', '-') || ' ' || replace(c.cp_mname, '0', '') || ' ' || replace(c.cp_lname, '0', ''))) contact_person," +
                                 " c.cpemail, a.vch_num,a.client_id,a.client_unit_id,a.ent_by,a.ent_date,a.CP_FNAME,a.cust_id,a.ld_owner,a.ld_status,a.ld_source," +
                                 "a.ld_product,a.bsn_type,a.remark,a.address from lead_master a " +
                                 " inner join clients_mst c on a.cp_fname=c.vch_num and a.cust_id=c.ref_code and a.client_unit_id=c.client_unit_id  " +
                                 " inner join clients_mst b on a.cust_id = b.vch_num and find_in_set(b.client_unit_id,'" + unitid_mst + "')=1 " +
                                 " left join clients_mst d on d.vch_num=b.parent_id  and find_in_set(d.client_unit_id,'" + unitid_mst + "')=1 and d.type='BCD'  where (a.client_id||a.client_unit_id|| a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.type)='" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "Ticket_Detail", dtt);
                                sgen.SetSession(MyGuid, "EDMODE", "Y");

                                #region ticket
                                TempData[MyGuid + "_0TList1"] = model[0].LTM1[0].TList1 = mod1 = cmd_Fun.tickettype(userCode, unitid_mst);     // ticket type
                                TempData[MyGuid + "_0TList2"] = model[0].LTM1[0].TList2 = mod2 = cmd_Fun.ticketstatus(userCode, unitid_mst);     //ticket status
                                TempData[MyGuid + "_0TList3"] = model[0].LTM1[0].TList3 = mod3 = cmd_Fun.ticketpriority(userCode, unitid_mst); //ticket priority    
                                TempData[MyGuid + "_0TList4"] = model[0].LTM1[0].TList4 = mod4 = cmd_Fun.ticketgroup(userCode, unitid_mst);     //ticket grp
                                TempData[MyGuid + "_0TList5"] = model[0].LTM1[0].TList5 = mod5 = cmd_Fun.username_mod(userCode, m_module3);     //agent
                                TempData[MyGuid + "_0TList8"] = model[0].LTM1[0].TList8 = mod9 = cmd_Fun.ticketsrc(userCode, unitid_mst);     //ticket source
                                mod8 = new List<SelectListItem>();
                                //mq = "select vch_num, (vch_num||'-'||to_char(vch_date,'" + sgen.Getsqldateformat() + "')) as momdt from lead_master where type='MOM' and client_unit_id='" + unitid_mst + "' and cust_id='" + dtt.Rows[0]["cust_id"].ToString() + "' and cp_fname='" + dtt.Rows[0]["CP_FNAME"].ToString() + "'";
                                mq = "select vch_num, (vch_num||'-'||to_char(vch_date,'" + sgen.Getsqldateformat() + "')) as momdt from lead_master where type='MOM' " +
                                    "and client_unit_id = '" + unitid_mst + "' and cust_id in (select vch_num from clients_mst   where" +
                                    "   parent_id = (select parent_id from clients_mst where vch_num = '" + dtt.Rows[0]["cust_id"].ToString() + "' and" +
                                    " find_in_set(client_unit_id,'" + unitid_mst + "')= 1) and length(vch_num)= 9) and find_in_set(client_unit_id,'" + unitid_mst + "')= 1 order by vch_num desc";
                                DataTable dt = sgen.getdata(userCode, mq);
                                if (dt.Rows.Count > 0)
                                {
                                    TempData[MyGuid + "_0TList7"] = model[0].LTM1[0].TList7 = mod8 = sgen.dt_to_selectlist(dt);
                                }

                                else
                                {
                                    TempData[MyGuid + "_0TList7"] = model[0].LTM1[0].TList7 = mod8 = sgen.dt_to_selectlist(dt);
                                }

                                String[] L7 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["INTG_ID"].ToString()).Distinct()).Split(',');
                                model[0].LTM1[0].SelectedItems7 = L7;

                                if (dtt.Rows[0]["INTG_ID"].ToString() != "0")
                                {
                                    model[0].LTM1[0].Chk3 = true;
                                    ViewBag.scripcall = "$('[id *= mom]').show();";
                                }

                                // model[0].LTM1[0].Col28 = dtt.Rows[0]["ACCTYPE"].ToString();

                                model[0].LTM1[0].Col1 = dtt.Rows[0]["client_id"].ToString();
                                model[0].LTM1[0].Col2 = dtt.Rows[0]["client_unit_id"].ToString();
                                model[0].LTM1[0].Col3 = dtt.Rows[0]["ent_by"].ToString();
                                model[0].LTM1[0].Col4 = dtt.Rows[0]["ent_date"].ToString();

                                model[0].LTM1[0].Col8 = "client_id||client_unit_id||vch_num|| to_char(vch_date, 'yyyymmdd')|| type = '" + URL + "'";
                                model[0].LTM1[0].Col13 = "Update";
                                model[0].LTM1[0].Col121 = "U";
                                model[0].LTM1[0].Col122 = "<u>U</u>pdate";
                                model[0].LTM1[0].Col16 = dtt.Rows[0]["vch_num"].ToString();
                                model[0].LTM1[0].Col15 = MyGuid;
                                model[0].LTM1[0].Col24 = dtt.Rows[0]["account_name"].ToString();
                                model[0].LTM1[0].Col17 = dtt.Rows[0]["CP_FNAME"].ToString();
                                model[0].LTM1[0].Col18 = dtt.Rows[0]["cust_id"].ToString();
                                model[0].LTM1[0].Col19 = dtt.Rows[0]["contact_person"].ToString();
                                model[0].LTM1[0].Col20 = dtt.Rows[0]["remark"].ToString();
                                model[0].LTM1[0].Col21 = dtt.Rows[0]["address"].ToString();
                                model[0].LTM1[0].Col22 = dtt.Rows[0]["cpemail"].ToString();
                                model[0].LTM1[0].Col29 = dtt.Rows[0]["vch_date"].ToString();
                                String[] L1 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["ld_owner"].ToString()).Distinct()).Split(',');
                                model[0].LTM1[0].SelectedItems1 = L1;
                                String[] L2 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["ld_status"].ToString()).Distinct()).Split(',');
                                model[0].LTM1[0].SelectedItems2 = L2;
                                String[] L3 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["ld_source"].ToString()).Distinct()).Split(',');
                                model[0].LTM1[0].SelectedItems3 = L3;
                                String[] L4 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["ld_product"].ToString()).Distinct()).Split(',');
                                model[0].LTM1[0].SelectedItems4 = L4;
                                String[] L5 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["bsn_type"].ToString()).Distinct()).Split(',');
                                model[0].LTM1[0].SelectedItems5 = L5;
                                model[0].LTM1[0].SelectedItems5 = L5;
                                String[] L8 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["ORD_SOURCE"].ToString()).Distinct()).Split(',');
                                model[0].LTM1[0].SelectedItems8 = L8;
                                #endregion
                                #region followup
                                #region  Agent
                                TempData[MyGuid + "_FL_TList1"] = model[0].LTM2[0].TList1 = mod6 = cmd_Fun.username_mod(userCode, m_module3);
                                model[0].LTM2[0].SelectedItems1 = new string[] { "" };
                                #endregion
                                #region  Next Action
                                TempData[MyGuid + "_FL_TList2"] = model[0].LTM2[0].TList2 = mod7 = cmd_Fun.nextaction(userCode, unitid_mst);

                                model[0].LTM2[0].SelectedItems2 = new string[] { "" };

                                #endregion
                                #region  closed or reopen by
                                TempData[MyGuid + "_FL_TList3"] = model[0].LTM2[0].TList3 = mod10 = cmd_Fun.username_mod(userCode, m_module3);
                                model[0].LTM2[0].SelectedItems3 = new string[] { "" };
                                #endregion
                                #region  ticket group
                                TempData[MyGuid + "_FL_TList4"] = model[0].LTM2[0].TList4 = mod11 = cmd_Fun.ticketgroup(userCode, unitid_mst);
                                model[0].LTM2[0].SelectedItems4 = new string[] { "" };
                                #endregion
                                if (dtt.Rows[0]["lead_con"].ToString().Equals("C"))
                                {
                                    model[0].LTM2[0].Col27 = "Re-Opened";
                                    model[0].LTM2[0].Col28 = "Reason Of Re-Open";
                                }
                                else
                                {
                                    model[0].LTM2[0].Col27 = "Closed";
                                    model[0].LTM2[0].Col28 = "Reason Of Closing";
                                }

                                String[] L6 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["bsn_type"].ToString()).Distinct()).Split(',');
                                model[0].LTM2[0].SelectedItems1 = L6;

                                String[] L10 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["bsn_type"].ToString()).Distinct()).Split(',');
                                model[0].LTM2[0].SelectedItems3 = L10;

                                String[] L11 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["ld_product"].ToString()).Distinct()).Split(',');
                                model[0].LTM2[0].SelectedItems4 = L11;

                                model[0].LTM2[0].Col19 = dtt.Rows[0]["vch_num"].ToString();
                                model[0].LTM2[0].Col18 = sgen.server_datetime_local(userCode);
                                mq = "select a.col8, a.col5, a.vch_num ,a.col4 as reason ,col12 as closed, a.col1 as rmk,to_char(convert_tz(a.date1,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') as date1" +
                                    " ,to_char(convert_tz(a.date2,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') as date2 ,first_name||' '||replace(middle_name,'0','')||" +
                                    "''||replace(last_name,'0','') as user_name , n.master_name as nxt_fl from enx_tab2 a left join user_details ud on a.col5 = " +
                                    " ud.vch_num left join master_setting n on n.master_id = a.col7 and n.type = 'NAM' and " +
                                    "find_in_set(n.client_unit_id, a.client_unit_id)= 1 where a.type = 'TCK' and a.client_unit_id='" + unitid_mst + "' " +
                                    "and a.col2='" + dtt.Rows[0]["vch_num"].ToString() + "' order by a.vch_num desc";
                                var tmm = model.FirstOrDefault();
                                DataTable dtf = new DataTable();
                                dtf = sgen.getdata(userCode, mq);
                                if (dtf.Rows.Count > 0)
                                {
                                    model[0].LTM2 = new List<Tmodelmain>();
                                    string assign = dtf.Rows[0]["col5"].ToString();
                                    for (int i = 0; i < dtf.Rows.Count; i++)
                                    {
                                        Tmodelmain tltm2 = new Tmodelmain();
                                        tltm2.Col18 = sgen.server_datetime_local(userCode);
                                        tltm2.Col19 = dtt.Rows[0]["vch_num"].ToString();
                                        //tltm2.Col20 = dtf.Rows[0]["date1"].ToString();
                                        tltm2.Col32 = dtf.Rows[0]["date1"].ToString();
                                        if ((dtf.Rows[i]["col8"].ToString() != null) && (dtf.Rows[i]["col8"].ToString() != "0"))
                                        {
                                            tltm2.Col33 = dtf.Rows[i]["col8"].ToString();
                                        }
                                        tltm2.Col21 = dtf.Rows[i]["user_name"].ToString();

                                        if (dtf.Rows[i]["closed"].ToString() == "Y")
                                        {
                                            tltm2.Col23 = "(Lead Is Closed ) " + dtf.Rows[i]["reason"].ToString();
                                        }
                                        else if (dtf.Rows[i]["closed"].ToString() == "R")
                                        {
                                            tltm2.Col23 = "(Lead Is Re-Opened ) " + dtf.Rows[i]["reason"].ToString();
                                        }
                                        else
                                        {
                                            tltm2.Col23 = dtf.Rows[i]["rmk"].ToString();
                                        }
                                        if (dtf.Rows[i]["date2"].ToString() != "01/01/1900")
                                        {
                                            tltm2.Col24 = dtf.Rows[i]["date2"].ToString();
                                        }
                                        tltm2.Col25 = dtf.Rows[i]["nxt_fl"].ToString();
                                        tltm2.TList1 = mod6;
                                        tltm2.SelectedItems1 = System.String.Join(",", assign).Split(',');
                                        tltm2.TList2 = mod7;
                                        tltm2.SelectedItems3 = new string[] { "" };
                                        if (dtt.Rows[0]["lead_con"].ToString().Equals("C"))
                                        {
                                            tltm2.Col27 = "Re-Opened";
                                            tltm2.Col28 = "Reason Of Re-Open";
                                        }
                                        else
                                        {
                                            tltm2.Col27 = "Closed";
                                            tltm2.Col28 = "Reason Of Closing";
                                        }
                                        model[0].LTM2.Add(tltm2);
                                    }
                                }
                                model[0].LTM2[0].Col29 = dtt.Rows[0]["parent_acc"].ToString();
                                model[0].LTM2[0].Col30 = dtt.Rows[0]["account_name"].ToString();
                                model[0].LTM2[0].Col18 = sgen.server_datetime_local(userCode);
                                model[0].LTM2[0].Col20 = sgen.server_datetime_local(userCode);
                                #endregion


                            }
                            break;


                    }
                    break;
                #endregion
                #region minutes of meeting
                case "mom":
                    switch (btnval.ToUpper())
                    {
                        case "CONTACT":
                            mq = "select   (case when (a.cplandno='0000000000' or a.cplandno='0') then '' else a.cplandno end  ) cplandno, b.c_name, a.vch_num,a.ref_code, ((replace(a.cpname, '0', '-') || ' ' || replace(a.cp_mname, '0', '') || ' ' || replace(a.cp_lname, '0', ''))) contact_person," +
                                "  (case when (a.cpemail='ab@ab.ab' or a.cpemail ='0') then '' else a.cpemail end) cpemail from clients_mst a  inner join clients_mst b on a.ref_code=b.vch_num  and a.type=b.type and find_in_set(b.client_unit_id,'" + unitid_mst + "')=1 " +
                                "  where (a.ref_code||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type)='" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.modeofmeet(userCode, unitid_mst);

                            if (dtt.Rows.Count > 0)
                            {

                                model[0].Col17 = dtt.Rows[0]["vch_num"].ToString();
                                model[0].Col18 = dtt.Rows[0]["ref_code"].ToString();
                                model[0].Col19 = dtt.Rows[0]["contact_person"].ToString();
                                model[0].Col22 = dtt.Rows[0]["cpemail"].ToString();
                                model[0].Col23 = dtt.Rows[0]["cplandno"].ToString();
                                model[0].Col24 = dtt.Rows[0]["c_name"].ToString();

                                mq = "select distinct email_id from (select (case when (comp_email='ab@ab.ab'  or comp_email='0') then '' else comp_email end) email_id from  clients_mst where " +
                                    "vch_num='" + dtt.Rows[0]["ref_code"].ToString() + "' and client_unit_id='" + unitid_mst + "' " +
                                    "union all " +
                                    "select (case when (a.cpemail='ab@ab.ab'  or a.cpemail='0') then '' else a.cpemail end) email_id from clients_mst a    " +
                                    " where (a.ref_code || a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.type) = '" + URL + "') a";

                                DataTable dte = sgen.getdata(userCode, mq);
                                if (dte.Rows.Count > 0)
                                {
                                    TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2 = sgen.dt_to_selectlist(dte);
                                    string org_email = "";
                                    if (dte.Rows.Count > 1)
                                    {
                                        org_email = dte.Rows[0]["email_id"].ToString();
                                    }
                                    if (dtt.Rows[0]["cpemail"].ToString() != "")
                                    {
                                        String[] L2 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["cpemail"].ToString()).Distinct()).Split(',');
                                        model[0].SelectedItems2 = L2;
                                    }

                                    else
                                    {
                                        String[] L2 = System.String.Join(",", org_email).Split(',');
                                        model[0].SelectedItems2 = L2;
                                    }
                                }

                                if (model[0].Chk2 == true)
                                {
                                    ViewBag.scripcall = "$('[id *= oth_email]').show();";
                                }
                            }
                            break;

                        case "EDIT":
                        case "VIEW":
                            mq = "select  (case when (c.cplandno='0000000000' or c.cplandno='0') then '' else c.cplandno end  ) cplandno, a.LD_OWNER, (case when a.emailid ='0' then '' else emailid  end ) emailid, b.c_name account_name, ((replace(c.cpname, '0', '-') || ' ' || replace(c.cp_mname, '0', '') || ' ' || replace(c.cp_lname, '0', ''))) contact_person," +
                                " (case when (c.cpemail='ab@ab.ab' or c.cpemail='0' ) then '' else c.cpemail end) cpemail, a.vch_num,to_char(a.vch_date,'" + sgen.Getsqldateformat() + "') vch_date,a.client_id,a.client_unit_id,a.ent_by,a.ent_date,a.CP_FNAME,a.cust_id,a.remark,a.address from lead_master a " +
                                " inner join clients_mst c on a.cp_fname=c.vch_num and a.cust_id=c.ref_code and  find_in_set(c.client_unit_id,'" + unitid_mst + "')=1  " +
                                " inner join clients_mst b on a.cust_id = b.vch_num and find_in_set(b.client_unit_id,'" + unitid_mst + "')=1   where (a.client_id||a.client_unit_id|| a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.type)='" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {

                                sgen.SetSession(MyGuid, "EDMODE", "Y");
                                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.modeofmeet(userCode, unitid_mst);
                                model[0].Col1 = dtt.Rows[0]["client_id"].ToString();
                                model[0].Col2 = dtt.Rows[0]["client_unit_id"].ToString();
                                model[0].Col3 = dtt.Rows[0]["ent_by"].ToString();
                                model[0].Col4 = dtt.Rows[0]["ent_date"].ToString();

                                model[0].Col8 = "client_id||client_unit_id||vch_num|| to_char(vch_date, 'yyyymmdd')|| type = '" + URL + "'";
                                model[0].Col13 = "Update";
                                model[0].Col121 = "U";
                                model[0].Col122 = "<u>U</u>pdate";
                                model[0].Col123 = "Update & Ne<u>w</u>";
                                model[0].Col16 = dtt.Rows[0]["vch_num"].ToString();
                                model[0].Col29 = dtt.Rows[0]["vch_date"].ToString();
                                model[0].Col30 = dtt.Rows[0]["emailid"].ToString();

                                model[0].Col24 = dtt.Rows[0]["account_name"].ToString();
                                model[0].Col17 = dtt.Rows[0]["CP_FNAME"].ToString();
                                model[0].Col18 = dtt.Rows[0]["cust_id"].ToString();
                                model[0].Col19 = dtt.Rows[0]["contact_person"].ToString();
                                model[0].Col20 = dtt.Rows[0]["remark"].ToString();
                                model[0].Col21 = dtt.Rows[0]["address"].ToString();
                                model[0].Col22 = dtt.Rows[0]["cpemail"].ToString();
                                model[0].Col23 = dtt.Rows[0]["cplandno"].ToString();
                                if (model[0].Col30 != "")
                                {
                                    model[0].Chk2 = true;
                                    ViewBag.scripcall = "$('[id *= oth_email]').show();";
                                }

                                else
                                {
                                    model[0].Chk2 = false;
                                    ViewBag.scripcall = "$('[id *= oth_email]').hide();";
                                }

                                String[] L1 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["LD_OWNER"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems1 = L1;

                                mq = "select distinct email_id from (select (case when (comp_email='ab@ab.ab'  or comp_email='0') then '' else comp_email end) email_id from  clients_mst where " +
                                    "vch_num='" + dtt.Rows[0]["cust_id"].ToString() + "' and client_unit_id='" + unitid_mst + "' " +
                                    "union all " +
                                    "select '" + dtt.Rows[0]["cpemail"].ToString() + "' email_id from dual a ) a";

                                DataTable dte = sgen.getdata(userCode, mq);
                                if (dte.Rows.Count > 0)
                                {
                                    TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2 = sgen.dt_to_selectlist(dte);
                                    string org_email = "";
                                    if (dte.Rows.Count > 1)
                                    {
                                        org_email = dte.Rows[0]["email_id"].ToString();
                                    }
                                    if (dtt.Rows[0]["cpemail"].ToString() != "")
                                    {
                                        String[] L2 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["cpemail"].ToString()).Distinct()).Split(',');
                                        model[0].SelectedItems2 = L2;
                                    }

                                    else
                                    {
                                        String[] L2 = System.String.Join(",", org_email).Split(',');
                                        model[0].SelectedItems2 = L2;
                                    }
                                }


                                #region attachment
                                DataTable dtf = new DataTable();
                                dtf = sgen.getdata(userCode, "select rec_id,file_name,file_path,col1,col2,description,Col3 from file_tab where vch_num='" + dtt.Rows[0]["vch_num"].ToString() + "' and type in " +
                                    "('" + tm.Col12 + "','DD" + model[0].Col12 + "') and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "' and col1='MOM'");
                                List<Tmodelmain> ltmf = new List<Tmodelmain>();
                                string des = "", title = "", f_recid = "";
                                if (dtf.Rows.Count > 0)
                                {
                                    ;
                                    foreach (DataRow drf in dtf.Rows)
                                    {
                                        Tmodelmain tmf = new Tmodelmain();
                                        tmf.Col4 = drf["file_path"].ToString();
                                        tmf.Col1 = drf["file_name"].ToString();
                                        tmf.Col2 = drf["col1"].ToString();
                                        tmf.Col3 = drf["rec_id"].ToString();

                                        title = drf["Col3"].ToString();
                                        tmf.Col7 = drf["col2"].ToString();
                                        ltmf.Add(tmf);
                                    }
                                }
                                model[0].LTM1 = ltmf;
                                #endregion
                            }

                            break;

                        case "FDEL":
                            string fid = sgen.GetSession(MyGuid, "delid").ToString();
                            res = sgen.execute_cmd(userCode, "Delete from file_tab WHERE rec_id='" + fid + "'  and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "'");
                            sgen.SetSession(MyGuid, "delid", null);
                            if (res)
                            {
                                var LTM = model[0].LTM1;
                                for (int d = 0; d < LTM.Count; d++)
                                {
                                    var id = LTM[d].Col3;
                                    if (id == fid) { model[0].LTM1.RemoveAt(d); }
                                }
                            }
                            break;



                    }
                    break;
                #endregion
                #region crm summary
                case "crm_summ":
                    string acc = "", ct = "";
                    #region parent
                    if (sgen.GetSession(MyGuid, "crm_summ") == null)
                    {
                        sgen.SetSession(MyGuid, "crm_summ", URL);
                    }
                    else
                    {
                        URL = sgen.GetSession(MyGuid, "crm_summ").ToString();

                    }
                    #endregion
                    #region account
                    if ((sgen.GetSession(MyGuid, "crm_summ_acc") == null) && ((model[0].SelectedItems1.FirstOrDefault() != null) && (model[0].SelectedItems1.FirstOrDefault() != "")))
                    {
                        sgen.SetSession(MyGuid, "crm_summ_acc", model[0].SelectedItems1.FirstOrDefault());
                        acc = model[0].SelectedItems1.FirstOrDefault();
                    }
                    if (sgen.GetSession(MyGuid, "crm_summ_acc") != null) { acc = sgen.GetSession(MyGuid, "crm_summ_acc").ToString(); }
                    #endregion
                    #region Contact Person
                    if ((sgen.GetSession(MyGuid, "crm_summ_ct") == null) && ((model[0].SelectedItems2.FirstOrDefault() != null) && (model[0].SelectedItems2.FirstOrDefault() != "")))
                    {
                        sgen.SetSession(MyGuid, "crm_summ_ct", model[0].SelectedItems2.FirstOrDefault());
                        ct = model[0].SelectedItems2.FirstOrDefault();
                    }
                    if (sgen.GetSession(MyGuid, "crm_summ_ct") != null) { ct = sgen.GetSession(MyGuid, "crm_summ_ct").ToString(); }
                    #endregion
                    switch (btnval.ToUpper())
                    {
                        case "PARENT":

                            model = new List<Tmodelmain>();
                            Tmodelmain tmm = new Tmodelmain();
                            tmm.Col9 = tm.Col9;
                            tmm.Col10 = tm.Col10;
                            tmm.Col11 = tm.Col11;
                            tmm.Col12 = tm.Col12;
                            tmm.Col14 = tm.Col14;
                            tmm.Col15 = tm.Col15;
                            tmm.Col16 = tm.Col16;
                            tmm.Col17 = tm.Col17;
                            tmm.Col18 = tm.Col18;
                            tmm.Col19 = tm.Col19;
                            tmm.Col20 = tm.Col20;
                            tmm.Col21 = tm.Col21;
                            tmm.Col22 = tm.Col22;
                            tmm.Col33 = tm.Col33;
                            tmm.Col34 = tm.Col34;
                            tmm.Col48 = tm.Col48;
                            tmm.Col49 = tm.Col49;
                            tmm.Col50 = tm.Col50;
                            tmm.Col51 = tm.Col51;

                            model.Add(tmm);
                            mq = "select a.vch_num, a.c_name from clients_mst a where a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type ='" + URL + "' order by a.vch_num desc";
                            DataTable dt = sgen.getdata(userCode, mq);
                            string ct_cond = "";

                            if (dt.Rows.Count > 0)
                            {

                                model[0].Col16 = dt.Rows[0]["vch_num"].ToString();
                                model[0].Col17 = dt.Rows[0]["c_name"].ToString();

                                // total accounts
                                mq = "select count( parent_id) tot_acc from clients_mst a where a.type='BCD' and a.client_unit_id='" + unitid_mst + "' " +
                                    "and substr(a.vch_num,0,3)= '303' and parent_id = '" + model[0].Col16 + "'";
                                dt = sgen.getdata(userCode, mq);
                                if (dt.Rows.Count > 0)
                                {
                                    model[0].Col18 = "Total Accounts : " + dt.Rows[0]["tot_acc"].ToString();

                                    #region Account filter
                                    if (((model[0].SelectedItems1.FirstOrDefault() == null) || (model[0].SelectedItems1.FirstOrDefault() == "")) || (acc == ""))

                                    {
                                        mq = " select vch_num, c_name from clients_mst a where a.type='BCD' and a.client_unit_id='" + unitid_mst + "' " +
                                        "and substr(a.vch_num,0,3)= '303' and parent_id = '" + model[0].Col16 + "' ";
                                        dt = sgen.getdata(userCode, mq);
                                        if (dt.Rows.Count > 0)
                                        {
                                            TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = sgen.dt_to_selectlist(dt);
                                            if (acc != "")
                                            {
                                                model[0].SelectedItems1 = new string[] { acc };

                                            }
                                        }
                                    }

                                    string acc_cond = "";
                                    if ((model[0].SelectedItems1.FirstOrDefault() != null) && model[0].SelectedItems1.FirstOrDefault() != "")
                                    {
                                        sgen.SetSession(MyGuid, "crm_summ_acc", model[0].SelectedItems1.FirstOrDefault());
                                        model[0].Col18 = "Total Accounts : 1";
                                        acc_cond = " and vch_num='" + model[0].SelectedItems1.FirstOrDefault() + "'";
                                    }
                                    #endregion

                                    // total contacts


                                    mq = "select count(vch_num) tot_contact from clients_mst a where a.type='BCD' and a.client_unit_id='" + unitid_mst + "' " +
                                    "and substr(a.ref_code,0,3)= '303' and ref_code in (select distinct vch_num from clients_mst a where a.type = 'BCD' " +
                                    "and a.client_unit_id = '" + unitid_mst + "' and substr(a.vch_num,0,3)= '303' and parent_id = '" + model[0].Col16 + "' " + acc_cond + ") ";
                                    dt = sgen.getdata(userCode, mq);
                                    if (dt.Rows.Count > 0)
                                    {
                                        model[0].Col19 = "Total Contacts : " + dt.Rows[0]["tot_contact"].ToString();

                                        #region Contact filter
                                        if (((model[0].SelectedItems2.FirstOrDefault() == null) || (model[0].SelectedItems2.FirstOrDefault() == "")) || (ct == ""))

                                        {
                                            mq = "select  vch_num,cpname from clients_mst a where a.type='BCD' and a.client_unit_id='" + unitid_mst + "' " +
                                    "and substr(a.ref_code,0,3)= '303' and ref_code in (select distinct vch_num from clients_mst a where a.type = 'BCD' " +
                                    "and a.client_unit_id = '" + unitid_mst + "' and substr(a.vch_num,0,3)= '303' and parent_id = '" + model[0].Col16 + "' " + acc_cond + ") ";
                                            dt = sgen.getdata(userCode, mq);
                                            if (dt.Rows.Count > 0)
                                            {
                                                TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2 = sgen.dt_to_selectlist(dt);
                                                if (acc != "")
                                                {
                                                    model[0].SelectedItems2 = new string[] { ct };

                                                }
                                            }
                                        }


                                        if ((model[0].SelectedItems2.FirstOrDefault() != null) && model[0].SelectedItems2.FirstOrDefault() != "")
                                        {
                                            sgen.SetSession(MyGuid, "crm_summ_ct", model[0].SelectedItems2.FirstOrDefault());
                                            model[0].Col19 = "Total Contacts : 1";
                                            ct_cond = " and cp_id='" + model[0].SelectedItems2.FirstOrDefault() + "'";
                                        }
                                        #endregion
                                    }
                                    else { model[0].Col19 = "Total Contacts : " + "0"; }

                                    // total Leads
                                    mq = " select count(cust_id) tot_lead from lead_master  where type='LED' and client_unit_id='" + unitid_mst + "'" +
                                        " and cust_id in  (select distinct vch_num from clients_mst a where a.type='BCD' and a.client_unit_id='" + unitid_mst + "' " +
                                        "and substr(a.vch_num,0,3)= '303' and parent_id = '" + model[0].Col16 + "' " + acc_cond + ") " + ct_cond + "";
                                    dt = sgen.getdata(userCode, mq);
                                    if (dt.Rows.Count > 0)
                                    {
                                        model[0].Col20 = "Total Leads : " + dt.Rows[0]["tot_lead"].ToString();
                                    }
                                    else { model[0].Col20 = "Total Leads : " + "0"; }

                                    // total Tickets
                                    mq = " select count(cust_id) tot_tck from lead_master  where type='TCK' and client_unit_id='" + unitid_mst + "'" +
                                        " and cust_id in  (select distinct vch_num from clients_mst a where a.type='BCD' and a.client_unit_id='" + unitid_mst + "' " +
                                        "and substr(a.vch_num,0,3)= '303' and parent_id = '" + model[0].Col16 + "' " + acc_cond + ") " + ct_cond.Replace("cp_id", "CP_FNAME") + "";
                                    dt = sgen.getdata(userCode, mq);
                                    if (dt.Rows.Count > 0)
                                    {
                                        model[0].Col21 = "Total Tickets : " + dt.Rows[0]["tot_tck"].ToString();
                                    }

                                    else { model[0].Col21 = "Total Tickets : " + "0"; }


                                    // total MOM
                                    mq = " select count(cust_id) tot_mom from lead_master  where type='MOM' and client_unit_id='" + unitid_mst + "'" +
                                        " and cust_id in  (select distinct vch_num from clients_mst a where a.type='BCD' and a.client_unit_id='" + unitid_mst + "' " +
                                        "and substr(a.vch_num,0,3)= '303' and parent_id = '" + model[0].Col16 + "' " + acc_cond + ") " + ct_cond.Replace("cp_id", "CP_FNAME") + "";
                                    dt = sgen.getdata(userCode, mq);
                                    if (dt.Rows.Count > 0)
                                    {
                                        model[0].Col22 = "Total MOM : " + dt.Rows[0]["tot_mom"].ToString();
                                    }

                                    else { model[0].Col22 = "Total MOM : " + "0"; }

                                    // total Call Log
                                    mq = " select  count(*) tot_call from  enx_tab2 where type='CAL' and client_unit_id='" + unitid_mst + "'" +
                                        " and col5 in  (select distinct vch_num from clients_mst a where a.type='BCD' and a.client_unit_id='" + unitid_mst + "' " +
                                        "and substr(a.vch_num,0,3)= '303' and parent_id = '" + model[0].Col16 + "' " + acc_cond + ") " + ct_cond.Replace("cp_id", "col6") + "";
                                    dt = sgen.getdata(userCode, mq);
                                    if (dt.Rows.Count > 0)
                                    {
                                        model[0].Col33 = "Total Call Log : " + dt.Rows[0]["tot_call"].ToString();
                                    }

                                    else { model[0].Col33 = "Total Call Log : " + "0"; }

                                    // total Appointments
                                    mq = " select  count(*) tot_app from  enx_tab2  where type='APP' and client_unit_id='" + unitid_mst + "'" +
                                        " and col5 in  (select distinct vch_num from clients_mst a where a.type='BCD' and a.client_unit_id='" + unitid_mst + "' " +
                                        "and substr(a.vch_num,0,3)= '303' and parent_id = '" + model[0].Col16 + "' " + acc_cond + ") " + ct_cond.Replace("cp_id", "Col6") + "";
                                    dt = sgen.getdata(userCode, mq);
                                    if (dt.Rows.Count > 0)
                                    {
                                        model[0].Col34 = "Total Appointments : " + dt.Rows[0]["tot_app"].ToString();
                                    }

                                    else { model[0].Col34 = "Total Appointments : " + "0"; }
                                }

                                else
                                {
                                    model[0].Col18 = "Total Accounts : " + "0";
                                    model[0].Col19 = "Total Contacts : " + "0";
                                    model[0].Col20 = "Total Leads : " + "0";
                                    model[0].Col21 = "Total Tickets : " + "0";
                                    model[0].Col22 = "Total MOM : " + "0";
                                    model[0].Col33 = "Total Call Log : " + "0";
                                    model[0].Col34 = "Total Appointments : " + "0";
                                }






                            }
                            break;


                    }
                    break;
                #endregion
                #region web ticket
                case "web_ticket":
                    switch (btnval.ToUpper())
                    {
                        case "CONTACT":
                            mq = "select  (case when (a.cplandno='0000000000' or a.cplandno='0') then '' else a.cplandno end  ) cplandno, b.c_name, a.vch_num,a.ref_code, ((replace(a.cpname, '0', '-') || ' ' || replace(a.cp_mname, '0', '') || ' ' || replace(a.cp_lname, '0', ''))) contact_person," +
                                "  (case when (a.cpemail='ab@ab.ab' or a.cpemail='0') then '' else a.cpemail end) cpemail from clients_mst a  inner join clients_mst b on a.ref_code=b.vch_num  and find_in_set(b.client_unit_id,'" + unitid_mst + "')=1 " +
                                "  where (a.ref_code||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type)='" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                model[0].Col17 = dtt.Rows[0]["vch_num"].ToString();
                                model[0].Col18 = dtt.Rows[0]["ref_code"].ToString();
                                model[0].Col19 = dtt.Rows[0]["contact_person"].ToString();
                                model[0].Col22 = dtt.Rows[0]["cpemail"].ToString();
                                model[0].Col23 = dtt.Rows[0]["cplandno"].ToString();
                                model[0].Col24 = dtt.Rows[0]["c_name"].ToString();


                            }
                            break;





                    }
                    break;
                #endregion
                #region call log
                case "call_log":
                    switch (btnval.ToUpper())
                    {
                        case "CONTACT":
                            if (URL.Contains("LED"))
                            {
                                mq = "select  replace(nvl(pr.c_name,'-'),0,'-') as Parent_Account, nvl(b.c_name, a.cust_name) c_name,((replace(ct.cpname, '0', '-') ||" +
                                    " ' ' || replace(ct.cp_mname, '0', '') || ' ' || replace(ct.cp_lname, '0', ''))) cp_name, (case when ct.cplandno = '0000000000' or ct.cplandno = '0' " +
                                    " then '-' else ct.cplandno end) cplandno , (case when ct.cpemail = 'ab@ab.ab' or ct.cpemail = '0' then '-' else ct.cpemail end) cpemail,  a.vch_num lead_no,a.cust_id ref_code,a.cp_id vch_num ,( case when a.cust_id='0' then (case when a.cp_fname='0' then '-' else a.cp_fname end ) else ((replace(ct.cpname, '0', '-') || ' ' || replace(ct.cp_mname, '0', '') || ' ' || replace(ct.cp_lname, '0', ''))) end) contact_person" +
                                    " from lead_master a " +
                                    "left join clients_mst b on a.cust_id = b.vch_num and a.ref_type = b.type and find_in_set(b.client_unit_id,'" + unitid_mst + "')= 1" +
                                    " left join clients_mst ct  on ct.vch_num = a.cp_id and a.cust_id = ct.ref_code and find_in_set(ct.client_unit_id,'" + unitid_mst + "')= 1 " +
                                    " left join clients_mst pr on b.parent_id = pr.vch_num and pr.type = 'BCD' and find_in_set(pr.client_unit_id,'" + unitid_mst + "')= 1 and pr.vch_num!='0'" +
                                    "where(a.client_id || a.client_unit_id || a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.type) = '" + URL + "'";

                                model[0].Col35 = "Lead";
                            }
                            else
                            {
                                mq = "select replace(nvl(pr.c_name,'-'),0,'-') as Parent_Account, '0' lead_no,  (case when (a.cplandno='0000000000' or a.cplandno='0') then '' else a.cplandno end  ) cplandno, b.c_name, a.vch_num,a.ref_code, ((replace(a.cpname, '0', '-') || ' ' || replace(a.cp_mname, '0', '') || ' ' || replace(a.cp_lname, '0', ''))) contact_person," +
                                   "  (case when (a.cpemail='ab@ab.ab' or a.cpemail='0') then '' else a.cpemail end) cpemail from clients_mst a  inner join clients_mst b on a.ref_code=b.vch_num  and find_in_set(b.client_unit_id,'" + unitid_mst + "')=1 " +
                                    " left join clients_mst pr on b.parent_id=pr.vch_num  and find_in_set(pr.client_unit_id,'" + unitid_mst + "')= 1 and pr.vch_num!='0'" +
                                    " where (a.ref_code||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type)='" + URL + "'";

                                if (URL.Contains("BCD"))
                                { model[0].Col35 = "Account"; }
                                else { model[0].Col35 = "Prospect"; }

                            }

                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                model[0].Col18 = dtt.Rows[0]["ref_code"].ToString(); // acc id
                                model[0].Col19 = dtt.Rows[0]["vch_num"].ToString();     // cp id                         
                                model[0].Col20 = dtt.Rows[0]["contact_person"].ToString();
                                model[0].Col22 = dtt.Rows[0]["lead_no"].ToString();
                                model[0].Col23 = dtt.Rows[0]["Parent_Account"].ToString();
                                model[0].Col24 = dtt.Rows[0]["c_name"].ToString();
                                model[0].Col25 = dtt.Rows[0]["cpemail"].ToString();
                                model[0].Col26 = dtt.Rows[0]["cplandno"].ToString();

                            }
                            break;

                        case "EDIT":
                        case "VIEW":



                            mq = "select to_char(date1,'" + sgen.Getsqldatetimeformat() + "') date1, (case when ct.cplandno = '0000000000' or ct.cplandno = '0' " +
                                   " then '-' else ct.cplandno end) cplandno , (case when ct.cpemail = 'ab@ab.ab' or ct.cpemail = '0' then '-' else ct.cpemail end) cpemail, replace(nvl(pr.c_name, '-'), 0, '-') as Parent_Account,b. c_name," +
                                   " a.vch_num,a.vch_date,a.rec_id,a.client_id,a.client_unit_id,a.ent_by," +
                                "a.ent_date,a.col5,a.col6,a.col7,a.col9,a.col10,a.col11,a.col24, ((replace(ct.cpname, '0', '-') || ' ' || replace(ct.cp_mname, '0', '') || ' ' || replace(ct.cp_lname, '0', ''))) contact_person " +
                                "from enx_tab2 a inner join clients_mst b on b.vch_num = a.Col5 and  find_in_set(b.client_unit_id, '" + unitid_mst + "') = 1 left join clients_mst pr " +
                               " on b.parent_id = pr.vch_num  and find_in_set(pr.client_unit_id,'" + unitid_mst + "')= 1 and pr.vch_num != '0'" +
                               " left join clients_mst ct  on ct.vch_num = a.col6 and a.col5 = ct.ref_code and " +
                                "find_in_set(ct.client_unit_id,'" + unitid_mst + "')= 1 where(a.client_id || a.client_unit_id || a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.type) = '" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "EDMODE", "Y");
                                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.modeofmeet(userCode, unitid_mst);
                                model[0].Col1 = dtt.Rows[0]["client_id"].ToString();
                                model[0].Col2 = dtt.Rows[0]["client_unit_id"].ToString();
                                model[0].Col3 = dtt.Rows[0]["ent_by"].ToString();
                                model[0].Col4 = dtt.Rows[0]["ent_date"].ToString();

                                model[0].Col8 = "client_id||client_unit_id||vch_num|| to_char(vch_date, 'yyyymmdd')|| type = '" + URL + "'";
                                model[0].Col13 = "Update";
                                model[0].Col121 = "U";
                                model[0].Col122 = "<u>U</u>pdate";
                                model[0].Col123 = "Update & Ne<u>w</u>";
                                model[0].Col16 = dtt.Rows[0]["vch_num"].ToString();

                                model[0].Col18 = dtt.Rows[0]["col5"].ToString(); // acc id
                                model[0].Col19 = dtt.Rows[0]["col6"].ToString();     // cp id                         
                                model[0].Col20 = dtt.Rows[0]["contact_person"].ToString();
                                model[0].Col21 = dtt.Rows[0]["col24"].ToString(); //note
                                model[0].Col22 = dtt.Rows[0]["col11"].ToString();
                                model[0].Col35 = dtt.Rows[0]["col10"].ToString();
                                model[0].Col36 = dtt.Rows[0]["date1"].ToString();

                                mod1.Add(new SelectListItem { Text = "Incoming", Value = "Incoming" });
                                mod1.Add(new SelectListItem { Text = "Outgoing", Value = "Outgoing" });
                                TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1;

                                TempData[MyGuid + "_Tlist2"] = model[0].TList2 = mod2 = cmd_Fun.outcome(userCode, unitid_mst);

                                //mod3.Add(new SelectListItem { Text = "Account", Value = "Account" });
                                //mod3.Add(new SelectListItem { Text = "Prospect", Value = "Prospect" });
                                //mod3.Add(new SelectListItem { Text = "Lead", Value = "Lead" });
                                //TempData[MyGuid + "_Tlist3"] = model[0].TList3 = mod3;

                                model[0].SelectedItems1 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["col7"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems2 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["col9"].ToString()).Distinct()).Split(',');
                                //model[0].SelectedItems3 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["col10"].ToString()).Distinct()).Split(',');

                                model[0].Col23 = dtt.Rows[0]["Parent_Account"].ToString();
                                model[0].Col24 = dtt.Rows[0]["c_name"].ToString();
                                model[0].Col25 = dtt.Rows[0]["cpemail"].ToString();
                                model[0].Col26 = dtt.Rows[0]["cplandno"].ToString();
                            }


                            break;



                    }
                    break;
                #endregion
                #region appointment
                case "appointment":
                    switch (btnval.ToUpper())
                    {
                        case "CONTACT":
                            if (URL.Contains("LED"))
                            {
                                mq = "select  replace(nvl(pr.c_name,'-'),0,'-') as Parent_Account, nvl(b.c_name, a.cust_name) c_name,((replace(ct.cpname, '0', '-') ||" +
                                    " ' ' || replace(ct.cp_mname, '0', '') || ' ' || replace(ct.cp_lname, '0', ''))) cp_name, (case when ct.cplandno = '0000000000' or ct.cplandno = '0' " +
                                    " then '-' else ct.cplandno end) cplandno , (case when ct.cpemail = 'ab@ab.ab' or ct.cpemail = '0' then '-' else ct.cpemail end) cpemail,  a.vch_num lead_no,a.cust_id ref_code,a.cp_id vch_num ,( case when a.cust_id='0' then (case when a.cp_fname='0' then '-' else a.cp_fname end ) else ((replace(ct.cpname, '0', '-') || ' ' || replace(ct.cp_mname, '0', '') || ' ' || replace(ct.cp_lname, '0', ''))) end) contact_person" +
                                    " from lead_master a " +
                                    "left join clients_mst b on a.cust_id = b.vch_num and a.ref_type = b.type and find_in_set(b.client_unit_id,'" + unitid_mst + "')= 1" +
                                    " left join clients_mst ct  on ct.vch_num = a.cp_id and a.cust_id = ct.ref_code and find_in_set(ct.client_unit_id,'" + unitid_mst + "')= 1 " +
                                    " left join clients_mst pr on b.parent_id = pr.vch_num and pr.type = 'BCD' and find_in_set(pr.client_unit_id,'" + unitid_mst + "')= 1 and pr.vch_num!='0'" +
                                    "where(a.client_id || a.client_unit_id || a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.type) = '" + URL + "'";
                                model[0].Col35 = "Lead";
                            }
                            else
                            {
                                mq = "select replace(nvl(pr.c_name,'-'),0,'-') as Parent_Account, '0' lead_no,  (case when (a.cplandno='0000000000' or a.cplandno='0') then '' else a.cplandno end  ) cplandno, b.c_name, a.vch_num,a.ref_code, ((replace(a.cpname, '0', '-') || ' ' || replace(a.cp_mname, '0', '') || ' ' || replace(a.cp_lname, '0', ''))) contact_person," +
                                    "  (case when (a.cpemail='ab@ab.ab' or a.cpemail='0') then '' else a.cpemail end) cpemail from clients_mst a  inner join clients_mst b on a.ref_code=b.vch_num  and find_in_set(b.client_unit_id,'" + unitid_mst + "')=1 " +
                                     " left join clients_mst pr on b.parent_id=pr.vch_num  and find_in_set(pr.client_unit_id,'" + unitid_mst + "')= 1 and pr.vch_num!='0'" +
                                     " where (a.ref_code||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type)='" + URL + "'";
                                if (URL.Contains("BCD"))
                                { model[0].Col35 = "Account"; }
                                else { model[0].Col35 = "Prospect"; }

                            }

                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                model[0].Col18 = dtt.Rows[0]["ref_code"].ToString(); // acc id
                                model[0].Col19 = dtt.Rows[0]["vch_num"].ToString();     // cp id                         
                                model[0].Col20 = dtt.Rows[0]["contact_person"].ToString();
                                model[0].Col21 = dtt.Rows[0]["lead_no"].ToString();
                                model[0].Col29 = dtt.Rows[0]["Parent_Account"].ToString();
                                model[0].Col30 = dtt.Rows[0]["c_name"].ToString();
                                model[0].Col31 = dtt.Rows[0]["cpemail"].ToString();
                                model[0].Col32 = dtt.Rows[0]["cplandno"].ToString();


                            }
                            break;

                        case "EDIT":
                        case "VIEW":
                            mq = "select (case when ct.cplandno = '0000000000' or ct.cplandno = '0' " +
                                    " then '-' else ct.cplandno end) cplandno , (case when ct.cpemail = 'ab@ab.ab' or ct.cpemail = '0' then '-' else ct.cpemail end) cpemail, replace(nvl(pr.c_name, '-'), 0, '-') as Parent_Account,b. c_name, ( case when a.col12='Y' then to_char(a.date1 ,'" + sgen.Getsqldateformat() + "') else  to_char(a.date1,'" + sgen.Getsqldatetimeformat() + "') end) from_date, " +
                                " ( case when a.col12='Y' then to_char(a.date2 ,'" + sgen.Getsqldateformat() + "') else  to_char(a.date2,'" + sgen.Getsqldatetimeformat() + "') end) to_date" +
                                ", a.vch_num,a.vch_date,a.rec_id,a.client_id,a.client_unit_id,a.ent_by," +
                                "a.ent_date,a.col3,a.col4,a.col5,a.col6,a.col7,a.col9,a.col10,a.col11,a.col12,a.col24, ((replace(ct.cpname, '0', '-') || ' ' || replace(ct.cp_mname, '0', '') || ' ' || replace(ct.cp_lname, '0', ''))) contact_person " +
                                "from enx_tab2 a inner join clients_mst b on b.vch_num = a.Col5 and  find_in_set(b.client_unit_id, '" + unitid_mst + "') = 1 left join clients_mst pr " +
                                " on b.parent_id = pr.vch_num  and find_in_set(pr.client_unit_id,'" + unitid_mst + "')= 1 and pr.vch_num != '0' " +
                                "left join clients_mst ct  on ct.vch_num = a.col6 and a.col5 = ct.ref_code and " +
                                "find_in_set(ct.client_unit_id,'" + unitid_mst + "')= 1 where(a.client_id || a.client_unit_id || a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.type) = '" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "EDMODE", "Y");
                                //TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.modeofmeet(userCode, unitid_mst);
                                model[0].Col1 = dtt.Rows[0]["client_id"].ToString();
                                model[0].Col2 = dtt.Rows[0]["client_unit_id"].ToString();
                                model[0].Col3 = dtt.Rows[0]["ent_by"].ToString();
                                model[0].Col4 = dtt.Rows[0]["ent_date"].ToString();

                                model[0].Col8 = "client_id||client_unit_id||vch_num|| to_char(vch_date, 'yyyymmdd')|| type = '" + URL + "'";
                                model[0].Col13 = "Update";
                                model[0].Col121 = "U";
                                model[0].Col122 = "<u>U</u>pdate";
                                model[0].Col123 = "Update & Ne<u>w</u>";
                                model[0].Col16 = dtt.Rows[0]["vch_num"].ToString();


                                model[0].Col18 = dtt.Rows[0]["col5"].ToString(); // acc id
                                model[0].Col19 = dtt.Rows[0]["col6"].ToString();     // cp id                         
                                model[0].Col20 = dtt.Rows[0]["contact_person"].ToString();
                                model[0].Col21 = dtt.Rows[0]["col11"].ToString();
                                model[0].Col22 = dtt.Rows[0]["col3"].ToString();
                                model[0].Col23 = dtt.Rows[0]["col4"].ToString();
                                model[0].Col24 = dtt.Rows[0]["col24"].ToString(); //des
                                model[0].Col35 = dtt.Rows[0]["col7"].ToString(); //related to
                                if (dtt.Rows[0]["col12"].ToString() == "Y")
                                {
                                    model[0].Chk1 = true;
                                    model[0].Col25 = dtt.Rows[0]["from_date"].ToString();
                                    model[0].Col26 = dtt.Rows[0]["to_date"].ToString();

                                }
                                else
                                {
                                    model[0].Chk1 = false;
                                    model[0].Col27 = dtt.Rows[0]["from_date"].ToString();
                                    model[0].Col28 = dtt.Rows[0]["to_date"].ToString();
                                }

                                mod1.Add(new SelectListItem { Text = "Account", Value = "Account" });
                                mod1.Add(new SelectListItem { Text = "Prospect", Value = "Prospect" });
                                mod1.Add(new SelectListItem { Text = "Lead", Value = "Lead" });
                                //TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1;

                                TempData[MyGuid + "_Tlist2"] = model[0].TList2 = mod2 = cmd_Fun.username_mod(userCode, m_module3);


                                TempData[MyGuid + "_Tlist3"] = model[0].TList3 = mod3 = cmd_Fun.outcome(userCode, unitid_mst);

                                //model[0].SelectedItems1 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["col7"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems2 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["col9"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems3 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["col10"].ToString()).Distinct()).Split(',');

                                model[0].Col29 = dtt.Rows[0]["Parent_Account"].ToString();
                                model[0].Col30 = dtt.Rows[0]["c_name"].ToString();
                                model[0].Col31 = dtt.Rows[0]["cpemail"].ToString();
                                model[0].Col32 = dtt.Rows[0]["cplandno"].ToString();


                            }


                            break;



                    }
                    break;
                #endregion
                #region outcome
                case "outcome":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            mq = "select master_id,master_name,client_id,status,client_unit_id,vch_num,vch_date,rec_id,master_entby" +
                                ",master_entdate," +
                                "master_editby, master_editdate,classid from master_setting where  " +
                                " client_id|| client_unit_id||vch_num|| to_char(vch_date, 'yyyymmdd')|| type='" + URL + "'";
                            dtt = new DataTable();
                            dtt = sgen.getdata(userCode, mq);
                            //var tm = model.FirstOrDefault();
                            if (dtt.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "EDMODE", "Y");
                                DataTable dt = new DataTable();
                                DataRow dr = dtt.Rows[0];
                                model[0].Col8 = "client_id||client_unit_id|| vch_num|| to_char(vch_date, 'yyyymmdd')|| type = '" + URL + "'";
                                model[0].Col3 = dr["master_entby"].ToString();
                                model[0].Col4 = dr["master_entdate"].ToString();
                                model[0].Col16 = dr["vch_num"].ToString();
                                model[0].Col1 = dr["client_id"].ToString();
                                model[0].Col2 = dr["client_unit_id"].ToString();
                                model[0].Col7 = dr["rec_id"].ToString();
                                model[0].Col17 = dr["master_name"].ToString();
                                model[0].Col19 = dr["master_id"].ToString();
                                model[0].Col18 = dr["status"].ToString();
                                model[0].Chk1 = dr["classid"].ToString() == "Y" ? true : false;
                                model[0].Col9 = tm.Col9;
                                model[0].Col10 = tm.Col10;
                                model[0].Col11 = tm.Col11;
                                model[0].Col12 = tm.Col12;
                                model[0].Col13 = "Update";
                                model[0].Col100 = "Update & New";
                                model[0].Col121 = "U";
                                model[0].Col122 = "<u>U</u>pdate";
                                model[0].Col123 = "Update & Ne<u>w</u>";
                            }

                            break;
                    }
                    break;
                #endregion
                #region small party
                case "s_party":
                    string prefix = "";
                    if (sgen.GetSession(MyGuid, "VD_TYPEMST") != null)
                    {
                        type = sgen.GetSession(MyGuid, "VD_CONT").ToString().Trim();
                        prefix = sgen.GetSession(MyGuid, "VD_PREFIX").ToString().Trim();

                    }
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            //case "VIEW":
                            mq = "select ct.ref_code||to_char(ct.vch_date, 'yyyymmdd')|| ct.type as ct_fstr,cp.website,  cp.vch_num," +
                                "cp.vch_date,cp.client_id,cp.client_unit_id,cp.ent_by,cp.ent_date," +
                                "cp.rec_id, cp.c_name,cp.addr,cp.city_mn,cp.isgstr,cp.c_gstin,cp.state,cp.country  ," +
                                "(case when cp.org_mobile = '0' then '' else cp.org_mobile end) org_mobile," +
                                "(case when cp.org_contact = '0' then '' else cp.org_contact end) org_contact," +
                                "(case when cp.comp_email = 'ab@ab.ab' then '' else cp.comp_email end ) comp_email," +
                                "(case when length(cp.cpname) = 1  and cp.cpname = '0' then '-' else cp.cpname end ) cpname," +
                                "(case when length(cp.cp_lname) = 1  and cp.cp_lname = '0' then '-' else cp.cp_lname end )" +
                                "  as cp_lname,(case when cp.cpemail = 'ab@ab.ab' then '' else cp.cpemail end )  cpemail ," +
                                "(case when cp.cpcont = '0000000000' then '' else cp.cpcont end) as cpcont, (case when length(ct.cpname) = 1  and ct.cpname = '0' then '-' else ct.cpname end ) c_cpname," +
                                "(case when length(ct.cp_lname) = 1  and ct.cp_lname = '0' then '-' else ct.cp_lname end )" +
                                "  as c_cp_lname,  (case when ct.cpemail = 'ab@ab.ab' then '' else ct.cpemail end )  c_cpemail ," +
                                "(case when ct.cpcont = '0000000000' then '' else ct.cpcont end) as c_cpcont,cp.vdcat " +
                                " from clients_mst cp  left join clients_mst ct on cp.vch_num = ct.ref_code and " +
                                "find_in_set(cp.client_unit_id, ct.client_unit_id) = 1 " +
                                " and ct.type = '" + type + "' where cp.vch_num || to_char(cp.vch_date, 'yyyymmdd') || cp.type = '" + URL + "'";

                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "EDMODE", "Y");
                                //DataTable dtc = sgen.getdata(userCode, "select  rec_id||'-' ||state_gst_code||'-'||alpha_2 fstr,country_name||'-'||state_name||'-' ||city_name cntry_st from country_state    order by state_name desc");
                                DataTable dtc = sgen.getdata(userCode, "select distinct alpha_2 ,country_name from country_state  where alpha_2='IN'");
                                if (dtc.Rows.Count > 0)
                                {
                                    mod1 = sgen.dt_to_selectlist(dtc);
                                }
                                DataTable dts = sgen.getdata(userCode, "select  distinct state_gst_code,state_name  from country_state  where alpha_2='IN' ");
                                if (dts.Rows.Count > 0)
                                {
                                    mod2 = sgen.dt_to_selectlist(dts);
                                }

                                dts = new DataTable();
                                dts = sgen.getdata(userCode, "select master_id,master_name from master_setting where type='VCG'");
                                if (dts.Rows.Count > 0)
                                {
                                    mod3 = sgen.dt_to_selectlist(dts);
                                }

                                TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1;
                                TempData[MyGuid + "_Tlist2"] = model[0].TList2 = mod2;
                                TempData[MyGuid + "_Tlist3"] = model[0].TList3 = mod3;
                                model[0].SelectedItems1 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["country"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems2 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["state"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems3 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["vdcat"].ToString()).Distinct()).Split(',');



                                model[0].Col1 = dtt.Rows[0]["client_id"].ToString();
                                model[0].Col2 = dtt.Rows[0]["client_unit_id"].ToString();
                                model[0].Col3 = dtt.Rows[0]["ent_by"].ToString();
                                model[0].Col4 = dtt.Rows[0]["ent_date"].ToString();
                                model[0].Col7 = dtt.Rows[0]["rec_id"].ToString();
                                model[0].Col8 = "(vch_num||to_char(vch_date, 'yyyymmdd')|| type) = '" + URL + "'";
                                model[0].Col85 = "(ref_code||to_char(vch_date, 'yyyymmdd')|| type) = '" + dtt.Rows[0]["ct_fstr"].ToString() + "'";
                                model[0].Col9 = tm.Col9;
                                model[0].Col10 = tm.Col10;
                                model[0].Col11 = tm.Col11;
                                model[0].Col12 = tm.Col12;
                                model[0].Col13 = "Update";
                                model[0].Col100 = "Update & New";
                                model[0].Col121 = "U";
                                model[0].Col122 = "<u>U</u>pdate";
                                model[0].Col123 = "Update & Ne<u>w</u>";
                                model[0].Col14 = tm.Col14;
                                model[0].Col15 = tm.Col15;
                                model[0].Col16 = dtt.Rows[0]["vch_num"].ToString();
                                model[0].Col17 = dtt.Rows[0]["c_name"].ToString();
                                model[0].Col21 = dtt.Rows[0]["addr"].ToString();
                                model[0].Col20 = dtt.Rows[0]["org_mobile"].ToString();
                                model[0].Col19 = dtt.Rows[0]["org_contact"].ToString();
                                model[0].Col18 = dtt.Rows[0]["comp_email"].ToString();
                                model[0].Col23 = dtt.Rows[0]["city_mn"].ToString();
                                model[0].Col22 = dtt.Rows[0]["website"].ToString();
                                if (dtt.Rows[0]["isgstr"].ToString() == "Y") { model[0].Col24 = dtt.Rows[0]["c_gstin"].ToString(); }
                                model[0].LTM2 = new List<Tmodelmain>();
                                for (int i = 0; i < dtt.Rows.Count; i++)
                                {
                                    Tmodelmain ltm2 = new Tmodelmain();

                                    if (i == 0)
                                    {
                                        ltm2.Col2 = dtt.Rows[0]["cpname"].ToString();
                                        ltm2.Col3 = dtt.Rows[0]["cp_lname"].ToString();
                                        ltm2.Col4 = dtt.Rows[0]["cpemail"].ToString();
                                        ltm2.Col5 = dtt.Rows[0]["cpcont"].ToString();


                                    }
                                    else
                                    {
                                        ltm2.Col2 = dtt.Rows[i]["c_cpname"].ToString();
                                        ltm2.Col3 = dtt.Rows[i]["c_cp_lname"].ToString();
                                        ltm2.Col4 = dtt.Rows[i]["c_cpemail"].ToString();
                                        ltm2.Col5 = dtt.Rows[i]["c_cpcont"].ToString();
                                    }
                                    model[0].LTM2.Add(ltm2);
                                }

                            }
                            break;
                    }
                    break;
                #endregion
                #region create order
                case "cr_order":
                    switch (btnval.ToUpper())
                    {


                        case "EDIT":

                            mq = "select cp.addr,a.cust_id,a.cp_id, (ct.ref_code||ct.vch_num||to_char(ct.vch_date,'yyyymmdd')||ct.type) ctr, cp.c_name  customer_name" +
                                ",((replace(ct.cpname, '0', '-') || '- ' || replace(ct.cp_mname, '0', '') || ' ' || replace(ct.cp_lname, '0', ''))) contact_person, " +
                                "(case when(ct.cpemail = 'ab@ab.ab' or ct.cpemail = '0') then '' else ct.cpemail end) CP_Email_ID,(case when(ct.cplandno = '0000000000' or ct.cplandno = '0') then '' else ct.cplandno end  ) " +
                                "cp_phone_no, a.rec_id,a.vch_num,to_char(a.vch_date, 'dd/mm/yyyy')vch_date,to_char(a.dob, 'dd/mm/yyyy')exp_dt, " +
                                "a.client_id,a.client_unit_id,a.ent_by,a.ent_date,a.budget ord_val from lead_master a inner join clients_mst cp on cp.vch_num = a.cust_id " +
                                "and find_in_set(cp.client_unit_id, '" + unitid_mst + "') = 1 and substr(cp.vch_num, 0, 3) = '303' inner join clients_mst ct  on a.cp_id = ct.vch_num" +
                                " and a.cust_id = ct.ref_code  and find_in_set(ct.client_unit_id, '" + unitid_mst + "') = 1 and substr(ct.ref_code, 0, 3) = '303' " +
                                "where a.client_id|| a.client_unit_id||a.vch_num|| to_char(a.vch_date, 'yyyymmdd')|| a.type='" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "EDMODE", "Y");

                                model[0].Col1 = dtt.Rows[0]["client_id"].ToString();
                                model[0].Col2 = dtt.Rows[0]["client_unit_id"].ToString();
                                model[0].Col3 = dtt.Rows[0]["ent_by"].ToString();
                                model[0].Col4 = dtt.Rows[0]["ent_date"].ToString();

                                model[0].Col8 = "client_id||client_unit_id||vch_num|| to_char(vch_date, 'yyyymmdd')|| type = '" + URL + "'";
                                model[0].Col13 = "Update";
                                model[0].Col121 = "U";
                                model[0].Col122 = "<u>U</u>pdate";
                                model[0].Col123 = "Update & Ne<u>w</u>";
                                model[0].Col16 = dtt.Rows[0]["vch_num"].ToString();
                                model[0].Col17 = dtt.Rows[0]["vch_date"].ToString();
                                model[0].Col18 = dtt.Rows[0]["ord_val"].ToString();
                                model[0].Col19 = dtt.Rows[0]["exp_dt"].ToString();
                                model[0].Col20 = dtt.Rows[0]["addr"].ToString();
                                model[0].Col21 = dtt.Rows[0]["contact_person"].ToString();
                                model[0].Col22 = dtt.Rows[0]["cp_phone_no"].ToString();
                                model[0].Col23 = dtt.Rows[0]["cp_email_id"].ToString();

                                model[0].Col24 = dtt.Rows[0]["cust_id"].ToString(); // acc id
                                model[0].Col25 = dtt.Rows[0]["cp_id"].ToString();     // cp id                         


                                DataTable dts = sgen.getdata(userCode, "select distinct (ct.ref_code||ct.vch_num||to_char(ct.vch_date,'yyyymmdd')||ct.type)  as fstr," +
                    " (a.c_name||'( ' ||((replace(ct.cpname, '0', '-') || '- ' || replace(ct.cp_mname, '0', '') || ' ' || replace(ct.cp_lname, '0', '')))||' )' ) acc_cont from clients_mst a " +
                    "inner join clients_mst ct  on a.vch_num = ct.ref_code  and find_in_set(ct.client_unit_id, '" + unitid_mst + "') = 1 and substr(ct.ref_code, 0, 3) = '303' where a.type = 'BCD' " +
                    "and find_in_set(a.client_unit_id, '" + unitid_mst + "') = 1 and substr(a.vch_num, 0, 3) = '303' " +
                    " and(a.mftr is null or a.mftr = '0' or a.mftr = 'N') and(a.pubr is null or a.pubr = '0' or a.pubr = 'N') order by(ct.ref_code || ct.vch_num || to_char(ct.vch_date, 'yyyymmdd') || ct.type) desc    ");
                                if (dts.Rows.Count > 0)
                                {
                                    mod1 = sgen.dt_to_selectlist(dts);
                                }
                                TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1;



                                model[0].SelectedItems1 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["ctr"].ToString()).Distinct()).Split(',');

                            }


                            break;



                    }
                    break;
                #endregion
                #region  order status
                case "ord_status":
                    switch (btnval.ToUpper())
                    {


                        case "EDIT":

                            mq = " select cp.c_name,((replace(ct.cpname, '0', '-') || '- ' || replace(ct.cp_mname, '0', '') || ' ' || replace(ct.cp_lname, '0', ''))) contact_person,(case when(ct.cpemail = 'ab@ab.ab' or ct.cpemail = '0') then '' else ct.cpemail end) CP_Email_ID,(case when(ct.cplandno = '0000000000' or ct.cplandno = '0') then '' else ct.cplandno end  )cp_phone_no, a.rec_id,a.ent_by,a.ent_date,a.client_id,a.client_unit_id,a.vch_num," +
                                "a.vch_date,a.ref_code,to_char(date1,'" + sgen.Getsqldateformat() + "') date1 " +
                                ",to_char(date2, '" + sgen.Getsqldateformat() + "') date2 ,to_char(date3, '" + sgen.Getsqldateformat() + "') date3,to_char(date4, '" + sgen.Getsqldateformat() + "') date4," +
                                "a.col2,a.col4,a.col5,a.col6,a.col7,a.col9,a.col10,a.col11,a.col12,a.col21,a.col22 from enx_tab2 a  " +
                                 " inner join lead_master l on l.vch_num=a.ref_code and l.type='ORD' and l.client_unit_id='" + unitid_mst + "' " +
                                 " inner join clients_mst cp on cp.vch_num = l.cust_id  and find_in_set(cp.client_unit_id, '" + unitid_mst + "') = 1 " +
                                 " and substr(cp.vch_num, 0, 3) = '303' inner join clients_mst ct  on l.cp_id = ct.vch_num and l.cust_id = ct.ref_code  and " +
                                 "find_in_set(ct.client_unit_id, '" + unitid_mst + "') = 1 and substr(ct.ref_code, 0, 3) = '303'" +
                                 " where a.client_id|| a.client_unit_id||a.vch_num|| to_char(a.vch_date, 'yyyymmdd')|| a.type='" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "EDMODE", "Y");

                                model[0].Col1 = dtt.Rows[0]["client_id"].ToString();
                                model[0].Col2 = dtt.Rows[0]["client_unit_id"].ToString();
                                model[0].Col3 = dtt.Rows[0]["ent_by"].ToString();
                                model[0].Col4 = dtt.Rows[0]["ent_date"].ToString();

                                model[0].Col8 = "client_id||client_unit_id||vch_num|| to_char(vch_date, 'yyyymmdd')|| type = '" + URL + "'";
                                model[0].Col13 = "Update";
                                model[0].Col121 = "U";
                                model[0].Col122 = "<u>U</u>pdate";
                                model[0].Col123 = "Update & Ne<u>w</u>";
                                model[0].Col16 = dtt.Rows[0]["vch_num"].ToString();
                                model[0].Col17 = dtt.Rows[0]["col12"].ToString();
                                model[0].Col39 = dtt.Rows[0]["c_name"].ToString();// c_name
                                model[0].Col40 = dtt.Rows[0]["contact_person"].ToString();// contact_person
                                model[0].Col41 = dtt.Rows[0]["cp_phone_no"].ToString();// cplandno
                                model[0].Col42 = dtt.Rows[0]["cp_email_id"].ToString();// cpemail
                                if (model[0].Col17 == "1") //delay
                                {
                                    model[0].Col18 = dtt.Rows[0]["col4"].ToString();
                                    model[0].Col19 = dtt.Rows[0]["date1"].ToString();

                                }

                                if (model[0].Col17 == "2")//dispatch
                                {
                                    model[0].Col20 = dtt.Rows[0]["COL2"].ToString();
                                    model[0].Col21 = dtt.Rows[0]["date1"].ToString();
                                    model[0].Col22 = dtt.Rows[0]["COL5"].ToString();
                                    model[0].Col23 = dtt.Rows[0]["date2"].ToString();
                                    model[0].Col24 = dtt.Rows[0]["COL6"].ToString();
                                    model[0].Col25 = dtt.Rows[0]["COL7"].ToString();
                                    model[0].Col26 = dtt.Rows[0]["COL9"].ToString();
                                    model[0].Col27 = dtt.Rows[0]["COL10"].ToString();
                                    model[0].Col28 = dtt.Rows[0]["date3"].ToString();
                                    model[0].Col29 = dtt.Rows[0]["COL11"].ToString();
                                    model[0].Col30 = dtt.Rows[0]["COL21"].ToString();
                                    model[0].Col31 = dtt.Rows[0]["COL22"].ToString();
                                    model[0].Col32 = dtt.Rows[0]["date4"].ToString();
                                }

                                if (model[0].Col17 == "3") //Close
                                {
                                    model[0].Col33 = dtt.Rows[0]["COL2"].ToString();
                                    model[0].Col34 = dtt.Rows[0]["date1"].ToString();
                                    model[0].Col35 = dtt.Rows[0]["COL5"].ToString();
                                    model[0].Col36 = dtt.Rows[0]["COL6"].ToString();
                                    model[0].Col37 = dtt.Rows[0]["COL7"].ToString();
                                    model[0].Col38 = dtt.Rows[0]["date2"].ToString();

                                }





                                DataTable dt = sgen.getdata(userCode, "select vch_num, vch_num||'-'|| to_char(vch_date,'" + sgen.Getsqldateformat() + "') as ord from lead_master where type='ORD' and client_unit_id='" + unitid_mst + "'  and lead_con ='N' order by vch_num desc");
                                if (dt.Rows.Count > 0)
                                {
                                    mod1 = sgen.dt_to_selectlist(dt);
                                }
                                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;




                                model[0].SelectedItems1 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["ref_code"].ToString()).Distinct()).Split(',');

                            }


                            break;



                    }
                    break;
                #endregion

                #region frequency master
                case "freqmst":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            mq = "select a.rec_id,a.client_name,a.master_id,a.master_type,a.sectionid,a.SECTIONTYPE,a.SUBJECTID,a.master_name,a.master_entby as ent_by,a.classid," +
                                "to_char(a.master_entdate,'" + sgen.GetSaveSqlDateFormat() + "') as ent_date,a.status,a.master_editby edit_by," +
                                "to_char(a.master_editdate,'" + sgen.GetSaveSqlDateFormat() + "') as edit_date,a.client_id,a.client_unit_id," +
                                "to_char(convert_tz(Inactive_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldatetimeformat() + "') inactive_dt " +
                                "from " + model[0].Col10.Trim() + " a where (a.master_id|| to_char(a.vch_date, 'yyyymmdd')|| a.type)='" + URL + "' ";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "EDMODE", "Y");
                                mod1.Add(new SelectListItem { Text = "YEAR", Value = "YEAR" });
                                mod1.Add(new SelectListItem { Text = "MONTH", Value = "MONTH" });
                                mod1.Add(new SelectListItem { Text = "DAY", Value = "DAY" });
                                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;

                                mod2.Add(new SelectListItem { Text = "Booking", Value = "001" });
                                mod2.Add(new SelectListItem { Text = "Lead", Value = "002" });
                                TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2;

                                model[0].Col1 = dtt.Rows[0]["client_id"].ToString();
                                model[0].Col2 = dtt.Rows[0]["client_unit_id"].ToString();
                                model[0].Col3 = dtt.Rows[0]["ent_by"].ToString();
                                model[0].Col4 = dtt.Rows[0]["ent_date"].ToString();
                                model[0].Col7 = dtt.Rows[0]["rec_id"].ToString();
                                model[0].Col8 = "(master_id|| to_char(vch_date, 'yyyymmdd')|| type) = '" + URL + "'";
                                model[0].Col9 = tm.Col9;
                                model[0].Col10 = tm.Col10;
                                model[0].Col11 = tm.Col11;
                                model[0].Col12 = tm.Col12;
                                model[0].Col13 = "Update";
                                model[0].Col14 = tm.Col14;
                                model[0].Col15 = tm.Col15;
                                model[0].Col100 = "Update & New";
                                model[0].Col121 = "U";
                                model[0].Col122 = "<u>U</u>pdate";
                                model[0].Col123 = "Update & Ne<u>w</u>";
                                model[0].Col16 = dtt.Rows[0]["master_id"].ToString();
                                model[0].Col17 = dtt.Rows[0]["master_name"].ToString();
                                model[0].Col18 = dtt.Rows[0]["SUBJECTID"].ToString();
                                model[0].Col19 = dtt.Rows[0]["classid"].ToString();
                                model[0].Col20 = dtt.Rows[0]["SECTIONID"].ToString();
                                String[] L1 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["SECTIONTYPE"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems1 = L1;
                                String[] L2 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["master_type"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems2 = L2;
                            }
                            break;
                    }
                    break;
                #endregion

                #region phone template
                case "phonetmp":
                    switch (btnval.ToUpper())
                    {
                        case "VIEW":
                        case "EDIT":
                            mq = "select a.vch_num,a.rec_id, a.client_id,a.client_unit_id,a.ent_by,a.col2,a.col23,a.col3,a.col4," +
                                "to_char(convert_tz(a.ent_date, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') ent_date " +
                                "from enx_tab2 a where (a.client_id||a.client_unit_id|| a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.type) = '" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "EDMODE", "Y");
                                mod1.Add(new SelectListItem { Text = "Lead", Value = "001" });
                                mod1.Add(new SelectListItem { Text = "Booking", Value = "002" });
                                mod1.Add(new SelectListItem { Text = "Booking Cancel", Value = "003" });
                                mod1.Add(new SelectListItem { Text = "Feedback", Value = "004" });
                                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
                                model[0].Col1 = dtt.Rows[0]["client_id"].ToString();
                                model[0].Col2 = dtt.Rows[0]["client_unit_id"].ToString();
                                model[0].Col3 = dtt.Rows[0]["ent_by"].ToString();
                                model[0].Col4 = dtt.Rows[0]["ent_date"].ToString();
                                model[0].Col7 = dtt.Rows[0]["rec_id"].ToString();
                                model[0].Col8 = "client_id||client_unit_id||vch_num|| to_char(vch_date, 'yyyymmdd')|| type = '" + URL + "'";
                                model[0].Col13 = "Update";
                                model[0].Col121 = "U";
                                model[0].Col122 = "<u>U</u>pdate";
                                model[0].Col16 = dtt.Rows[0]["vch_num"].ToString();
                                model[0].Col20 = dtt.Rows[0]["col23"].ToString();
                                model[0].Col17 = dtt.Rows[0]["col2"].ToString();                               
                                model[0].SelectedItems1 = new string[] { dtt.Rows[0]["col3"].ToString() };
                                model[0].Chk1 = dtt.Rows[0]["col4"].ToString() == "Y" ? true : false;
                                #region attachment
                                DataTable dtf = new DataTable();
                                dtf = sgen.getdata(userCode, "select client_id||client_unit_id||vch_num||to_char(vch_date,'yyyymmdd')||type as fstr, rec_id,file_name," +
                                    "file_path,col1,col2,description,Col3 from file_tab where vch_num='" + dtt.Rows[0]["vch_num"].ToString() + "' and type='" + model[0].Col12 + "' " +
                                    "and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "' and col1='PTP'");
                                model[0].Files1 = new List<Files>();
                                List<Files> ltmf = new List<Files>();
                                if (dtf.Rows.Count > 0)
                                {
                                    try
                                    {
                                        string serverpath = Server.MapPath("~/Uploads/" + cg_com_name.Replace(" ", "") + "/");
                                        foreach (DataRow drf in dtf.Rows)
                                        {
                                            Files tmf = new Files();
                                            var fullPath = serverpath + drf["file_path"].ToString();
                                            byte[] imageArray = System.IO.File.ReadAllBytes(fullPath);
                                            string base64 = Convert.ToBase64String(imageArray);
                                            tmf.FileBase64 = base64;
                                            tmf.FileName = drf["file_name"].ToString();
                                            tmf.ContentType = drf["col2"].ToString();
                                            tmf.FileTitle = drf["col3"].ToString();
                                            tmf.FileDesc = drf["description"].ToString();
                                            ltmf.Add(tmf);
                                        }
                                        model[0].Files1 = ltmf;
                                    }
                                    catch (Exception err)
                                    {
                                        model[0].Files1 = new List<Files>();
                                        Files tm3 = new Files();
                                        tm3.FileName = "-";
                                        model[0].Files1.Add(tm3);
                                    }
                                }
                                else
                                {
                                    model[0].Files1 = new List<Files>();
                                    Files tm3 = new Files();
                                    tm3.FileName = "-";
                                    model[0].Files1.Add(tm3);
                                }

                                #endregion
                            }
                            break;
                    }
                    break;
                    #endregion
            }
            return model;
        }
        #endregion
        #region filesave
        private void filesave(List<Tmodelmain> model, string currdate, DataTable dtfile, string filename, string filepath, string filetitle, string content_type, string description)
        {
            DataRow drf = dtfile.NewRow();
            drf["rec_id"] = "0";
            drf["vch_num"] = model[0].Col18;
            drf["vch_date"] = currdate;
            drf["type"] = model[0].Col12;
            drf["ref_code"] = model[0].Col18;
            drf["ref_code1"] = model[0].Col18;
            drf["col3"] = model[0].Col19;
            drf["col1"] = filetitle;
            drf["description"] = description;

            drf["col2"] = content_type;
            if (model[0].Col7 == null || model[0].Col7 == "0")
            {
                drf["file_name"] = filename;
                drf["file_path"] = filepath;
                drf["col2"] = content_type;
            }
            else
            {
                if ((model[0].Col14 == "40004.2" || model[0].Col14 == "40004.1" || model[0].Col14 == "33008.2") && isedit == true)
                {
                    drf["rec_id"] = model[0].Col7;
                }
                else
                {
                    drf["rec_id"] = "0";
                }
            }
            drf["ent_by"] = userid_mst;
            drf["ent_date"] = currdate;
            drf["client_id"] = clientid_mst;
            drf["client_unit_id"] = unitid_mst;
            drf["edit_by"] = userid_mst;
            drf["edit_date"] = currdate;
            dtfile.Rows.Add(drf);
        }
        private void filesave(List<Tmodelmain> model, string currdate, DataTable dtfile, string filename, string filepath, string filetitle, string content_type, string description, string ref1, string ref2)
        {
            DataRow drf = dtfile.NewRow();
            drf["vch_num"] = model[0].Col18;
            drf["type"] = model[0].Col12;
            drf["ref_code"] = ref1;
            drf["ref_code1"] = ref2;
            drf["col3"] = model[0].Col19;
            drf["col1"] = filetitle;
            drf["description"] = description;
            drf["vch_date"] = currdate;
            drf["file_name"] = filename;
            drf["file_path"] = filepath;
            drf["col2"] = content_type;
            drf["r_no"] = ref2;
            if ((model[0].Col14 == "40004.2" || model[0].Col14 == "40004.1") && isedit == true)
            {
                drf["rec_id"] = model[0].Col7;
            }
            else
            {
                drf["rec_id"] = "0";
                //drf["vch_date"] = currdate;
                //drf["file_name"] = filename;
                //drf["file_path"] = filepath;
                //drf["col2"] = content_type;
            }
            drf["ent_by"] = userid_mst;
            drf["ent_date"] = currdate;
            drf["client_id"] = clientid_mst;
            drf["client_unit_id"] = unitid_mst;
            drf["edit_by"] = userid_mst;
            drf["edit_date"] = currdate;
            dtfile.Rows.Add(drf);
        }
        private void filesave(List<Tmodelmain> model, string currdate, DataTable dtfile, string filename, string filepath, string filetitle, string content_type, string description, string page_title, string ref1, string ref2)
        {
            //filesave(model, currdate, dtfile, fileName1, encpath1, "RMK", ctype1, desc, pagetitle, ref1, f_rec_id);
            DataRow drf = dtfile.NewRow();
            drf["vch_num"] = model[0].Col16;
            drf["type"] = model[0].Col12;
            drf["ref_code"] = ref1;
            drf["col3"] = page_title;
            drf["col1"] = filetitle;
            drf["description"] = description;
            drf["vch_date"] = currdate;
            drf["file_name"] = filename;
            drf["file_path"] = filepath;
            drf["col2"] = content_type;
            if (ref2 == null || ref2 == "0")
            {
                drf["rec_id"] = "0";
                //drf["vch_date"] = currdate;
                //drf["file_name"] = filename;
                //drf["file_path"] = filepath;
                //drf["col2"] = content_type;
            }
            else
            {
                if ((model[0].Col14 == "40000") && isedit == true)
                {
                    drf["rec_id"] = ref2;
                }
                else
                {
                    drf["rec_id"] = "0";
                }
            }
            drf["ent_by"] = userid_mst;
            drf["ent_date"] = currdate;
            drf["client_id"] = clientid_mst;
            drf["client_unit_id"] = unitid_mst;
            drf["edit_by"] = userid_mst;
            drf["edit_date"] = currdate;
            dtfile.Rows.Add(drf);
        }
        #endregion
        #region filesave2
        private void filesave2(List<Tmodelmain> model, string currdate, DataTable dtfile, string filename, string filepath, string filetitle, string content_type)
        {
            FillMst();
            DataRow drf = dtfile.NewRow();
            drf["vch_num"] = model[0].Col16;
            drf["type"] = model[0].Col12;
            drf["ref_code"] = model[0].Col16;
            drf["ref_code1"] = model[0].Col16;
            drf["col1"] = filetitle;
            drf["rec_id"] = "0";
            drf["vch_date"] = currdate;
            drf["file_name"] = filename;
            drf["file_path"] = filepath;
            drf["col2"] = content_type;
            drf["ent_by"] = userid_mst;
            drf["ent_date"] = currdate;
            drf["client_id"] = clientid_mst;
            drf["client_unit_id"] = unitid_mst;
            drf["edit_by"] = userid_mst;
            drf["edit_date"] = currdate;
            dtfile.Rows.Add(drf);
        }
        #endregion
        //===========================new_cust============
        #region new cust
        //public ActionResult new_cust()
        //{
        //    MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
        //    FillMst(MyGuid);
        //    chkRef();
        //    //if (userCode.Equals("")) Response.Redirect(sgen.GetCookie("",sgenFun.callbackurl));
        //    //if (Request.UrlReferrer == null) { Response.Redirect(sgen.GetCookie("",sgenFun.callbackurl)); }
        //    ViewBag.vnew = "";
        //    ViewBag.vedit = "";
        //    ViewBag.vsave = "disabled='disabled'";
        //    ViewBag.scripCall = "disableForm();";
        //    List<Tmodelmain> model = new List<Tmodelmain>();
        //    List<SelectListItem> mod1 = new List<SelectListItem>();
        //    List<SelectListItem> mod2 = new List<SelectListItem>();
        //    List<SelectListItem> mod3 = new List<SelectListItem>();
        //    Tmodelmain tm = new Tmodelmain();
        //    //Session["vch_num_vastu"] = null;
        //    tm.TList1 = mod1;
        //    tm.SelectedItems1 = new string[] { "" };
        //    tm.TList2 = mod2;
        //    tm.SelectedItems2 = new string[] { "" };
        //    tm.TList3 = mod3;
        //    tm.SelectedItems3 = new string[] { "" };
        //    mid_mst = EncryptDecrypt.Decrypt(Request.QueryString["mid"]);
        //    tm.Col14 = mid_mst.Trim();
        //    tm.Col15 = MyGuid.Trim();
        //    tm.Col9 = "NEW CLIENT";
        //    tm.Col10 = "clients_mst";
        //    tm.Col35 = "file_tab";
        //    tm.Col12 = "BCD"; // VASTU NEW CUSTOMER
        //    tm.Col13 = "Save";
        //    tm.Col11 = "and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "'";
        //    tm.Col32 = "Choose File";
        //    tm.Col39 = "Choose File";
        //    tm.Chk1 = true;
        //    if (tm.Col76 == null) ViewBag.scripCall = ViewBag.scripCall + "initialize(28.477450,77.034138);";
        //    else ViewBag.scripCall = ViewBag.scripCall + "initialize(" + tm.Col76 + ");";
        //    model.Add(tm);
        //    return View(model);
        //}
        //[HttpPost]
        //public ActionResult new_cust(List<Tmodelmain> model, string command, HttpPostedFileBase[] upd1, HttpPostedFileBase[] upd2, HttpPostedFileBase[] upd3, HttpPostedFileBase[] upd4)
        //{
        //    try
        //    {
        //    FillMst(model[0].Col15);
        //    var tm = model.FirstOrDefault();
        //    List<SelectListItem> mod1 = new List<SelectListItem>();
        //    List<SelectListItem> mod2 = new List<SelectListItem>();
        //    List<SelectListItem> mod3 = new List<SelectListItem>();
        //    model[0].TList1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
        //    model[0].TList2 = (List<SelectListItem>)TempData[MyGuid + "_TList2"];
        //    model[0].TList3 = (List<SelectListItem>)TempData[MyGuid + "_TList2"];
        //    TempData[MyGuid + "_TList1"] = model[0].TList1;
        //    TempData[MyGuid + "_TList2"] = model[0].TList2;
        //    TempData[MyGuid + "_TList3"] = model[0].TList2;
        //    if (tm.SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
        //    if (tm.SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
        //    if (tm.SelectedItems3 == null) model[0].SelectedItems3 = new string[] { "" };
        //    if (command == "New")
        //    {
        //           sgen.SetSession(MyGuid,"EDMODE", "N");
        //            ViewBag.vnew = "disabled='disabled'";
        //            ViewBag.vedit = "disabled='disabled'";
        //            ViewBag.vsave = "";
        //            ViewBag.scripCall = "enableForm();";
        //            mq1 = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + "  where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
        //            vch_num = sgen.genNo(userCode, mq1, 6, "auto_genid");
        //            model[0].Col18 = vch_num;
        //            if (tm.Col76 == null) ViewBag.scripCall = ViewBag.scripCall + "initialize(28.477450,77.034138);";
        //            else ViewBag.scripCall = ViewBag.scripCall + "initialize(" + tm.Col76 + ");";
        //            //string defval = "";
        //            #region bindpro_type
        //            mod1 = cmd_Fun.protype(userCode, unitid_mst);
        //            TempData[MyGuid + "_TList1"] = mod1;
        //            #endregion
        //            #region occupation type
        //            mod2 = cmd_Fun.occtype(userCode, unitid_mst);
        //            TempData[MyGuid + "_TList2"] = mod2;
        //            #endregion
        //            #region  SALES/SERVICE AREA
        //            mod3 = cmd_Fun.salearea(userCode, unitid_mst);
        //            TempData[MyGuid + "_TList3"] = mod3;
        //            #endregion
        //            model[0].TList1 = mod1;
        //            model[0].SelectedItems1 = new string[] { "" };
        //            model[0].TList2 = mod2;
        //            model[0].SelectedItems2 = new string[] { "" };
        //            model[0].TList3 = mod3;
        //            model[0].SelectedItems3 = new string[] { "" };
        //    }
        //    else if (command == "Cancel")
        //    {
        //        return CancelFun(model);
        //    }
        //    else if (command == "Callback")
        //    {
        //        if (sgen.GetSession(MyGuid, "delid") != null) { btnval = "FDEL"; }
        //        else if (sgen.GetSession(MyGuid, "btnval") != null) btnval = sgen.GetSession(MyGuid, "btnval").ToString();
        //        model = CallbackFun(btnval, "N", "new_cust", "Vastu", model);
        //        ViewBag.vnew = "disabled='disabled'";
        //        ViewBag.vedit = "disabled='disabled'";
        //        ViewBag.vsave = "";
        //        if (tm.Col76 == null) ViewBag.scripCall = ViewBag.scripCall + "initialize(28.477450,77.034138);";
        //        else ViewBag.scripCall = ViewBag.scripCall + "initialize(" + tm.Col76 + ");";
        //    }
        //    else if (command == "Save" || command == "Update")
        //    {
        //            var tmodel = model.FirstOrDefault();
        //            string currdate = sgen.server_datetime(userCode);
        //            string sez = "N";
        //            string Isbilling = "";
        //            DataTable dtstr = new DataTable();
        //            //dtstr = sgen.getdata(userCode, "select * from " + model[0].Col10 + " WHERE 1=2");
        //            dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10);
        //            if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
        //            {
        //                mq1 = " and vch_num<>'" + tmodel.Col18.Trim() + "'";
        //                isedit = true;
        //                vch_num = tmodel.Col18.Trim();
        //            }
        //            else
        //            {
        //                mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10 + " where type='" + model[0].Col12 + "' " + model[0].Col11 + "  ";
        //                vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
        //                model[0].Col18 = vch_num;
        //                isedit = false;
        //            }
        //            if (model[0].Chk1 == true)
        //            {
        //                Isbilling = "Y";
        //            }
        //            else { Isbilling = "N"; }
        //            if (model[0].Chk2 == true)
        //            {
        //                sez = "Y";
        //            }
        //            else { sez = "N"; }
        //            #region dtstr
        //            DataRow dr = dtstr.NewRow();
        //            dr["vch_num"] = vch_num.Trim();
        //            dr["vch_date"] = sgen.Savedate(currdate, true);
        //            dr["type"] = model[0].Col12.Trim();
        //            dr["c_name"] = model[0].Col19.Trim();//name////////////////////
        //            dr["DOB"] = sgen.Make_date_S(model[0].Col20);//dob///////////////
        //            dr["DOA"] = sgen.Make_date_S(model[0].Col21);//doa/////////////////
        //            dr["MT_DT"] = sgen.Savedate(model[0].Col30, false);//meeting datetime //////////////////
        //            dr["cpemail"] = model[0].Col22;//email//////////////
        //            dr["cpaddr"] = model[0].Col23;//address////////////
        //            dr["cpaddr2"] = model[0].Col47;//address//////////////
        //            dr["country"] = model[0].Col49;//country_id//////////////
        //            dr["state"] = model[0].Col50;//state_id//////////////
        //            dr["country2"] = model[0].Col51;//country id 2//////////////
        //            dr["state2"] = model[0].Col52;//state_id 2//////////////
        //            dr["city"] = model[0].Col16; //village ref vchnum///////////////
        //            dr["city2"] = model[0].Col48; //village ref vchnum billing add////////////
        //            dr["c_gstin"] = model[0].Col40;//gstin no//////////////
        //            dr["cpcont"] = model[0].Col33;//mob /////////////
        //            dr["cplandno"] = model[0].Col34;//landline
        //            dr["cpaltcont"] = model[0].Col36;//alt no/////////////////
        //            dr["remark"] = model[0].Col31;//remark
        //            dr["google_add"] = model[0].Col77;
        //            dr["latlong"] = model[0].Col76;
        //            dr["PR_TYPE"] = model[0].SelectedItems1.FirstOrDefault().ToString().Trim(); // type of property
        //            dr["refered_by"] = model[0].Col37; // refered by
        //            dr["file_no"] = model[0].Col38; // old file no
        //            dr["occ_type"] = model[0].SelectedItems2.FirstOrDefault().ToString().Trim(); // occupation                 
        //            dr["client_type"] = model[0].SelectedItems3.FirstOrDefault().ToString().Trim(); // type of client                 
        //            dr["panno"] = model[0].Col41;//pan
        //            dr["BILL_ADD"] = Isbilling;//Is billing Add Same
        //            dr["cfrm"] = "N";//confirm
        //            dr["sez"] = sez;//sez
        //            if (isedit)
        //            {
        //                dr["ent_by"] = model[0].Col3;
        //                dr["rec_id"] = model[0].Col7;
        //                dr["ent_date"] = model[0].Col4.Trim();
        //                dr["client_id"] = model[0].Col1.Trim();
        //                dr["client_unit_id"] = model[0].Col2.Trim();
        //                dr["edit_by"] = userid_mst.Trim();
        //                dr["edit_date"] = currdate;
        //            }
        //            else
        //            {
        //                dr["rec_id"] = "0";
        //                dr["ent_by"] = userid_mst;
        //                dr["ent_date"] = currdate;
        //                dr["client_id"] = clientid_mst;
        //                dr["client_unit_id"] = unitid_mst;
        //                dr["edit_by"] = "-";
        //                dr["edit_date"] = currdate;
        //            }
        //            #endregion
        //            dtstr.Rows.Add(dr);
        //            ok = sgen.Update_data(userCode, dtstr, model[0].Col10, model[0].Col8, isedit);
        //            if (ok)
        //            {
        //                DataTable dtfile = new DataTable();
        //                //dtfile = sgen.getdata(userCode, "select * from file_tab WHERE 1=2");
        //                dtfile = cmd_Fun.GetStructure(userCode, "file_tab");
        //                string serverpath = Server.MapPath("~/Uploads/" + cg_com_name.Replace(" ", "") + "/");
        //                try
        //                {
        //                    foreach (HttpPostedFileBase file in upd1)
        //                    {
        //                        HttpPostedFileBase file1 = file;
        //                        ctype1 = file1.ContentType;
        //                        fileName1 = file1.FileName;
        //                        path1 = clientid_mst + unitid_mst + userid_mst + currdate + "_" + fileName1;
        //                        encpath1 = sgen.Convert_Stringto64(path1).ToString();
        //                        finalpath1 = serverpath + encpath1;
        //                        file1.SaveAs(finalpath1);
        //                        filesave(model, currdate, dtfile, fileName1, encpath1, "Property", ctype1, "");
        //                    }
        //                }
        //                catch (Exception ex) { }
        //                try
        //                {
        //                    foreach (HttpPostedFileBase file in upd2)
        //                    {
        //                        HttpPostedFileBase file2 = file;
        //                        ctype2 = file2.ContentType;
        //                        fileName2 = file2.FileName;
        //                        path2 = clientid_mst + unitid_mst + userid_mst + currdate + "_" + fileName2;
        //                        encpath2 = sgen.Convert_Stringto64(path2).ToString();
        //                        finalpath2 = serverpath + encpath2;
        //                        file2.SaveAs(finalpath2);
        //                        filesave(model, currdate, dtfile, fileName2, encpath2, "Client", ctype2, "");
        //                    }
        //                }
        //                catch (Exception ex) { }
        //                try
        //                {
        //                    foreach (HttpPostedFileBase file in upd3)
        //                    {
        //                        HttpPostedFileBase file3 = file;
        //                        ctype3 = file3.ContentType;
        //                        fileName3 = file3.FileName;
        //                        path3 = clientid_mst + unitid_mst + userid_mst + currdate + "_" + fileName3;
        //                        encpath3 = sgen.Convert_Stringto64(path3).ToString();
        //                        finalpath3 = serverpath + encpath3;
        //                        file3.SaveAs(finalpath3);
        //                        filesave(model, currdate, dtfile, fileName3, encpath3, "Pan", ctype3, "");
        //                    }
        //                }
        //                catch (Exception ex) { }
        //                try
        //                {
        //                    foreach (HttpPostedFileBase file in upd4)
        //                    {
        //                        HttpPostedFileBase file4 = file;
        //                        ctype4 = file4.ContentType;
        //                        fileName4 = file4.FileName;
        //                        path4 = clientid_mst + unitid_mst + userid_mst + currdate + "_" + fileName3;
        //                        encpath4 = sgen.Convert_Stringto64(path4).ToString();
        //                        finalpath4 = serverpath + encpath4;
        //                        file4.SaveAs(finalpath4);
        //                        filesave(model, currdate, dtfile, fileName4, encpath4, "gst", ctype3, "");
        //                    }
        //                }
        //                catch (Exception ex) { }
        //                res = sgen.Update_data(userCode, dtfile, "file_tab", model[0].Col40, false);
        //                if (res)
        //                {
        //                    ViewBag.vnew = "";
        //                    ViewBag.vedit = "";
        //                    ViewBag.vsave = "disabled='disabled'";
        //                    ViewBag.scripCall = "showmsgJS(1, 'Data Saved Successfully', 1);disableForm();";
        //                    if (tm.Col76 == null) ViewBag.scripCall = ViewBag.scripCall + "initialize(28.477450,77.034138);";
        //                    else ViewBag.scripCall = ViewBag.scripCall + "initialize(" + tm.Col76 + ");";
        //                    model = new List<Tmodelmain>();
        //                    model.Add(new Tmodelmain
        //                    {
        //                        Col9 = tmodel.Col9,
        //                        Col10 = tmodel.Col10,
        //                        Col11 = tmodel.Col11,
        //                        Col12 = tmodel.Col12,
        //                        Col13 = "Save",
        //                        Col14 = tmodel.Col14,
        //                        Col15 = tmodel.Col15,
        //                        TList1 = mod1,
        //                        TList2 = mod2,
        //                        TList3 = mod3,
        //                        Col32 = tmodel.Col32,
        //                        Col39 = tmodel.Col39,
        //                        SelectedItems1 = new string[] { "" },
        //                        SelectedItems2 = new string[] { "" },
        //                        SelectedItems3 = new string[] { "" }
        //                    });
        //                }
        //                else { ViewBag.scripCall = "showmsgJS(3, 'Record Not Saved', 0);"; }
        //            }
        //    }
        //    }
        //    catch (Exception err)
        //    {
        //        var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
        //        ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
        //    }
        //    ModelState.Clear();
        //    return View(model);
        //}
        #endregion
        [HttpGet]
        public FileResult fdown(string value, string typ, string Myguid)
        {
            FillMst(Myguid);

            if (!value.Trim().Equals(""))
            {
                type = typ;
                DataTable dt2 = new DataTable();
                mq = "select file_name,file_path from file_tab where rec_id='" + value.Trim() + "' and type='" + typ + "' and client_id='"
                    + clientid_mst + "' and client_unit_id='" + unitid_mst + "'";
                dt2 = sgen.getdata(userCode, mq);
                if (dt2.Rows.Count > 0)
                {
                    path1 = Convert.ToString(dt2.Rows[0]["file_path"]);
                    fileName1 = Convert.ToString(dt2.Rows[0]["file_name"]);
                }
            }


            byte[] fileBytes = System.IO.File.ReadAllBytes(Server.MapPath("~/Uploads/" + cg_com_name.Replace(" ", "") + "/" + path1));

            return File(fileBytes, System.Net.Mime.MediaTypeNames.Application.Octet, fileName1);
        }
        [HttpPost]
        public void fdelete(string value, string Myguid)
        {
            if (!value.Trim().Equals(""))
            {
                sgen = new sgenFun(MyGuid);
                sgen.SetSession(Myguid, "delid", value);
            }
        }

        //===========================follow cust=============
        #region follow_cust
        //public ActionResult new_follow()
        //{
        //    FillMst();
        //    chkRef();
        //   sgen.SetSession(MyGuid,"EDMODE", "N");
        //    ViewBag.vnew = "disabled='disabled'";
        //    ViewBag.vedit = "disabled='disabled'";
        //    ViewBag.vsave = "";
        //    ViewBag.scripCall = "enableForm();";
        //    List<Tmodelmain> model = new List<Tmodelmain>();
        //    List<SelectListItem> mod1 = new List<SelectListItem>();
        //    List<SelectListItem> mod2 = new List<SelectListItem>();
        //    Tmodelmain tm = new Tmodelmain();
        //    //tm.LTM1 = new List<Tmodelmain>();
        //    mid_mst = EncryptDecrypt.Decrypt(Request.QueryString["mid"]);
        //    MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
        //    tm.Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
        //    tm.Col9 = "FOLLOW CUSTOMER"; tm.Col12 = "VFC"; // VASTU FOLLOW CUST
        //    tm.Col14 = mid_mst.Trim();
        //    tm.Col15 = MyGuid.Trim();
        //    tm.Col32 = "Choose File";
        //    tm.Col13 = "Save";
        //    tm.Col10 = "enx_tab2";
        //    tm.Col35 = "file_tab";
        //    tm.Col37 = "D";
        //    #region bindpro_type
        //    mod1 = cmd_Fun.protype(userCode, unitid_mst);
        //    TempData[MyGuid + "_TList1"] = mod1;
        //    #endregion
        //    #region occupation type
        //    mod2 = cmd_Fun.occtype(userCode, unitid_mst);
        //   TempData[MyGuid + "_TList2"] = mod2;
        //    #endregion
        //    tm.TList1 = mod1;
        //    tm.SelectedItems1 = new string[] { "" };
        //    tm.TList2 = mod2;
        //    tm.SelectedItems2 = new string[] { "" };
        //    if (tm.Col76 == null) ViewBag.scripCall = ViewBag.scripCall + "initialize(28.477450,77.034138);";
        //    else ViewBag.scripCall = ViewBag.scripCall + "initialize(" + tm.Col76 + ");";
        //    sgen.SetSession(MyGuid, "adttmp", null);
        //    //mq = "select max(convert(vch_num,UNSIGNED INTEGER)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
        //    //vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
        //    //model[0].Col17 = "1";
        //    //model[0].Col18 = vch_num;
        //    model.Add(tm);
        //    return View(model);
        //}
        //[HttpPost]
        //public ActionResult new_follow(List<Tmodelmain> model, string command, HttpPostedFileBase[] upd1)
        //{
        //    try
        //    {
        //    FillMst();
        //    var tm = model.FirstOrDefault();
        //    List<SelectListItem> mod1 = new List<SelectListItem>();
        //    List<SelectListItem> mod2 = new List<SelectListItem>();
        //    model[0].TList1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
        //    model[0].TList2 = (List<SelectListItem>)TempData[MyGuid + "_TList2"];
        //    TempData[MyGuid + "_TList1"] = model[0].TList1;
        //    TempData[MyGuid + "_TList2"] = model[0].TList2;
        //    if (tm.SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
        //    if (tm.SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
        //    DataTable dt = new DataTable();
        //    DataTable dttmp = new DataTable();
        //    if (command == "Cancel")
        //    {
        //        return CancelFun(model);
        //    }
        //    else if (command == "Callback")
        //    {
        //        model = StartCallback(model);
        //        if (tm.Col76 == null) ViewBag.scripCall = ViewBag.scripCall + "initialize(28.477450,77.034138);";
        //        else ViewBag.scripCall = ViewBag.scripCall + "initialize(" + tm.Col76 + ");";
        //    }
        //    else if (command == "Add")
        //    {
        //        model[0].Col31 = "";
        //        var tmodel = model.FirstOrDefault();
        //        string currdate = sgen.server_datetime_local(userCode);
        //        currdate = sgen.Savedate(currdate, true);
        //        if (sgen.GetSession(MyGuid, "adttmp") != null) { dttmp = (DataTable)sgen.GetSession(MyGuid, "adttmp"); }
        //        else
        //        {
        //            dttmp.Columns.Add("entdate");
        //            dttmp.Columns.Add("remark");
        //            dttmp.Columns.Add("user");
        //            //Session["adttmp"] = dttmp;
        //        }
        //        if (model[0].Col33 == null)
        //        {
        //            ViewBag.scripCall = "showmsgJS(1, 'Please Select Date', 2);";
        //            goto END;
        //        }
        //        DataRow drt = dttmp.NewRow();
        //        drt["entdate"] = model[0].Col33;
        //        drt["remark"] = model[0].Col34;
        //        drt["user"] = userid_mst;
        //        dttmp.Rows.Add(drt);
        //        dttmp.AcceptChanges();
        //        sgen.SetSession(MyGuid, "adttmp", dttmp);
        //        dttmp = (DataTable)sgen.GetSession(MyGuid, "adttmp");
        //        model[0].Col33 = "";
        //        model[0].Col34 = "";
        //        var body = new StringBuilder();
        //        //dt = sgen.getdata(userCode, mq);
        //        if (dttmp.Rows.Count > 0)
        //        {
        //            foreach (DataRow dr in dttmp.Rows)
        //            {
        //                string rmk = "";
        //                if (model[0].Col37 == "D")
        //                {
        //                    rmk = "Date : " + dr["entdate"] + "" + Environment.NewLine;
        //                    remark = remark + rmk + "Remark : " + " " + dr["remark"] + Environment.NewLine + Environment.NewLine + "";
        //                }
        //                else
        //                {
        //                    rmk = "Date : " + dr["entdate"] + "" + Environment.NewLine;
        //                    remark = remark + rmk + "User : " + dr["user"] + " " + ',' + " " + "Remark : " + " " + dr["remark"] + Environment.NewLine + Environment.NewLine + "";
        //                }
        //            }
        //            model[0].Col31 = remark;
        //        }
        //        ViewBag.vnew = "disabled='disabled'";
        //        ViewBag.vedit = "disabled='disabled'";
        //        ViewBag.vsave = "";
        //        if (tm.Col76 == null) ViewBag.scripCall = ViewBag.scripCall + "initialize(28.477450,77.034138);";
        //        else ViewBag.scripCall = ViewBag.scripCall + "initialize(" + tm.Col76 + ");";
        //        END:;
        //    }
        //    else if (command == "Save" || command == "Update")
        //    {
        //            if (model[0].Col31 == null) { ViewBag.scripCall = "showmsgJS(1,'Please add Remark',2)"; return View(model); }
        //            var tmodel = model.FirstOrDefault();
        //            string currdate = sgen.server_datetime(userCode);
        //            DataTable dtstr = new DataTable();
        //            //dtstr = sgen.getdata(userCode, "select * from " + model[0].Col10 + " WHERE 1=2");
        //            dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10);
        //            if (sgen.GetSession(MyGuid,"EDMODE").ToString().Equals("Y"))
        //            {
        //                mq1 = " and vch_num<>'" + tmodel.Col18.Trim() + "'";
        //                isedit = true;
        //                vch_num = tmodel.Col18.Trim();
        //            }
        //            else
        //            {
        //                mq = sgen.seekval(userCode, "select master_name from " + model[0].Col10 + " where type='" + model[0].Col12 + "' " + model[0].Col11 + " and master_name='" + model[0].Col17 + "' ", "master_name");
        //                if (!mq.Trim().Equals("0"))
        //                {
        //                    ViewBag.scripCall = "showmsgJS(3, 'You Saved Name', 1);";
        //                    return View(model);
        //                }
        //                else
        //                {
        //                    mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10 + " where type='" + model[0].Col12 + "' " + model[0].Col11 + "  ";
        //                    vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
        //                    model[0].Col18 = vch_num;
        //                    isedit = false;
        //                }
        //            }
        //            dttmp = (DataTable)sgen.GetSession(MyGuid, "adttmp");
        //            if (dttmp.Rows.Count > 0)
        //            {
        //                for (int i = 0; i < dttmp.Rows.Count; i++)
        //                {
        //                    #region dtstr
        //                    DataRow dr = dtstr.NewRow();
        //                    dr["rec_id"] = "0";
        //                    dr["vch_num"] = vch_num.Trim();
        //                    dr["vch_date"] = sgen.Savedate(currdate, true);
        //                    dr["type"] = model[0].Col12.Trim();
        //                    dr["col1"] = dttmp.Rows[i]["remark"].ToString();
        //                    dr["col3"] = dttmp.Rows[i]["user"].ToString();
        //                    dr["date1"] = sgen.Savedate(dttmp.Rows[i]["entdate"].ToString(), true);
        //                    dr["col2"] = model[0].Col36; // cust id
        //                    dr["col5"] = model[0].Col37; // sorting type
        //                    if (isedit)
        //                    {
        //                        dr["ent_by"] = model[0].Col3;
        //                        //dr["rec_id"] = model[0].Col7;
        //                        dr["ent_date"] = model[0].Col4.Trim();
        //                        dr["client_id"] = model[0].Col1.Trim();
        //                        dr["client_unit_id"] = model[0].Col2.Trim();
        //                        dr["edit_by"] = userid_mst.Trim();
        //                        dr["edit_date"] = currdate;
        //                    }
        //                    else
        //                    {
        //                        dr["ent_by"] = userid_mst;
        //                        dr["ent_date"] = currdate;
        //                        dr["client_id"] = clientid_mst;
        //                        dr["client_unit_id"] = unitid_mst;
        //                        dr["edit_by"] = "-";
        //                        dr["edit_date"] = currdate;
        //                    }
        //                    dtstr.Rows.Add(dr);
        //                    #endregion
        //                }
        //                ok = sgen.Update_data(userCode, dtstr, model[0].Col10, model[0].Col8, isedit);
        //                if (ok)
        //                {
        //                    DataTable dtfile = new DataTable();
        //                    //dtfile = sgen.getdata(userCode, "select * from " + model[0].Col35 + " WHERE 1=2");
        //                    dtfile = cmd_Fun.GetStructure(userCode, model[0].Col35);
        //                    type_desc = "Property Attachment";
        //                    string serverpath = Server.MapPath("~/Uploads/" + cg_com_name.Replace(" ", "") + "/");
        //                    try
        //                    {
        //                        foreach (HttpPostedFileBase file in upd1)
        //                        {
        //                            HttpPostedFileBase file1 = file;
        //                            ctype1 = file1.ContentType;
        //                            fileName1 = file1.FileName;
        //                            path1 = clientid_mst + unitid_mst + userid_mst + currdate + "_" + fileName1;
        //                            encpath1 = sgen.Convert_Stringto64(path1).ToString();
        //                            finalpath1 = serverpath + encpath1;
        //                            file1.SaveAs(finalpath1);
        //                            filesave(model, currdate, dtfile, fileName1, encpath1, "new customer", ctype1, "");
        //                        }
        //                    }
        //                    catch (Exception ex) { }
        //                    bool res = sgen.Update_data(userCode, dtfile, model[0].Col35, model[0].Col36, false);
        //                    if (res)
        //                    {
        //                        ViewBag.vnew = "";
        //                        ViewBag.vedit = "";
        //                        ViewBag.vsave = "disabled='disabled'";
        //                        ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
        //                        if (tm.Col76 == null) ViewBag.scripCall = ViewBag.scripCall + "initialize(28.477450,77.034138);";
        //                        else ViewBag.scripCall = ViewBag.scripCall + "initialize(" + tm.Col76 + ");";
        //                        model = new List<Tmodelmain>();
        //                        model.Add(new Tmodelmain
        //                        {
        //                            Col9 = tmodel.Col9,
        //                            Col10 = tmodel.Col10,
        //                            Col11 = tmodel.Col11,
        //                            Col12 = tmodel.Col12,
        //                            Col35 = tmodel.Col35,
        //                            Col13 = "Save",
        //                            Col14 = tmodel.Col14,
        //                            Col15 = tmodel.Col15,
        //                            Col37 = tmodel.Col37,
        //                            TList1 = mod1,
        //                            Col76 = tmodel.Col76,
        //                            SelectedItems1 = new string[] { "" },
        //                            TList2 = mod2,
        //                            SelectedItems2 = new string[] { "" },
        //                        });
        //                        sgen.SetSession(MyGuid, "adttmp",null);
        //                    }
        //                    else {   }
        //                }
        //            }
        //    }
        //    }
        //    catch (Exception err)
        //    {
        //        var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
        //        ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
        //    }
        //    ModelState.Clear();
        //    return View(model);
        //}
        #endregion
        //====================confirm cust====================
        #region Family Detail
        public ActionResult conf_cust()
        {
            FillMst();
            chkRef();

            //if (userCode.Equals("")) Response.Redirect(sgen.GetCookie("",sgenFun.callbackurl));
            //if (Request.UrlReferrer == null) { Response.Redirect(sgen.GetCookie("",sgenFun.callbackurl)); }
            ViewBag.vnew = "";
            ViewBag.vedit = "";
            ViewBag.vsave = "disabled='disabled'";
            ViewBag.vsavenew = "disabled='disabled'";
            ViewBag.scripCall = "disableForm();";
            List<SelectListItem> mod1 = new List<SelectListItem>();
            // List<SelectListItem> mod3 = new List<SelectListItem>();
            // List<SelectListItem> mod4 = new List<SelectListItem>();
            // List<SelectListItem> mod5 = new List<SelectListItem>();
            List<Tmodelmain> model = new List<Tmodelmain>();
            Tmodelmain tm1 = new Tmodelmain();
            mid_mst = EncryptDecrypt.Decrypt(Request.QueryString["mid"]);
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            tm1.Col10 = "enx_tab2";
            tm1.Col13 = "Save";
            tm1.Col100 = "Save & New";
            tm1.Col121 = "S";
            tm1.Col122 = "<u>S</u>ave";
            tm1.Col123 = "Save & Ne<u>w</u>";
            //tm1.Col9 = "CONFIRM CLIENT";
            tm1.Col9 = "ADD FAMILY DETAIL";
            tm1.Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            tm1.Col12 = "BCD";
            tm1.Col14 = mid_mst.Trim();
            tm1.Col15 = MyGuid.Trim();
            tm1.LTM2 = new List<Tmodelmain>();
            Tmodelmain tmltm1 = new Tmodelmain();
            tmltm1.Col1 = "1";
            tmltm1.Col40 = "Choose File";
            tm1.LTM2.Add(tmltm1);
            #region  relation_master
            TempData[MyGuid + "_TList1"] = tm1.LTM2[0].TList1 = mod1 = cmd_Fun.relation(userCode, unitid_mst);

            #endregion

            if (tmltm1.SelectedItems1 == null) tmltm1.SelectedItems1 = new string[] { "" };
            //tm1.LTM2[0].TList1 = mod1;
            //tm1.LTM2[0].SelectedItems1 = new string[] { "" };
            //TempData[MyGuid + "_TList1"] = mod1;



            // TempData[MyGuid + "_TList3"] = tm1.TList3 = mod3;
            //  TempData[MyGuid + "_TList4"] = tm1.TList4 = mod4;
            //  TempData[MyGuid + "_TList5"] = tm1.TList5 = mod5;
            // tm1.SelectedItems3 = new string[] { "" };
            //  tm1.SelectedItems4 = new string[] { "" };
            // tm1.SelectedItems5 = new string[] { "" };
            tm1.Col39 = "Choose File";
            DataTable dtb = (DataTable)sgen.GetSession(MyGuid, "URIGHTS");
            try
            {
                dtb = dtb.Select("m_id='" + tm1.Col14 + "'").CopyToDataTable();
                if (dtb.Rows.Count > 0)
                {
                    tm1.Col60 = dtb.Rows[0]["btnnew"].ToString();
                    tm1.Col61 = dtb.Rows[0]["btnedit"].ToString();
                    tm1.Col62 = dtb.Rows[0]["btnview"].ToString();
                    // tm1.Col33 = dtb.Rows[0]["btnextend"].ToString();
                }
            }
            catch (Exception ex) { }
            //if (tm1.Col76 == null) ViewBag.scripCall = ViewBag.scripCall + "initialize(28.477450,77.034138);";
            //else ViewBag.scripCall = ViewBag.scripCall + "initialize(" + tm1.Col76 + ");";
            model.Add(tm1);
            return View(model);
        }
        public List<Tmodelmain> new_conf_cust(List<Tmodelmain> model)
        {
            if (model[0].Col60 == "N")
            {
                ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for confirm customer, please contact your admin', 2);";
                return model;
            }
            var tm = model.FirstOrDefault();
            sgen.SetSession(MyGuid, "EDMODE", "N");
            ViewBag.vnew = "disabled='disabled'";
            ViewBag.vedit = "disabled='disabled'";
            ViewBag.vsave = "";
            ViewBag.vsavenew = "";
            ViewBag.scripCall = "enableForm();";
            mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
            vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
            model[0].Col18 = vch_num;
            string defval = "";
            Tmodelmain tmltm1 = new Tmodelmain();
            List<SelectListItem> mod1 = new List<SelectListItem>();
            // List<SelectListItem> mod3 = new List<SelectListItem>();
            // List<SelectListItem> mod4 = new List<SelectListItem>();
            // List<SelectListItem> mod5 = new List<SelectListItem>();
            #region bindpro_type
            // TempData[MyGuid + "_TList3"] = model[0].TList3 = mod3 = cmd_Fun.protype(userCode, unitid_mst);

            #endregion
            #region  typeofclient
            //  TempData[MyGuid + "_TList4"] = model[0].TList4 = mod4 = cmd_Fun.clienttype(userCode, unitid_mst, out defval);
            #endregion
            #region occupation type
            // TempData[MyGuid + "_TList5"] = model[0].TList5 = mod5 = cmd_Fun.occtype(userCode, unitid_mst, out defval);
            #endregion
            //TempData[MyGuid + "_TList3"] = mod3;
            tmltm1.TList1 = mod1; // prop type      
            tmltm1.SelectedItems1 = new string[] { "" };
            // model[0].SelectedItems3 = new string[] { "" };
            //  model[0].SelectedItems4 = new string[] { "" };
            //  model[0].SelectedItems5 = new string[] { "" };
            tmltm1.Col1 = "1";
            tmltm1.Col40 = "Choose File";
            model[0].LTM2 = new List<Tmodelmain>();
            model[0].LTM2.Add(tmltm1);
            if (tm.Col76 == null) ViewBag.scripCall = ViewBag.scripCall + "initialize(28.477450,77.034138);";
            else ViewBag.scripCall = ViewBag.scripCall + "initialize(" + tm.Col76 + ");";

            return model;
        }
        [HttpPost]
        public ActionResult conf_cust(List<Tmodelmain> model, string modelstr, string command, string hfrow, HttpPostedFileBase[] upd2)
        {
            try
            {
                if (modelstr != null) model = sgen.Make_Model(modelstr);
                FillMst(model[0].Col15);
                int fcount = 0;
                var tm = model.FirstOrDefault();
                #region ddl
                List<SelectListItem> mod1 = new List<SelectListItem>();
                // List<SelectListItem> mod3 = new List<SelectListItem>();
                //  List<SelectListItem> mod4 = new List<SelectListItem>();
                //  List<SelectListItem> mod5 = new List<SelectListItem>();
                DataTable dt = new DataTable();
                Tmodelmain tmltm1 = new Tmodelmain();
                TempData[MyGuid + "_TList1"] = tmltm1.TList1 = mod1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                // TempData[MyGuid + "_TList3"] = model[0].TList3 = mod3 = (List<SelectListItem>)TempData[MyGuid + "_TList3"];
                //  TempData[MyGuid + "_TList4"] = model[0].TList4 = mod4 = (List<SelectListItem>)TempData[MyGuid + "_TList4"];
                //   TempData[MyGuid + "_TList5"] = model[0].TList5 = mod5 = (List<SelectListItem>)TempData[MyGuid + "_TList5"];

                foreach (var mod in model)
                {
                    foreach (var modl in mod.LTM2)
                    {
                        modl.TList1 = mod1;
                    }
                }
                if (tmltm1.SelectedItems1 == null) tmltm1.SelectedItems1 = new string[] { "" };
                // if (tm.SelectedItems3 == null) model[0].SelectedItems3 = new string[] { "" };
                //   if (tm.SelectedItems4 == null) model[0].SelectedItems4 = new string[] { "" };
                //   if (tm.SelectedItems5 == null) model[0].SelectedItems5 = new string[] { "" };

                //for (int f = 0; f < model[0].LTM2.Count; f++)
                //{
                //    if (model[0].LTM2[f].File1[0] != null)
                //    {
                //        sgen.SetSession(MyGuid, "file" + f, model[0].LTM2[f].File1);
                //        model[0].LTM2[f].Col40 = model[0].LTM2[f].File1[0].FileName;
                //    }
                //}
                #endregion

                for (int f = 0; f < model[0].LTM2.Count; f++)
                {
                    fcount = 0;
                    sgen.SetSession(MyGuid, "file" + f, model[0].LTM2[f].File1);
                    //if (model[0].LTM2[f].File1[0] != null)
                    if (model[0].LTM2[f].File1.Count != 0)
                    {
                        fcount = f;
                        sgen.SetSession(MyGuid, "file" + f, model[0].LTM2[f].File1);
                        model[0].LTM2[f].Col40 = "";
                        foreach (var file in model[0].LTM2[f].File1)
                        {
                            if (model[0].LTM2[f].Col40 == "") model[0].LTM2[f].Col40 += file.FileName;
                            else model[0].LTM2[f].Col40 += "," + file.FileName;
                        }
                    }

                }
                if (command == "New")
                {
                    model = new_conf_cust(model);
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    if ((model[0].Col61 == "N") && (btnval == "EDIT"))
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for edit Confirmed Customer, please contact your admin', 2);disableForm();";
                        return View(model);
                    }
                    if (sgen.GetSession(MyGuid, "delid") != null) { btnval = "FDEL"; }
                    else if (sgen.GetSession(MyGuid, "btnval") != null) btnval = sgen.GetSession(MyGuid, "btnval").ToString();
                    String URL = sgen.GetSession(MyGuid, "SSEEKVAL").ToString();
                    if (URL.Contains("EDIT"))
                    {
                        sgen.SetSession(MyGuid, "btnval", "EDIT");
                        btnval = "EDIT";
                        string[] newurl = URL.Split('_');
                        sgen.SetSession(MyGuid, "SSEEKVAL", newurl[2]);
                    }
                    if (URL.Contains("NEW"))
                    {
                        sgen.SetSession(MyGuid, "btnval", "NEW");
                        string[] newurl = URL.Split('_');
                        sgen.SetSession(MyGuid, "SSEEKVAL", newurl[0]);
                    }
                    model = CallbackFun(btnval, "N", "conf_cust", "Vastu", model);
                    //model = StartCallback(model);
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                    //if (tm.Col76 == null) ViewBag.scripCall = ViewBag.scripCall + "initialize(28.477450,77.034138);";
                    //else ViewBag.scripCall = ViewBag.scripCall + "initialize(" + tm.Col76 + ");";
                }
                else if (command.Trim() == "Save" || command.Trim() == "Update" || command == "Save & New" || command == "Update & New")
                {
                    var tmodel = model.FirstOrDefault();
                    string currdate = sgen.server_datetime(userCode);
                    string vch_num = "";
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        isedit = true;
                        vch_num = model[0].Col18;
                    }
                    else
                    {
                        isedit = false;
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        model[0].Col18 = vch_num;
                    }
                    //DataTable dataTable = sgen.getdata(userCode, "select  * from " + model[0].Col10.Trim() + "  where  1=2");
                    DataTable dataTable = cmd_Fun.GetStructure(userCode, model[0].Col10);
                    DataTable dtstr = sgen.getdata(userCode, "select  * from clients_mst  where  1=2");
                    //#region dtstr
                    //DataRow dr = dtstr.NewRow();
                    //dr["vch_num"] = model[0].Col45.Trim();
                    //dr["vch_date"] = sgen.Savedate(currdate, true);
                    //dr["type"] = "BCD";
                    //dr["c_name"] = model[0].Col19.Trim();//name
                    //dr["dob"] = sgen.Savedate(model[0].Col20, false);//dob
                    //dr["doa"] = sgen.Savedate(model[0].Col21, false);//doa
                    //dr["MT_DT"] = sgen.Savedate(model[0].Col30, false);//meeting datetime
                    //dr["cpemail"] = model[0].Col22;//email
                    //dr["cpaddr"] = model[0].Col23;//address
                    //dr["city"] = model[0].Col16; //village ref vchnum
                    //dr["PR_TYPE"] = model[0].SelectedItems3.FirstOrDefault().ToString().Trim(); // type of property
                    //dr["remark"] = model[0].Col31;//remark
                    //dr["google_add"] = model[0].Col77;
                    //dr["latlong"] = model[0].Col76;
                    //dr["cpcont"] = model[0].Col33; // mob no
                    //dr["CPLANDNO"] = model[0].Col34; // land ln
                    //dr["cpaltcont"] = model[0].Col36; // alt no
                    //dr["refered_by"] = model[0].Col37; // refered by
                    //dr["file_no"] = model[0].Col38; // old file no
                    //dr["occ_type"] = model[0].SelectedItems5.FirstOrDefault().ToString().Trim(); // occupation
                    //dr["cpaddr2"] = model[0].Col49; // add 2
                    //dr["city2"] = model[0].Col50; // ref vill
                    //dr["country"] = model[0].Col51;//country_id//////////////
                    //dr["state"] = model[0].Col52;//state_id//////////////
                    //dr["country2"] = model[0].Col53;//country id 2//////////////
                    //dr["state2"] = model[0].Col54;//state_id 2//////////////
                    //dr["sez"] = model[0].Col58;//state_id 2//////////////
                    //dr["cfrm"] = "Y";//confirm
                    //dr["BILL_ADD"] = model[0].Col55;
                    //dr["panno"] = model[0].Col56;
                    //dr["client_type"] = model[0].SelectedItems4.FirstOrDefault().ToString().Trim(); ;
                    //dr["MT_DT"] = model[0].Col57;
                    //dr["rec_id"] = model[0].Col46;
                    //dr["ent_by"] = userid_mst;
                    //dr["ent_date"] = currdate;
                    //dr["client_id"] = clientid_mst;
                    //dr["client_unit_id"] = unitid_mst;
                    //dr["edit_by"] = "-";
                    //dr["edit_date"] = currdate;
                    //#endregion
                    //dtstr.Rows.Add(dr);
                    //ok = sgen.Update_data(userCode, dtstr, "clients_mst", model[0].Col48, true);
                    //if (ok)
                    {
                        DataTable dtfile = new DataTable();
                        //dtfile = sgen.getdata(userCode, "select * from file_tab WHERE 1=2");
                        dtfile = cmd_Fun.GetStructure(userCode, "file_tab");
                        //string serverpath = Server.MapPath("~/Uploads/" + cg_com_name.Replace(" ", "") + "/");
                        //try
                        //{
                        //    foreach (HttpPostedFileBase file in upd2)
                        //    {
                        //        HttpPostedFileBase file2 = file;
                        //        ctype2 = file2.ContentType;
                        //        fileName2 = file2.FileName;
                        //        path2 = clientid_mst + unitid_mst + userid_mst + currdate + "_" + fileName2;
                        //        encpath2 = sgen.Convert_Stringto64(path2).ToString();
                        //        finalpath2 = serverpath + encpath2;
                        //        file2.SaveAs(finalpath2);
                        //        filesave(model, currdate, dtfile, fileName2, encpath2, "Client", ctype2, "");
                        //    }
                        //}
                        //catch (Exception ex) { }
                        //res = sgen.Update_data(userCode, dtfile, "file_tab", "", false);
                        #region Family Detail                     
                        DataTable dtfile1 = new DataTable();
                        //for (int f = 0; f < model[0].LTM2.Count; f++) { if (model[0].LTM2[f].File1 != null) { Session["file" + f] = model[0].LTM2[f].File1; } }
                        for (int j = 0; j < model[0].LTM2.Count; j++)
                        {
                            DataRow dr2 = dataTable.NewRow();
                            dr2["rec_id"] = "0";
                            dr2["type"] = model[0].Col12;
                            dr2["type_desc"] = "Client Family";
                            dr2["vch_date"] = currdate;
                            dr2["vch_num"] = vch_num.Trim();
                            dr2["col1"] = model[0].Col45; // customer id
                            dr2["col2"] = model[0].SelectedItems4.FirstOrDefault(); //  type of client                                                    
                            dr2["col3"] = model[0].LTM2[j].Col35; // name
                            dr2["date1"] = sgen.Make_date_S(model[0].LTM2[j].Col36); //dob
                            dr2["date2"] = sgen.Make_date_S(model[0].LTM2[j].Col37);  //doa
                            dr2["col5"] = model[0].LTM2[j].SelectedItems1.FirstOrDefault(); //relation
                            if (isedit)
                            {
                                dr2["client_id"] = model[0].Col1.Trim();
                                dr2["client_unit_id"] = model[0].Col2.Trim();
                                dr2["ent_by"] = model[0].Col3;
                                dr2["ent_date"] = model[0].Col4;
                                dr2["edit_by"] = userid_mst;
                                dr2["edit_date"] = currdate;
                            }
                            else
                            {
                                dr2["client_id"] = clientid_mst;
                                dr2["client_unit_id"] = unitid_mst;
                                dr2["ent_by"] = userid_mst;
                                dr2["ent_date"] = currdate;
                                dr2["edit_by"] = "-";
                                dr2["edit_date"] = currdate;
                            }
                            dataTable.Rows.Add(dr2);
                            //dtfile1 = sgen.getdata(userCode, "select * from file_tab WHERE 1=2");
                            dtfile1 = cmd_Fun.GetStructure(userCode, "file_tab");
                            string serverpath1 = Server.MapPath("~/Uploads/" + cg_com_name.Replace(" ", "") + "/");
                            try
                            {

                                List<HttpPostedFileBase> ff = (List<HttpPostedFileBase>)sgen.GetSession(MyGuid, "file" + j);
                                foreach (HttpPostedFileBase file1 in ff)
                                {
                                    ctype1 = file1.ContentType;
                                    fileName1 = file1.FileName;
                                    path1 = clientid_mst + unitid_mst + userid_mst + currdate + "_" + fileName1;
                                    encpath1 = sgen.Convert_Stringto64(path1).ToString();
                                    finalpath1 = serverpath1 + encpath1;
                                    file1.SaveAs(finalpath1);
                                    filesave(model, currdate, dtfile1, fileName1, encpath1, "Family", ctype1, "");
                                }
                            }
                            catch (Exception ex) { }


                        }
                        #endregion
                        ok = sgen.Update_data(userCode, dataTable, model[0].Col10, model[0].Col8, isedit);
                        if (ok)
                        {
                            res = sgen.Update_data(userCode, dtfile1, "file_tab", "", false);
                            model = new List<Tmodelmain>();
                            model.Add(new Tmodelmain
                            {
                                Col9 = tmodel.Col9,
                                Col10 = tmodel.Col10,
                                Col11 = tmodel.Col11,
                                Col12 = tmodel.Col12,
                                Col13 = "Save",
                                Col100 = "Save & New",
                                Col121 = "S",
                                Col122 = "<u>S</u>ave",
                                Col123 = "Save & Ne<u>w</u>",
                                Col14 = tmodel.Col14,
                                Col15 = tmodel.Col15,
                                // TList3 = mod3,
                                //  TList4 = mod4,
                                //  TList5 = mod5,
                                SelectedItems3 = new string[] { "" },
                                SelectedItems4 = new string[] { "" },
                                SelectedItems5 = new string[] { "" },
                                LTM2 = new List<Tmodelmain>() { new Tmodelmain {
                                TList1=mod1,
                                SelectedItems1=new string[]{ "" }
                            } }
                            });
                            if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                            {
                                ViewBag.vnew = "";
                                ViewBag.vedit = "";
                                ViewBag.vsave = "disabled='disabled'";
                                ViewBag.vsavenew = "disabled='disabled'";
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                            }
                            else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                            {
                                try
                                {
                                    //  model = new_conf_cust(model);
                                    Make_query("conf_cust", "Select Account", "NEW", "1", "", "");
                                    ViewBag.scripCall = "callFoo('Select Account');";
                                    ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                                }
                                catch (Exception ex) { }
                            }
                        }
                        else { ViewBag.scripCall = "showmsgJS(1, 'Something Went Wrong, Data Not Saved', 0);"; }
                    }
                }
                else if (command == "Add Family")
                {
                    Tmodelmain ntm = new Tmodelmain();
                    TempData[MyGuid + "_TList1"] = ntm.TList1 = mod1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];

                    ntm.Col1 = (Convert.ToInt32(model[0].LTM2.Max(x => sgen.Make_int(x.Col1))) + 1).ToString();

                    ntm.SelectedItems1 = new string[] { "" };
                    ntm.Col40 = "Choose File";
                    model[0].LTM2.Add(ntm);
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";

                }
                else if (command == "Remove Family")
                {
                    if (model[0].LTM2.Count > 1) model[0].LTM2.RemoveAt(sgen.Make_int(hfrow));
                    else
                    {
                        ViewBag.scripCall = "showmsgJS(1,'You cannot remove last entry',2)";
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";

                        return View(model);
                    }
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";

                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion

        #region Family Detail
        public ActionResult conf_custN()
        {
            FillMst();
            ViewBag.vnew = "";
            ViewBag.vedit = "";
            ViewBag.vsave = "disabled='disabled'";
            ViewBag.vsavenew = "disabled='disabled'";
            ViewBag.scripCall = "disableForm();";
            List<SelectListItem> mod1 = new List<SelectListItem>();
            List<Tmodelmain> model = new List<Tmodelmain>();
            Tmodelmain tm1 = new Tmodelmain();
            mid_mst = EncryptDecrypt.Decrypt(Request.QueryString["mid"]);
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            tm1.Col9 = "ADD FAMILY DETAIL";
            tm1.Col10 = "enx_tab2";
            tm1.Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            tm1.Col12 = "BCD";
            tm1.Col13 = "Save";
            tm1.Col14 = mid_mst.Trim();
            tm1.Col15 = MyGuid.Trim();
            tm1.Col35 = "file_tab";
            tm1.Col100 = "Save & New";
            tm1.Col121 = "S";
            tm1.Col122 = "<u>S</u>ave";
            tm1.Col123 = "Save & Ne<u>w</u>";

            tm1.LTM1 = new List<Tmodelmain>();
            Tmodelmain ltm1 = new Tmodelmain();
            ltm1.Col40 = "Choose File";
            ltm1.TList1 = mod1;
            tm1.LTM1.Add(ltm1);

            DataTable dtb = (DataTable)sgen.GetSession(MyGuid, "URIGHTS");
            try
            {
                dtb = dtb.Select("m_id='" + tm1.Col14 + "'").CopyToDataTable();
                if (dtb.Rows.Count > 0)
                {
                    tm1.Col60 = dtb.Rows[0]["btnnew"].ToString();
                    tm1.Col61 = dtb.Rows[0]["btnedit"].ToString();
                    tm1.Col62 = dtb.Rows[0]["btnview"].ToString();
                }
            }
            catch (Exception ex) { }
            model.Add(tm1);
            return View(model);
        }
        [HttpPost]
        public ActionResult conf_custN(List<Tmodelmain> model, string command, string hfrow)
        {
            try
            {
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();
                DataTable dt = new DataTable();
                List<SelectListItem> mod1 = new List<SelectListItem>();
                Tmodelmain tmltm2 = new Tmodelmain();
                TempData[MyGuid + "_TList1"] = tmltm2.TList1 = mod1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                foreach (var mod in model)
                {
                    foreach (var modl in mod.LTM1)
                    {
                        modl.TList1 = mod1;
                    }
                }
                if (tmltm2.SelectedItems1 == null) tmltm2.SelectedItems1 = new string[] { "" };
                if (model[0].LTM1 != null)
                {
                    for (int f = 0; f < model[0].LTM1.Count; f++)
                    {
                        try
                        {
                            if (model[0].LTM1[f].File1[0] != null)
                            {
                                sgen.SetSession(MyGuid, "familyfile" + f, model[0].LTM1[f].File1);
                                model[0].LTM1[f].Col40 = model[0].LTM1[f].File1[0].FileName;
                            }
                        }
                        catch (Exception ex)
                        {
                            sgen.SetSession(MyGuid, "familyfile" + f, null);
                        }
                    }
                }

                if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    if ((model[0].Col61 == "N") && (btnval == "EDIT"))
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for edit Confirmed Customer, please contact your admin', 2);disableForm();";
                        return View(model);
                    }
                    if (sgen.GetSession(MyGuid, "delid") != null) { btnval = "FDEL"; }
                    else if (sgen.GetSession(MyGuid, "btnval") != null) btnval = sgen.GetSession(MyGuid, "btnval").ToString();
                    String URL = sgen.GetSession(MyGuid, "SSEEKVAL").ToString();
                    if (URL.Contains("EDIT"))
                    {
                        sgen.SetSession(MyGuid, "btnval", "EDIT");
                        btnval = "EDIT";
                        string[] newurl = URL.Split('_');
                        sgen.SetSession(MyGuid, "SSEEKVAL", newurl[2]);
                    }
                    if (URL.Contains("NEW"))
                    {
                        sgen.SetSession(MyGuid, "btnval", "NEW");
                        string[] newurl = URL.Split('_');
                        sgen.SetSession(MyGuid, "SSEEKVAL", newurl[0]);
                    }
                    model = CallbackFun(btnval, "N", actionName, controllerName, model);
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
                else if (command.Trim() == "Save" || command.Trim() == "Update" || command == "Save & New" || command == "Update & New")
                {
                    Satransaction sat1 = new Satransaction(userCode, MyGuid);
                    if (model[0].LTM1.Count <= 0)
                    {
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.scripCall += "showmsgJS(1, 'Please fill atleast 1 row', 0);";
                    }
                    var tmodel = model.FirstOrDefault();
                    string currdate = sgen.server_datetime(userCode);
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        isedit = true;
                        vch_num = model[0].Col18;
                    }
                    else
                    {
                        isedit = false;
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        model[0].Col18 = vch_num;
                    }
                    DataTable dataTable = cmd_Fun.GetStructure(userCode, model[0].Col10);
                    DataTable dtstr = sgen.getdata(userCode, "select  * from clients_mst where  1=2");

                    #region Family Detail                                                                 
                    for (int j = 0; j < model[0].LTM1.Count; j++)
                    {
                        DataRow dr2 = dataTable.NewRow();
                        dr2["rec_id"] = "0";
                        dr2["type"] = model[0].Col12;
                        dr2["type_desc"] = "Client Family";
                        dr2["vch_date"] = currdate;
                        dr2["vch_num"] = vch_num.Trim();
                        dr2["col1"] = model[0].Col45; // customer id
                        dr2["col2"] = model[0].SelectedItems4.FirstOrDefault(); //  type of client                                                    
                        dr2["col3"] = model[0].LTM1[j].Col35; // name
                        dr2["date1"] = sgen.Make_date_S(model[0].LTM1[j].Col36); //dob
                        dr2["date2"] = sgen.Make_date_S(model[0].LTM1[j].Col37);  //doa
                        dr2["col5"] = model[0].LTM1[j].SelectedItems1.FirstOrDefault(); //relation                        
                        dr2["R_NO"] = model[0].LTM1[j].Col1;//rno
                        if (isedit)
                        {
                            dr2["client_id"] = model[0].Col1.Trim();
                            dr2["client_unit_id"] = model[0].Col2.Trim();
                            dr2["ent_by"] = model[0].Col3;
                            dr2["ent_date"] = model[0].Col4;
                            dr2["edit_by"] = userid_mst;
                            dr2["edit_date"] = currdate;
                        }
                        else
                        {
                            dr2["client_id"] = clientid_mst;
                            dr2["client_unit_id"] = unitid_mst;
                            dr2["ent_by"] = userid_mst;
                            dr2["ent_date"] = currdate;
                            dr2["edit_by"] = "-";
                            dr2["edit_date"] = currdate;
                        }
                        dataTable.Rows.Add(dr2);
                    }
                    #endregion
                    res = sgen.Update_data_uncommit2(userCode, dataTable, model[0].Col10.Trim(), model[0].Col8, isedit, sat1);
                    if (res)
                    {
                        DataTable dtfile = new DataTable();
                        dtfile = cmd_Fun.GetStructure(userCode, "file_tab");
                        string serverpath1 = Server.MapPath("~/Uploads/" + cg_com_name.Replace(" ", "") + "/");
                        for (int k = 0; k < model[0].LTM1.Count; k++)
                        {
                            try
                            {
                                List<HttpPostedFileBase> ff = (List<HttpPostedFileBase>)sgen.GetSession(MyGuid, "familyfile" + k);
                                foreach (HttpPostedFileBase file1 in ff)
                                {
                                    ctype1 = file1.ContentType;
                                    fileName1 = file1.FileName;
                                    path1 = clientid_mst + unitid_mst + userid_mst + currdate + "_" + fileName1;
                                    encpath1 = sgen.Convert_Stringto64(path1).ToString();
                                    finalpath1 = serverpath1 + encpath1;
                                    file1.SaveAs(finalpath1);
                                    filesave(model, currdate, dtfile, fileName1, encpath1, "familyfile", ctype1, "", model[0].Col45, (k + 1).ToString());
                                }
                            }
                            catch (Exception ex) { }
                        }
                        ok = sgen.Update_data_uncommit2(userCode, dtfile, "file_tab", "", false, sat1);
                        if (!ok)
                        {
                            sat1.Rollback();
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.scripCall += "showmsgJS(1, 'Something went wrong in file', 0);";
                            ModelState.Clear();
                            return View(model);
                        }
                        sat1.Commit();
                        ViewBag.vnew = "";
                        ViewBag.vedit = "";
                        ViewBag.vsave = "disabled='disabled'";
                        ViewBag.vsavenew = "disabled='disabled'";

                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col9 = tmodel.Col9,
                            Col10 = tmodel.Col10,
                            Col11 = tmodel.Col11,
                            Col12 = tmodel.Col12,
                            Col13 = "Save",
                            Col100 = "Save & New",
                            Col121 = "S",
                            Col122 = "<u>S</u>ave",
                            Col123 = "Save & Ne<u>w</u>",
                            Col14 = tmodel.Col14,
                            Col15 = tmodel.Col15,
                            LTM1 = new List<Tmodelmain>() { new Tmodelmain {
                                TList1=mod1,
                                SelectedItems1=new string[]{ "" }
                            } }
                        });
                        if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                        {
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                        {
                            try
                            {
                                Make_query("conf_cust", "Select Account", "NEW", "1", "", "");
                                ViewBag.scripCall = "callFoo('Select Account');";
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                            }
                            catch (Exception ex) { }
                        }
                    }
                    else
                    {
                        sat1.Rollback();
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                        ViewBag.scripCall += "showmsgJS(1, 'Data Not Saved', 0);";
                        ModelState.Clear();
                        return View(model);
                    }
                }
                else if (command == "Add Family")
                {
                    Tmodelmain ntm = new Tmodelmain();
                    ntm.Col1 = (Convert.ToInt32(model[0].LTM1.Max(x => sgen.Make_int(x.Col1))) + 1).ToString();
                    TempData[MyGuid + "_TList1"] = ntm.TList1 = mod1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                    ntm.SelectedItems1 = new string[] { "" };
                    ntm.Col40 = "Choose File";
                    model[0].LTM1.Add(ntm);
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
                else if (command == "Remove Family")
                {
                    if (model[0].LTM1.Count > 1) model[0].LTM1.RemoveAt(sgen.Make_int(hfrow));
                    else
                    {
                        ViewBag.scripCall = "showmsgJS(1,'You cannot remove last entry',2)";
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                        return View(model);
                    }
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion

        //=================cust_prop==========
        #region Account Property
        public ActionResult cust_prop()
        {
            FillMst();
            chkRef();
            //if (userCode.Equals("")) Response.Redirect(sgen.GetCookie("",sgenFun.callbackurl));
            //if (Request.UrlReferrer == null) { Response.Redirect(sgen.GetCookie("",sgenFun.callbackurl)); }
            ViewBag.vnew = "";
            ViewBag.vedit = "";
            ViewBag.vsave = "disabled='disabled'";
            ViewBag.vsavenew = "disabled='disabled'";
            ViewBag.scripCall = "disableForm();";
            List<SelectListItem> mod2 = new List<SelectListItem>();
            List<Tmodelmain> model = new List<Tmodelmain>();
            Tmodelmain tm1 = new Tmodelmain();
            mid_mst = EncryptDecrypt.Decrypt(Request.QueryString["mid"]);
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            tm1.Col10 = "enx_tab2";
            tm1.Col13 = "Save";
            tm1.Col100 = "Save & New";
            tm1.Col121 = "S";
            tm1.Col122 = "<u>S</u>ave";
            tm1.Col123 = "Save & Ne<u>w</u>";
            tm1.Col9 = "ACCOUNT PROPERTY";
            tm1.Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            tm1.Col12 = "VCP"; // VASTU CUSTOMER PROPERTY
            tm1.Col14 = mid_mst.Trim();
            tm1.Col15 = MyGuid.Trim();
            tm1.Col35 = "file_tab";
            tm1.LTM2 = new List<Tmodelmain>();
            Tmodelmain tmltm2 = new Tmodelmain();
            tmltm2.Col1 = "1";
            tmltm2.Col40 = "Choose File";
            tm1.LTM2.Add(tmltm2);
            //tm1.LTM2[0].TList2 = mod2;
            //tm1.LTM2[0].SelectedItems2 = new string[] { "" };
            //TempData[MyGuid + "_TList2"] = mod2;
            #region bindpro_type
            TempData[MyGuid + "_TList2"] = tm1.LTM2[0].TList2 = mod2 = cmd_Fun.protype(userCode, unitid_mst);


            #endregion
            DataTable dtb = (DataTable)sgen.GetSession(MyGuid, "URIGHTS");
            try
            {
                dtb = dtb.Select("m_id='" + tm1.Col14 + "'").CopyToDataTable();
                if (dtb.Rows.Count > 0)
                {
                    tm1.Col30 = dtb.Rows[0]["btnnew"].ToString();
                    tm1.Col31 = dtb.Rows[0]["btnedit"].ToString();
                    tm1.Col32 = dtb.Rows[0]["btnview"].ToString();
                    //  tm1.Col33 = dtb.Rows[0]["btnextend"].ToString();
                }
            }
            catch (Exception ex) { }
            model.Add(tm1);
            return View(model);
        }
        public List<Tmodelmain> new_cust_prop(List<Tmodelmain> model)
        {
            try
            {
                if (model[0].Col30 == "N")
                {
                    ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for create new account property, please contact your admin', 2);";
                    return model;
                }
                Tmodelmain tmltm2 = new Tmodelmain();

                sgen.SetSession(MyGuid, "EDMODE", "N");
                ViewBag.vnew = "disabled='disabled'";
                ViewBag.vedit = "disabled='disabled'";
                ViewBag.vsave = "";
                ViewBag.vsavenew = "";
                ViewBag.scripCall = "enableForm();";
                mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                model[0].Col18 = vch_num;
                List<SelectListItem> mod2 = new List<SelectListItem>();
                #region bindpro_type
                TempData[MyGuid + "_TList2"] = tmltm2.TList2 = mod2 = cmd_Fun.protype(userCode, unitid_mst);

                #endregion

                tmltm2.SelectedItems2 = new string[] { "" };
                tmltm2.Col1 = "1";
                tmltm2.Col40 = "Choose File";
                model[0].LTM2 = new List<Tmodelmain>();
                model[0].LTM2.Add(tmltm2);
            }
            catch (Exception ex)
            { ViewBag.scripCall = "showmsgJS(1, '" + ex.Message.ToString().Replace("'", "") + "', 1);"; }
            return model;
        }
        [HttpPost]
        //public ActionResult cust_prop(List<Tmodelmain> model,string modelstr, string command, string hfrow, HttpPostedFileBase[] upd2)
        public ActionResult cust_prop(List<Tmodelmain> model, string command, string hfrow, HttpPostedFileBase[] upd2)
        {
            try
            {
                //if (modelstr != null) model = sgen.Make_Model(modelstr);
                FillMst(model[0].Col15);
                int fcount = 0;
                //Session["viewName"] = actionName;
                //Session["controllerName"] = controllerName;
                var tm = model.FirstOrDefault();
                List<SelectListItem> mod2 = new List<SelectListItem>();
                DataTable dttmp = new DataTable();
                DataTable dt = new DataTable();

                Tmodelmain tmltm2 = new Tmodelmain();
                TempData[MyGuid + "_TList2"] = tmltm2.TList2 = mod2 = (List<SelectListItem>)TempData[MyGuid + "_TList2"];
                foreach (var mod in model)
                {
                    foreach (var modl in mod.LTM2)
                    {
                        modl.TList2 = mod2;
                    }
                }
                if (tmltm2.SelectedItems2 == null) tmltm2.SelectedItems2 = new string[] { "" };

                for (int f = 0; f < model[0].LTM2.Count; f++)
                {
                    try
                    {
                        if (model[0].LTM2[f].File1[0] != null)
                        {
                            fcount = f;
                            sgen.SetSession(MyGuid, "file" + f, model[0].LTM2[f].File1);
                            model[0].LTM2[f].Col40 = "";
                            foreach (var file in model[0].LTM2[f].File1)
                            {
                                if (model[0].LTM2[f].Col40 == "") model[0].LTM2[f].Col40 += file.FileName;
                                else model[0].LTM2[f].Col40 += "," + file.FileName;
                            }
                        }
                    }
                    catch (Exception er)
                    {
                        if (model[0].LTM2[f].File1.Count != 0)
                        {
                            fcount = f;
                            sgen.SetSession(MyGuid, "file" + f, model[0].LTM2[f].File1);
                            model[0].LTM2[f].Col40 = "";
                            foreach (var file in model[0].LTM2[f].File1)
                            {
                                if (model[0].LTM2[f].Col40 == "") model[0].LTM2[f].Col40 += file.FileName;
                                else model[0].LTM2[f].Col40 += "," + file.FileName;
                            }
                        }
                    }
                }

                //for (int f = 0; f < tm.LTM1.Count; f++)
                //{
                //    if (tm.LTM1[f].Col1 != null && tm.LTM1[f].Col1 != "" && tm.LTM1[f].Col1 != "1")
                //    {
                //        model[0].LTM1[f].Col1 = tm.LTM1[f].Col1;
                //        model[0].LTM1[f].Col2 = tm.LTM1[f].Col2;
                //        model[0].LTM1[f].Col3 = tm.LTM1[f].Col3;
                //        model[0].LTM1[f].Col4 = tm.LTM1[f].Col4;
                //    }
                //}

                if (command == "New")
                {
                    model = new_cust_prop(model);
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    if (sgen.GetSession(MyGuid, "delid") != null) { btnval = "FDEL"; }
                    else if (sgen.GetSession(MyGuid, "btnval") != null) btnval = sgen.GetSession(MyGuid, "btnval").ToString();
                    String URL = sgen.GetSession(MyGuid, "SSEEKVAL").ToString();
                    if (URL.Contains("EDIT"))
                    {
                        sgen.SetSession(MyGuid, "btnval", "EDIT");
                        btnval = "EDIT";
                        string[] newurl = URL.Split('_');
                        sgen.SetSession(MyGuid, "SSEEKVAL", newurl[2]);
                    }
                    if (URL.Contains("NEW"))
                    {
                        sgen.SetSession(MyGuid, "btnval", "NEW");
                        string[] newurl = URL.Split('_');
                        sgen.SetSession(MyGuid, "SSEEKVAL", newurl[0]);
                    }
                    if ((model[0].Col31 == "N") && (btnval == "EDIT"))
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for edit account property, please contact your admin', 2);disableForm();";
                        return View(model);
                    }
                    model = CallbackFun(btnval, "N", actionName, controllerName, model);
                    //model = StartCallback(model);
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
                else if (command.Trim() == "Save" || command.Trim() == "Update" || command == "Save & New" || command == "Update & New")
                {
                    if (model[0].Col30 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for save account property, please contact your admin', 2);";
                        return View(model);
                    }
                    var tmodel = model.FirstOrDefault();
                    string currdate = sgen.server_datetime(userCode);
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        isedit = true;
                        vch_num = model[0].Col18;
                    }
                    else
                    {
                        isedit = false;
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        model[0].Col18 = vch_num;
                    }
                    DataTable dataTable = cmd_Fun.GetStructure(userCode, model[0].Col10);
                    #region Save
                    DataTable dtfile = new DataTable();
                    dtfile = cmd_Fun.GetStructure(userCode, "file_tab");
                    if (model[0].Col45 == null || model[0].Col45 == "")
                    {
                        ViewBag.scripCall = "showmsgJS(1,'Please choose client',2)";
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        return View(model);
                    }
                    for (int k = 0; k < model[0].LTM2.Count; k++)
                    {
                        DataRow dr2 = dataTable.NewRow();
                        dr2["rec_id"] = "0";
                        dr2["type"] = model[0].Col12;
                        dr2["type_desc"] = model[0].Col45;
                        dr2["vch_date"] = currdate;
                        dr2["vch_num"] = model[0].Col18;
                        dr2["col2"] = model[0].Col45;
                        dr2["col14"] = model[0].LTM2[k].Col38; // property  name
                        dr2["col1"] = model[0].LTM2[k].Col39; // property  type
                                                              //  dr2["date3"] = sgen.Make_date_S(model[0].LTM2[k].Col36); // pdob
                                                              //  dr2["date4"] = sgen.Make_date_S(model[0].LTM2[k].Col37);  // pdoa
                        dr2["col6"] = model[0].LTM2[k].SelectedItems2.FirstOrDefault(); //prop type 
                        dr2["R_NO"] = k.ToString(); //prop type 
                        dr2["Col4"] = model[0].LTM2[k].Col47;  //prop address
                        if (isedit)
                        {
                            dr2["client_id"] = model[0].Col1.Trim();
                            dr2["client_unit_id"] = model[0].Col2.Trim();
                            dr2["vch_num"] = model[0].Col18;
                            dr2["ent_by"] = model[0].Col3;
                            dr2["ent_date"] = model[0].Col4;
                            dr2["edit_by"] = userid_mst;
                            dr2["edit_date"] = currdate;
                        }
                        else
                        {
                            dr2["client_id"] = clientid_mst;
                            dr2["client_unit_id"] = unitid_mst;
                            dr2["ent_by"] = userid_mst;
                            dr2["ent_date"] = currdate;
                            dr2["edit_by"] = "-"; ;
                            dr2["edit_date"] = currdate;
                        }
                        dataTable.Rows.Add(dr2);
                        //dtfile = cmd_Fun.GetStructure(userCode, "file_tab");
                        string serverpath = Server.MapPath("~/Uploads/" + cg_com_name.Replace(" ", "") + "/");
                        try
                        {
                            List<HttpPostedFileBase> ff = (List<HttpPostedFileBase>)sgen.GetSession(MyGuid, "file" + k);
                            foreach (HttpPostedFileBase file1 in ff)
                            {
                                ctype1 = file1.ContentType;
                                fileName1 = file1.FileName;
                                path1 = clientid_mst + unitid_mst + userid_mst + currdate + "_" + fileName1;
                                encpath1 = sgen.Convert_Stringto64(path1).ToString();
                                finalpath1 = serverpath + encpath1;
                                file1.SaveAs(finalpath1);
                                filesave(model, currdate, dtfile, fileName1, encpath1, "Property", ctype1, "", model[0].Col45, k.ToString());
                            }
                        }
                        catch (Exception ex) { }
                    }
                    #endregion
                    ok = sgen.Update_data(userCode, dataTable, model[0].Col10, model[0].Col8, isedit);
                    if (ok)
                    {
                        for (int f = 0; f <= fcount; f++)
                        {
                            sgen.SetSession(MyGuid, "file" + f, null);
                        }
                        res = sgen.Update_data(userCode, dtfile, "file_tab", "", false);
                        ViewBag.vnew = "";
                        ViewBag.vedit = "";
                        ViewBag.vsave = "disabled='disabled'";
                        ViewBag.vsavenew = "disabled='disabled'";
                        //ViewBag.scripCall = "showmsgJS(1, 'Data Saved Successfully', 1);disableForm();";
                        //   ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col9 = tmodel.Col9,
                            Col10 = tmodel.Col10,
                            Col11 = tmodel.Col11,
                            Col12 = tmodel.Col12,
                            Col13 = "Save",
                            Col100 = "Save & New",
                            Col121 = "S",
                            Col122 = "<u>S</u>ave",
                            Col123 = "Save & Ne<u>w</u>",
                            Col14 = tmodel.Col14,
                            Col15 = tmodel.Col15,
                            LTM2 = new List<Tmodelmain>() { new Tmodelmain {
                            TList2=mod2,
                            SelectedItems2=new string[]{ "" }
                            } }
                        });
                        if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                        {
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                        {
                            try
                            {
                                // model = new_cust_prop(model);
                                Make_query("cust_prop", "Select Account", "NEW", "1", "", "");
                                ViewBag.scripCall = "callFoo('Select Account');";
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                            }
                            catch (Exception ex)
                            {
                                ViewBag.scripCall += "mytoast('error', 'toast-top-right', '" + ex.Message.ToString().Trim() + "');";

                            }
                        }
                    }
                    else { ViewBag.scripCall = "showmsgJS(1, 'Something Went Wrong, Data Not Saved', 0);"; }
                }
                else if (command == "Add Property")
                {
                    Tmodelmain ntm1 = new Tmodelmain();
                    TempData[MyGuid + "_TList2"] = ntm1.TList2 = mod2 = (List<SelectListItem>)TempData[MyGuid + "_TList2"];

                    ntm1.Col1 = (Convert.ToInt32(model[0].LTM2.Max(x => sgen.Make_int(x.Col1))) + 1).ToString();

                    ntm1.SelectedItems2 = new string[] { "" };
                    ntm1.Col40 = "Choose File";
                    model[0].LTM2.Add(ntm1);
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                    ViewBag.steps += ";$('#btnstep2').click()";
                }
                else if (command == "Remove Property")
                {
                    if (model[0].LTM2.Count > 1) model[0].LTM2.RemoveAt(sgen.Make_int(hfrow));
                    else
                    {
                        ViewBag.scripCall = "showmsgJS(1,'You cannot remove last entry',2)";
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                        return View(model);
                    }
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion

        #region Account Property
        public ActionResult cust_propN()
        {
            FillMst();
            //chkRef();
            ViewBag.vnew = "";
            ViewBag.vedit = "";
            ViewBag.vsave = "disabled='disabled'";
            ViewBag.vsavenew = "disabled='disabled'";
            ViewBag.scripCall = "disableForm();";
            List<SelectListItem> mod2 = new List<SelectListItem>();
            List<Tmodelmain> model = new List<Tmodelmain>();
            Tmodelmain tm1 = new Tmodelmain();
            mid_mst = EncryptDecrypt.Decrypt(Request.QueryString["mid"]);
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);

            tm1.Col9 = "ACCOUNT PROPERTY";
            tm1.Col10 = "enx_tab2";
            tm1.Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            tm1.Col12 = "VCP"; // VASTU CUSTOMER PROPERTY            
            tm1.Col13 = "Save";
            tm1.Col14 = mid_mst.Trim();
            tm1.Col15 = MyGuid.Trim();
            tm1.Col35 = "file_tab";
            tm1.Col100 = "Save & New";
            tm1.Col121 = "S";
            tm1.Col122 = "<u>S</u>ave";
            tm1.Col123 = "Save & Ne<u>w</u>";

            tm1.LTM1 = new List<Tmodelmain>();
            Tmodelmain ltm1 = new Tmodelmain();
            ltm1.Col40 = "Choose File";
            ltm1.TList2 = mod2;
            tm1.LTM1.Add(ltm1);

            DataTable dtb = (DataTable)sgen.GetSession(MyGuid, "URIGHTS");
            try
            {
                dtb = dtb.Select("m_id='" + tm1.Col14 + "'").CopyToDataTable();
                if (dtb.Rows.Count > 0)
                {
                    tm1.Col30 = dtb.Rows[0]["btnnew"].ToString();
                    tm1.Col31 = dtb.Rows[0]["btnedit"].ToString();
                    tm1.Col32 = dtb.Rows[0]["btnview"].ToString();
                    tm1.Col33 = dtb.Rows[0]["btnextend"].ToString();
                }
            }
            catch (Exception ex) { }
            model.Add(tm1);
            return View(model);
        }
        [HttpPost]
        public ActionResult cust_propN(List<Tmodelmain> model, string command, string hfrow)
        {
            try
            {
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();
                List<SelectListItem> mod2 = new List<SelectListItem>();
                DataTable dttmp = new DataTable();
                DataTable dt = new DataTable();

                Tmodelmain tmltm2 = new Tmodelmain();
                TempData[MyGuid + "_TList2"] = tmltm2.TList2 = mod2 = (List<SelectListItem>)TempData[MyGuid + "_TList2"];
                foreach (var mod in model)
                {
                    foreach (var modl in mod.LTM1)
                    {
                        modl.TList2 = mod2;
                    }
                }
                if (tmltm2.SelectedItems2 == null) tmltm2.SelectedItems2 = new string[] { "" };
                if (model[0].LTM1 != null)
                {
                    for (int f = 0; f < model[0].LTM1.Count; f++)
                    {
                        try
                        {
                            if (model[0].LTM1[f].File1[0] != null)
                            {
                                sgen.SetSession(MyGuid, "propfile" + f, model[0].LTM1[f].File1);
                                model[0].LTM1[f].Col40 = model[0].LTM1[f].File1[0].FileName;
                            }
                        }
                        catch (Exception ex)
                        {
                            sgen.SetSession(MyGuid, "propfile" + f, null);
                        }
                    }
                }

                if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    if (sgen.GetSession(MyGuid, "delid") != null) { btnval = "FDEL"; }
                    else if (sgen.GetSession(MyGuid, "btnval") != null) btnval = sgen.GetSession(MyGuid, "btnval").ToString();
                    String URL = sgen.GetSession(MyGuid, "SSEEKVAL").ToString();
                    if (URL.Contains("EDIT"))
                    {
                        sgen.SetSession(MyGuid, "btnval", "EDIT");
                        btnval = "EDIT";
                        string[] newurl = URL.Split('_');
                        sgen.SetSession(MyGuid, "SSEEKVAL", newurl[2]);
                    }
                    if (URL.Contains("NEW"))
                    {
                        sgen.SetSession(MyGuid, "btnval", "NEW");
                        string[] newurl = URL.Split('_');
                        sgen.SetSession(MyGuid, "SSEEKVAL", newurl[0]);
                    }
                    if ((model[0].Col31 == "N") && (btnval == "EDIT"))
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for edit account property, please contact your admin', 2);disableForm();";
                        return View(model);
                    }
                    model = CallbackFun(btnval, "N", actionName, controllerName, model);
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
                else if (command.Trim() == "Save" || command.Trim() == "Update" || command == "Save & New" || command == "Update & New")
                {
                    Satransaction sat1 = new Satransaction(userCode, MyGuid);
                    if (model[0].Col30 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for save account property, please contact your admin', 2);";
                        return View(model);
                    }
                    if (model[0].LTM1.Count <= 0)
                    {
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.scripCall += "showmsgJS(1, 'Please fill atleast 1 row', 0);";
                    }
                    if (model[0].Col45 == null || model[0].Col45 == "")
                    {
                        ViewBag.scripCall = "showmsgJS(1,'Please choose client',2)";
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        return View(model);
                    }
                    var tmodel = model.FirstOrDefault();
                    string currdate = sgen.server_datetime(userCode);
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        isedit = true;
                        vch_num = model[0].Col18;
                    }
                    else
                    {
                        isedit = false;
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        model[0].Col18 = vch_num;
                    }
                    DataTable dataTable = cmd_Fun.GetStructure(userCode, model[0].Col10);
                    for (int k = 0; k < model[0].LTM1.Count; k++)
                    {
                        #region Save 
                        DataRow dr2 = dataTable.NewRow();
                        dr2["rec_id"] = "0";
                        dr2["type"] = model[0].Col12;
                        dr2["type_desc"] = model[0].Col45;
                        dr2["vch_date"] = currdate;
                        dr2["vch_num"] = model[0].Col18;
                        dr2["col2"] = model[0].Col45;
                        dr2["col14"] = model[0].LTM1[k].Col38; // property  name
                        dr2["col1"] = model[0].LTM1[k].Col39; // property  type                                                            
                        dr2["col6"] = model[0].LTM1[k].SelectedItems2.FirstOrDefault(); //prop type 
                        dr2["R_NO"] = model[0].LTM1[k].Col1;//rno
                        dr2["Col4"] = model[0].LTM1[k].Col47;  //prop address
                        if (isedit)
                        {
                            dr2["client_id"] = model[0].Col1.Trim();
                            dr2["client_unit_id"] = model[0].Col2.Trim();
                            dr2["vch_num"] = model[0].Col18;
                            dr2["ent_by"] = model[0].Col3;
                            dr2["ent_date"] = model[0].Col4;
                            dr2["edit_by"] = userid_mst;
                            dr2["edit_date"] = currdate;
                        }
                        else
                        {
                            dr2["client_id"] = clientid_mst;
                            dr2["client_unit_id"] = unitid_mst;
                            dr2["ent_by"] = userid_mst;
                            dr2["ent_date"] = currdate;
                            dr2["edit_by"] = "-"; ;
                            dr2["edit_date"] = currdate;
                        }
                        dataTable.Rows.Add(dr2);
                        #endregion                                              
                    }
                    res = sgen.Update_data_uncommit2(userCode, dataTable, model[0].Col10.Trim(), model[0].Col8, isedit, sat1);
                    if (res)
                    {
                        DataTable dtfile = new DataTable();
                        dtfile = cmd_Fun.GetStructure(userCode, "file_tab");
                        string serverpath1 = Server.MapPath("~/Uploads/" + cg_com_name.Replace(" ", "") + "/");
                        for (int k = 0; k < model[0].LTM1.Count; k++)
                        {
                            try
                            {
                                List<HttpPostedFileBase> ff = (List<HttpPostedFileBase>)sgen.GetSession(MyGuid, "propfile" + k);
                                foreach (HttpPostedFileBase file1 in ff)
                                {
                                    ctype1 = file1.ContentType;
                                    fileName1 = file1.FileName;
                                    path1 = clientid_mst + unitid_mst + userid_mst + currdate + "_" + fileName1;
                                    encpath1 = sgen.Convert_Stringto64(path1).ToString();
                                    finalpath1 = serverpath1 + encpath1;
                                    file1.SaveAs(finalpath1);
                                    filesave(model, currdate, dtfile, fileName1, encpath1, "Property", ctype1, "", model[0].Col45, (k + 1).ToString());
                                }
                            }
                            catch (Exception ex) { }
                        }
                        ok = sgen.Update_data_uncommit2(userCode, dtfile, "file_tab", "", false, sat1);
                        if (!ok)
                        {
                            sat1.Rollback();
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.scripCall += "showmsgJS(1, 'Something went wrong in file', 0);";
                            ModelState.Clear();
                            return View(model);
                        }

                        sat1.Commit();
                        ViewBag.vnew = "";
                        ViewBag.vedit = "";
                        ViewBag.vsave = "disabled='disabled'";
                        ViewBag.vsavenew = "disabled='disabled'";

                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col9 = tmodel.Col9,
                            Col10 = tmodel.Col10,
                            Col11 = tmodel.Col11,
                            Col12 = tmodel.Col12,
                            Col13 = "Save",
                            Col100 = "Save & New",
                            Col121 = "S",
                            Col122 = "<u>S</u>ave",
                            Col123 = "Save & Ne<u>w</u>",
                            Col14 = tmodel.Col14,
                            Col15 = tmodel.Col15,
                            LTM1 = new List<Tmodelmain>() { new Tmodelmain {
                            TList2=mod2,
                            SelectedItems2=new string[]{ "" }
                            } }
                        });
                        if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                        {
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                        {
                            try
                            {
                                // model = new_cust_prop(model);
                                Make_query("cust_prop", "Select Account", "NEW", "1", "", "");
                                ViewBag.scripCall = "callFoo('Select Account');";
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                            }
                            catch (Exception ex)
                            {
                                ViewBag.scripCall += "mytoast('error', 'toast-top-right', '" + ex.Message.ToString().Trim() + "');";
                            }
                        }
                    }
                    else
                    {
                        sat1.Rollback();
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                        ViewBag.scripCall += "showmsgJS(1, 'Data Not Saved', 0);";
                        ModelState.Clear();
                        return View(model);
                    }
                }
                else if (command == "Add Property")
                {
                    try
                    {
                        Tmodelmain ntm = new Tmodelmain();
                        ntm.Col1 = (Convert.ToInt32(model[0].LTM1.Max(x => sgen.Make_int(x.Col1))) + 1).ToString();
                        TempData[MyGuid + "_TList2"] = ntm.TList2 = mod2 = (List<SelectListItem>)TempData[MyGuid + "_TList2"];
                        ntm.SelectedItems2 = new string[] { "" };
                        ntm.Col40 = "Choose File";
                        model[0].LTM1.Add(ntm);
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                    }
                    catch (Exception ex) { ViewBag.scripCall = "showmsgJS(1,'" + ex.Message.ToString() + "',0);"; }
                }
                else if (command == "Remove Property")
                {
                    if (model[0].LTM1.Count > 1) model[0].LTM1.RemoveAt(sgen.Make_int(hfrow));
                    else
                    {
                        ViewBag.scripCall = "showmsgJS(1,'You cannot remove last entry',2)";
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                        return View(model);
                    }
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        //=================comp_doc==========
        #region comp_doc
        public ActionResult comp_doc()
        {
            FillMst();
            chkRef();
            //if (userCode.Equals("")) Response.Redirect(sgen.GetCookie("",sgenFun.callbackurl));
            //if (Request.UrlReferrer == null) { Response.Redirect(sgen.GetCookie("",sgenFun.callbackurl)); }
            ViewBag.vnew = "";
            ViewBag.vedit = "";
            ViewBag.vsave = "disabled='disabled'";
            ViewBag.vsavenew = "disabled='disabled'";
            ViewBag.scripCall = "disableForm();";
            List<Tmodelmain> model = new List<Tmodelmain>();
            Tmodelmain tm1 = new Tmodelmain();
            mid_mst = EncryptDecrypt.Decrypt(Request.QueryString["mid"]);
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            if (mid_mst.Trim().Equals("40004.1"))
            {
                tm1.Col9 = "MARKETING MATERIAL";
                tm1.Col10 = "file_tab";
                tm1.Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
                tm1.Col12 = "VMM"; // VASTU MARKETING MATERIAL
            }
            else if (mid_mst.Trim().Equals("40004.2"))
            {
                tm1.Col9 = "COMPANY DOCUMENT";
                tm1.Col10 = "file_tab";
                tm1.Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
                tm1.Col12 = "VCD"; // VASTU COMPANY DOC
            }
            else if (mid_mst.Trim().Equals("33008.2"))

            {
                tm1.Col9 = "HR Policy";
                tm1.Col10 = "file_tab";
                tm1.Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
                tm1.Col12 = "HRP"; // human resource/ hr policy
            }
            tm1.Col13 = "Save";
            tm1.Col100 = "Save & New";
            tm1.Col121 = "S";
            tm1.Col122 = "<u>S</u>ave";
            tm1.Col123 = "Save & Ne<u>w</u>";
            tm1.Col14 = mid_mst.Trim();
            tm1.Col15 = MyGuid.Trim();
            tm1.Col16 = "Choose File";
            sgen.SetSession(MyGuid, "delid", null);
            sgen.SetSession(MyGuid, "comp_doc", tm1.Col12);
            DataTable dtb = (DataTable)sgen.GetSession(MyGuid, "URIGHTS");
            try
            {
                dtb = dtb.Select("m_id='" + tm1.Col14 + "'").CopyToDataTable();
                if (dtb.Rows.Count > 0)
                {
                    tm1.Col55 = dtb.Rows[0]["btnnew"].ToString();
                    tm1.Col56 = dtb.Rows[0]["btnedit"].ToString();
                    tm1.Col57 = dtb.Rows[0]["btnview"].ToString();
                    //  tm1.Col33 = dtb.Rows[0]["btnextend"].ToString();
                }
            }
            catch (Exception err) { }
            model.Add(tm1);
            return View(model);
        }
        public List<Tmodelmain> new_comp_doc(List<Tmodelmain> model)
        {
            if (model[0].Col55 == "N")
            {
                ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for new entry, please contact your admin', 2);";
                return model;
            }
            sgen.SetSession(MyGuid, "delid", null);
            sgen.SetSession(MyGuid, "EDMODE", "N");
            ViewBag.vnew = "disabled='disabled'";
            ViewBag.vedit = "disabled='disabled'";
            ViewBag.vsave = "";
            ViewBag.vsavenew = "";
            ViewBag.scripCall = "enableForm();";
            mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
            vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
            model[0].Col18 = vch_num;
            return model;
        }
        [HttpPost]
        public ActionResult comp_doc(List<Tmodelmain> model, string command, HttpPostedFileBase upd1)
        {
            try
            {
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();
                if (command == "New")
                {
                    model = new_comp_doc(model);
                }
                else if (command == "Cancel")
                {
                    sgen.SetSession(MyGuid, "delid", null);
                    return CancelFun(model);
                }
                else if (command == "hfbtnyes")
                {
                    if (sgen.GetSession(MyGuid, "delid") != null)
                    {
                        btnval = "FDEL";
                        model = CallbackFun(btnval, "N", "comp_doc", "Vastu", model);
                        if (btnval == "FDEL")
                        {
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";

                            ViewBag.scripCall = "showmsgJS(1, 'File Deleted Permanently, Press New to create a new file', 1);disableForm();";
                            model = new List<Tmodelmain>();
                            model.Add(new Tmodelmain
                            {
                                Col9 = tm.Col9,
                                Col10 = tm.Col10,
                                Col11 = tm.Col11,
                                Col12 = tm.Col12,
                                Col13 = "Save",
                                Col100 = "Save & New",
                                Col121 = "S",
                                Col122 = "<u>S</u>ave",
                                Col123 = "Save & Ne<u>w</u>",
                                Col14 = tm.Col14,
                                Col15 = tm.Col15,
                            });
                        }
                    }
                }
                else if (command == "Callback")
                {
                    if ((model[0].Col56 == "N") && (btnval == "EDIT"))
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for edit entries of this form, please contact your admin', 2);disableForm();";
                        return View(model);
                    }
                    if (sgen.GetSession(MyGuid, "delid") != null)
                    {
                        ViewBag.scripCall = "showmsgJS(2, 'Are you Sure,You Want To Delete The Selected File', 1);";
                        btnval = "FDEL";
                    }
                    else if (sgen.GetSession(MyGuid, "btnval") != null) { btnval = sgen.GetSession(MyGuid, "btnval").ToString(); model = CallbackFun(btnval, "N", "comp_doc", "Vastu", model); }
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";

                    if (btnval == "VIEW")
                    {
                        model[0].Col13 = "Save";
                        model[0].Col100 = "Save & New";
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "disabled='disabled'";
                        ViewBag.vsavenew = "disabled='disabled'";
                        ViewBag.scripCall = "disableForm();";
                        sgen.SetSession(MyGuid, "EDMODE", "V");
                    }
                }
                else if (command.Trim() == "Save" || command.Trim() == "Update" || command == "Save & New" || command == "Update & New")
                {
                    if (model[0].Col55 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for save company document, please contact your admin', 2);";
                        return View(model);
                    }
                    sgen.SetSession(MyGuid, "delid", null);
                    var tmodel = model.FirstOrDefault();
                    string currdate = sgen.server_datetime(userCode);
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        isedit = true;
                        vch_num = model[0].Col18;
                    }
                    else
                    {
                        isedit = false;
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        model[0].Col18 = vch_num;
                    }
                    if ((upd1 == null) && (isedit) == false)
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'Please Select Document', 2);";
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                        return View(model);
                    }
                    //DataTable dataTable = sgen.getdata(userCode, "select  * from " + model[0].Col10.Trim() + "  where  1=2");
                    DataTable dataTable = cmd_Fun.GetStructure(userCode, model[0].Col10);
                    string serverpath = Server.MapPath("~/Uploads/" + cg_com_name.Replace(" ", "") + "/");
                    try
                    {
                        HttpPostedFileBase file1 = upd1;
                        ctype1 = file1.ContentType;
                        fileName1 = file1.FileName;
                        path1 = clientid_mst + unitid_mst + userid_mst + currdate + "_" + fileName1;
                        encpath1 = sgen.Convert_Stringto64(path1).ToString();
                        finalpath1 = serverpath + encpath1;
                        file1.SaveAs(finalpath1);

                    }
                    catch (Exception ex) { }
                    if (isedit == true)
                    {
                        fileName1 = model[0].LTM1[0].Col1;
                        encpath1 = model[0].LTM1[0].Col4;
                    }
                    filesave(model, currdate, dataTable, fileName1, encpath1, "DOC", ctype1, model[0].Col20);
                    ok = sgen.Update_data(userCode, dataTable, model[0].Col10, model[0].Col8, isedit);
                    if (ok)
                    {
                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col9 = tmodel.Col9,
                            Col10 = tmodel.Col10,
                            Col11 = tmodel.Col11,
                            Col12 = tmodel.Col12,
                            Col13 = "Save",
                            Col100 = "Save & New",
                            Col121 = "S",
                            Col122 = "<u>S</u>ave",
                            Col123 = "Save & Ne<u>w</u>",
                            Col14 = tmodel.Col14,
                            Col15 = tmodel.Col15,
                        });
                        if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                        {
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                        {
                            try
                            {
                                model = new_comp_doc(model);
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                            }
                            catch (Exception ex) { }
                        }
                    }
                    else { ViewBag.scripCall = "showmsgJS(1, 'Something Went Wrong, Data Not Saved', 0);"; }
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region  AMC Plan
        public ActionResult amc_plan()
        {
            FillMst();
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            model[0].Col9 = "AMC PLAN";
            model[0].Col10 = "enx_tab2";
            model[0].Col11 = "and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "'";
            model[0].Col12 = "AMC"; //TYPE
            DataTable dt = sgen.getdata(userCode, "select '' AMC,'1' SNo ,'-' Service_Date,'-' Remark from dual");
            model[0].dt1 = dt;
            sgen.SetSession(MyGuid, "RAMC_DT", dt);
            DataTable dtb = (DataTable)sgen.GetSession(MyGuid, "URIGHTS");
            try
            {
                dtb = dtb.Select("m_id='" + model[0].Col14 + "'").CopyToDataTable();
                if (dtb.Rows.Count > 0)
                {
                    model[0].Col55 = dtb.Rows[0]["btnnew"].ToString();
                    model[0].Col56 = dtb.Rows[0]["btnedit"].ToString();
                    model[0].Col57 = dtb.Rows[0]["btnview"].ToString();
                }
            }
            catch (Exception err) { }
            return View(model);
        }
        [HttpPost]
        public ActionResult amc_plan(List<Tmodelmain> model, string command, string hfrow, string hftable)
        {
            try
            {
                FillMst();
                //Session["viewName"] = actionName;
                //Session["controllerName"] = controllerName;
                DataTable dtm = sgen.settable(hftable);
                model[0].dt1 = dtm;
                var tm = model.FirstOrDefault();
                if (command == "New")
                {
                    if (model[0].Col55 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for create new amc plan, please contact your admin', 2);";
                        return View(model);
                    }
                    model = getnew(model);
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    if ((model[0].Col56 == "N") && (btnval == "EDIT"))
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for edit amc plan entries, please contact your admin', 2);disableForm();";
                        return View(model);
                    }
                    model = StartCallback(model);
                }
                else if (command == "Save" || command == "Update")
                {
                    if (model[0].Col55 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for save amc plan, please contact your admin', 2);";
                        return View(model);
                    }
                    string found = "";
                    string currdate = sgen.server_datetime(userCode);
                    DataTable dtstr = sgen.getdata(userCode, "select  * from " + model[0].Col10 + " where 1=2");
                    for (int i = 0; i < model[0].dt1.Rows.Count; i++)
                    {
                        DataRow dr = dtstr.NewRow();
                        dr["type"] = model[0].Col12;
                        dr["col2"] = model[0].Col18;
                        dr["col1"] = model[0].dt1.Rows[i][3].ToString();//remark
                        dr["date1"] = sgen.Savedate(model[0].dt1.Rows[i][2].ToString(), false);//date
                        dr["vch_date"] = sgen.Savedate(currdate, false);
                        dr = getsave(currdate, dr, model);
                        dtstr.Rows.Add(dr);
                    }
                    bool Result = sgen.Update_data_fast1(userCode, dtstr, model[0].Col10.Trim(), model[0].Col8, isedit);
                    if (Result == true)
                    {
                        ViewBag.vnew = "";
                        ViewBag.vedit = "";
                        ViewBag.vsave = "disabled='disabled'";
                        //ViewBag.scripCall = "showmsgJS(1, 'Data Saved Successfully', 1);disableForm();";
                        ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col9 = tm.Col9,
                            Col10 = tm.Col10,
                            Col11 = tm.Col11,
                            Col12 = tm.Col12,
                            Col13 = "Save",
                            Col14 = tm.Col14,
                            Col15 = tm.Col15,
                            dt1 = (DataTable)sgen.GetSession(MyGuid, "RAMC_DT")
                        });
                    }
                    else
                    {
                        ViewBag.scripCall = "showmsgJS(1, 'Record Not Saved', 0);";
                    }
                }
                else if (command == "+")
                {
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    if (model[0].dt1.Rows.Count != 0) model[0].dt1.Rows.Add(sgen.Make_int(hfrow));
                    else { model[0].dt1 = (DataTable)sgen.GetSession(MyGuid, "RAMC_DT"); }
                }
                else if (command == "-")
                {
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    if (model[0].dt1.Rows.Count > 1) model[0].dt1.Rows.RemoveAt(sgen.Make_int(hfrow));
                    else { model[0].dt1 = (DataTable)sgen.GetSession(MyGuid, "RAMC_DT"); }
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region  Good Wishes
        public ActionResult good_wishes()
        {
            FillMst();
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            ViewBag.scripCall = "enableForm();";
            ViewBag.vsend = "disabled='disabled'";
            mid_mst = EncryptDecrypt.Decrypt(Request.QueryString["mid"]);
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            model[0].Col9 = "GOOD WISHES";
            model[0].Col10 = "KC_TAB";
            model[0].Col11 = "and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "'";
            model[0].Col12 = "WIS"; //TYPE
            model[0].Col31 = "1"; //Lang TYPE
            model[0].Col17 = sgen.server_datetime_local(userCode);
            model[0].Col18 = sgen.server_datetime_local(userCode);
            model[0].Chk4 = true;
            model[0].Chk5 = true;
            model[0].Chk6 = true;
            string defval = "";
            List<SelectListItem> mod1 = new List<SelectListItem>();
            List<SelectListItem> mod2 = new List<SelectListItem>();
            List<SelectListItem> mod3 = new List<SelectListItem>();
            #region MOC 1
            mod1 = new List<SelectListItem>();
            DataTable dt = sgen.getdata(userCode, "select 'SMS' as communication from dual Union all select 'Email' as communication from dual ");
            if (dt.Rows.Count > 0)
            {
                foreach (DataRow dr in dt.Rows)
                {
                    mod1.Add(new SelectListItem { Text = dr["communication"].ToString(), Value = dr["communication"].ToString() });
                }
            }
            TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1;

            model[0].SelectedItems1 = new string[] { "" };
            #endregion
            #region Mail cc 2
            mq2 = "select user_id||' ('||nvl(email,'-')||')' name  FROM user_details WHERE type<>'STD' and type<>'STP' ";
            dt = sgen.getdata(userCode, mq2);
            if (dt.Rows.Count > 0)
            {
                foreach (DataRow dr in dt.Rows)
                {
                    mod2.Add(new SelectListItem { Text = dr["name"].ToString(), Value = dr["name"].ToString() });
                }
            }
            TempData[MyGuid + "_Tlist2"] = model[0].TList2 = mod2;

            model[0].SelectedItems2 = new string[] { "" };
            #endregion
            #region  typeofclient
            TempData[MyGuid + "_TList3"] = model[0].TList3 = mod3 = cmd_Fun.clienttype(userCode, unitid_mst, out defval);


            model[0].SelectedItems3 = new string[] { "" };
            #endregion
            return View(model);
        }
        [HttpPost]
        public ActionResult good_wishes(List<Tmodelmain> model, string command)
        {
            try
            {
                string fdt = "", tdt = "";
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();
                DataTable dt = new DataTable();
                if (sgen.GetSession(MyGuid, "KPDCMD") != null)
                {
                    if (sgen.GetSession(MyGuid, "KPDFDT") != null) fdt = sgen.GetSession(MyGuid, "KPDFDT").ToString();
                    if (sgen.GetSession(MyGuid, "KPDTDT") != null) tdt = sgen.GetSession(MyGuid, "KPDTDT").ToString();
                    if (sgen.GetSession(MyGuid, "KPDCMD") != null) command = sgen.GetSession(MyGuid, "KPDCMD").ToString();
                    string tcp = "", tut = "", tfromdt = "", ttodate = "";
                    try
                    {
                        tcp = sgen.GetSession(MyGuid, "KDDL_CL").ToString();
                        tut = sgen.GetSession(MyGuid, "KDDL_UT").ToString();
                        tfromdt = sgen.GetSession(MyGuid, "TXTFROMDATE").ToString();
                        ttodate = sgen.GetSession(MyGuid, "TXTTODATE").ToString();
                    }
                    catch (Exception err)
                    {
                    }
                }
                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_Tlist1"];
                List<SelectListItem> mod2 = (List<SelectListItem>)TempData[MyGuid + "_Tlist2"];
                List<SelectListItem> mod3 = (List<SelectListItem>)TempData[MyGuid + "_Tlist3"];



                TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1;
                TempData[MyGuid + "_Tlist2"] = model[0].TList2 = mod2;
                TempData[MyGuid + "_Tlist3"] = model[0].TList3 = mod3;
                if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                if (model[0].SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
                if (model[0].SelectedItems3 == null) model[0].SelectedItems3 = new string[] { "" };
                if (command == "New")
                {
                    model = getnew(model);
                }
                else if (command == "Previous Message")
                {
                    sgen.SetSession(MyGuid, "KPDCMD", null);
                    sgen.SetSession(MyGuid, "btnval", "PRV");
                    mq = " Select a.vch_num as fstr, a.vch_num doc_no,to_char(convert_tz(a.vch_date, 'UTC', '" + sgen.Gettimezone() + "')," +
                                    " '" + sgen.Getsqldateformat() + "') as doc_date,to_char(convert_tz(a.date1, 'UTC', '" + sgen.Gettimezone() + "')," +
                                    " '" + sgen.Getsqldateformat() + "') as From_Date,to_char(convert_tz(a.date2, 'UTC', '" + sgen.Gettimezone() + "')," +
                                    " '" + sgen.Getsqldateformat() + "') To_Date,Col31 as DOB_Message,Col32 as DOA_Message from kc_tab a where type='WIS' and " +
                                    " client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "' and to_date(to_char(a.vch_date,'" + sgen.Getsqldateformat() + "'),'" + sgen.Getsqldateformat() + "') between " +
                    "to_date('" + fdt + "','" + sgen.Getsqldateformat() + "') and to_date('" + tdt + "','" + sgen.Getsqldateformat() + "') ORDER BY VCH_NUM ASC ";
                    //dt = sgen.getdata(userCode, mq);
                    //mq1 = sgen.open_grid_dt("Previous Messages List", dt, 1);
                    //if (mq1 == "ok") { ViewBag.scripCall = "callFoo('Previous Messages List');"; }
                    //else { ViewBag.scripCall = "showmsgJS(1,'No Data Found',2);"; }
                    sgen.open_grid("Previous Messages List", mq, 1);
                    ViewBag.scripCall = "callFoo('Previous Messages List');";
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command == "Fill Data")
                {
                    string cond = "";
                    string comm = string.Join(",", model[0].SelectedItems1);
                    comm = comm.Replace("'", "");
                    if (comm.Contains(',')) { cond = "and ((a.cplandno!='0000000000' and a.cplandno!='0') or( a.cpemail!='ab@ab.ab' and a.cpemail!='0'))"; }
                    else
                    {
                        if (comm == "SMS")
                        { cond = "and a.cplandno!='0000000000' and a.cplandno!='0'"; }
                        else { cond = "and  a.cpemail!='ab@ab.ab' and  a.cpemail!='0'"; }
                    }

                    string FromDt = sgen.SaveDate_dt(model[0].Col17.Trim(), true).ToString("MMdd", CultureInfo.InvariantCulture);
                    string todt = sgen.SaveDate_dt(model[0].Col18.Trim(), true).ToString("MMdd", CultureInfo.InvariantCulture);
                    string client_type = "";
                    if ((model[0].SelectedItems3.FirstOrDefault() != null) && (model[0].SelectedItems3.FirstOrDefault() != ""))
                    {
                        //  client_type = "and b.client_type in (" + model[0].SelectedItems3.FirstOrDefault() + ")";
                        client_type = "and b.client_type in ('" + string.Join("','", model[0].SelectedItems3) + "')";
                    }
                    //mq = "select  a.vch_num, replace(nvl(b.c_name,'-'),'0','-') c_name ,replace(a.cpaddr,'0','-') address, to_char(a.DOB, '" + sgen.Getsqldateformat() + "') as DOB,to_char(a.DOA, '" + sgen.Getsqldateformat() + "') as DOA," +
                    //    "(case when a.cplandno='0000000000' then '-' else a.cplandno end) cplandno ,replace((case when a.cpemail='ab@ab.ab' then '-' else a.cpemail end), '0', '-') cpemail,((replace(a.cpname, '0', '-') || ' ' || replace(a.cp_mname, '0', '') || ' ' || replace(a.cp_lname, '0', ''))) contact_person from clients_mst a" +
                    //    " inner join clients_mst b on a.ref_code = b.vch_num and b.type = 'BCD' and a.client_unit_id = b.client_unit_id   where a.type = 'BCD' and substr(a.ref_code,0,3)='303' and a.client_unit_id = '" + unitid_mst + "'" +
                    //    " and(to_number(to_char(a.DOB, 'MMdd')) between " + FromDt + " and " + todt + " or to_number(to_char(a.DOA, 'MMdd')) between " + FromDt + " and " + todt + ") " + client_type + " and a.vch_num || a.rec_id in(select   min(vch_num || rec_id) as rec from" +
                    //    " clients_mst where type in('BCD') and  substr(ref_code,0,3)='303' and client_unit_id = '" + unitid_mst + "' and(to_number(to_char(DOB, 'MMdd')) between " + FromDt + " and " + todt + " or to_number(to_char(DOA, 'MMdd')) between " + FromDt + " and " + todt + ") group by cplandno ,cpemail ) order by b.c_name";

                    // reena why replace with case
                    //mq = "select  a.vch_num, replace(nvl(b.c_name,'-'),'0','-') c_name ,replace(a.cpaddr,'0','-') address, to_char(a.DOB, '" + sgen.Getsqldateformat() + "') as DOB,to_char(a.DOA, '" + sgen.Getsqldateformat() + "') as DOA," +
                    //    "(case when a.cplandno='0000000000' then '-' else a.cplandno end) cplandno ,replace((case when a.cpemail='ab@ab.ab' then '-' else a.cpemail end), '0', '-') cpemail,((replace(a.cpname, '0', '-') || ' ' || replace(a.cp_mname, '0', '') || ' ' || replace(a.cp_lname, '0', ''))) contact_person from clients_mst a" +
                    //    " inner join clients_mst b on a.ref_code = b.vch_num and b.type = 'BCD' and a.client_unit_id = b.client_unit_id   where a.type = 'BCD' and substr(a.ref_code,0,3)='303' and a.client_unit_id = '" + unitid_mst + "'" +
                    //    " and(to_number(to_char(a.DOB, 'MMdd')) between " + FromDt + " and " + todt + " or to_number(to_char(a.DOA, 'MMdd')) between " + FromDt + " and " + todt + ") " + client_type + " and a.vch_num || a.rec_id" +
                    //    " in (select   min(a.vch_num || a.rec_id) as rec from clients_mst a inner join clients_mst b on a.ref_code = b.vch_num and b.type = 'BCD' and a.client_unit_id = b.client_unit_id where a.type in('BCD') " +
                    //    "and substr(a.ref_code,0,3)= '303' and a.client_unit_id = '"+unitid_mst+"' and(to_number(to_char(a.DOB, 'MMdd')) between "+FromDt+" and "+todt+" or to_number(to_char(a.DOA, 'MMdd')) " +
                    //    "between "+FromDt+" and "+todt+")   "+client_type+" group by a.cplandno ,a.cpemail ) order by b.c_name";
                    //brijesh
                    mq = "select  a.vch_num,a.ref_code,replace(nvl(b.c_name,'-'),'0','-') c_name ,replace(b.addr,'0','-') address, to_char(a.DOB, '" + sgen.Getsqldateformat() + "') as DOB,to_char(a.DOA, '" + sgen.Getsqldateformat() + "') as DOA," +
                        "(case when a.cplandno='0000000000' then '-' else a.cplandno end) cplandno ,replace((case when a.cpemail='ab@ab.ab' then '-' else a.cpemail end), '0', '-') cpemail,((replace(a.cpname, '0', '-') || ' ' || replace(a.cp_mname, '0', '') || ' ' || replace(a.cp_lname, '0', ''))) contact_person from clients_mst a" +
                        " inner join clients_mst b on a.ref_code = b.vch_num and b.type = 'BCD' and a.client_unit_id = b.client_unit_id   where a.type = 'BCD' and substr(a.ref_code,0,3)='303' and a.client_unit_id = '" + unitid_mst + "'" +
                        " and(to_number(to_char(a.DOB, 'MMdd')) between " + FromDt + " and " + todt + " or to_number(to_char(a.DOA, 'MMdd')) between " + FromDt + " and " + todt + ") " + client_type + " " + cond + " and a.vch_num || a.rec_id" +
                        " in (select   min(a.vch_num || a.rec_id) as rec from clients_mst a inner join clients_mst b on a.ref_code = b.vch_num and b.type = 'BCD' and a.client_unit_id = b.client_unit_id where a.type in('BCD') " +
                        "and substr(a.ref_code,0,3)= '303' and a.client_unit_id = '" + unitid_mst + "' and(to_number(to_char(a.DOB, 'MMdd')) between " + FromDt + " and " + todt + " or to_number(to_char(a.DOA, 'MMdd')) " +
                        "between " + FromDt + " and " + todt + ")   " + client_type + " " + cond + "  group by a.cplandno ,a.cpemail ) order by b.c_name";


                    //mq = "select  a.vch_num, replace(nvl(b.c_name,'-'),'0','-') c_name ,replace(a.cpaddr,'0','-') address, to_char(a.DOB, '" + sgen.Getsqldateformat() + "') as DOB,to_char(a.DOA, '" + sgen.Getsqldateformat() + "') as DOA," +
                    //    "(case when a.cplandno='0000000000' then '-' else a.cplandno end) cplandno ,replace((case when a.cpemail='ab@ab.ab' then '-' else a.cpemail end), '0', '-') cpemail,((replace(a.cpname, '0', '-') || ' ' || replace(a.cp_mname, '0', '') || ' ' || replace(a.cp_lname, '0', ''))) contact_person from clients_mst a" +
                    //    " inner join clients_mst b on a.vch_num = b.ref_code and b.type = 'BCD' and a.client_unit_id = b.client_unit_id   where a.type = 'BCD' and substr(a.vch_num,0,3)='303' and a.client_unit_id = '" + unitid_mst + "'" +
                    //    " and(to_number(to_char(a.DOB, 'MMdd')) between " + FromDt + " and " + todt + " or to_number(to_char(a.DOA, 'MMdd')) between " + FromDt + " and " + todt + ") " + client_type + " and a.vch_num || a.rec_id in(select   min(vch_num || rec_id) as rec from" +
                    //    " clients_mst where type in('BCD') and  substr(ref_code,0,3)='303' and client_unit_id = '" + unitid_mst + "' and(to_number(to_char(DOB, 'MMdd')) between " + FromDt + " and " + todt + " or to_number(to_char(DOA, 'MMdd')) between " + FromDt + " and " + todt + ") group by cplandno ,cpemail ) order by b.c_name";

                    dt = sgen.getdata(userCode, mq);
                    model = new List<Tmodelmain>();
                    if (dt.Rows.Count > 0)
                    {
                        string dobtext = "", doatext = "";
                        DataTable pdt = sgen.getdata(userCode, "select  col31,col32 from kc_tab where type='WIS' and client_unit_id='" + unitid_mst + "' " +
                            "and vch_num in (select max(vch_num) from kc_tab where type='WIS' and client_unit_id='" + unitid_mst + "')");
                        if (pdt.Rows.Count > 0)
                        {
                            dobtext = pdt.Rows[0]["Col31"].ToString();
                            doatext = pdt.Rows[0]["Col32"].ToString();
                        }
                        else
                        {
                            dobtext = "Wish You A Very Happy BirthDay";
                            doatext = "Wish You A Very Happy Anniversary";
                        }
                        ViewBag.vfill = "disabled='disabled'";
                        for (int i = 0; i < dt.Rows.Count; i++)
                        {
                            Tmodelmain tmm = new Tmodelmain();
                            Boolean chk1 = true;
                            if ((dt.Rows[i]["cplandno"].ToString()) == "-" && (dt.Rows[i]["cpemail"].ToString() == "-"))
                            {
                                chk1 = false;
                            }
                            tmm.Col19 = dt.Rows[i]["c_name"].ToString();
                            tmm.Col20 = dt.Rows[i]["vch_num"].ToString();
                            tmm.Col33 = dt.Rows[i]["ref_code"].ToString();
                            tmm.Col21 = dt.Rows[i]["address"].ToString();
                            tmm.Col22 = dt.Rows[i]["cplandno"].ToString();
                            tmm.Col23 = dt.Rows[i]["DOB"].ToString();
                            tmm.Col25 = dt.Rows[i]["DOA"].ToString();
                            tmm.Col27 = dt.Rows[i]["cpemail"].ToString();
                            tmm.Col28 = dt.Rows[i]["contact_person"].ToString();
                            tmm.Col26 = dobtext;
                            tmm.Col29 = doatext;
                            tmm.Chk1 = chk1;
                            tmm.Chk2 = chk1;
                            tmm.Chk3 = chk1;
                            tmm.Col14 = tm.Col14;
                            tmm.Col15 = tm.Col15;
                            tmm.Col9 = tm.Col9;
                            tmm.Col10 = tm.Col10;
                            tmm.Col11 = tm.Col11;
                            tmm.Col12 = tm.Col12;
                            tmm.Col17 = tm.Col17;
                            tmm.Col18 = tm.Col18;
                            tmm.Col30 = tm.Col30;
                            tmm.Col31 = tm.Col31;
                            tmm.Col32 = tm.Col32;
                            tmm.Col26 = dobtext;
                            tmm.Col29 = doatext;
                            tmm.Chk4 = tm.Chk4;
                            tmm.Chk5 = tm.Chk5;
                            tmm.Chk6 = tm.Chk6;
                            tmm.Col31 = tm.Col31;
                            tmm.TList1 = tm.TList1;
                            tmm.TList2 = tm.TList2;
                            tmm.TList3 = tm.TList3;
                            tmm.SelectedItems1 = tm.SelectedItems1;
                            tmm.SelectedItems2 = tm.SelectedItems2;
                            tmm.SelectedItems3 = tm.SelectedItems3;
                            model.Add(tmm);
                        }
                    }
                    else
                    {
                        ViewBag.scripCall += "mytoast('warning', 'toast-top-right', 'No Data Exist');";
                        ViewBag.vsend = "disabled='disabled'";
                        model = new List<Tmodelmain>();
                        tm.Col16 = "";
                        tm.Col17 = tm.Col17;
                        tm.Col18 = tm.Col18;
                        tm.Col19 = "";
                        model.Add(tm);
                    }
                }
                else if (command == "Send")
                {
                    string emailidcc = "";
                    string msg_txt = "";
                    BulkSMS bulk = new BulkSMS(userCode, clientid_mst, unitid_mst, MyGuid);
                    string account = "";
                    string person = "";
                    string mobile = "";
                    string email = "";
                    int cnt = 0;
                    string[] ddlsend = string.Join(",", model[0].SelectedItems1).Split(',');
                    string comm = string.Join(",", model[0].SelectedItems1);
                    comm = comm.Replace("'", "");
                    string Email_id = "";
                    var tmodel = model.FirstOrDefault();
                    string currdate = sgen.server_datetime(userCode);
                    string cond = "", found = "";
                    DataTable dtstr = new DataTable();
                    string dobacc = "", refbacc = "", refaacc = "", doaacc = "";
                    for (int i = 0; i < model.Count; i++)
                    {
                        //foreach (string comm_type in ddlsend)
                        {
                            //if (comm_type == "SMS")
                            {
                                if (cnt == 0)
                                {
                                    if ((model[0].Col30 != ""))
                                    {
                                        if (model[0].Col30 != null)
                                        {
                                            string[] ph_cc = (model[0].Col30.Split(','));
                                            string phone_cc = "";
                                            for (Int32 y = 0; y < ph_cc.Length; y++)
                                            {
                                                phone_cc = ph_cc[y];
                                                if ((phone_cc != "0"))
                                                {
                                                    msg_txt = sgen.ExtractHtmlInnerText(model[0].Col26.Replace("\r\n", " %0a "));
                                                    string smsstatus = sgen.Send_Sms(userCode, clientid_mst, unitid_mst, phone_cc, msg_txt, model[0].Col31 == "2");
                                                    msg_txt = sgen.ExtractHtmlInnerText(model[0].Col29.Replace("\r\n", " %0a "));
                                                    bulk.Add_sms(phone_cc, msg_txt, model[0].Col31 == "2");
                                                    smsstatus = sgen.Send_Sms(userCode, clientid_mst, unitid_mst, phone_cc, msg_txt, model[0].Col31 == "2");
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        if (model[i].Chk1 == true)
                        {
                            foreach (string comm_type in ddlsend)
                            {
                                if (comm_type == "SMS")
                                {
                                    //if (cnt == 0)
                                    //{
                                    //    if ((model[0].Col30 != ""))
                                    //    {
                                    //        if (model[0].Col30 != null)
                                    //        {
                                    //            string[] ph_cc = (model[0].Col30.Split(','));
                                    //            string phone_cc = "";
                                    //            for (Int32 y = 0; y < ph_cc.Length; y++)
                                    //            {
                                    //                phone_cc = ph_cc[y];
                                    //                if ((phone_cc != "0"))
                                    //                {
                                    //                    msg_txt = sgen.ExtractHtmlInnerText(model[0].Col26.Replace("\r\n", " %0a "));
                                    //                    string smsstatus = sgen.Send_Sms(userCode, clientid_mst, unitid_mst, phone_cc, msg_txt, model[0].Col31 == "2");
                                    //                    msg_txt = sgen.ExtractHtmlInnerText(model[0].Col29.Replace("\r\n", " %0a "));
                                    //                    bulk.Add_sms(phone_cc, msg_txt, model[0].Col31 == "2");
                                    //                     smsstatus = sgen.Send_Sms(userCode, clientid_mst, unitid_mst, phone_cc, msg_txt, model[0].Col31 == "2");
                                    //                }
                                    //            }
                                    //        }
                                    //    }
                                    //}
                                    if (model[i].Chk2 == true)
                                    {
                                        if ((model[i].Col22 != "-") && (model[i].Col22 != "0"))
                                        {
                                            cnt = cnt + 1;
                                            msg_txt = sgen.ExtractHtmlInnerText(model[0].Col26.Replace("\r\n", " %0a ")) + "";
                                            account = model[i].Col19;
                                            person = model[i].Col28;
                                            mobile = model[i].Col22;
                                            email = model[i].Col27;
                                            msg_txt = msg_txt.Replace("[account]", account);
                                            msg_txt = msg_txt.Replace("[person]", person);
                                            msg_txt = msg_txt.Replace("[mobile]", mobile);
                                            msg_txt = msg_txt.Replace("[email]", email);
                                            if (dobacc.Equals("") && refbacc.Equals(""))
                                            {
                                                dobacc = model[i].Col20;
                                                refbacc = model[i].Col33;
                                            }
                                            else
                                            {
                                                dobacc = dobacc + "," + model[i].Col20;
                                                refbacc = refbacc + "," + model[i].Col33;
                                            }
                                            //bulk.Add_sms(model[i].Col22, msg_txt, false);
                                            //bulk.Add_sms(model[i].Col22, msg_txt, model[0].Col31 == "2");
                                            string smsstatus = sgen.Send_Sms(userCode, clientid_mst, unitid_mst, model[i].Col22, msg_txt, model[0].Col31 == "2");
                                        }
                                    }
                                    if (model[i].Chk3 == true)
                                    {
                                        if ((model[i].Col22 != "-") && (model[i].Col22 != "0"))
                                        {
                                            cnt = cnt + 1;
                                            msg_txt = sgen.ExtractHtmlInnerText(model[0].Col29.Replace("\r\n", " %0a ")) + "";
                                            account = model[i].Col19;
                                            person = model[i].Col28;
                                            mobile = model[i].Col22;
                                            email = model[i].Col27;
                                            msg_txt = msg_txt.Replace("[account]", account);
                                            msg_txt = msg_txt.Replace("[person]", person);
                                            msg_txt = msg_txt.Replace("[mobile]", mobile);
                                            msg_txt = msg_txt.Replace("[email]", email);
                                            if (doaacc.Equals("") && refaacc.Equals(""))
                                            {
                                                doaacc = model[i].Col20;
                                                refaacc = model[i].Col33;
                                            }
                                            else
                                            {
                                                doaacc = doaacc + "," + model[i].Col20;
                                                refaacc = refaacc + "," + model[i].Col33;
                                            }
                                            //bulk.Add_sms(model[i].Col22, msg_txt, false);
                                            //bulk.Add_sms(model[i].Col22, msg_txt, model[0].Col31 == "2");
                                            string smsstatus = sgen.Send_Sms(userCode, clientid_mst, unitid_mst, model[i].Col22, msg_txt, model[0].Col31 == "2");
                                        }
                                    }
                                }
                                try
                                {
                                    if (comm_type == "Email") // 
                                    {
                                        #region SEND MAIL
                                        string mailfrom = "";
                                        DataTable datatable = new DataTable();
                                        datatable = sgen.getdata(userCode, "select com_email from company_profile where Company_Profile_Id='" + clientid_mst + "' and type='CP'");
                                        if (datatable.Rows.Count > 0)
                                        {
                                            mailfrom = Convert.ToString(datatable.Rows[0]["com_email"]);
                                        }
                                        string mailcc = string.Join(",", model[0].SelectedItems2);
                                        mailcc = mailcc.Replace("'", "");
                                        string[] itar = mailcc.Trim().Split(',');
                                        if ((model[0].SelectedItems2.FirstOrDefault() != null) && (model[0].SelectedItems2.FirstOrDefault() != ""))
                                        {
                                            if (itar.Length > 0)
                                            {
                                                for (Int32 y = 0; y < itar.Length; y++)
                                                {
                                                    string[] Emialar = itar[y].Replace("(", "").Replace(")", "").Trim().Split(' ');
                                                    if (sgen.ValidateEmail(Emialar[1].ToString()))
                                                    {
                                                        if (emailidcc.Equals("")) emailidcc = Emialar[1].ToString();
                                                        else
                                                        {
                                                            emailidcc = emailidcc + "," + Emialar[1].ToString();
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                        if (model[i].Chk2 == true)
                                        {
                                            string xtitle = "";
                                            cnt = cnt + 1;
                                            msg_txt = sgen.ExtractHtmlInnerText(model[0].Col26.Replace("\r\n", " %0a ")) + "";
                                            account = model[i].Col19;
                                            person = model[i].Col28;
                                            mobile = model[i].Col22;
                                            email = model[i].Col27;
                                            msg_txt = msg_txt.Replace("[account]", account);
                                            msg_txt = msg_txt.Replace("[person]", person);
                                            msg_txt = msg_txt.Replace("[mobile]", mobile);
                                            msg_txt = msg_txt.Replace("[email]", email);
                                            var body = new StringBuilder();
                                            body.AppendLine(@"<b style='color:#3caee9; font-size: 20px'> " + model[0].Col32 + " </b><br /><hr style='border:1px solid black' />" +
                                                 "<p>Hi <b>Dear: </b>,</p><table style='font-weight:600'>");
                                            body.AppendLine(@"</table><br /><p>" + msg_txt + "</p><p>ThankYou,<br />" + clientname_mst + "<br /></p><br />");
                                            sgen.Send_mail_SA1(userCode, clientid_mst, unitid_mst, email, emailidcc, model[i].Col27, body.ToString(), "Good Wishes", "");
                                        }
                                        #endregion
                                    }
                                }
                                catch (Exception err) { }
                            }
                        }
                    }
                    bulk.Send_SMS_Bulk();
                    if (cnt > 0)
                    {
                        isedit = false;
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        model[0].Col16 = vch_num;
                        dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                        DataRow dr = dtstr.NewRow();
                        dr["rec_id"] = "0";
                        dr["type"] = model[0].Col12;
                        dr["vch_num"] = vch_num.Trim();
                        dr["vch_date"] = currdate;
                        dr["COl31"] = model[0].Col26;//DOB MSG
                        dr["COl32"] = model[0].Col29; //DOA MSG
                        dr["COl41"] = dobacc;
                        dr["COl48"] = doaacc;
                        dr["COl73"] = refbacc;
                        dr["COl74"] = refaacc;
                        dr["COl1"] = comm;
                        dr["date1"] = sgen.Make_date_S(model[0].Col17);
                        dr["date2"] = sgen.Make_date_S(model[0].Col18);
                        dr["COl33"] = model[0].Col32; //Mail Heading
                        dr["COl2"] = model[0].Col30; //phone cc
                        dr["COl35"] = emailidcc;  //Mail cc
                        dr["COl5"] = model[0].Col31; //language type
                        dr = getsave(currdate, dr, model, isedit);
                        dtstr.Rows.Add(dr);
                        bool Result = sgen.Update_data_fast1(userCode, dtstr, model[0].Col10.Trim(), tmodel.Col8, isedit);
                        ViewBag.fill = "";
                        ViewBag.vsend = "disabled='disabled'";
                        ViewBag.scripCall = "enableForm();";
                        ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Wish Send Successfully');disableForm();";
                    }
                    model = new List<Tmodelmain>();
                    model.Add(new Tmodelmain
                    {
                        Col9 = tm.Col9,
                        Col10 = tm.Col10,
                        Col11 = tm.Col11,
                        Col12 = tm.Col12,
                        Col13 = "Save",
                        Col14 = tm.Col14,
                        Col15 = tm.Col15,
                        TList1 = tm.TList1,
                        SelectedItems1 = tm.SelectedItems1,
                        TList2 = tm.TList2,
                        SelectedItems2 = tm.SelectedItems2,
                        TList3 = tm.TList3,
                        SelectedItems3 = tm.SelectedItems3,
                    });
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region vendordetail
        //public ActionResult newvendor_detail()
        //{
        //    FillMst();
        //      if (userCode.Equals("")) Response.Redirect(sgen.GetCookie("",sgenFun.callbackurl));
        //    if (Request.UrlReferrer == null) { Response.Redirect(sgen.GetCookie("",sgenFun.callbackurl)); }
        //    ViewBag.vnew = "";
        //    ViewBag.vedit = "";
        //    ViewBag.vsave = "disabled='disabled'";
        //    ViewBag.scripCall = "disableForm();";
        //    List<Tmodelmain> model = new List<Tmodelmain>();
        //    List<SelectListItem> mod1 = new List<SelectListItem>();
        //    Tmodelmain tm1 = new Tmodelmain();
        //    mid_mst = EncryptDecrypt.Decrypt(Request.QueryString["mid"]);
        //    MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
        //    if (mid_mst == "21008.1")
        //    {
        //        tm1.Col9 = "CUSTOMER DETAIL";
        //        tm1.Col12 = "BCD"; // BILLING CUSTOMER DETAILS               
        //    }
        //    else if (mid_mst.Trim().Equals("28005.1") || mid_mst.Trim().Equals("9008.6"))
        //    {
        //        tm1.Col9 = "VENDOR DETAIL";
        //        tm1.Col12 = "PVD"; // PURCHASE VENDOR DETAIL AND PAYROLL
        //    }
        //    else if (mid_mst == "41005.8")
        //    {
        //        tm1.Col9 = "VENDOR DETAIL";
        //        tm1.Col12 = "PVD"; // BANQUET HALL CUSTOMER DETAILS                
        //    }
        //    else if (mid_mst == "40002.1")
        //    {
        //        tm1.Col9 = "NEW CLIENT";
        //        tm1.Col12 = "BCD"; // NEW CLIENT               
        //    }
        //    //else if (mid_mst == "16000.2.2")
        //    {
        //        tm1.Col9 = "ADD PUBLUSHER";
        //        tm1.Col12 = "PVD"; // ADD PUBLUSHER              
        //    }
        //    tm1.Col10 = "clients_mst";
        //    tm1.Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
        //    tm1.Col13 = "Save";
        //    tm1.Col100 = "Save & New";
        //    tm1.Col14 = mid_mst.Trim();
        //    tm1.Col15 = MyGuid.Trim();
        //    tm1.Col39 = "Choose File";
        //    tm1.Col40 = "Choose File";
        //    tm1.Col41 = "Choose File";
        //    tm1.Col42 = "Choose File";
        //    tm1.Col43 = "Choose File";
        //    Session["VD_TYPEMST"] = tm1.Col12;
        //    tm1.TList1 = mod1;
        //    tm1.SelectedItems1 = new string[] { "" };
        //    tm1.TList2 = mod1;
        //    tm1.SelectedItems2 = new string[] { "" };
        //    tm1.TList3 = mod1;
        //    tm1.SelectedItems3 = new string[] { "" };
        //    tm1.TList4 = mod1;
        //    tm1.SelectedItems4 = new string[] { "" };
        //    tm1.TList5 = mod1;
        //    tm1.SelectedItems5 = new string[] { "" };
        //    tm1.TList6 = mod1;
        //    tm1.SelectedItems6 = new string[] { "" };
        //    tm1.TList7 = mod1;
        //    tm1.SelectedItems7 = new string[] { "" };
        //    tm1.TList8 = mod1;
        //    tm1.SelectedItems8 = new string[] { "" };
        //    tm1.TList9 = mod1;
        //    tm1.SelectedItems9 = new string[] { "" };
        //    tm1.TList10 = mod1;
        //    tm1.SelectedItems10 = new string[] { "" };
        //    tm1.LTM1 = new List<Tmodelmain>();
        //    tm1.Col45 = "N";//chk acct type
        //    mq = "select mod_id from com_module where mod_id='22000' and com_code='" + userCode + "'";
        //    mq1 = sgen.seekval(userCode, mq, "mod_id");
        //    if (!mq1.Trim().Equals("0")) tm1.Col45 = "Y";
        //    if (tm1.Col76 == null) ViewBag.scripCall = ViewBag.scripCall + "initialize(28.477450,77.034138);";
        //    else ViewBag.scripCall = ViewBag.scripCall + "initialize(" + tm1.Col76 + ");";
        //    model.Add(tm1);
        //    return View(model);
        //}
        //public List<Tmodelmain> newnewvendor_detail(List<Tmodelmain> model)
        //{
        //    model = getnew(model);
        //    model[0].Col13 = "Save";
        //    try
        //    {
        //       sgen.SetSession(MyGuid,"EDMODE", "N");
        //        ViewBag.vnew = "disabled='disabled'";
        //        ViewBag.vedit = "disabled='disabled'";
        //        ViewBag.vsave = "";
        //        ViewBag.scripCall = "enableForm();";
        //        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
        //        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
        //        model[0].Col17 = vch_num;
        //        model[0].Col13 = "Save";
        //        model[0].Col35 = "R";
        //        model[0].Col44 = "Active";
        //        if (model[0].Col76 == null) ViewBag.scripCall = ViewBag.scripCall + "initialize(28.477450,77.034138);";
        //        else ViewBag.scripCall = ViewBag.scripCall + "initialize(" + model[0].Col76 + ");";
        //        List<SelectListItem> mod1 = new List<SelectListItem>();
        //       List<SelectListItem> mod2 = new List<SelectListItem>();
        //       List<SelectListItem> mod3 = new List<SelectListItem>();
        //       List<SelectListItem> mod4 = new List<SelectListItem>();
        //       List<SelectListItem> mod5 = new List<SelectListItem>();
        //       List<SelectListItem> mod6 = new List<SelectListItem>();
        //       List<SelectListItem> mod7 = new List<SelectListItem>();
        //       List<SelectListItem> mod8 = new List<SelectListItem>();
        //       List<SelectListItem> mod9 = new List<SelectListItem>();
        //       List<SelectListItem> mod10 = new List<SelectListItem>();
        //        #region country
        //        mq = "select distinct country_name,alpha_2 from country_state order by country_name";
        //      DataTable  dt = sgen.getdata(userCode, mq);
        //        if (dt.Rows.Count > 0)
        //        {
        //            foreach (DataRow dr in dt.Rows)
        //            {
        //                mod1.Add(new SelectListItem { Text = dr["country_name"].ToString(), Value = dr["alpha_2"].ToString() });
        //            }
        //        }
        //        TempData[MyGuid + "_Tlist1"] = mod1;
        //        TempData[MyGuid + "_Tlist2"] = mod2;
        //        #endregion
        //        #region party type
        //        mod3 = cmd_Fun.partytype(userCode, clientid_mst, unitid_mst);
        //        //mq = "select master_id,master_name from master_setting where type='PT1'" + model[0].Col11.Trim() + "";
        //        //dt = sgen.getdata(userCode, mq);
        //        //if (dt.Rows.Count > 0)
        //        //{
        //        //    foreach (DataRow dr in dt.Rows)
        //        //    {
        //        //        mod3.Add(new SelectListItem { Text = dr["master_name"].ToString(), Value = dr["master_id"].ToString() });
        //        //    }
        //        //}
        //        TempData[MyGuid + "_Tlist3"] = mod3;
        //        #endregion
        //        #region party location - fix
        //        mod4.Add(new SelectListItem { Text = "Domestic", Value = "001" });
        //        mod4.Add(new SelectListItem { Text = "Overseas", Value = "002" });
        //        TempData[MyGuid + "_Tlist4"] = mod4;
        //        #endregion
        //        #region acc type
        //        mod5 = cmd_Fun.acctypevdm(userCode, clientid_mst, unitid_mst);
        //        TempData[MyGuid + "_Tlist5"] = mod5;
        //        #endregion
        //        #region currency type
        //        mod6 = cmd_Fun.curname(userCode, clientid_mst, unitid_mst);
        //        TempData[MyGuid + "_Tlist6"] = mod6;
        //        #endregion
        //        #region bank name
        //        mod7 = cmd_Fun.bank(userCode, clientid_mst, unitid_mst);
        //        //mq = "select master_id,master_name from master_setting where type='ABD'";
        //        //dt = sgen.getdata(userCode, mq);
        //        //if (dt.Rows.Count > 0)
        //        //{
        //        //    foreach (DataRow dr in dt.Rows)
        //        //    {
        //        //        mod7.Add(new SelectListItem { Text = dr["master_name"].ToString(), Value = dr["master_id"].ToString() });
        //        //    }
        //        //}
        //        TempData[MyGuid + "_Tlist7"] = mod7;
        //        #endregion
        //        #region  SALES/SERVICE AREA
        //        mod8 = cmd_Fun.salearea(userCode, clientid_mst, unitid_mst);
        //        TempData[MyGuid + "_TList8"] = mod8;
        //        #endregion
        //        #region bindpro_type
        //        mod9 = cmd_Fun.protype(userCode, clientid_mst, unitid_mst);
        //        TempData[MyGuid + "_TList9"] = mod9;
        //        #endregion
        //        #region occupation type
        //        mod10 = cmd_Fun.occtype(userCode, clientid_mst, unitid_mst);
        //        TempData[MyGuid + "_TList10"] = mod10;
        //        #endregion
        //        model[0].TList1 = mod1;
        //        model[0].TList2 = mod2;
        //        model[0].TList3 = mod3;
        //        model[0].TList4 = mod4;
        //        model[0].TList5 = mod5;
        //        model[0].TList6 = mod6;
        //        model[0].TList7 = mod7;
        //        model[0].TList8 = mod8;
        //        model[0].TList9 = mod9;
        //        model[0].TList10 = mod10;
        //    }
        //    catch (Exception ex) { }
        //    return model;
        //}
        //[HttpPost]
        //public ActionResult newvendor_detail(List<Tmodelmain> model, string command, HttpPostedFileBase upd1, HttpPostedFileBase upd2, HttpPostedFileBase upd3, HttpPostedFileBase upd4, HttpPostedFileBase upd5, HttpPostedFileBase upd6, HttpPostedFileBase upd7)
        //{
        //    string ctype1 = "", ctype2 = "", ctype3 = "", ctype4 = "", ctype5 = "",
        //        finalpath1 = "", finalpath2 = "", finalpath3 = "", finalpath4 = "", finalpath5 = "", path1 = "", path2 = "", path3 = "", path4 = "", path5 = "",
        //        fileName1 = "", fileName2 = "", fileName3 = "", fileName4 = "", fileName5 = "", encpath1 = "", encpath2 = "", encpath3 = "", encpath4 = "", encpath5 = "",
        //    iscontractor = "N";
        //    FillMst();
        //    var tm = model.FirstOrDefault();
        //    DataTable dt = new DataTable();
        //    #region dropdown      
        //    List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
        //    List<SelectListItem> mod2 = (List<SelectListItem>)TempData[MyGuid + "_TList2"];
        //    List<SelectListItem> mod3 = (List<SelectListItem>)TempData[MyGuid + "_TList3"];
        //    List<SelectListItem> mod4 = (List<SelectListItem>)TempData[MyGuid + "_TList4"];
        //    List<SelectListItem> mod5 = (List<SelectListItem>)TempData[MyGuid + "_TList5"];
        //    List<SelectListItem> mod6 = (List<SelectListItem>)TempData[MyGuid + "_TList6"];
        //    List<SelectListItem> mod7 = (List<SelectListItem>)TempData[MyGuid + "_TList7"];
        //    List<SelectListItem> mod8 = (List<SelectListItem>)TempData[MyGuid + "_TList8"];
        //    List<SelectListItem> mod9 = (List<SelectListItem>)TempData[MyGuid + "_TList9"];
        //    List<SelectListItem> mod10 = (List<SelectListItem>)TempData[MyGuid + "_TList10"];
        //    model[0].TList1 = mod1;
        //    model[0].TList2 = mod2;
        //    model[0].TList3 = mod3;
        //    model[0].TList4 = mod4;
        //    model[0].TList5 = mod5;
        //    model[0].TList6 = mod6;
        //    model[0].TList7 = mod7;
        //    model[0].TList8 = mod8;
        //    model[0].TList9 = mod9;
        //    model[0].TList10 = mod10;
        //    TempData[MyGuid + "_TList1"] = model[0].TList1;
        //    TempData[MyGuid + "_TList2"] = model[0].TList2;
        //    TempData[MyGuid + "_TList3"] = model[0].TList3;
        //    TempData[MyGuid + "_TList4"] = model[0].TList4;
        //    TempData[MyGuid + "_TList5"] = model[0].TList5;
        //    TempData[MyGuid + "_TList6"] = model[0].TList6;
        //    TempData[MyGuid + "_TList7"] = model[0].TList7;
        //    TempData[MyGuid + "_TList8"] = model[0].TList8;
        //    TempData[MyGuid + "_TList9"] = model[0].TList9;
        //    TempData[MyGuid + "_TList10"] = model[0].TList10;
        //    if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
        //    if (model[0].SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
        //    if (model[0].SelectedItems3 == null) model[0].SelectedItems3 = new string[] { "" };
        //    if (model[0].SelectedItems4 == null) model[0].SelectedItems4 = new string[] { "" };
        //    if (model[0].SelectedItems5 == null) model[0].SelectedItems5 = new string[] { "" };
        //    if (model[0].SelectedItems6 == null) model[0].SelectedItems6 = new string[] { "" };
        //    if (model[0].SelectedItems7 == null) model[0].SelectedItems7 = new string[] { "" };
        //    if (model[0].SelectedItems8 == null) model[0].SelectedItems8 = new string[] { "" };
        //    if (model[0].SelectedItems9 == null) model[0].SelectedItems9 = new string[] { "" };
        //    if (model[0].SelectedItems10 == null) model[0].SelectedItems10 = new string[] { "" };
        //    #endregion
        //    if (command == "New")
        //    {
        //        model = newnewvendor_detail(model);
        //    }
        //    else if (command == "Cancel")
        //    {
        //        return CancelFun(model);
        //    }
        //    else if (command == "Callback")
        //    {
        //        if (Session["delid"] != null) { btnval = "FDEL"; }
        //       else if (sgen.GetSession(MyGuid, "btnval") != null) btnval = sgen.GetSession(MyGuid, "btnval").ToString();
        //        model = StartCallback(model);                            
        //        if (tm.Col76 == null) ViewBag.scripCall = ViewBag.scripCall + "initialize(28.477450,77.034138);";
        //        else ViewBag.scripCall = ViewBag.scripCall + "initialize(" + tm.Col76 + ");";
        //    }
        //    else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
        //    {
        //        try
        //        {
        //            string Isbilling = "", sez = "N";
        //            var tmodel = model.FirstOrDefault();
        //            string currdate = sgen.server_datetime(userCode);
        //            if (model[0].Chk1 == true) isgstr = "Y";
        //            if (model[0].Chk2 == true) iscontractor = "Y";
        //            type = model[0].Col12;
        //            if (model[0].Col44.Trim() == "Inactive")
        //            {
        //                type = "DD" + type;
        //                status = "N";
        //            }
        //            else status = "Y";
        //            DataTable dtstr = new DataTable();
        //            //dtstr = sgen.getdata(userCode, "select * from " + model[0].Col10 + " WHERE 1=2");
        //            dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
        //           if (sgen.GetSession(MyGuid,"EDMODE").ToString().Equals("Y"))
        //            {
        //                mq1 = " and vch_num<>'" + tmodel.Col17.Trim() + "'";
        //                isedit = true;
        //                vch_num = tmodel.Col17.Trim();
        //            }
        //            else
        //            {
        //                mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10 + " where type='" + model[0].Col12 + "' " + model[0].Col11 + "  ";
        //                vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
        //                isedit = false;
        //            }
        //            if (model[0].Chk3 == true)
        //            {
        //                sez = "Y";
        //            }
        //            else { sez = "N"; }
        //            if (model[0].Chk4 == true)
        //            {
        //                Isbilling = "Y";
        //            }
        //            else { Isbilling = "N"; }
        //            #region dtstr
        //            DataRow dr = dtstr.NewRow();
        //            dr["vch_num"] = vch_num.Trim();
        //            dr["vch_date"] = currdate;
        //            dr["type"] = type.Trim();
        //            dr["status"] = status.Trim();
        //            dr["c_name"] = model[0].Col18;
        //            dr["addr"] = model[0].Col22;
        //            dr["pincode"] = model[0].Col23;
        //            dr["type_desc"] = model[0].Col25;//search text
        //            dr["cpname"] = model[0].Col26;//cont per name
        //            dr["cpcont"] = model[0].Col27;//contno
        //            dr["cpaltcont"] = model[0].Col28;//alt contno
        //            dr["cpemail"] = model[0].Col29;//emailid
        //            dr["cpaddr"] = model[0].Col30;//cpaddr
        //            dr["cpdesig"] = model[0].Col31;//cpdesig
        //            dr["lsrno"] = model[0].Col32;//leisure value
        //            dr["bnkaddr"] = model[0].Col33;//bank address
        //            dr["micrno"] = model[0].Col34;
        //            if (mid_mst.Trim().Equals("28005.1") || mid_mst.Trim().Equals("9008.6") || mid_mst.Trim().Equals("41005.8") || mid_mst.Trim().Equals("21008.1"))
        //            {
        //                dr["cfrm"] = "Y";//confirm
        //            }
        //            else
        //            {
        //                dr["cfrm"] = "N";//confirm
        //            }
        //                dr["c_gstin"] = "Not Registered";
        //            var cgstin = model[0].Col24;
        //            if (isgstr == "Y" && cgstin != null)
        //            {
        //                dr["isgstr"] = isgstr;
        //                dr["c_gstin"] = cgstin;
        //                dr["tor"] = model[0].Col35;
        //            }
        //            dr["panno"] = model[0].Col36;
        //            dr["msmeno"] = model[0].Col37;
        //            dr["tanno"] = model[0].Col38;
        //            //dr["country"] = model[0].SelectedItems1.FirstOrDefault();//country
        //            //dr["state"] = model[0].SelectedItems2.FirstOrDefault();//state
        //            dr["country"] = model[0].Col49;//country_id//////////////
        //            dr["state"] = model[0].Col71;//state_id//////////////
        //            dr["country2"] = model[0].Col72;//country id 2//////////////
        //            dr["state2"] = model[0].Col73;//state_id 2//////////////
        //            dr["city"] = model[0].Col64; //village ref vchnum///////////////
        //            dr["city2"] = model[0].Col48; //village ref vchnum billing add////////////
        //            dr["DOB"] = sgen.Savedate(model[0].Col20, false);//dob///////////////
        //            dr["DOA"] = sgen.Savedate(model[0].Col21, false);//doa/////////////////
        //            dr["MT_DT"] = sgen.Savedate(model[0].Col75, false);//meeting datetime //////////////////
        //            dr["cpaddr2"] = model[0].Col70;//address//////////////
        //            dr["cplandno"] = model[0].Col53;//landline
        //            dr["remark"] = model[0].Col54;//remark
        //            dr["google_add"] = model[0].Col77;
        //            dr["latlong"] = model[0].Col76;
        //            dr["PR_TYPE"] = model[0].SelectedItems9.FirstOrDefault().ToString().Trim(); // type of property
        //            dr["refered_by"] = model[0].Col55; // refered by
        //            dr["file_no"] = model[0].Col56; // old file no
        //            dr["occ_type"] = model[0].SelectedItems10.FirstOrDefault().ToString().Trim(); // // occupation
        //            dr["client_type"] = model[0].SelectedItems8.FirstOrDefault().ToString().Trim(); // Sales/services
        //            //only for crm client
        //            dr["BILL_ADD"] = Isbilling;//Is billing Add Same
        //            dr["sez"] = sez;
        //            dr["ptype"] = model[0].SelectedItems3.FirstOrDefault();//ptype
        //            dr["ploc"] = model[0].SelectedItems4.FirstOrDefault();//ploc                
        //            dr["acctype"] = model[0].SelectedItems5.FirstOrDefault();
        //            dr["curtype"] = model[0].SelectedItems6.FirstOrDefault();
        //            dr["bnk"] = model[0].SelectedItems7.FirstOrDefault();
        //            dr["swftcd"] = model[0].Col50;
        //            dr["contr"] = iscontractor.Trim();
        //            dr["acctno"] = model[0].Col51;
        //            dr["ifsc"] = model[0].Col52;
        //            dr["cpdept"] = model[0].Col78;
        //            if (isedit)
        //            {
        //                dr["client_id"] = model[0].Col1.Trim();
        //                dr["client_unit_id"] = model[0].Col2.Trim();
        //                dr["vch_num"] = model[0].Col17;
        //                dr["rec_id"] = model[0].Col7;
        //                dr["ent_by"] = model[0].Col3;
        //                dr["ent_date"] = model[0].Col4;
        //                dr["edit_by"] = userid_mst;
        //                dr["edit_date"] = sgen.Savedate(currdate, false);
        //            }
        //            else
        //            {
        //                dr["rec_id"] = "0";
        //                dr["client_id"] = clientid_mst;
        //                dr["client_unit_id"] = unitid_mst;
        //                dr["ent_by"] = userid_mst;
        //                dr["ent_date"] = sgen.Savedate(currdate, false);
        //                dr["edit_by"] = "-";
        //                dr["edit_by"] = sgen.Savedate(currdate, false);
        //            }
        //            #endregion
        //            dtstr.Rows.Add(dr);
        //            ok = sgen.Update_data(userCode, dtstr, model[0].Col10, tmodel.Col8, isedit);
        //            if (ok == true)
        //            {
        //                DataTable dtfile = new DataTable();
        //                //dtfile = sgen.getdata(userCode, "select * from file_tab WHERE 1=2");
        //                dtfile = cmd_Fun.GetStructure(userCode, "file_tab");
        //                string serverpath = Server.MapPath("~/Uploads/" + cg_com_name.Replace(" ", "") + "/");
        //                #region attachment
        //                //Pan Card
        //                try
        //                {
        //                    HttpPostedFileBase file1 = upd1;
        //                    ctype1 = file1.ContentType;
        //                    fileName1 = file1.FileName;
        //                    path1 = clientid_mst + unitid_mst + userid_mst + currdate + "_" + fileName1;
        //                    encpath1 = sgen.Convert_Stringto64(path1).ToString();
        //                    finalpath1 = serverpath + encpath1;
        //                    file1.SaveAs(finalpath1);
        //                    filesave(model, currdate, dtfile, fileName1, encpath1, "Pan Card", ctype1);
        //                }
        //                catch (Exception ex) { }
        //                //Msme
        //                try
        //                {
        //                    HttpPostedFileBase file2 = upd2;
        //                    ctype2 = file2.ContentType;
        //                    fileName2 = file2.FileName;
        //                    path2 = clientid_mst + unitid_mst + userid_mst + currdate + "_" + fileName2;
        //                    encpath2 = sgen.Convert_Stringto64(path2).ToString();
        //                    finalpath2 = serverpath + encpath2;
        //                    file2.SaveAs(finalpath2);
        //                    filesave(model, currdate, dtfile, fileName2, encpath2, "Msme", ctype2);
        //                }
        //                catch (Exception ex) { }
        //                //Gstin
        //                try
        //                {
        //                    HttpPostedFileBase file3 = upd3;
        //                    ctype3 = file3.ContentType;
        //                    fileName3 = file3.FileName;
        //                    path3 = clientid_mst + unitid_mst + userid_mst + currdate + "_" + fileName3;
        //                    encpath3 = sgen.Convert_Stringto64(path3).ToString();
        //                    finalpath3 = serverpath + encpath3;
        //                    file3.SaveAs(finalpath3);
        //                    filesave(model, currdate, dtfile, fileName3, encpath3, "Gstin", ctype3);
        //                }
        //                catch (Exception ex) { }
        //                //Vd_Reg
        //                try
        //                {
        //                    HttpPostedFileBase file4 = upd4;
        //                    ctype4 = file4.ContentType;
        //                    fileName4 = file4.FileName;
        //                    path4 = clientid_mst + unitid_mst + userid_mst + currdate + "_" + fileName4;
        //                    encpath4 = sgen.Convert_Stringto64(path4).ToString();
        //                    finalpath4 = serverpath + encpath4;
        //                    file4.SaveAs(finalpath4);
        //                    filesave(model, currdate, dtfile, fileName4, encpath4, "Vd_Reg", ctype4);
        //                }
        //                catch (Exception ex) { }
        //                //Chq_Copy
        //                try
        //                {
        //                    HttpPostedFileBase file5 = upd5;
        //                    ctype5 = file5.ContentType;
        //                    fileName5 = file5.FileName;
        //                    path5 = clientid_mst + unitid_mst + userid_mst + currdate + "_" + fileName5;
        //                    encpath5 = sgen.Convert_Stringto64(path5).ToString();
        //                    finalpath5 = serverpath + encpath5;
        //                    file5.SaveAs(finalpath5);
        //                    filesave(model, currdate, dtfile, fileName5, encpath5, "Chq_Copy", ctype5);
        //                }
        //                catch (Exception ex) { }
        //                //client_property
        //                try
        //                {
        //                    HttpPostedFileBase file6 = upd6;
        //                    ctype6 = file6.ContentType;
        //                    fileName6 = file6.FileName;
        //                    path6 = clientid_mst + unitid_mst + userid_mst + currdate + "_" + fileName6;
        //                    encpath6 = sgen.Convert_Stringto64(path6).ToString();
        //                    finalpath6 = serverpath + encpath6;
        //                    file6.SaveAs(finalpath6);
        //                    filesave(model, currdate, dtfile, fileName6, encpath6, "Property", ctype6);
        //                }
        //                catch (Exception ex) { }
        //                //contact person Image
        //                try
        //                {
        //                    HttpPostedFileBase file7 = upd7;
        //                    ctype7 = file7.ContentType;
        //                    fileName7 = file7.FileName;
        //                    path7 = clientid_mst + unitid_mst + userid_mst + currdate + "_" + fileName7;
        //                    encpath7 = sgen.Convert_Stringto64(path7).ToString();
        //                    finalpath7 = serverpath + encpath7;
        //                    file7.SaveAs(finalpath7);
        //                    filesave(model, currdate, dtfile, fileName7, encpath7, "Client", ctype7);
        //                }
        //                catch (Exception ex) { }
        //                #endregion
        //                res = sgen.Update_data(userCode, dtfile, "file_tab", "", false);
        //                if (!res) { ViewBag.scripCall = "showmsgJS(1, 'Something Went Wrong, File Not Save', 0);"; return View(model); }
        //                //ViewBag.vnew = "";
        //                //ViewBag.vedit = "";
        //                //ViewBag.vsave = "disabled='disabled'";
        //                //ViewBag.scripCall = "showmsgJS(1, 'Data Saved Successfully', 1);disableForm();";
        //                if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
        //                {
        //                    ViewBag.vnew = "";
        //                    ViewBag.vedit = "";
        //                    ViewBag.vsave = "disabled='disabled'";
        //                    ViewBag.vsavenew = "disabled='disabled'";
        //                    //ViewBag.scripCall = "showmsgJS(1, 'Record Saved Successfully', 1);disableForm();";
        //                    ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
        //                }
        //                else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
        //                {
        //                    try
        //                    {
        //                        model = newnewvendor_detail(model);
        //                        ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully')";
        //                    }
        //                    catch (Exception ex) { }
        //                }
        //                model = new List<Tmodelmain>();
        //                model.Add(new Tmodelmain()
        //                {
        //                    Col9 = tmodel.Col9,
        //                    Col10 = tmodel.Col10,
        //                    Col11 = tmodel.Col11,
        //                    Col12 = tmodel.Col12,
        //                    Col13 = "Save",
        //                    Col100 = "Save & New",
        //                    Col14 = tmodel.Col14,
        //                    Col15 = tmodel.Col15,
        //                    Col39 = tmodel.Col39,
        //                    Col40 = tmodel.Col40,
        //                    Col41 = tmodel.Col41,
        //                    Col42 = tmodel.Col42,
        //                    TList1 = mod1,
        //                    TList2 = mod2,
        //                    TList3 = mod3,
        //                    TList4 = mod4,
        //                    TList5 = mod5,
        //                    TList6 = mod6,
        //                    TList7 = mod7,
        //                    TList8 = mod8,
        //                    TList9 = mod9,
        //                    TList10 = mod10,
        //                    SelectedItems1 = new string[] { "" },
        //                    SelectedItems2 = new string[] { "" },
        //                    SelectedItems3 = new string[] { "" },
        //                    SelectedItems4 = new string[] { "" },
        //                    SelectedItems5 = new string[] { "" },
        //                    SelectedItems6 = new string[] { "" },
        //                    SelectedItems7 = new string[] { "" },
        //                    SelectedItems8 = new string[] { "" },
        //                    SelectedItems9 = new string[] { "" },
        //                    SelectedItems10 = new string[] { "" },
        //                    LTM1 = new List<Tmodelmain>()
        //                });
        //            }
        //            else { ViewBag.scripCall += "showmsgJS(1, 'Record Not Saved', 0);"; }
        //        }
        //        catch (Exception ex) { ViewBag.scripCall += "showmsgJS(1, '" + ex.Message.ToString() + "', 0);"; }
        //    }
        //    else if (command == "btnst")
        //    {
        //        try
        //        {
        //            #region state                   
        //            mq = "select distinct state_name,state_gst_code from country_state where alpha_2='" + model[0].SelectedItems1.FirstOrDefault() + "' and state_name!='-' order by state_name";
        //            dt = sgen.getdata(userCode, mq);
        //            if (dt.Rows.Count > 0)
        //            {
        //                foreach (DataRow dr in dt.Rows)
        //                {
        //                    mod2.Add(new SelectListItem { Text = dr["state_name"].ToString(), Value = dr["state_gst_code"].ToString() });
        //                }
        //            }
        //            TempData[MyGuid + "_Tlist2"] = mod2;
        //            #endregion
        //            model[0].TList2 = mod2;
        //            ViewBag.vnew = "disabled='disabled'";
        //            ViewBag.vedit = "disabled='disabled'";
        //            ViewBag.vsave = "";
        //        }
        //        catch (Exception ex) { ViewBag.scripCall = "showmsgJS(1, '" + ex.Message.ToString() + "', 0);"; }
        //    }
        //    ModelState.Clear();
        //    return View(model);
        //}
        //private void filesave(List<Tmodelmain> model, string currdate, DataTable dtfile, string filename, string filepath, string filetitle, string content_type)
        //{
        //    FillMst();
        //    DataRow drf = dtfile.NewRow();
        //    drf["vch_num"] = model[0].Col17;
        //    drf["type"] = model[0].Col12;
        //    drf["ref_code"] = model[0].Col17;
        //    drf["ref_code1"] = model[0].Col17;
        //    drf["col1"] = filetitle;
        //    drf["rec_id"] = "0";
        //    drf["vch_date"] = currdate;
        //    drf["file_name"] = filename;
        //    drf["file_path"] = filepath;
        //    drf["col2"] = content_type;
        //    drf["ent_by"] = userid_mst;
        //    drf["ent_date"] = currdate;
        //    drf["client_id"] = clientid_mst;
        //    drf["client_unit_id"] = unitid_mst;
        //    drf["edit_by"] = userid_mst;
        //    drf["edit_date"] = currdate;
        //    dtfile.Rows.Add(drf);
        //}
        //[HttpGet]
        //public FileResult fdown(string value)
        //{
        //    string path = "", fileName = "";
        //    FillMst();
        //    if (!value.Trim().Equals(""))
        //    {
        //        DataTable dt2 = new DataTable();
        //        mq = "select file_name,file_path from file_tab where rec_id='" + value.Trim() + "' and type='PVD' and client_id='"
        //            + clientid_mst + "' and client_unit_id='" + unitid_mst + "'";
        //        dt2 = sgen.getdata(userCode, mq);
        //        if (dt2.Rows.Count > 0)
        //        {
        //            path = Convert.ToString(dt2.Rows[0]["file_path"]);
        //            fileName = Convert.ToString(dt2.Rows[0]["file_name"]);
        //        }
        //    }
        //    byte[] fileBytes = System.IO.File.ReadAllBytes(Server.MapPath("~/Uploads/" + cg_com_name.Replace(" ", "") + "/" + path));
        //    return File(fileBytes, System.Net.Mime.MediaTypeNames.Application.Octet, fileName);
        //}
        #endregion
        #region return type
        public ActionResult ret()
        {
            FillMst();
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            model[0].Col9 = "RETURN TYPE";
            model[0].Col10 = "vehicle_master"; //TABLE NAME
            #region Dropdowns
            List<SelectListItem> mod1 = new List<SelectListItem>();
            List<SelectListItem> mod2 = new List<SelectListItem>();
            List<SelectListItem> mod3 = new List<SelectListItem>();
            List<SelectListItem> mod4 = new List<SelectListItem>();
            List<SelectListItem> mod5 = new List<SelectListItem>();
            List<SelectListItem> mod6 = new List<SelectListItem>();
            List<SelectListItem> mod7 = new List<SelectListItem>();
            List<SelectListItem> mod8 = new List<SelectListItem>();
            List<SelectListItem> mod9 = new List<SelectListItem>();
            List<SelectListItem> mod10 = new List<SelectListItem>();
            //List<SelectListItem> mod11 = new List<SelectListItem>();
            model[0].TList1 = mod1;
            model[0].SelectedItems1 = new string[] { "" };
            model[0].TList2 = mod2;
            model[0].SelectedItems2 = new string[] { "" };
            model[0].TList3 = mod3;
            model[0].SelectedItems3 = new string[] { "" };
            model[0].TList4 = mod4;
            model[0].SelectedItems4 = new string[] { "" };
            model[0].TList5 = mod5;
            model[0].SelectedItems5 = new string[] { "" };
            model[0].TList6 = mod6;
            model[0].SelectedItems6 = new string[] { "" };
            model[0].TList7 = mod7;
            model[0].SelectedItems7 = new string[] { "" };
            model[0].TList8 = mod8;
            model[0].SelectedItems8 = new string[] { "" };
            model[0].TList9 = mod9;
            model[0].SelectedItems9 = new string[] { "" };
            model[0].TList10 = mod10;
            model[0].SelectedItems10 = new string[] { "" };
            //model[0].TList11 = mod11;
            //model[0].SelectedItems11 = new string[] { "" }; 
            #endregion
            DataTable dtb = (DataTable)sgen.GetSession(MyGuid, "URIGHTS");
            try
            {
                dtb = dtb.Select("m_id='" + model[0].Col14 + "'").CopyToDataTable();
                if (dtb.Rows.Count > 0)
                {
                    model[0].Col55 = dtb.Rows[0]["btnnew"].ToString();
                    model[0].Col56 = dtb.Rows[0]["btnedit"].ToString();
                    model[0].Col57 = dtb.Rows[0]["btnview"].ToString();
                }
            }
            catch (Exception ex) { }
            model[0].Col11 = "and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "'";
            model[0].Col12 = "RET"; //Book Forward
            model[0].Col13 = "Save";
            model[0].Col100 = "Save & New";
            return View(model);
        }
        public List<Tmodelmain> newret(List<Tmodelmain> model)
        {
            model = getnew(model);
            var tm = model.FirstOrDefault();
            DataTable dt = new DataTable();
            #region Dropdwon
            List<SelectListItem> mod1 = new List<SelectListItem>();
            TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];

            if (tm.SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
            List<SelectListItem> mod2 = new List<SelectListItem>();
            TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2 = (List<SelectListItem>)TempData[MyGuid + "_TList2"];

            if (tm.SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
            List<SelectListItem> mod3 = new List<SelectListItem>();
            TempData[MyGuid + "_TList3"] = model[0].TList3 = mod3 = (List<SelectListItem>)TempData[MyGuid + "_TList3"];

            if (tm.SelectedItems3 == null) model[0].SelectedItems3 = new string[] { "" };
            List<SelectListItem> mod4 = new List<SelectListItem>();
            TempData[MyGuid + "_TList4"] = model[0].TList4 = mod4 = (List<SelectListItem>)TempData[MyGuid + "_TList4"];

            if (tm.SelectedItems4 == null) model[0].SelectedItems4 = new string[] { "" };
            List<SelectListItem> mod5 = new List<SelectListItem>();
            TempData[MyGuid + "_TList5"] = model[0].TList5 = mod5 = (List<SelectListItem>)TempData[MyGuid + "_TList5"];

            if (tm.SelectedItems5 == null) model[0].SelectedItems5 = new string[] { "" };
            List<SelectListItem> mod6 = new List<SelectListItem>();
            TempData[MyGuid + "_TList6"] = model[0].TList6 = mod6 = (List<SelectListItem>)TempData[MyGuid + "_TList6"];

            if (tm.SelectedItems6 == null) model[0].SelectedItems6 = new string[] { "" };
            List<SelectListItem> mod7 = new List<SelectListItem>();
            TempData[MyGuid + "_TList7"] = model[0].TList7 = mod7 = (List<SelectListItem>)TempData[MyGuid + "_TList7"];

            if (tm.SelectedItems7 == null) model[0].SelectedItems7 = new string[] { "" };
            List<SelectListItem> mod8 = new List<SelectListItem>();
            TempData[MyGuid + "_TList8"] = model[0].TList8 = mod8 = (List<SelectListItem>)TempData[MyGuid + "_TList8"];

            if (tm.SelectedItems8 == null) model[0].SelectedItems8 = new string[] { "" };
            List<SelectListItem> mod9 = new List<SelectListItem>();
            TempData[MyGuid + "_TList9"] = model[0].TList9 = mod9 = (List<SelectListItem>)TempData[MyGuid + "_TList9"];

            if (tm.SelectedItems9 == null) model[0].SelectedItems9 = new string[] { "" };
            List<SelectListItem> mod10 = new List<SelectListItem>();
            TempData[MyGuid + "_TList10"] = model[0].TList10 = mod10 = (List<SelectListItem>)TempData[MyGuid + "_TList10"];

            if (tm.SelectedItems10 == null) model[0].SelectedItems10 = new string[] { "" };
            //List<SelectListItem> mod11 = new List<SelectListItem>();
            //model[0].TList11 = (List<SelectListItem>)TempData[MyGuid + "_TList11"];
            //TempData[MyGuid + "_TList11"] = model[0].TList11;
            //if (tm.SelectedItems11 == null) model[0].SelectedItems11 = new string[] { "" };
            #endregion
            #region Country
            DataTable dt3 = new DataTable();
            dt3 = sgen.getdata(userCode, "select country_name,alpha_2 from country_state group by country_name,alpha_2 order by country_name,alpha_2");
            if (dt3.Rows.Count > 0)
            {
                foreach (DataRow dr in dt3.Rows)
                {
                    mod1.Add(new SelectListItem { Text = dr["country_name"].ToString(), Value = dr["alpha_2"].ToString() });
                }
            }
            TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1;
            #endregion
            //TempData[MyGuid + "_Tlist2"] = mod2;
            //TempData[MyGuid + "_Tlist3"] = mod3;
            //TempData[MyGuid + "_Tlist4"] = mod4;
            //TempData[MyGuid + "_Tlist5"] = mod5;
            //TempData[MyGuid + "_Tlist6"] = mod6;
            model[0].Col13 = "Save";
            model[0].Col100 = "Save & New";
            return model;
        }
        [HttpPost]
        public ActionResult ret(List<Tmodelmain> model, string command)
        {
            try
            {
                FillMst();
                var tm = model.FirstOrDefault();
                #region Dropdwon
                List<SelectListItem> mod1 = new List<SelectListItem>();
                model[0].TList1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                TempData[MyGuid + "_TList1"] = model[0].TList1;
                if (tm.SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                List<SelectListItem> mod2 = new List<SelectListItem>();
                model[0].TList2 = (List<SelectListItem>)TempData[MyGuid + "_TList2"];
                TempData[MyGuid + "_TList2"] = model[0].TList2;
                if (tm.SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
                List<SelectListItem> mod3 = new List<SelectListItem>();
                model[0].TList3 = (List<SelectListItem>)TempData[MyGuid + "_TList3"];
                TempData[MyGuid + "_TList3"] = model[0].TList3;
                if (tm.SelectedItems3 == null) model[0].SelectedItems3 = new string[] { "" };
                List<SelectListItem> mod4 = new List<SelectListItem>();
                model[0].TList4 = (List<SelectListItem>)TempData[MyGuid + "_TList4"];
                TempData[MyGuid + "_TList4"] = model[0].TList4;
                if (tm.SelectedItems4 == null) model[0].SelectedItems4 = new string[] { "" };
                List<SelectListItem> mod5 = new List<SelectListItem>();
                model[0].TList5 = (List<SelectListItem>)TempData[MyGuid + "_TList5"];
                TempData[MyGuid + "_TList5"] = model[0].TList5;
                if (tm.SelectedItems5 == null) model[0].SelectedItems5 = new string[] { "" };
                List<SelectListItem> mod6 = new List<SelectListItem>();
                model[0].TList6 = (List<SelectListItem>)TempData[MyGuid + "_TList6"];
                TempData[MyGuid + "_TList6"] = model[0].TList6;
                if (tm.SelectedItems6 == null) model[0].SelectedItems6 = new string[] { "" };
                List<SelectListItem> mod7 = new List<SelectListItem>();
                model[0].TList7 = (List<SelectListItem>)TempData[MyGuid + "_TList7"];
                TempData[MyGuid + "_TList7"] = model[0].TList7;
                if (tm.SelectedItems7 == null) model[0].SelectedItems7 = new string[] { "" };
                List<SelectListItem> mod8 = new List<SelectListItem>();
                model[0].TList8 = (List<SelectListItem>)TempData[MyGuid + "_TList8"];
                TempData[MyGuid + "_TList8"] = model[0].TList8;
                if (tm.SelectedItems8 == null) model[0].SelectedItems8 = new string[] { "" };
                List<SelectListItem> mod9 = new List<SelectListItem>();
                model[0].TList9 = (List<SelectListItem>)TempData[MyGuid + "_TList9"];
                TempData[MyGuid + "_TList9"] = model[0].TList9;
                if (tm.SelectedItems9 == null) model[0].SelectedItems9 = new string[] { "" };
                List<SelectListItem> mod10 = new List<SelectListItem>();
                model[0].TList10 = (List<SelectListItem>)TempData[MyGuid + "_TList10"];
                TempData[MyGuid + "_TList10"] = model[0].TList10;
                if (tm.SelectedItems10 == null) model[0].SelectedItems10 = new string[] { "" };
                #endregion
                if (command == "New")
                {
                    if (model[0].Col55 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for new return type, please contact your admin', 2);";
                        return View(model);
                    }
                    model = newret(model);
                }
                #region state
                else if (command == "Class")
                {
                    if (tm.SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                    if (tm.SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
                    if (tm.SelectedItems3 == null) model[0].SelectedItems3 = new string[] { "" };
                    mod2 = new List<SelectListItem>();
                    DataTable dt2 = new DataTable();
                    dt2 = sgen.getdata(userCode, "select distinct state_name,state_gst_code from country_state where alpha_2='" + model[0].SelectedItems1.FirstOrDefault() + "' and state_name!='-' order by state_name");
                    if (dt2.Rows.Count > 0)
                    {
                        foreach (DataRow dr in dt2.Rows)
                        {
                            mod2.Add(new SelectListItem { Text = dr["state_name"].ToString(), Value = dr["state_gst_code"].ToString() });
                        }
                    }
                    TempData[MyGuid + "_Tlist2"] = mod2;
                    model[0].TList2 = mod2;
                }
                #endregion
                #region city
                else if (command == "Section")
                {
                    if (tm.SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                    if (tm.SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
                    if (tm.SelectedItems3 == null) model[0].SelectedItems3 = new string[] { "" };
                    mod3 = new List<SelectListItem>();
                    DataTable dt3 = new DataTable();
                    dt3 = sgen.getdata(userCode, "SELECT city_name FROM (SELECT distinct city_name FROM country_state where state_gst_code='" + model[0].SelectedItems2.FirstOrDefault() + "' ) tab union SELECT 'Other' city_name from dual");
                    if (dt3.Rows.Count > 0)
                    {
                        foreach (DataRow dr in dt3.Rows)
                        {
                            mod3.Add(new SelectListItem { Text = dr["city_name"].ToString(), Value = dr["city_name"].ToString() });
                        }
                    }
                    TempData[MyGuid + "_Tlist3"] = mod3;
                    model[0].TList3 = mod3;
                }
                #endregion
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    if ((model[0].Col56 == "N") && (btnval == "EDIT"))
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for edit return type, please contact your admin', 2);disableForm();";
                        return View(model);
                    }
                    model = StartCallback(model);
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {
                    if (model[0].Col55 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for save , please contact your admin', 2);";
                        return View(model);
                    }
                    string found = "", inactive_date = "";
                    var tmodel = model.FirstOrDefault();
                    string currdate = sgen.server_datetime_local(userCode);
                    //ent_date = sgen.Savedate(currdate, true);
                    DataTable dtstr = new DataTable();
                    dtstr = sgen.getdata(userCode, "select * from " + model[0].Col10 + " WHERE 1=2");
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        mq1 = " and vch_num<>'" + tmodel.Col16.Trim() + "'";
                        isedit = true;
                        vch_num = tmodel.Col16.Trim();
                    }
                    else
                    {
                        isedit = false;
                        vch_num = sgen.genNo(userCode, "select max(to_number (vch_num)) as max from " + model[0].Col10 + " where client_id='" + clientid_mst + "'" +
                                                       " and client_unit_id='" + unitid_mst + "' and type='" + model[0].Col12 + "'", 6, "max");
                        //string cond = sgen.seekval(userCode, "select col10 from " + model[0].Col10 + " where type='" + model[0].Col12 + "' and client_id='" + clientid_mst + "'  and " +
                        //            "col10='" + model[0].Col27 + "' and client_unit_id='" + unitid_mst + "'" + mq1 + "", "col10");
                        //if (!cond.Equals("0"))
                        //{
                        //    //Means Already Exits....     
                        //    ViewBag.scripCall = "showmsgJS(1,'Forward No Already Exists',2)";
                        //    goto END;
                        //}
                    }
                    DataRow dr = dtstr.NewRow();
                    dr["rec_id"] = "0";
                    dr["vch_num"] = vch_num;
                    dr["vch_date"] = currdate;
                    dr["type"] = model[0].Col12;
                    dr["col1"] = model[0].SelectedItems1.FirstOrDefault();  // Country
                    dr["col2"] = model[0].SelectedItems2.FirstOrDefault();  // State
                    dr["col4"] = model[0].SelectedItems3.FirstOrDefault();  // City
                    dr["col7"] = model[0].SelectedItems4.FirstOrDefault();  // Legislation Area
                    dr["col8"] = model[0].SelectedItems5.FirstOrDefault();  // Sub Legislation Area
                    dr["col9"] = model[0].SelectedItems6.FirstOrDefault();  // Act Name
                    dr["col10"] = model[0].SelectedItems7.FirstOrDefault();  // Rule Name
                    dr["col11"] = model[0].SelectedItems8.FirstOrDefault();  // Compliance Type
                    dr["col12"] = model[0].SelectedItems9.FirstOrDefault();  // Statutory Authority
                    dr["col13"] = model[0].SelectedItems10.FirstOrDefault();  // Filling Frequency
                    dr["date2"] = sgen.Savedate(model[0].Col20, false);      // Due Date
                    //dr["date3"] = sgen.Savedate(model[0].Col20, false);      // 
                    dr["col15"] = model[0].Col17;    // section
                    dr["col17"] = model[0].Col18;    // rule no
                    dr["col16"] = model[0].Col19;    // form no
                    dr["col19"] = model[0].Col20;    // due date
                    dr["col20"] = model[0].Col21;    // Penalty for non-filling
                    dr["col21"] = model[0].Col22;    // Rem. days before due date
                    dr["col28"] = model[0].Col23;    // interval days
                    dr["col25"] = model[0].Col24;    // SMS
                    dr["col29"] = model[0].Col25;    // Email
                    dr["col30"] = model[0].Col26;    // Attachment
                    dr["col14"] = model[0].Col27;    // Compliance Name
                    dr["col3"] = model[0].Col28;    // Compliance Description
                    dr = getsave(currdate, dr, model);
                    dtstr.Rows.Add(dr);
                    bool Result = sgen.Update_data(userCode, dtstr, model[0].Col10.Trim(), tmodel.Col8, isedit);
                    if (Result == true)
                    {
                        if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                        {
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                        {
                            model = newret(model);
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                        }
                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col16 = tm.Col16,
                            Col17 = "",
                            Col1 = "",
                            Col18 = "",
                            Col9 = tm.Col9,
                            Col10 = tm.Col10,
                            Col11 = tm.Col11,
                            Col12 = tm.Col12,
                            Col13 = tm.Col13,
                            Col14 = tm.Col14,
                            Col15 = tm.Col15,
                            Col100 = tm.Col100,
                            TList1 = mod1,
                            TList2 = mod2,
                            SelectedItems1 = new string[] { "" },
                            SelectedItems2 = new string[] { "" },
                        });
                    }
                    else
                    {
                        ViewBag.scripCall = "showmsgJS(3, 'Record Not Saved', 0);";
                    }
                END:;
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region return allocation to client / user
        public ActionResult ret_all()
        {
            FillMst();
            List<Tmodelmain> model = new List<Tmodelmain>();
            List<SelectListItem> mod1 = new List<SelectListItem>();
            List<SelectListItem> mod2 = new List<SelectListItem>();
            List<SelectListItem> mod3 = new List<SelectListItem>();
            model = getload(model);
            DataTable dtb = (DataTable)sgen.GetSession(MyGuid, "URIGHTS");
            try
            {
                dtb = dtb.Select("m_id='" + model[0].Col14 + "'").CopyToDataTable();
                if (dtb.Rows.Count > 0)
                {
                    model[0].Col30 = dtb.Rows[0]["btnnew"].ToString();
                    model[0].Col31 = dtb.Rows[0]["btnedit"].ToString();
                    model[0].Col32 = dtb.Rows[0]["btnview"].ToString();
                }
            }
            catch (Exception ex) { }
            model[0].Col9 = "RETURN TYPE";
            model[0].Col10 = "vehicle_master"; //TABLE NAME
            model[0].TList1 = mod1;
            model[0].SelectedItems1 = new string[] { "" };
            model[0].TList2 = mod2;
            model[0].SelectedItems2 = new string[] { "" };
            model[0].TList3 = mod3;
            model[0].SelectedItems3 = new string[] { "" };
            model[0].Col11 = "and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "'";
            model[0].Col12 = "RET"; //Book Forward
            model[0].Col13 = "Save";
            model[0].Col100 = "Save & New";
            return View(model);
        }
        public List<Tmodelmain> newret_all(List<Tmodelmain> model)
        {
            var tm = model.FirstOrDefault();
            model = getnew(model);
            #region Dropdwon
            List<SelectListItem> mod1 = new List<SelectListItem>();
            model[0].TList1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
            TempData[MyGuid + "_TList1"] = model[0].TList1;
            if (tm.SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
            List<SelectListItem> mod2 = new List<SelectListItem>();
            model[0].TList2 = (List<SelectListItem>)TempData[MyGuid + "_TList2"];
            TempData[MyGuid + "_TList2"] = model[0].TList2;
            if (tm.SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
            List<SelectListItem> mod3 = new List<SelectListItem>();
            model[0].TList3 = (List<SelectListItem>)TempData[MyGuid + "_TList3"];
            TempData[MyGuid + "_TList3"] = model[0].TList3;
            if (tm.SelectedItems3 == null) model[0].SelectedItems3 = new string[] { "" };
            #endregion
            //model = getnew(model);
            //model[0].Col16 = master_id;
            #region Currency
            TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1 = cmd_Fun.fwdcurname(userCode, unitid_mst);

            #endregion
            #region Nature of Transaction
            mod2.Add(new SelectListItem { Text = "SALE", Value = "SALE" });
            mod2.Add(new SelectListItem { Text = "BUY", Value = "BUY" });
            TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2;
            #endregion


            model[0].TList3 = mod3;
            model[0].Col13 = "Save";
            model[0].Col100 = "Save & New";
            return model;
        }
        [HttpPost]
        public ActionResult ret_all(List<Tmodelmain> model, string command)
        {
            try
            {
                FillMst();
                var tm = model.FirstOrDefault();
                #region Dropdwon
                List<SelectListItem> mod1 = new List<SelectListItem>();
                model[0].TList1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                TempData[MyGuid + "_TList1"] = model[0].TList1;
                if (tm.SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                List<SelectListItem> mod2 = new List<SelectListItem>();
                model[0].TList2 = (List<SelectListItem>)TempData[MyGuid + "_TList2"];
                TempData[MyGuid + "_TList2"] = model[0].TList2;
                if (tm.SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
                #endregion
                if (command == "New")
                {
                    if (model[0].Col30 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for new return allocation, please contact your admin', 2);";
                        return View(model);
                    }
                    model = newret(model);
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    if ((model[0].Col31 == "N") && (btnval == "EDIT"))
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for edit return allocation, please contact your admin', 2);disableForm();";
                        return View(model);
                    }
                    model = StartCallback(model);
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {
                    if (model[0].Col30 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for save , please contact your admin', 2);";
                        return View(model);
                    }
                    string found = "", inactive_date = "";
                    var tmodel = model.FirstOrDefault();
                    string currdate = sgen.server_datetime_local(userCode);
                    // ent_date = sgen.Savedate(currdate, true);
                    DataTable dtstr = new DataTable();
                    //shiv
                    dtstr = sgen.getdata(userCode, "select * from " + model[0].Col10 + " WHERE 1=2");
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        mq1 = " and vch_num<>'" + tmodel.Col16.Trim() + "'";
                        isedit = true;
                        vch_num = tmodel.Col16.Trim();
                    }
                    else
                    {
                        isedit = false;
                        vch_num = sgen.genNo(userCode, "select max(to_number (vch_num)) as max from " + model[0].Col10 + " where client_id='" + clientid_mst + "'" +
                                                       " and client_unit_id='" + unitid_mst + "' and type='" + model[0].Col12 + "'", 6, "max");
                        string cond = sgen.seekval(userCode, "select col10 from " + model[0].Col10 + " where type='" + model[0].Col12 + "' and client_id='" + clientid_mst + "'  and " +
                                    "col10='" + model[0].Col27 + "' and client_unit_id='" + unitid_mst + "'" + mq1 + "", "col10");
                        if (!cond.Equals("0"))
                        {
                            //Means Already Exits....     
                            ViewBag.scripCall = "showmsgJS(1,'Forward No Already Exists',2)";
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            goto END;
                        }
                    }
                    DataRow dr = dtstr.NewRow();
                    dr["rec_id"] = "0";
                    dr["vch_num"] = vch_num;
                    dr["vch_date"] = currdate;
                    dr["type"] = model[0].Col12;
                    dr["col1"] = model[0].Col49.Trim(); //bank id
                    dr["col2"] = model[0].SelectedItems2.FirstOrDefault();  //Nature of Transaction
                    dr["date2"] = sgen.Savedate(model[0].Col18, false);      //Forward Start Date
                    dr["date3"] = sgen.Savedate(model[0].Col19, false);      //Forward end Date
                    dr["date4"] = sgen.Savedate(model[0].Col21, false);      //Forward Grace End
                    dr["col11"] = model[0].Col22.Trim();    //Forward Amount
                    dr["col9"] = model[0].Col23.Trim();   //Spot Rate
                    dr["col8"] = model[0].Col24.Trim();   //Premium (+) / Discount (-)
                    //dr["col9"] = model[0].Col25.Trim(); //Forward Rate
                    dr["col10"] = model[0].Col27.Trim();   //Forward No.
                    dr["date5"] = sgen.Savedate(model[0].Col28, false);      //Forward Date
                    dr["col12"] = model[0].SelectedItems1.FirstOrDefault();      //Forward Date
                    dr["col13"] = model[0].Col30;    //Purpose
                    dr = getsave(currdate, dr, model);
                    dtstr.Rows.Add(dr);
                    bool Result = sgen.Update_data(userCode, dtstr, model[0].Col10.Trim(), tmodel.Col8, isedit);
                    if (Result == true)
                    {
                        if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                        {
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                        {
                            try
                            {
                                model = newret(model);
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                            }
                            catch (Exception ex) { }
                        }
                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col16 = tm.Col16,
                            Col17 = "",
                            Col1 = "",
                            Col18 = "",
                            Col9 = tm.Col9,
                            Col10 = tm.Col10,
                            Col11 = tm.Col11,
                            Col12 = tm.Col12,
                            Col13 = tm.Col13,
                            Col14 = tm.Col14,
                            Col15 = tm.Col15,
                            Col100 = "Save & New",
                            TList1 = mod1,
                            TList2 = mod2,
                            SelectedItems1 = new string[] { "" },
                            SelectedItems2 = new string[] { "" },
                        });
                    }
                    else
                    {
                        ViewBag.scripCall = "showmsgJS(3, 'Record Not Saved', 0);";
                    }
                END:;
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region return update to client
        public ActionResult ret_up()
        {
            FillMst();
            chkRef();
            ViewBag.vnew = "";
            ViewBag.vedit = "";
            ViewBag.vsave = "disabled='disabled'";
            ViewBag.scripCall = "disableForm();";
            List<Tmodelmain> model = new List<Tmodelmain>();
            Tmodelmain tm1 = new Tmodelmain();
            mid_mst = EncryptDecrypt.Decrypt(Request.QueryString["mid"]);
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            if (MyGuid.Trim().Equals("40004.1"))
            {
                tm1.Col9 = "MARKETING MATERIAL";
                tm1.Col10 = "file_tab";
                tm1.Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
                tm1.Col12 = "VMM"; // VASTU MARKETING MATERIAL
                tm1.Col13 = "Save";
            }
            if (MyGuid.Trim().Equals("40004.2"))
            {
                tm1.Col9 = "COMPANY DOCUMENT";
                tm1.Col10 = "file_tab";
                tm1.Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
                tm1.Col12 = "VCD"; // VASTU COMPANY DOC
                tm1.Col13 = "Save";
            }
            DataTable dtb = (DataTable)sgen.GetSession(MyGuid, "URIGHTS");
            try
            {
                dtb = dtb.Select("m_id='" + tm1.Col14 + "'").CopyToDataTable();
                if (dtb.Rows.Count > 0)
                {
                    tm1.Col30 = dtb.Rows[0]["btnnew"].ToString();
                    tm1.Col31 = dtb.Rows[0]["btnedit"].ToString();
                    tm1.Col32 = dtb.Rows[0]["btnview"].ToString();
                }
            }
            catch (Exception ex) { }
            tm1.Col14 = mid_mst.Trim();
            tm1.Col15 = MyGuid.Trim();
            tm1.Col16 = "Choose File";
            sgen.SetSession(MyGuid, "comp_doc", tm1.Col12);
            model.Add(tm1);
            return View(model);
        }
        [HttpPost]
        public ActionResult ret_up(List<Tmodelmain> model, string command, HttpPostedFileBase upd1)
        {
            try
            {
                FillMst();
                var tm = model.FirstOrDefault();
                if (command == "New")
                {
                    if (model[0].Col30 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for new entry, please contact your admin', 2);";
                        return View(model);
                    }
                    sgen.SetSession(MyGuid, "EDMODE", "N");
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.scripCall = "enableForm();";
                    mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                    vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                    model[0].Col18 = vch_num;
                    model[0].Col13 = "Save";
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    if (model[0].Col31 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for edit entries, please contact your admin', 2);disableForm();";
                        return View(model);
                    }
                    if (sgen.GetSession(MyGuid, "delid") != null) { btnval = "FDEL"; }
                    else if (sgen.GetSession(MyGuid, "btnval") != null) btnval = sgen.GetSession(MyGuid, "btnval").ToString();
                    model = CallbackFun(btnval, "N", "comp_doc", "Vastu", model);
                    if (btnval == "FDEL")
                    {
                        ViewBag.vnew = "";
                        ViewBag.vedit = "";
                        ViewBag.vsave = "disabled='disabled'";
                        ViewBag.scripCall = "showmsgJS(1, 'File Deleted Permanently, Press New to create a new file', 1);disableForm();";
                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col9 = tm.Col9,
                            Col10 = tm.Col10,
                            Col11 = tm.Col11,
                            Col12 = tm.Col12,
                            Col13 = "Save",
                            Col14 = tm.Col14,
                            Col15 = tm.Col15,
                        });
                    }
                    else
                    {
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                    }
                }
                else if (command == "Save" || command == "Update")
                {
                    if (model[0].Col30 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for save , please contact your admin', 2);";
                        return View(model);
                    }
                    var tmodel = model.FirstOrDefault();
                    string currdate = sgen.server_datetime(userCode);
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        isedit = true;
                        vch_num = model[0].Col18;
                    }
                    else
                    {
                        isedit = false;
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        model[0].Col18 = vch_num;
                    }
                    //DataTable dataTable = sgen.getdata(userCode, "select  * from " + model[0].Col10.Trim() + "  where  1=2");
                    DataTable dataTable = cmd_Fun.GetStructure(userCode, model[0].Col10);
                    string serverpath = Server.MapPath("~/Uploads/" + cg_com_name.Replace(" ", "") + "/");
                    try
                    {
                        HttpPostedFileBase file1 = upd1;
                        ctype1 = file1.ContentType;
                        fileName1 = file1.FileName;
                        path1 = clientid_mst + unitid_mst + userid_mst + currdate + "_" + fileName1;
                        encpath1 = sgen.Convert_Stringto64(path1).ToString();
                        finalpath1 = serverpath + encpath1;
                        file1.SaveAs(finalpath1);
                    }
                    catch (Exception ex) { }
                    filesave(model, currdate, dataTable, fileName1, encpath1, "DOC", ctype1, model[0].Col20);
                    ok = sgen.Update_data(userCode, dataTable, model[0].Col10, model[0].Col8, isedit);
                    if (ok)
                    {
                        ViewBag.vnew = "";
                        ViewBag.vedit = "";
                        ViewBag.vsave = "disabled='disabled'";
                        //ViewBag.scripCall = "showmsgJS(1, 'Data Saved Successfully', 1);disableForm();";
                        ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col9 = tmodel.Col9,
                            Col10 = tmodel.Col10,
                            Col11 = tmodel.Col11,
                            Col12 = tmodel.Col12,
                            Col13 = "Save",
                            Col14 = tmodel.Col14,
                            Col15 = tmodel.Col15,
                        });
                    }
                    else { ViewBag.scripCall = "showmsgJS(1, 'Something Went Wrong, Data Not Saved', 0);"; }
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region Create Lead
        public ActionResult lead(string mid)
        {
            FillMst();
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            sgen.SetSession(MyGuid, "EDMODE", "N");
            List<SelectListItem> md1 = new List<SelectListItem>();
            model[0].SelectedItems1 = new string[] { "" };
            model[0].SelectedItems2 = new string[] { "" };
            model[0].SelectedItems3 = new string[] { "" };
            model[0].SelectedItems4 = new string[] { "" };
            model[0].SelectedItems5 = new string[] { "" };
            model[0].SelectedItems6 = new string[] { "" };
            model[0].SelectedItems7 = new string[] { "" };
            model[0].SelectedItems8 = new string[] { "" };
            model[0].SelectedItems9 = new string[] { "" };
            model[0].SelectedItems10 = new string[] { "" };
            model[0].SelectedItems11 = new string[] { "" };
            model[0].SelectedItems12 = new string[] { "" };
            model[0].SelectedItems13 = new string[] { "" };
            model[0].SelectedItems14 = new string[] { "" };
            model[0].SelectedItems15 = new string[] { "" };
            //model[0].SelectedItems16 = new string[] { "" };
            TempData[MyGuid + "_TList1"] = model[0].TList1 = md1;
            TempData[MyGuid + "_TList2"] = model[0].TList2 = md1;
            TempData[MyGuid + "_TList3"] = model[0].TList3 = md1;
            TempData[MyGuid + "_TList4"] = model[0].TList4 = md1;
            TempData[MyGuid + "_TList5"] = model[0].TList5 = md1;
            TempData[MyGuid + "_TList6"] = model[0].TList6 = md1;
            TempData[MyGuid + "_TList7"] = model[0].TList7 = md1;
            TempData[MyGuid + "_TList8"] = model[0].TList8 = md1;
            TempData[MyGuid + "_TList9"] = model[0].TList9 = md1;
            TempData[MyGuid + "_TList10"] = model[0].TList10 = md1;
            TempData[MyGuid + "_TList11"] = model[0].TList11 = md1;
            TempData[MyGuid + "_TList12"] = model[0].TList12 = md1;
            TempData[MyGuid + "_TList13"] = model[0].TList13 = md1;
            TempData[MyGuid + "_TList14"] = model[0].TList14 = md1;
            TempData[MyGuid + "_TList15"] = model[0].TList15 = md1;
            //TempData[MyGuid + "_TList16"] = model[0].TList16 = md1;
            model[0].Col9 = "CREATE LEAD";
            model[0].Col10 = "lead_master";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "LED";
            mq = "select param2 from controls where param5='LEAD MASTER' and type='VDC' and upper(param3)='GEO LOCATION'";
            mq = sgen.seekval(userCode, mq, "param2");
            model[0].Col50 = mq;
            if (mq.Trim().Equals("Y"))
            {
                if (model[0].Col76 == null) ViewBag.scripCall = ViewBag.scripCall + "initialize(28.477450,77.034138);";
                else ViewBag.scripCall = ViewBag.scripCall + "initialize(" + model[0].Col76 + ");";
            }
            if (Request.QueryString["fstr"] != null)
            {
                model[0].Col16 = EncryptDecrypt.Decrypt(Request.QueryString["fstr"].ToString()); ;
                sgen.SetSession(MyGuid, "SSEEKVAL", model[0].Col16);
                if (model[0].Col16.Length == 18)
                {
                    CallbackFun("40005.3", "N", "lead", "vastu", model);
                }
                else
                {
                    CallbackFun("EDIT", "Y", "lead", "vastu", model);
                }
                ViewBag.vnew = "disabled='disabled'";
                ViewBag.vedit = "disabled='disabled'";
                ViewBag.vsave = "";
                ViewBag.scripCall = "enableForm();";
            }
            DataTable dtb = (DataTable)sgen.GetSession(MyGuid, "URIGHTS");
            try
            {
                dtb = dtb.Select("m_id='" + model[0].Col14 + "'").CopyToDataTable();
                if (dtb.Rows.Count > 0)
                {
                    model[0].Col55 = dtb.Rows[0]["btnnew"].ToString();
                    model[0].Col56 = dtb.Rows[0]["btnedit"].ToString();
                    model[0].Col57 = dtb.Rows[0]["btnview"].ToString();
                    // model[0].Col33 = dtb.Rows[0]["btnextend"].ToString();
                }
            }
            catch (Exception ex) { }
            return View(model);
        }
        public List<Tmodelmain> new_lead(List<Tmodelmain> model)
        {
            try
            {
                model = getnew(model);
                string defval = "";
                model[0].Col17 = sgen.server_datetime_local(userCode);
                var tm = model.FirstOrDefault();
                List<SelectListItem> mod9 = new List<SelectListItem>();
                List<SelectListItem> mod11 = new List<SelectListItem>();
                List<SelectListItem> mod15, mod14, mod13, mod12, mod10, mod8, mod7, mod6, mod5, mod4, mod3, mod2, mod1 = new List<SelectListItem>();
                #region 
                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.username_mod(userCode, m_module3);     // Lead Owner
                model[0].SelectedItems1 = new string[] { "" };

                defval = "";
                TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2 = cmd_Fun.leadsource(userCode, unitid_mst, out defval);     //Lead source
                model[0].SelectedItems2 = new string[] { defval };

                defval = "";
                TempData[MyGuid + "_TList3"] = model[0].TList3 = mod3 = cmd_Fun.leadstatus(userCode, unitid_mst, out defval); //Lead status
                model[0].SelectedItems3 = new string[] { sgen.getstring(userCode, "SELECT master_id from master_setting where type='LST' and SECTION_STRENGTH='Y'") };

                TempData[MyGuid + "_TList4"] = model[0].TList4 = mod4 = cmd_Fun.username_mod(userCode, m_module3);     //Contact
                model[0].SelectedItems4 = new string[] { "" };

                defval = "";
                TempData[MyGuid + "_TList5"] = model[0].TList5 = mod5 = cmd_Fun.product(userCode, unitid_mst, out defval);    // Product
                model[0].SelectedItems5 = new string[] { defval };

                defval = "";
                TempData[MyGuid + "_TList7"] = model[0].TList7 = mod7 = cmd_Fun.businesstype(userCode, unitid_mst, out defval);   //Business Type
                model[0].SelectedItems7 = new string[] { defval };

                TempData[MyGuid + "_TList8"] = model[0].TList8 = mod8 = cmd_Fun.clienttype(userCode, unitid_mst, out defval);     //acc type
                model[0].SelectedItems8 = new string[] { defval };

                mod9.Add(new SelectListItem { Text = "Domestic", Value = "001" });
                mod9.Add(new SelectListItem { Text = "Overseas", Value = "002" });
                TempData[MyGuid + "_TList9"] = model[0].TList9 = mod9;
                model[0].SelectedItems9 = new string[] { "001" };
                TempData[MyGuid + "_TList10"] = model[0].TList10 = mod10 = cmd_Fun.nextaction(userCode, unitid_mst);  // next followup action

                mod11.Add(new SelectListItem { Text = "Male", Value = "Male" });
                mod11.Add(new SelectListItem { Text = "Female", Value = "Female" });
                TempData[MyGuid + "_TList11"] = model[0].TList11 = mod11;
                model[0].SelectedItems11 = new string[] { "" };

                TempData[MyGuid + "_TList12"] = model[0].TList12 = mod12 = cmd_Fun.leadrating(userCode, unitid_mst);  // lead rating
                TempData[MyGuid + "_TList13"] = model[0].TList13 = mod13 = cmd_Fun.leadVenue(userCode, unitid_mst);  // VENUE
                TempData[MyGuid + "_TList14"] = model[0].TList14 = mod14 = cmd_Fun.leadMenu(userCode, unitid_mst);  // MENU
                TempData[MyGuid + "_TList15"] = model[0].TList15 = mod15 = cmd_Fun.leadtof(userCode, unitid_mst);  // MENU
                //TempData[MyGuid + "_TList16"] = model[0].TList15 = mod15 = cmd_Fun.leadFreq(userCode, unitid_mst);  // freq

                model[0].SelectedItems13 = new string[] { "" };
                model[0].SelectedItems14 = new string[] { "" };
                model[0].SelectedItems15 = new string[] { "" };
                //model[0].SelectedItems16 = new string[] { "" };

                #endregion
                //model[0].Col37 = "01/01/1900";
                //model[0].Col38 = "01/01/1900";
                if (model[0].Col50 == "Y")
                {
                    if (tm.Col76 == null) ViewBag.scripCall = ViewBag.scripCall + "initialize(28.477450,77.034138);";
                    else ViewBag.scripCall = ViewBag.scripCall + "initialize(" + tm.Col76 + ");";
                }
            }
            catch (Exception ex)
            { ViewBag.scripCall = "showmsgJS(1, '" + ex.Message.ToString().Replace("'", "") + "', 1);"; }
            return model;
        }
        [HttpPost]
        public ActionResult lead(List<Tmodelmain> model, string command, string mid, HttpPostedFileBase[] upd1)
        {
            try
            {
                FillMst(model[0].Col15);
                #region
                var tm = model.FirstOrDefault();
                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                List<SelectListItem> mod2 = (List<SelectListItem>)TempData[MyGuid + "_TList2"];
                List<SelectListItem> mod3 = (List<SelectListItem>)TempData[MyGuid + "_TList3"];
                List<SelectListItem> mod4 = (List<SelectListItem>)TempData[MyGuid + "_TList4"];
                List<SelectListItem> mod5 = (List<SelectListItem>)TempData[MyGuid + "_TList5"];
                List<SelectListItem> mod6 = (List<SelectListItem>)TempData[MyGuid + "_TList6"];
                List<SelectListItem> mod7 = (List<SelectListItem>)TempData[MyGuid + "_TList7"];
                List<SelectListItem> mod8 = (List<SelectListItem>)TempData[MyGuid + "_TList8"];
                List<SelectListItem> mod9 = (List<SelectListItem>)TempData[MyGuid + "_TList9"];
                List<SelectListItem> mod10 = (List<SelectListItem>)TempData[MyGuid + "_TList10"];
                List<SelectListItem> mod11 = (List<SelectListItem>)TempData[MyGuid + "_TList11"];
                List<SelectListItem> mod12 = (List<SelectListItem>)TempData[MyGuid + "_TList12"];
                List<SelectListItem> mod13 = (List<SelectListItem>)TempData[MyGuid + "_TList13"];
                List<SelectListItem> mod14 = (List<SelectListItem>)TempData[MyGuid + "_TList14"];
                List<SelectListItem> mod15 = (List<SelectListItem>)TempData[MyGuid + "_TList15"];
                List<SelectListItem> mod16 = (List<SelectListItem>)TempData[MyGuid + "_TList16"];
                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
                TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2;
                TempData[MyGuid + "_TList3"] = model[0].TList3 = mod3;
                TempData[MyGuid + "_TList4"] = model[0].TList4 = mod4;
                TempData[MyGuid + "_TList5"] = model[0].TList5 = mod5;
                TempData[MyGuid + "_TList6"] = model[0].TList6 = mod6;
                TempData[MyGuid + "_TList7"] = model[0].TList7 = mod7;
                TempData[MyGuid + "_TList8"] = model[0].TList8 = mod8;
                TempData[MyGuid + "_TList9"] = model[0].TList9 = mod9;
                TempData[MyGuid + "_TList10"] = model[0].TList10 = mod10;
                TempData[MyGuid + "_TList11"] = model[0].TList11 = mod11;
                TempData[MyGuid + "_TList12"] = model[0].TList12 = mod12;
                TempData[MyGuid + "_TList13"] = model[0].TList13 = mod13;
                TempData[MyGuid + "_TList14"] = model[0].TList14 = mod14;
                TempData[MyGuid + "_TList15"] = model[0].TList15 = mod15;
                TempData[MyGuid + "_TList16"] = model[0].TList16 = mod16;
                if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                if (model[0].SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
                if (model[0].SelectedItems3 == null) model[0].SelectedItems3 = new string[] { "" };
                if (model[0].SelectedItems4 == null) model[0].SelectedItems4 = new string[] { "" };
                if (model[0].SelectedItems5 == null) model[0].SelectedItems5 = new string[] { "" };
                if (model[0].SelectedItems6 == null) model[0].SelectedItems6 = new string[] { "" };
                if (model[0].SelectedItems7 == null) model[0].SelectedItems7 = new string[] { "" };
                if (model[0].SelectedItems8 == null) model[0].SelectedItems8 = new string[] { "" };
                if (model[0].SelectedItems9 == null) model[0].SelectedItems9 = new string[] { "" };
                if (model[0].SelectedItems10 == null) model[0].SelectedItems10 = new string[] { "" };
                if (model[0].SelectedItems11 == null) model[0].SelectedItems11 = new string[] { "" };
                if (model[0].SelectedItems12 == null) model[0].SelectedItems12 = new string[] { "" };
                if (model[0].SelectedItems13 == null) model[0].SelectedItems13 = new string[] { "" };
                if (model[0].SelectedItems14 == null) model[0].SelectedItems14 = new string[] { "" };
                if (model[0].SelectedItems15 == null) model[0].SelectedItems15 = new string[] { "" };
                if (model[0].SelectedItems16 == null) model[0].SelectedItems16 = new string[] { "" };
                #endregion
                if (command == "New")
                {
                    if (model[0].Col55 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for new lead, please contact your admin', 2);";
                        return View(model);
                    }
                    model = new_lead(model);
                }
                else if (command == "contact")
                {
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                    ViewBag.scripCall = "enableForm();";
                    mq = "select cp.panno as cust_id, cp.vch_num,cp.c_name,cs.alpha_2 as country_id,cs.country_name,cs.state_gst_code as state_id ,cs.state_name," +
                                    "cp.city,cs.city_name , cp.pincode, cp.addr,cp.cpname as cp_fname, cp.cp_mname,cp_Lname ,cp.cpdept ,cp.cpdesig," +
                                    "cp.cpemail,cp.cpcont,cp.cpaltcont,cp.cplandno,cp.cpaddr," +
                                    "to_char(cp.dob, '" + sgen.Getsqldateformat() + "') as dob," +
                                    "to_char(cp.doa, '" + sgen.Getsqldateformat() + "')" +
                                    " as doa from clients_mst cp left join country_state cs on cs.rec_id = cp.city" +
                                    " where cp.client_id = '" + clientid_mst + "' and  cp.client_unit_id='" + unitid_mst + "' and  cp.vch_num ='" + model[0].SelectedItems6.FirstOrDefault() + "'" +
                                    " and  cp.type='" + model[0].Col43 + "'  and substr(cp.ref_code,0,3)='" + model[0].Col44 + "' ";
                    DataTable dtt = sgen.getdata(userCode, mq);
                    if (dtt.Rows.Count > 0)
                    {
                        model[0].Col28 = dtt.Rows[0]["cp_fname"].ToString();
                        model[0].Col29 = dtt.Rows[0]["cp_mname"].ToString();
                        model[0].Col30 = dtt.Rows[0]["cp_Lname"].ToString();
                        model[0].Col31 = dtt.Rows[0]["cpdesig"].ToString();
                        model[0].Col32 = dtt.Rows[0]["cpdept"].ToString();
                        model[0].Col33 = dtt.Rows[0]["cpemail"].ToString();
                        model[0].Col34 = dtt.Rows[0]["cpcont"].ToString();
                        model[0].Col35 = dtt.Rows[0]["cpaltcont"].ToString();
                        model[0].Col36 = dtt.Rows[0]["cplandno"].ToString();
                        model[0].Col37 = dtt.Rows[0]["dob"].ToString();
                        model[0].Col38 = dtt.Rows[0]["doa"].ToString();
                        model[0].Col39 = dtt.Rows[0]["cpaddr"].ToString();
                    }
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    if ((model[0].Col56 == "N") && (btnval == "EDIT"))
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for edit lead, please contact your admin', 2);disableForm();";
                        return View(model);
                    }
                    if (sgen.GetSession(MyGuid, "delid") != null) { btnval = "FDEL"; sgen.SetSession(MyGuid, "btnval", btnval); }
                    else if (sgen.GetSession(MyGuid, "btnval") != null) btnval = sgen.GetSession(MyGuid, "btnval").ToString();
                    model = StartCallback(model);
                    if (model[0].Col50 == "Y")
                    {
                        if (tm.Col76 == null) ViewBag.scripCall = ViewBag.scripCall + "initialize(28.477450,77.034138);";
                        else ViewBag.scripCall = ViewBag.scripCall + "initialize(" + tm.Col76 + ");";
                    }
                    //if (btnval == "FDEL")
                    //{
                    //    ViewBag.vnew = "";
                    //    ViewBag.vedit = "";
                    //    ViewBag.vsave = "disabled='disabled'";
                    //    ViewBag.vsavenew = "disabled='disabled'";
                    //    ViewBag.scripCall = "showmsgJS(1, 'File Deleted Permanently, Press New to create a new file', 1);disableForm();";
                    //    model = new List<Tmodelmain>();
                    //    model.Add(new Tmodelmain
                    //    {
                    //        Col9 = tm.Col9,
                    //        Col10 = tm.Col10,
                    //        Col11 = tm.Col11,
                    //        Col12 = tm.Col12,
                    //        Col13 = "Save",
                    //        Col100 = "Save & New",
                    //        Col121 = "S",
                    //        Col122 = "<u>S</u>ave",
                    //        Col123 = "Save & Ne<u>w</u>",
                    //        Col14 = tm.Col14,
                    //        Col15 = tm.Col15,
                    //        TList1 = mod1,
                    //        TList2 = mod2,
                    //        TList3 = mod3,
                    //        TList4 = mod4,
                    //        TList5 = mod5,
                    //        TList6 = mod6,
                    //        TList7 = mod7,
                    //        TList8 = mod8,
                    //        TList9 = mod9,
                    //        SelectedItems1 = new string[] { "" },
                    //        SelectedItems2 = new string[] { "" },
                    //        SelectedItems3 = new string[] { "" },
                    //        SelectedItems4 = new string[] { "" },
                    //        SelectedItems5 = new string[] { "" },
                    //        SelectedItems6 = new string[] { "" },
                    //        SelectedItems7 = new string[] { "" },
                    //        SelectedItems8 = new string[] { "" },
                    //        SelectedItems9 = new string[] { "" },
                    //    });
                    //}
                }
                else if (command.Trim() == "Save" || command.Trim() == "Update" || command == "Save & New" || command == "Update & New")
                {
                    string sendmail = "N", cancel = "N", editsub = "", ismail = "", iswhatapp = "";
                    mq2 = "";
                    int tot = 1, attlen = 0;
                    if (model[0].Col55 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for save lead , please contact your admin', 2);";
                        return View(model);
                    }
                    var tmodel = model.FirstOrDefault();
                    string currdate = sgen.server_datetime(userCode);
                    string cond = "", found = "";
                    DataTable dtstr = new DataTable();
                    //dtstr = sgen.getdata(userCode, "select * from " + model[0].Col10 + " WHERE 1=2");
                    dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        isedit = true;
                        vch_num = model[0].Col16;
                        mq1 = " and cust_id<>'" + tmodel.Col18.Trim() + "'";
                    }
                    else
                    {
                        isedit = false;
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        model[0].Col16 = vch_num;
                        mq1 = "";
                        sendmail = "Y";
                    }
                    if (model[0].Col19 != null)
                    {
                        cond = sgen.seekval(userCode, "select cust_name from " + model[0].Col10.Trim() + " where " +
                            "type in ('" + model[0].Col12.Trim() + "','DD" + model[0].Col12 + "')" + model[0].Col11 + " " +
                              " and  upper(cust_name)='" + model[0].Col19.Trim().ToString().ToUpper() + "' " + mq1 + "", "cust_name");
                        if (!cond.Equals("0"))
                        {
                            sgen.SetSession(MyGuid, "Rupd", upd1);
                            ViewBag.scripCall = "showmsgJS(2, 'Account Name Already Exists. Do You Want To Continue', 1);";
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            ModelState.Clear();
                            return View(model);
                        }
                    }
                    #region
                    DataRow dr = dtstr.NewRow();
                    dr["rec_id"] = "0";
                    dr["type"] = model[0].Col12;
                    dr["vch_num"] = vch_num.Trim();
                    dr["vch_date"] = sgen.Savedate(model[0].Col17, false);
                    dr["cust_id"] = model[0].Col18;      //Party 
                    dr["cust_name"] = model[0].Col19;      //Party name
                    if ((model[0].Col18 == null) || (model[0].Col18 == "0"))
                    { dr["cust_name"] = model[0].Col58; }
                    dr["ld_owner"] = model[0].SelectedItems1.FirstOrDefault(); //lead owner
                    dr["ld_source"] = model[0].SelectedItems2.FirstOrDefault(); //lead source
                    dr["ld_status"] = model[0].SelectedItems3.FirstOrDefault(); //lead status
                    dr["ot_source"] = model[0].Col20;//Other Lead Source
                    dr["remark"] = model[0].Col21;//Remark
                    dr["ct_person"] = model[0].SelectedItems4.FirstOrDefault();// contact Person
                    dr["ld_product"] = string.Join(",", model[0].SelectedItems5);// product
                    dr["bsn_type"] = string.Join(",", model[0].SelectedItems7);// Business type                        
                    dr["refered_by"] = model[0].Col22;// refered_by
                    dr["country"] = model[0].Col40;// country id
                    dr["state"] = model[0].Col41;// state id
                    dr["city"] = model[0].Col42;// rec id
                    dr["pincode"] = model[0].Col26;// pincode
                    dr["address"] = model[0].Col27;// address
                    dr["cp_fname"] = model[0].Col28;// contact Person first name
                    dr["cp_mname"] = model[0].Col29;// contact Person middle name
                    dr["cp_lname"] = model[0].Col30;// contact Person last name
                    dr["desig"] = model[0].Col31;// contact Person Designation
                    dr["dept"] = model[0].Col32;// contact Person departmnet
                    dr["emailid"] = model[0].Col33;// contact Person Email
                    dr["mobile_no"] = model[0].Col34;// contact Person moblie
                    dr["contact_no"] = model[0].Col35;// contact Person cont
                    dr["al_contact"] = model[0].Col36;// contact Person alternate no
                    dr["dob"] = sgen.Make_date_S(model[0].Col37);// contact Person dob
                    dr["doa"] = sgen.Make_date_S(model[0].Col38);// contact Person doa
                    dr["cp_add"] = model[0].Col39;// contact Person address
                    dr["ref_type"] = model[0].Col43;//  ref type
                    dr["cp_id"] = model[0].SelectedItems6.FirstOrDefault();// contact Person ref id
                    dr["client_type"] = model[0].SelectedItems8.FirstOrDefault();// account type
                    dr["cp_ref_type"] = model[0].Col44;//  ref type
                    dr["lead_con"] = "N";//  ref type
                    dr["google_add"] = model[0].Col77;
                    dr["latlong"] = model[0].Col76;
                    dr["cpcontother"] = model[0].Col78;//other contact no
                    dr["cpemailother"] = model[0].Col79;//other email id
                    dr["pr_loc"] = model[0].Col80;//pre location
                    dr["budget"] = model[0].Col81;//budget
                    dr["funding"] = model[0].Col82;//funding
                    dr["dof"] = sgen.Make_date_S(model[0].Col83);//dateoffun
                    dr["pax"] = model[0].Col84;//noofpax
                    dr["ploc"] = model[0].SelectedItems9.FirstOrDefault();//ploc   
                    dr["cp_gender"] = model[0].SelectedItems11.FirstOrDefault();//gender   
                    dr["ld_rating"] = model[0].SelectedItems12.FirstOrDefault();//lead rating   
                    dr["ld_venue"] = model[0].SelectedItems13.FirstOrDefault();//leadvenue
                    dr["ld_menu"] = model[0].SelectedItems14.FirstOrDefault();//leadmenu
                    dr["tof"] = model[0].SelectedItems15.FirstOrDefault();//leadtof
                    //dr["freq"] = model[0].SelectedItems16.FirstOrDefault();//leadfreq
                    dr = getsave(currdate, dr, model, isedit);
                    dtstr.Rows.Add(dr);
                    #endregion
                    //  bool Result = sgen.Update_data(userCode, dtstr, model[0].Col10.Trim(), tmodel.Col8, isedit);
                    bool Result = sgen.Update_data_fast1(userCode, dtstr, model[0].Col10.Trim(), tmodel.Col8, isedit);
                    if (Result == true)
                    {
                        #region Follow up
                        if ((model[0].Col53 != "") && (model[0].Col53 != null))
                        {
                            dtstr = new DataTable();
                            dtstr = cmd_Fun.GetStructure(userCode, "enx_tab2");
                            mq = "select max(to_number(vch_num)) as auto_genid from enx_tab2 where type='VFC' " + model[0].Col11 + "  ";
                            vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                            isedit = false;
                            #region dtstr
                            dr = dtstr.NewRow();
                            dr["rec_id"] = "0";
                            dr["vch_num"] = vch_num.Trim();
                            dr["vch_date"] = currdate;
                            dr["type"] = "VFC";
                            dr["col1"] = model[0].Col53;

                            dr["col3"] = userid_mst;
                            dr["date1"] = currdate;
                            dr["date2"] = sgen.Make_date_S(model[0].Col52);
                            dr["col2"] = model[0].Col16; // lead id
                            dr["col5"] = model[0].SelectedItems4.FirstOrDefault(); // assg to
                            dr["col6"] = model[0].SelectedItems3.FirstOrDefault();// lead status 
                            dr["col7"] = model[0].SelectedItems10.FirstOrDefault();// next action
                            dr["col12"] = "N";


                            dr["ent_by"] = userid_mst;
                            dr["ent_date"] = currdate;
                            dr["client_id"] = clientid_mst;
                            dr["client_unit_id"] = unitid_mst;
                            dr["edit_by"] = "-";
                            dr["edit_date"] = currdate;

                            dtstr.Rows.Add(dr);
                            #endregion
                            ok = sgen.Update_data(userCode, dtstr, "enx_tab2", model[0].Col8, isedit);
                        }
                        #endregion
                        #region attachment
                        DataTable dtfile = new DataTable();
                        dtfile = cmd_Fun.GetStructure(userCode, "file_tab");
                        string serverpath = Server.MapPath("~/Uploads/" + cg_com_name.Replace(" ", "") + "/");
                        try
                        {

                            HttpPostedFileBase[] file1 = upd1;
                            for (Int32 i = 0; i < upd1.Length; i++)
                            {
                                fileName1 = "";
                                ctype1 = upd1[i].ContentType;
                                fileName1 = upd1[i].FileName;
                                path1 = clientid_mst + unitid_mst + userid_mst + currdate + "_" + fileName1;
                                encpath1 = sgen.Convert_Stringto64(path1).ToString();
                                finalpath1 = serverpath + encpath1;
                                upd1[i].SaveAs(finalpath1);
                                if (upd1 != null && fileName1 != null && fileName1 != "0" && fileName1 != "")
                                {
                                    filesave(model, currdate, dtfile, fileName1, encpath1, "RMK", ctype1, model[0].Col46, model[0].Col47, vch_num, model[0].Col18);
                                }

                            }

                            if (upd1 != null && fileName1 != null && fileName1 != "0" && fileName1 != "")
                            {

                                if (model[0].Col49 == null)
                                {
                                    res = sgen.Update_data(userCode, dtfile, "file_tab", "", false);
                                }
                                else
                                {
                                    res = sgen.Update_data(userCode, dtfile, "file_tab", model[0].Col49, isedit);
                                }
                                if (!res) { ViewBag.scripCall = "showmsgJS(1, 'Something Went Wrong, File Not Save', 0);"; return View(model); }
                            }
                        }
                        catch (Exception ex) { }

                        #endregion
                        vch_num = model[0].Col16;

                        if (sendmail.Trim().Equals("Y"))
                        {
                            IList<KCFile> fileCollection = new List<KCFile>();
                            string pg = "", uid = "", temp = "", extmail = "", sub = "", tfname = "", tfpath = "", tfctype = "";
                            pg = "MAIL OF CREATE LEAD";
                            mq1 = "001";

                            mq = "select m.userid,nvl(group_concat(u.email),'0') umail,m.extmail,m.temp,t.col4 msub,to_char(t.col23) mbody," +
                                 "nvl(f.file_name,'-') fname,nvl(f.file_path,'-') fpath,nvl(f.col2,'-') ctype from mail_config m " +
                                 "inner join user_details u on find_in_set(u.vch_num, m.userid)= 1 and u.type = 'CPR' " +
                                 "inner join enx_tab2 t on t.vch_num = m.temp and t.type = 'MTP' and t.col3 = '" + mq1 + "' and t.client_unit_id = m.client_unit_id " +
                                 "left join file_tab f on f.vch_num=t.vch_num and f.type=t.type and f.client_unit_id=t.client_unit_id and f.ref_code=t.col3 " +
                                 "where m.type = 'MLC' and m.client_unit_id = '" + unitid_mst + "' and m.status = 'Y' and m.module = '40000' and upper(m.pgmail)= '" + pg + "' " +
                                 "group by m.userid,m.extmail,m.temp,t.col4,to_char(t.col23),f.file_name,f.file_path,f.col2";
                            DataTable dtm = sgen.getdata(userCode, mq);
                            if (dtm.Rows.Count > 0)
                            {
                                uid = dtm.Rows[0]["umail"].ToString();
                                extmail = dtm.Rows[0]["extmail"].ToString();
                                temp = dtm.Rows[0]["mbody"].ToString();
                                sub = dtm.Rows[0]["msub"].ToString();
                                tfname = dtm.Rows[0]["fname"].ToString();
                                tfpath = dtm.Rows[0]["fpath"].ToString();
                                tfctype = dtm.Rows[0]["ctype"].ToString();

                                if (!tfname.Trim().Equals("-"))
                                {
                                    string fullpath = Server.MapPath("~/Uploads/" + cg_com_name.Replace(" ", "") + "/") + tfpath;
                                    FileStream tfstream = new FileStream(fullpath, FileMode.Open);
                                    KCFile file = new KCFile();
                                    file.FileName = tfname;
                                    file.ContentLength = tfstream.Length;
                                    file.ContentType = tfctype;
                                    file.InputStream = tfstream;
                                    fileCollection.Add(file);
                                }

                                List<Tmodel5> vars = new List<Tmodel5>();
                                vars.Add(new Tmodel5 { Col1 = "[fname]", Col2 = model[0].Col28 });
                                vars.Add(new Tmodel5 { Col1 = "[mname]", Col2 = model[0].Col29 });
                                vars.Add(new Tmodel5 { Col1 = "[lname]", Col2 = model[0].Col30 });
                                vars.Add(new Tmodel5 { Col1 = "[dov]", Col2 = sgen.Savedate(model[0].Col17, false) });

                                for (int a = 0; a < 2; a++)
                                {
                                    string mdata = "";
                                    if (a == 0) mdata = sub;
                                    else if (a == 1) mdata = temp;
                                    foreach (var t in vars)
                                    {
                                        //mdata = Regex.Replace(mdata, @"^" + t.Col1 + "$", t.Col2);                                        
                                        mdata = Regex.Replace(mdata, "[^-+<>/#!@$%*()_={};[]:',.?&^ 0-9 a-z A-Z]+", "");
                                        mdata = mdata.Replace(t.Col1, t.Col2);
                                    }
                                    if (a == 0) sub = mdata;
                                    else if (a == 1) temp = mdata;
                                }

                                string allmail = uid + "," + extmail + "," + model[0].Col33;
                                sgen.Send_mail_kcfile(userCode, clientid_mst, unitid_mst, allmail, "", "", temp, sub, userid_mst, fileCollection);
                            }
                        }

                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col10 = tm.Col10,
                            Col11 = tm.Col11,
                            Col12 = tm.Col12,
                            Col13 = "Save",
                            Col100 = "Save & New",
                            Col121 = "S",
                            Col122 = "<u>S</u>ave",
                            Col123 = "Save & Ne<u>w</u>",
                            Col14 = tm.Col14,
                            Col15 = tm.Col15,
                            Col9 = tm.Col9,
                            TList1 = mod1,
                            TList2 = mod2,
                            TList3 = mod3,
                            TList4 = mod4,
                            TList5 = mod5,
                            TList6 = mod6,
                            TList7 = mod7,
                            TList8 = mod8,
                            TList9 = mod9,
                            TList10 = mod10,
                            TList11 = mod11,
                            TList12 = mod12,
                            TList13 = mod13,
                            TList14 = mod14,
                            TList15 = mod15,
                            TList16 = mod16,
                            SelectedItems1 = new string[] { "" },
                            SelectedItems2 = new string[] { "" },
                            SelectedItems3 = new string[] { "" },
                            SelectedItems4 = new string[] { "" },
                            SelectedItems5 = new string[] { "" },
                            SelectedItems6 = new string[] { "" },
                            SelectedItems7 = new string[] { "" },
                            SelectedItems8 = new string[] { "" },
                            SelectedItems9 = new string[] { "" },
                            SelectedItems10 = new string[] { "" },
                            SelectedItems11 = new string[] { "" },
                            SelectedItems12 = new string[] { "" },
                            SelectedItems13 = new string[] { "" },
                            SelectedItems14 = new string[] { "" },
                            SelectedItems15 = new string[] { "" },
                            SelectedItems16 = new string[] { "" }
                        });
                        if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                        {
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.scripCall = "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                        {
                            try
                            {
                                model = new_lead(model);
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                            }
                            catch (Exception ex) { }
                        }
                    }
                    else
                    {
                        ViewBag.scripCall = "showmsgJS(1, 'Record Not Saved',0);";
                    }
                }
                else if (command.Trim() == "hfbtnyes")
                {
                    upd1 = (HttpPostedFileBase[])sgen.GetSession(MyGuid, "Rupd");
                    var tmodel = model.FirstOrDefault();
                    string currdate = sgen.server_datetime(userCode);
                    string cond = "", found = "";
                    DataTable dtstr = new DataTable();
                    //dtstr = sgen.getdata(userCode, "select * from " + model[0].Col10 + " WHERE 1=2");
                    dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        isedit = true;
                        vch_num = model[0].Col16;
                    }
                    else
                    {
                        isedit = false;
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        model[0].Col16 = vch_num;
                    }
                    DataRow dr = dtstr.NewRow();
                    dr["rec_id"] = "0";
                    dr["type"] = model[0].Col12;
                    dr["vch_num"] = vch_num.Trim();
                    dr["vch_date"] = sgen.Savedate(model[0].Col17, false);
                    dr["cust_id"] = model[0].Col18;      //Party 
                    dr["cust_name"] = model[0].Col19;      //Party name
                    dr["ld_owner"] = model[0].SelectedItems1.FirstOrDefault(); //lead owner
                    dr["ld_source"] = model[0].SelectedItems2.FirstOrDefault(); //lead source
                    dr["ld_status"] = model[0].SelectedItems3.FirstOrDefault(); //lead status
                    dr["ot_source"] = model[0].Col20;//Other Lead Source
                    dr["remark"] = model[0].Col21;//Remark
                    dr["ct_person"] = model[0].SelectedItems4.FirstOrDefault();// contact Person
                    dr["ld_product"] = string.Join(",", model[0].SelectedItems5);// product
                    dr["bsn_type"] = string.Join(",", model[0].SelectedItems7);// Business type                        
                    dr["refered_by"] = model[0].Col22;// contact Person
                    dr["country"] = model[0].Col40;// country id
                    dr["state"] = model[0].Col41;// state id
                    dr["city"] = model[0].Col42;// rec id
                    dr["pincode"] = model[0].Col26;// pincode
                    dr["address"] = model[0].Col27;// address
                    dr["cp_fname"] = model[0].Col28;// contact Person first name
                    dr["cp_mname"] = model[0].Col29;// contact Person middle name
                    dr["cp_lname"] = model[0].Col30;// contact Person last name
                    dr["desig"] = model[0].Col31;// contact Person Designation
                    dr["dept"] = model[0].Col32;// contact Person department
                    dr["emailid"] = model[0].Col33;// contact Person Email
                    dr["mobile_no"] = model[0].Col34;// contact Person moblie
                    dr["contact_no"] = model[0].Col35;// contact Person cont
                    dr["al_contact"] = model[0].Col36;// contact Person alternate no
                    dr["dob"] = sgen.Make_date_S(model[0].Col37);// contact Person dob
                    dr["doa"] = sgen.Make_date_S(model[0].Col38);// contact Person doa
                    dr["cp_add"] = model[0].Col39;// contact Person address
                    dr["ref_type"] = model[0].Col43;//  ref type
                    dr["cp_id"] = model[0].SelectedItems6.FirstOrDefault();// contact Person ref id
                    dr["cp_ref_type"] = model[0].Col44;//  ref type
                    dr["lead_con"] = "N";//  ref type
                    dr["google_add"] = model[0].Col77;
                    dr["latlong"] = model[0].Col76;
                    dr["cpcontother"] = model[0].Col78;//other contact no
                    dr["cpemailother"] = model[0].Col79;//other email id
                    dr["pr_loc"] = model[0].Col80;//pre location
                    dr["budget"] = model[0].Col81;//budget
                    dr["funding"] = model[0].Col82;//funding
                    dr["dof"] = sgen.Make_date_S(model[0].Col83);//dateoffun
                    dr["pax"] = model[0].Col84;//noofpax
                    dr["ploc"] = model[0].SelectedItems9.FirstOrDefault();//ploc  
                    dr["client_type"] = model[0].SelectedItems8.FirstOrDefault();// account type
                    dr["cp_gender"] = model[0].SelectedItems11.FirstOrDefault();//gender   
                    dr["ld_rating"] = model[0].SelectedItems12.FirstOrDefault();//lead rating   
                    dr["ld_venue"] = model[0].SelectedItems13.FirstOrDefault();//leadvenue
                    dr["ld_menu"] = model[0].SelectedItems14.FirstOrDefault();//leadmenu
                    dr["tof"] = model[0].SelectedItems15.FirstOrDefault();//leadtof
                    dr["freq"] = model[0].SelectedItems16.FirstOrDefault();//leadfreq
                    dr = getsave(currdate, dr, model, isedit);
                    dtstr.Rows.Add(dr);
                    //  bool Result = sgen.Update_data(userCode, dtstr, model[0].Col10.Trim(), tmodel.Col8, isedit);
                    bool Result = sgen.Update_data_fast1(userCode, dtstr, model[0].Col10.Trim(), tmodel.Col8, isedit);
                    if (Result == true)
                    {
                        #region Follow up
                        if ((model[0].Col53 != "") && (model[0].Col53 != null))
                        {
                            dtstr = new DataTable();
                            dtstr = cmd_Fun.GetStructure(userCode, "enx_tab2");
                            mq = "select max(to_number(vch_num)) as auto_genid from enx_tab2 where type='VFC' " + model[0].Col11 + "  ";
                            vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                            isedit = false;
                            #region dtstr
                            dr = dtstr.NewRow();
                            dr["rec_id"] = "0";
                            dr["vch_num"] = vch_num.Trim();
                            dr["vch_date"] = currdate;
                            dr["type"] = "VFC";
                            dr["col1"] = model[0].Col53;

                            dr["col3"] = userid_mst;
                            dr["date1"] = currdate;
                            dr["date2"] = sgen.Make_date_S(model[0].Col52);
                            dr["col2"] = model[0].Col16; // lead id
                            dr["col5"] = model[0].SelectedItems4.FirstOrDefault(); // assg to
                            dr["col6"] = model[0].SelectedItems3.FirstOrDefault();// lead status 
                            dr["col7"] = model[0].SelectedItems10.FirstOrDefault();// next action
                            dr["col12"] = "N";


                            dr["ent_by"] = userid_mst;
                            dr["ent_date"] = currdate;
                            dr["client_id"] = clientid_mst;
                            dr["client_unit_id"] = unitid_mst;
                            dr["edit_by"] = "-";
                            dr["edit_date"] = currdate;

                            dtstr.Rows.Add(dr);
                            #endregion
                            ok = sgen.Update_data(userCode, dtstr, "enx_tab2", model[0].Col8, isedit);
                        }
                        #endregion
                        #region attachment
                        if (upd1 != null)
                        {
                            fileName1 = "";
                            DataTable dtfile = new DataTable();
                            dtfile = cmd_Fun.GetStructure(userCode, "file_tab");
                            string serverpath = Server.MapPath("~/Uploads/" + cg_com_name.Replace(" ", "") + "/");
                            try
                            {

                                HttpPostedFileBase[] file1 = upd1;
                                for (Int32 i = 0; i < upd1.Length; i++)
                                {
                                    fileName1 = "";
                                    ctype1 = upd1[i].ContentType;
                                    fileName1 = upd1[i].FileName;
                                    path1 = clientid_mst + unitid_mst + userid_mst + currdate + "_" + fileName1;
                                    encpath1 = sgen.Convert_Stringto64(path1).ToString();
                                    finalpath1 = serverpath + encpath1;
                                    upd1[i].SaveAs(finalpath1);
                                    if (upd1 != null && fileName1 != null && fileName1 != "0" && fileName1 != "")
                                    {
                                        filesave(model, currdate, dtfile, fileName1, encpath1, "RMK", ctype1, model[0].Col46, model[0].Col47, vch_num, model[0].Col18);
                                    }

                                }

                                if (upd1 != null && fileName1 != null && fileName1 != "0" && fileName1 != "")
                                {

                                    if (model[0].Col49 == null)
                                    {
                                        res = sgen.Update_data(userCode, dtfile, "file_tab", "", false);
                                    }
                                    else
                                    {
                                        res = sgen.Update_data(userCode, dtfile, "file_tab", model[0].Col49, isedit);
                                    }
                                    if (!res) { ViewBag.scripCall = "showmsgJS(1, 'Something Went Wrong, File Not Save', 0);"; return View(model); }
                                }
                            }
                            catch (Exception ex) { }
                        }
                        #endregion
                        vch_num = model[0].Col16;
                        ViewBag.vnew = "";
                        ViewBag.vedit = "";
                        ViewBag.vsave = "disabled='disabled'";
                        ViewBag.vsavenew = "disabled='disabled'";
                        ViewBag.scripCall = "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col10 = tm.Col10,
                            Col11 = tm.Col11,
                            Col12 = tm.Col12,
                            Col13 = "Save",
                            Col100 = "Save & New",
                            Col121 = "S",
                            Col122 = "<u>S</u>ave",
                            Col123 = "Save & Ne<u>w</u>",
                            Col135 = tm.Col135,
                            Col14 = tm.Col14,
                            Col15 = tm.Col15,
                            Col9 = tm.Col9,
                            TList1 = mod1,
                            TList2 = mod2,
                            TList3 = mod3,
                            TList4 = mod4,
                            TList5 = mod5,
                            TList6 = mod6,
                            TList7 = mod7,
                            TList8 = mod8,
                            TList9 = mod9,
                            TList10 = mod10,
                            TList11 = mod11,
                            TList12 = mod12,
                            TList13 = mod13,
                            TList14 = mod14,
                            TList15 = mod15,
                            TList16 = mod16,
                            SelectedItems1 = new string[] { "" },
                            SelectedItems2 = new string[] { "" },
                            SelectedItems3 = new string[] { "" },
                            SelectedItems4 = new string[] { "" },
                            SelectedItems5 = new string[] { "" },
                            SelectedItems6 = new string[] { "" },
                            SelectedItems7 = new string[] { "" },
                            SelectedItems8 = new string[] { "" },
                            SelectedItems9 = new string[] { "" },
                            SelectedItems10 = new string[] { "" },
                            SelectedItems11 = new string[] { "" },
                            SelectedItems12 = new string[] { "" },
                            SelectedItems13 = new string[] { "" },
                            SelectedItems14 = new string[] { "" },
                            SelectedItems15 = new string[] { "" },
                            SelectedItems16 = new string[] { "" }
                        });
                        command = model[0].Col135;
                        if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                        {
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.scripCall = "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                        {
                            try
                            {
                                model = new_lead(model);
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                            }
                            catch (Exception ex) { }
                        }
                    }
                    else
                    {
                        ViewBag.scripCall = "showmsgJS(1, 'Record Not Saved', 0);";
                    }
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion

        #region booking
        public ActionResult booking()
        {
            FillMst();
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            List<SelectListItem> md1 = new List<SelectListItem>();
            model[0].SelectedItems1 = new string[] { "" };
            model[0].SelectedItems2 = new string[] { "" };
            //model[0].SelectedItems3 = new string[] { "" };
            TempData[MyGuid + "_TList1"] = model[0].TList1 = md1;
            TempData[MyGuid + "_TList2"] = model[0].TList2 = md1;
            //TempData[MyGuid + "_TList3"] = model[0].TList3 = md1;
            model[0].Col9 = "BOOKING";
            model[0].Col10 = "func";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "BOK";
            ViewBag.divcancel = "style=display:none";
            ViewBag.divmail = "style=display:none";
            model[0].Files1 = new List<Files>();
            Files tm3 = new Files();
            tm3.FileName = "-";
            model[0].Files1.Add(tm3);
            DataTable dtb = (DataTable)sgen.GetSession(MyGuid, "URIGHTS");
            try
            {
                dtb = dtb.Select("m_id='" + model[0].Col14 + "'").CopyToDataTable();
                if (dtb.Rows.Count > 0)
                {
                    model[0].Col55 = dtb.Rows[0]["btnnew"].ToString();
                    model[0].Col56 = dtb.Rows[0]["btnedit"].ToString();
                    model[0].Col57 = dtb.Rows[0]["btnview"].ToString();
                    // model[0].Col33 = dtb.Rows[0]["btnextend"].ToString();
                }
            }
            catch (Exception ex) { }
            return View(model);
        }
        public List<Tmodelmain> new_booking(List<Tmodelmain> model)
        {
            try
            {
                model = getnew(model);
                ViewBag.divcancel = "style=display:none";
                ViewBag.divmail = "style=display:none";
                model[0].Col47 = sgen.server_datetime_local(userCode);
                var tm = model.FirstOrDefault();
                List<SelectListItem> mod3, mod2, mod1 = new List<SelectListItem>();
                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.leadMenu(userCode, unitid_mst);     // Lead Owner
                model[0].SelectedItems1 = new string[] { "" };
                TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2 = cmd_Fun.leadVenue(userCode, unitid_mst);     //Lead source
                model[0].SelectedItems2 = new string[] { "" };
                //TempData[MyGuid + "_TList3"] = model[0].TList3 = mod3 = cmd_Fun.leadFreq(userCode, unitid_mst);     //Lead source
                //model[0].SelectedItems3 = new string[] { "" };
            }
            catch (Exception ex)
            {
                ViewBag.scripCall = "showmsgJS(1, '" + ex.Message.ToString().Replace("'", "") + "', 1);";
            }
            return model;
        }
        [HttpPost]
        public ActionResult booking(List<Tmodelmain> model, string modelstr, string command)
        {
            sgen = new sgenFun(MyGuid);
            try
            {
                if (model[0].Files1 != null)
                {
                    for (int f = 0; f < model[0].Files1.Count; f++)
                    {
                        try
                        {
                            string base64String = "", fname = "", ftype = "";
                            var fi = model[0].Files1[f].PostedFile;
                            if (Request.Files["[0].Files1[" + f + "].PostedFile"] != null && Request.Files["[0].Files1[" + f + "].PostedFile"].ContentLength > 100)
                            {
                                fi = Request.Files["[0].Files1[" + f + "].PostedFile"];

                                Stream fs = fi.InputStream;
                                BinaryReader br = new BinaryReader(fs);
                                Byte[] bytes = br.ReadBytes((Int32)fs.Length);
                                base64String = Convert.ToBase64String(bytes, 0, bytes.Length);
                                fname = fi.FileName;
                                ftype = fi.ContentType;
                                model[0].Files1[f].FileBase64 = base64String;
                                model[0].Files1[f].FileName = fname;
                                model[0].Files1[f].ContentType = ftype;
                            }
                        }
                        catch (Exception ex)
                        {
                            sgen.SetSession(MyGuid, actionName + f, null);
                        }
                    }
                }
            }
            catch (Exception err) { }
            List<Tmodelmain> model1 = new List<Tmodelmain>();
            if (modelstr != null)
            {
                model1 = sgen.Make_Model(modelstr);
                model1[0].Files1 = model[0].Files1;
                model = model1;
            }
            try
            {
                FillMst(model[0].Col15);
                #region
                var tm = model.FirstOrDefault();
                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                List<SelectListItem> mod2 = (List<SelectListItem>)TempData[MyGuid + "_TList2"];
                //List<SelectListItem> mod3 = (List<SelectListItem>)TempData[MyGuid + "_TList3"];
                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
                TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2;
                //TempData[MyGuid + "_TList3"] = model[0].TList3 = mod3;
                if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                if (model[0].SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
                //if (model[0].SelectedItems3 == null) model[0].SelectedItems3 = new string[] { "" };
                #endregion
                if (command == "New")
                {
                    if (model[0].Col55 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for new lead, please contact your admin', 2);";
                        return View(model);
                    }
                    model = new_booking(model);
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    if ((model[0].Col56 == "N") && (btnval == "EDIT"))
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for edit lead, please contact your admin', 2);disableForm();";
                        return View(model);
                    }
                    if (sgen.GetSession(MyGuid, "btnval") != null) btnval = sgen.GetSession(MyGuid, "btnval").ToString();
                    model = StartCallback(model);
                }
                else if (command.Trim() == "Save" || command.Trim() == "Update" || command == "Save & New" || command == "Update & New")
                {
                    string sendmail = "N", cancel = "N", editsub = "",ismail="", iswhatapp="";
                    mq2 = "";
                    int tot =1,attlen = 0;
                    if (model[0].Col55 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for save lead , please contact your admin', 2);";
                        return View(model);
                    }
                    var tmodel = model.FirstOrDefault();
                    string currdate = sgen.server_datetime(userCode);
                    DataTable dtstr = new DataTable();
                    dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                    DataTable dtcon = sgen.getdata(userCode, "select status,phnstatus from mail_config where type='MLC' and client_unit_id='" + unitid_mst + "'");
                    if (dtcon.Rows.Count > 1)
                    {
                        ismail = dtcon.Rows[0]["status"].ToString().Trim();
                        iswhatapp = dtcon.Rows[0]["phnstatus"].ToString().Trim();
                        if (iswhatapp.Equals("Y"))
                        {
                            mq2 = sgen.seekval(userCode, "select col4 from enx_tab2 where type='PTP' and client_unit_id", "col4");
                        }
                    }
                    if (model[0].Chk8 == true) cancel = "Y";

                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        isedit = true;
                        vch_num = model[0].Col16;
                        mq1 = " and vch_num<>'" + tmodel.Col16.Trim() + "'";
                        if ((ismail == "Y" || iswhatapp == "Y") && model[0].Chk9 == true)
                        {
                            sendmail = "Y";
                            editsub = "Updated - ";
                        }
                    }
                    else
                    {
                        isedit = false;
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        model[0].Col16 = vch_num;
                        mq1 = "";
                        if (ismail == "Y" || iswhatapp == "Y")
                        {
                            sendmail = "Y";
                            editsub = "";
                        }
                    }
                    
                    #region
                    DataRow dr = dtstr.NewRow();
                    dr["rec_id"] = "0";
                    dr["type"] = model[0].Col12;
                    dr["vch_num"] = vch_num.Trim();
                    dr["vch_date"] = currdate;
                    dr["dof"] = sgen.Savedate(model[0].Col17, false);
                    dr["occasion"] = model[0].Col18;      //Party 
                    dr["venueadd"] = model[0].Col19;      //Party name
                    dr["foodtype"] = model[0].Col20;      //Party name                    
                    dr["menu"] = model[0].SelectedItems1.FirstOrDefault(); //lead owner
                    dr["venue"] = model[0].SelectedItems2.FirstOrDefault(); //lead source
                    dr["servchk1"] = model[0].Chk1 == true ? "Y" : "N"; //lead status
                    dr["servtxt1"] = model[0].Col21;
                    dr["servchk2"] = model[0].Chk2 == true ? "Y" : "N";
                    dr["servtxt2"] = model[0].Col22;
                    dr["servchk3"] = model[0].Chk3 == true ? "Y" : "N";
                    dr["servtxt3"] = model[0].Col23;
                    dr["servchk4"] = model[0].Chk4 == true ? "Y" : "N";
                    dr["servtxt4"] = model[0].Col24;
                    dr["servchk5"] = model[0].Chk5 == true ? "Y" : "N";
                    dr["servtxt5"] = model[0].Col25;
                    dr["servchk6"] = model[0].Chk6 == true ? "Y" : "N";
                    dr["servtxt6"] = model[0].Col26;// address
                    dr["servchk7"] = model[0].Chk7 == true ? "Y" : "N";
                    dr["servtxt7"] = model[0].Col27;// contact Person middle name
                    dr["custname"] = model[0].Col28;// contact Person last name
                    dr["dob"] = sgen.Savedate(model[0].Col41, false);
                    dr["custadd"] = model[0].Col29;
                    dr["contno"] = model[0].Col30;
                    dr["email"] = model[0].Col31;
                    dr["bname"] = model[0].Col32;
                    dr["gname"] = model[0].Col33;
                    dr["hostedby"] = model[0].Col34;
                    dr["amt"] = model[0].Col35;
                    dr["gst"] = model[0].Col36;
                    dr["mcd"] = model[0].Col37;
                    dr["tot"] = model[0].Col38;
                    dr["adv"] = model[0].Col39;
                    dr["bal"] = model[0].Col40;
                    dr["status"] = model[0].Chk8 == true ? "Y" : "N";
                    dr["altcont"] = model[0].Col42;
                    dr["remark"] = model[0].Col43;
                    dr["bdob"] = sgen.Savedate(model[0].Col44, false);
                    dr["gdob"] = sgen.Savedate(model[0].Col45, false);
                    dr["intremark"] = model[0].Col46;
                    dr["bookdt"] = sgen.Savedate(model[0].Col47, false);
                    dr["pax"] = model[0].Col48;
                    //dr["freq"] = model[0].SelectedItems3.FirstOrDefault();
                    dr = getsave(currdate, dr, model, isedit);
                    dtstr.Rows.Add(dr);
                    #endregion
                    Satransaction sat = new Satransaction(userCode, MyGuid);
                    bool Result = sgen.Update_data_fast1_uncommit(userCode, dtstr, model[0].Col10.Trim(), tmodel.Col8, isedit, sat);
                    if (Result == true)
                    {
                        if (mq2.Trim().Equals("Y")) tot = 2;
                        string[] fpaths = new string[tot];
                        IList<KCFile> fileCollection = new List<KCFile>();
                        #region attachment
                        string serverpath = Server.MapPath("~/Uploads/" + cg_com_name.Replace(" ", "") + "/");
                        var dtf = sgen.getdata(userCode, "select * from file_tab where " + tmodel.Col8 + "");
                        List<Tmodel> filenames = new List<Tmodel>();
                        foreach (DataRow drr in dtf.Rows)
                        {
                            try
                            {
                                var fileNameOnly = drr["file_path"].ToString();
                                var fullPath = serverpath + drr["file_path"].ToString();
                                string path = Path.GetDirectoryName(fullPath);
                                var newname = "temp_" + fileNameOnly;
                                System.IO.File.Move(fullPath, path + newname);                                
                                Tmodel tmf = new Tmodel();
                                tmf.Col1 = path;
                                tmf.Col2 = fileNameOnly;
                                tmf.Col3 = newname;
                                filenames.Add(tmf);
                                //for watsapp
                                if (mq2.Trim().Equals("Y")) fpaths[0] = fullPath;
                            }
                            catch (Exception err) { }
                        }
                        sat.Execute_cmd("delete from file_tab where " + tmodel.Col8 + "");

                        if (model[0].Files1 != null)
                        {
                            for (int f = 0; f < model[0].Files1.Count; f++)
                            {
                                try
                                {
                                    if (model[0].Files1[f] != null)
                                    {
                                        string fname = model[0].Files1[f].FileName;
                                        string ftype = model[0].Files1[f].ContentType;
                                        string base64String = model[0].Files1[f].FileBase64;
                                        if (base64String != null && base64String.Trim().Length > 100)
                                        {
                                            ctype1 = ftype;
                                            fileName1 = fname;
                                            path1 = clientid_mst + unitid_mst + userid_mst + currdate + "_" + fileName1;
                                            encpath1 = sgen.Convert_Stringto64(path1).ToString();
                                            finalpath1 = serverpath + encpath1;
                                            System.IO.File.WriteAllBytes(finalpath1, Convert.FromBase64String(base64String));

                                            DataTable dtfile = cmd_Fun.GetStructure(userCode, "file_tab");
                                            filesave(model, currdate, dtfile, fileName1, encpath1, "BOK", ctype1, "Function Booking", "Function Booking", "", "");
                                            Result = sgen.Update_data_fast1_uncommit(userCode, dtfile, "file_tab", tmodel.Col8, isedit, sat);
                                            if (!Result)
                                            {
                                                sat.Rollback();
                                                break;
                                            }
                                            var bytes = Convert.FromBase64String(base64String);
                                            Stream stream = new MemoryStream(bytes);
                                            KCFile file = new KCFile();
                                            file.FileName = fname;
                                            file.ContentLength = stream.Length;
                                            file.ContentType = ctype1;
                                            file.InputStream = stream;
                                            fileCollection.Add(file);
                                            //for watsapp                                            
                                            if (mq2.Trim().Equals("Y")) fpaths[0] = finalpath1;
                                        }
                                    }
                                }
                                catch (Exception err)
                                {
                                    sat.Rollback();
                                    break;
                                }
                            }
                        }
                        #endregion
                        if (Result)
                        {
                            sat.Commit();
                            foreach (var el in filenames)
                            {
                                System.IO.File.Delete(el.Col1 + el.Col3);
                            }
                        }
                        else
                        {
                            foreach (var el in filenames)
                            {
                                System.IO.File.Move(el.Col1 + el.Col3, el.Col1 + el.Col2);
                            }
                        }

                        if (sendmail.Trim().Equals("Y"))
                        {
                            string pg = "", uid = "",ucon="", temp = "",phntemp="", extmail = "",extphone="", sub = "", tfname = "", tfpath = "", tfctype = "",
                                ptfname = "", ptfpath = "", ptfctype = "";                            
                            if (cancel == "Y")
                            {
                                pg = "MAIL OF BOOKING CANCEL";
                                mq1 = "003";
                                editsub = "";
                            }
                            else
                            {
                                pg = "MAIL OF BOOKING";
                                mq1 = "002";
                            }

                            mq = "select m.userid,nvl(group_concat(u.email),'0') umail,nvl(group_concat(u.con_number),'0') ucon,m.extmail,m.extphone,m.temp," +
                                 "m.phntemp,t.col4 msub,to_char(t.col23) mbody,to_char(p.col23) pbody,nvl(f.file_name,'-') fname,nvl(f.file_path,'-') fpath," +
                                 "nvl(f.col2,'-') ctype,nvl(pf.file_name,'-') pfname,nvl(pf.file_path,'-') pfpath,nvl(pf.col2,'-') pctype from mail_config m " +
                                 "inner join user_details u on find_in_set(u.vch_num, m.userid)= 1 and u.type = 'CPR' " +
                                 "inner join enx_tab2 t on t.vch_num = m.temp and t.type = 'MTP' and t.col3 = '" + mq1 + "' and t.client_unit_id = m.client_unit_id " +
                                 "inner join enx_tab2 p on p.vch_num = m.phntemp and p.type = 'PTP' and p.col3 = '" + mq1 + "' and p.client_unit_id = m.client_unit_id " +
                                 "left join file_tab f on f.vch_num=t.vch_num and f.type=t.type and f.client_unit_id=t.client_unit_id and f.ref_code=t.col3 " +
                                 "left join file_tab pf on pf.vch_num=p.vch_num and pf.type=p.type and pf.client_unit_id=p.client_unit_id and pf.ref_code=p.col3 " +
                                 "where m.type = 'MLC' and m.client_unit_id = '" + unitid_mst + "' and m.status = 'Y' and m.module = '40000' and upper(m.pgmail)= '" + pg + "' " +
                                 "group by m.userid,m.extmail,m.extphone,m.temp,m.phntemp,t.col4,to_char(t.col23),to_char(p.col23),f.file_name,f.file_path,f.col2,pf.file_name,pf.file_path,pf.col2";
                            DataTable dtm = sgen.getdata(userCode, mq);
                            if (dtm.Rows.Count > 0)
                            {
                                #region vars
                                List<Tmodel5> vars = new List<Tmodel5>();
                                vars.Add(new Tmodel5 { Col1 = "[occasion]", Col2 = model[0].Col18 });
                                vars.Add(new Tmodel5 { Col1 = "[foodtype]", Col2 = model[0].Col20 });
                                vars.Add(new Tmodel5 { Col1 = "[dof]", Col2 = sgen.Savedate(model[0].Col17, false) });
                                vars.Add(new Tmodel5 { Col1 = "[menu]", Col2 = model[0].TList1.SingleOrDefault(w => w.Value == model[0].SelectedItems1.FirstOrDefault()).Text.Trim() });
                                vars.Add(new Tmodel5 { Col1 = "[venue]", Col2 = model[0].TList2.SingleOrDefault(w => w.Value == model[0].SelectedItems2.FirstOrDefault()).Text.Trim() });
                                vars.Add(new Tmodel5 { Col1 = "[servtxt1]", Col2 = model[0].Col21 });
                                vars.Add(new Tmodel5 { Col1 = "[servtxt2]", Col2 = model[0].Col22 });
                                vars.Add(new Tmodel5 { Col1 = "[servtxt3]", Col2 = model[0].Col23 });
                                vars.Add(new Tmodel5 { Col1 = "[servtxt4]", Col2 = model[0].Col24 });
                                vars.Add(new Tmodel5 { Col1 = "[servtxt5]", Col2 = model[0].Col25 });
                                vars.Add(new Tmodel5 { Col1 = "[servtxt6]", Col2 = model[0].Col26 });
                                vars.Add(new Tmodel5 { Col1 = "[servtxt7]", Col2 = model[0].Col27 });
                                vars.Add(new Tmodel5 { Col1 = "[custname]", Col2 = model[0].Col28 });
                                vars.Add(new Tmodel5 { Col1 = "[tot]", Col2 = model[0].Col38 });
                                vars.Add(new Tmodel5 { Col1 = "[adv]", Col2 = model[0].Col39 });
                                vars.Add(new Tmodel5 { Col1 = "[bal]", Col2 = model[0].Col40 });
                                vars.Add(new Tmodel5 { Col1 = "[remark]", Col2 = model[0].Col43 });
                                #endregion

                                if (ismail.Trim() == "Y")
                                {
                                    uid = dtm.Rows[0]["umail"].ToString();
                                    extmail = dtm.Rows[0]["extmail"].ToString();
                                    temp = dtm.Rows[0]["mbody"].ToString();
                                    sub = dtm.Rows[0]["msub"].ToString();
                                    tfname = dtm.Rows[0]["fname"].ToString();
                                    tfpath = dtm.Rows[0]["fpath"].ToString();
                                    tfctype = dtm.Rows[0]["ctype"].ToString();

                                    if (!tfname.Trim().Equals("-"))
                                    {
                                        string fullpath = Server.MapPath("~/Uploads/" + cg_com_name.Replace(" ", "") + "/") + tfpath;
                                        FileStream tfstream = new FileStream(fullpath, FileMode.Open);
                                        KCFile file = new KCFile();
                                        file.FileName = tfname;
                                        file.ContentLength = tfstream.Length;
                                        file.ContentType = tfctype;
                                        file.InputStream = tfstream;
                                        fileCollection.Add(file);
                                    }

                                    for (int a = 0; a < 2; a++)
                                    {
                                        string mdata = "";
                                        if (a == 0) mdata = sub;
                                        else if (a == 1) mdata = temp;
                                        foreach (var t in vars)
                                        {
                                            //mdata = Regex.Replace(mdata, @"^" + t.Col1 + "$", t.Col2);                                        
                                            mdata = Regex.Replace(mdata, "[^-+<>/#!@$%*()_={};[]:',.?&^ 0-9 a-z A-Z]+", "");
                                            mdata = mdata.Replace(t.Col1, t.Col2);
                                        }
                                        if (a == 0) sub = mdata;
                                        else if (a == 1) temp = mdata;
                                    }

                                    string allmail = uid + "," + extmail + "," + model[0].Col31;
                                    sgen.Send_mail_kcfile(userCode, clientid_mst, unitid_mst, allmail, "", "", temp, editsub + sub, userid_mst, fileCollection);
                                }                                                            
                                if (iswhatapp.Trim() == "Y")
                                {
                                    ucon = dtm.Rows[0]["ucon"].ToString();
                                    extphone = dtm.Rows[0]["extphone"].ToString();
                                    phntemp = dtm.Rows[0]["pbody"].ToString();
                                    ptfname = dtm.Rows[0]["pfname"].ToString();
                                    ptfpath = dtm.Rows[0]["pfpath"].ToString();
                                    ptfctype = dtm.Rows[0]["pctype"].ToString();

                                    if (!ptfname.Trim().Equals("-"))
                                    {
                                        string pfullpath = Server.MapPath("~/Uploads/" + cg_com_name.Replace(" ", "") + "/") + ptfpath;
                                        if (mq2.Trim().Equals("Y")) fpaths[1] = pfullpath;
                                        else fpaths[0] = pfullpath;
                                    }

                                    bool iserr = false;
                                    string allphone = ucon + "," + extphone + "," + model[0].Col30;
                                    string[] phs = allphone.Split(',');

                                    string mdata = "";
                                    mdata = phntemp;
                                    foreach (var t in vars)
                                    {                                        
                                        mdata = Regex.Replace(mdata, "[^-+<>/#!@$%*()_={};[]:',.?&^ 0-9 a-z A-Z]+", "");
                                        mdata = mdata.Replace(t.Col1, t.Col2);
                                    }
                                    phntemp = mdata;                                 

                                    for (int k = 0; k < phs.Length; k++)
                                    {
                                        var mob = phs[k].ToString().Trim();
                                        if (mob.Length == 10) mob = "91" + mob;
                                        else if (mob.Length == 12) { }
                                        else { continue; }
                                        iserr = sgen.SendWtsText(mob, phntemp);
                                        if (iserr)
                                        {
                                            foreach (var f in fpaths)
                                            {
                                                iserr = sgen.SendwhatsFileOnly(mob, f.ToString());
                                            }
                                        }
                                        else
                                        {
                                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Msg could not be sent on " + mob + "');";
                                        }
                                    }
                                }
                            }
                        }

                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col10 = tm.Col10,
                            Col11 = tm.Col11,
                            Col12 = tm.Col12,
                            Col13 = "Save",
                            Col100 = "Save & New",
                            Col121 = "S",
                            Col122 = "<u>S</u>ave",
                            Col123 = "Save & Ne<u>w</u>",
                            Col14 = tm.Col14,
                            Col15 = tm.Col15,
                            Col9 = tm.Col9,
                            TList1 = mod1,
                            TList2 = mod2,
                            //TList3 = mod3,
                            SelectedItems1 = new string[] { "" },
                            SelectedItems2 = new string[] { "" },
                            //SelectedItems3 = new string[] { "" },                            
                        });

                        model[0].Files1 = new List<Files>();
                        Files tm3 = new Files();
                        tm3.FileName = "-";
                        model[0].Files1.Add(tm3);

                        if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                        {
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.divcancel = "style=display:none";
                            ViewBag.divmail = "style=display:none";
                            ViewBag.scripCall = "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                        {
                            try
                            {
                                model = new_booking(model);
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                            }
                            catch (Exception ex) { }
                        }
                    }
                    else
                    {
                        ViewBag.scripCall = "showmsgJS(1, 'Record Not Saved',0);";
                    }
                }
            }
            catch (Exception err)
            {

                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion

        #region lead_detail
        public ActionResult lead_detail()
        {
            //MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            MyGuid = EncryptDecrypt.Decrypt(HttpUtility.ParseQueryString(Request.UrlReferrer.Query)["m_id"]);
            FillMst(MyGuid);
            chkRef();
            List<Tmodelmain> model = new List<Tmodelmain>();
            Tmodelmain tm1 = new Tmodelmain();
            Tmodelmain tm2 = new Tmodelmain();
            mid_mst = EncryptDecrypt.Decrypt(Request.QueryString["mid"]);
            ViewBag.vnew = "";
            ViewBag.vedit = "";
            ViewBag.vsave = "disabled='disabled'";
            ViewBag.scripCall = "disableForm();";
            tm1.Col13 = "Save";
            tm1.Col14 = mid_mst.Trim();
            tm1.Col15 = MyGuid.Trim();
            model.Add(tm1);
            model[0].LTM1 = new List<Tmodelmain>();
            model[0].LTM2 = new List<Tmodelmain>();
            model[0].LTM3 = new List<Tmodelmain>();
            Tmodelmain tmltm1 = new Tmodelmain();
            Tmodelmain tmltm2 = new Tmodelmain();
            Tmodelmain tmltm3 = new Tmodelmain();
            tmltm1.Col1 = "1";
            tmltm2.Col1 = "1";
            tmltm3.Col1 = "1";
            model[0].LTM1.Add(tmltm1);
            model[0].LTM2.Add(tmltm2);
            List<SelectListItem> md1 = new List<SelectListItem>();
            #region Detail          
            model[0].LTM1[0].SelectedItems1 = new string[] { "" };
            model[0].LTM1[0].SelectedItems2 = new string[] { "" };
            model[0].LTM1[0].SelectedItems3 = new string[] { "" };
            model[0].LTM1[0].SelectedItems4 = new string[] { "" };
            model[0].LTM1[0].SelectedItems5 = new string[] { "" };
            model[0].LTM1[0].SelectedItems6 = new string[] { "" };
            model[0].LTM1[0].SelectedItems7 = new string[] { "" };
            model[0].LTM1[0].SelectedItems8 = new string[] { "" };
            model[0].LTM1[0].SelectedItems9 = new string[] { "" };
            model[0].LTM1[0].SelectedItems10 = new string[] { "" };
            model[0].LTM1[0].SelectedItems11 = new string[] { "" };
            model[0].LTM1[0].SelectedItems12 = new string[] { "" };
            model[0].LTM1[0].SelectedItems13 = new string[] { "" };
            model[0].LTM1[0].SelectedItems14 = new string[] { "" };
            model[0].LTM1[0].SelectedItems15 = new string[] { "" };
            TempData[MyGuid + "_0Tlist1"] = model[0].LTM1[0].TList1 = md1;
            TempData[MyGuid + "_0Tlist2"] = model[0].LTM1[0].TList2 = md1;
            TempData[MyGuid + "_0Tlist3"] = model[0].LTM1[0].TList3 = md1;
            TempData[MyGuid + "_0Tlist4"] = model[0].LTM1[0].TList4 = md1;
            TempData[MyGuid + "_0Tlist5"] = model[0].LTM1[0].TList5 = md1;
            TempData[MyGuid + "_0Tlist6"] = model[0].LTM1[0].TList6 = md1;
            TempData[MyGuid + "_0Tlist7"] = model[0].LTM1[0].TList7 = md1;
            TempData[MyGuid + "_0Tlist8"] = model[0].LTM1[0].TList8 = md1;
            TempData[MyGuid + "_0Tlist9"] = model[0].LTM1[0].TList9 = md1;
            TempData[MyGuid + "_0Tlist10"] = model[0].LTM1[0].TList10 = md1;
            TempData[MyGuid + "_0Tlist11"] = model[0].LTM1[0].TList11 = md1;
            TempData[MyGuid + "_0Tlist12"] = model[0].LTM1[0].TList12 = md1;
            TempData[MyGuid + "_0Tlist13"] = model[0].LTM1[0].TList13 = md1;
            TempData[MyGuid + "_0Tlist14"] = model[0].LTM1[0].TList14 = md1;
            TempData[MyGuid + "_0Tlist15"] = model[0].LTM1[0].TList15 = md1;
            #endregion
            #region Followup

            model[0].LTM2[0].SelectedItems1 = new string[] { "" };
            model[0].LTM2[0].SelectedItems2 = new string[] { "" };
            model[0].LTM2[0].SelectedItems3 = new string[] { "" };
            TempData[MyGuid + "_1TList1"] = model[0].LTM2[0].TList1 = md1;
            TempData[MyGuid + "_1TList2"] = model[0].LTM2[0].TList2 = md1;
            TempData[MyGuid + "_1TList3"] = model[0].LTM2[0].TList3 = md1;

            #endregion

            model[0].LTM1[0].Col9 = "CREATE LEAD";
            model[0].LTM1[0].Col10 = "lead_master";
            model[0].LTM1[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].LTM1[0].Col12 = "LED";
            mq = "select param2 from controls where param5='LEAD MASTER' and type='VDC' and upper(param3)='GEO LOCATION'";
            mq = sgen.seekval(userCode, mq, "param2");
            model[0].LTM1[0].Col50 = mq;
            if (mq.Trim().Equals("Y"))
            {
                if (model[0].LTM1[0].Col76 == null) ViewBag.scripCall = ViewBag.scripCall + "initialize(28.477450,77.034138);";
                else ViewBag.scripCall = ViewBag.scripCall + "initialize(" + model[0].LTM1[0].Col76 + ");";
            }
            if (Request.QueryString["fstr"] != null)
            {
                string fstr = "";
                if (Request.QueryString["fstr"].StartsWith("EDIT"))
                {
                    model[0].LTM1[0].Col16 = EncryptDecrypt.Decrypt(Request.QueryString["fstr"].ToString().Replace("EDIT", "").Trim());
                    sgen.SetSession(MyGuid, "SSEEKVAL", model[0].LTM1[0].Col16);
                    CallbackFun("EDIT", "Y", "lead_detail", "vastu", model);
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.scripCall += "enableForm();";
                }
                else if (Request.QueryString["fstr"].StartsWith("VIEW"))
                {
                    model[0].LTM1[0].Col16 = EncryptDecrypt.Decrypt(Request.QueryString["fstr"].ToString().Replace("VIEW", "").Trim());
                    sgen.SetSession(MyGuid, "SSEEKVAL", model[0].LTM1[0].Col16);
                    CallbackFun("VIEW", "N", "lead_detail", "vastu", model);
                    ViewBag.vsave = "disabled='disabled'";
                    ViewBag.vsavenew = "disabled='disabled'";
                    model[0].Col13 = "Save";
                    model[0].Col100 = "Save & New";
                    model[0].Col121 = "S";
                    model[0].Col122 = "<u>S</u>ave";
                    model[0].Col123 = "Save & Ne<u>w</u>";
                    ViewBag.scripCall = "disableForm();";
                }
                else
                {
                    model[0].LTM1[0].Col16 = EncryptDecrypt.Decrypt(Request.QueryString["fstr"].ToString()); ;
                    sgen.SetSession(MyGuid, "SSEEKVAL", model[0].LTM1[0].Col16);
                    CallbackFun("EDIT", "Y", "lead_detail", "vastu", model);
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.scripCall += "enableForm();";
                }
            }
            return View(model);
        }
        [HttpPost]
        public ActionResult lead_detail(List<Tmodelmain> model, string command)
        {
            try
            {
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();
                #region detail
                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_0Tlist1"];
                List<SelectListItem> mod2 = (List<SelectListItem>)TempData[MyGuid + "_0Tlist2"];
                List<SelectListItem> mod3 = (List<SelectListItem>)TempData[MyGuid + "_0Tlist3"];
                List<SelectListItem> mod4 = (List<SelectListItem>)TempData[MyGuid + "_0Tlist4"];
                List<SelectListItem> mod5 = (List<SelectListItem>)TempData[MyGuid + "_0Tlist5"];
                List<SelectListItem> mod8 = (List<SelectListItem>)TempData[MyGuid + "_0Tlist6"];
                List<SelectListItem> mod10 = (List<SelectListItem>)TempData[MyGuid + "_0Tlist7"];
                List<SelectListItem> mod11 = (List<SelectListItem>)TempData[MyGuid + "_0Tlist8"];
                TempData[MyGuid + "_0Tlist1"] = model[0].LTM1[0].TList1 = mod1;
                TempData[MyGuid + "_0Tlist2"] = model[0].LTM1[0].TList2 = mod2;
                TempData[MyGuid + "_0Tlist3"] = model[0].LTM1[0].TList3 = mod3;
                TempData[MyGuid + "_0Tlist4"] = model[0].LTM1[0].TList4 = mod4;
                TempData[MyGuid + "_0Tlist5"] = model[0].LTM1[0].TList5 = mod5;
                TempData[MyGuid + "_0Tlist6"] = model[0].LTM1[0].TList6 = mod8;
                TempData[MyGuid + "_0Tlist7"] = model[0].LTM1[0].TList7 = mod10;
                TempData[MyGuid + "_0Tlist8"] = model[0].LTM1[0].TList8 = mod11;

                if (model[0].LTM1[0].SelectedItems1 == null) model[0].LTM1[0].SelectedItems1 = new string[] { "" };
                if (model[0].LTM1[0].SelectedItems2 == null) model[0].LTM1[0].SelectedItems2 = new string[] { "" };
                if (model[0].LTM1[0].SelectedItems3 == null) model[0].LTM1[0].SelectedItems3 = new string[] { "" };
                if (model[0].LTM1[0].SelectedItems4 == null) model[0].LTM1[0].SelectedItems4 = new string[] { "" };
                if (model[0].LTM1[0].SelectedItems5 == null) model[0].LTM1[0].SelectedItems5 = new string[] { "" };
                if (model[0].LTM1[0].SelectedItems6 == null) model[0].LTM1[0].SelectedItems6 = new string[] { "" };
                if (model[0].LTM1[0].SelectedItems7 == null) model[0].LTM1[0].SelectedItems7 = new string[] { "" };
                if (model[0].LTM1[0].SelectedItems8 == null) model[0].LTM1[0].SelectedItems8 = new string[] { "" };
                #endregion
                #region followup
                List<SelectListItem> mod6 = (List<SelectListItem>)TempData[MyGuid + "_1Tlist1"];
                List<SelectListItem> mod7 = (List<SelectListItem>)TempData[MyGuid + "_1Tlist2"];
                List<SelectListItem> mod9 = (List<SelectListItem>)TempData[MyGuid + "_1Tlist3"];
                List<SelectListItem> mod12 = (List<SelectListItem>)TempData[MyGuid + "_1Tlist4"];
                model[0].LTM2[0].TList1 = mod6;
                model[0].LTM2[0].TList2 = mod7;
                model[0].LTM2[0].TList3 = mod9;


                TempData[MyGuid + "_1Tlist1"] = model[0].LTM2[0].TList1;
                TempData[MyGuid + "_1Tlist2"] = model[0].LTM2[0].TList2;
                TempData[MyGuid + "_1Tlist3"] = model[0].LTM2[0].TList3;

                if (model[0].LTM2[0].SelectedItems1 == null) model[0].LTM2[0].SelectedItems1 = new string[] { "" };
                if (model[0].LTM2[0].SelectedItems2 == null) model[0].LTM2[0].SelectedItems2 = new string[] { "" };
                if (model[0].LTM2[0].SelectedItems3 == null) model[0].LTM2[0].SelectedItems3 = new string[] { "" };

                #endregion
                if (command == "Callback")
                {
                    model = StartCallback(model);
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region lead_list 
        public ActionResult lead_list()
        {
            FillMst();
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            string defval = "";
            ViewBag.scripCall = "enableForm();";
            model[0].Col10 = "lead_master";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "LED";
            model[0].Col13 = "Update";
            ViewBag.vsave = "";
            #region
            List<SelectListItem> mod1 = new List<SelectListItem>();
            List<SelectListItem> mod2 = new List<SelectListItem>();
            List<SelectListItem> mod3 = new List<SelectListItem>();
            List<SelectListItem> mod4 = new List<SelectListItem>();
            List<SelectListItem> mod5 = new List<SelectListItem>();
            List<SelectListItem> mod6 = new List<SelectListItem>();
            TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
            TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2;
            TempData[MyGuid + "_TList3"] = model[0].TList3 = mod3;
            TempData[MyGuid + "_TList4"] = model[0].TList4 = mod4;
            TempData[MyGuid + "_TList5"] = model[0].TList5 = mod5;
            TempData[MyGuid + "_TList6"] = model[0].TList6 = mod6;
            model[0].SelectedItems1 = new string[] { "" };
            model[0].SelectedItems2 = new string[] { "" };
            model[0].SelectedItems3 = new string[] { "" };
            model[0].SelectedItems4 = new string[] { "" };
            model[0].SelectedItems5 = new string[] { "" };
            model[0].SelectedItems6 = new string[] { "" };

            #endregion
            var tm = model.FirstOrDefault();
            #region  Lead status
            TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.leadstatus(userCode, unitid_mst, out defval);
            TempData[MyGuid + "_TList3"] = model[0].TList1 = mod3 = cmd_Fun.leadstatus(userCode, unitid_mst, out defval);


            model[0].SelectedItems1 = new string[] { defval };
            model[0].SelectedItems3 = new string[] { defval };

            #endregion
            #region  Lead Owner
            TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2 = cmd_Fun.username_mod(userCode, m_module3);
            TempData[MyGuid + "_TList4"] = model[0].TList4 = mod4 = cmd_Fun.username_mod(userCode, m_module3);


            model[0].SelectedItems2 = new string[] { "" };
            model[0].SelectedItems4 = new string[] { "" };

            #endregion
            #region  assigned to
            mod6 = mod5 = cmd_Fun.username_mod(userCode, m_module3);
            model[0].TList6 = model[0].TList5 = mod5;
            model[0].SelectedItems6 = model[0].SelectedItems5 = new string[] { "" };
            TempData[MyGuid + "_TList6"] = TempData[MyGuid + "_TList5"] = mod5;
            #endregion
            string cond = "";
            var leadcon = "";
            if (mid_mst == "40005.4")
            {
                model[0].Col9 = "LIST OF CLOSED LEADS";
                leadcon = "C";
            }
            else if (mid_mst == "40005.5")
            {
                if (role_mst != "owner")
                {
                    // cond = "and a.ct_person='" + userid_mst + "'";
                    cond = "and b.asg_to='" + userid_mst + "'";
                }
                model[0].Col9 = "LIST OF LEADS (ASSIGNED)";
                leadcon = "N";
            }
            else if (mid_mst == "40005.6")
            {
                model[0].Col9 = "LIST OF LEADS (TOTAL)";
                leadcon = "N";
            }
            else
            {
                if (role_mst != "owner")
                {
                    cond = "and a.ent_by='" + userid_mst + "'";
                }
                model[0].Col9 = "LIST OF LEADS (USERS)";
                leadcon = "N";
            }
            mq = "select * from (select nvl(max(b.asg_to),ct_person) asg_to ,nvl(to_char( max(convert_tz(f.date2, 'UTC', '" + sgen.Gettimezone() + "')),'" + sgen.Getsqldateformat() + "'),'-') as next_date,(a.cp_fname || ' ' || " +
                "replace(a.cp_mname, '0', '') || ' ' || replace(a.cp_lname,'0','')) cpname , a.ld_product,group_concat(distinct p.master_name) as product" +
                ", (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr, a.vch_num as lead_no,to_char(convert_tz(a.vch_date," +
                " 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') as lead_date,a.cust_name as Customer_Name, nvl(a.refered_by, '-') refered_by ,c.master_name as Lead_source," +
                "d.master_name as lead_status, ud.first_name || ' ' || replace(ud.middle_name, '0', '') || '' || replace(ud.last_name, '0', '')as lead_owner," +
                "a.ld_owner,a.ld_status,a.ot_source,a.ct_person,trim(cast(a.remark as varchar(1000))) as remark,a.cust_id,(case when (a.mobile_no='0000000000' or a.mobile_no='0') then '-' else a.mobile_no end) mobile_no,(case when a.emailid='ab@ab.ab' then '-' else a.emailid end) emailid from  lead_master a  left join master_setting c " +
                "on a.ld_source = c.master_id and c.type = 'SRC' and find_in_set(c.client_unit_id, a.client_unit_id)= 1 left join master_setting d on a.ld_status " +
                "= d.master_id and d.type = 'LST' and find_in_set(d.client_unit_id, a.client_unit_id)= 1 left join user_details ud on ud.vch_num = a.ld_owner " +
                " left join master_setting p on p.type = 'PNM' and find_in_set(p.master_id, a.ld_product)= 1 and find_in_set(p.client_unit_id, a.client_unit_id)= 1  " +
                "left join enx_tab2 f on f.Col2 = a.vch_num  and find_in_set(f.client_unit_id, a.client_unit_id)= 1 and f.type = 'VFC' and " +
                "a.client_unit_id = f.client_unit_id left join master_setting n on n.master_id = f.col7 and n.type = 'NAM' and " +
                "find_in_set(n.client_unit_id, f.client_unit_id)= 1 left join (select col5 as asg_to,col2 as lead_id from enx_tab2 " +
                "where type='VFC' and client_unit_id='" + unitid_mst + "'  and vch_num in (select max(vch_num) from enx_tab2 where type = 'VFC' and client_unit_id = '" + unitid_mst + "' group by col2))  b on a.vch_num = b.lead_id   where a.type = 'LED' and a.client_unit_id = '" + unitid_mst + "' and a.lead_con = '" + leadcon + "' " + cond + "  " +
                " group by  a.ld_product ,(a.client_id || a.client_unit_id || a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.type),a.vch_num," +
                "to_char(convert_tz(a.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') ,a.cust_name, nvl(a.refered_by, '-'),c.master_name,d.master_name, ud.first_name" +
                " || ' ' || replace(ud.middle_name, '0', '') || '' || replace(ud.last_name, '0', ''),a.ld_owner,a.ld_status,a.ot_source,a.ct_person," +
                "trim(cast(a.remark as varchar(1000))),a.cust_id,a.mobile_no,a.emailid ,(a.cp_fname || ' ' || replace(a.cp_mname, '0', '') || ' ' || replace(a.cp_lname, '0', ''))  order by a.vch_num desc) tab";
            DataTable dt = sgen.getdata(userCode, mq);
            if (dt.Rows.Count > 0)
            {
                mq1 = ""; mq2 = ""; mq3 = "";
                var dtmin = new DataTable();
                sgen.SetSession(MyGuid, "Lead_List", dt);
                if (dt.Rows.Count <= 25)
                {
                    dtmin = dt;
                    mq1 = "N"; mq2 = "N"; mq3 = dt.Rows.Count.ToString();
                }
                else
                {
                    dtmin = dt.AsEnumerable().Take(25).CopyToDataTable();
                    mq1 = "Y"; mq2 = "Y"; mq3 = "25";
                }
                model = new List<Tmodelmain>();
                foreach (DataRow dr in dtmin.Rows)
                {
                    string next = "";
                    if (dr["next_date"].ToString() == "01/01/1900") { next = ""; } else { next = dr["next_date"].ToString(); }
                    model.Add(new Tmodelmain
                    {
                        Col8 = tm.Col8,
                        Col9 = tm.Col9,
                        Col10 = tm.Col10,
                        Col13 = tm.Col13,
                        Col14 = tm.Col14,
                        Col15 = tm.Col15,
                        Col16 = dr["fstr"].ToString(),
                        Col17 = dr["lead_no"].ToString(),
                        Col18 = dr["lead_date"].ToString(),
                        Col19 = dr["Customer_Name"].ToString(),
                        Col20 = dr["cust_id"].ToString(),
                        //Col21 = dr["remark"].ToString(),
                        //Col22 = dr["refered_by"].ToString(),
                        //Col23 = dr["ct_person"].ToString(),
                        Col24 = dr["Lead_source"].ToString(),
                        Col25 = dr["mobile_no"].ToString(),
                        Col28 = dr["product"].ToString(),
                        //Col27 = dr["nxt_fl"].ToString(),
                        //Col26 = dr["next_date"].ToString(),
                        Col26 = next,
                        Col40 = mq1,
                        Col41 = mq2,
                        Col42 = mq3,
                        Col43 = mq3,
                        TList1 = mod1,
                        TList2 = mod2,
                        TList3 = mod3,
                        TList4 = mod4,
                        TList5 = mod5,
                        TList6 = mod6,
                        SelectedItems1 = System.String.Join(",", dtmin.Rows.OfType<DataRow>().Select(r => dr["ld_status"].ToString()).Distinct()).Split(','),
                        SelectedItems2 = System.String.Join(",", dtmin.Rows.OfType<DataRow>().Select(r => dr["ld_owner"].ToString()).Distinct()).Split(','),
                        SelectedItems5 = System.String.Join(",", dtmin.Rows.OfType<DataRow>().Select(r => dr["asg_to"].ToString()).Distinct()).Split(','),
                        SelectedItems3 = new string[] { "" },
                        SelectedItems4 = new string[] { "" },
                        SelectedItems6 = new string[] { "" }
                    });
                }
            }
            return View(model);
        }
        [HttpPost]
        public ActionResult lead_list(List<Tmodelmain> model, string command, string mid)
        {
            try
            {
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();
                #region
                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                List<SelectListItem> mod2 = (List<SelectListItem>)TempData[MyGuid + "_TList2"];
                List<SelectListItem> mod3 = (List<SelectListItem>)TempData[MyGuid + "_TList3"];
                List<SelectListItem> mod4 = (List<SelectListItem>)TempData[MyGuid + "_TList4"];
                List<SelectListItem> mod5 = (List<SelectListItem>)TempData[MyGuid + "_TList5"];
                List<SelectListItem> mod6 = (List<SelectListItem>)TempData[MyGuid + "_TList6"];



                TempData[MyGuid + "_TList3"] = model[0].TList3 = mod3;
                TempData[MyGuid + "_TList4"] = model[0].TList4 = mod4;
                //TempData[MyGuid + "_TList5"] = model[0].TList5;
                TempData[MyGuid + "_TList6"] = model[0].TList6 = mod6;
                TempData[MyGuid + "_TList1"] = mod1;
                TempData[MyGuid + "_TList2"] = mod2;
                TempData[MyGuid + "_TList5"] = mod5;
                //if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                //if (model[0].SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
                if (model[0].SelectedItems3 == null) model[0].SelectedItems3 = new string[] { "" };
                if (model[0].SelectedItems4 == null) model[0].SelectedItems4 = new string[] { "" };
                //if (model[0].SelectedItems5 == null) model[0].SelectedItems5 = new string[] { "" };
                if (model[0].SelectedItems6 == null) model[0].SelectedItems6 = new string[] { "" };
                foreach (var mod in model)
                {
                    mod.TList1 = mod1;
                    mod.TList2 = mod2;
                    mod.TList5 = mod5;
                    if (mod.SelectedItems1 == null) mod.SelectedItems1 = new string[] { "" };
                    if (mod.SelectedItems2 == null) mod.SelectedItems2 = new string[] { "" };
                    if (mod.SelectedItems5 == null) mod.SelectedItems5 = new string[] { "" };
                }
                #endregion
                if (command == "New")
                {
                    return RedirectToAction("lead", "vastu", new { m_id = EncryptDecrypt.Encrypt(@MyGuid) });
                }

                else if (command == "Search")
                {
                    if (sgen.GetSession(MyGuid, "Lead_List") != null)
                    {
                        DataTable dt = new DataTable();
                        DataTable Lead_List = new DataTable();
                        Lead_List = (DataTable)sgen.GetSession(MyGuid, "Lead_List");
                        string condition = "";

                        if (model[0].Col29 != null) { condition = "Customer_Name like '%" + model[0].Col29 + "%'"; }
                        if (model[0].Col30 != null)
                        {
                            if (condition.Equals("")) { condition = "lead_no='" + model[0].Col30 + "'"; }
                            else { condition = condition + " and lead_no='" + model[0].Col30 + "'"; }
                        }
                        if (model[0].Col31 != null)
                        {
                            if (condition.Equals("")) { condition = "lead_date='" + model[0].Col31 + "'"; }
                            else { condition = condition + " and lead_date='" + model[0].Col31 + "'"; }
                        }
                        if (model[0].Col32 != null)
                        {
                            if (condition.Equals("")) { condition = "product like '%" + model[0].Col32 + "%'"; }
                            else { condition = condition + "and product like '%" + model[0].Col32 + "%'"; }
                        }
                        if (model[0].Col33 != null)
                        {
                            if (condition.Equals("")) { condition = "mobile_no like '%" + model[0].Col33 + "%'"; }
                            else { condition = condition + "and mobile_no like '%" + model[0].Col33 + "%'"; }
                        }

                        if (model[0].Col35 != null)
                        {
                            if (condition.Equals("")) { condition = "lead_source like '%" + model[0].Col35 + "%'"; }
                            else { condition = condition + "and lead_source like '%" + model[0].Col35 + "%'"; }
                        }
                        if ((model[0].SelectedItems3 != null) && (model[0].SelectedItems3.FirstOrDefault() != ""))
                        {
                            if (condition.Equals("")) { condition = "ld_status='" + model[0].SelectedItems3.FirstOrDefault() + "'"; }
                            else { condition = condition + " and ld_status='" + model[0].SelectedItems3.FirstOrDefault() + "'"; }
                        }
                        if ((model[0].SelectedItems4 != null) && (model[0].SelectedItems4.FirstOrDefault() != ""))
                        {
                            if (condition.Equals("")) { condition = "ld_owner='" + model[0].SelectedItems4.FirstOrDefault() + "'"; }
                            else { condition = condition + " and ld_owner='" + model[0].SelectedItems4.FirstOrDefault() + "'"; }
                        }
                        if ((model[0].SelectedItems6 != null) && (model[0].SelectedItems6.FirstOrDefault() != ""))
                        {
                            if (condition.Equals("")) { condition = "asg_to='" + model[0].SelectedItems6.FirstOrDefault() + "'"; }
                            else { condition = condition + " and asg_to='" + model[0].SelectedItems6.FirstOrDefault() + "'"; }
                        }
                        if (model[0].Col34 != null)
                        {
                            if (condition.Equals("")) { condition = "next_date='" + model[0].Col34 + "'"; }
                            else { condition = condition + " and next_date='" + model[0].Col34 + "'"; }
                        }
                        Lead_List.CaseSensitive = false;
                        try
                        {
                            dt = sgen.seekval_dt(Lead_List, condition);
                            DataView dv = dt.DefaultView;
                            dv.Sort = "lead_no desc";
                            dt = dv.ToTable();
                        }
                        catch { dt = new DataTable(); }
                        model = new List<Tmodelmain>();
                        if (dt.Rows.Count > 0)
                        {
                            //tm = model.FirstOrDefault();
                            foreach (DataRow dr in dt.Rows)
                            {
                                string next = "";
                                if (dr["next_date"].ToString() == "01/01/1900") { next = ""; } else { next = dr["next_date"].ToString(); }
                                model.Add(new Tmodelmain
                                {
                                    Col8 = tm.Col8,
                                    Col9 = tm.Col9,
                                    Col10 = tm.Col10,
                                    Col13 = tm.Col13,
                                    Col14 = tm.Col14,
                                    Col15 = tm.Col15,
                                    TList1 = mod1,
                                    TList2 = mod2,
                                    Col16 = dr["fstr"].ToString(),
                                    Col17 = dr["lead_no"].ToString(),
                                    Col18 = dr["lead_date"].ToString(),
                                    Col19 = dr["Customer_Name"].ToString(),
                                    Col20 = dr["cust_id"].ToString(),
                                    //Col21 = dr["remark"].ToString(),
                                    //Col22 = dr["refered_by"].ToString(),
                                    //Col23 = dr["ct_person"].ToString(),
                                    Col24 = dr["Lead_source"].ToString(),
                                    Col25 = dr["mobile_no"].ToString(),
                                    Col28 = dr["product"].ToString(),
                                    //Col27 = dr["nxt_fl"].ToString(),
                                    //Col26 = dr["next_date"].ToString(),
                                    Col26 = next,
                                    SelectedItems1 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => dr["ld_status"].ToString()).Distinct()).Split(','),
                                    SelectedItems2 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => dr["ld_owner"].ToString()).Distinct()).Split(','),
                                    SelectedItems5 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => dr["ct_person"].ToString()).Distinct()).Split(','),
                                    TList3 = mod3,
                                    TList4 = mod4,
                                    TList5 = mod5,
                                    TList6 = mod6,
                                    Col29 = tm.Col29,
                                    Col30 = tm.Col30,
                                    Col31 = tm.Col31,
                                    Col32 = tm.Col32,
                                    Col33 = tm.Col33,
                                    Col34 = tm.Col34,
                                    SelectedItems3 = tm.SelectedItems3,
                                    SelectedItems4 = tm.SelectedItems4,
                                    SelectedItems6 = tm.SelectedItems6
                                });
                            }
                        }
                        else
                        {
                            model.Add(new Tmodelmain
                            {
                                Col8 = tm.Col8,
                                Col9 = tm.Col9,
                                Col10 = tm.Col10,
                                Col13 = tm.Col13,
                                Col14 = tm.Col14,
                                Col15 = tm.Col15,
                                TList1 = mod1,
                                TList2 = mod2,
                                TList3 = mod3,
                                TList4 = mod4,
                                TList5 = mod5,
                                TList6 = mod6,
                                Col29 = tm.Col29,
                                Col30 = tm.Col30,
                                Col31 = tm.Col31,
                                Col32 = tm.Col32,
                                Col33 = tm.Col33,
                                Col34 = tm.Col34,
                                SelectedItems3 = tm.SelectedItems3,
                                SelectedItems4 = tm.SelectedItems4,
                                SelectedItems6 = tm.SelectedItems4,
                                SelectedItems1 = new string[] { "" },
                                SelectedItems2 = new string[] { "" },
                                SelectedItems5 = new string[] { "" }
                            });
                            ViewBag.scripCall += "showmsgJS(1, 'Record Not Found', 2);";
                        }
                        TempData[MyGuid + "_Tlist1"] = model[0].TList1;
                        TempData[MyGuid + "_Tlist2"] = model[0].TList2;
                        TempData[MyGuid + "_Tlist5"] = model[0].TList5;
                    }
                }
                else if (command.Trim() == "Save" || command.Trim() == "Update")
                {
                    var tmodel = model.FirstOrDefault();
                    string currdate = sgen.server_datetime(userCode);
                    string cond = "", found = "";
                    DataTable dtstr = new DataTable();
                    isedit = true;
                    vch_num = model[0].Col17;
                    bool Result = false;
                    for (Int32 i = 0; i < model.Count(); i++)
                    {
                        if (model[i].SelectedItems1 == null) model[i].SelectedItems1 = new string[] { "" };
                        if (model[i].SelectedItems2 == null) model[i].SelectedItems2 = new string[] { "" };
                        if (model[i].SelectedItems3 == null) model[i].SelectedItems3 = new string[] { "" };
                        if (model[i].SelectedItems4 == null) model[i].SelectedItems4 = new string[] { "" };
                        mq = "update lead_master set ld_owner='" + model[i].SelectedItems2.FirstOrDefault() + "'," +
                            "ld_status='" + model[i].SelectedItems1.FirstOrDefault() + "' where (client_id||client_unit_id||vch_num||to_char(vch_date,'yyyymmdd')||type)" +
                            "='" + model[i].Col16 + "'";
                        Result = sgen.execute_cmd(userCode, mq);
                    }
                    //bool Result = sgen.Update_data(userCode, dtstr, model[0].Col10.Trim(), tmodel.Col16, isedit);
                    if (Result == true)
                    {
                        vch_num = model[0].Col16;
                        string defval = "";
                        ViewBag.vnew = "";
                        ViewBag.vedit = "";
                        //ViewBag.vsave = "disabled='disabled'";
                        ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                        #region Bind Lead
                        #region  Lead status
                        TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.leadstatus(userCode, unitid_mst, out defval);
                        TempData[MyGuid + "_TList3"] = model[0].TList1 = mod3 = cmd_Fun.leadstatus(userCode, unitid_mst, out defval);

                        model[0].SelectedItems1 = new string[] { defval };
                        model[0].SelectedItems3 = new string[] { defval };

                        #endregion
                        #region  Lead Owner
                        TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2 = cmd_Fun.username_mod(userCode, m_module3);
                        TempData[MyGuid + "_TList4"] = model[0].TList4 = mod4 = cmd_Fun.username_mod(userCode, m_module3);


                        model[0].SelectedItems2 = new string[] { "" };
                        model[0].SelectedItems4 = new string[] { "" };

                        #endregion
                        cond = "";
                        string leadcon = "";
                        if (role_mst != "owner")
                        {
                            cond = "and a.ent_by='" + userid_mst + "'";
                        }
                        if (mid_mst == "40005.4")
                        {
                            leadcon = "C";
                        }
                        else if (mid_mst == "40005.5")
                        {
                            if (role_mst != "owner")
                            {
                                cond = "and b.asg_to='" + userid_mst + "'";
                            }
                            leadcon = "N";
                        }
                        else if (mid_mst == "40005.6")
                        {
                            leadcon = "N";
                        }
                        else
                        {
                            if (role_mst != "owner")
                            {
                                cond = "and a.ent_by='" + userid_mst + "'";
                            }
                            leadcon = "N";
                        }
                        mq = "select max(b.asg_to) asg_to ,nvl(to_char( max(convert_tz(f.date2, 'UTC', '" + sgen.Gettimezone() + "')),'" + sgen.Getsqldateformat() + "'),'-') as next_date,(a.cp_fname || ' ' || " +
                            "replace(a.cp_mname, '0', '') || ' ' || replace(a.cp_lname,'0','')) cpname , a.ld_product,group_concat(distinct p.master_name) as product" +
                            ", (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr, a.vch_num as lead_no,to_char(convert_tz(a.vch_date," +
                            " 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') as lead_date,a.cust_name as Customer_Name, nvl(a.refered_by, '-') refered_by ,c.master_name as Lead_source," +
                            "d.master_name as lead_status, ud.first_name || ' ' || replace(ud.middle_name, '0', '') || '' || replace(ud.last_name, '0', '')as lead_owner," +
                            "a.ld_owner,a.ld_status,a.ot_source,a.ct_person,trim(cast(a.remark as varchar(1000))) as remark,a.cust_id,(case when (a.mobile_no='0000000000' or a.mobile_no='0') then '-' else a.mobile_no end) mobile_no,(case when a.emailid='ab@ab.ab' then '-' else a.emailid end) emailid from  lead_master a  left join master_setting c " +
                            "on a.ld_source = c.master_id and c.type = 'SRC' and find_in_set(c.client_unit_id, a.client_unit_id)= 1 left join master_setting d on a.ld_status " +
                            "= d.master_id and d.type = 'LST' and find_in_set(d.client_unit_id, a.client_unit_id)= 1 left join user_details ud on ud.rec_id = a.ld_owner " +
                            " left join master_setting p on p.type = 'PNM' and find_in_set(p.master_id, a.ld_product)= 1 and find_in_set(p.client_unit_id, a.client_unit_id)= 1  " +
                            "left join enx_tab2 f on f.Col2 = a.vch_num  and find_in_set(f.client_unit_id, a.client_unit_id)= 1 and f.type = 'VFC' and " +
                            "a.client_unit_id = f.client_unit_id left join master_setting n on n.master_id = f.col7 and n.type = 'NAM' and " +
                            "find_in_set(n.client_unit_id, f.client_unit_id)= 1 left join (select col5 as asg_to,col2 as lead_id from enx_tab2 " +
                            "where type='VFC' and client_unit_id='" + unitid_mst + "'  and vch_num in (select max(vch_num) from enx_tab2 where type = 'VFC' and client_unit_id = '" + unitid_mst + "' group by col2))  b on a.vch_num = b.lead_id   where a.type = 'LED' and a.client_unit_id = '" + unitid_mst + "' and a.lead_con = '" + leadcon + "' " + cond + "  " +
                            " group by  a.ld_product ,(a.client_id || a.client_unit_id || a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.type),a.vch_num," +
                            "to_char(convert_tz(a.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') ,a.cust_name, nvl(a.refered_by, '-'),c.master_name,d.master_name, ud.first_name" +
                            " || ' ' || replace(ud.middle_name, '0', '') || '' || replace(ud.last_name, '0', ''),a.ld_owner,a.ld_status,a.ot_source,a.ct_person," +
                            "trim(cast(a.remark as varchar(1000))),a.cust_id,a.mobile_no,a.emailid ,(a.cp_fname || ' ' || replace(a.cp_mname, '0', '') || ' ' || replace(a.cp_lname, '0', ''))  order by a.vch_num desc";
                        DataTable dt = sgen.getdata(userCode, mq);
                        if (dt.Rows.Count > 0)
                        {
                            mq1 = ""; mq2 = ""; mq3 = "";
                            var dtmin = new DataTable();
                            sgen.SetSession(MyGuid, "Lead_List", dt);
                            if (dt.Rows.Count <= 25)
                            {
                                dtmin = dt;
                                mq1 = "N"; mq2 = "N"; mq3 = dt.Rows.Count.ToString();
                            }
                            else
                            {
                                dtmin = dt.AsEnumerable().Take(25).CopyToDataTable();
                                mq1 = "Y"; mq2 = "Y"; mq3 = "25";
                            }
                            model = new List<Tmodelmain>();
                            foreach (DataRow dr in dt.Rows)
                            {
                                string next = "";
                                if (dr["next_date"].ToString() == "01/01/1900") { next = ""; } else { next = dr["next_date"].ToString(); }
                                model.Add(new Tmodelmain
                                {
                                    Col8 = tm.Col8,
                                    Col9 = tm.Col9,
                                    Col10 = tm.Col10,
                                    Col13 = tm.Col13,
                                    Col14 = tm.Col14,
                                    Col15 = tm.Col15,
                                    Col16 = dr["fstr"].ToString(),
                                    Col17 = dr["lead_no"].ToString(),
                                    Col18 = dr["lead_date"].ToString(),
                                    Col19 = dr["Customer_Name"].ToString(),
                                    Col20 = dr["cust_id"].ToString(),
                                    //Col21 = dr["remark"].ToString(),
                                    //Col22 = dr["refered_by"].ToString(),
                                    //Col23 = dr["ct_person"].ToString(),
                                    Col29 = dr["ct_person"].ToString(),
                                    Col24 = dr["Lead_source"].ToString(),
                                    Col25 = dr["mobile_no"].ToString(),
                                    Col30 = dr["emailid"].ToString(),
                                    Col28 = dr["product"].ToString(),
                                    //Col27 = dr["nxt_fl"].ToString(),
                                    // Col26 = dr["next_date"].ToString(),
                                    Col26 = next,
                                    TList1 = mod1,
                                    TList2 = mod2,
                                    TList3 = mod3,
                                    TList4 = mod4,
                                    TList5 = mod5,
                                    TList6 = mod6,
                                    SelectedItems1 = System.String.Join(",", dtmin.Rows.OfType<DataRow>().Select(r => dr["ld_status"].ToString()).Distinct()).Split(','),
                                    SelectedItems2 = System.String.Join(",", dtmin.Rows.OfType<DataRow>().Select(r => dr["ld_owner"].ToString()).Distinct()).Split(','),
                                    SelectedItems5 = System.String.Join(",", dtmin.Rows.OfType<DataRow>().Select(r => dr["ct_person"].ToString()).Distinct()).Split(','),
                                    SelectedItems3 = new string[] { "" },
                                    SelectedItems4 = new string[] { "" },
                                    SelectedItems6 = new string[] { "" }
                                });
                            }
                        }
                        #endregion
                    }
                    else
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'Record Not Saved', 0);";
                    }
                }
                else if (command.Trim() == "Load More Data")
                {
                    int cnt = 0, totcnt = 0, skipcnt = 0;
                    DataTable dt = (DataTable)sgen.GetSession(MyGuid, "Lead_List");
                    if (dt.Rows.Count > 0)
                    {
                        var dtmin = new DataTable();
                        model[0].Col40 = "N";//hf_btnshow
                        skipcnt = sgen.Make_int(model[0].Col42);
                        cnt = dt.AsEnumerable().Skip(skipcnt).Count();
                        if (cnt > 25)
                        {
                            model[0].Col40 = "Y";//hf_btnshow
                            cnt = skipcnt;
                        }
                        if (model[0].Col41 == "Y")//hf_str
                        {
                            model[0].Col41 = "N";//hf_str
                        }
                        else
                        {
                            model[0].Col41 = "N";//hf_str                                              
                        }
                        totcnt = skipcnt + cnt;
                        model[0].Col42 = totcnt.ToString();//hf_totcnt
                        model[0].Col43 = cnt.ToString();//hf_loadcnt
                        dtmin = dt.AsEnumerable().Skip(skipcnt).Take(cnt).CopyToDataTable();
                        foreach (DataRow dr in dtmin.Rows)
                        {
                            string next = "";
                            if (dr["next_date"].ToString() == "01/01/1900") { next = ""; } else { next = dr["next_date"].ToString(); }
                            model.Add(new Tmodelmain
                            {
                                Col8 = tm.Col8,
                                Col9 = tm.Col9,
                                Col10 = tm.Col10,
                                Col13 = tm.Col13,
                                Col14 = tm.Col14,
                                Col15 = tm.Col15,
                                Col16 = dr["fstr"].ToString(),
                                Col17 = dr["lead_no"].ToString(),
                                Col18 = dr["lead_date"].ToString(),
                                Col19 = dr["Customer_Name"].ToString(),
                                Col20 = dr["cust_id"].ToString(),
                                //Col21 = dr["remark"].ToString(),
                                //Col22 = dr["refered_by"].ToString(),
                                //Col23 = dr["ct_person"].ToString(),
                                Col24 = dr["Lead_source"].ToString(),
                                Col25 = dr["mobile_no"].ToString(),
                                Col28 = dr["product"].ToString(),
                                // Col26 = dr["next_date"].ToString(),
                                Col26 = next,
                                TList1 = mod1,
                                TList2 = mod2,
                                TList3 = mod3,
                                TList4 = mod4,
                                TList5 = mod5,
                                TList6 = mod6,
                                SelectedItems1 = System.String.Join(",", dtmin.Rows.OfType<DataRow>().Select(r => dr["ld_status"].ToString()).Distinct()).Split(','),
                                SelectedItems2 = System.String.Join(",", dtmin.Rows.OfType<DataRow>().Select(r => dr["ld_owner"].ToString()).Distinct()).Split(','),
                                SelectedItems5 = System.String.Join(",", dtmin.Rows.OfType<DataRow>().Select(r => dr["asg_to"].ToString()).Distinct()).Split(','),
                                SelectedItems3 = new string[] { "" },
                                SelectedItems4 = new string[] { "" },
                                SelectedItems6 = new string[] { "" },
                            });
                        }
                    }
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region lead_list_farm
        public ActionResult lead_list_farm()
        {
            FillMst();
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            string defval = "";
            ViewBag.scripCall = "enableForm();";
            model[0].Col10 = "lead_master";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "LED";
            model[0].Col13 = "Update";
            ViewBag.vsave = "";
            #region
            List<SelectListItem> mod1 = new List<SelectListItem>();
            List<SelectListItem> mod2 = new List<SelectListItem>();
            List<SelectListItem> mod3 = new List<SelectListItem>();
            List<SelectListItem> mod4 = new List<SelectListItem>();
            List<SelectListItem> mod5 = new List<SelectListItem>();
            List<SelectListItem> mod6 = new List<SelectListItem>();
            TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
            TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2;
            TempData[MyGuid + "_TList3"] = model[0].TList3 = mod3;
            TempData[MyGuid + "_TList4"] = model[0].TList4 = mod4;
            TempData[MyGuid + "_TList5"] = model[0].TList5 = mod5;
            TempData[MyGuid + "_TList6"] = model[0].TList6 = mod6;
            model[0].SelectedItems1 = new string[] { "" };
            model[0].SelectedItems2 = new string[] { "" };
            model[0].SelectedItems3 = new string[] { "" };
            model[0].SelectedItems4 = new string[] { "" };
            model[0].SelectedItems5 = new string[] { "" };
            model[0].SelectedItems6 = new string[] { "" };
            #endregion
            var tm = model.FirstOrDefault();
            #region  Lead status
            TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.leadstatus(userCode, unitid_mst, out defval);
            TempData[MyGuid + "_TList3"] = model[0].TList1 = mod3 = cmd_Fun.leadstatus(userCode, unitid_mst, out defval);
            model[0].SelectedItems1 = new string[] { defval };
            model[0].SelectedItems3 = new string[] { defval };
            #endregion
            #region  Lead Owner/who attended
            TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2 = cmd_Fun.username_mod(userCode, m_module3);
            TempData[MyGuid + "_TList4"] = model[0].TList4 = mod4 = cmd_Fun.username_mod(userCode, m_module3);
            model[0].SelectedItems2 = new string[] { "" };
            model[0].SelectedItems4 = new string[] { "" };
            #endregion
            #region  assigned to
            mod6 = mod5 = cmd_Fun.username_mod(userCode, m_module3);
            model[0].TList6 = model[0].TList5 = mod5;
            model[0].SelectedItems6 = model[0].SelectedItems5 = new string[] { "" };
            TempData[MyGuid + "_TList6"] = TempData[MyGuid + "_TList5"] = mod5;
            #endregion

            string cond = "";
            var leadcon = "";
            if (mid_mst == "40005.4")
            {
                model[0].Col9 = "LIST OF CLOSED LEADS";
                leadcon = "C";
            }
            else if (mid_mst == "40005.5")
            {
                if (role_mst != "owner")
                {
                    // cond = "and a.ct_person='" + userid_mst + "'";
                    cond = "and b.asg_to='" + userid_mst + "'";
                }
                model[0].Col9 = "LIST OF LEADS (ASSIGNED)";
                leadcon = "N";
            }
            else if (mid_mst == "40005.6")
            {
                model[0].Col9 = "LIST OF LEADS (TOTAL)";
                leadcon = "N";
            }
            else if (mid_mst == "40005.9")
            {
                model[0].Col9 = "LIST OF LEADS FARMS (TOTAL)";
                leadcon = "N";
            }
            else
            {
                if (role_mst != "owner")
                {
                    cond = "and a.ent_by='" + userid_mst + "'";
                }
                model[0].Col9 = "LIST OF LEADS (USERS)";
                leadcon = "N";
            }
            //mq = "select * from (select nvl(max(b.asg_to),ct_person) asg_to,nvl(to_char( max(convert_tz(f.date2, 'UTC', '" + sgen.Gettimezone() + "')),'" + sgen.Getsqldateformat() + "'),'-') as next_date," +
            //    "(a.cp_fname || ' ' || replace(a.cp_mname, '0', '') || ' ' || replace(a.cp_lname,'0','')) cpname,a.ld_product,group_concat(distinct p.master_name) as tof," +
            //    "(a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.vch_num as lead_no," +
            //    "to_char(convert_tz(a.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') as dof,a.cust_name as Customer_Name,nvl(a.refered_by, '-') refered_by," +
            //    "c.master_name as Lead_source,d.master_name as lead_status, ud.first_name || ' ' || replace(ud.middle_name, '0', '') || '' || replace(ud.last_name, '0', '') as whoattend," +
            //    "a.ld_owner,a.ld_status,a.ot_source,a.ct_person,trim(cast(a.remark as varchar(1000))) as remark,a.cust_id,(case when (a.mobile_no='0000000000' or a.mobile_no='0') then '-' else a.mobile_no end) mobile_no," +
            //    "(case when a.emailid='ab@ab.ab' then '-' else a.emailid end) emailid from lead_master a " +
            //    "left join master_setting c on a.ld_source = c.master_id and c.type = 'SRC' and find_in_set(c.client_unit_id, a.client_unit_id)= 1 " +
            //    "left join master_setting d on a.ld_status = d.master_id and d.type = 'LST' and find_in_set(d.client_unit_id, a.client_unit_id)= 1 " +
            //    "left join user_details ud on ud.vch_num = a.ld_owner " +
            //    "left join master_setting p on p.type = 'TOF' and find_in_set(p.master_id, a.ld_product)= 1 and find_in_set(p.client_unit_id, a.client_unit_id)= 1 " +
            //    "left join enx_tab2 f on f.Col2 = a.vch_num  and find_in_set(f.client_unit_id, a.client_unit_id)= 1 and f.type = 'VFC' and a.client_unit_id = f.client_unit_id " +
            //    "left join master_setting n on n.master_id = f.col7 and n.type = 'NAM' and find_in_set(n.client_unit_id, f.client_unit_id)= 1 " +
            //    "left join (select col5 as asg_to,col2 as lead_id from enx_tab2 " +
            //    "where type='VFC' and client_unit_id='" + unitid_mst + "'  and vch_num in " +
            //    "(select max(vch_num) from enx_tab2 where type = 'VFC' and client_unit_id = '" + unitid_mst + "' group by col2)) b on a.vch_num = b.lead_id where a.type = 'LED' and a.client_unit_id = '" + unitid_mst + "' and a.lead_con = '" + leadcon + "' " + cond + "  " +
            //    "group by a.ld_product ,(a.client_id || a.client_unit_id || a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.type),a.vch_num," +
            //    "to_char(convert_tz(a.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') ,a.cust_name,nvl(a.refered_by, '-'),c.master_name," +
            //    "d.master_name,ud.first_name || ' ' || replace(ud.middle_name, '0', '') || '' || replace(ud.last_name, '0', ''),a.ld_owner,a.ld_status,a.ot_source,a.ct_person," +
            //    "trim(cast(a.remark as varchar(1000))),a.cust_id,a.mobile_no,a.emailid ,(a.cp_fname || ' ' || replace(a.cp_mname, '0', '') || ' ' || replace(a.cp_lname, '0', '')) " +
            //    "order by a.vch_num desc) tab";

            mq = "select * from (select nvl(max(b.asg_to),ct_person) asg_to,nvl(to_char( max(convert_tz(f.date2, 'UTC', '" + sgen.Gettimezone() + "')),'" + sgen.Getsqldateformat() + "'),'-') next_date," +
                "(a.cp_fname || ' ' || replace(a.cp_mname, '0', '') || ' ' || replace(a.cp_lname, '0', '')) cpname,a.ld_product,nvl(group_concat(distinct p.master_name), '-') tof," +
                "(a.client_id || a.client_unit_id || a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.type) fstr,a.vch_num lead_no," +
                "to_char(convert_tz(a.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') dof,a.cust_name Customer_Name, nvl(a.refered_by, '-') refered_by,c.master_name Lead_source," +
                "d.master_name lead_status, ud.first_name || ' ' || replace(ud.middle_name, '0', '') || '' || replace(ud.last_name, '0', '') whoattend,a.ld_owner," +
                "a.ld_status,a.ot_source,a.ct_person,trim(cast(a.remark as varchar(1000))) remark,a.cust_id,(case when(a.mobile_no = '0000000000' or a.mobile_no = '0') then '-' else a.mobile_no end) mobile_no," +
                "(case when a.emailid = 'ab@ab.ab' then '-' else a.emailid end) emailid from lead_master a " +
                "left join master_setting c on a.ld_source = c.master_id and c.type = 'SRC' and find_in_set(c.client_unit_id, a.client_unit_id)= 1 " +
                "left join master_setting d on a.ld_status = d.master_id and d.type = 'LST' and find_in_set(d.client_unit_id, a.client_unit_id)= 1 " +
                "left join user_details ud on ud.vch_num = a.ld_owner " +
                "left join master_setting p on p.type = 'TOF' and find_in_set(p.master_id, a.tof)= 1 and find_in_set(p.client_unit_id, a.client_unit_id)= 1 " +
                "left join enx_tab2 f on f.Col2 = a.vch_num and find_in_set(f.client_unit_id, a.client_unit_id)= 1 and f.type = 'VFC' and a.client_unit_id = f.client_unit_id " +
                "left join master_setting n on n.master_id = f.col7 and n.type = 'NAM' and find_in_set(n.client_unit_id, f.client_unit_id)= 1 " +
                "left join(select col5 as asg_to,col2 as lead_id from enx_tab2 where type = 'VFC' and client_unit_id = '" + unitid_mst + "' and vch_num in " +
                "(select max(vch_num) from enx_tab2 where type = 'VFC' and client_unit_id = '" + unitid_mst + "' group by col2)) b on a.vch_num = b.lead_id " +
                "where a.type = 'LED' and a.client_unit_id = '" + unitid_mst + "' and a.lead_con = 'N' " +
                "group by a.ld_product,(a.client_id || a.client_unit_id || a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.type),a.vch_num," +
                "to_char(convert_tz(a.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') ,a.cust_name,nvl(a.refered_by, '-'),c.master_name,d.master_name," +
                "ud.first_name || ' ' || replace(ud.middle_name, '0', '') || '' || replace(ud.last_name, '0', ''),a.ld_owner,a.ld_status,a.ot_source," +
                "a.ct_person,trim(cast(a.remark as varchar(1000))),a.cust_id,a.mobile_no,a.emailid," +
                "(a.cp_fname || ' ' || replace(a.cp_mname, '0', '') || ' ' || replace(a.cp_lname, '0', '')) order by a.vch_num desc) tab";

            DataTable dt = sgen.getdata(userCode, mq);
            if (dt.Rows.Count > 0)
            {
                mq1 = ""; mq2 = ""; mq3 = "";
                var dtmin = new DataTable();
                sgen.SetSession(MyGuid, "Lead_List_farm", dt);
                if (dt.Rows.Count <= 25)
                {
                    dtmin = dt;
                    mq1 = "N"; mq2 = "N"; mq3 = dt.Rows.Count.ToString();
                }
                else
                {
                    dtmin = dt.AsEnumerable().Take(25).CopyToDataTable();
                    mq1 = "Y"; mq2 = "Y"; mq3 = "25";
                }
                model = new List<Tmodelmain>();
                foreach (DataRow dr in dtmin.Rows)
                {
                    string next = "";
                    if (dr["next_date"].ToString() == "01/01/1900") { next = ""; } else { next = dr["next_date"].ToString(); }
                    model.Add(new Tmodelmain
                    {
                        Col8 = tm.Col8,
                        Col9 = tm.Col9,
                        Col10 = tm.Col10,
                        Col13 = tm.Col13,
                        Col14 = tm.Col14,
                        Col15 = tm.Col15,
                        Col16 = dr["fstr"].ToString(),
                        Col17 = dr["lead_no"].ToString(),
                        Col18 = dr["dof"].ToString(),
                        Col19 = dr["Customer_Name"].ToString(),
                        Col20 = dr["cust_id"].ToString(),
                        //Col21 = dr["remark"].ToString(),
                        //Col22 = dr["refered_by"].ToString(),
                        //Col23 = dr["ct_person"].ToString(),
                        Col24 = dr["Lead_source"].ToString(),
                        Col25 = dr["mobile_no"].ToString(),
                        Col28 = dr["tof"].ToString(),
                        //Col27 = dr["nxt_fl"].ToString(),
                        //Col26 = dr["next_date"].ToString(),
                        Col26 = next,
                        Col40 = mq1,
                        Col41 = mq2,
                        Col42 = mq3,
                        Col43 = mq3,
                        TList1 = mod1,
                        TList2 = mod2,
                        TList3 = mod3,
                        TList4 = mod4,
                        TList5 = mod5,
                        TList6 = mod6,
                        SelectedItems1 = System.String.Join(",", dtmin.Rows.OfType<DataRow>().Select(r => dr["ld_status"].ToString()).Distinct()).Split(','),
                        SelectedItems2 = System.String.Join(",", dtmin.Rows.OfType<DataRow>().Select(r => dr["ld_owner"].ToString()).Distinct()).Split(','),
                        SelectedItems5 = System.String.Join(",", dtmin.Rows.OfType<DataRow>().Select(r => dr["asg_to"].ToString()).Distinct()).Split(','),
                        SelectedItems3 = new string[] { "" },
                        SelectedItems4 = new string[] { "" },
                        SelectedItems6 = new string[] { "" }
                    });
                }
            }
            return View(model);
        }
        [HttpPost]
        public ActionResult lead_list_farm(List<Tmodelmain> model, string command, string mid)
        {
            try
            {
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();
                #region
                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                List<SelectListItem> mod2 = (List<SelectListItem>)TempData[MyGuid + "_TList2"];
                List<SelectListItem> mod3 = (List<SelectListItem>)TempData[MyGuid + "_TList3"];
                List<SelectListItem> mod4 = (List<SelectListItem>)TempData[MyGuid + "_TList4"];
                List<SelectListItem> mod5 = (List<SelectListItem>)TempData[MyGuid + "_TList5"];
                List<SelectListItem> mod6 = (List<SelectListItem>)TempData[MyGuid + "_TList6"];
                TempData[MyGuid + "_TList3"] = model[0].TList3 = mod3;
                TempData[MyGuid + "_TList4"] = model[0].TList4 = mod4;
                //TempData[MyGuid + "_TList5"] = model[0].TList5;
                TempData[MyGuid + "_TList6"] = model[0].TList6 = mod6;
                TempData[MyGuid + "_TList1"] = mod1;
                TempData[MyGuid + "_TList2"] = mod2;
                TempData[MyGuid + "_TList5"] = mod5;
                //if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                //if (model[0].SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
                if (model[0].SelectedItems3 == null) model[0].SelectedItems3 = new string[] { "" };
                if (model[0].SelectedItems4 == null) model[0].SelectedItems4 = new string[] { "" };
                //if (model[0].SelectedItems5 == null) model[0].SelectedItems5 = new string[] { "" };
                if (model[0].SelectedItems6 == null) model[0].SelectedItems6 = new string[] { "" };
                foreach (var mod in model)
                {
                    mod.TList1 = mod1;
                    mod.TList2 = mod2;
                    mod.TList5 = mod5;
                    if (mod.SelectedItems1 == null) mod.SelectedItems1 = new string[] { "" };
                    if (mod.SelectedItems2 == null) mod.SelectedItems2 = new string[] { "" };
                    if (mod.SelectedItems5 == null) mod.SelectedItems5 = new string[] { "" };
                }
                #endregion
                if (command == "New")
                {
                    return RedirectToAction("lead", "vastu", new { m_id = EncryptDecrypt.Encrypt(@MyGuid) });
                }
                else if (command == "Search")
                {
                    if (sgen.GetSession(MyGuid, "Lead_List_farm") != null)
                    {
                        DataTable dt = new DataTable();
                        DataTable Lead_List = new DataTable();
                        Lead_List = (DataTable)sgen.GetSession(MyGuid, "Lead_List_farm");
                        string condition = "";

                        if (model[0].Col29 != null) { condition = "Customer_Name like '%" + model[0].Col29 + "%'"; }
                        if (model[0].Col30 != null)
                        {
                            if (condition.Equals("")) { condition = "lead_no='" + model[0].Col30 + "'"; }
                            else { condition = condition + " and lead_no='" + model[0].Col30 + "'"; }
                        }
                        if (model[0].Col31 != null)
                        {
                            if (condition.Equals("")) { condition = "dof='" + model[0].Col31 + "'"; }
                            else { condition = condition + " and dof='" + model[0].Col31 + "'"; }
                        }
                        if (model[0].Col32 != null)
                        {
                            if (condition.Equals("")) { condition = "tof like '%" + model[0].Col32 + "%'"; }
                            else { condition = condition + "and tof like '%" + model[0].Col32 + "%'"; }
                        }
                        if (model[0].Col33 != null)
                        {
                            if (condition.Equals("")) { condition = "mobile_no like '%" + model[0].Col33 + "%'"; }
                            else { condition = condition + "and mobile_no like '%" + model[0].Col33 + "%'"; }
                        }
                        if (model[0].Col35 != null)
                        {
                            if (condition.Equals("")) { condition = "lead_source like '%" + model[0].Col35 + "%'"; }
                            else { condition = condition + "and lead_source like '%" + model[0].Col35 + "%'"; }
                        }
                        if ((model[0].SelectedItems3 != null) && (model[0].SelectedItems3.FirstOrDefault() != ""))
                        {
                            if (condition.Equals("")) { condition = "ld_status='" + model[0].SelectedItems3.FirstOrDefault() + "'"; }
                            else { condition = condition + " and ld_status='" + model[0].SelectedItems3.FirstOrDefault() + "'"; }
                        }
                        if ((model[0].SelectedItems4 != null) && (model[0].SelectedItems4.FirstOrDefault() != ""))
                        {
                            if (condition.Equals("")) { condition = "ld_owner='" + model[0].SelectedItems4.FirstOrDefault() + "'"; }
                            else { condition = condition + " and ld_owner='" + model[0].SelectedItems4.FirstOrDefault() + "'"; }
                        }
                        if ((model[0].SelectedItems6 != null) && (model[0].SelectedItems6.FirstOrDefault() != ""))
                        {
                            if (condition.Equals("")) { condition = "asg_to='" + model[0].SelectedItems6.FirstOrDefault() + "'"; }
                            else { condition = condition + " and asg_to='" + model[0].SelectedItems6.FirstOrDefault() + "'"; }
                        }
                        if (model[0].Col34 != null)
                        {
                            if (condition.Equals("")) { condition = "next_date='" + model[0].Col34 + "'"; }
                            else { condition = condition + " and next_date='" + model[0].Col34 + "'"; }
                        }
                        Lead_List.CaseSensitive = false;
                        try
                        {
                            dt = sgen.seekval_dt(Lead_List, condition);
                            DataView dv = dt.DefaultView;
                            dv.Sort = "lead_no desc";
                            dt = dv.ToTable();
                        }
                        catch { dt = new DataTable(); }
                        model = new List<Tmodelmain>();
                        if (dt.Rows.Count > 0)
                        {
                            //tm = model.FirstOrDefault();
                            foreach (DataRow dr in dt.Rows)
                            {
                                string next = "";
                                if (dr["next_date"].ToString() == "01/01/1900") { next = ""; } else { next = dr["next_date"].ToString(); }
                                model.Add(new Tmodelmain
                                {
                                    Col8 = tm.Col8,
                                    Col9 = tm.Col9,
                                    Col10 = tm.Col10,
                                    Col13 = tm.Col13,
                                    Col14 = tm.Col14,
                                    Col15 = tm.Col15,
                                    TList1 = mod1,
                                    TList2 = mod2,
                                    Col16 = dr["fstr"].ToString(),
                                    Col17 = dr["lead_no"].ToString(),
                                    Col18 = dr["dof"].ToString(),
                                    Col19 = dr["Customer_Name"].ToString(),
                                    Col20 = dr["cust_id"].ToString(),
                                    //Col21 = dr["remark"].ToString(),
                                    //Col22 = dr["refered_by"].ToString(),
                                    //Col23 = dr["ct_person"].ToString(),
                                    Col24 = dr["Lead_source"].ToString(),
                                    Col25 = dr["mobile_no"].ToString(),
                                    Col28 = dr["tof"].ToString(),
                                    //Col27 = dr["nxt_fl"].ToString(),
                                    //Col26 = dr["next_date"].ToString(),
                                    Col26 = next,
                                    SelectedItems1 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => dr["ld_status"].ToString()).Distinct()).Split(','),
                                    SelectedItems2 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => dr["ld_owner"].ToString()).Distinct()).Split(','),
                                    SelectedItems5 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => dr["ct_person"].ToString()).Distinct()).Split(','),
                                    TList3 = mod3,
                                    TList4 = mod4,
                                    TList5 = mod5,
                                    TList6 = mod6,
                                    Col29 = tm.Col29,
                                    Col30 = tm.Col30,
                                    Col31 = tm.Col31,
                                    Col32 = tm.Col32,
                                    Col33 = tm.Col33,
                                    Col34 = tm.Col34,
                                    SelectedItems3 = tm.SelectedItems3,
                                    SelectedItems4 = tm.SelectedItems4,
                                    SelectedItems6 = tm.SelectedItems6
                                });
                            }
                        }
                        else
                        {
                            model.Add(new Tmodelmain
                            {
                                Col8 = tm.Col8,
                                Col9 = tm.Col9,
                                Col10 = tm.Col10,
                                Col13 = tm.Col13,
                                Col14 = tm.Col14,
                                Col15 = tm.Col15,
                                TList1 = mod1,
                                TList2 = mod2,
                                TList3 = mod3,
                                TList4 = mod4,
                                TList5 = mod5,
                                TList6 = mod6,
                                Col29 = tm.Col29,
                                Col30 = tm.Col30,
                                Col31 = tm.Col31,
                                Col32 = tm.Col32,
                                Col33 = tm.Col33,
                                Col34 = tm.Col34,
                                SelectedItems3 = tm.SelectedItems3,
                                SelectedItems4 = tm.SelectedItems4,
                                SelectedItems6 = tm.SelectedItems4,
                                SelectedItems1 = new string[] { "" },
                                SelectedItems2 = new string[] { "" },
                                SelectedItems5 = new string[] { "" }
                            });
                            ViewBag.scripCall += "showmsgJS(1, 'Record Not Found', 2);";
                        }
                        TempData[MyGuid + "_Tlist1"] = model[0].TList1;
                        TempData[MyGuid + "_Tlist2"] = model[0].TList2;
                        TempData[MyGuid + "_Tlist5"] = model[0].TList5;
                    }
                }
                else if (command.Trim() == "Save" || command.Trim() == "Update")
                {
                    var tmodel = model.FirstOrDefault();
                    string currdate = sgen.server_datetime(userCode);
                    string cond = "", found = "";
                    DataTable dtstr = new DataTable();
                    isedit = true;
                    vch_num = model[0].Col17;
                    bool Result = false;
                    for (Int32 i = 0; i < model.Count(); i++)
                    {
                        if (model[i].SelectedItems1 == null) model[i].SelectedItems1 = new string[] { "" };
                        if (model[i].SelectedItems2 == null) model[i].SelectedItems2 = new string[] { "" };
                        if (model[i].SelectedItems3 == null) model[i].SelectedItems3 = new string[] { "" };
                        if (model[i].SelectedItems4 == null) model[i].SelectedItems4 = new string[] { "" };
                        mq = "update lead_master set ld_owner='" + model[i].SelectedItems2.FirstOrDefault() + "'," +
                            "ld_status='" + model[i].SelectedItems1.FirstOrDefault() + "' where (client_id||client_unit_id||vch_num||to_char(vch_date,'yyyymmdd')||type)" +
                            "='" + model[i].Col16 + "'";
                        Result = sgen.execute_cmd(userCode, mq);
                    }
                    //bool Result = sgen.Update_data(userCode, dtstr, model[0].Col10.Trim(), tmodel.Col16, isedit);
                    if (Result == true)
                    {
                        vch_num = model[0].Col16;
                        string defval = "";
                        ViewBag.vnew = "";
                        ViewBag.vedit = "";
                        //ViewBag.vsave = "disabled='disabled'";
                        ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                        #region Bind Lead
                        #region  Lead status
                        TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.leadstatus(userCode, unitid_mst, out defval);
                        TempData[MyGuid + "_TList3"] = model[0].TList1 = mod3 = cmd_Fun.leadstatus(userCode, unitid_mst, out defval);
                        model[0].SelectedItems1 = new string[] { defval };
                        model[0].SelectedItems3 = new string[] { defval };
                        #endregion
                        #region  Lead Owner
                        TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2 = cmd_Fun.username_mod(userCode, m_module3);
                        TempData[MyGuid + "_TList4"] = model[0].TList4 = mod4 = cmd_Fun.username_mod(userCode, m_module3);
                        model[0].SelectedItems2 = new string[] { "" };
                        model[0].SelectedItems4 = new string[] { "" };
                        #endregion
                        cond = "";
                        string leadcon = "";
                        if (role_mst != "owner")
                        {
                            cond = "and a.ent_by='" + userid_mst + "'";
                        }
                        if (mid_mst == "40005.4")
                        {
                            leadcon = "C";
                        }
                        else if (mid_mst == "40005.5")
                        {
                            if (role_mst != "owner")
                            {
                                cond = "and b.asg_to='" + userid_mst + "'";
                            }
                            leadcon = "N";
                        }
                        else if (mid_mst == "40005.6" || mid_mst == "40005.9")
                        {
                            leadcon = "N";
                        }
                        else
                        {
                            if (role_mst != "owner")
                            {
                                cond = "and a.ent_by='" + userid_mst + "'";
                            }
                            leadcon = "N";
                        }

                        mq = "select * from (select nvl(max(b.asg_to),ct_person) asg_to,nvl(to_char( max(convert_tz(f.date2, 'UTC', '" + sgen.Gettimezone() + "')),'" + sgen.Getsqldateformat() + "'),'-') next_date," +
    "(a.cp_fname || ' ' || replace(a.cp_mname, '0', '') || ' ' || replace(a.cp_lname, '0', '')) cpname,a.ld_product,nvl(group_concat(distinct p.master_name), '-') tof," +
    "(a.client_id || a.client_unit_id || a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.type) fstr,a.vch_num lead_no," +
    "to_char(convert_tz(a.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') dof,a.cust_name Customer_Name, nvl(a.refered_by, '-') refered_by,c.master_name Lead_source," +
    "d.master_name lead_status, ud.first_name || ' ' || replace(ud.middle_name, '0', '') || '' || replace(ud.last_name, '0', '') whoattend,a.ld_owner," +
    "a.ld_status,a.ot_source,a.ct_person,trim(cast(a.remark as varchar(1000))) remark,a.cust_id,(case when(a.mobile_no = '0000000000' or a.mobile_no = '0') then '-' else a.mobile_no end) mobile_no," +
    "(case when a.emailid = 'ab@ab.ab' then '-' else a.emailid end) emailid from lead_master a " +
    "left join master_setting c on a.ld_source = c.master_id and c.type = 'SRC' and find_in_set(c.client_unit_id, a.client_unit_id)= 1 " +
    "left join master_setting d on a.ld_status = d.master_id and d.type = 'LST' and find_in_set(d.client_unit_id, a.client_unit_id)= 1 " +
    "left join user_details ud on ud.vch_num = a.ld_owner " +
    "left join master_setting p on p.type = 'TOF' and find_in_set(p.master_id, a.tof)= 1 and find_in_set(p.client_unit_id, a.client_unit_id)= 1 " +
    "left join enx_tab2 f on f.Col2 = a.vch_num and find_in_set(f.client_unit_id, a.client_unit_id)= 1 and f.type = 'VFC' and a.client_unit_id = f.client_unit_id " +
    "left join master_setting n on n.master_id = f.col7 and n.type = 'NAM' and find_in_set(n.client_unit_id, f.client_unit_id)= 1 " +
    "left join(select col5 as asg_to,col2 as lead_id from enx_tab2 where type = 'VFC' and client_unit_id = '" + unitid_mst + "' and vch_num in " +
    "(select max(vch_num) from enx_tab2 where type = 'VFC' and client_unit_id = '" + unitid_mst + "' group by col2)) b on a.vch_num = b.lead_id " +
    "where a.type = 'LED' and a.client_unit_id = '" + unitid_mst + "' and a.lead_con = 'N' " +
    "group by a.ld_product,(a.client_id || a.client_unit_id || a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.type),a.vch_num," +
    "to_char(convert_tz(a.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') ,a.cust_name,nvl(a.refered_by, '-'),c.master_name,d.master_name," +
    "ud.first_name || ' ' || replace(ud.middle_name, '0', '') || '' || replace(ud.last_name, '0', ''),a.ld_owner,a.ld_status,a.ot_source," +
    "a.ct_person,trim(cast(a.remark as varchar(1000))),a.cust_id,a.mobile_no,a.emailid," +
    "(a.cp_fname || ' ' || replace(a.cp_mname, '0', '') || ' ' || replace(a.cp_lname, '0', '')) order by a.vch_num desc) tab";

                        //mq = "select max(b.asg_to) asg_to ,nvl(to_char( max(convert_tz(f.date2, 'UTC', '" + sgen.Gettimezone() + "')),'" + sgen.Getsqldateformat() + "'),'-') as next_date,(a.cp_fname || ' ' || " +
                        //    "replace(a.cp_mname, '0', '') || ' ' || replace(a.cp_lname,'0','')) cpname , a.ld_product,group_concat(distinct p.master_name) as product" +
                        //    ", (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr, a.vch_num as lead_no,to_char(convert_tz(a.vch_date," +
                        //    " 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') as lead_date,a.cust_name as Customer_Name, nvl(a.refered_by, '-') refered_by ,c.master_name as Lead_source," +
                        //    "d.master_name as lead_status, ud.first_name || ' ' || replace(ud.middle_name, '0', '') || '' || replace(ud.last_name, '0', '')as lead_owner," +
                        //    "a.ld_owner,a.ld_status,a.ot_source,a.ct_person,trim(cast(a.remark as varchar(1000))) as remark,a.cust_id,(case when (a.mobile_no='0000000000' or a.mobile_no='0') then '-' else a.mobile_no end) mobile_no,(case when a.emailid='ab@ab.ab' then '-' else a.emailid end) emailid from  lead_master a  left join master_setting c " +
                        //    "on a.ld_source = c.master_id and c.type = 'SRC' and find_in_set(c.client_unit_id, a.client_unit_id)= 1 left join master_setting d on a.ld_status " +
                        //    "= d.master_id and d.type = 'LST' and find_in_set(d.client_unit_id, a.client_unit_id)= 1 left join user_details ud on ud.rec_id = a.ld_owner " +
                        //    " left join master_setting p on p.type = 'PNM' and find_in_set(p.master_id, a.ld_product)= 1 and find_in_set(p.client_unit_id, a.client_unit_id)= 1  " +
                        //    "left join enx_tab2 f on f.Col2 = a.vch_num  and find_in_set(f.client_unit_id, a.client_unit_id)= 1 and f.type = 'VFC' and " +
                        //    "a.client_unit_id = f.client_unit_id left join master_setting n on n.master_id = f.col7 and n.type = 'NAM' and " +
                        //    "find_in_set(n.client_unit_id, f.client_unit_id)= 1 left join (select col5 as asg_to,col2 as lead_id from enx_tab2 " +
                        //    "where type='VFC' and client_unit_id='" + unitid_mst + "'  and vch_num in (select max(vch_num) from enx_tab2 where type = 'VFC' and client_unit_id = '" + unitid_mst + "' group by col2))  b on a.vch_num = b.lead_id   where a.type = 'LED' and a.client_unit_id = '" + unitid_mst + "' and a.lead_con = '" + leadcon + "' " + cond + "  " +
                        //    " group by  a.ld_product ,(a.client_id || a.client_unit_id || a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.type),a.vch_num," +
                        //    "to_char(convert_tz(a.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') ,a.cust_name, nvl(a.refered_by, '-'),c.master_name,d.master_name, ud.first_name" +
                        //    " || ' ' || replace(ud.middle_name, '0', '') || '' || replace(ud.last_name, '0', ''),a.ld_owner,a.ld_status,a.ot_source,a.ct_person," +
                        //    "trim(cast(a.remark as varchar(1000))),a.cust_id,a.mobile_no,a.emailid ,(a.cp_fname || ' ' || replace(a.cp_mname, '0', '') || ' ' || replace(a.cp_lname, '0', ''))  order by a.vch_num desc";
                        DataTable dt = sgen.getdata(userCode, mq);
                        if (dt.Rows.Count > 0)
                        {
                            mq1 = ""; mq2 = ""; mq3 = "";
                            var dtmin = new DataTable();
                            sgen.SetSession(MyGuid, "Lead_List_farm", dt);
                            if (dt.Rows.Count <= 25)
                            {
                                dtmin = dt;
                                mq1 = "N"; mq2 = "N"; mq3 = dt.Rows.Count.ToString();
                            }
                            else
                            {
                                dtmin = dt.AsEnumerable().Take(25).CopyToDataTable();
                                mq1 = "Y"; mq2 = "Y"; mq3 = "25";
                            }
                            model = new List<Tmodelmain>();
                            foreach (DataRow dr in dt.Rows)
                            {
                                string next = "";
                                if (dr["next_date"].ToString() == "01/01/1900") { next = ""; } else { next = dr["next_date"].ToString(); }
                                model.Add(new Tmodelmain
                                {
                                    Col8 = tm.Col8,
                                    Col9 = tm.Col9,
                                    Col10 = tm.Col10,
                                    Col13 = tm.Col13,
                                    Col14 = tm.Col14,
                                    Col15 = tm.Col15,
                                    Col16 = dr["fstr"].ToString(),
                                    Col17 = dr["lead_no"].ToString(),
                                    Col18 = dr["dof"].ToString(),
                                    Col19 = dr["Customer_Name"].ToString(),
                                    Col20 = dr["cust_id"].ToString(),
                                    //Col21 = dr["remark"].ToString(),
                                    //Col22 = dr["refered_by"].ToString(),
                                    //Col23 = dr["ct_person"].ToString(),
                                    Col29 = dr["ct_person"].ToString(),
                                    Col24 = dr["Lead_source"].ToString(),
                                    Col25 = dr["mobile_no"].ToString(),
                                    Col30 = dr["emailid"].ToString(),
                                    Col28 = dr["tof"].ToString(),
                                    //Col27 = dr["nxt_fl"].ToString(),
                                    // Col26 = dr["next_date"].ToString(),
                                    Col26 = next,
                                    TList1 = mod1,
                                    TList2 = mod2,
                                    TList3 = mod3,
                                    TList4 = mod4,
                                    TList5 = mod5,
                                    TList6 = mod6,
                                    SelectedItems1 = System.String.Join(",", dtmin.Rows.OfType<DataRow>().Select(r => dr["ld_status"].ToString()).Distinct()).Split(','),
                                    SelectedItems2 = System.String.Join(",", dtmin.Rows.OfType<DataRow>().Select(r => dr["ld_owner"].ToString()).Distinct()).Split(','),
                                    SelectedItems5 = System.String.Join(",", dtmin.Rows.OfType<DataRow>().Select(r => dr["ct_person"].ToString()).Distinct()).Split(','),
                                    SelectedItems3 = new string[] { "" },
                                    SelectedItems4 = new string[] { "" },
                                    SelectedItems6 = new string[] { "" }
                                });
                            }
                        }
                        #endregion
                    }
                    else
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'Record Not Saved', 0);";
                    }
                }
                else if (command.Trim() == "Load More Data")
                {
                    int cnt = 0, totcnt = 0, skipcnt = 0;
                    DataTable dt = (DataTable)sgen.GetSession(MyGuid, "Lead_List_farm");
                    if (dt.Rows.Count > 0)
                    {
                        var dtmin = new DataTable();
                        model[0].Col40 = "N";//hf_btnshow
                        skipcnt = sgen.Make_int(model[0].Col42);
                        cnt = dt.AsEnumerable().Skip(skipcnt).Count();
                        if (cnt > 25)
                        {
                            model[0].Col40 = "Y";//hf_btnshow
                            cnt = skipcnt;
                        }
                        if (model[0].Col41 == "Y")//hf_str
                        {
                            model[0].Col41 = "N";//hf_str
                        }
                        else
                        {
                            model[0].Col41 = "N";//hf_str                                              
                        }
                        totcnt = skipcnt + cnt;
                        model[0].Col42 = totcnt.ToString();//hf_totcnt
                        model[0].Col43 = cnt.ToString();//hf_loadcnt
                        dtmin = dt.AsEnumerable().Skip(skipcnt).Take(cnt).CopyToDataTable();
                        foreach (DataRow dr in dtmin.Rows)
                        {
                            string next = "";
                            if (dr["next_date"].ToString() == "01/01/1900") { next = ""; } else { next = dr["next_date"].ToString(); }
                            model.Add(new Tmodelmain
                            {
                                Col8 = tm.Col8,
                                Col9 = tm.Col9,
                                Col10 = tm.Col10,
                                Col13 = tm.Col13,
                                Col14 = tm.Col14,
                                Col15 = tm.Col15,
                                Col16 = dr["fstr"].ToString(),
                                Col17 = dr["lead_no"].ToString(),
                                Col18 = dr["dof"].ToString(),
                                Col19 = dr["Customer_Name"].ToString(),
                                Col20 = dr["cust_id"].ToString(),
                                //Col21 = dr["remark"].ToString(),
                                //Col22 = dr["refered_by"].ToString(),
                                //Col23 = dr["ct_person"].ToString(),
                                Col24 = dr["Lead_source"].ToString(),
                                Col25 = dr["mobile_no"].ToString(),
                                Col28 = dr["tof"].ToString(),
                                // Col26 = dr["next_date"].ToString(),
                                Col26 = next,
                                TList1 = mod1,
                                TList2 = mod2,
                                TList3 = mod3,
                                TList4 = mod4,
                                TList5 = mod5,
                                TList6 = mod6,
                                SelectedItems1 = System.String.Join(",", dtmin.Rows.OfType<DataRow>().Select(r => dr["ld_status"].ToString()).Distinct()).Split(','),
                                SelectedItems2 = System.String.Join(",", dtmin.Rows.OfType<DataRow>().Select(r => dr["ld_owner"].ToString()).Distinct()).Split(','),
                                SelectedItems5 = System.String.Join(",", dtmin.Rows.OfType<DataRow>().Select(r => dr["asg_to"].ToString()).Distinct()).Split(','),
                                SelectedItems3 = new string[] { "" },
                                SelectedItems4 = new string[] { "" },
                                SelectedItems6 = new string[] { "" },
                            });
                        }
                    }
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region lead_status 
        public ActionResult lead_status()
        {
            FillMst();
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            ViewBag.vsave = "";
            ViewBag.scripCall = "enableForm();";
            model[0].Col9 = "LEAD STATUS SETTING";
            model[0].Col10 = "master_setting";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "LST";
            List<SelectListItem> mod1 = new List<SelectListItem>();

            model[0].SelectedItems1 = new string[] { "" };
            TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;

            var tm = model.FirstOrDefault();
            mq = "select a.client_name desp, a.OPTIONAL_SUBJECT, a.SECTION_STRENGTH,a.sectiontype,a.rec_id, a.client_id,a.client_unit_id,to_char(a.master_entdate,'" + sgen.GetSaveSqlDateFormat() + "') as ent_date,a.master_editby, (a.master_id||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.master_id as Doc_No,a.master_name as Name," +
                   "a.status Status," +
                   "(b.First_name|| ' '|| nvl(b.middle_name, '')|| ' '|| b.last_name) as Ent_By,to_char(convert_tz(a.master_EntDate, 'UTC', '" + sgen.Gettimezone() + "')," +
                   " '" + sgen.Getsqldateformat() + "') as Ent_Date,a.client_id Company_id,a.client_unit_id Unit_id  from master_setting a left join user_details b on a.master_entby " +
                   "= b.vch_num and b.type = 'CPR' where a.type in ('LST')  and find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 order by a.master_id asc";
            DataTable dt = sgen.getdata(userCode, mq);
            if (dt.Rows.Count > 0)
            {
                DataTable dt1 = sgen.getdata(userCode, "SELECT rownum FROM XMLTABLE('1 to " + dt.Rows.Count + "')");
                TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1 = sgen.dt_to_selectlist(dt1);

                model = new List<Tmodelmain>();
                foreach (DataRow dr in dt.Rows)
                {
                    Boolean cnt = false, deft = false;
                    if (dr["OPTIONAL_SUBJECT"].ToString() == "Y") { cnt = true; }
                    if (dr["SECTION_STRENGTH"].ToString() == "Y") { deft = true; }
                    model.Add(new Tmodelmain
                    {
                        Col1 = dr["client_id"].ToString(),
                        Col2 = dr["client_unit_id"].ToString(),
                        Col3 = dr["master_editby"].ToString(),
                        Col4 = dr["ent_date"].ToString(),
                        Col5 = dr["master_editby"].ToString(),
                        Col6 = dr["ent_date"].ToString(),
                        Col7 = dr["rec_id"].ToString(),
                        Col8 = "(master_id|| to_char(vch_date, 'yyyymmdd')|| type) = '" + dr["fstr"].ToString() + "'",
                        Col9 = tm.Col9,
                        Col10 = tm.Col10,
                        Col11 = tm.Col11,
                        Col12 = tm.Col12,
                        Col13 = tm.Col13,
                        Col14 = tm.Col14,
                        Col15 = tm.Col15,
                        Col16 = dr["Doc_No"].ToString(),
                        Col18 = dr["fstr"].ToString(),
                        Col17 = dr["Name"].ToString(),
                        Col19 = dr["status"].ToString(),
                        Col20 = dr["desp"].ToString(),
                        Chk1 = cnt,
                        Chk2 = deft,
                        TList1 = mod1,
                        SelectedItems1 = dr["sectiontype"].ToString().Split(','),
                    });
                }
            }
            return View(model);
        }
        [HttpPost]
        public ActionResult lead_status(List<Tmodelmain> model, string command, string mid)
        {
            try
            {
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();
                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_Tlist1"];

                TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1;
                //if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                foreach (var mod in model)
                {
                    mod.TList1 = mod1;
                    if (mod.SelectedItems1 == null) mod.SelectedItems1 = new string[] { "" };
                }
                if (command == "New")
                {
                    model = getnew(model);
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command.Trim() == "Save" || command.Trim() == "Update")
                {
                    int cntconv = 0, cntdeft = 0;
                    var tmodel = model.FirstOrDefault();
                    string currdate = sgen.server_datetime_local(userCode);
                    string ent_date = sgen.Savedate(currdate, true);
                    DataTable dtsample = new DataTable();
                    dtsample.Columns.Add("Contents", typeof(string));
                    dtsample.Columns.Add("position", typeof(Int32));
                    for (int i = 0; i < model.Count; i++)
                    {
                        DataRow dr = dtsample.NewRow();
                        dr["Contents"] = model[i].Col17;
                        if (model[i].SelectedItems1.FirstOrDefault() == "") dr["position"] = 0;
                        else
                        {
                            dr["position"] = model[i].SelectedItems1.FirstOrDefault();
                        }
                        if (model[i].Chk1 == true)
                        { cntconv = cntconv + 1; }
                        if (model[i].Chk2 == true)
                        { cntdeft = cntdeft + 1; }
                        if (sgen.Make_int(dr["position"].ToString()) != 0)
                        {
                            dtsample.Rows.Add(dr);
                        }
                    }
                    if ((cntdeft > 1))
                    {
                        ViewBag.scripCall = "showmsgJS(1, 'Only One Status Can Be Set Default', 2);";
                        goto END;
                    }
                    if ((cntconv > 1))
                    {
                        ViewBag.scripCall = "showmsgJS(1, 'Only One Status Can Be Converted', 2);";
                        goto END;
                    }
                    if (dtsample.Rows.Count > 0)
                    {
                        DataView dv = dtsample.DefaultView;
                        dv.Sort = "position";
                        dtsample = dv.ToTable();
                    }
                    var duplicates = dtsample.AsEnumerable()
                  .Select(dr => dr.Field<int>("position"))
                  .GroupBy(x => x)
                  .Where(g => g.Count() > 1)
                  .Select(g => g.Key)
                  .ToList();
                    if (duplicates.Count > 0)
                    {
                        ViewBag.scripCall = "showmsgJS(1, 'Please Reset Position', 2);";
                        goto END;
                    }
                    DataTable dtstr = new DataTable();
                    dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                    for (Int32 i = 0; i < model.Count; i++)
                    {
                        dtstr = new DataTable();
                        dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                        string cnt = "N", deft = "N";
                        DataRow dr = dtstr.NewRow();
                        if (model[i].Chk1 == true) cnt = "Y";
                        if (model[i].Chk2 == true) deft = "Y";
                        dr["master_id"] = model[i].Col16;
                        dr["status"] = model[i].Col19;
                        dr["client_name"] = model[i].Col20;
                        dr["master_name"] = System.Threading.Thread.CurrentThread.CurrentCulture.TextInfo.ToTitleCase(model[i].Col17.ToLower());
                        dr["master_type"] = "0";
                        dr["master_entby"] = model[0].Col3;
                        dr["master_entdate"] = model[0].Col4;
                        dr["client_id"] = model[0].Col1;
                        dr["client_unit_id"] = model[0].Col2;
                        dr["rec_id"] = model[i].Col7;
                        dr["type"] = model[0].Col12;
                        dr["master_editby"] = userid_mst;
                        dr["master_editdate"] = ent_date;
                        dr["OPTIONAL_SUBJECT"] = cnt;
                        dr["SECTION_STRENGTH"] = deft;
                        dr["sectiontype"] = model[i].SelectedItems1.FirstOrDefault();
                        dtstr.Rows.Add(dr);
                        res = sgen.Update_data_fast1(userCode, dtstr, model[0].Col10.Trim(), model[i].Col8, true);
                    }
                    if (res)
                    {
                        List<string> apps = new List<string>();
                        foreach (var key in HttpContext.Application.Keys)
                        {
                            if (key.ToString().ToUpper().Contains("_U_" + userCode + ""))
                            {
                                apps.Add(key.ToString());
                            }
                        }
                        foreach (var ap in apps)
                        {
                            HttpContext.Application[ap.ToString()] = null;
                        }

                        model = new List<Tmodelmain>();
                        tmodel.Col16 = "";
                        tmodel.Col18 = "";
                        tmodel.Col20 = "";
                        tmodel.Col21 = "";
                        tmodel.Col13 = "Save";
                        tmodel.Col100 = "Save & New";
                        tmodel.TList1 = mod1;
                        tmodel.SelectedItems1 = new string[] { "" };
                        model.Add(tmodel);
                        ViewBag.vnew = "";
                        ViewBag.vedit = "";
                        ViewBag.vsave = "disabled='disabled'";
                        ViewBag.vsavenew = "disabled='disabled'";
                        ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                    }
                END:;
                }
                TempData[MyGuid + "_Tlist1"] = model.FirstOrDefault().TList1;
                foreach (var tm1 in model)
                {
                    tm1.TList1 = mod1;
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region pr_lead
        [HttpPost]
        public ActionResult pr_lead(String model1, string command, string mid, HttpPostedFileBase[] upd1)
        {
            FillMst(MyGuid);
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = sgen.Make_Model(model1);
            var tm = model.FirstOrDefault();
            List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_0Tlist1"];
            List<SelectListItem> mod2 = (List<SelectListItem>)TempData[MyGuid + "_0Tlist2"];
            List<SelectListItem> mod3 = (List<SelectListItem>)TempData[MyGuid + "_0Tlist3"];
            List<SelectListItem> mod4 = (List<SelectListItem>)TempData[MyGuid + "_0Tlist4"];
            List<SelectListItem> mod5 = (List<SelectListItem>)TempData[MyGuid + "_0Tlist5"];
            List<SelectListItem> mod6 = (List<SelectListItem>)TempData[MyGuid + "_0Tlist6"];
            List<SelectListItem> mod7 = (List<SelectListItem>)TempData[MyGuid + "_0Tlist7"];
            List<SelectListItem> mod8 = (List<SelectListItem>)TempData[MyGuid + "_0Tlist8"];
            List<SelectListItem> mod9 = (List<SelectListItem>)TempData[MyGuid + "_0Tlist9"];
            List<SelectListItem> mod10 = (List<SelectListItem>)TempData[MyGuid + "_0Tlist10"];
            List<SelectListItem> mod11 = (List<SelectListItem>)TempData[MyGuid + "_0Tlist11"];
            List<SelectListItem> mod12 = (List<SelectListItem>)TempData[MyGuid + "_0Tlist12"];
            List<SelectListItem> mod13 = (List<SelectListItem>)TempData[MyGuid + "_0Tlist13"];
            List<SelectListItem> mod14 = (List<SelectListItem>)TempData[MyGuid + "_0Tlist14"];
            List<SelectListItem> mod15 = (List<SelectListItem>)TempData[MyGuid + "_0Tlist15"];
            TempData[MyGuid + "_0Tlist1"] = model[0].LTM1[0].TList1 = mod1;
            TempData[MyGuid + "_0Tlist2"] = model[0].LTM1[0].TList2 = mod2;
            TempData[MyGuid + "_0Tlist3"] = model[0].LTM1[0].TList3 = mod3;
            TempData[MyGuid + "_0Tlist4"] = model[0].LTM1[0].TList4 = mod4;
            TempData[MyGuid + "_0Tlist5"] = model[0].LTM1[0].TList5 = mod5;
            TempData[MyGuid + "_0Tlist6"] = model[0].LTM1[0].TList6 = mod6;
            TempData[MyGuid + "_0Tlist7"] = model[0].LTM1[0].TList7 = mod7;
            TempData[MyGuid + "_0Tlist8"] = model[0].LTM1[0].TList8 = mod8;
            TempData[MyGuid + "_0Tlist9"] = model[0].LTM1[0].TList9 = mod9;
            TempData[MyGuid + "_0Tlist10"] = model[0].LTM1[0].TList10 = mod10;
            TempData[MyGuid + "_0Tlist11"] = model[0].LTM1[0].TList11 = mod11;
            TempData[MyGuid + "_0Tlist12"] = model[0].LTM1[0].TList12 = mod12;
            TempData[MyGuid + "_0Tlist13"] = model[0].LTM1[0].TList13 = mod13;
            TempData[MyGuid + "_0Tlist14"] = model[0].LTM1[0].TList14 = mod14;
            TempData[MyGuid + "_0Tlist15"] = model[0].LTM1[0].TList15 = mod15;

            if (model[0].LTM1[0].SelectedItems1 == null) model[0].LTM1[0].SelectedItems1 = new string[] { "" };
            if (model[0].LTM1[0].SelectedItems2 == null) model[0].LTM1[0].SelectedItems2 = new string[] { "" };
            if (model[0].LTM1[0].SelectedItems3 == null) model[0].LTM1[0].SelectedItems3 = new string[] { "" };
            if (model[0].LTM1[0].SelectedItems4 == null) model[0].LTM1[0].SelectedItems4 = new string[] { "" };
            if (model[0].LTM1[0].SelectedItems5 == null) model[0].LTM1[0].SelectedItems5 = new string[] { "" };
            if (model[0].LTM1[0].SelectedItems6 == null) model[0].LTM1[0].SelectedItems6 = new string[] { "" };
            if (model[0].LTM1[0].SelectedItems7 == null) model[0].LTM1[0].SelectedItems7 = new string[] { "" };
            if (model[0].LTM1[0].SelectedItems8 == null) model[0].LTM1[0].SelectedItems8 = new string[] { "" };
            if (model[0].LTM1[0].SelectedItems9 == null) model[0].LTM1[0].SelectedItems9 = new string[] { "" };
            if (model[0].LTM1[0].SelectedItems10 == null) model[0].LTM1[0].SelectedItems10 = new string[] { "" };
            if (model[0].LTM1[0].SelectedItems11 == null) model[0].LTM1[0].SelectedItems11 = new string[] { "" };
            if (model[0].LTM1[0].SelectedItems12 == null) model[0].LTM1[0].SelectedItems12 = new string[] { "" };
            if (model[0].LTM1[0].SelectedItems13 == null) model[0].LTM1[0].SelectedItems13 = new string[] { "" };
            if (model[0].LTM1[0].SelectedItems14 == null) model[0].LTM1[0].SelectedItems14 = new string[] { "" };
            if (model[0].LTM1[0].SelectedItems15 == null) model[0].LTM1[0].SelectedItems15 = new string[] { "" };
            {
                try
                {
                    var tmodel = model.FirstOrDefault();
                    string currdate = sgen.server_datetime(userCode);
                    string cond = "", found = "";
                    DataTable dtstr = new DataTable();
                    //dtstr = sgen.getdata(userCode, "select * from " + model[0].Col10 + " WHERE 1=2");
                    dtstr = cmd_Fun.GetStructure(userCode, model[0].LTM1[0].Col10.Trim());
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        isedit = true;
                        vch_num = model[0].LTM1[0].Col16;
                    }
                    {
                        DataRow dr = dtstr.NewRow();
                        dr["rec_id"] = "0";
                        dr["type"] = model[0].LTM1[0].Col12;
                        dr["vch_num"] = vch_num.Trim();
                        dr["vch_date"] = currdate;
                        dr["cust_id"] = model[0].LTM1[0].Col18;      //Party 
                        dr["cust_name"] = model[0].LTM1[0].Col19;      //Party name
                        if ((model[0].LTM1[0].Col18 == null) || (model[0].LTM1[0].Col18 == "0"))
                        { dr["cust_name"] = model[0].LTM1[0].Col58; }
                        dr["ld_owner"] = model[0].LTM1[0].SelectedItems1.FirstOrDefault(); //lead owner
                        dr["ld_source"] = model[0].LTM1[0].SelectedItems2.FirstOrDefault(); //lead source
                        dr["ld_status"] = model[0].LTM1[0].SelectedItems3.FirstOrDefault(); //lead status
                        dr["ot_source"] = model[0].LTM1[0].Col20;//Other Lead Source
                        dr["remark"] = model[0].LTM1[0].Col21;//Remark
                        dr["ct_person"] = model[0].LTM1[0].SelectedItems4.FirstOrDefault();// contact Person
                        if (MyGuid == "") MyGuid = model[0].LTM1[0].Col15;
                        dr["ld_product"] = string.Join(",", model[0].LTM1[0].SelectedItems5);// product
                        dr["bsn_type"] = string.Join(",", model[0].LTM1[0].SelectedItems7);// Business type   
                        dr["refered_by"] = model[0].LTM1[0].Col22;// contact Person
                        dr["country"] = model[0].LTM1[0].Col40;// country id
                        dr["state"] = model[0].LTM1[0].Col41;// state id
                        dr["city"] = model[0].LTM1[0].Col42;// rec id
                        dr["pincode"] = model[0].LTM1[0].Col26;// pincode
                        dr["address"] = model[0].LTM1[0].Col27;// address
                        dr["cp_fname"] = model[0].LTM1[0].Col28;// contact Person first name
                        dr["cp_mname"] = model[0].LTM1[0].Col29;// contact Person middle name
                        dr["cp_lname"] = model[0].LTM1[0].Col30;// contact Person last name
                        dr["desig"] = model[0].LTM1[0].Col31;// contact Person Designation
                        dr["dept"] = model[0].LTM1[0].Col32;// contact Person departmnet
                        dr["emailid"] = model[0].LTM1[0].Col33;// contact Person Email
                        dr["mobile_no"] = model[0].LTM1[0].Col34;// contact Person moblie
                        dr["contact_no"] = model[0].LTM1[0].Col35;// contact Person cont
                        dr["al_contact"] = model[0].LTM1[0].Col36;// contact Person alternate no
                        dr["dob"] = sgen.Make_date_S(model[0].LTM1[0].Col37);// contact Person dob
                        dr["doa"] = sgen.Make_date_S(model[0].LTM1[0].Col38);// contact Person doa
                        dr["cp_add"] = model[0].LTM1[0].Col39;// contact Person address
                        dr["cp_id"] = model[0].LTM1[0].SelectedItems6.FirstOrDefault();// contact person ref id
                        dr["client_type"] = model[0].LTM1[0].SelectedItems8.FirstOrDefault();// acc_type
                        dr["ploc"] = model[0].LTM1[0].SelectedItems9.FirstOrDefault();// acc_type
                        dr["ref_type"] = model[0].LTM1[0].Col43;//  ref type
                        dr["cp_ref_type"] = model[0].LTM1[0].Col44;//  ref type
                        dr["cpcontother"] = model[0].LTM1[0].Col78;//other contact no
                        dr["cpemailother"] = model[0].LTM1[0].Col79;//other email id
                        dr["pr_loc"] = model[0].LTM1[0].Col80;//ploc
                        dr["budget"] = model[0].LTM1[0].Col81;//budget
                        dr["funding"] = model[0].LTM1[0].Col82;//funding
                        dr["dof"] = sgen.Make_date_S(model[0].LTM1[0].Col83);//dof
                        dr["pax"] = model[0].LTM1[0].Col84;//noofpax
                        dr["lead_con"] = "N";
                        dr["cp_gender"] = model[0].LTM1[0].SelectedItems11.FirstOrDefault();// contact gender
                        dr["ld_rating"] = model[0].LTM1[0].SelectedItems12.FirstOrDefault();// lead rating
                        dr["ld_venue"] = model[0].LTM1[0].SelectedItems13.FirstOrDefault();// lead venue
                        dr["ld_menu"] = model[0].LTM1[0].SelectedItems14.FirstOrDefault();// lead menu
                        dr["tof"] = model[0].LTM1[0].SelectedItems15.FirstOrDefault();// lead tof
                        dr["ent_by"] = model[0].LTM1[0].Col3;
                        dr["ent_date"] = model[0].LTM1[0].Col4;
                        dr["client_id"] = clientid_mst;
                        dr["client_unit_id"] = unitid_mst;
                        dr["edit_by"] = userid_mst;
                        dr["edit_date"] = currdate;
                        //dr = getsave(currdate, dr, model, isedit);
                        dtstr.Rows.Add(dr);
                    }
                    // bool Result = sgen.Update_data(userCode, dtstr, model[0].LTM1[0].Col10.Trim(), tmodel.LTM1[0].Col8, isedit);
                    bool Result = sgen.Update_data(userCode, dtstr, model[0].LTM1[0].Col10.Trim(), model[0].LTM1[0].Col8.Trim(), isedit);
                    if (Result == true)
                    {
                        #region attachment
                        DataTable dtfile = new DataTable();
                        dtfile = cmd_Fun.GetStructure(userCode, "file_tab");
                        string serverpath = Server.MapPath("~/Uploads/" + cg_com_name.Replace(" ", "") + "/");
                        try
                        {

                            HttpPostedFileBase[] file1 = upd1;
                            for (Int32 i = 0; i < upd1.Length; i++)
                            {
                                fileName1 = "";
                                ctype1 = upd1[i].ContentType;
                                fileName1 = upd1[i].FileName;
                                path1 = clientid_mst + unitid_mst + userid_mst + currdate + "_" + fileName1;
                                encpath1 = sgen.Convert_Stringto64(path1).ToString();
                                finalpath1 = serverpath + encpath1;
                                upd1[i].SaveAs(finalpath1);
                                if (upd1 != null && fileName1 != null && fileName1 != "0" && fileName1 != "")
                                {
                                    filesave(model, currdate, dtfile, fileName1, encpath1, "RMK", ctype1, model[0].Col46, model[0].Col47, vch_num, model[0].Col18);
                                }

                            }

                            if (upd1 != null && fileName1 != null && fileName1 != "0" && fileName1 != "")
                            {

                                if (model[0].Col49 == null)
                                {
                                    res = sgen.Update_data(userCode, dtfile, "file_tab", "", false);
                                }
                                else
                                {
                                    res = sgen.Update_data(userCode, dtfile, "file_tab", model[0].Col49, isedit);
                                }
                                if (!res) { ViewBag.scripCall = "showmsgJS(1, 'Something Went Wrong, File Not Save', 0);"; return View(model); }
                            }
                        }
                        catch (Exception ex) { }
                        #endregion

                        vch_num = model[0].LTM1[0].Col16;
                        ViewBag.vnew = "";
                        ViewBag.vedit = "";
                        ViewBag.vsave = "disabled='disabled'";
                        ViewBag.scripCall = "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col10 = tm.Col10,
                            Col11 = tm.Col11,
                            Col12 = tm.Col12,
                            //Col13 = "Save",
                            Col14 = tm.Col14,
                            Col15 = tm.Col15,
                            Col9 = tm.Col9,
                            LTM1 = new List<Tmodelmain>(),
                            LTM2 = new List<Tmodelmain>(),
                            LTM3 = new List<Tmodelmain>()
                        });
                        Tmodelmain tmltm2 = new Tmodelmain();
                        tmltm2.Col1 = "1";
                        model[0].LTM1.Add(tmltm2);
                        model[0].LTM1[0].TList1 = mod1;
                        model[0].LTM1[0].TList2 = mod2;
                        model[0].LTM1[0].TList3 = mod3;
                        model[0].LTM1[0].TList4 = mod4;
                        model[0].LTM1[0].TList5 = mod5;
                        model[0].LTM1[0].TList6 = mod6;
                        model[0].LTM1[0].TList7 = mod7;
                        model[0].LTM1[0].TList8 = mod8;
                        model[0].LTM1[0].TList9 = mod9;
                        model[0].LTM1[0].TList10 = mod10;
                        model[0].LTM1[0].TList11 = mod11;
                        model[0].LTM1[0].TList12 = mod12;
                        model[0].LTM1[0].TList13 = mod13;
                        model[0].LTM1[0].TList14 = mod14;
                        model[0].LTM1[0].TList15 = mod15;
                        model[0].LTM1[0].Col15 = MyGuid;
                        if (model[0].LTM1[0].SelectedItems1 == null) model[0].LTM1[0].SelectedItems1 = new string[] { "" };
                        if (model[0].LTM1[0].SelectedItems2 == null) model[0].LTM1[0].SelectedItems2 = new string[] { "" };
                        if (model[0].LTM1[0].SelectedItems3 == null) model[0].LTM1[0].SelectedItems3 = new string[] { "" };
                        if (model[0].LTM1[0].SelectedItems4 == null) model[0].LTM1[0].SelectedItems4 = new string[] { "" };
                        if (model[0].LTM1[0].SelectedItems5 == null) model[0].LTM1[0].SelectedItems5 = new string[] { "" };
                        if (model[0].LTM1[0].SelectedItems6 == null) model[0].LTM1[0].SelectedItems6 = new string[] { "" };
                        if (model[0].LTM1[0].SelectedItems7 == null) model[0].LTM1[0].SelectedItems7 = new string[] { "" };
                        if (model[0].LTM1[0].SelectedItems8 == null) model[0].LTM1[0].SelectedItems8 = new string[] { "" };
                        if (model[0].LTM1[0].SelectedItems9 == null) model[0].LTM1[0].SelectedItems9 = new string[] { "" };
                        if (model[0].LTM1[0].SelectedItems10 == null) model[0].LTM1[0].SelectedItems10 = new string[] { "" };
                        if (model[0].LTM1[0].SelectedItems11 == null) model[0].LTM1[0].SelectedItems11 = new string[] { "" };
                        if (model[0].LTM1[0].SelectedItems12 == null) model[0].LTM1[0].SelectedItems12 = new string[] { "" };
                        if (model[0].LTM1[0].SelectedItems13 == null) model[0].LTM1[0].SelectedItems13 = new string[] { "" };
                        if (model[0].LTM1[0].SelectedItems14 == null) model[0].LTM1[0].SelectedItems14 = new string[] { "" };
                        if (model[0].LTM1[0].SelectedItems15 == null) model[0].LTM1[0].SelectedItems15 = new string[] { "" };

                    }
                    else
                    {
                        ViewBag.scripCall = "showmsgJS(1, 'Record Not Saved', 0);";
                    }
                }
                catch (Exception ex) { sgen.showmsg(1, ex.Message.ToString(), 0); }
            }
            ModelState.Clear();
            return PartialView(model);
        }
        [HttpGet]
        public ActionResult pr_lead(String model1, string command, string mid, string nn)
        {
            FillMst(mid);
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = sgen.Make_Model(model1);
            var tm = model.FirstOrDefault();
            List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_Tlist1"];
            List<SelectListItem> mod2 = (List<SelectListItem>)TempData[MyGuid + "_Tlist2"];
            List<SelectListItem> mod3 = (List<SelectListItem>)TempData[MyGuid + "_Tlist3"];
            List<SelectListItem> mod4 = (List<SelectListItem>)TempData[MyGuid + "_Tlist4"];
            List<SelectListItem> mod5 = (List<SelectListItem>)TempData[MyGuid + "_Tlist5"];
            List<SelectListItem> mod6 = (List<SelectListItem>)TempData[MyGuid + "_Tlist6"];
            List<SelectListItem> mod7 = (List<SelectListItem>)TempData[MyGuid + "_Tlist7"];
            TempData[MyGuid + "_Tlist1"] = model[0].LTM1[0].TList1 = mod1;
            TempData[MyGuid + "_Tlist2"] = model[0].LTM1[0].TList2 = mod2;
            TempData[MyGuid + "_Tlist3"] = model[0].LTM1[0].TList3 = mod3;
            TempData[MyGuid + "_Tlist4"] = model[0].LTM1[0].TList4 = mod4;
            TempData[MyGuid + "_Tlist5"] = model[0].LTM1[0].TList5 = mod5;
            TempData[MyGuid + "_Tlist6"] = model[0].LTM1[0].TList6 = mod6;
            TempData[MyGuid + "_Tlist7"] = model[0].LTM1[0].TList7 = mod7;
            //TempData[MyGuid + "_Tlist1"] = model[0].LTM1[0].TList1;
            //TempData[MyGuid + "_Tlist2"] = model[0].LTM1[0].TList2;
            //TempData[MyGuid + "_Tlist3"] = model[0].LTM1[0].TList3;
            //TempData[MyGuid + "_Tlist4"] = model[0].LTM1[0].TList4;
            //TempData[MyGuid + "_Tlist5"] = model[0].LTM1[0].TList5;
            //TempData[MyGuid + "_Tlist6"] = model[0].LTM1[0].TList6;
            //TempData[MyGuid + "_Tlist7"] = model[0].LTM1[0].TList7;
            if (model[0].LTM1[0].SelectedItems1 == null) model[0].LTM1[0].SelectedItems1 = new string[] { "" };
            if (model[0].LTM1[0].SelectedItems2 == null) model[0].LTM1[0].SelectedItems2 = new string[] { "" };
            if (model[0].LTM1[0].SelectedItems3 == null) model[0].LTM1[0].SelectedItems3 = new string[] { "" };
            if (model[0].LTM1[0].SelectedItems4 == null) model[0].LTM1[0].SelectedItems4 = new string[] { "" };
            if (model[0].LTM1[0].SelectedItems5 == null) model[0].LTM1[0].SelectedItems5 = new string[] { "" };
            if (model[0].LTM1[0].SelectedItems6 == null) model[0].LTM1[0].SelectedItems6 = new string[] { "" };
            if (model[0].LTM1[0].SelectedItems7 == null) model[0].LTM1[0].SelectedItems7 = new string[] { "" };
            if (model[0].LTM1[0].Col50 == "Y")
            {
                if (model[0].LTM1[0].Col76 == null) ViewBag.scripCall = ViewBag.scripCall + "initialize(28.477450,77.034138);";
                else ViewBag.scripCall = ViewBag.scripCall + "initialize(" + model[0].LTM1[0].Col76 + ");";
            }
            {
                //try
                //{
                //    var tmodel = model.FirstOrDefault();
                //    string currdate = sgen.server_datetime(userCode);
                //    string cond = "", found = "";
                //    DataTable dtstr = new DataTable();
                //    //dtstr = sgen.getdata(userCode, "select * from " + model[0].Col10 + " WHERE 1=2");
                //    dtstr = cmd_Fun.GetStructure(userCode, model[0].LTM1[0].Col10.Trim());
                //   if (sgen.GetSession(MyGuid,"EDMODE").ToString().Equals("Y"))
                //    {
                //        isedit = true;
                //        vch_num = model[0].LTM1[0].Col16;
                //    }
                //    else
                //    {
                //        isedit = false;
                //        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                //        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                //        model[0].LTM1[0].Col16 = vch_num;
                //    }
                //    {
                //        DataRow dr = dtstr.NewRow();
                //        dr["rec_id"] = "0";
                //        dr["type"] = model[0].LTM1[0].Col12;
                //        dr["vch_num"] = vch_num.Trim();
                //        dr["vch_date"] = currdate;
                //        dr["cust_id"] = model[0].LTM1[0].Col18;      //Party 
                //        dr["cust_name"] = model[0].LTM1[0].Col19;      //Party name
                //        dr["ld_owner"] = model[0].LTM1[0].SelectedItems1.FirstOrDefault(); //lead owner
                //        dr["ld_source"] = model[0].LTM1[0].SelectedItems2.FirstOrDefault(); //lead source
                //        dr["ld_status"] = model[0].LTM1[0].SelectedItems3.FirstOrDefault(); //lead status
                //        dr["ot_source"] = model[0].LTM1[0].Col20;//Other Lead Source
                //        dr["remark"] = model[0].LTM1[0].Col21;//Remark
                //        dr["ct_person"] = model[0].LTM1[0].SelectedItems4.FirstOrDefault();// contact Person
                //        dr["ld_product"] = model[0].LTM1[0].SelectedItems5.FirstOrDefault();// product
                //        dr["refered_by"] = model[0].LTM1[0].Col22;// contact Person
                //        dr["country"] = model[0].LTM1[0].Col40;// country id
                //        dr["state"] = model[0].LTM1[0].Col41;// state id
                //        dr["city"] = model[0].LTM1[0].Col42;// rec id
                //        dr["pincode"] = model[0].LTM1[0].Col26;// pincode
                //        dr["address"] = model[0].LTM1[0].Col27;// address
                //        dr["cp_fname"] = model[0].LTM1[0].Col28;// contact Person first name
                //        dr["cp_mname"] = model[0].LTM1[0].Col29;// contact Person middle name
                //        dr["cp_lname"] = model[0].LTM1[0].Col30;// contact Person last name
                //        dr["desig"] = model[0].LTM1[0].Col31;// contact Person Designation
                //        dr["dept"] = model[0].LTM1[0].Col32;// contact Person departmnet
                //        dr["emailid"] = model[0].LTM1[0].Col33;// contact Person Email
                //        dr["mobile_no"] = model[0].LTM1[0].Col34;// contact Person moblie
                //        dr["contact_no"] = model[0].LTM1[0].Col35;// contact Person cont
                //        dr["al_contact"] = model[0].LTM1[0].Col36;// contact Person alternate no
                //        dr["dob"] = sgen.Make_date_S(model[0].LTM1[0].Col37);// contact Person dob
                //        dr["doa"] = sgen.Make_date_S(model[0].LTM1[0].Col38);// contact Person doa
                //        dr["cp_add"] = model[0].LTM1[0].Col39;// contact Person address
                //        dr["cp_id"] = model[0].LTM1[0].SelectedItems6.FirstOrDefault();// contact person ref id
                //        dr["ref_type"] = model[0].LTM1[0].Col43;//  ref type
                //        dr["cp_ref_type"] = model[0].LTM1[0].Col44;//  ref type
                //        dr["lead_con"] = "N";
                //        dr = getsave(currdate, dr, model, isedit);
                //        dtstr.Rows.Add(dr);
                //    }
                //    // bool Result = sgen.Update_data(userCode, dtstr, model[0].LTM1[0].Col10.Trim(), tmodel.LTM1[0].Col8, isedit);
                //    bool Result = sgen.Update_data(userCode, dtstr, model[0].LTM1[0].Col10.Trim(), model[0].LTM1[0].Col8.Trim(), isedit);
                //    if (Result == true)
                //    {
                //        vch_num = model[0].LTM1[0].Col16;
                //        ViewBag.vnew = "";
                //        ViewBag.vedit = "";
                //        ViewBag.vsave = "disabled='disabled'";
                //        ViewBag.scripCall = "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                //        model = new List<Tmodelmain>();
                //        model.Add(new Tmodelmain
                //        {
                //            Col10 = tm.Col10,
                //            Col11 = tm.Col11,
                //            Col12 = tm.Col12,
                //            //Col13 = "Save",
                //            Col14 = tm.Col14,
                //            Col15 = tm.Col15,
                //            Col9 = tm.Col9,
                //            TList1 = mod1,
                //            TList2 = mod2,
                //            TList3 = mod3,
                //            TList4 = mod4,
                //            TList5 = mod5,
                //            TList6 = mod6,
                //            TList7 = mod7,
                //            SelectedItems1 = new string[] { "" },
                //            SelectedItems2 = new string[] { "" },
                //            SelectedItems3 = new string[] { "" },
                //            SelectedItems4 = new string[] { "" },
                //            SelectedItems5 = new string[] { "" },
                //            SelectedItems6 = new string[] { "" },
                //            SelectedItems7 = new string[] { "" },
                //        });
                //    }
                //    else
                //    {
                //        ViewBag.scripCall = "showmsgJS(1, 'Record Not Saved', 2);";
                //    }
                //}
                //catch (Exception ex) { sgen.showmsg(1, ex.Message.ToString(), 0); }
            }
            ModelState.Clear();
            return PartialView(model);
        }
        #endregion
        #region pr_followup
        [HttpPost]
        public ActionResult pr_followup(String model1, string command, string mid)
        {
            FillMst(MyGuid);
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = sgen.Make_Model(model1);
            var tm = model.FirstOrDefault();
            List<SelectListItem> mod1 = new List<SelectListItem>();
            List<SelectListItem> mod2 = new List<SelectListItem>();
            List<SelectListItem> mod3 = new List<SelectListItem>();

            TempData[MyGuid + "_FL_TList1"] = model[0].LTM2[0].TList1 = mod1 = (List<SelectListItem>)TempData[MyGuid + "_FL_TList1"];
            TempData[MyGuid + "_FL_TList2"] = model[0].LTM2[0].TList2 = mod2 = (List<SelectListItem>)TempData[MyGuid + "_FL_TList2"];
            TempData[MyGuid + "_FL_TList3"] = model[0].LTM2[0].TList3 = mod3 = (List<SelectListItem>)TempData[MyGuid + "_FL_TList3"];


            if (model[0].LTM2[0].SelectedItems1 == null) model[0].LTM2[0].SelectedItems1 = new string[] { "" };
            if (model[0].LTM2[0].SelectedItems2 == null) model[0].LTM2[0].SelectedItems2 = new string[] { "" };
            if (model[0].LTM2[0].SelectedItems3 == null) model[0].LTM2[0].SelectedItems3 = new string[] { "" };

            //else if (command == "Save" || command == "Update")
            {
                model[0].Col15 = MyGuid;
                var tmodel = model.FirstOrDefault();
                string currdate = sgen.server_datetime(userCode);
                DataTable dtstr = new DataTable();
                dtstr = cmd_Fun.GetStructure(userCode, "enx_tab2");
                mq = "select max(to_number(vch_num)) as auto_genid from enx_tab2 where type='VFC' " + model[0].LTM2[0].Col11 + "  ";
                vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                model[0].LTM2[0].Col16 = vch_num;
                isedit = false;
                //}
                string leadid = model[0].LTM2[0].Col19;
                #region dtstr
                DataRow dr = dtstr.NewRow();
                dr["rec_id"] = "0";
                dr["vch_num"] = vch_num.Trim();
                dr["vch_date"] = currdate;
                dr["type"] = "VFC";
                dr["col1"] = model[0].LTM2[0].Col17;
                dr["col8"] = model[0].LTM2[0].Col31;

                dr["col3"] = userid_mst;
                dr["date1"] = sgen.Make_date_S(model[0].LTM2[0].Col18);
                dr["date2"] = sgen.Make_date_S(model[0].LTM2[0].Col20);
                dr["col2"] = model[0].LTM2[0].Col19; // lead id
                dr["col5"] = model[0].LTM2[0].SelectedItems1.FirstOrDefault(); // assg to
                dr["col6"] = model[0].LTM2[0].SelectedItems2.FirstOrDefault();// lead status 
                dr["col7"] = model[0].LTM2[0].SelectedItems3.FirstOrDefault();// next action

                if (model[0].LTM2[0].Col27.ToString() == "Re-Opened")
                {
                    if (model[0].LTM2[0].Chk1 == true) { dr["col12"] = "R"; } else { dr["col12"] = "N"; }
                }
                else
                {
                    if (model[0].LTM2[0].Chk1 == true) { dr["col12"] = "Y"; } else { dr["col12"] = "N"; }
                }
                dr["col4"] = model[0].LTM2[0].Col26; //reason of closing
                if (isedit)
                {
                    dr["ent_by"] = model[0].LTM2[0].Col3;
                    //dr["rec_id"] = model[0].Col7;
                    dr["ent_date"] = model[0].LTM2[0].Col4.Trim();
                    dr["client_id"] = model[0].LTM2[0].Col1.Trim();
                    dr["client_unit_id"] = model[0].LTM2[0].Col2.Trim();
                    dr["edit_by"] = userid_mst.Trim();
                    dr["edit_date"] = currdate;
                }
                else
                {
                    dr["ent_by"] = userid_mst;
                    dr["ent_date"] = currdate;
                    dr["client_id"] = clientid_mst;
                    dr["client_unit_id"] = unitid_mst;
                    dr["edit_by"] = "-";
                    dr["edit_date"] = currdate;
                }
                dtstr.Rows.Add(dr);
                #endregion
                ok = sgen.Update_data(userCode, dtstr, "enx_tab2", model[0].Col8, isedit);
                if (ok)
                {
                    string chkval = "";
                    if (model[0].LTM2[0].Col27.ToString() == "Re-Opened") { chkval = "N"; }
                    else { chkval = "C"; }
                    if (model[0].LTM2[0].Chk1 == true)
                    {
                        ViewBag.vsave = "disabled='disabled'";
                        ok = sgen.execute_cmd(userCode, "update lead_master set lead_con='" + chkval + "' where vch_num='" + model[0].LTM2[0].Col19 + "' and type='LED' and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "'");
                    }
                    mq = "select a.col8, a.col5, a.vch_num, a.col1 as rmk,a.col4 as reason,col12 as closed,to_char(convert_tz(a.date1,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') as date1" +
                        ",to_char(convert_tz(a.date2,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') as date2 ,first_name||' '||replace(middle_name,'0','')||" +
                             "''||replace(last_name,'0','') as user_name , n.master_name as nxt_fl from enx_tab2 a left join user_details ud on a.col5 = " +
                             " ud.vch_num left join master_setting n on n.master_id = a.col7 and n.type = 'NAM' and " +
                                "find_in_set(n.client_unit_id, a.client_unit_id)= 1 where a.type = 'VFC' and a.client_unit_id='" + unitid_mst + "' and a.col2='" + leadid + "'" +
                             " order by a.vch_num desc";
                    DataTable dtf = new DataTable();
                    dtf = sgen.getdata(userCode, mq);
                    if (dtf.Rows.Count > 0)
                    {
                        Tmodelmain tmltm2 = new Tmodelmain();
                        var modme = new List<Tmodelmain>();
                        string assign = dtf.Rows[0]["col5"].ToString();
                        for (int i = 0; i < dtf.Rows.Count; i++)
                        {
                            Tmodelmain tmm = new Tmodelmain();
                            tmm.Col19 = leadid;
                            //tmm.Col20 = dtf.Rows[i]["date1"].ToString();
                            if ((dtf.Rows[i]["col8"].ToString() != null) && (dtf.Rows[i]["col8"].ToString() != "0"))
                            {
                                tmm.Col33 = dtf.Rows[i]["col8"].ToString();
                            }
                            tmm.Col32 = dtf.Rows[i]["date1"].ToString();
                            tmm.Col21 = dtf.Rows[i]["user_name"].ToString();
                            if (dtf.Rows[i]["closed"].ToString() == "Y")
                            {
                                tmm.Col27 = "Closed";
                                tmm.Col28 = "Reason Of Closing";
                                tmm.Col23 = "(Lead Is Closed ) " + dtf.Rows[i]["reason"].ToString();
                            }
                            else if (dtf.Rows[i]["closed"].ToString() == "R")
                            {
                                tmm.Col27 = "Re-Opened";
                                tmm.Col28 = "Reason Of Re-Open";
                                tmm.Col23 = "(Lead Is Re-opened ) " + dtf.Rows[i]["reason"].ToString();
                            }
                            else
                            {
                                tmm.Col27 = "Closed";
                                tmm.Col28 = "Reason Of Closing";
                                tmm.Col23 = dtf.Rows[i]["rmk"].ToString();
                            }
                            if (dtf.Rows[i]["date2"].ToString() != "01/01/1900")
                            {
                                tmm.Col24 = dtf.Rows[i]["date2"].ToString();
                            }
                            tmm.Col25 = dtf.Rows[i]["nxt_fl"].ToString();
                            #region  Assigned to
                            TempData[MyGuid + "_FL_TList1"] = tmm.TList1 = mod1 = cmd_Fun.username_mod(userCode, m_module3);
                            tmm.SelectedItems1 = new string[] { "" };
                            #endregion
                            #region  Next Action
                            TempData[MyGuid + "_FL_TList3"] = tmm.TList3 = mod2 = cmd_Fun.nextaction(userCode, unitid_mst);
                            tmm.SelectedItems3 = new string[] { "" };
                            #endregion

                            tmm.LTM1 = new List<Tmodelmain>();
                            tmm.LTM2 = new List<Tmodelmain>();

                            modme.Add(tmm);
                        }

                        model[0].LTM2 = modme;
                        model[0].LTM2[0].Col18 = sgen.server_datetime_local(userCode);
                        model[0].LTM2[0].Col20 = sgen.server_datetime_local(userCode);
                    }

                }
                else { ViewBag.scripCall = "showmsgJS(1, 'Something Went Wrong, Data Not Saved', 0);"; }
            }

            if (model[0].LTM2[0].SelectedItems1 == null) model[0].LTM2[0].SelectedItems1 = new string[] { "" };
            if (model[0].LTM2[0].SelectedItems2 == null) model[0].LTM2[0].SelectedItems2 = new string[] { "" };
            if (model[0].LTM2[0].SelectedItems3 == null) model[0].LTM2[0].SelectedItems3 = new string[] { "" };
            ModelState.Clear();
            return PartialView(model);
        }
        [HttpGet]
        public ActionResult pr_followup(String model1, string command, string mid, string nn)
        {
            FillMst(MyGuid);
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = sgen.Make_Model(model1);
            var tm = model.FirstOrDefault();
            model[0].Col15 = MyGuid;
            List<SelectListItem> mod1 = new List<SelectListItem>();
            List<SelectListItem> mod2 = new List<SelectListItem>();
            List<SelectListItem> mod3 = new List<SelectListItem>();
            TempData[MyGuid + "_FL_TList1"] = mod1 = (List<SelectListItem>)TempData[MyGuid + "_FL_TList1"];
            TempData[MyGuid + "_FL_TList2"] = mod2 = (List<SelectListItem>)TempData[MyGuid + "_FL_TList2"];
            TempData[MyGuid + "_FL_TList3"] = mod3 = (List<SelectListItem>)TempData[MyGuid + "_FL_TList3"];
            //TempData[MyGuid + "_FL_TList1"] = mod1;
            //TempData[MyGuid + "_FL_TList2"] = mod2;
            //TempData[MyGuid + "_FL_TList3"] = mod3;
            if (model[0].LTM2[0].SelectedItems1 == null) model[0].LTM2[0].SelectedItems1 = new string[] { "" };
            if (model[0].LTM2[0].SelectedItems2 == null) model[0].LTM2[0].SelectedItems2 = new string[] { "" };
            if (model[0].LTM2[0].SelectedItems3 == null) model[0].LTM2[0].SelectedItems3 = new string[] { "" };
            //else if (command == "Save" || command == "Update")
            {
                try
                {
                    if (model[0].LTM2[0].Col17 == null) { ViewBag.scripCall = "showmsgJS(1,'Please add Remark',2)"; return View(model); }
                    var tmodel = model.FirstOrDefault();
                    string currdate = sgen.server_datetime(userCode);
                    DataTable dtstr = new DataTable();
                    //dtstr = sgen.getdata(userCode, "select * from " + model[0].Col10 + " WHERE 1=2");
                    dtstr = cmd_Fun.GetStructure(userCode, "enx_tab2");
                    mq = "select max(to_number(vch_num)) as auto_genid from enx_tab2 where type='VFC' " + model[0].LTM2[0].Col11 + "  ";
                    vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                    model[0].LTM2[0].Col16 = vch_num;
                    isedit = false;
                    //}
                    string leadid = model[0].LTM2[0].Col19;
                    #region dtstr
                    DataRow dr = dtstr.NewRow();
                    dr["rec_id"] = "0";
                    dr["vch_num"] = vch_num.Trim();
                    dr["vch_date"] = sgen.Savedate(currdate, true);
                    //dr["type"] = model[0].Col12.Trim();
                    dr["type"] = "VFC";
                    dr["col1"] = model[0].LTM2[0].Col17;
                    dr["col3"] = userid_mst;
                    dr["date1"] = sgen.Savedate(model[0].LTM2[0].Col18, true);
                    dr["col2"] = model[0].LTM2[0].Col19; // lead id
                    dr["col5"] = model[0].LTM2[0].SelectedItems1.FirstOrDefault(); // assg to
                    dr["col6"] = model[0].LTM2[0].SelectedItems2.FirstOrDefault();// ref to 
                    if (isedit)
                    {
                        dr["ent_by"] = model[0].LTM2[0].Col3;
                        //dr["rec_id"] = model[0].Col7;
                        dr["ent_date"] = model[0].LTM2[0].Col4.Trim();
                        dr["client_id"] = model[0].LTM2[0].Col1.Trim();
                        dr["client_unit_id"] = model[0].LTM2[0].Col2.Trim();
                        dr["edit_by"] = userid_mst.Trim();
                        dr["edit_date"] = currdate;
                    }
                    else
                    {
                        dr["ent_by"] = userid_mst;
                        dr["ent_date"] = currdate;
                        dr["client_id"] = clientid_mst;
                        dr["client_unit_id"] = unitid_mst;
                        dr["edit_by"] = "-";
                        dr["edit_date"] = currdate;
                    }
                    dtstr.Rows.Add(dr);
                    #endregion
                    ok = sgen.Update_data(userCode, dtstr, "enx_tab2", model[0].Col8, isedit);
                    if (ok)
                    {
                        mq = "select a.col5, a.vch_num, a.col1 as rmk,a.col4 as reason,col12 as closed,to_char(convert_tz(a.date1,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') as date1" +
                              ",to_char(convert_tz(a.date2,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') as date2 ,first_name||' '||replace(middle_name,'0','')||" +
                              "''||replace(last_name,'0','') as user_name , n.master_name as nxt_fl from enx_tab2 a left join user_details ud on a.col5 = " +
                              " ud.vch_num left join master_setting n on n.master_id = a.col7 and n.type = 'NAM' and " +
                              "find_in_set(n.client_unit_id, a.client_unit_id)= 1 where a.type = 'VFC' and a.client_unit_id='" + unitid_mst + "' and a.col2='" + leadid + "'" +
                              " order by a.vch_num desc";
                        DataTable dtf = new DataTable();
                        dtf = sgen.getdata(userCode, mq);
                        if (dtf.Rows.Count > 0)
                        {
                            var modme = new List<Tmodelmain>();
                            string assign = dtf.Rows[0]["col5"].ToString();
                            for (int i = 0; i < dtf.Rows.Count; i++)
                            {
                                Tmodelmain tmm = new Tmodelmain();
                                tmm.Col19 = leadid;
                                tmm.Col20 = dtf.Rows[i]["date1"].ToString();
                                tmm.Col21 = dtf.Rows[i]["user_name"].ToString();
                                if (dtf.Rows[i]["closed"].ToString() == "Y")
                                {
                                    tmm.Col27 = "Closed";
                                    tmm.Col28 = "Reason Of Closing";
                                    tmm.Col23 = "(Lead Is Closed ) " + dtf.Rows[i]["reason"].ToString();
                                }
                                else if (dtf.Rows[i]["closed"].ToString() == "R")
                                {
                                    tmm.Col27 = "Re-Opened";
                                    tmm.Col28 = "Reason Of Re-Open";
                                    tmm.Col23 = "(Lead Is Re-opened ) " + dtf.Rows[i]["reason"].ToString();
                                }
                                else
                                {
                                    tmm.Col27 = "Closed";
                                    tmm.Col28 = "Reason Of Closing";
                                    tmm.Col23 = dtf.Rows[i]["rmk"].ToString();
                                }
                                tmm.Col24 = dtf.Rows[i]["date2"].ToString();
                                tmm.Col25 = dtf.Rows[i]["nxt_fl"].ToString();
                                #region  Assigned to
                                TempData[MyGuid + "_FL_TList1"] = tmm.TList1 = mod1 = cmd_Fun.username_mod(userCode, m_module3);
                                tmm.SelectedItems1 = new string[] { "" };
                                #endregion
                                #region  Next Action
                                TempData[MyGuid + "_FL_TList3"] = tmm.TList3 = mod2 = cmd_Fun.nextaction(userCode, unitid_mst);
                                tmm.SelectedItems3 = new string[] { "" };
                                #endregion
                                tmm.TList1 = new List<SelectListItem>();
                                tmm.TList2 = new List<SelectListItem>();
                                tmm.LTM1 = new List<Tmodelmain>();
                                tmm.LTM2 = new List<Tmodelmain>();
                                modme.Add(tmm);
                            }
                            Tmodelmain tmltm2 = new Tmodelmain();
                            List<Tmodelmain> ltm = new List<Tmodelmain>();
                            tmltm2.Col1 = "1";
                            //tmltm2.TList1 = tmodel.LTM2[0].TList1;
                            //tmltm2.SelectedItems1 = tmodel.LTM2[0].SelectedItems1;
                            //tmltm2.TList2 = tmodel.LTM2[0].TList2;
                            //tmltm2.SelectedItems2 = tmodel.LTM2[0].SelectedItems2;
                            //tmltm2.Col30 = tmodel.LTM2[0].Col30;
                            //ltm.Add(tmltm2);
                            model[0].LTM2 = modme;
                            //model[0].LTM2 = ltm;
                        }
                        //mq = "select a.col1 as rmk,to_char(convert_tz(a.date1,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') as date1 ,first_name||' '||replace(middle_name,'0','')||" +
                        //         "''||replace(last_name,'0','') as user_name from enx_tab2 a inner join user_details ud on a.col5 = " +
                        //         "lpad(ud.rec_id, 6, 0) where a.type = 'VFC' and a.client_unit_id='" + unitid_mst + "' and a.col2='" + leadid + "'";
                        //var tmm = model.FirstOrDefault();
                        //DataTable dtf = new DataTable();
                        //dtf = sgen.getdata(userCode, mq);
                        //if (dtf.Rows.Count > 0)
                        //{
                        //    model = new List<Tmodelmain>();
                        //    for (int i = 0; i < dtf.Rows.Count; i++)
                        //    {
                        //        model.Add(new Tmodelmain
                        //        {
                        //            Col20 = dtf.Rows[i]["date1"].ToString(),
                        //            Col21 = dtf.Rows[i]["user_name"].ToString(),
                        //            Col23 = dtf.Rows[i]["rmk"].ToString(),
                        //            LTM1 = new List<Tmodelmain>(),
                        //            LTM2 = new List<Tmodelmain>()
                        //        });
                        //    }
                        //    Tmodelmain tmltm2 = new Tmodelmain();
                        //    tmltm2.Col1 = "1";
                        //    model[0].LTM2.Add(tmltm2);
                        //    model[0].LTM2[0].TList1 = mod1;
                        //    model[0].LTM2[0].TList2 = mod2;
                        //    model[0].LTM2[0].TList3 = mod3;
                        //    if (model[0].LTM2[0].SelectedItems1 == null) model[0].LTM2[0].SelectedItems1 = new string[] { "" };
                        //    if (model[0].LTM2[0].SelectedItems2 == null) model[0].LTM2[0].SelectedItems2 = new string[] { "" };
                        //    if (model[0].LTM2[0].SelectedItems3 == null) model[0].LTM2[0].SelectedItems3 = new string[] { "" };
                        //}
                        //model[0].LTM2.Add(tmm.LTM2[0]);
                    }
                    else { ViewBag.scripCall = "showmsgJS(1, 'Something Went Wrong, Data Not Saved', 0);"; }
                }
                catch (Exception ex) { ViewBag.scripCall = "showmsgJS(1,'" + ex.Message.ToString() + "', 0);"; }
            }
            ModelState.Clear();
            return PartialView(model);
        }
        #endregion
        #region lead_convert 
        public ActionResult lead_convert()
        {
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            FillMst(MyGuid);
            //ViewBag.vsave = "";
            ViewBag.scripCall = "enableForm();";
            model[0].Col9 = "LEAD CONVERT";
            model[0].Col10 = "master_setting";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "LST";
            model[0].Col17 = "1";
            model[0].Col19 = "1";
            List<SelectListItem> mod1 = new List<SelectListItem>();

            model[0].SelectedItems1 = new string[] { "" };
            TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
            ;
            if (Request.QueryString["fstr"] != null)
            {
                try
                {
                    string[] ld_fstr = (EncryptDecrypt.Decrypt(Request.QueryString["fstr"].ToString())).Split('_'); ;
                    //model[0].Col24 = EncryptDecrypt.Decrypt(Request.QueryString["fstr"].ToString()); ;
                    model[0].Col24 = ld_fstr[0].ToString();
                }
                catch { model[0].Col24 = EncryptDecrypt.Decrypt(Request.QueryString["fstr"].ToString()); }
                sgen.SetSession(MyGuid, "lead_id", model[0].Col24);
                DataTable dt = sgen.getdata(userCode, "select a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type as fstr, " +
                    "cp.client_id || cp.client_unit_id || cp.ref_code || to_char(cp.vch_date, 'yyyymmdd') || cp.type as cp_fstr, a.cust_id, a.cust_name, " +
                    "nvl(a.cp_id, '-')cp_id , (cp.cpname || ' ' || replace(cp.cp_mname, '0', '') || ' ' || replace(cp.cp_lname,'0','')) as contact_person from lead_master a" +
                    " inner join clients_mst cp on cp.vch_num = a.cust_id  where a.vch_num = '" + model[0].Col24 + "' and a.type = 'LED' " +
                    "and a.client_unit_id = '" + unitid_mst + "'");
                if (dt.Rows.Count > 0)
                {
                    model[0].Col18 = dt.Rows[0]["cust_name"].ToString();
                    model[0].Col20 = dt.Rows[0]["contact_person"].ToString();
                    model[0].Col25 = dt.Rows[0]["cust_id"].ToString();
                    model[0].Col26 = dt.Rows[0]["cp_id"].ToString();
                    model[0].Col27 = dt.Rows[0]["cp_fstr"].ToString();
                    sgen.SetSession(MyGuid, "ld_acc", dt.Rows[0]["cp_fstr"].ToString());
                }
            }
            return View(model);
        }
        [HttpPost]
        public ActionResult lead_convert(List<Tmodelmain> model, string command, string mid, string m_id)
        {
            try
            {
                FillMst();
                var tm = model.FirstOrDefault();
                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_Tlist1"];

                TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1;
                if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                if (command == "New")
                {
                    model = getnew(model);
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command.Trim() == "convert")
                {
                    sgen.execute_cmd(userCode, "update lead_master set lead_con ='Y',cust_id='" + model[0].Col25 + "',cust_name='" + model[0].Col18 + "',ref_type='BCD'," +
                        " cp_ref_type='BCN',cp_id='" + model[0].Col26 + "' where vch_num='" + sgen.GetSession(MyGuid, "lead_id").ToString() + "' and type='LED' and" +
                        " client_unit_id='" + unitid_mst + "'");
                    sgen.SetSession(MyGuid, "lead_id", null);
                    ViewBag.scripCall = "mytoast('success', 'toast-top-right', 'Lead Converted Successfully');";
                    return RedirectToAction("lead_list", "vastu", new { m_id = EncryptDecrypt.Encrypt(@MyGuid) });
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region crm_reports
        public ActionResult crm_reports()
        {
            FillMst();
            List<Tmodelmain> model = new List<Tmodelmain>();
            Tmodelmain tm1 = new Tmodelmain();
            model = getload(model);
            model[0].Col9 = "CRM REPORTS";
            // model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            // model[0].Col14 = mid_mst.Trim();
            // model[0].Col15 = MyGuid.Trim();
            return View(model);
        }
        [HttpPost]
        public ActionResult crm_reports(List<Tmodelmain> model, string command)
        {
            try
            {
                string fdt = "", tdt = "", dts = "";
                FillMst();
                var tm = model.FirstOrDefault();
                DataTable dt = new DataTable();
                if (sgen.GetSession(MyGuid, "KPDCMD") != null)
                {
                    if (sgen.GetSession(MyGuid, "KPDFDT") != null) fdt = sgen.GetSession(MyGuid, "KPDFDT").ToString();
                    if (sgen.GetSession(MyGuid, "KPDTDT") != null) tdt = sgen.GetSession(MyGuid, "KPDTDT").ToString();
                    if (sgen.GetSession(MyGuid, "KPDCMD") != null) command = sgen.GetSession(MyGuid, "KPDCMD").ToString();
                    dts = "_" + fdt + "_" + tdt;
                    string tcp = "", tut = "", tfromdt = "", ttodate = "";

                    try
                    {
                        tcp = sgen.GetSession(MyGuid, "KDDL_CL").ToString();
                        tut = sgen.GetSession(MyGuid, "KDDL_UT").ToString();
                        tfromdt = sgen.GetSession(MyGuid, "TXTFROMDATE").ToString();
                        ttodate = sgen.GetSession(MyGuid, "TXTTODATE").ToString();
                    }
                    catch (Exception err) { }
                }
                if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command == "Closed Lead")
                {
                    sgen.SetSession(MyGuid, "KPDCMD", null);
                    sgen.SetSession(MyGuid, "btnval", "CLOSED");
                    mq = "select (a.client_id||a.client_unit_id||a.vch_num) as fstr," +
                              " a.vch_num as lead_no,to_char(convert_tz(a.vch_date, 'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') as lead_date" +
                              ",a.cust_name as Customer_Name, nvl(a.refered_by,'-') refered_by ,c.master_name as Lead_source,d.master_name as lead_status," +
                              " ud.first_name || ' ' || replace(ud.middle_name, '0', '') || '' || replace(ud.last_name, '0', '') as lead_owner," +
                              "u.first_name || ' ' || replace(u.middle_name, '0', '') || '' || replace(u.last_name, '0', '') as Entry_By," +
                              "to_char(convert_tz(a.ent_date, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') as Entry_Date from " +
                              " lead_master a  left join master_setting c on a.ld_source = c.master_id and c.type = 'SRC'" +
                              " and find_in_set(c.client_unit_id, a.client_unit_id)= 1 left join master_setting d on a.ld_status = d.master_id and d.type = 'LST' " +
                              "and find_in_set(d.client_unit_id, a.client_unit_id)= 1 left join user_details ud on ud.rec_id = a.ld_owner " +
                              "inner join  user_details u on u.vch_num = a.ent_by where a.type = 'LED' and " +
                              " a.client_id='" + clientid_mst + "' and a.client_unit_id = '" + unitid_mst + "' and a.lead_con='C' and to_date(to_char(a.vch_date,'" + sgen.Getsqldateformat() + "'),'" + sgen.Getsqldateformat() + "') between " +
                    "to_date('" + fdt + "','" + sgen.Getsqldateformat() + "') and to_date('" + tdt + "','" + sgen.Getsqldateformat() + "') ";
                    //dt = sgen.getdata(userCode, mq);
                    //mq1 = sgen.open_grid_dt("Closed Lead List", dt, 1);
                    //if (mq1 == "ok") { ViewBag.scripCall = "callFoo('Closed Lead List');"; }
                    //else { ViewBag.scripCall = "showmsgJS(1,'No Data Found',2);"; }
                    sgen.open_grid("Closed Lead List", mq, 1);
                    ViewBag.scripCall = "callFoo('Closed Lead List');";
                }
                else if (command == "Lead Assigned")
                {
                    sgen.SetSession(MyGuid, "KPDCMD", null);
                    sgen.SetSession(MyGuid, "btnval", "ASSIGNEDLEAD");
                    //mq = "select a.client_id||a.client_unit_id||a.type|| a.ct_person||'"+dts+"', count(a.vch_num) NO_OF_LEADS,a.ct_person as assigned_to_code,u.first_name || ' ' || replace(u.middle_name, '0', '') || '' ||" +
                    //             " replace(u.last_name, '0', '') as assigned_to_Name from lead_master a inner join user_details u on u.rec_id = a.ct_person" +
                    //             " where a.type = 'LED' and a.client_unit_id = '" + unitid_mst + "' and to_date(to_char(a.vch_date,'" + sgen.Getsqldateformat() + "'),'" + sgen.Getsqldateformat() + "') between " +
                    //"to_date('" + fdt + "','" + sgen.Getsqldateformat() + "') and to_date('" + tdt + "','" + sgen.Getsqldateformat() + "')  group by a.ct_person,u.first_name || ' ' || replace(u.middle_name, '0', '')" +
                    //             " || '' || replace(u.last_name, '0', ''),a.client_id||a.client_unit_id||a.type|| a.ct_person ";

                    mq = "select a.client_id||a.client_unit_id||a.type|| b.asg_to||'" + dts + "', count(a.vch_num) NO_OF_LEADS,u.first_name || ' ' || replace(u.middle_name, '0', '') || '' ||" +
                              " replace(u.last_name, '0', '') as assigned_to_Name from lead_master a left join (select col5 as asg_to,col2 as lead_id from enx_tab2 where type='VFC' " +
                              "and client_unit_id='" + unitid_mst + "'  and vch_num in (select max(vch_num) from enx_tab2 where type = 'VFC' and client_unit_id = '" + unitid_mst + "' group by col2))  b on a.vch_num = b.lead_id  inner join user_details u on u.vch_num = b.asg_to" +
                              " where a.type = 'LED' and a.client_unit_id = '" + unitid_mst + "' and to_date(to_char(a.vch_date,'" + sgen.Getsqldateformat() + "'),'" + sgen.Getsqldateformat() + "') between " +
                 "to_date('" + fdt + "','" + sgen.Getsqldateformat() + "') and to_date('" + tdt + "','" + sgen.Getsqldateformat() + "')  group by b.asg_to,u.first_name || ' ' || replace(u.middle_name, '0', '')" +
                              " || '' || replace(u.last_name, '0', ''),a.client_id||a.client_unit_id||a.type|| b.asg_to ";

                    //dt = sgen.getdata(userCode, mq);
                    //mq1 = sgen.open_grid_dt("Select User For Detail", dt, 1);
                    //if (mq1 == "ok") { ViewBag.scripCall = "callFoo('Select User For Detail');"; }
                    //else { ViewBag.scripCall = "showmsgJS(1,'No Data Found',2);"; }
                    sgen.open_grid("Select User For Detail", mq, 1);
                    ViewBag.scripCall = "callFoo('Select User For Detail');";
                }
                else if (command == "Users Lead")
                {
                    sgen.SetSession(MyGuid, "KPDCMD", null);
                    sgen.SetSession(MyGuid, "btnval", "USERLEAD");
                    mq = "select a.client_id||a.client_unit_id||a.type|| a.ent_by||'" + dts + "' as fstr, count(a.vch_num) NO_OF_LEADS,a.ent_by as entry_by_code,u.first_name || ' ' || replace(u.middle_name, '0', '') || '' ||" +
                             " replace(u.last_name, '0', '') as Entry_BY_Name from lead_master a inner join user_details u on u.vch_num = a.ent_by" +
                             " where a.type = 'LED' and a.client_unit_id = '" + unitid_mst + "' and to_date(to_char(a.vch_date,'" + sgen.Getsqldateformat() + "'),'" + sgen.Getsqldateformat() + "') between " +
                    "to_date('" + fdt + "','" + sgen.Getsqldateformat() + "') and to_date('" + tdt + "','" + sgen.Getsqldateformat() + "')  group by a.ent_by,u.first_name || ' ' || replace(u.middle_name, '0', '')" +
                             " || '' || replace(u.last_name, '0', ''),a.client_id||a.client_unit_id||a.type|| a.ent_by ";
                    //dt = sgen.getdata(userCode, mq);
                    //mq1 = sgen.open_grid_dt("Select Lead", dt, 1);
                    //if (mq1 == "ok") { ViewBag.scripCall = "callFoo('Select Lead');"; }
                    //else { ViewBag.scripCall = "showmsgJS(1,'No Data Found',2);"; }
                    sgen.open_grid("Select Lead", mq, 1);
                    ViewBag.scripCall = "callFoo('Select Lead');";
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region BULK ACCOUNT UPLOAD
        public ActionResult bulk_acc()
        {
            FillMst();
            chkRef();
            ViewBag.vimport = "";
            ViewBag.vsave = "disabled='disabled'";
            mid_mst = EncryptDecrypt.Decrypt(Request.QueryString["mid"]);
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            List<Tmodelmain> model = new List<Tmodelmain>();
            Tmodelmain tm1 = new Tmodelmain();
            tm1.Col9 = "BULK DATA UPLOAD ";
            //tm1.Col12 = "PDA";
            tm1.Col10 = "clients_mst";
            tm1.Col11 = " and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "'";
            tm1.Col13 = "Save";
            tm1.Col14 = mid_mst.Trim();
            tm1.Col15 = MyGuid.Trim();
            tm1.Col22 = "Choose File";
            tm1.dt1 = null;
            model.Add(tm1);
            Make_query("bulk_acc", "Select Page To Upload Bluk Data", "SELCTPAGE", "1", "", "");
            ViewBag.scripCall = "callFoo('Select Page To Upload Bulk Data');";
            return View(model);
        }
        [HttpPost]
        public ActionResult bulk_acc(List<Tmodelmain> model, string command, HttpPostedFileBase upd1, string hfrow, string hftable)
        {
            try
            {
                FillMst();
                DataTable dtm = sgen.settable(hftable);
                sgen.SetSession(MyGuid, "HTMLTABLE", dtm);
                model[0].dt1 = dtm;
                if (command == "Cancel") { return CancelFun(model); }
                else if (command == "Callback")
                {
                    if (sgen.GetSession(MyGuid, "delid") != null) { btnval = "FDEL"; }
                    else if (sgen.GetSession(MyGuid, "btnval") != null) btnval = sgen.GetSession(MyGuid, "btnval").ToString();
                    model = CallbackFun(btnval, "N", actionName, controllerName, model);
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                }
                else if (command == "Save" || command == "Update")
                {
                    if (model[0].dt1.Rows.Count <= 0) { ViewBag.scripCall = "showmsgJS(1, 'No Data Found', 0);"; }
                    var tmodel = model.FirstOrDefault();
                    string currdate = sgen.server_datetime(userCode);
                    ent_date = currdate;
                    type = model[0].Col12.Trim();
                    isedit = false;
                    Satransaction sat1 = new Satransaction(userCode, MyGuid);
                    DataTable dtstr = new DataTable();
                    DataTable dtitb = new DataTable();
                    dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                    dtitb = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());

                    string sg = "";
                    int inc = 1;
                    #region dtstr                                              
                    for (int k = 0; k < dtm.Rows.Count; k++)
                    {
                        #region party
                        DataRow dr = dtstr.NewRow();
                        if (sg != dtm.Rows[k][0].ToString().Trim())
                        {
                            //mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10 + " where type='" + model[0].Col12 + "'";
                            //vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                            mq = "select max(to_number(substr(vch_num,4,8))) as auto_genid from " + model[0].Col10.Trim() + " a where  type in ('" + model[0].Col12.Trim() + "' ,'DD" + model[0].Col12 + "') and substr(vch_num,0,3)='" + model[0].Col18 + "'";
                            vch_num = model[0].Col18 + sgen.genNo(userCode, mq, 6, "auto_genid");

                            vch_num = (sgen.Make_decimal(vch_num) + sgen.Make_decimal(k)).ToString();
                            vch_num = sgen.padlc(sgen.Make_int(vch_num), 6, "0");
                            //vch_num = model[0].Col12 + vch_num;
                        }
                        sg = dtm.Rows[k][0].ToString().Trim();
                        dr["vch_num"] = vch_num;
                        dr["parent_id"] = vch_num;
                        dr["vch_date"] = currdate;
                        dr["type"] = type.Trim();
                        dr["status"] = "Y";
                        dr["c_name"] = dtm.Rows[k][0].ToString();
                        dr["panno"] = dtm.Rows[k][1].ToString().Trim();
                        dr["tanno"] = dtm.Rows[k][2].ToString().Trim();
                        dr["msmeno"] = dtm.Rows[k][3].ToString().Trim();
                        dr["website"] = dtm.Rows[k][4].ToString().Trim();
                        dr["salesarea"] = dtm.Rows[k][5].ToString().Trim();
                        dr["ptype"] = dtm.Rows[k][6].ToString().Trim();
                        dr["ploc"] = dtm.Rows[k][7].ToString().Trim();
                        dr["client_type"] = dtm.Rows[k][8].ToString().Trim();
                        dr["contr"] = "N";
                        dr["sez"] = dtm.Rows[k][10].ToString().Trim();
                        dr["isgstr"] = dtm.Rows[k][11].ToString().Trim();
                        dr["c_gstin"] = dtm.Rows[k][12].ToString().Trim();
                        dr["tor"] = dtm.Rows[k][13].ToString().Trim();
                        dr["addtype1"] = dtm.Rows[k][14].ToString().Trim();
                        dr["country"] = dtm.Rows[k][15].ToString().Trim();
                        dr["state"] = dtm.Rows[k][16].ToString().Trim();
                        dr["city"] = dtm.Rows[k][17].ToString().Trim();
                        dr["addr"] = dtm.Rows[k][18].ToString().Trim();
                        dr["pincode"] = dtm.Rows[k][19].ToString().Trim();
                        dr["BILL_ADD"] = dtm.Rows[k][20].ToString().Trim();
                        dr["addtype2"] = dtm.Rows[k][21].ToString().Trim();
                        dr["country2"] = dtm.Rows[k][22].ToString().Trim();
                        dr["state2"] = dtm.Rows[k][23].ToString().Trim();
                        dr["city2"] = dtm.Rows[k][24].ToString().Trim();
                        dr["cpaddr2"] = dtm.Rows[k][25].ToString().Trim();
                        dr["pincode_2"] = dtm.Rows[k][26].ToString().Trim();
                        dr["cpname"] = dtm.Rows[k][27].ToString().Trim();
                        dr["cpdesig"] = dtm.Rows[k][28].ToString().Trim();
                        dr["cpdept"] = dtm.Rows[k][29].ToString().Trim();
                        dr["cpcont"] = dtm.Rows[k][30].ToString().Trim();
                        dr["cpemail"] = dtm.Rows[k][31].ToString().Trim();
                        dr["cplandno"] = dtm.Rows[k][32].ToString().Trim();
                        dr["cpaltcont"] = dtm.Rows[k][33].ToString().Trim();
                        //dr["DOB"] = sgen.Savedate(dtm.Rows[k][34].ToString().Trim(), false);
                        //dr["DOA"] = sgen.Savedate(dtm.Rows[k][35].ToString().Trim(), false);
                        try
                        {
                            dr["DOB"] = DateTime.ParseExact(dtm.Rows[k][34].ToString().Trim(), "ddMMyyyy", CultureInfo.InvariantCulture).ToString("yyyy-MM-dd HH:mm:ss");
                            dr["DOA"] = DateTime.ParseExact(dtm.Rows[k][35].ToString().Trim(), "ddMMyyyy", CultureInfo.InvariantCulture).ToString("yyyy-MM-dd HH:mm:ss");
                        }
                        catch
                        {
                        }
                        dr["cpaddr"] = dtm.Rows[k][36].ToString().Trim();
                        dr["bnk"] = dtm.Rows[k][37].ToString().Trim();
                        dr["acctno"] = dtm.Rows[k][38].ToString().Trim();
                        dr["acctype"] = dtm.Rows[k][39].ToString().Trim();
                        dr["curtype"] = dtm.Rows[k][40].ToString().Trim();
                        dr["micrno"] = dtm.Rows[k][41].ToString().Trim();
                        dr["swftcd"] = dtm.Rows[k][42].ToString().Trim();
                        dr["ifsc"] = dtm.Rows[k][43].ToString().Trim();
                        dr["bnkaddr"] = dtm.Rows[k][44].ToString().Trim();
                        dr["lsrno"] = dtm.Rows[k][45].ToString().Trim();//leisure value

                        //dr["MT_DT"] = sgen.Savedate(dtm.Rows[k][46].ToString().Trim(), false);
                        try
                        {
                            // dr["MT_DT"] = DateTime.ParseExact(dtm.Rows[k][46].ToString().Trim(), "ddMMyyyy", CultureInfo.InvariantCulture).ToString("yyyy-MM-dd HH:mm:ss");
                            dr["MT_DT"] = sgen.Savedate(dtm.Rows[k][46].ToString(), true);
                        }
                        catch
                        {
                        }
                        dr["occ_type"] = dtm.Rows[k][47].ToString().Trim();
                        dr["PR_TYPE"] = dtm.Rows[k][48].ToString().Trim();
                        dr["file_no"] = dtm.Rows[k][49].ToString().Trim();
                        dr["refered_by"] = dtm.Rows[k][50].ToString().Trim();
                        dr["remark"] = dtm.Rows[k][51].ToString().Trim();
                        dr["sch_cat"] = dtm.Rows[k][52].ToString().Trim();
                        dr["sch_med"] = dtm.Rows[k][53].ToString().Trim();
                        dr["no_std"] = dtm.Rows[k][54].ToString().Trim();
                        dr["no_teach"] = dtm.Rows[k][55].ToString().Trim();
                        dr["Aff_type"] = dtm.Rows[k][56].ToString().Trim();
                        dr["cp_mname"] = dtm.Rows[k][57].ToString().Trim();
                        dr["cp_lname"] = dtm.Rows[k][58].ToString().Trim();
                        dr["leadsrc"] = dtm.Rows[k][59].ToString().Trim();
                        dr["CIN_Number"] = dtm.Rows[k][60].ToString().Trim();
                        dr["comp_email"] = dtm.Rows[k][61].ToString().Trim();
                        dr["bsn_type"] = dtm.Rows[k][62].ToString().Trim();
                        dr["prd_type"] = dtm.Rows[k][63].ToString().Trim();
                        dr["rec_id"] = "0";
                        dr["ent_by"] = userid_mst;
                        dr["ent_date"] = ent_date;
                        dr["edit_by"] = "-";
                        dr["edit_date"] = ent_date;
                        dr["client_id"] = clientid_mst;
                        dr["client_unit_id"] = unitid_mst;
                        dr["city_mn"] = sgen.getstring(userCode, "select city_name from country_state where rec_id='" + dtm.Rows[k][17].ToString().Trim() + "'"); ;
                        dtstr.Rows.Add(dr);
                        #endregion
                        #region contact detail
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where  type in " +
                                   "('" + model[0].Col12.Trim() + "' ,'DD" + model[0].Col12 + "')  and ref_code='" + vch_num + "' and substr(ref_code,0,3)='" + model[0].Col18 + "'";
                        string ct_vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");

                        DataRow dri = dtitb.NewRow();
                        dri["ref_code"] = vch_num;
                        dri["parent_id"] = vch_num;
                        dri["vch_num"] = ct_vch_num;
                        dri["vch_date"] = currdate;
                        dri["type"] = type.Trim();
                        dri["cpname"] = dtm.Rows[k][27].ToString().Trim();
                        dri["cp_mname"] = dtm.Rows[k][57].ToString().Trim();
                        dri["cp_lname"] = dtm.Rows[k][58].ToString().Trim();
                        dri["cpdesig"] = dtm.Rows[k][28].ToString().Trim();
                        dri["cpdept"] = dtm.Rows[k][29].ToString().Trim();
                        dri["cpcont"] = dtm.Rows[k][30].ToString().Trim();
                        dri["cpemail"] = dtm.Rows[k][31].ToString().Trim();
                        dri["cplandno"] = dtm.Rows[k][32].ToString().Trim();
                        dri["cpaltcont"] = dtm.Rows[k][33].ToString().Trim();
                        try
                        {
                            dri["DOB"] = DateTime.ParseExact(dtm.Rows[k][34].ToString().Trim(), "ddMMyyyy", CultureInfo.InvariantCulture).ToString("yyyy-MM-dd HH:mm:ss");
                            dri["DOA"] = DateTime.ParseExact(dtm.Rows[k][35].ToString().Trim(), "ddMMyyyy", CultureInfo.InvariantCulture).ToString("yyyy-MM-dd HH:mm:ss");
                        }
                        catch
                        {
                        }
                        dri["cpaddr"] = dtm.Rows[k][36].ToString().Trim();
                        dri["rec_id"] = "0";
                        dri["ent_by"] = userid_mst;
                        dri["ent_date"] = ent_date;
                        dri["edit_by"] = "-";
                        dri["edit_date"] = ent_date;
                        dri["client_id"] = clientid_mst;
                        dri["client_unit_id"] = unitid_mst;
                        dtitb.Rows.Add(dri);
                        #endregion
                    }
                    ok = sgen.Update_data_uncommit2(userCode, dtstr, model[0].Col10, model[0].Col8, isedit, sat1);
                    res = sgen.Update_data_uncommit2(userCode, dtitb, model[0].Col10, model[0].Col8, isedit, sat1);
                    #endregion
                    if (ok && res)
                    {
                        sat1.Commit();
                        ViewBag.vimport = "";
                        ViewBag.vsave = "disabled='disabled'";
                        //ViewBag.scripCall = "showmsgJS(1, 'Record Saved Successfully', 1);disableForm();";
                        ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Record Saved Successfully');disableForm();";
                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain()
                        {
                            Col9 = tmodel.Col9,
                            Col10 = tmodel.Col10,
                            Col11 = tmodel.Col11,
                            Col12 = tmodel.Col12,
                            Col13 = tmodel.Col13,
                            Col14 = tmodel.Col14,
                            Col15 = tmodel.Col15,
                            Col22 = tmodel.Col22,
                            dt1 = null
                        });
                    }
                    else
                    {
                        sat1.Rollback();
                        ViewBag.scripCall += "showmsgJS(1, 'Record Not Saved ', 0);disableForm();";
                    }
                }
                else if (command == "Import")
                {
                    HttpPostedFileBase file1 = upd1;
                    DataTable dt = new DataTable();
                    if (file1.ContentLength > 1)
                    {
                        string ext = Path.GetExtension(file1.FileName).ToLower();
                        if (ext == ".csv")
                        {
                            string filesavepath = AppDomain.CurrentDomain.BaseDirectory + "\\Uploads\\" + cg_com_name.Replace(" ", "")
                                + "\\file" + DateTime.Now.ToString("ddMMyyyyhhmmfff") + ext;
                            file1.SaveAs(filesavepath);
                            // Read sample data from CSV file
                            int i = 0;
                            using (CsvFileReader reader = new CsvFileReader(filesavepath))
                            {
                                CsvRow row = new CsvRow();
                                while (reader.ReadRow(row))
                                {
                                    DataRow dr = dt.NewRow();
                                    for (int c = 0; c < row.Count; c++)
                                    {
                                        if (i == 0) { dt.Columns.Add(row[c].ToString()); }
                                        else { dr[c] = row[c].ToString(); }
                                        //if (c > dt.Columns.Count) break;                                                                 
                                    }
                                    i++;
                                    dt.Rows.Add(dr);
                                }
                            }
                        }
                        dt.Rows[0].Delete();
                        model[0].dt1 = dt;
                        ViewBag.vsave = "";
                        ViewBag.vimport = "";
                    }
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        [HttpPost]
        public ContentResult SetSession(List<Tmodelmain> Val, string Name)
        {
            sgen = new sgenFun(Val[0].Col15);
            sgen.SetSession(Val[0].Col15, Name, Val);
            return Content("");
        }
        [HttpGet]
        public FileResult IAccount(List<Tmodelmain> model, string Myguid)
        {
            FillMst(MyGuid);
            sgen = new sgenFun(MyGuid);
            model = (List<Tmodelmain>)sgen.GetSession(MyGuid, "model");
            DataTable dtl = new DataTable();
            mq = "SELECT upper(PARAM3) ictrl FROM CONTROLS WHERE TYPE = 'VDC' AND UPPER(PARAM5)= '" + model[0].Col17 + "' AND  ID NOT IN " +
                "('000001','000008','000017','000061','000062','000063','000064','000065','000066','000067','000068','000069','000070','000071') and client_id='" + clientid_mst + "' " +
                "ORDER BY ID ASC";
            dtl = sgen.getdata(userCode, mq);
            DataTable dtc = new DataTable();
            if (dtl.Rows.Count > 0)
            {
                for (int k = 0; k < dtl.Rows.Count; k++)
                {
                    dtc.Columns.Add(dtl.Rows[k]["ictrl"].ToString().Trim(), typeof(string));
                }
            }
            dtc.AcceptChanges();
            string cg_com_name = sgen.GetCookie(MyGuid, "cg_com_name");
            Byte[] fileBytes = sgen.Exp_to_csv_new(dtc, "Accounts", cg_com_name);
            return File(fileBytes, System.Net.Mime.MediaTypeNames.Application.Octet, "Accounts");
        }
        #endregion
        #region gen_msg
        public ActionResult gen_msg()
        {
            FillMst();
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            //ViewBag.vsave = "";
            ViewBag.scripCall = "enableForm();";
            ViewBag.vsend = "disabled='disabled'";
            model[0].Col9 = "GENERAL MESSAGE";
            model[0].Col10 = "kc_tab";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "GEN";
            model[0].Col19 = "1";
            model[0].Col28 = "3";
            string defval = "";
            List<SelectListItem> mod1 = new List<SelectListItem>();
            List<SelectListItem> mod2 = new List<SelectListItem>();
            List<SelectListItem> mod3 = new List<SelectListItem>();
            #region MOC 1
            mod1 = new List<SelectListItem>();
            DataTable dt = sgen.getdata(userCode, "select 'SMS' as communication from dual Union all select 'Email' as communication from dual ");
            if (dt.Rows.Count > 0)
            {
                foreach (DataRow dr in dt.Rows)
                {
                    mod1.Add(new SelectListItem { Text = dr["communication"].ToString(), Value = dr["communication"].ToString() });
                }
            }
            TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1;
            model[0].SelectedItems1 = new string[] { "" };
            #endregion
            #region Mail cc 2
            mq2 = "select user_id||' ('||nvl(email,'-')||')' name  FROM user_details WHERE type<>'STD' and type<>'STP' ";
            dt = sgen.getdata(userCode, mq2);
            if (dt.Rows.Count > 0)
            {
                foreach (DataRow dr in dt.Rows)
                {
                    mod2.Add(new SelectListItem { Text = dr["name"].ToString(), Value = dr["name"].ToString() });
                }
            }
            TempData[MyGuid + "_Tlist2"] = model[0].TList2 = mod2;
            model[0].SelectedItems2 = new string[] { "" };
            #endregion
            #region  typeofclient
            TempData[MyGuid + "_TList3"] = model[0].TList3 = mod3 = cmd_Fun.clienttype(userCode, unitid_mst, out defval);
            model[0].SelectedItems3 = new string[] { "" };
            #endregion
            return View(model);
        }
        [HttpPost]
        public ActionResult gen_msg(List<Tmodelmain> model, string command, string mid)
        {
            try
            {
                string fdt = "", tdt = "";
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();
                DataTable dt = new DataTable();
                if (sgen.GetSession(MyGuid, "KPDCMD") != null)
                {
                    if (sgen.GetSession(MyGuid, "KPDFDT") != null) fdt = sgen.GetSession(MyGuid, "KPDFDT").ToString();
                    if (sgen.GetSession(MyGuid, "KPDTDT") != null) tdt = sgen.GetSession(MyGuid, "KPDTDT").ToString();
                    if (sgen.GetSession(MyGuid, "KPDCMD") != null) command = sgen.GetSession(MyGuid, "KPDCMD").ToString();
                    string tcp = "", tut = "", tfromdt = "", ttodate = "";
                    try
                    {
                        tcp = sgen.GetSession(MyGuid, "KDDL_CL").ToString();
                        tut = sgen.GetSession(MyGuid, "KDDL_UT").ToString();
                        tfromdt = sgen.GetSession(MyGuid, "TXTFROMDATE").ToString();
                        ttodate = sgen.GetSession(MyGuid, "TXTTODATE").ToString();
                    }
                    catch (Exception err) { }
                }
                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_Tlist1"];
                TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1;
                if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                List<SelectListItem> mod2 = (List<SelectListItem>)TempData[MyGuid + "_Tlist2"];
                TempData[MyGuid + "_Tlist2"] = model[0].TList2 = mod2;
                if (model[0].SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
                List<SelectListItem> mod3 = (List<SelectListItem>)TempData[MyGuid + "_Tlist3"];
                TempData[MyGuid + "_Tlist3"] = model[0].TList3 = mod3;
                if (model[0].SelectedItems3 == null) model[0].SelectedItems3 = new string[] { "" };
                if (command == "New")
                {
                    //model = getnew(model);
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command == "Previous Message")
                {
                    sgen.SetSession(MyGuid, "KPDCMD", null);
                    mq = "select (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr, a.vch_num doc_no," +
                        "to_char(convert_tz(a.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') as doc_date," +
                        " replace(nvl(b.c_name,'-'),'0','-') c_name,((replace(b.cpname,'0','-') || ' ' || replace(b.cp_mname, '0', '') || ' ' || " +
                        "replace(b.cp_lname, '0', ''))) contact_person,a.col31 as Message_Text from kc_tab a inner join clients_mst b on " +
                        "find_in_set_ONE(a.col41, b.ref_code) = 1 and a.client_unit_id = b.client_unit_id " +
                        "where a.type = 'GEN' and a.client_unit_id = '" + unitid_mst + "'  and" +
                        " to_date(to_char(a.vch_date,'" + sgen.Getsqldateformat() + "'),'" + sgen.Getsqldateformat() + "') between " +
                    "to_date('" + fdt + "','" + sgen.Getsqldateformat() + "') and to_date('" + tdt + "','" + sgen.Getsqldateformat() + "') ";

                    sgen.open_grid("Previous Messages List", mq, 1);
                    ViewBag.scripCall = "callFoo('Previous Messages List');";
                    //sgen.open_grid("Previous Messages List", cmd, 0);
                    //ViewBag.scripCall = "callFoo('Previous Messages List');";
                }
                else if (command == "Fill Data")
                {
                    string cond = "";
                    string comm = string.Join(",", model[0].SelectedItems1);
                    comm = comm.Replace("'", "");
                    if (comm.Contains(',')) { cond = "and ((a.cplandno!='0000000000' and a.cplandno!='0') or( a.cpemail!='ab@ab.ab' and a.cpemail!='0'))"; }
                    else
                    {
                        if (comm == "SMS")
                        { cond = "and a.cplandno!='0000000000' and a.cplandno!='0'"; }
                        else { cond = "and  a.cpemail!='ab@ab.ab' and  a.cpemail!='0'"; }
                    }
                    string cont_type = "", client_type = "";
                    mq1 = ""; mq2 = ""; mq3 = "";
                    string date_filter = "";
                    ViewBag.vfill = "disabled='disabled'";
                    if ((model[0].Chk1 == false) && (model[0].Chk2 == false) && (model[0].Chk3 == false))
                    {
                        ViewBag.scripCall += "mytoast('warning', 'toast-top-right', 'Please Select Atleast one Message Send To');";
                        return View(model);
                    }
                    if ((model[0].Col30 != null) && (model[0].Col31 != null))
                    {
                        string Fromdt = sgen.SaveDate_dt(model[0].Col30, true).ToString("yyyy-MM-dd", CultureInfo.InvariantCulture);
                        string todt = sgen.SaveDate_dt(model[0].Col31, true).ToString("yyyy-MM-dd", CultureInfo.InvariantCulture);
                        date_filter = "and to_date(to_char(a.created_date, 'ddmmyyyy'), 'ddmmyyyy') BETWEEN TO_DATE('" + Fromdt + "','yyyy-MM-dd')  AND " +
                                             "TO_DATE('" + todt + "','yyyy-MM-dd')";
                    }
                    if ((model[0].SelectedItems3.FirstOrDefault() != null) && (model[0].SelectedItems3.FirstOrDefault() != ""))
                    {
                        //client_type = "and c.client_type in (" + model[0].SelectedItems3.FirstOrDefault() + ")";
                        client_type = "and c.client_type in ('" + string.Join("','", model[0].SelectedItems3) + "')";//bd
                    }


                    if (model[0].Chk1 == true)// account
                    {
                        mq1 = "select (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.ref_code as acc_id,a.vch_num as id,b.c_name as Parent_Account," +
                                          "c.c_name as Account_Name,a.pincode as Pincode,a.type_desc as Search_text," +
                                          "Replace(a.cpname,'0','')||' '||Replace(a.cp_mname,'0','')||' '||Replace(a.cp_lname,'0','') as PerName,(case when a.cplandno='0000000000' then '-' else a.cplandno end ) as PerContact,(case when a.cpemail='ab@ab.ab' then '-' else a.cpemail end) as PerEmail,a.cpdesig " +
                                          "as PerDesig, 'Account Detail' as Data_Source from clients_mst a inner join clients_mst c on a.ref_code=c.vch_num and c.type='BCD' and c.client_unit_id=c.client_unit_id  left join clients_mst b on a.parent_id=b.vch_num " +
                                          " and a.client_unit_id=b.client_unit_id and b.type='BCD' where a.type in ('BCD') and a.client_unit_id='" + unitid_mst + "' and substr(a.ref_code,0,3)=303 " + client_type + " " + date_filter + " " + cond + "";
                    }
                    if (model[0].Chk2 == true)//prospect
                    {
                        mq2 = "select (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.ref_code acc_id,a.vch_num as id,c.c_name" +
                        " as Parent_Account,c.c_name as Account_Name ,a.pincode as Pincode,a.type_desc as" +
                        " Search_text,Replace(a.cpname,'0','')||' '||Replace(a.cp_mname,'0','')||' '||Replace(a.cp_lname,'0','')  as PerName,(case when a.cplandno='0000000000' then '-' else a.cplandno end ) as PerContact,(case when a.cpemail='ab@ab.ab' then '-' else a.cpemail end) as PerEmail" +
                        ",a.cpdesig as PerDesig , 'Prospect Data' as Data_Source  from clients_mst a inner join clients_mst c on a.ref_code=c.vch_num and c.type='PRO' and c.client_unit_id=c.client_unit_id " +
                        " where a.type in ('PRO') and" +
                        " a.client_unit_id = '" + unitid_mst + "' and (a.Pros ='0' or a.Pros is null or a.Pros = 'N') and substr(a.ref_code,0,3)=909  " + client_type + " " + date_filter + " " + cond + "";
                    }
                    if (model[0].Chk3 == true)//lead
                    {
                        mq3 = "select (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.ref_code as acc_id,a.vch_num as id,b.c_name as Parent_Account," +
                        "a.c_name as Account_Name,a.pincode as Pincode,a.type_desc as Search_text," +
                        "Replace(a.cpname,'0','')||' '||Replace(a.cp_mname,'0','')||' '||Replace(a.cp_lname,'0','')  as PerName,(case when a.cplandno='0000000000' then '-' else a.cplandno end ) as PerContact ,(case when a.cpemail='ab@ab.ab' then '-' else a.cpemail end) as PerEmail,a.cpdesig as PerDesig, " +
                        "'Account Detail' as Data_Source from lead_master l  inner join clients_mst a on l.cust_id = a.ref_code and l.cp_ref_type = substr(a.ref_code,0,3) " +
                        "and l.client_unit_id = a.client_unit_id left join clients_mst b on a.parent_id = b.vch_num  and a.client_unit_id = b.client_unit_id" +
                        " and b.type = 'BCD' where l.type = 'LED' and l.client_unit_id = '" + unitid_mst + "' " + client_type + " " + date_filter + " " + cond + " ";
                    }
                    if ((mq1 == "") && (mq2 == ""))
                    {
                        //cont_type = "and type in('LED')";
                        cont_type = "and ";
                        mq = mq3;
                    }
                    if ((mq2 == "") && (mq3 == "")) { mq = mq1; }
                    if ((mq3 == "") && (mq1 == ""))
                    {

                        mq = mq2;
                    }
                    if ((mq1 != "") && (mq2 != ""))
                    {

                        mq = mq1 + " union " + mq2;
                    }
                    if ((mq2 != "") && (mq3 != ""))
                    {

                        mq = mq2 + " union " + mq3;
                    }
                    if ((mq3 != "") && (mq1 != ""))
                    {

                        mq = mq3 + " union " + mq1;
                    }
                    if ((mq1 != "") && (mq2 != "") && (mq3 != ""))
                    {

                        mq = mq1 + " union " + mq2 + " union " + mq3;
                    }
                    if (mq != "")
                    {
                        //mq = "select distinct a.fstr,a.acc_id,a.Parent_Account,a.Account_Name,a.PerName,a.PerContact,a.PerEmail from (" + mq + ")a " +
                        //    "where a.id in (select  min(a.vch_num)  from clients_mst a  where a.client_id='" + clientid_mst + "'" +
                        //    " and a.client_unit_id='" + unitid_mst + "' " + cont_type + " " + client_type + " " + date_filter + " group by cplandno,cpemail )";
                        mq = "select distinct a.fstr,a.acc_id,a.Parent_Account,a.Account_Name,a.PerName,a.PerContact,a.PerEmail from (" + mq + ")a ";
                        dt = sgen.getdata(userCode, mq);
                        if (dt.Rows.Count > 0)
                        {
                            model = new List<Tmodelmain>();
                            for (int i = 0; i < dt.Rows.Count; i++)
                            {
                                Tmodelmain tmm = new Tmodelmain();
                                tmm.Col23 = dt.Rows[i]["Parent_Account"].ToString();
                                tmm.Col24 = dt.Rows[i]["Account_Name"].ToString();
                                tmm.Col25 = dt.Rows[i]["PerName"].ToString();
                                tmm.Col26 = dt.Rows[i]["PerContact"].ToString();
                                tmm.Col27 = dt.Rows[i]["PerEmail"].ToString();
                                tmm.Col29 = dt.Rows[i]["acc_id"].ToString();
                                tmm.Chk1 = tm.Chk1;
                                tmm.Chk2 = tm.Chk2;
                                tmm.Chk3 = tm.Chk3;
                                tmm.Chk4 = tm.Chk4;
                                tmm.Chk5 = tm.Chk5;
                                tmm.Chk6 = tm.Chk6;
                                tmm.Col17 = tm.Col17;
                                tmm.Col18 = tm.Col18;
                                tmm.Col28 = tm.Col28;
                                tmm.Col19 = tm.Col19;
                                tmm.Col20 = tm.Col20;
                                tmm.Col9 = tm.Col9;
                                tmm.Col10 = tm.Col10;
                                tmm.Col11 = tm.Col11;
                                tmm.Col12 = tm.Col12;
                                tmm.Col14 = tm.Col14;
                                tmm.Col15 = tm.Col15;
                                tmm.Col30 = tm.Col30;
                                tmm.Col31 = tm.Col31;
                                tmm.TList1 = tm.TList1;
                                tmm.TList2 = tm.TList2;
                                tmm.TList3 = tm.TList3;
                                tmm.SelectedItems1 = tm.SelectedItems1;
                                tmm.SelectedItems2 = tm.SelectedItems2;
                                tmm.SelectedItems3 = tm.SelectedItems3;
                                model.Add(tmm);
                            }
                        }
                        else
                        {
                            //model = new List<Tmodelmain>();
                            //Tmodelmain tmm = new Tmodelmain();
                            //tmm.Chk1 = tm.Chk1;
                            //tmm.Chk2 = tm.Chk2;
                            //tmm.Chk3 = tm.Chk3;
                            //tmm.Chk4 = tm.Chk4;
                            //tmm.Chk5 = tm.Chk5;
                            //tmm.Chk6 = tm.Chk6;
                            //tmm.Col17 = tm.Col17;
                            //tmm.Col18 = tm.Col18;
                            //tmm.Col28 = tm.Col28;
                            //tmm.Col19 = tm.Col19;
                            //tmm.Col20 = tm.Col20;
                            //tmm.Col9 = tm.Col9;
                            //tmm.Col10 = tm.Col10;
                            //tmm.Col11 = tm.Col11;
                            //tmm.Col12 = tm.Col12;
                            //tmm.Col14 = tm.Col14;
                            //tmm.Col15 = tm.Col15;
                            //tmm.Col30 = tm.Col30;
                            //tmm.Col31 = tm.Col31;
                            //tmm.TList1 = tm.TList1;
                            //tmm.TList2 = tm.TList2;
                            //tmm.TList3 = tm.TList3;
                            //tmm.SelectedItems1 = tm.SelectedItems1;
                            //tmm.SelectedItems2 = tm.SelectedItems2;
                            //tmm.SelectedItems3 = tm.SelectedItems3;
                            //model.Add(tmm);
                            ViewBag.scripCall += "mytoast('warning', 'toast-top-right', 'No Data Exist');";
                            return View(model);
                        }
                    }
                }
                else if (command == "Send")
                {
                    string xtitle = "", msg_txt = "", emailidcc = "";
                    BulkSMS bulk = new BulkSMS(userCode, clientid_mst, unitid_mst, MyGuid);
                    string[] ddlsend = string.Join(",", model[0].SelectedItems1).Split(',');
                    string comm = string.Join(",", model[0].SelectedItems1);
                    comm = comm.Replace("'", "");
                    string Email_id = "";
                    try
                    {
                        for (int i = 0; i < model.Count; i++)
                        {
                            if (model[i].Col27 == null) { model[i].Col27 = "-"; }
                            if (sgen.ValidateEmail(model[i].Col27.ToString()))
                            {
                                if ((model[i].Col27 != "") && (model[i].Col27 != "-") && (model[i].Col27 != "0"))
                                {
                                    if (Email_id.Equals("")) Email_id = model[i].Col27;
                                    else
                                    {
                                        Email_id = Email_id + "," + model[i].Col27;
                                    }
                                }
                            }
                        }
                    }
                    catch { }
                    string acc_id = "";
                    foreach (string comm_type in ddlsend)
                    {
                        {
                            if ((model[0].Col18 != ""))
                            {
                                if (model[0].Col18 != null)
                                {
                                    string[] ph_cc = (model[0].Col18.Split(','));
                                    string phone_cc = "";
                                    for (Int32 y = 0; y < ph_cc.Length; y++)
                                    {
                                        phone_cc = ph_cc[y];
                                        if ((phone_cc != "0"))
                                        {
                                            msg_txt = sgen.ExtractHtmlInnerText(model[0].Col20.Replace("\r\n", " %0a "));
                                            string smsstatus = sgen.Send_Sms(userCode, clientid_mst, unitid_mst, phone_cc, msg_txt, model[0].Col19 == "2");
                                            acc_id = "999999PHT";
                                        }
                                    }
                                }
                            }
                        }
                        if (((comm_type == "SMS") && model[0].Col28 == "3"))
                        {
                            try
                            {
                                for (int i = 0; i < model.Count; i++)
                                {
                                    if (model[i].Chk6 == true)
                                    {
                                        if ((model[i].Col26 != "") && (model[i].Col26 != "-") && (model[i].Col26 != "0"))
                                        {
                                            msg_txt = sgen.ExtractHtmlInnerText(model[0].Col20.Replace("\r\n", " %0a ")) + "";
                                            string account = model[i].Col24;
                                            string person = model[i].Col25;
                                            string mobile = model[i].Col26;
                                            string email = model[i].Col27;
                                            msg_txt = msg_txt.Replace("[account]", account);
                                            msg_txt = msg_txt.Replace("[person]", person);
                                            msg_txt = msg_txt.Replace("[mobile]", mobile);
                                            msg_txt = msg_txt.Replace("[email]", email);
                                            if (acc_id.Equals("")) acc_id = model[i].Col29;
                                            else
                                            {
                                                acc_id = acc_id + "," + model[i].Col29;
                                            }
                                            // [acount] , [person] , [mobile] , [email]
                                            bulk.Add_sms(model[i].Col26, msg_txt, model[0].Col19 == "2");
                                            string smsstatus = sgen.Send_Sms(userCode, clientid_mst, unitid_mst, model[i].Col26, msg_txt, model[0].Col19 == "2");
                                        }
                                    }
                                }
                            }
                            catch (Exception err) { bulk.Send_SMS_Bulk(); }
                        }
                        if (((comm_type == "SMS") && model[0].Col28 == "1"))
                        {
                            try
                            {
                                for (int i = 0; i < model.Count; i++)
                                {
                                    if (model[i].Chk6 == true)
                                    {
                                        if (acc_id.Equals("")) acc_id = model[i].Col29;
                                        else
                                        {
                                            acc_id = acc_id + "," + model[i].Col29;
                                        }
                                        msg_txt = sgen.ExtractHtmlInnerText(model[0].Col20.Replace("\r\n", " %0a ")) + "";
                                        string account = model[i].Col24;
                                        string person = model[i].Col25;
                                        string mobile = model[i].Col26;
                                        string email = model[i].Col27;
                                        msg_txt = msg_txt.Replace("[account]", account);
                                        msg_txt = msg_txt.Replace("[person]", person);
                                        msg_txt = msg_txt.Replace("[mobile]", mobile);
                                        msg_txt = msg_txt.Replace("[email]", email);
                                        if ((model[i].Col26 != "") && (model[i].Col26 != "-") && (model[i].Col26 != "0"))
                                        {
                                            bulk.Add_sms(model[i].Col26, msg_txt, model[0].Col19 == "2");
                                        }
                                    }
                                }
                            }
                            catch (Exception err) { bulk.Send_SMS_Bulk(); }
                            bulk.Send_SMS_Bulk();
                        }
                        try
                        {
                            if (comm_type == "Email") // 
                            {
                                if ((model[0].SelectedItems2.FirstOrDefault() != "") || (model[0].SelectedItems2.FirstOrDefault() != "0"))
                                {
                                    string mailcc = string.Join(",", model[0].SelectedItems2);
                                    if (mailcc != "")
                                    {
                                        mailcc = mailcc.Replace("'", "");
                                        string[] itar = mailcc.Trim().Split(',');
                                        if (itar.Length > 0)
                                        {
                                            for (Int32 a = 0; a < itar.Length; a++)
                                            {
                                                string[] Emialar = itar[a].Replace("(", "").Replace(")", "").Trim().Split(' ');
                                                if (sgen.ValidateEmail(Emialar[1].ToString()))
                                                {
                                                    if (emailidcc.Equals("")) emailidcc = Emialar[1].ToString();
                                                    else
                                                    {
                                                        emailidcc = emailidcc + "," + Emialar[1].ToString();
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                                for (int i = 0; i < model.Count; i++)
                                {
                                    #region SEND MAIL
                                    string mailfrom = "";
                                    DataTable datatable = new DataTable();
                                    datatable = sgen.getdata(userCode, "select com_email from company_profile where Company_Profile_Id='" + clientid_mst + "' and type='CP'");
                                    if (datatable.Rows.Count > 0)
                                    {
                                        mailfrom = Convert.ToString(datatable.Rows[0]["com_email"]);
                                    }
                                    if (model[0].Col28 == "3") //indiv
                                    {
                                        xtitle = "";
                                        if (model[i].Chk6 == true)
                                        {
                                            if (sgen.ValidateEmail(model[0].Col27.ToString()))
                                            {
                                                if ((model[i].Col27 != "") && (model[i].Col27 != "-") && (model[i].Col27 != "0"))
                                                {
                                                    msg_txt = sgen.ExtractHtmlInnerText(model[0].Col20.Replace("\r\n", " %0a ")) + "";
                                                    string account = model[i].Col24;
                                                    string person = model[i].Col25;
                                                    string mobile = model[i].Col26;
                                                    string email = model[i].Col27;
                                                    msg_txt = msg_txt.Replace("[account]", account);
                                                    msg_txt = msg_txt.Replace("[person]", person);
                                                    msg_txt = msg_txt.Replace("[mobile]", mobile);
                                                    msg_txt = msg_txt.Replace("[email]", email);
                                                    Email_id = model[i].Col27;
                                                    emailidcc = model[i].Col27;
                                                    if (acc_id.Equals("")) acc_id = model[i].Col29;
                                                    else
                                                    {
                                                        acc_id = acc_id + "," + model[i].Col29;
                                                    }
                                                    var body = new StringBuilder();
                                                    body.AppendLine(@"<b style='color:#3caee9; font-size: 20px'>" + model[0].Col17 + " </b><br /><hr style='border:1px solid black' />" +
                                                         "<p>Hi <b>Dear: </b>,</p><table style='font-weight:600'>");
                                                    if (model[0].Chk4 == true)
                                                    {
                                                        body.AppendLine(@"</table><br /><p>" + msg_txt + "</p><p>ThankYou,<br />" + model[0].Col21 + "<br /></p><br />");
                                                    }
                                                    else
                                                    {
                                                        body.AppendLine(@"</table><br /><p>" + msg_txt + "</p><p>ThankYou,<br />" + clientname_mst + "<br /></p><br />");
                                                    }
                                                    sgen.Send_mail_SA1(userCode, clientid_mst, unitid_mst, Email_id, emailidcc, "", body.ToString(), model[0].Col17, "");
                                                }
                                            }
                                        }
                                    }
                                    if (model[0].Col28 == "1")//  all comman
                                    {
                                        Mailer mailer = new Mailer(userCode, clientid_mst, unitid_mst, MyGuid);
                                        var body = new StringBuilder();
                                        if (model[i].Chk6 == true)
                                        {
                                            if (sgen.ValidateEmail(model[0].Col29.ToString()))
                                            {
                                                if ((model[i].Col27 != "") && (model[i].Col27 != "-") && (model[i].Col27 != "0"))
                                                {
                                                    msg_txt = sgen.ExtractHtmlInnerText(model[0].Col20.Replace("\r\n", " %0a ")) + "";
                                                    string account = model[i].Col24;
                                                    string person = model[i].Col25;
                                                    string mobile = model[i].Col26;
                                                    string email = model[i].Col27;
                                                    msg_txt = msg_txt.Replace("[account]", account);
                                                    msg_txt = msg_txt.Replace("[person]", person);
                                                    msg_txt = msg_txt.Replace("[mobile]", mobile);
                                                    msg_txt = msg_txt.Replace("[email]", email);
                                                    Email_id = model[i].Col27;
                                                    emailidcc = model[i].Col27;
                                                    xtitle = "";
                                                    if (acc_id.Equals("")) acc_id = model[i].Col29;
                                                    else
                                                    {
                                                        acc_id = acc_id + "," + model[i].Col29;
                                                    }
                                                    body.AppendLine(@"<b style='color:#3caee9; font-size: 20px'>" + model[i].Col17 + " </b><br /><hr style='border:1px solid black' />" +
                                                 "<table style='font-weight:600'>");
                                                    if (model[i].Chk3 == true)
                                                    {
                                                        body.AppendLine(@"</table><br /><p>" + model[i].Col22 + "</p><p>ThankYou,<br />" + model[i].Col23 + "<br /></p><br />");
                                                    }
                                                    else
                                                    {
                                                        body.AppendLine(@"</table><br /><p>" + model[i].Col22 + "</p><p>ThankYou,<br />" + clientname_mst + "<br /></p><br />");
                                                    }
                                                    sgen.Send_mail_SA1(userCode, clientid_mst, unitid_mst, Email_id, emailidcc, "", body.ToString(), model[i].Col17, "");
                                                }
                                                {
                                                    mailer.Add_Mail(model[0].Col29.ToString(), model[0].Col17.ToString(), body.ToString());
                                                }
                                            }
                                        }
                                        //}
                                        mailer.Send_Email_Bulk();
                                    }
                                    #endregion
                                }
                            }
                        }
                        catch (Exception err) { }
                    }
                    if (acc_id != "")
                    {
                        string currdate = sgen.server_datetime(userCode);
                        isedit = false;
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        model[0].Col16 = vch_num;
                        DataTable dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                        DataRow dr = dtstr.NewRow();
                        dr["rec_id"] = "0";
                        dr["type"] = model[0].Col12;
                        dr["vch_num"] = vch_num.Trim();
                        dr["vch_date"] = sgen.Savedate(model[0].Col17, false);
                        dr["COl31"] = model[0].Col20;// MSG
                        dr["COl41"] = acc_id;
                        //dr["date1"] = sgen.Make_date_S(model[0].Col17);
                        //dr["date2"] = sgen.Make_date_S(model[0].Col18);
                        dr["COl33"] = model[0].Col17; //Mail Heading
                        dr["COl2"] = model[0].Col18; //phone cc
                        dr["COl35"] = emailidcc;  //Mail cc
                        dr["COl2"] = model[0].Col19; //language type
                        dr["COl3"] = model[0].Col28; //Message  type
                        dr = getsave(currdate, dr, model, isedit);
                        dtstr.Rows.Add(dr);
                        bool Result = sgen.Update_data_fast1(userCode, dtstr, model[0].Col10.Trim(), "", false);
                        ViewBag.fill = "";
                        ViewBag.vsend = "disabled='disabled'";
                        ViewBag.scripCall = "enableForm();";
                        ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Wish Send Successfully');";
                    }
                    model = new List<Tmodelmain>();
                    model.Add(new Tmodelmain
                    {
                        Col9 = tm.Col9,
                        Col10 = tm.Col10,
                        Col11 = tm.Col11,
                        Col12 = tm.Col12,
                        Col13 = "Save",
                        Col14 = tm.Col14,
                        Col15 = tm.Col15,
                        TList1 = tm.TList1,
                        SelectedItems1 = tm.SelectedItems1,
                        TList2 = tm.TList2,
                        SelectedItems2 = tm.SelectedItems2,
                        TList3 = tm.TList3,
                        SelectedItems3 = tm.SelectedItems3,
                    });
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region Site Visit
        public ActionResult s_visit(string mid)
        {
            MyGuid = EncryptDecrypt.Decrypt(HttpUtility.ParseQueryString(Request.UrlReferrer.Query)["m_id"]);
            FillMst(MyGuid);
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            DataTable dtb = (DataTable)sgen.GetSession(MyGuid, "URIGHTS");
            try
            {
                dtb = dtb.Select("m_id='" + model[0].Col14 + "'").CopyToDataTable();
                if (dtb.Rows.Count > 0)
                {
                    model[0].Col85 = dtb.Rows[0]["btnnew"].ToString();
                    model[0].Col86 = dtb.Rows[0]["btnedit"].ToString();
                    model[0].Col87 = dtb.Rows[0]["btnview"].ToString();
                }
            }
            catch (Exception ex) { }
            model[0].Col9 = "SITE VISIT";
            model[0].Col10 = "kc_tab";  // TABLE
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "SVR";  // type
            DataTable dt = sgen.getdata(userCode, "select '' SCH,'1' SNo ,'false' SMS,'-' Supervisor_Discussion,'-' Supervisior_Visit_By,'-' Supervisior_Visit_Date,'-' Person_Met_With from dual");
            model[0].dt1 = dt;
            sgen.SetSession(MyGuid, "RSCH_DT", dt);
            if (Request.QueryString["fstr"] != null)
            {
                sgen.SetSession(MyGuid, "SSEEKVAL", EncryptDecrypt.Decrypt(Request.QueryString["fstr"].ToString())); ;
                CallbackFun("VIEW", "N", "s_visit", "vastu", model);
                model[0].Col15 = MyGuid;
                model[0].Col13 = "Save";
                model[0].Col100 = "Save & New";
                model[0].Col121 = "S";
                model[0].Col122 = "<u>S</u>ave";
                model[0].Col123 = "Save & Ne<u>w</u>";
                ViewBag.vnew = "disabled='disabled'";
                ViewBag.vedit = "disabled='disabled'";
                ViewBag.vsave = "disabled='disabled'";
                ViewBag.vsavenew = "disabled='disabled'";
                ViewBag.scripCall = "disableForm();";
                return View(model);
            }

            return View(model);
        }
        public List<Tmodelmain> news_visit(List<Tmodelmain> model)
        {
            model = getnew(model);
            model[0].Col92 = model[0].Col16;
            return model;
        }
        [HttpPost]
        public ActionResult s_visit(List<Tmodelmain> model, string command, string mid, HttpPostedFileBase[] upd1, string hfrow, string hftable)
        {
            try
            {
                FillMst();
                DataTable dtm = sgen.settable(hftable);
                model[0].dt1 = dtm;
                var tm = model.FirstOrDefault();
                if (command == "New")
                {
                    if (model[0].Col85 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for new entry, please contact your admin', 2);";
                        return View(model);
                    }
                    model = news_visit(model);
                    model[0].Col92 = model[0].Col16;
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "+")
                {
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    if (model[0].dt1.Rows.Count != 0)
                    {
                        model[0].dt1.Rows.Add(sgen.Make_int(hfrow));
                        //model[0].dt1.Rows[sgen.Make_int(hfrow+1)]["SMS"]="false";
                    }
                    else { model[0].dt1 = (DataTable)sgen.GetSession(MyGuid, "RSCH_DT"); }
                }
                else if (command == "-")
                {
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    if (model[0].dt1.Rows.Count > 1) model[0].dt1.Rows.RemoveAt(sgen.Make_int(hfrow));
                    else { model[0].dt1 = (DataTable)sgen.GetSession(MyGuid, "RSCH_DT"); }
                }
                else if (command == "Callback")
                {
                    //model = StartCallback(model);
                    if (sgen.GetSession(MyGuid, "delid") != null) { btnval = "FDEL"; sgen.SetSession(MyGuid, "btnval", btnval); }
                    else if (sgen.GetSession(MyGuid, "btnval") != null) btnval = sgen.GetSession(MyGuid, "btnval").ToString();
                    if ((model[0].Col86 == "N") && (btnval == "EDIT"))
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for edit entries, please contact your admin', 2);disableForm();";
                        return View(model);
                    }
                    model = StartCallback(model);
                    DataTable dtb = (DataTable)sgen.GetSession(MyGuid, "URIGHTS");
                    try
                    {
                        dtb = dtb.Select("m_id='" + model[0].Col14 + "'").CopyToDataTable();
                        if (dtb.Rows.Count > 0)
                        {
                            model[0].Col85 = dtb.Rows[0]["btnnew"].ToString();
                            model[0].Col86 = dtb.Rows[0]["btnedit"].ToString();
                            model[0].Col87 = dtb.Rows[0]["btnview"].ToString();
                        }
                    }
                    catch (Exception ex) { }
                    if (btnval == "VIEW")
                    {
                        model[0].Col13 = "Save";
                        model[0].Col100 = "Save & New";
                        model[0].Col121 = "S";
                        model[0].Col122 = "<u>S</u>ave";
                        model[0].Col123 = "Save & Ne<u>w</u>";
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "disabled='disabled'";
                        ViewBag.vsavenew = "disabled='disabled'";
                        ViewBag.scripCall = "disableForm();";
                    }
                }
                else if (command.Trim() == "Save" || command.Trim() == "Update" || command == "Save & New" || command == "Update & New")
                {
                    if (model[0].Col85 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for save visit entry, please contact your admin', 2);";
                        return View(model);
                    }
                    var tmodel = model.FirstOrDefault();
                    string currdate = sgen.server_datetime(userCode);
                    string cond = "", found = "";
                    DataTable dtstr = new DataTable();
                    dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        isedit = true;
                        vch_num = model[0].Col16;
                    }
                    else
                    {
                        isedit = false;
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        model[0].Col16 = vch_num;
                    }
                    {
                        DataRow dr = dtstr.NewRow();
                        dr["rec_id"] = "0";
                        dr["type"] = model[0].Col12;
                        dr["vch_num"] = vch_num.Trim();
                        dr["vch_date"] = currdate;
                        dr["col70"] = model[0].Col81;      //account id
                        dr["col71"] = model[0].Col93;      //contact id
                        dr["col72"] = "01";      //ref_type
                        dr["col23"] = model[0].Col21;      //ARCHITECT
                        dr["col26"] = model[0].Col22;      //MEASUREMENT DONE BY
                        dr["col29"] = model[0].Col23;      //DRAWINGS PREPARED BY
                        dr["col38"] = model[0].Col24;      //FINAL DISCUSSION HELD WITH
                        dr["col15"] = model[0].Col25;      //SITE HANDLED BY
                        dr["col31"] = model[0].Col26;      //DISCUSSION WITH CUSTOMER
                        dr["col16"] = model[0].Col27;      //KITCHEN TYPE
                        dr["col17"] = model[0].Col28;      //HANDLES
                        dr["col18"] = model[0].Col29;      //COLOR
                        dr["col19"] = model[0].Col30;      //SUTTER FINISH
                        dr["col20"] = model[0].Col31;      //SHUTTER SOURCE                                                          
                        dr["col21"] = model[0].Col32;      //DISCUSSION WITH PLUMBER Done By                                                          
                        dr["Date1"] = sgen.Make_date_S(model[0].Col33);      //DISCUSSION WITH PLUMBER Date  
                        dr["col22"] = model[0].Col34;      //DISCUSSION WITH PLUMBER Checked By    
                        dr["Date29"] = sgen.Make_date_S(model[0].Col35);      //DISCUSSION WITH PLUMBER   
                        dr["col24"] = model[0].Col36;      // DISCUSSION WITH ELECTRICIAN Done By                                                          
                        dr["Date2"] = sgen.Make_date_S(model[0].Col37);      //DISCUSSION WITH ELECTRICIAN Date  
                        dr["col25"] = model[0].Col38;      //DISCUSSION WITH ELECTRICIAN Checked By    
                        dr["date30"] = sgen.Make_date_S(model[0].Col39);      //DISCUSSION WITH ELECTRICIAN  
                        dr["col27"] = model[0].Col40;      // DISCUSSION WITH  CIVIL WORKER Done By                                                          
                        dr["Date3"] = sgen.Make_date_S(model[0].Col41);      //DISCUSSION WITH  CIVIL WORKER Date  
                        dr["col28"] = model[0].Col42;      //DISCUSSION WITH  CIVIL WORKER Checked By    
                        dr["date31"] = sgen.Make_date_S(model[0].Col43);      //DISCUSSION WITH  CIVIL WORKER  
                        dr["col30"] = model[0].Col44;      // PLATFORM MEASUREMENT Done By                                                          
                        dr["Date4"] = sgen.Make_date_S(model[0].Col45);      //PLATFORM MEASUREMENT Date  
                        dr["col37"] = model[0].Col46;      //PLATFORM MEASUREMENT Checked By    
                        dr["date32"] = sgen.Make_date_S(model[0].Col47);      //PLATFORM MEASUREMENT 
                        dr["Date5"] = sgen.Make_date_S(model[0].Col48);      //GIVEN DATE 
                        dr["Date6"] = sgen.Make_date_S(model[0].Col49);      //Boxes Status UPPER BOXES PRODUCTION DATE 
                        dr["Date7"] = sgen.Make_date_S(model[0].Col50);      //Boxes Status LOWER BOXES PRODUCTION DATE 
                        dr["Date8"] = sgen.Make_date_S(model[0].Col51);      //Boxes Status UPPER BOXES Dispatched DATE 
                        dr["Date9"] = sgen.Make_date_S(model[0].Col52);      //Boxes Status LOWER BOXES Dispatched DATE 
                        dr["Date10"] = sgen.Make_date_S(model[0].Col53);      //Boxes Status UPPER BOXES INSTALLED DATE 
                        dr["Date11"] = sgen.Make_date_S(model[0].Col54);      //Boxes Status LOWER BOXES INSTALLED DATE 
                        dr["col39"] = model[0].Col55;      //REMEASUREMENT STATUS
                        dr["Date12"] = sgen.Make_date_S(model[0].Col56);      //REMEASUREMENT STATUS DATE 
                        dr["col40"] = model[0].Col57;      //Post Box Tiles Fix
                        dr["Date13"] = sgen.Make_date_S(model[0].Col58);      //Post Box Tiles Fix DATE 
                        dr["col68"] = model[0].Col59;      //Post Box PAINT 
                        dr["Date33"] = sgen.Make_date_S(model[0].Col60);      //Post Box PAINT DATE 
                        dr["col32"] = model[0].Col61;      //Post Box Worktop 
                        dr["Date14"] = sgen.Make_date_S(model[0].Col62);      //Post Box Worktop DATE 
                        dr["col33"] = model[0].Col63;      //Post Box POP 
                        dr["Date15"] = sgen.Make_date_S(model[0].Col64);      //Post Box POP DATE 
                        dr["col34"] = model[0].Col65;      //Post Box Flooring 
                        dr["Date34"] = sgen.Make_date_S(model[0].Col66);      //Post Box Flooring DATE 
                        dr["col35"] = model[0].Col80;      //remarks 
                        dr["Date16"] = sgen.Make_date_S(model[0].Col67);//PRODUCTION DATE (SHUTTERS STATUS)
                        dr["Date17"] = sgen.Make_date_S(model[0].Col68);//DISPATCHED DATE (SHUTTERS STATUS)
                        dr["Date18"] = sgen.Make_date_S(model[0].Col69);//INSTALLED DATE (SHUTTERS STATUS)
                        //dr["Date19"] = sgen.Make_date_S(model[0].Col70);//ISupervisior Visit Date1
                        //dr["Date20"] = sgen.Make_date_S(model[0].Col71);//Technician Date Visit Date1
                        //dr["Date21"] = sgen.Make_date_S(model[0].Col72);//ISupervisior Visit Date2
                        //dr["Date22"] = sgen.Make_date_S(model[0].Col73);//Technician Date Visit Date2
                        //dr["Date23"] = sgen.Make_date_S(model[0].Col74);//ISupervisior Visit Date3
                        //dr["Date24"] = sgen.Make_date_S(model[0].Col75);//Technician Date Visit Date3
                        //dr["Date25"] = sgen.Make_date_S(model[0].Col76);//ISupervisior Visit Date4
                        //dr["Date26"] = sgen.Make_date_S(model[0].Col77);//Technician Date Visit Date4
                        //dr["Date27"] = sgen.Make_date_S(model[0].Col78);//ISupervisior Visit Date5
                        //dr["Date28"] = sgen.Make_date_S(model[0].Col79);//Technician Date Visit Date5
                        if (model[0].Chk1 == true) { dr["col42"] = "Y"; } else { dr["col42"] = "N"; }//DISCUSSION WITH PLUMBER
                        if (model[0].Chk2 == true) { dr["col43"] = "Y"; } else { dr["col43"] = "N"; }//DISCUSSION WITH ELECTRICIAN
                        if (model[0].Chk3 == true) { dr["col44"] = "Y"; } else { dr["col44"] = "N"; }//DISCUSSION WITH CIVIL WORKER
                        if (model[0].Chk4 == true) { dr["col45"] = "Y"; } else { dr["col45"] = "N"; }//PLATFORM MEASUREMENT
                        if (model[0].Chk5 == true) { dr["col46"] = "Y"; } else { dr["col46"] = "N"; }//GIVEN TO FACTORY
                        if (model[0].Chk6 == true) { dr["col47"] = "Y"; } else { dr["col47"] = "N"; }//In Production UPPER BOXES
                        if (model[0].Chk7 == true) { dr["col1"] = "Y"; } else { dr["col1"] = "N"; }//In Production LOWER BOXES
                        if (model[0].Chk8 == true) { dr["col2"] = "Y"; } else { dr["col2"] = "N"; }//Dispatched UPPER BOXES
                        if (model[0].Chk9 == true) { dr["col3"] = "Y"; } else { dr["col3"] = "N"; }//Dispatched LOWER BOXES
                        if (model[0].Chk10 == true) { dr["col4"] = "Y"; } else { dr["col4"] = "N"; }//INSTALLED UPPER BOXES
                        if (model[0].Chk11 == true) { dr["col5"] = "Y"; } else { dr["col5"] = "N"; }//INSTALLED LOWER BOXES
                        if (model[0].Chk12 == true) { dr["col6"] = "Y"; } else { dr["col6"] = "N"; }//REMEASUREMENT STATUS
                        if (model[0].Chk13 == true) { dr["col7"] = "Y"; } else { dr["col7"] = "N"; }//Post Box Tiles Fix
                        if (model[0].Chk14 == true) { dr["col8"] = "Y"; } else { dr["col8"] = "N"; }//PAINT
                        if (model[0].Chk15 == true) { dr["col9"] = "Y"; } else { dr["col9"] = "N"; }//Worktop
                        if (model[0].Chk16 == true) { dr["col10"] = "Y"; } else { dr["col10"] = "N"; }//POP
                        if (model[0].Chk17 == true) { dr["col11"] = "Y"; } else { dr["col11"] = "N"; }//Flooring
                        if (model[0].Chk18 == true) { dr["col12"] = "Y"; } else { dr["col12"] = "N"; }//PRODUCTION  (SHUTTERS STATUS)
                        if (model[0].Chk19 == true) { dr["col13"] = "Y"; } else { dr["col13"] = "N"; }//DISPATCHED  (SHUTTERS STATUS)
                        if (model[0].Chk20 == true) { dr["col14"] = "Y"; } else { dr["col14"] = "N"; }//INSTALLED  (SHUTTERS STATUS)
                        dr["col49"] = model[0].Col82;// done by prod UB 
                        dr["col50"] = model[0].Col91;//  done by prod LB
                        dr["col51"] = model[0].Col84;// done by disp UB
                        dr["col52"] = model[0].Col106;// done by disp LB
                        dr["col53"] = model[0].Col107;// done by Inst UB
                        dr["col54"] = model[0].Col108;// done by Inst LB
                        dr["col55"] = model[0].Col88;// done by prod SH
                        dr["col56"] = model[0].Col89;// done by disp SH
                        dr["col57"] = model[0].Col90;// done by Inst SH
                        //dr["col58"] Technician 5
                        dr["col59"] = model[0].Chk21 == true ? "Y" : "N";
                        dr["col60"] = model[0].Chk22 == true ? "Y" : "N";
                        dr["col61"] = model[0].Chk23 == true ? "Y" : "N";
                        dr["col62"] = model[0].Chk24 == true ? "Y" : "N";
                        dr["col62"] = model[0].Chk25 == true ? "Y" : "N";
                        dr["col64"] = model[0].Chk26 == true ? "Y" : "N";
                        dr["col65"] = model[0].Chk27 == true ? "Y" : "N";
                        dr["col66"] = model[0].Chk28 == true ? "Y" : "N";
                        dr["col67"] = model[0].Chk29 == true ? "Y" : "N";
                        dr["col69"] = model[0].Col92;// Site No
                        dr["col78"] = model[0].Chk35 == true ? "Y" : "N";//design freeze
                        dr["col79"] = model[0].Chk36 == true ? "Y" : "N";//color choose
                        dr["col80"] = model[0].Chk37 == true ? "Y" : "N";//kitchen installation
                        dr["col81"] = model[0].Chk38 == true ? "Y" : "N";//Site Handover
                        dr["Date35"] = sgen.Make_date_S(model[0].Col99);//design freeze date
                        dr["Date36"] = sgen.Make_date_S(model[0].Col101);//color date
                        dr["Date37"] = sgen.Make_date_S(model[0].Col102);//Expected Date of Kitchen Delivery
                        dr["Date38"] = sgen.Make_date_S(model[0].Col103);//Tentative Date of Civil Work Complete
                        dr["Date39"] = sgen.Make_date_S(model[0].Col104);//Actual Date of Civil Work Complete
                        dr["Date40"] = sgen.Make_date_S(model[0].Col105);//Site Ready For Installation Date
                        //dr["col73"] = model[0].Col106;// Supervisior 1 discussion
                        //dr["col74"] = model[0].Col107;// Supervisior 2 discussion
                        //dr["col75"] = model[0].Col108;// Supervisior 3 discussion
                        //dr["col76"] = model[0].Col109;// Supervisior 4 discussion
                        //dr["col77"] = model[0].Col110;// Supervisior 5 discussion
                        dr = getsave(currdate, dr, model, isedit);
                        dtstr.Rows.Add(dr);
                    }
                    Satransaction sat1 = new Satransaction(userCode, MyGuid);
                    //bool Result = sgen.Update_data_fast1(userCode, dtstr, model[0].Col10.Trim(), tmodel.Col8, isedit);
                    var ok0 = sgen.Update_data_fast1_uncommit(userCode, dtstr, model[0].Col10, tmodel.Col8, isedit, sat1);
                    //if (Result == true)
                    //{
                    #region visit sechedule
                    if (model[0].dt1.Rows.Count > 0)
                    {
                        dtstr = new DataTable();
                        dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                        for (int i = 0; i < model[0].dt1.Rows.Count; i++)
                        {
                            DataRow dr = dtstr.NewRow();
                            dr["type"] = "SCH";
                            dr["col73"] = model[0].dt1.Rows[i][3].ToString();// Supervisior  discussion
                            dr["col49"] = model[0].dt1.Rows[i][4].ToString();// Supervisior 
                            dr["col26"] = model[0].dt1.Rows[i][6].ToString();// Supervisior 
                            dr["col50"] = Convert.ToBoolean(model[0].dt1.Rows[i][2].ToString()) == true ? "Y" : "N";// SMS 
                            dr["Date19"] = sgen.Make_date_S(model[0].dt1.Rows[i][5].ToString());//ISupervisior Visit Date                               
                            dr["vch_num"] = vch_num.Trim();
                            dr["vch_date"] = sgen.Savedate(currdate, false);
                            dr = getsave(currdate, dr, model);
                            dtstr.Rows.Add(dr);
                        }
                        ok = sgen.Update_data_fast1_uncommit(userCode, dtstr, model[0].Col10, tmodel.Col83, isedit, sat1);
                    }
                    else
                    {
                        ok = true;
                    }
                    #endregion
                    #region attachment
                    DataTable dtfile = cmd_Fun.GetStructure(userCode, "file_tab");
                    string serverpath = Server.MapPath("~/Uploads/" + cg_com_name.Replace(" ", "") + "/");
                    try
                    {
                        HttpPostedFileBase[] file1 = upd1;
                        //if (upd1 != null)
                        //{
                        for (Int32 i = 0; i < upd1.Length; i++)
                        {
                            fileName1 = "";
                            ctype1 = upd1[i].ContentType;
                            fileName1 = upd1[i].FileName;
                            path1 = clientid_mst + unitid_mst + userid_mst + currdate + "_" + fileName1;
                            encpath1 = sgen.Convert_Stringto64(path1).ToString();
                            finalpath1 = serverpath + encpath1;
                            //file1.SaveAs(finalpath1);
                            upd1[i].SaveAs(finalpath1);
                            if (upd1 != null && fileName1 != null && fileName1 != "0" && fileName1 != "0")
                            {
                                filesave(model, currdate, dtfile, fileName1, encpath1, "SIT", ctype1, model[0].Col96, model[0].Col95, "", model[0].Col97);
                            }
                        }
                        res = sgen.Update_data_fast1_uncommit(userCode, dtfile, "file_tab", "", false, sat1);
                        if (!res) { ViewBag.scripCall = "showmsgJS(1, 'Something Went Wrong, File Not Save', 0);"; return View(model); }
                    }
                    catch (Exception ex)
                    {
                        //mq = sgen.seekval(userCode, "select file_name from file_tab where " + model[0].Col98 + " ", "file_name");
                        //if (mq != "0")
                        //{
                        //    sgen.execute_cmd(userCode, "update file_tab set description='" + model[0].Col96 + "',col3='" + model[0].Col95 + "' where " + model[0].Col98 + "");
                        //}
                    }
                    #endregion
                    //#region sms
                    //string ph = "";
                    //string msg_txt = "";
                    //#region Marking
                    //if (model[0].Chk23)
                    //{
                    //    msg_txt = "Marking Is  Done";
                    //    string smsstatus = sgen.Send_Sms(userCode, clientid_mst, unitid_mst, ph, msg_txt, false);
                    //}
                    //#endregion
                    //#region Marking
                    //if (model[0].Chk26)
                    //{
                    //    msg_txt = "Remeasurement Status Is Done";
                    //    string smsstatus = sgen.Send_Sms(userCode, clientid_mst, unitid_mst, ph, msg_txt, false);
                    //}
                    //#endregion
                    //#region supervisor visit
                    //msg_txt = "Supervisior Visit Done";
                    //if (model[0].Chk30)//1
                    //{
                    //    string smsstatus = sgen.Send_Sms(userCode, clientid_mst, unitid_mst, ph, msg_txt, false);
                    //}
                    //if (model[0].Chk31)//2
                    //{
                    //    string smsstatus = sgen.Send_Sms(userCode, clientid_mst, unitid_mst, ph, msg_txt, false);
                    //}
                    //if (model[0].Chk32)//3
                    //{
                    //    string smsstatus = sgen.Send_Sms(userCode, clientid_mst, unitid_mst, ph, msg_txt, false);
                    //}
                    //if (model[0].Chk33)//4
                    //{
                    //    string smsstatus = sgen.Send_Sms(userCode, clientid_mst, unitid_mst, ph, msg_txt, false);
                    //}
                    //if (model[0].Chk34)//5
                    //{
                    //    string smsstatus = sgen.Send_Sms(userCode, clientid_mst, unitid_mst, ph, msg_txt, false);
                    //}
                    //#endregion
                    //#endregion
                    vch_num = model[0].Col16;
                    if (ok0 && ok)
                    {
                        sat1.Commit();
                        if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                        {
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.scripCall = "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                        {
                            model = news_visit(model);
                            ViewBag.scripCall = "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                    }
                    else
                    {
                        ViewBag.scripCall = "showmsgJS(1, 'Record Not Saved', 0);";
                    }
                    model = new List<Tmodelmain>();
                    model.Add(new Tmodelmain
                    {
                        Col10 = tm.Col10,
                        Col11 = tm.Col11,
                        Col12 = tm.Col12,
                        Col13 = "Save",
                        Col100 = "Save & New",
                        Col121 = "S",
                        Col122 = "<u>S</u>ave",
                        Col123 = "Save & Ne<u>w</u>",
                        Col14 = tm.Col14,
                        Col15 = tm.Col15,
                        Col9 = tm.Col9,
                    });
                    //}
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region track_rpt
        public ActionResult track_rpt()
        {
            FillMst();
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            //ViewBag.vsave = "";
            ViewBag.scripCall = "enableForm();";
            if (model[0].Col14 == "8004.2")
            {
                model[0].Col9 = "ADMIN REPORT";
            }
            else if (model[0].Col14 == "8004.3")
            {
                model[0].Col9 = "PREVIOUS REPORT";
            }
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            List<SelectListItem> mod1 = new List<SelectListItem>();
            List<SelectListItem> mod2 = new List<SelectListItem>();
            #region MOC 1
            mod1 = new List<SelectListItem>();
            TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.username_mod(userCode, m_module3);
            TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2 = cmd_Fun.username_mod(userCode, m_module3);


            model[0].SelectedItems1 = new string[] { "" };
            model[0].SelectedItems2 = new string[] { "" };
            //mod1;
            // mod2;
            if (model[0].Col21 == null) ViewBag.scripCall = ViewBag.scripCall + "initialize(28.477450,77.034138);";
            else ViewBag.scripCall = ViewBag.scripCall + "initialize(" + model[0].Col21 + ");";
            #endregion
            return View(model);
        }
        [HttpPost]
        public ActionResult track_rpt(List<Tmodelmain> model, string command, string mid)
        {
            try
            {
                FillMst();
                var tm = model.FirstOrDefault();
                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_Tlist1"];
                List<SelectListItem> mod2 = (List<SelectListItem>)TempData[MyGuid + "_Tlist2"];


                TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1;
                TempData[MyGuid + "_Tlist2"] = model[0].TList2 = mod2;
                if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                if (model[0].SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
                if (command == "New")
                {
                    //model = getnew(model);
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                    if (model[0].Col21 == null) ViewBag.scripCall = ViewBag.scripCall + "initialize(28.477450,77.034138);";
                    else ViewBag.scripCall = ViewBag.scripCall + "initialize(" + model[0].Col21 + ");";
                }
                else if (command == "Show Task Data")
                {
                    string FromDt = sgen.SaveDate_dt(model[0].Col17.Trim(), true).ToString("yyyy-MM-dd", CultureInfo.InvariantCulture);
                    string todt = sgen.SaveDate_dt(model[0].Col18.Trim(), true).ToString("yyyy-MM-dd", CultureInfo.InvariantCulture);
                    sgen.SetSession(MyGuid, "track", FromDt + "," + todt + "," + model[0].SelectedItems1.FirstOrDefault());
                    if (model[0].Col14 == "8004.2")
                    {
                        Make_query("track_rpt", "Admin Report", "ADMIN", "", "", "");
                    }
                    if (model[0].Col14 == "8004.3")
                    {
                        Make_query("track_rpt", "Previous Report", "PRV", "", "", "");
                    }
                    ViewBag.scripCall = "callFoo('View');";
                }
                else if (command == "Show Track Data")
                {
                    string FromDt = sgen.SaveDate_dt(model[0].Col19.Trim(), true).ToString("yyyy-MM-dd", CultureInfo.InvariantCulture);
                    string todt = sgen.SaveDate_dt(model[0].Col20.Trim(), true).ToString("yyyy-MM-dd", CultureInfo.InvariantCulture);
                    sgen.SetSession(MyGuid, "track", FromDt + "," + todt + "," + model[0].SelectedItems2.FirstOrDefault());
                    Make_query("track_rpt", "Admin Report", "ADMIN_TRACK", "", "", "");
                    ViewBag.scripCall = "callFoo('View');";
                }
                else if (command == "Show Track Data On Map")
                {
                    string FromDt = sgen.SaveDate_dt(model[0].Col19.Trim(), true).ToString("yyyy-MM-dd", CultureInfo.InvariantCulture);
                    string todt = sgen.SaveDate_dt(model[0].Col20.Trim(), true).ToString("yyyy-MM-dd", CultureInfo.InvariantCulture);

                    // reena 2 and 3 line done
                    mq = "select distinct '-' as fstr,  Col1 as latitute,Col2 as longitude,Col3 as col3,Col4 as  col4,Col5 as created_datetime,created_dt,'0' as distance from (Select lat as Col1," +
                                            " lang as Col2, '-' as Col3, '-' as Col4, to_char(created_date, '" + sgen.Getsqldatetimeformat() + "') as Col5 ," +
                                            "to_char(created_date,'" + sgen.Getsqldateformat() + "') as created_dt  from tracks Where type = 'TRK' and emp_code =" +
                                            " '" + model[0].SelectedItems2.FirstOrDefault() + "' and to_date(to_char(created_date, 'ddmmyyyy'), 'ddmmyyyy') BETWEEN TO_DATE('" + FromDt + "','yyyy-MM-dd')  AND " +
                                            "TO_DATE('" + todt + "','yyyy-MM-dd') and(provider = 'network' or provider = 'gps') ) a ORDER BY col5 asc ";
                    double lat1 = 0, lat2 = 0, long1 = 0, long2 = 0, dist = 0;
                    DataTable dtmain = sgen.getdata(userCode, mq);
                    DataTable dt1 = new DataTable();
                    DataTable dt2 = new DataTable();
                    if (dtmain.Rows.Count > 0)
                    {
                        DataView dv1 = dtmain.DefaultView;
                        dt1 = dv1.ToTable(true, "fstr", "created_dt", "distance");
                        for (int i = 0; i < dt1.Rows.Count; i++)
                        {
                            dist = 0;
                            dt2 = sgen.seekval_dt(dtmain, "created_dt='" + dt1.Rows[i]["created_dt"].ToString() + "'");
                            for (int y = 0; y < dt2.Rows.Count - 1; y++)
                            {
                                dist = dist + sgen.GetDistanceBetweenPoints(sgen.Make_double(dt2.Rows[y]["latitute"].ToString()), sgen.Make_double(dt2.Rows[y]["longitude"].ToString()), sgen.Make_double(dt2.Rows[y + 1]["latitute"].ToString()), sgen.Make_double(dt2.Rows[y + 1]["longitude"].ToString()));
                            }
                            dt1.Rows[i]["distance"] = dist;
                            dt1.Rows[i]["fstr"] = dt1.Rows[i]["created_dt"].ToString() + "," + model[0].SelectedItems2.FirstOrDefault() + "" + "," + dist;
                        }
                    }
                    if (dt1.Rows.Count > 0)
                    {
                        sgen.SetSession(MyGuid, "btnval", "TRK");
                        mq1 = sgen.open_grid_dt("Select Date", dt1, 1);
                        if (mq1 == "ok") { ViewBag.scripCall = "callFoo('Select Date');"; }
                        else { ViewBag.scripCall = "showmsgJS(1,'No Data Found',2);"; }
                        return View(model);
                    }
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        [HttpPost]
        public ContentResult Getlocations()
        {
            if (sgen.GetSession(MyGuid, "track_map") != null)
            {
                MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
                sgenFun sgen = new sgenFun(MyGuid);
                //string vch = Session["track_map"].ToString();
                DataTable dt = new DataTable();
                dt = (DataTable)sgen.GetSession(MyGuid, "track_map");
                dt.TableName = "MainData";
                DataSet ds3 = new DataSet();
                ds3.Tables.Add(dt);
                return Content(ds3.GetXml());
            }
            else { return Content(""); }
        }
        #endregion
        #region site status
        public ActionResult s_status()
        {
            FillMst();
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            model[0].Col9 = "SITE REPORTS";
            //ViewBag.vsave = "";
            ViewBag.scripCall = "enableForm();";
            return View(model);
        }
        [HttpPost]
        public ActionResult s_status(List<Tmodelmain> model, string command, string mid)
        {
            try
            {
                string fdt = "", tdt = "";
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();
                DataTable dt = new DataTable();
                if (sgen.GetSession(MyGuid, "KPDCMD") != null)
                {
                    if (sgen.GetSession(MyGuid, "KPDFDT") != null) fdt = sgen.GetSession(MyGuid, "KPDFDT").ToString();
                    if (sgen.GetSession(MyGuid, "KPDTDT") != null) tdt = sgen.GetSession(MyGuid, "KPDTDT").ToString();
                    if (sgen.GetSession(MyGuid, "KPDCMD") != null) command = sgen.GetSession(MyGuid, "KPDCMD").ToString();
                    string tcp = "", tut = "", tfromdt = "", ttodate = "";
                    try
                    {
                        tcp = sgen.GetSession(MyGuid, "KDDL_CL").ToString();
                        tut = sgen.GetSession(MyGuid, "KDDL_UT").ToString();
                        tfromdt = sgen.GetSession(MyGuid, "TXTFROMDATE").ToString();
                        ttodate = sgen.GetSession(MyGuid, "TXTTODATE").ToString();
                    }
                    catch (Exception) { }
                }
                //if (command == "New")
                //{
                //    //model = getnew(model);
                //}
                //else if (command == "Cancel")
                //{
                //    return CancelFun(model);
                //}
                if (command == "Callback")
                {
                    model = StartCallback(model);
                    if (sgen.GetSession(MyGuid, "btnval") == "VIEW")
                    {
                        string fstr = sgen.GetSession(MyGuid, "SSEEKVAL").ToString();
                        return RedirectToAction("s_visit", "vastu", new { fstr = EncryptDecrypt.Encrypt(fstr) });
                    }
                }
                if (command == "Site Status")
                {
                    sgen.SetSession(MyGuid, "KPDCMD", null);
                    mq = "select a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type as fstr, a.vch_num  Doc_No, to_char(convert_tz(a.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') Doc_Date " +
                               ",a.col69  Site_No ,nvl(b.c_name,'-') as Account_Name ,(replace(c.cpname,'0','-') || ' ' || replace(c.cp_mname, '0', '') || ' ' || replace(c.cp_lname, '0', '')) contact_person," +
                               " (case when  length(a.col23)=1 and a.col23='0' then '-' else a.col23 end)  Architect, " +
                               "(case when  length(a.col26)=1 and a.col26='0' then '-' else a.col26 end)  MEASUREMENT_DONE_BY ," +
                               "(case when  length(a.col29)=1 and a.col29='0' then '-' else a.col29 end) DRAWINGS_PREPARED_BY ," +
                               "(case when  length(a.col38)=1 and a.col38='0' then '-' else a.col38 end)  FINAL_DISCUSSION_HELD_WITH," +
                               "(case when  length(a.col15)=1 and a.col15='0' then '-' else a.col15 end) as Site_Handled_By," +
                               "(case when a.col59 = 'Y' then 'Done' else 'Pending' end ) as DISCUSSION_WITH_CUSTOMER,(case when a.col60 = 'Y' then 'Done' else 'Pending' end ) as Specification " +
                               ",(case when a.col61 = 'Y' then 'Done' else 'Pending' end ) as Markings ,(case when a.col62 = 'Y' then 'Done' else 'Pending' end ) as Status_2D" +
                               ", (case when a.col47 = 'Y' then 'Done' else 'Pending' end ) as PRD_Upper_BOX " +
                               ", (case when a.col1 = 'Y' then 'Done' else 'Pending' end ) as PRD_Lower_BOX " +
                               ", (case when a.col2 = 'Y' then 'Done' else 'Pending' end ) as DISPATCH_Upper_BOX " +
                               ", (case when a.col3 = 'Y' then 'Done' else 'Pending' end ) as DISPATCH_Lower_BOX " +
                               ", (case when a.col4 = 'Y' then 'Done' else 'Pending' end ) as INSTALLED_Upper_BOX " +
                               ", (case when a.col5 = 'Y' then 'Done' else 'Pending' end ) as INSTALLED_Lower_BOX ," +
                               "(case when a.col63 = 'Y' then 'Done' else 'Pending' end ) as Boxes_Status," +
                               "(case when a.col64 = 'Y' then 'Done' else 'Pending' end ) as REMEASUREMENT_STATUS " +
                               ",(case when a.col65 = 'Y' then 'Done' else 'Pending' end ) as POST_BOX_CIVIL_WORK_STATUS " +
                               ", (case when a.col12 = 'Y' then 'Done' else 'Pending' end ) as PRD_SHUTTERS_STATUS" +
                               ", (case when a.col13 = 'Y' then 'Done' else 'Pending' end ) as DISPATCH_SHUTTERS_STATUS" +
                               ", (case when a.col14 = 'Y' then 'Done' else 'Pending' end ) as INSTALLED_SHUTTERS_STATUS" +
                                ",(case when a.col66 = 'Y' then 'Done' else 'Pending' end ) as SHUTTERS_STATUS " +
                               ",(case when a.col67 = 'Y' then 'Done' else 'Pending' end ) as VISIT_SCHEDULE " +
                                ",(case when a.col80 = 'Y' then 'Done' else 'Pending' end ) as KITCHEN_ISTALLATION " +
                                ",(case when a.col81 = 'Y' then 'Done' else 'Pending' end ) as SITE_HANDOVER " +
                                "from kc_tab a" +
                               " left join clients_mst b on a.col70=b.vch_num and a.client_unit_id=b.client_unit_id and b.type='BCD'" +
                               " left join clients_mst c on a.col71=c.vch_num and a.client_unit_id=c.client_unit_id  and a.col70=c.ref_code where a.type = 'SVR' and a.client_unit_id='" + unitid_mst + "' and  to_date(to_char(a.vch_date,'" + sgen.Getsqldateformat() + "'),'" + sgen.Getsqldateformat() + "') between " +
                    "to_date('" + fdt + "','" + sgen.Getsqldateformat() + "') and to_date('" + tdt + "','" + sgen.Getsqldateformat() + "')";
                    //dt = sgen.getdata(userCode, mq);
                    sgen.open_grid("Site Status List", mq, 1);
                    ViewBag.scripCall = "callFoo('Site Status List');";
                    //if (dt.Rows.Count > 0)
                    //{
                    //    sgen.SetSession(MyGuid, "btnval", "VIEW");
                    //    mq1 = sgen.open_grid_dt("Site Status List", dt, 1);
                    //    if (mq1 == "ok") { ViewBag.scripCall = "callFoo('Site Status List');"; }
                    //    else { ViewBag.scripCall = "showmsgJS(1,'No Data Found',2);"; }
                    //}
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region site handover
        public ActionResult s_hover()
        {
            MyGuid = EncryptDecrypt.Decrypt(HttpUtility.ParseQueryString(Request.UrlReferrer.Query)["m_id"]);
            FillMst();
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            DataTable dtb = (DataTable)sgen.GetSession(MyGuid, "URIGHTS");
            try
            {
                dtb = dtb.Select("m_id='" + model[0].Col14 + "'").CopyToDataTable();
                if (dtb.Rows.Count > 0)
                {
                    model[0].Col55 = dtb.Rows[0]["btnnew"].ToString();
                    model[0].Col56 = dtb.Rows[0]["btnedit"].ToString();
                    model[0].Col57 = dtb.Rows[0]["btnview"].ToString();
                }
            }
            catch (Exception ex) { }
            model[0].Col9 = "SITE HANDOVER";
            model[0].Col10 = "kc_tab";  // TABLE
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "SHO";  // type
                                     //if (model[0].Col76 == null) ViewBag.scripCall = ViewBag.scripCall + "initialize(28.477450,77.034138);";
                                     //else ViewBag.scripCall = ViewBag.scripCall + "initialize(" + model[0].Col76 + ");";
            return View(model);
        }
        [HttpPost]
        public ActionResult s_hover(List<Tmodelmain> model, string command, string mid)
        {
            try
            {
                string fdt = "", tdt = "";
                FillMst();
                var tm = model.FirstOrDefault();
                DataTable dt = new DataTable();
                if (command == "New")
                {
                    if (model[0].Col55 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for new site handover entry, please contact your admin', 2);";
                        return View(model);
                    }
                    model = getnew(model);
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    if ((model[0].Col56 == "N") && (btnval == "EDIT"))
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for edit entries, please contact your admin', 2);disableForm();";
                        return View(model);
                    }
                    model = StartCallback(model);
                }
                else if (command.Trim() == "Save" || command.Trim() == "Update" || command == "Save & New" || command == "Update & New")
                {
                    if (model[0].Col55 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for save site handover , please contact your admin', 2);";
                        return View(model);
                    }
                    var tmodel = model.FirstOrDefault();
                    string currdate = sgen.server_datetime(userCode);
                    string cond = "", found = "";
                    DataTable dtstr = new DataTable();
                    dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        isedit = true;
                        vch_num = model[0].Col16;
                    }
                    else
                    {
                        isedit = false;
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        model[0].Col16 = vch_num;
                    }
                    {
                        DataRow dr = dtstr.NewRow();
                        dr["rec_id"] = "0";
                        dr["type"] = model[0].Col12;
                        dr["vch_num"] = vch_num.Trim();
                        dr["vch_date"] = currdate;
                        dr["col70"] = model[0].Col17;      //account id
                        dr["Date1"] = sgen.Make_date_S(model[0].Col42);      //Date of Material Dispatch
                        dr["Date2"] = sgen.Make_date_S(model[0].Col21);      //Date of Installation Started
                        dr["Date3"] = sgen.Make_date_S(model[0].Col22);      //Date of Installation Ended
                        dr["col21"] = model[0].Col23;      //Person Installing
                        dr["col42"] = model[0].Col24;      //Carcasses good or bad
                        dr["col11"] = model[0].Col25;      //SIGNATURE OF CLIENT
                        dr["col43"] = model[0].Col26;      //Shutters good or bad
                        dr["col12"] = model[0].Col27;      //SIGNATURE OF CLIENT
                        dr["col44"] = model[0].Col28;      //Handles good or bad
                        dr["col13"] = model[0].Col29;      //SIGNATURE OF CLIENT
                        dr["col45"] = model[0].Col30;      //Drawers Allignment good or bad
                        dr["col14"] = model[0].Col31;      //SIGNATURE OF CLIENT
                        dr["col46"] = model[0].Col32;      //Drawers Movements good or bad
                        dr["col15"] = model[0].Col33;      //SIGNATURE OF CLIENT
                        dr["col41"] = model[0].Col34;      //ANY TASKS WHICH ARE PENDING
                        dr["Date4"] = sgen.Make_date_S(model[0].Col35);      //Date of Handover
                        dr["col16"] = model[0].Col36;      //CARPENTER_ SIGNATURE OF CLIENT
                        dr["Date5"] = sgen.Make_date_S(model[0].Col37);      //CARPENTER_ SIGNATURE OF date
                        dr["col17"] = model[0].Col38;      //Singnature Of Person Taking Over
                        dr["col18"] = model[0].Col39;      //Singnature Of Site Supervisor
                        dr["col48"] = model[0].Col40;      //Any Remark
                        dr["col19"] = model[0].Col41;      //Signature of Office Representative
                        dr = getsave(currdate, dr, model, isedit);
                        dtstr.Rows.Add(dr);
                    }
                    bool Result = sgen.Update_data_fast1(userCode, dtstr, model[0].Col10.Trim(), tmodel.Col8, isedit);
                    if (Result == true)
                    {
                        vch_num = model[0].Col16;
                        if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                        {
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                        {
                            model = news_visit(model);
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');enableForm();";
                        }
                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col10 = tm.Col10,
                            Col11 = tm.Col11,
                            Col12 = tm.Col12,
                            Col13 = "Save",
                            Col100 = "Save & New",
                            Col14 = tm.Col14,
                            Col15 = tm.Col15,
                            Col9 = tm.Col9,
                        });
                    }
                    else
                    {
                        ViewBag.scripCall = "showmsgJS(1, 'Record Not Saved', 0);";
                    }
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region Order Master
        public ActionResult order(string mid)
        {
            FillMst();
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            List<SelectListItem> md1 = new List<SelectListItem>();
            List<SelectListItem> md2 = new List<SelectListItem>();
            List<SelectListItem> md3 = new List<SelectListItem>();
            List<SelectListItem> md4 = new List<SelectListItem>();
            List<SelectListItem> md5 = new List<SelectListItem>();
            List<SelectListItem> md6 = new List<SelectListItem>();
            List<SelectListItem> md7 = new List<SelectListItem>();
            List<SelectListItem> md8 = new List<SelectListItem>();
            List<SelectListItem> md9 = new List<SelectListItem>();
            List<SelectListItem> md10 = new List<SelectListItem>();
            model[0].TList1 = md1;
            model[0].TList2 = md2;
            model[0].TList3 = md3;
            model[0].TList4 = md4;
            model[0].TList5 = md5;
            model[0].TList6 = md6;
            model[0].TList7 = md7;
            model[0].TList8 = md8;
            model[0].TList9 = md9;
            model[0].TList10 = md10;
            model[0].SelectedItems1 = new string[] { "" };
            model[0].SelectedItems2 = new string[] { "" };
            model[0].SelectedItems3 = new string[] { "" };
            model[0].SelectedItems4 = new string[] { "" };
            model[0].SelectedItems5 = new string[] { "" };
            model[0].SelectedItems6 = new string[] { "" };
            model[0].SelectedItems7 = new string[] { "" };
            model[0].SelectedItems8 = new string[] { "" };
            model[0].SelectedItems9 = new string[] { "" };
            model[0].SelectedItems10 = new string[] { "" };
            TempData[MyGuid + "_TList1"] = model[0].TList1;
            TempData[MyGuid + "_TList2"] = model[0].TList2;
            TempData[MyGuid + "_TList3"] = model[0].TList3;
            TempData[MyGuid + "_TList4"] = model[0].TList4;
            TempData[MyGuid + "_TList5"] = model[0].TList5;
            TempData[MyGuid + "_TList6"] = model[0].TList6;
            TempData[MyGuid + "_TList7"] = model[0].TList7;
            TempData[MyGuid + "_TList8"] = model[0].TList8;
            TempData[MyGuid + "_TList9"] = model[0].TList9;
            TempData[MyGuid + "_TList10"] = model[0].TList10;
            model[0].Col9 = "CREATE ORDER";
            model[0].Col10 = "lead_master";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "ORD";
            if (model[0].Col76 == null) ViewBag.scripCall = ViewBag.scripCall + "initialize(28.477450,77.034138);";
            else ViewBag.scripCall = ViewBag.scripCall + "initialize(" + model[0].Col76 + ");";
            DataTable dtb = (DataTable)sgen.GetSession(MyGuid, "URIGHTS");
            try
            {

                dtb = dtb.Select("m_id='" + model[0].Col14 + "'").CopyToDataTable();
                if (dtb.Rows.Count > 0)
                {
                    model[0].Col55 = dtb.Rows[0]["btnnew"].ToString();
                    model[0].Col56 = dtb.Rows[0]["btnedit"].ToString();
                    model[0].Col57 = dtb.Rows[0]["btnview"].ToString();
                }
            }
            catch (Exception ex) { }
            //if (Request.QueryString["fstr"] != null)
            //{
            //    model[0].Col16 = EncryptDecrypt.Decrypt(Request.QueryString["fstr"].ToString()); ;
            //    Session["SSEEKVAL"] = model[0].Col16;
            //    if (model[0].Col16.Length == 18)
            //    {
            //        CallbackFun("40005.3", "N", "lead", "vastu", model);
            //    }
            //    else
            //    {
            //        CallbackFun("EDIT", "Y", "lead", "vastu", model);
            //    }
            //    ViewBag.vnew = "disabled='disabled'";
            //    ViewBag.vedit = "disabled='disabled'";
            //    ViewBag.vsave = "";
            //    ViewBag.scripCall = "enableForm();";
            //}
            return View(model);
        }
        [HttpPost]
        public ActionResult order(List<Tmodelmain> model, string command, string mid, HttpPostedFileBase upd1)
        {
            try
            {
                FillMst();
                #region
                var tm = model.FirstOrDefault();
                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_Tlist1"];
                List<SelectListItem> mod2 = (List<SelectListItem>)TempData[MyGuid + "_Tlist2"];
                List<SelectListItem> mod3 = (List<SelectListItem>)TempData[MyGuid + "_Tlist3"];
                List<SelectListItem> mod4 = (List<SelectListItem>)TempData[MyGuid + "_Tlist4"];
                List<SelectListItem> mod5 = (List<SelectListItem>)TempData[MyGuid + "_Tlist5"];
                List<SelectListItem> mod6 = (List<SelectListItem>)TempData[MyGuid + "_Tlist6"];
                List<SelectListItem> mod7 = (List<SelectListItem>)TempData[MyGuid + "_Tlist7"];
                List<SelectListItem> mod8 = (List<SelectListItem>)TempData[MyGuid + "_Tlist8"];
                List<SelectListItem> mod9 = (List<SelectListItem>)TempData[MyGuid + "_Tlist9"];
                List<SelectListItem> mod10 = (List<SelectListItem>)TempData[MyGuid + "_Tlist10"];
                TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1;
                TempData[MyGuid + "_Tlist2"] = model[0].TList2 = mod2;
                TempData[MyGuid + "_Tlist3"] = model[0].TList3 = mod3;
                TempData[MyGuid + "_Tlist4"] = model[0].TList4 = mod4;
                TempData[MyGuid + "_Tlist5"] = model[0].TList5 = mod5;
                TempData[MyGuid + "_Tlist6"] = model[0].TList6 = mod6;
                TempData[MyGuid + "_Tlist7"] = model[0].TList7 = mod7;
                TempData[MyGuid + "_Tlist8"] = model[0].TList8 = mod8;
                TempData[MyGuid + "_Tlist9"] = model[0].TList9 = mod9;
                TempData[MyGuid + "_Tlist10"] = model[0].TList10 = mod10;
                //TempData[MyGuid + "_Tlist1"] = model[0].TList1;
                //TempData[MyGuid + "_Tlist2"] = model[0].TList2;
                //TempData[MyGuid + "_Tlist3"] = model[0].TList3;
                //TempData[MyGuid + "_Tlist4"] = model[0].TList4;
                //TempData[MyGuid + "_Tlist5"] = model[0].TList5;
                //TempData[MyGuid + "_Tlist6"] = model[0].TList6;
                //TempData[MyGuid + "_Tlist7"] = model[0].TList7;
                //TempData[MyGuid + "_Tlist8"] = model[0].TList8;
                //TempData[MyGuid + "_Tlist9"] = model[0].TList9;
                //TempData[MyGuid + "_Tlist10"] = model[0].TList10;
                if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                if (model[0].SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
                if (model[0].SelectedItems3 == null) model[0].SelectedItems3 = new string[] { "" };
                if (model[0].SelectedItems4 == null) model[0].SelectedItems4 = new string[] { "" };
                if (model[0].SelectedItems5 == null) model[0].SelectedItems5 = new string[] { "" };
                if (model[0].SelectedItems6 == null) model[0].SelectedItems6 = new string[] { "" };
                if (model[0].SelectedItems7 == null) model[0].SelectedItems7 = new string[] { "" };
                if (model[0].SelectedItems8 == null) model[0].SelectedItems8 = new string[] { "" };
                if (model[0].SelectedItems9 == null) model[0].SelectedItems9 = new string[] { "" };
                if (model[0].SelectedItems10 == null) model[0].SelectedItems10 = new string[] { "" };
                #endregion
                if (command == "New")
                {
                    if (model[0].Col55 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for create new order, please contact your admin', 2);";
                        return View(model);
                    }
                    model = getnew(model);
                    string defval = "";
                    mod1 = new List<SelectListItem>();
                    mod2 = new List<SelectListItem>();
                    mod3 = new List<SelectListItem>();
                    mod4 = new List<SelectListItem>();
                    mod5 = new List<SelectListItem>();
                    mod7 = new List<SelectListItem>();
                    mod8 = new List<SelectListItem>();
                    mod9 = new List<SelectListItem>();
                    mod10 = new List<SelectListItem>();
                    #region  Lead Owner
                    TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.username_mod(userCode, m_module3);
                    model[0].SelectedItems1 = new string[] { "" };

                    #endregion
                    #region  Lead source
                    TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2 = cmd_Fun.leadsource(userCode, unitid_mst, out defval);
                    model[0].SelectedItems2 = new string[] { defval };

                    #endregion
                    #region  Lead status
                    TempData[MyGuid + "_TList3"] = model[0].TList3 = mod3 = cmd_Fun.leadstatus(userCode, unitid_mst, out defval);
                    //string df_status = sgen.getstring(userCode, mq);
                    model[0].SelectedItems3 = new string[] { sgen.getstring(userCode, "SELECT master_id from master_setting where type='LST' and SECTION_STRENGTH='Y'") };

                    #endregion
                    #region  Contact
                    TempData[MyGuid + "_TList4"] = model[0].TList4 = mod4 = cmd_Fun.username_mod(userCode, m_module3);

                    model[0].SelectedItems4 = new string[] { "" };

                    #endregion
                    #region  Product
                    TempData[MyGuid + "_TList5"] = model[0].TList5 = mod5 = cmd_Fun.product(userCode, unitid_mst, out defval);
                    model[0].SelectedItems5 = new string[] { defval };

                    #endregion
                    #region  Business Type
                    TempData[MyGuid + "_TList7"] = model[0].TList7 = mod7 = cmd_Fun.businesstype(userCode, unitid_mst, out defval);

                    model[0].SelectedItems7 = new string[] { "" };

                    #endregion
                    #region  order Owner
                    TempData[MyGuid + "_TList8"] = model[0].TList8 = mod8 = cmd_Fun.username_mod(userCode, m_module3);
                    model[0].SelectedItems8 = new string[] { "" };

                    #endregion
                    #region  order source
                    TempData[MyGuid + "_TList9"] = model[0].TList9 = mod9 = cmd_Fun.leadsource(userCode, unitid_mst, out defval);

                    model[0].SelectedItems9 = new string[] { defval };

                    #endregion
                    #region  Lead status
                    TempData[MyGuid + "_TList10"] = model[0].TList10 = mod10 = cmd_Fun.orderstatus(userCode, unitid_mst);

                    model[0].SelectedItems10 = new string[] { "" };

                    #endregion
                    model[0].Col37 = "01/01/1900";
                    model[0].Col38 = "01/01/1900";
                }
                else if (command == "contact")
                {
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.scripCall = "enableForm();";
                    mq = "select cp.panno as cust_id, cp.vch_num,cp.c_name,cs.alpha_2 as country_id,cs.country_name,cs.state_gst_code as state_id ,cs.state_name," +
                                    "cp.city,cs.city_name , cp.pincode, cp.addr,cp.cpname as cp_fname, cp.cp_mname,cp_Lname ,cp.cpdept ,cp.cpdesig," +
                                    "cp.cpemail,cp.cpcont,cp.cpaltcont,cp.cplandno,cp.cpaddr," +
                                    "to_char(cp.dob, '" + sgen.Getsqldateformat() + "') as dob," +
                                    "to_char(cp.doa, '" + sgen.Getsqldateformat() + "')" +
                                    " as doa from clients_mst cp left join country_state cs on cs.rec_id = cp.city" +
                                    " where cp.client_id = '" + clientid_mst + "' and  cp.client_unit_id='" + unitid_mst + "' and  cp.rec_id ='" + model[0].SelectedItems6.FirstOrDefault() + "'" +
                                    " and  cp.type='" + model[0].Col43 + "'";
                    DataTable dtt = sgen.getdata(userCode, mq);
                    if (dtt.Rows.Count > 0)
                    {
                        model[0].Col28 = dtt.Rows[0]["cp_fname"].ToString();
                        model[0].Col29 = dtt.Rows[0]["cp_mname"].ToString();
                        model[0].Col30 = dtt.Rows[0]["cp_Lname"].ToString();
                        model[0].Col31 = dtt.Rows[0]["cpdesig"].ToString();
                        model[0].Col32 = dtt.Rows[0]["cpdept"].ToString();
                        model[0].Col33 = dtt.Rows[0]["cpemail"].ToString();
                        model[0].Col34 = dtt.Rows[0]["cpcont"].ToString();
                        model[0].Col35 = dtt.Rows[0]["cpaltcont"].ToString();
                        model[0].Col36 = dtt.Rows[0]["cplandno"].ToString();
                        model[0].Col37 = dtt.Rows[0]["dob"].ToString();
                        model[0].Col38 = dtt.Rows[0]["doa"].ToString();
                        model[0].Col39 = dtt.Rows[0]["cpaddr"].ToString();
                    }
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    if ((model[0].Col57 == "N") && (btnval == "EDIT"))
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for edit order, please contact your admin', 2);disableForm();";
                        return View(model);
                    }
                    //model = StartCallback(model);
                    if (sgen.GetSession(MyGuid, "delid") != null) { btnval = "FDEL"; sgen.SetSession(MyGuid, "btnval", btnval); }
                    else if (sgen.GetSession(MyGuid, "btnval") != null) btnval = sgen.GetSession(MyGuid, "btnval").ToString();
                    model = StartCallback(model);
                    if (tm.Col76 == null) ViewBag.scripCall = ViewBag.scripCall + "initialize(28.477450,77.034138);";
                    else ViewBag.scripCall = ViewBag.scripCall + "initialize(" + tm.Col76 + ");";
                    if (btnval == "FDEL")
                    {
                        ViewBag.vnew = "";
                        ViewBag.vedit = "";
                        ViewBag.vsave = "disabled='disabled'";
                        ViewBag.scripCall = "showmsgJS(1, 'File Deleted Permanently, Press New to create a new file', 1);disableForm();";
                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col9 = tm.Col9,
                            Col10 = tm.Col10,
                            Col11 = tm.Col11,
                            Col12 = tm.Col12,
                            Col13 = "Save",
                            Col14 = tm.Col14,
                            Col15 = tm.Col15,
                            TList1 = mod1,
                            TList2 = mod2,
                            TList3 = mod3,
                            TList4 = mod4,
                            TList5 = mod5,
                            TList6 = mod6,
                            TList7 = mod7,
                            SelectedItems1 = new string[] { "" },
                            SelectedItems2 = new string[] { "" },
                            SelectedItems3 = new string[] { "" },
                            SelectedItems4 = new string[] { "" },
                            SelectedItems5 = new string[] { "" },
                            SelectedItems6 = new string[] { "" },
                            SelectedItems7 = new string[] { "" },
                        });
                    }
                }
                else if (command.Trim() == "Save" || command.Trim() == "Update")
                {
                    if (model[0].Col55 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for save order , please contact your admin', 2);";
                        return View(model);
                    }
                    var tmodel = model.FirstOrDefault();
                    string currdate = sgen.server_datetime(userCode);
                    string cond = "", found = "";
                    DataTable dtstr = new DataTable();
                    //dtstr = sgen.getdata(userCode, "select * from " + model[0].Col10 + " WHERE 1=2");
                    dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        isedit = true;
                        vch_num = model[0].Col16;
                        mq1 = " and cust_id<>'" + tmodel.Col18.Trim() + "'";
                    }
                    else
                    {
                        isedit = false;
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        model[0].Col16 = vch_num;
                        mq1 = "";
                    }
                    if (model[0].Col19 != null)
                    {
                        cond = sgen.seekval(userCode, "select cust_name from " + model[0].Col10.Trim() + " where " +
                            "type in ('" + model[0].Col12.Trim() + "','DD" + model[0].Col12 + "')" + model[0].Col11 + " " +
                              " and  upper(cust_name)='" + model[0].Col19.Trim().ToString().ToUpper() + "' " + mq1 + "", "cust_name");
                        if (!cond.Equals("0"))
                        {
                            sgen.SetSession(MyGuid, "Rupd", upd1);
                            ViewBag.scripCall = "showmsgJS(2, 'Account Name Already Exists. Do You Want To Continue', 1);";
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            ModelState.Clear();
                            return View(model);
                        }
                    }
                    DataRow dr = dtstr.NewRow();
                    dr["rec_id"] = "0";
                    dr["type"] = model[0].Col12;
                    dr["vch_num"] = vch_num.Trim();
                    dr["vch_date"] = sgen.Savedate(model[0].Col17, false);
                    dr["cust_id"] = model[0].Col18;      //Party 
                    dr["cust_name"] = model[0].Col19;      //Party name
                    dr["ld_owner"] = model[0].SelectedItems1.FirstOrDefault(); //lead owner
                    dr["ld_source"] = model[0].SelectedItems2.FirstOrDefault(); //lead source
                    dr["ld_status"] = model[0].SelectedItems3.FirstOrDefault(); //lead status
                    dr["ot_source"] = model[0].Col20;//Other Lead Source
                    dr["remark"] = model[0].Col21;//Remark
                    dr["ct_person"] = model[0].SelectedItems4.FirstOrDefault();// contact Person
                    dr["ld_product"] = string.Join(",", model[0].SelectedItems5);// product
                    dr["bsn_type"] = string.Join(",", model[0].SelectedItems7);// Business type                        
                    dr["refered_by"] = model[0].Col22;// contact Person
                    dr["country"] = model[0].Col40;// country id
                    dr["state"] = model[0].Col41;// state id
                    dr["city"] = model[0].Col42;// rec id
                    dr["pincode"] = model[0].Col26;// pincode
                    dr["address"] = model[0].Col27;// address
                    dr["cp_fname"] = model[0].Col28;// contact Person first name
                    dr["cp_mname"] = model[0].Col29;// contact Person middle name
                    dr["cp_lname"] = model[0].Col30;// contact Person last name
                    dr["desig"] = model[0].Col31;// contact Person Designation
                    dr["dept"] = model[0].Col32;// contact Person departmnet
                    dr["emailid"] = model[0].Col33;// contact Person Email
                    dr["mobile_no"] = model[0].Col34;// contact Person moblie
                    dr["contact_no"] = model[0].Col35;// contact Person cont
                    dr["al_contact"] = model[0].Col36;// contact Person alternate no
                    dr["dob"] = sgen.Make_date_S(model[0].Col37);// contact Person dob
                    dr["doa"] = sgen.Make_date_S(model[0].Col38);// contact Person doa
                    dr["cp_add"] = model[0].Col39;// contact Person address
                    dr["ref_type"] = model[0].Col43;//  ref type
                    dr["cp_id"] = model[0].SelectedItems6.FirstOrDefault();// contact Person ref id
                    dr["cp_ref_type"] = model[0].Col44;//  ref type
                    dr["lead_con"] = "N";//  ref type
                    dr["google_add"] = model[0].Col77;
                    dr["latlong"] = model[0].Col76;
                    dr["ord_rmk"] = model[0].Col50;//order remark
                    dr["ord_owner"] = model[0].SelectedItems8.FirstOrDefault(); //order owner
                    dr["ord_source"] = model[0].SelectedItems9.FirstOrDefault(); //order source
                    dr["ord_status"] = model[0].SelectedItems10.FirstOrDefault(); //order status
                    dr = getsave(currdate, dr, model, isedit);
                    dtstr.Rows.Add(dr);
                    //  bool Result = sgen.Update_data(userCode, dtstr, model[0].Col10.Trim(), tmodel.Col8, isedit);
                    bool Result = sgen.Update_data_fast1(userCode, dtstr, model[0].Col10.Trim(), tmodel.Col8, isedit);
                    if (Result == true)
                    {
                        #region attachment
                        DataTable dtfile = new DataTable();
                        dtfile = cmd_Fun.GetStructure(userCode, "file_tab");
                        string serverpath = Server.MapPath("~/Uploads/" + cg_com_name.Replace(" ", "") + "/");
                        try
                        {
                            HttpPostedFileBase file1 = upd1;
                            ctype1 = file1.ContentType;
                            fileName1 = file1.FileName;
                            path1 = clientid_mst + unitid_mst + userid_mst + currdate + "_" + fileName1;
                            encpath1 = sgen.Convert_Stringto64(path1).ToString();
                            finalpath1 = serverpath + encpath1;
                            file1.SaveAs(finalpath1);
                        }
                        catch (Exception ex) { }
                        if (fileName1 != null && fileName1 != "0" && fileName1 != "0")
                        {
                            filesave(model, currdate, dtfile, fileName1, encpath1, "RMK", ctype1, model[0].Col46, vch_num, model[0].Col18, model[0].Col48);
                            if (model[0].Col49 == null)
                            {
                                res = sgen.Update_data(userCode, dtfile, "file_tab", "", false);
                            }
                            else
                            {
                                res = sgen.Update_data(userCode, dtfile, "file_tab", model[0].Col49, isedit);
                            }
                            if (!res) { ViewBag.scripCall = "showmsgJS(1, 'Something Went Wrong, File Not Save', 0);"; return View(model); }
                        }
                        #endregion
                        vch_num = model[0].Col16;
                        ViewBag.vnew = "";
                        ViewBag.vedit = "";
                        ViewBag.vsave = "disabled='disabled'";
                        ViewBag.scripCall = "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col10 = tm.Col10,
                            Col11 = tm.Col11,
                            Col12 = tm.Col12,
                            Col13 = "Save",
                            Col14 = tm.Col14,
                            Col15 = tm.Col15,
                            Col9 = tm.Col9,
                            TList1 = mod1,
                            TList2 = mod2,
                            TList3 = mod3,
                            TList4 = mod4,
                            TList5 = mod5,
                            TList6 = mod6,
                            TList7 = mod7,
                            TList8 = mod8,
                            TList9 = mod9,
                            TList10 = mod10,
                            SelectedItems1 = new string[] { "" },
                            SelectedItems2 = new string[] { "" },
                            SelectedItems3 = new string[] { "" },
                            SelectedItems4 = new string[] { "" },
                            SelectedItems5 = new string[] { "" },
                            SelectedItems6 = new string[] { "" },
                            SelectedItems7 = new string[] { "" },
                            SelectedItems8 = new string[] { "" },
                            SelectedItems9 = new string[] { "" },
                            SelectedItems10 = new string[] { "" },
                        });
                    }
                    else
                    {
                        ViewBag.scripCall = "showmsgJS(1, 'Record Not Saved', 0);";
                    }
                }
                else if (command.Trim() == "hfbtnyes")
                {
                    upd1 = (HttpPostedFileBase)sgen.GetSession(MyGuid, "Rupd");
                    var tmodel = model.FirstOrDefault();
                    string currdate = sgen.server_datetime(userCode);
                    string cond = "", found = "";
                    DataTable dtstr = new DataTable();
                    //dtstr = sgen.getdata(userCode, "select * from " + model[0].Col10 + " WHERE 1=2");
                    dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        isedit = true;
                        vch_num = model[0].Col16;
                    }
                    else
                    {
                        isedit = false;
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        model[0].Col16 = vch_num;
                    }
                    DataRow dr = dtstr.NewRow();
                    dr["rec_id"] = "0";
                    dr["type"] = model[0].Col12;
                    dr["vch_num"] = vch_num.Trim();
                    dr["vch_date"] = sgen.Savedate(model[0].Col17, false);
                    dr["cust_id"] = model[0].Col18;      //Party 
                    dr["cust_name"] = model[0].Col19;      //Party name
                    dr["ld_owner"] = model[0].SelectedItems1.FirstOrDefault(); //lead owner
                    dr["ld_source"] = model[0].SelectedItems2.FirstOrDefault(); //lead source
                    dr["ld_status"] = model[0].SelectedItems3.FirstOrDefault(); //lead status
                    dr["ot_source"] = model[0].Col20;//Other Lead Source
                    dr["remark"] = model[0].Col21;//Remark
                    dr["ct_person"] = model[0].SelectedItems4.FirstOrDefault();// contact Person
                    dr["ld_product"] = string.Join(",", model[0].SelectedItems5);// product
                    dr["bsn_type"] = string.Join(",", model[0].SelectedItems7);// Business type                        
                    dr["refered_by"] = model[0].Col22;// contact Person
                    dr["country"] = model[0].Col40;// country id
                    dr["state"] = model[0].Col41;// state id
                    dr["city"] = model[0].Col42;// rec id
                    dr["pincode"] = model[0].Col26;// pincode
                    dr["address"] = model[0].Col27;// address
                    dr["cp_fname"] = model[0].Col28;// contact Person first name
                    dr["cp_mname"] = model[0].Col29;// contact Person middle name
                    dr["cp_lname"] = model[0].Col30;// contact Person last name
                    dr["desig"] = model[0].Col31;// contact Person Designation
                    dr["dept"] = model[0].Col32;// contact Person departmnet
                    dr["emailid"] = model[0].Col33;// contact Person Email
                    dr["mobile_no"] = model[0].Col34;// contact Person moblie
                    dr["contact_no"] = model[0].Col35;// contact Person cont
                    dr["al_contact"] = model[0].Col36;// contact Person alternate no
                    dr["dob"] = sgen.Make_date_S(model[0].Col37);// contact Person dob
                    dr["doa"] = sgen.Make_date_S(model[0].Col38);// contact Person doa
                    dr["cp_add"] = model[0].Col39;// contact Person address
                    dr["ref_type"] = model[0].Col43;//  ref type
                    dr["cp_id"] = model[0].SelectedItems6.FirstOrDefault();// contact Person ref id
                    dr["cp_ref_type"] = model[0].Col44;//  ref type
                    dr["lead_con"] = "N";//  ref type
                    dr["google_add"] = model[0].Col77;
                    dr["latlong"] = model[0].Col76;
                    dr = getsave(currdate, dr, model, isedit);
                    dtstr.Rows.Add(dr);
                    //  bool Result = sgen.Update_data(userCode, dtstr, model[0].Col10.Trim(), tmodel.Col8, isedit);
                    bool Result = sgen.Update_data_fast1(userCode, dtstr, model[0].Col10.Trim(), tmodel.Col8, isedit);
                    if (Result == true)
                    {
                        #region attachment
                        if (upd1 != null)
                        {
                            DataTable dtfile = new DataTable();
                            dtfile = cmd_Fun.GetStructure(userCode, "file_tab");
                            string serverpath = Server.MapPath("~/Uploads/" + cg_com_name.Replace(" ", "") + "/");
                            try
                            {
                                HttpPostedFileBase file1 = upd1;
                                ctype1 = file1.ContentType;
                                fileName1 = file1.FileName;
                                path1 = clientid_mst + unitid_mst + userid_mst + currdate + "_" + fileName1;
                                encpath1 = sgen.Convert_Stringto64(path1).ToString();
                                finalpath1 = serverpath + encpath1;
                                file1.SaveAs(finalpath1);
                            }
                            catch (Exception ex) { }
                            if (fileName1 != null && fileName1 != "0" && fileName1 != "0")
                            {
                                filesave(model, currdate, dtfile, fileName1, encpath1, "RMK", ctype1, model[0].Col46, vch_num, model[0].Col18, model[0].Col48);
                                if (model[0].Col49 == null)
                                {
                                    res = sgen.Update_data(userCode, dtfile, "file_tab", "", false);
                                }
                                else
                                {
                                    res = sgen.Update_data(userCode, dtfile, "file_tab", model[0].Col49, isedit);
                                }
                                if (!res) { ViewBag.scripCall = "showmsgJS(1, 'Something Went Wrong, File Not Save', 0);"; return View(model); }
                            }
                            #endregion
                        }
                        vch_num = model[0].Col16;
                        ViewBag.vnew = "";
                        ViewBag.vedit = "";
                        ViewBag.vsave = "disabled='disabled'";
                        ViewBag.scripCall = "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col10 = tm.Col10,
                            Col11 = tm.Col11,
                            Col12 = tm.Col12,
                            Col13 = "Save",
                            Col14 = tm.Col14,
                            Col15 = tm.Col15,
                            Col9 = tm.Col9,
                            TList1 = mod1,
                            TList2 = mod2,
                            TList3 = mod3,
                            TList4 = mod4,
                            TList5 = mod5,
                            TList6 = mod6,
                            TList7 = mod7,
                            TList8 = mod8,
                            TList9 = mod9,
                            TList10 = mod10,
                            SelectedItems1 = new string[] { "" },
                            SelectedItems2 = new string[] { "" },
                            SelectedItems3 = new string[] { "" },
                            SelectedItems4 = new string[] { "" },
                            SelectedItems5 = new string[] { "" },
                            SelectedItems6 = new string[] { "" },
                            SelectedItems7 = new string[] { "" },
                            SelectedItems8 = new string[] { "" },
                            SelectedItems9 = new string[] { "" },
                            SelectedItems10 = new string[] { "" },
                        });
                    }
                    else
                    {
                        ViewBag.scripCall = "showmsgJS(1, 'Record Not Saved', 2);";
                    }
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region Transaction Request
        public ActionResult trans_req(string mid)
        {
            FillMst();
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            List<SelectListItem> md1 = new List<SelectListItem>();
            TempData[MyGuid + "_TList1"] = TempData[MyGuid + "_TList2"] = TempData[MyGuid + "_TList3"] = model[0].TList1 = model[0].TList2 = model[0].TList3 = md1;
            //TempData[MyGuid + "_TList2"] = model[0].TList2 = md1;         
            //TempData[MyGuid + "_TList3"] = model[0].TList3 = md1;         
            model[0].SelectedItems1 = model[0].SelectedItems2 = model[0].SelectedItems3 = new string[] { "" };
            //model[0].SelectedItems2 = new string[] { "" };
            //model[0].SelectedItems3 = new string[] { "" };
            mid_mst = EncryptDecrypt.Decrypt(Request.QueryString["mid"]);
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            model[0].Col10 = "trans_req";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "REQ";
            model[0].Col13 = "Save";
            model[0].Col100 = "Save & New";
            model[0].Col121 = "S";
            model[0].Col122 = "<u>S</u>ave";
            model[0].Col123 = "Save & Ne<u>w</u>";
            model[0].Chk1 = false;
            model[0].Chk2 = false;
            model[0].Chk3 = false;
            model[0].Col29 = sgen.server_datetime_local(userCode);
            model[0].Col40 = sgen.server_datetime_local(userCode);
            model[0].Col54 = sgen.server_datetime_local(userCode);
            switch (model[0].Col14)
            {
                case "35002.1":
                    model[0].Col9 = "TRANSACTION REQUEST";
                    break;
                case "35002.4":
                    model[0].Col9 = "PURCHASE REQUEST";
                    break;
                case "35002.5":
                    model[0].Col9 = "REDEMPTION REQUEST";
                    break;
                case "35002.6":
                    model[0].Col9 = "SWITCH REQUEST";
                    break;
            }
            DataTable dtb = (DataTable)sgen.GetSession(MyGuid, "URIGHTS");
            try
            {
                dtb = dtb.Select("m_id='" + model[0].Col14 + "'").CopyToDataTable();
                if (dtb.Rows.Count > 0)
                {
                    model[0].Col133 = dtb.Rows[0]["btnnew"].ToString();
                    model[0].Col134 = dtb.Rows[0]["btnedit"].ToString();
                    model[0].Col135 = dtb.Rows[0]["btnview"].ToString();
                }
            }
            catch (Exception ex) { }
            if (Request.QueryString["fstr"] != null)
            {
                sgen.SetSession(MyGuid, "SSEEKVAL", EncryptDecrypt.Decrypt(Request.QueryString["fstr"].ToString())); ;
                CallbackFun("PURCHASE", "N", "trans_req", "vastu", model);
                model[0].Col13 = "Save";
                model[0].Col100 = "Save & New";
                ViewBag.vnew = "disabled='disabled'";
                ViewBag.vedit = "disabled='disabled'";
                ViewBag.vsave = "disabled='disabled'";
                ViewBag.vsavenew = "disabled='disabled'";
                ViewBag.scripCall = "disableForm();";
                return View(model);
            }
            return View(model);
        }
        [HttpPost]
        public ActionResult trans_req(List<Tmodelmain> model, string command, string mid, HttpPostedFileBase upd1, HttpPostedFileBase upd2, HttpPostedFileBase upd3, String model1)
        {
            try
            {
                sgen = new sgenFun("-");
                if (!model1.Trim().Equals("")) model = sgen.Make_Model(model1);
                FillMst(model[0].Col15);
                #region
                var tm = model.FirstOrDefault();
                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_Tlist1"];
                List<SelectListItem> mod2 = (List<SelectListItem>)TempData[MyGuid + "_Tlist2"];
                List<SelectListItem> mod3 = (List<SelectListItem>)TempData[MyGuid + "_Tlist3"];
                TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1;
                TempData[MyGuid + "_Tlist2"] = model[0].TList2 = mod2;
                TempData[MyGuid + "_Tlist3"] = model[0].TList3 = mod3;
                if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                if (model[0].SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
                if (model[0].SelectedItems3 == null) model[0].SelectedItems3 = new string[] { "" };
                #endregion
                if (command == "New")
                {
                    //sgen.SetSession(MyGuid, "EDMODE", "N");
                    model = getnew(model);
                    if (model[0].Col127 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for new " + model[0].Col9 + ", please contact your admin', 2);";
                        return View(model);
                    }
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                    model[0].Col73 = btnval;
                    if (btnval == "VIEW")
                    {
                        model[0].Col13 = "Save";
                        model[0].Col100 = "Save & New";
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "disabled='disabled'";
                        ViewBag.vsavenew = "disabled='disabled'";
                        ViewBag.scripCall = "disableForm();";
                    }
                    if (btnval == "FDEL")
                    {
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                        ViewBag.scripCall = "showmsgJS(1, 'File Deleted Permanently', 1);disableForm();";
                        //model = new List<Tmodelmain>();
                        //model.Add(new Tmodelmain
                        //{
                        //    Col9 = tm.Col9,
                        //    Col10 = tm.Col10,
                        //    Col11 = tm.Col11,
                        //    Col12 = tm.Col12,
                        //    Col13 = "Save",
                        //    Col100 = "Save & New",
                        //    Col121 = "S",
                        //    Col122 = "<u>S</u>ave",
                        //    Col123 = "Save & Ne<u>w</u>",
                        //    Col14 = tm.Col14,
                        //    Col15 = tm.Col15,
                        //    TList1 = mod1,
                        //    TList2 = mod2,
                        //    TList3 = mod3,
                        //    SelectedItems1 = new string[] { "" },
                        //    SelectedItems2 = new string[] { "" },
                        //    SelectedItems3 = new string[] { "" },
                        //});
                    }
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {
                    tm = model.FirstOrDefault();
                    if (model[0].Col127 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for save " + model[0].Col9 + " , please contact your admin', 2);";
                        return View(model);
                    }
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        isedit = true;
                        model[0].Col16 = tm.Col16.Trim();
                    }
                    else
                    {
                        mq1 = "";
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10 + " where type='" + model[0].Col12 + "' " + model[0].Col11 + "  ";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        isedit = false;
                        model[0].Col16 = vch_num;
                    }
                    #region dtstr
                    DataTable dtstr = new DataTable();
                    dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                    string currdate = sgen.server_datetime(userCode);
                    DataRow dr = dtstr.NewRow();
                    dr["vch_num"] = model[0].Col16;
                    dr["vch_date"] = currdate;
                    dr["type"] = model[0].Col12;
                    dr["P_ACC_ID"] = model[0].Col18;
                    dr["ACC_ID"] = model[0].Col20;
                    dr["PUR_SCH"] = model[0].Col26;
                    dr["PUR_SCH_TYPE"] = model[0].Col59;
                    dr["INV_OPT"] = model[0].SelectedItems1.FirstOrDefault();
                    dr["INV_AMT"] = model[0].Col28;
                    if (model[0].Chk1 == true)
                    {
                        dr["INV_DATE"] = sgen.Make_date_S(model[0].Col29);
                    }
                    dr["PUR_RMK"] = model[0].Col30;
                    dr["RDP_SCH"] = model[0].Col35;
                    dr["RDP_SCH_TYPE"] = model[0].Col37;
                    dr["RDP_FOLIO"] = model[0].Col38;
                    dr["RDP_AMT"] = model[0].Col39;
                    if (model[0].Chk2 == true)
                    {
                        dr["RDP_DATE"] = sgen.Make_date_S(model[0].Col40);
                    }
                    dr["RDP_RMK"] = model[0].Col41;
                    dr["FRM_SCH"] = model[0].Col46;
                    dr["FRM_SCH_TYPE"] = model[0].Col48;
                    dr["TO_SCH"] = model[0].Col50;
                    dr["TO_SCH_TYPE"] = model[0].Col60;
                    dr["SWT_TYPE"] = model[0].SelectedItems2.FirstOrDefault();
                    dr["rdp_type"] = model[0].SelectedItems3.FirstOrDefault();
                    dr["SWT_FOLIO"] = model[0].Col52;
                    dr["SWT_AMT"] = model[0].Col53;
                    if (model[0].Chk3 == true)
                    {
                        dr["SWT_DATE"] = sgen.Make_date_S(model[0].Col54);
                    }
                    dr["SWT_RMK"] = model[0].Col55;
                    if (model[0].Chk1 == true) { dr["ispur"] = "Y"; } else { dr["ispur"] = "N"; }
                    if (model[0].Chk2 == true) { dr["isrdp"] = "Y"; } else { dr["isrdp"] = "N"; }
                    if (model[0].Chk3 == true) { dr["isswt"] = "Y"; } else { dr["isswt"] = "N"; }
                    dr["s_name_pur"] = model[0].Col61;
                    dr["s_type_pur"] = model[0].Col62;
                    dr["s_opt_pur"] = model[0].Col63;
                    dr["s_name_rdp"] = model[0].Col64;
                    dr["s_type_rdp"] = model[0].Col65;
                    dr["s_opt_rdp"] = model[0].Col66;
                    dr["sname_frm"] = model[0].Col67;
                    dr["stype_frm"] = model[0].Col68;
                    dr["sopt_frm"] = model[0].Col69;
                    dr["sname_to"] = model[0].Col70;
                    dr["stype_to"] = model[0].Col71;
                    dr["sopt_to"] = model[0].Col72;
                    dr = getsave(currdate, dr, model, isedit);
                    dtstr.Rows.Add(dr);
                    bool Result = sgen.Update_data_fast1(userCode, dtstr, model[0].Col10.Trim(), tm.Col8, isedit);
                    #region attachment
                    DataTable dtfile = cmd_Fun.GetStructure(userCode, "file_tab");
                    string serverpath = Server.MapPath("~/Uploads/" + cg_com_name.Replace(" ", "") + "/");
                    //purchase Upload
                    try
                    {
                        HttpPostedFileBase file1 = upd1;
                        ctype1 = file1.ContentType;
                        fileName1 = file1.FileName;
                        path1 = clientid_mst + unitid_mst + userid_mst + currdate + "_" + fileName1;
                        encpath1 = sgen.Convert_Stringto64(path1).ToString();
                        finalpath1 = serverpath + encpath1;
                        file1.SaveAs(finalpath1);
                        filesave(model, currdate, dtfile, fileName1, encpath1, "PUR", ctype1, model[0].Col32, model[0].Col31, "", "");
                    }
                    catch (Exception ex) { }
                    try
                    {
                        HttpPostedFileBase file2 = upd2;
                        ctype2 = file2.ContentType;
                        fileName2 = file2.FileName;
                        path2 = clientid_mst + unitid_mst + userid_mst + currdate + "_" + fileName2;
                        encpath2 = sgen.Convert_Stringto64(path2).ToString();
                        finalpath2 = serverpath + encpath2;
                        file2.SaveAs(finalpath2);
                        filesave(model, currdate, dtfile, fileName2, encpath2, "REDMP", ctype2, model[0].Col43, model[0].Col42, "", "");
                    }
                    catch (Exception ex) { }
                    try
                    {
                        HttpPostedFileBase file3 = upd3;
                        ctype3 = file3.ContentType;
                        fileName3 = file3.FileName;
                        path3 = clientid_mst + unitid_mst + userid_mst + currdate + "_" + fileName3;
                        encpath3 = sgen.Convert_Stringto64(path3).ToString();
                        finalpath3 = serverpath + encpath3;
                        file3.SaveAs(finalpath3);
                        filesave(model, currdate, dtfile, fileName3, encpath3, "SWITCH", ctype3, model[0].Col57, model[0].Col56, "", "");
                    }
                    catch (Exception ex) { }
                    if (dtfile.Rows.Count > 0)
                    {
                        res = sgen.Update_data_fast1(userCode, dtfile, "file_tab", "", false);
                    }

                    #endregion
                    if (Result == true)
                    {
                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col10 = tm.Col10,
                            Col11 = tm.Col11,
                            Col12 = tm.Col12,
                            Col13 = "Save",
                            Col100 = "Save & New",
                            Col121 = "S",
                            Col122 = "<u>S</u>ave",
                            Col123 = "Save & Ne<u>w</u>",
                            Col14 = tm.Col14,
                            Col15 = tm.Col15,
                            Col9 = tm.Col9,
                            TList1 = mod1,
                            TList2 = mod2,
                            TList3 = mod3,
                            SelectedItems1 = new string[] { "" },
                            SelectedItems2 = new string[] { "" },
                            SelectedItems3 = new string[] { "" },
                        });
                        if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                        {
                            sgen.SetSession(MyGuid, "RNEW", "N");
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                        {
                            try
                            {
                                sgen.SetSession(MyGuid, "RNEW", "Y");
                                Make_query("trans_req", "Select Parent Account", "PARENT", "1", "", "");
                                ViewBag.scripCall = "callFoo('Select Parent Account');";
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                            }
                            catch (Exception ex) { }
                        }
                    }
                    #endregion
                }
            }
            catch (Exception err)
            {
                var LineNumber = sgen.GetError(err);
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region Transaction reports
        public ActionResult trans_rpt()
        {
            FillMst();
            List<Tmodelmain> model = new List<Tmodelmain>();
            Tmodelmain tm1 = new Tmodelmain();
            model = getload(model);
            model[0].Col9 = "TRANSACTION REPORTS";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col14 = mid_mst.Trim();
            model[0].Col15 = MyGuid.Trim();
            return View(model);
        }
        [HttpPost]
        public ActionResult trans_rpt(List<Tmodelmain> model, string command)
        {
            try
            {
                string fdt = "", tdt = "", dts = "";
                string dt_filter = "", title = "";
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();
                DataTable dt = new DataTable();
                if (sgen.GetSession(MyGuid, "KPDCMD") != null)
                {
                    if (sgen.GetSession(MyGuid, "KPDFDT") != null) fdt = sgen.GetSession(MyGuid, "KPDFDT").ToString();
                    if (sgen.GetSession(MyGuid, "KPDTDT") != null) tdt = sgen.GetSession(MyGuid, "KPDTDT").ToString();
                    if (sgen.GetSession(MyGuid, "KPDCMD") != null) command = sgen.GetSession(MyGuid, "KPDCMD").ToString();
                    dts = "_" + fdt + "_" + tdt;
                    string tcp = "", tut = "", tfromdt = "", ttodate = "";
                    try
                    {
                        tcp = sgen.GetSession(MyGuid, "KDDL_CL").ToString();
                        tut = sgen.GetSession(MyGuid, "KDDL_UT").ToString();
                        tfromdt = sgen.GetSession(MyGuid, "TXTFROMDATE").ToString();
                        ttodate = sgen.GetSession(MyGuid, "TXTTODATE").ToString();
                    }
                    catch (Exception exx)
                    {
                    }
                    dt_filter = "(From " + fdt + " To " + tdt + " )";
                }
                switch (command)
                {
                    case "Callback":
                        model = StartCallback(model);
                        string fstr = sgen.GetSession(MyGuid, "SSEEKVAL").ToString();
                        return RedirectToAction("trans_req", "vastu", new { fstr = EncryptDecrypt.Encrypt(fstr) });
                        break;
                    case "Purchase":
                        sgen.SetSession(MyGuid, "KPDCMD", null);
                        sgen.SetSession(MyGuid, "btnval", "PURCHASE");
                        mq = "select  (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr," +
                                  " a.vch_num doc_no, c.c_name as Parent_Account, b.c_name as Account_Name,b.panno ,(case when (b.cpemail='ab@ab.ab' or b.cpemail='0' ) then '' else b.cpemail end )  as Email_ID ,(case when b.cpcont='0000000000' then '' else b.cpcont end) as Contact_No," +
                                  "((replace(b.cpname, '0', '-') || ' ' || replace(b.cp_mname, '0', '') || ' ' || replace(b.cp_lname, '0', ''))) contact_person, " +
                                  " d.master_name Scheme_Name,e.master_name as scheme_type,a.inv_opt investment_option,a.inv_amt Investment_Amount, to_char(a.inv_date,'" + sgen.Getsqldateformat() + "') investment_date from trans_req a" +
                                  " inner join  clients_mst b on a.acc_id = b.vch_num  and find_in_set(b.client_unit_id,'" + unitid_mst + "')= 1 " +
                                  " left join clients_mst c on a.p_acc_id = c.vch_num  and a.client_unit_id = c.client_unit_id and b.type = 'BCD'" +
                                  " left join master_setting d on d.master_id=a.pur_sch and d.type ='SHN' and find_in_set(d.client_unit_id,'" + unitid_mst + "')= 1 " +
                                  " left join master_setting e on d.classid=e.master_id and e.type='SCH' and find_in_set(e.client_unit_id,'" + unitid_mst + "')= 1" +
                                  " where a.type = 'REQ' and a.client_id = '" + clientid_mst + "' and a.client_unit_id = '" + unitid_mst + "' and " +
                                  "to_date(to_char(a.inv_date,'" + sgen.Getsqldateformat() + "'),'" + sgen.Getsqldateformat() + "') between " +
                        "to_date('" + fdt + "','" + sgen.Getsqldateformat() + "') and to_date('" + tdt + "','" + sgen.Getsqldateformat() + "') and pur_sch!=0 order by a.vch_num ";
                        title = "List Of Purchase Transactions" + dt_filter;
                        break;
                    case "Redemptions":
                        sgen.SetSession(MyGuid, "KPDCMD", null);
                        sgen.SetSession(MyGuid, "btnval", "PURCHASE");
                        mq = "select  (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr," +
                                  " a.vch_num doc_no, c.c_name as Parent_Account, b.c_name as Account_Name,b.panno ,(case when (b.cpemail='ab@ab.ab' or b.cpemail='0' ) then '' else b.cpemail end )  as Email_ID ,(case when b.cpcont='0000000000' then '' else b.cpcont end) as Contact_No," +
                                  "((replace(b.cpname, '0', '-') || ' ' || replace(b.cp_mname, '0', '') || ' ' || replace(b.cp_lname, '0', ''))) contact_person, " +
                                  " d.master_id scheme_id,d.master_name Scheme_Name,e.master_id as scheme_type_id,e.master_name as scheme_type,a.rdp_folio as folio_no ,a.rdp_amt redemption_Amount,to_char(a.rdp_date,'" + sgen.Getsqldateformat() + "')redemption_date from trans_req a" +
                                  " inner join  clients_mst b on a.acc_id = b.vch_num  and find_in_set(b.client_unit_id,'" + unitid_mst + "')= 1 " +
                                  " left join clients_mst c on a.p_acc_id = c.vch_num  and a.client_unit_id = c.client_unit_id and b.type = 'BCD'" +
                                  " left join master_setting d on d.master_id=a.rdp_sch and d.type ='SHN' and find_in_set(d.client_unit_id,'" + unitid_mst + "')= 1 " +
                                  " left join master_setting e on d.classid=e.master_id and e.type='SCH' and find_in_set(e.client_unit_id,'" + unitid_mst + "')= 1" +
                                  " where a.type = 'REQ' and a.client_id = '" + clientid_mst + "' and a.client_unit_id = '" + unitid_mst + "' and " +
                                  "to_date(to_char(a.rdp_date,'" + sgen.Getsqldateformat() + "'),'" + sgen.Getsqldateformat() + "') between " +
                        "to_date('" + fdt + "','" + sgen.Getsqldateformat() + "') and to_date('" + tdt + "','" + sgen.Getsqldateformat() + "') and rdp_sch!=0 order by a.vch_num ";
                        //dt = sgen.getdata(userCode, mq);
                        //mq1 = sgen.open_grid_dt("List Of Redemptions Transactions " + dt_filter + "", dt, 1);
                        //if (mq1 == "ok") { ViewBag.scripCall = "callFoo('List Of Redemptions Transactions " + dt_filter + "');"; }
                        //else { ViewBag.scripCall = "showmsgJS(1,'No Data Found',2);"; }
                        title = "List Of Redemptions Transactions" + dt_filter;
                        break;
                    case "Switches":
                        sgen.SetSession(MyGuid, "KPDCMD", null);
                        sgen.SetSession(MyGuid, "btnval", "PURCHASE");
                        mq = "select  (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr," +
                                  " a.vch_num doc_no, c.c_name as Parent_Account, b.c_name as Account_Name,b.panno ,(case when (b.cpemail='ab@ab.ab' or b.cpemail='0' ) then '' else b.cpemail end )  as Email_ID ,(case when b.cpcont='0000000000' then '' else b.cpcont end) as Contact_No," +
                                  "((replace(b.cpname, '0', '-') || ' ' || replace(b.cp_mname, '0', '') || ' ' || replace(b.cp_lname, '0', ''))) contact_person, " +
                                  " h.master_id From_scheme_id,h.master_name from_Scheme_Name,i.master_id as from_scheme_type_id,i.master_name as from_scheme_type," +
                                  "j.master_id to_sch_id,j.master_name to_Scheme_Name,k.master_id as to_scheme_type_id,i.master_name as to_scheme_type,l.master_name switch_type,a.swt_folio folio_no ,a.swt_amt Switch_Amount,to_char(a.swt_date,'" + sgen.Getsqldateformat() + "') switch_date" +
                                  " from trans_req a" +
                                  " inner join  clients_mst b on a.acc_id = b.vch_num  and find_in_set(b.client_unit_id,'" + unitid_mst + "')= 1 " +
                                  " left join clients_mst c on a.p_acc_id = c.vch_num  and a.client_unit_id = c.client_unit_id and b.type = 'BCD'" +
                                  " left join master_setting h on h.master_id=a.frm_sch and h.type ='SHN' and find_in_set(h.client_unit_id,'" + unitid_mst + "')= 1" +
                                  " left join master_setting i on h.classid=i.master_id and i.type='SCH' and find_in_set(i.client_unit_id,'" + unitid_mst + "')= 1 " +
                                  " left join  master_setting j on j.master_id=a.frm_sch and j.type ='SHN' and find_in_set(j.client_unit_id,'" + unitid_mst + "')= 1  " +
                                  "left join master_setting k on j.classid=k.master_id and k.type='SCH' and find_in_set(k.client_unit_id,'" + unitid_mst + "')= 1 " +
                                  " left join  master_setting l on l.master_id=a.swt_type and l.type ='SWT' and find_in_set(l.client_unit_id,'" + unitid_mst + "')= 1 " +
                                  "where a.type = 'REQ' and a.client_id = '" + clientid_mst + "' and a.client_unit_id = '" + unitid_mst + "' and " +
                                  "to_date(to_char(a.swt_date,'" + sgen.Getsqldateformat() + "'),'" + sgen.Getsqldateformat() + "') between " +
                        "to_date('" + fdt + "','" + sgen.Getsqldateformat() + "') and to_date('" + tdt + "','" + sgen.Getsqldateformat() + "') and frm_sch!=0 order by a.vch_num ";
                        //dt = sgen.getdata(userCode, mq);
                        //mq1 = sgen.open_grid_dt("List Of Switches Transactions " + dt_filter + "", dt, 1);
                        //if (mq1 == "ok") { ViewBag.scripCall = "callFoo('List Of Switches Transactions " + dt_filter + "');"; }
                        //else { ViewBag.scripCall = "showmsgJS(1,'No Data Found',2);"; }
                        title = "List Of Switches Transactions" + dt_filter;
                        break;
                    case "Scheme Wise Purchase":
                        sgen.SetSession(MyGuid, "KPDCMD", null);
                        mq = "select a.pur_sch, d.master_id scheme_id,d.master_name Scheme_Name ,sum(a.inv_amt) Investment_Amount" +
                            " from trans_req a left join master_setting d on d.master_id = a.pur_sch and d.type = 'SHN' and" +
                            " find_in_set(d.client_unit_id,'" + unitid_mst + "')= 1 where a.type = 'REQ' and a.client_id = '" + clientid_mst + "'" +
                            " and a.client_unit_id = '" + unitid_mst + "' and a.inv_amt >0  and a.pur_sch != 0 and to_date(to_char(a.inv_date,'" + sgen.Getsqldateformat() + "'),'" + sgen.Getsqldateformat() + "') between " +
                        "to_date('" + fdt + "','" + sgen.Getsqldateformat() + "') and to_date('" + tdt + "','" + sgen.Getsqldateformat() + "')  group by a.pur_sch, d.master_id" +
                            ",d.master_name order by a.pur_sch";
                        //dt = sgen.getdata(userCode, mq);
                        //mq1 = sgen.open_grid_dt("Scheme Wise Purchase " + dt_filter + "", dt, 0);
                        //if (mq1 == "ok") { ViewBag.scripCall = "callFoo('Scheme Wise Purchase " + dt_filter + "');"; }
                        //else { ViewBag.scripCall = "showmsgJS(1,'No Data Found',2);"; }
                        title = "Scheme Wise Purchase " + dt_filter;
                        break;
                    case "Scheme Wise Redemptions":
                        try
                        {
                            sgen.SetSession(MyGuid, "KPDCMD", null);
                            mq = "select a.pur_sch, d.master_id scheme_id,d.master_name Scheme_Name ,sum(a.rdp_amt) Redemption_Amount" +
                                " from trans_req a left join master_setting d on d.master_id = a.rdp_sch and d.type = 'SHN' and" +
                                " find_in_set(d.client_unit_id,'" + unitid_mst + "')= 1 where a.type = 'REQ' and a.client_id = '" + clientid_mst + "'" +
                                " and a.client_unit_id = '" + unitid_mst + "' and a.rdp_amt >0  and a.rdp_sch != 0 and to_date(to_char(a.rdp_date,'" + sgen.Getsqldateformat() + "'),'" + sgen.Getsqldateformat() + "') between " +
                            "to_date('" + fdt + "','" + sgen.Getsqldateformat() + "') and to_date('" + tdt + "','" + sgen.Getsqldateformat() + "')  group by a.pur_sch, d.master_id" +
                                ",d.master_name order by a.pur_sch";
                            //dt = sgen.getdata(userCode, mq);
                            //mq1 = sgen.open_grid_dt("Scheme Wise Redemptions " + dt_filter + "", dt, 0);
                            //if (mq1 == "ok") { ViewBag.scripCall = "callFoo('Scheme Wise Redemptions " + dt_filter + "');"; }
                            //else { ViewBag.scripCall = "showmsgJS(1,'No Data Found',2);"; }
                            title = "Scheme Wise Redemptions " + dt_filter;
                        }
                        catch { }
                        break;
                    case "Scheme Type Wise Purchase":
                        try
                        {
                            sgen.SetSession(MyGuid, "KPDCMD", null);
                            mq = "select e.master_id, e.master_id as scheme_type_id,e.master_name as scheme_type, sum(a.inv_amt) investment_amt " +
                                "from trans_req a left join master_setting d on d.master_id = a.pur_sch and d.type = 'SHN' and " +
                                "find_in_set(d.client_unit_id,'" + unitid_mst + "')= 1 left join master_setting e on d.classid = e.master_id " +
                                "and e.type = 'SCH' and find_in_set(e.client_unit_id,'" + unitid_mst + "')= 1 where a.type = 'REQ' and" +
                                " a.client_id = '" + clientid_mst + "' and a.client_unit_id = '" + unitid_mst + "' and a.inv_amt >0  and a.pur_sch != 0 and " +
                                "to_date(to_char(a.inv_date,'" + sgen.Getsqldateformat() + "'),'" + sgen.Getsqldateformat() + "') between " +
                            "to_date('" + fdt + "','" + sgen.Getsqldateformat() + "') and to_date('" + tdt + "','" + sgen.Getsqldateformat() + "')" +
                                " group by e.master_id,e.master_name order by e.master_name";
                            //dt = sgen.getdata(userCode, mq);
                            //mq1 = sgen.open_grid_dt("Scheme Type Wise Purchase " + dt_filter + "", dt, 0);
                            //if (mq1 == "ok") { ViewBag.scripCall = "callFoo('Scheme Type Wise Purchase " + dt_filter + "');"; }
                            //else { ViewBag.scripCall = "showmsgJS(1,'No Data Found',2);"; }
                            title = "Scheme Type Wise Purchase " + dt_filter;
                        }
                        catch { }
                        break;
                    case "Scheme Type Wise Redemptions":
                        try
                        {
                            sgen.SetSession(MyGuid, "KPDCMD", null);
                            sgen.SetSession(MyGuid, "btnval", "PURCHASE");
                            mq = "select  (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr," +
                                      " a.vch_num doc_no, c.c_name as Parent_Account, b.c_name as Account_Name,b.panno ,b.cpemail as Email_ID ,b.cpcont as Contact_No," +
                                      "((replace(b.cpname, '0', '-') || ' ' || replace(b.cp_mname, '0', '') || ' ' || replace(b.cp_lname, '0', ''))) contact_person, " +
                                      " d.master_id scheme_id,d.master_name Scheme_Name,e.master_id as scheme_type_id,e.master_name as scheme_type,a.rdp_folio as folio_no ,a.rdp_amt redemption_Amount,to_char(a.rdp_date,'" + sgen.Getsqldateformat() + "')redemption_date from trans_req a" +
                                      " inner join  clients_mst b on a.acc_id = b.vch_num  and find_in_set(b.client_unit_id,'" + unitid_mst + "')= 1 " +
                                      " left join clients_mst c on a.p_acc_id = c.vch_num  and a.client_unit_id = c.client_unit_id and b.type = 'BCD'" +
                                      " left join master_setting d on d.master_id=a.rdp_sch and d.type ='SHN' and find_in_set(d.client_unit_id,'" + unitid_mst + "')= 1 " +
                                      " left join master_setting e on d.classid=e.master_id and e.type='SCH' and find_in_set(e.client_unit_id,'" + unitid_mst + "')= 1" +
                                      " where a.type = 'REQ' and a.client_id = '" + clientid_mst + "' and a.client_unit_id = '" + unitid_mst + "' and " +
                                      "to_date(to_char(a.rdp_date,'" + sgen.Getsqldateformat() + "'),'" + sgen.Getsqldateformat() + "') between " +
                            "to_date('" + fdt + "','" + sgen.Getsqldateformat() + "') and to_date('" + tdt + "','" + sgen.Getsqldateformat() + "') and rdp_sch!=0 order by a.vch_num ";
                            //dt = sgen.getdata(userCode, mq);
                            //mq1 = sgen.open_grid_dt("List Of Redemptions Transactions " + dt_filter + "", dt, 1);
                            //if (mq1 == "ok") { ViewBag.scripCall = "callFoo('List Of Redemptions Transactions " + dt_filter + "');"; }
                            //else { ViewBag.scripCall = "showmsgJS(1,'No Data Found',2);"; }
                            title = "List Of Redemptions Transactions " + dt_filter;
                        }
                        catch { }
                        break;
                    case "Scheme With Type Wise Purchase":
                        try
                        {
                            sgen.SetSession(MyGuid, "KPDCMD", null);
                            mq = "select d.master_id scheme_id,d.master_name Scheme_Name,e.master_name as scheme_type,sum(a.inv_amt) investment_amt " +
                                "from trans_req a left join master_setting d on d.master_id = a.pur_sch and d.type = 'SHN' and " +
                                "find_in_set(d.client_unit_id,'" + unitid_mst + "')= 1 left join master_setting e on d.classid = e.master_id and" +
                                " e.type = 'SCH' and find_in_set(e.client_unit_id,'" + unitid_mst + "')= 1 where a.type = 'REQ' and " +
                                "a.client_id = '" + clientid_mst + "' and a.client_unit_id = '" + unitid_mst + "' and a.pur_sch != 0 and a.inv_amt > 0 " +
                                "and to_date(to_char(a.inv_date,'" + sgen.Getsqldateformat() + "'),'" + sgen.Getsqldateformat() + "') between " +
                            "to_date('" + fdt + "','" + sgen.Getsqldateformat() + "') and to_date('" + tdt + "','" + sgen.Getsqldateformat() + "')" +
                                "group by d.master_id ,d.master_name,e.master_name";
                            //dt = sgen.getdata(userCode, mq);
                            //mq1 = sgen.open_grid_dt("Scheme With Type Wise Purchase", dt, 0);
                            //if (mq1 == "ok") { ViewBag.scripCall = "callFoo('Scheme Type Wise Purchase');"; }
                            //else { ViewBag.scripCall = "showmsgJS(1,'No Data Found',2);"; }
                            title = "Scheme With Type Wise Purchase " + dt_filter;
                        }
                        catch { }
                        break;
                    case "Scheme With Type Wise Redemptions":
                        sgen.SetSession(MyGuid, "KPDCMD", null);
                        mq = "select d.master_id scheme_id,d.master_name Scheme_Name,e.master_name as scheme_type,sum(a.rdp_amt) redemption_amt " +
                              "from trans_req a left join master_setting d on d.master_id = a.rdp_sch and d.type = 'SHN' and " +
                              "find_in_set(d.client_unit_id,'" + unitid_mst + "')= 1 left join master_setting e on d.classid = e.master_id and" +
                              " e.type = 'SCH' and find_in_set(e.client_unit_id,'" + unitid_mst + "')= 1 where a.type = 'REQ' and " +
                              "a.client_id = '" + clientid_mst + "' and a.client_unit_id = '" + unitid_mst + "' and a.rdp_sch != 0 and a.rdp_amt > 0 " +
                              "and to_date(to_char(a.rdp_date,'" + sgen.Getsqldateformat() + "'),'" + sgen.Getsqldateformat() + "') between " +
                          "to_date('" + fdt + "','" + sgen.Getsqldateformat() + "') and to_date('" + tdt + "','" + sgen.Getsqldateformat() + "')" +
                              "group by d.master_id ,d.master_name,e.master_name";
                        //dt = sgen.getdata(userCode, mq);
                        //mq1 = sgen.open_grid_dt("Scheme With Type Wise Redemptions " + dt_filter + "", dt, 0);
                        //if (mq1 == "ok") { ViewBag.scripCall = "callFoo('Scheme With Type Wise Redemptions " + dt_filter + "');"; }
                        //else { ViewBag.scripCall = "showmsgJS(1,'No Data Found',2);"; }
                        title = "Scheme With Type Wise Redemptions " + dt_filter;
                        break;
                }
                sgen.open_grid(title, mq, 0);
                ViewBag.scripCall = "callFoo('" + title + "');";
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region LEAD VISIT ENTRY
        public ActionResult ld_visit()
        {
            FillMst();
            chkRef();
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            model[0].Col9 = "LEAD VISIT ENTRY";
            model[0].Col10 = "kc_tab";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "BLV";
            ModelState.Clear();
            return View(model);
        }
        public List<Tmodelmain> newld_visit(List<Tmodelmain> model)
        {
            model = getnew(model);
            model[0].Col13 = "Save";
            model[0].Col100 = "Save & New";
            model[0].Col121 = "S";
            model[0].Col122 = "<u>S</u>ave";
            model[0].Col123 = "Save & Ne<u>w</u>";

            Make_query("ld_visit", "List Of Clients", "CLIENT", "1", "", "");
            ViewBag.scripCall = "callFoo('List Of Clients');";
            return model;
        }
        [HttpPost]
        public ActionResult ld_visit(List<Tmodelmain> model, string command)
        {
            try
            {
                FillMst();
                var tm = model.FirstOrDefault();
                if (command == "New")
                {
                    model = newld_visit(model);
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {
                    var tmodel = model.FirstOrDefault();
                    string currdate = sgen.server_datetime(userCode);
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        isedit = true;
                        vch_num = model[0].Col16;
                    }
                    else
                    {
                        isedit = false;
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        model[0].Col16 = vch_num;
                    }
                    if ((model[0].Col17 == ""))
                    {
                        ViewBag.scripCall += "showmsgJS(1,'Please Select Client Name', 2);";
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                        return View(model);
                    }
                    DataTable dataTable = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                    for (int i = 0; i < model.Count; i++)
                    {
                        DataRow dr = dataTable.NewRow();
                        dr["vch_num"] = vch_num;
                        dr["type"] = model[0].Col12;
                        dr["vch_date"] = currdate;
                        dr["col1"] = model[0].Col18;
                        dr["col21"] = model[0].Col21; //add to be visited
                        dr["date1"] = sgen.Make_date_S(model[0].Col22); //DATE OF LOGIN
                        dr["date2"] = sgen.Make_date_S(model[0].Col23); //DATE OF VISIT
                        dr["col3"] = model[0].Col24; //ARCHITECT IF ANY
                        dr["col4"] = model[0].Col25; //VISITING CHARGES
                        dr["col5"] = model[0].Col26; //REFRIGRATOR DETAILING
                        dr["col22"] = model[0].Col27; //DISHWASHER DETAILING'
                        dr["col7"] = model[0].Col28; //CYLINDER INSIDE OR OUTSIDE 
                        dr["col23"] = model[0].Col29; //SINK DETAILING
                        dr["col24"] = model[0].Col30; //APPLIANCES DETAILING
                        dr["col10"] = model[0].Col31; //DIRECTIONS
                        dr["col25"] = model[0].Col32;//ELEVATION
                        dr["col12"] = model[0].Col33;//CEILING HEIGHT
                        dr["col31"] = model[0].Col34; //REMARKS IF ANY
                        dr["col13"] = model[0].Col35; //GRANITE CLEAR HEIGHT
                        dr["col14"] = model[0].Col36;//GROUND PLATFORM HEIGHT
                        dr["col15"] = model[0].Col37;//ELEVATIONS
                        dr["col32"] = model[0].Col38;//remarks 2
                        dr["col16"] = model[0].Col39;//SITE VISIT DONE BY
                        dr["date3"] = sgen.Make_date_S(model[0].Col40);//DATE
                        dr["col11"] = model[0].Col41;//TIME
                        dr = getsave(currdate, dr, model);
                        dataTable.Rows.Add(dr);
                    }
                    bool Result = sgen.Update_data_fast1(userCode, dataTable, model[0].Col10, tmodel.Col8, isedit);
                    if (Result == true)
                    {
                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col10 = tm.Col10,
                            Col9 = tm.Col9,
                            Col11 = tm.Col11,
                            Col13 = "Save",
                            Col14 = tm.Col14,
                            Col15 = tm.Col15,
                            Col100 = tmodel.Col100,
                            Col121 = tmodel.Col121,
                            Col122 = tmodel.Col122,
                            Col123 = tmodel.Col123,
                        });
                        if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                        {
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.scripCall = "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                        {
                            model = newld_visit(model);
                            ViewBag.scripCall = "mytoast('success', 'toast-top-right', 'Data Saved Successfully');enableForm();";
                        }
                    }
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region Allocate Assignment
        public ActionResult alloc_assign(string mid)
        {
            FillMst();
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            List<SelectListItem> md1 = new List<SelectListItem>();
            TempData[MyGuid + "_TList1"] = model[0].TList1 = md1;
            TempData[MyGuid + "_TList2"] = model[0].TList2 = md1;
            model[0].SelectedItems1 = new string[] { "" };
            model[0].SelectedItems2 = new string[] { "" };
            model[0].Col9 = "TRANSACTION REQUEST";
            model[0].Col10 = "trans_req";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "REQ";
            model[0].Col13 = "Save";
            model[0].Col100 = "Save & New";
            model[0].Col121 = "S";
            model[0].Col122 = "<u>S</u>ave";
            model[0].Col123 = "Save & Ne<u>w</u>";
            model[0].Chk1 = false;
            model[0].Chk2 = false;
            model[0].Chk3 = false;
            model[0].Col29 = sgen.server_datetime_local(userCode);
            model[0].Col40 = sgen.server_datetime_local(userCode);
            model[0].Col54 = sgen.server_datetime_local(userCode);
            DataTable dtb = (DataTable)sgen.GetSession(MyGuid, "URIGHTS");
            try
            {
                dtb = dtb.Select("m_id='" + model[0].Col14 + "'").CopyToDataTable();
                if (dtb.Rows.Count > 0)
                {
                    model[0].Col133 = dtb.Rows[0]["btnnew"].ToString();
                    model[0].Col134 = dtb.Rows[0]["btnedit"].ToString();
                    model[0].Col135 = dtb.Rows[0]["btnview"].ToString();
                }
            }
            catch (Exception ex) { }
            if (Request.QueryString["fstr"] != null)
            {
                sgen.SetSession(MyGuid, "SSEEKVAL", EncryptDecrypt.Decrypt(Request.QueryString["fstr"].ToString())); ;
                CallbackFun("PURCHASE", "N", "trans_req", "vastu", model);
                model[0].Col13 = "Save";
                model[0].Col100 = "Save & New";
                ViewBag.vnew = "disabled='disabled'";
                ViewBag.vedit = "disabled='disabled'";
                ViewBag.vsave = "disabled='disabled'";
                ViewBag.vsavenew = "disabled='disabled'";
                ViewBag.scripCall = "disableForm();";
                return View(model);
            }
            return View(model);
        }
        [HttpPost]
        public ActionResult alloc_assign(List<Tmodelmain> model, string command, string mid, HttpPostedFileBase upd1, HttpPostedFileBase upd2, HttpPostedFileBase upd3)
        {
            try
            {
                FillMst();
                #region
                var tm = model.FirstOrDefault();
                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_Tlist1"];
                List<SelectListItem> mod2 = (List<SelectListItem>)TempData[MyGuid + "_Tlist2"];
                TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1;
                TempData[MyGuid + "_Tlist2"] = model[0].TList2 = mod2;
                if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                if (model[0].SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
                #endregion
                if (command == "New")
                {
                    sgen.SetSession(MyGuid, "EDMODE", "N");
                    if (model[0].Col127 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for new " + model[0].Col9 + ", please contact your admin', 2);";
                        return View(model);
                    }
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                    if (btnval == "VIEW")
                    {
                        model[0].Col13 = "Save";
                        model[0].Col100 = "Save & New";
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "disabled='disabled'";
                        ViewBag.vsavenew = "disabled='disabled'";
                        ViewBag.scripCall = "disableForm();";
                    }
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {
                    tm = model.FirstOrDefault();
                    if (model[0].Col127 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for save " + model[0].Col9 + " , please contact your admin', 2);";
                        return View(model);
                    }
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        isedit = true;
                        model[0].Col16 = tm.Col16.Trim();
                    }
                    else
                    {
                        mq1 = "";
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10 + " where type='" + model[0].Col12 + "' " + model[0].Col11 + "  ";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        isedit = false;
                        model[0].Col16 = vch_num;
                    }
                    #region dtstr
                    DataTable dtstr = new DataTable();
                    dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                    string currdate = sgen.server_datetime(userCode);
                    DataRow dr = dtstr.NewRow();
                    dr["vch_num"] = model[0].Col16;
                    dr["vch_date"] = currdate;
                    dr["type"] = model[0].Col12;
                    dr["P_ACC_ID"] = model[0].Col18;
                    dr["ACC_ID"] = model[0].Col20;
                    dr["PUR_SCH"] = model[0].Col26;
                    dr["PUR_SCH_TYPE"] = model[0].Col59;
                    dr["INV_OPT"] = model[0].SelectedItems1.FirstOrDefault();
                    dr["INV_AMT"] = model[0].Col28;
                    if (model[0].Chk1 == true)
                    {
                        dr["INV_DATE"] = sgen.Make_date_S(model[0].Col29);
                    }
                    dr["PUR_RMK"] = model[0].Col30;
                    dr["RDP_SCH"] = model[0].Col35;
                    dr["RDP_SCH_TYPE"] = model[0].Col37;
                    dr["RDP_FOLIO"] = model[0].Col38;
                    dr["RDP_AMT"] = model[0].Col39;
                    if (model[0].Chk2 == true)
                    {
                        dr["RDP_DATE"] = sgen.Make_date_S(model[0].Col40);
                    }
                    dr["RDP_RMK"] = model[0].Col41;
                    dr["FRM_SCH"] = model[0].Col46;
                    dr["FRM_SCH_TYPE"] = model[0].Col48;
                    dr["TO_SCH"] = model[0].Col50;
                    dr["TO_SCH_TYPE"] = model[0].Col60;
                    dr["SWT_TYPE"] = model[0].SelectedItems2.FirstOrDefault();
                    dr["SWT_FOLIO"] = model[0].Col52;
                    dr["SWT_AMT"] = model[0].Col53;
                    if (model[0].Chk3 == true)
                    {
                        dr["SWT_DATE"] = sgen.Make_date_S(model[0].Col54);
                    }
                    dr["SWT_RMK"] = model[0].Col55;
                    if (model[0].Chk1 == true) { dr["ispur"] = "Y"; } else { dr["ispur"] = "N"; }
                    if (model[0].Chk2 == true) { dr["isrdp"] = "Y"; } else { dr["isrdp"] = "N"; }
                    if (model[0].Chk3 == true) { dr["isswt"] = "Y"; } else { dr["isswt"] = "N"; }
                    dr = getsave(currdate, dr, model, isedit);
                    dtstr.Rows.Add(dr);
                    bool Result = sgen.Update_data_fast1(userCode, dtstr, model[0].Col10.Trim(), tm.Col8, isedit);
                    if (Result == true)
                    {
                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col10 = tm.Col10,
                            Col11 = tm.Col11,
                            Col12 = tm.Col12,
                            Col13 = "Save",
                            Col100 = "Save & New",
                            Col121 = "S",
                            Col122 = "<u>S</u>ave",
                            //Col123 = "Save & Ne<u>w</u>",
                            Col14 = tm.Col14,
                            Col15 = tm.Col15,
                            Col9 = tm.Col9,
                            TList1 = mod1,
                            TList2 = mod2,
                            SelectedItems1 = new string[] { "" },
                            SelectedItems2 = new string[] { "" },
                        });
                        //if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                        //{
                        ViewBag.vnew = "";
                        ViewBag.vedit = "";
                        ViewBag.vsave = "disabled='disabled'";
                        ViewBag.vsavenew = "disabled='disabled'";
                        ViewBag.vsavenew = "disabled='disabled'";
                        ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        //}
                        //else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                        //{
                        //    try
                        //    {
                        //        Session["RNEW"] = "Y";
                        //        ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                        //    }
                        //    catch (Exception ex) { }
                        //}
                    }
                    #endregion
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region non fin req
        public ActionResult n_finreq()
        {
            FillMst();
            List<Tmodelmain> model = new List<Tmodelmain>();
            List<SelectListItem> mod1 = new List<SelectListItem>();
            List<SelectListItem> mod2 = new List<SelectListItem>();
            model = getload(model);
            model[0].Col9 = "NON FINANCIAL TRANSACTION REQUEST";
            model[0].Col10 = "trans_req";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "NFR";


            TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
            TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2;
            model[0].SelectedItems1 = new string[] { "" };
            model[0].SelectedItems2 = new string[] { "" };
            ModelState.Clear();
            return View(model);
        }
        [HttpPost]
        public ActionResult n_finreq(List<Tmodelmain> model, string command, HttpPostedFileBase upd1)
        {
            try
            {
                FillMst();
                var result = false;
                var tm = model.FirstOrDefault();
                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                List<SelectListItem> mod2 = (List<SelectListItem>)TempData[MyGuid + "_TList2"];
                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
                TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2;
                if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE") || command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                {
                    string currdate = sgen.server_datetime(userCode);
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        isedit = true;
                        model[0].Col16 = tm.Col16.Trim();
                    }
                    else
                    {
                        mq1 = "";
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10 + " where type='" + model[0].Col12 + "' " + model[0].Col11 + "  ";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        isedit = false;
                        model[0].Col16 = vch_num;
                    }
                    DataTable dataTable = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                    DataRow dr = dataTable.NewRow();
                    dr["rec_id"] = "0";
                    dr["vch_num"] = model[0].Col16;
                    dr["vch_date"] = currdate;
                    dr["type"] = model[0].Col12;
                    dr["P_ACC_ID"] = model[0].Col18;
                    dr["ACC_ID"] = model[0].Col20;
                    dr["RDP_FOLIO"] = model[0].Col25;
                    dr["RDP_RMK"] = model[0].Col26;
                    dr["RDP_SCH"] = model[0].SelectedItems1.FirstOrDefault();
                    dr["TRANS_TYPE"] = model[0].SelectedItems2.FirstOrDefault();
                    dr["TRANS_date"] = sgen.Make_date_S(model[0].Col34);
                    //dr["INV_AMT"] = model[0].Col28;
                    dr = getsave(currdate, dr, model);
                    dataTable.Rows.Add(dr);
                    result = sgen.Update_data(userCode, dataTable, model[0].Col10.Trim(), model[0].Col8, isedit);
                    #region attachment
                    DataTable dtfile = cmd_Fun.GetStructure(userCode, "file_tab");
                    string serverpath = Server.MapPath("~/Uploads/" + cg_com_name.Replace(" ", "") + "/");
                    //purchase Upload
                    try
                    {
                        HttpPostedFileBase file1 = upd1;
                        ctype1 = file1.ContentType;
                        fileName1 = file1.FileName;
                        path1 = clientid_mst + unitid_mst + userid_mst + currdate + "_" + fileName1;
                        encpath1 = sgen.Convert_Stringto64(path1).ToString();
                        finalpath1 = serverpath + encpath1;
                        file1.SaveAs(finalpath1);
                        filesave(model, currdate, dtfile, fileName1, encpath1, "PUR", ctype1, model[0].Col31, model[0].Col32, "", "");
                    }
                    catch (Exception ex) { }
                    if (dtfile.Rows.Count > 0)
                    {
                        res = sgen.Update_data_fast1(userCode, dtfile, "file_tab", "", false);
                    }
                    #endregion
                    if (result == true)
                    {
                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col10 = tm.Col10,
                            Col11 = tm.Col11,
                            Col12 = tm.Col12,
                            Col13 = "Save",
                            Col100 = "Save & New",
                            Col121 = "S",
                            Col122 = "<u>S</u>ave",
                            Col123 = "Save & Ne<u>w</u>",
                            Col14 = tm.Col14,
                            Col15 = tm.Col15,
                            Col9 = tm.Col9,
                            TList1 = mod1,
                            TList2 = mod2,
                            SelectedItems1 = new string[] { "" },
                            SelectedItems2 = new string[] { "" },
                        });
                        if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                        {
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                        {
                            Make_query("n_finreq", "Select Parent Account", "PARENT", "1", "", "");
                            ViewBag.scripCall = "callFoo('Select Parent Account');";
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                        }
                    }
                    else { ViewBag.scripCall = "showmsgJS(1, 'Something Went Wrong, Data Not Saved', 0);"; }
                }
            }
            catch (Exception err)
            {
                var LineNumber = sgen.GetError(err);
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region INSURUNCE
        public ActionResult fas_ins()
        {
            FillMst();
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            List<SelectListItem> md1 = new List<SelectListItem>();
            TempData[MyGuid + "_TList1"] = model[0].TList1 = md1;
            TempData[MyGuid + "_TList2"] = model[0].TList2 = md1;
            TempData[MyGuid + "_TList3"] = model[0].TList3 = md1;
            TempData[MyGuid + "_TList4"] = model[0].TList4 = md1;
            TempData[MyGuid + "_TList5"] = model[0].TList5 = md1;
            TempData[MyGuid + "_TList6"] = model[0].TList6 = md1;
            model[0].SelectedItems1 = new string[] { "" };
            model[0].SelectedItems2 = new string[] { "" };
            model[0].SelectedItems3 = new string[] { "" };
            model[0].SelectedItems4 = new string[] { "" };
            model[0].SelectedItems5 = new string[] { "" };
            model[0].SelectedItems6 = new string[] { "" };
            model[0].Col10 = "trans_req";
            model[0].Col9 = "INSURANCE";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "INS";

            return View(model);
        }
        [HttpPost]
        public ActionResult fas_ins(List<Tmodelmain> model, string command, string mid, HttpPostedFileBase upd1)
        {
            try
            {
                FillMst(model[0].Col15);
                #region
                var tm = model.FirstOrDefault();
                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                List<SelectListItem> mod2 = (List<SelectListItem>)TempData[MyGuid + "_TList2"];
                List<SelectListItem> mod3 = (List<SelectListItem>)TempData[MyGuid + "_TList3"];
                //List<SelectListItem> mod4 = (List<SelectListItem>)TempData[MyGuid + "_TList4"];
                List<SelectListItem> mod5 = (List<SelectListItem>)TempData[MyGuid + "_TList5"];
                List<SelectListItem> mod6 = (List<SelectListItem>)TempData[MyGuid + "_TList6"];
                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
                TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2;
                TempData[MyGuid + "_TList3"] = model[0].TList3 = mod3;
                //TempData[MyGuid + "_TList4"] = model[0].TList4 = mod4;
                TempData[MyGuid + "_TList5"] = model[0].TList5 = mod5;
                TempData[MyGuid + "_TList6"] = model[0].TList6 = mod6;
                if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                if (model[0].SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
                if (model[0].SelectedItems3 == null) model[0].SelectedItems3 = new string[] { "" };
                //if (model[0].SelectedItems4 == null) model[0].SelectedItems4 = new string[] { "" };
                if (model[0].SelectedItems5 == null) model[0].SelectedItems5 = new string[] { "" };
                if (model[0].SelectedItems6 == null) model[0].SelectedItems6 = new string[] { "" };
                #endregion
                //if (command == "New")
                //{
                //    if (model[0].Col127 == "N")
                //    {
                //        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for new " + model[0].Col9 + ", please contact your admin', 2);";
                //        return View(model);
                //    }
                //    TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.manuf(userCode, unitid_mst);
                //    TempData[MyGuid + "_TList5"] = model[0].TList5 = mod5 = cmd_Fun.product(userCode, unitid_mst);
                //    TempData[MyGuid + "_TList6"] = model[0].TList6 = mod6 = cmd_Fun.Modeofpayment(userCode, unitid_mst);
                //    model = getnew(model);
                //}
                if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {
                    tm = model.FirstOrDefault();
                    if (model[0].Col127 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for save " + model[0].Col9 + " , please contact your admin', 2);";
                        return View(model);
                    }
                    if (model[0].Col34 == "" || model[0].Col34 == null)
                    {
                        ViewBag.scripCall += "showmsgJS(1,'Please Select Product Name', 2);";
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                        return View(model);
                    }
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        isedit = true;
                        model[0].Col16 = tm.Col16.Trim();
                    }
                    else
                    {
                        mq1 = "";
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10 + " where type='" + model[0].Col12 + "' " + model[0].Col11 + "  ";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        isedit = false;
                        model[0].Col16 = vch_num;
                    }
                    #region dtstr
                    DataTable dtstr = new DataTable();
                    dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                    string currdate = sgen.server_datetime(userCode);
                    DataRow dr = dtstr.NewRow();
                    dr["vch_num"] = model[0].Col16;
                    dr["vch_date"] = currdate;
                    dr["type"] = model[0].Col12;
                    dr["P_ACC_ID"] = model[0].Col18;
                    dr["ACC_ID"] = model[0].Col20;
                    dr["INV_DATE"] = sgen.Make_date_S(model[0].Col25);
                    dr["SOPT_TO"] = model[0].Col21;//Premium
                    dr["SWT_AMT"] = model[0].Col23;//Sum Assured/Insured
                    dr["pur_rmk"] = model[0].Col24;//Remark
                    dr["TRANS_DATE"] = sgen.Make_date_S(model[0].Col22);//Maturity date
                    dr["RDP_FOLIO"] = model[0].SelectedItems1.FirstOrDefault();//pur type
                    dr["RDP_TYPE"] = model[0].SelectedItems2.FirstOrDefault();//Channel
                    //dr["FRM_SCH"] = model[0].SelectedItems3.FirstOrDefault();//Policy Type
                    dr["FRM_SCH_TYPE"] = model[0].SelectedItems3.FirstOrDefault();//freq
                    dr["SWT_FOLIO"] = model[0].Col35;//Product
                    dr["FRM_SCH"] = model[0].Col40;//inside / outside
                    dr["TRANS_TYPE"] = model[0].SelectedItems6.FirstOrDefault();//Pay mode
                    if (model[0].Chk1 == true) { dr["ispur"] = "Y"; } else { dr["ispur"] = "N"; }
                    dr = getsave(currdate, dr, model, isedit);
                    dtstr.Rows.Add(dr);
                    bool Result = sgen.Update_data_fast1(userCode, dtstr, model[0].Col10.Trim(), tm.Col8, isedit);
                    #region attachment
                    DataTable dtfile = cmd_Fun.GetStructure(userCode, "file_tab");
                    string serverpath = Server.MapPath("~/Uploads/" + cg_com_name.Replace(" ", "") + "/");
                    //purchase Upload
                    try
                    {
                        HttpPostedFileBase file1 = upd1;
                        ctype1 = file1.ContentType;
                        fileName1 = file1.FileName;
                        path1 = clientid_mst + unitid_mst + userid_mst + currdate + "_" + fileName1;
                        encpath1 = sgen.Convert_Stringto64(path1).ToString();
                        finalpath1 = serverpath + encpath1;
                        file1.SaveAs(finalpath1);
                        filesave(model, currdate, dtfile, fileName1, encpath1, "PUR", ctype1, model[0].Col32, model[0].Col31, "", "");
                    }
                    catch (Exception ex) { }
                    if (dtfile.Rows.Count > 0)
                    {
                        res = sgen.Update_data_fast1(userCode, dtfile, "file_tab", "", false);
                    }
                    #endregion
                    if (Result == true)
                    {
                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col10 = tm.Col10,
                            Col11 = tm.Col11,
                            Col12 = tm.Col12,
                            Col13 = "Save",
                            Col100 = "Save & New",
                            Col121 = "S",
                            Col122 = "<u>S</u>ave",
                            Col123 = "Save & Ne<u>w</u>",
                            Col14 = tm.Col14,
                            Col15 = tm.Col15,
                            Col9 = tm.Col9,
                            TList1 = mod1,
                            TList2 = mod2,
                            TList3 = mod3,
                            //TList4 = mod4,
                            TList5 = mod5,
                            TList6 = mod6,
                            SelectedItems1 = new string[] { "" },
                            SelectedItems2 = new string[] { "" },
                            SelectedItems3 = new string[] { "" },
                            //SelectedItems4 = new string[] { "" },
                            SelectedItems5 = new string[] { "" },
                            SelectedItems6 = new string[] { "" },
                        });
                        if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                        {
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                        {
                            try
                            {
                                Make_query("fas_ins", "Select Parent Account", "PARENT", "1", "", "");
                                ViewBag.scripCall = "callFoo('Select Parent Account');";
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                            }
                            catch (Exception ex) { }
                        }
                    }
                    #endregion
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region p2p lending
        public ActionResult fas_p2p()
        {
            FillMst();
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            List<SelectListItem> md1 = new List<SelectListItem>();
            TempData[MyGuid + "_TList1"] = model[0].TList1 = md1;
            model[0].SelectedItems1 = new string[] { "" };
            model[0].Col10 = "trans_req";
            model[0].Col9 = "P2P Lending";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "P2P";

            return View(model);
        }
        [HttpPost]
        public ActionResult fas_p2p(List<Tmodelmain> model, string command, string mid, HttpPostedFileBase upd1)
        {
            try
            {
                FillMst(model[0].Col15);
                #region
                var tm = model.FirstOrDefault();
                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
                if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                #endregion
                //if (command == "New")
                //{
                //    if (model[0].Col127 == "N")
                //    {
                //        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for new " + model[0].Col9 + ", please contact your admin', 2);";
                //        return View(model);
                //    }
                //    model = getnew(model);
                //}
                if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {
                    tm = model.FirstOrDefault();
                    if (model[0].Col127 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for save " + model[0].Col9 + " , please contact your admin', 2);";
                        return View(model);
                    }
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        isedit = true;
                        model[0].Col16 = tm.Col16.Trim();
                    }
                    else
                    {
                        mq1 = "";
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10 + " where type='" + model[0].Col12 + "' " + model[0].Col11 + "  ";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        isedit = false;
                        model[0].Col16 = vch_num;
                    }
                    #region dtstr
                    DataTable dtstr = new DataTable();
                    dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                    string currdate = sgen.server_datetime(userCode);
                    DataRow dr = dtstr.NewRow();
                    dr["vch_num"] = model[0].Col16;
                    dr["vch_date"] = currdate;
                    dr["type"] = model[0].Col12;
                    dr["P_ACC_ID"] = model[0].Col18;
                    dr["ACC_ID"] = model[0].Col20;
                    dr["INV_DATE"] = sgen.Make_date_S(model[0].Col25);
                    dr["SWT_AMT"] = model[0].Col23;//inv amount
                    dr["pur_rmk"] = model[0].Col24;//Remark
                    dr["RDP_FOLIO"] = model[0].SelectedItems1.FirstOrDefault();//Broker
                    //dr["RDP_TYPE"] = model[0].SelectedItems2.FirstOrDefault();//Scheme Name
                    dr["S_NAME_PUR"] = model[0].Col33;
                    //dr["FRM_SCH"] = model[0].SelectedItems3.FirstOrDefault();//Investement Horizon
                    dr["S_OPT_PUR"] = model[0].Col34;//Investement Horizon
                    dr = getsave(currdate, dr, model, isedit);
                    dtstr.Rows.Add(dr);
                    bool Result = sgen.Update_data_fast1(userCode, dtstr, model[0].Col10.Trim(), tm.Col8, isedit);
                    #region attachment
                    DataTable dtfile = cmd_Fun.GetStructure(userCode, "file_tab");
                    string serverpath = Server.MapPath("~/Uploads/" + cg_com_name.Replace(" ", "") + "/");
                    //purchase Upload
                    try
                    {
                        HttpPostedFileBase file1 = upd1;
                        ctype1 = file1.ContentType;
                        fileName1 = file1.FileName;
                        path1 = clientid_mst + unitid_mst + userid_mst + currdate + "_" + fileName1;
                        encpath1 = sgen.Convert_Stringto64(path1).ToString();
                        finalpath1 = serverpath + encpath1;
                        file1.SaveAs(finalpath1);
                        filesave(model, currdate, dtfile, fileName1, encpath1, "PUR", ctype1, model[0].Col32, model[0].Col31, "", "");
                    }
                    catch (Exception ex) { }
                    if (dtfile.Rows.Count > 0)
                    {
                        res = sgen.Update_data_fast1(userCode, dtfile, "file_tab", "", false);
                    }
                    #endregion
                    if (Result == true)
                    {
                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col10 = tm.Col10,
                            Col11 = tm.Col11,
                            Col12 = tm.Col12,
                            Col13 = "Save",
                            Col100 = "Save & New",
                            Col121 = "S",
                            Col122 = "<u>S</u>ave",
                            Col123 = "Save & Ne<u>w</u>",
                            Col14 = tm.Col14,
                            Col15 = tm.Col15,
                            Col9 = tm.Col9,
                            TList1 = mod1,
                            SelectedItems1 = new string[] { "" },
                        });
                        if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                        {
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                        {
                            try
                            {
                                Make_query("fas_p2p", "Select Parent Account", "PARENT", "1", "", "");
                                ViewBag.scripCall = "callFoo('Select Parent Account');";
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                            }
                            catch (Exception ex) { }
                        }
                    }
                    #endregion
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region fixed deposit
        public ActionResult fas_fix()
        {
            FillMst();
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            List<SelectListItem> md1 = new List<SelectListItem>();
            TempData[MyGuid + "_TList1"] = model[0].TList1 = md1;
            TempData[MyGuid + "_TList2"] = model[0].TList2 = md1;
            TempData[MyGuid + "_TList3"] = model[0].TList3 = md1;
            TempData[MyGuid + "_TList4"] = model[0].TList4 = md1;
            model[0].SelectedItems1 = new string[] { "" };
            model[0].SelectedItems2 = new string[] { "" };
            model[0].SelectedItems3 = new string[] { "" };
            model[0].SelectedItems4 = new string[] { "" };
            model[0].Col10 = "trans_req";
            model[0].Col9 = "FIXED DEPOSIT";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "FIX";

            return View(model);
        }
        [HttpPost]
        public ActionResult fas_fix(List<Tmodelmain> model, string command, string mid, HttpPostedFileBase upd1)
        {
            try
            {
                FillMst(model[0].Col15);
                #region
                var tm = model.FirstOrDefault();
                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_Tlist1"];
                List<SelectListItem> mod2 = (List<SelectListItem>)TempData[MyGuid + "_Tlist2"];
                List<SelectListItem> mod3 = (List<SelectListItem>)TempData[MyGuid + "_Tlist3"];
                List<SelectListItem> mod4 = (List<SelectListItem>)TempData[MyGuid + "_Tlist4"];
                TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1;
                TempData[MyGuid + "_Tlist2"] = model[0].TList2 = mod2;
                TempData[MyGuid + "_Tlist3"] = model[0].TList3 = mod3;
                TempData[MyGuid + "_Tlist4"] = model[0].TList4 = mod4;
                if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                if (model[0].SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
                if (model[0].SelectedItems3 == null) model[0].SelectedItems3 = new string[] { "" };
                if (model[0].SelectedItems4 == null) model[0].SelectedItems4 = new string[] { "" };
                #endregion
                //if (command == "New")
                //{
                //    if (model[0].Col127 == "N")
                //    {
                //        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for new " + model[0].Col9 + ", please contact your admin', 2);";
                //        return View(model);
                //    }
                //    model = getnew(model);
                //}
                if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {
                    tm = model.FirstOrDefault();
                    if (model[0].Col127 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for save " + model[0].Col9 + " , please contact your admin', 2);";
                        return View(model);
                    }
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        isedit = true;
                        model[0].Col16 = tm.Col16.Trim();
                    }
                    else
                    {
                        mq1 = "";
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10 + " where type='" + model[0].Col12 + "' " + model[0].Col11 + "  ";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        isedit = false;
                        model[0].Col16 = vch_num;
                    }
                    #region dtstr
                    DataTable dtstr = new DataTable();
                    dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                    string currdate = sgen.server_datetime(userCode);
                    DataRow dr = dtstr.NewRow();
                    dr["vch_num"] = model[0].Col16;
                    dr["vch_date"] = currdate;
                    dr["type"] = model[0].Col12;
                    dr["P_ACC_ID"] = model[0].Col18;
                    dr["ACC_ID"] = model[0].Col20;
                    dr["INV_DATE"] = sgen.Make_date_S(model[0].Col25);
                    dr["TRANS_DATE"] = sgen.Make_date_S(model[0].Col22);
                    dr["RDP_DATE"] = sgen.Make_date_S(model[0].Col29);//from date
                    dr["SWT_AMT"] = model[0].Col23;//invenstment amount
                    dr["pur_rmk"] = model[0].Col24;//Remark
                    dr["S_OPT_PUR"] = model[0].Col26;//FDR NO.
                    dr["S_OPT_RDP"] = model[0].SelectedItems3.FirstOrDefault();//Form 15 G/H
                    dr["RDP_FOLIO"] = model[0].Col35;//Manufacturer
                    dr["RDP_TYPE"] = model[0].SelectedItems2.FirstOrDefault();//Purchase Typ
                    dr["SOPT_TO"] = model[0].Col28;//ROI
                    dr["SWT_FOLIO"] = model[0].SelectedItems4.FirstOrDefault();//Option
                    dr = getsave(currdate, dr, model, isedit);
                    dtstr.Rows.Add(dr);
                    bool Result = sgen.Update_data_fast1(userCode, dtstr, model[0].Col10.Trim(), tm.Col8, isedit);
                    #region attachment
                    DataTable dtfile = cmd_Fun.GetStructure(userCode, "file_tab");
                    string serverpath = Server.MapPath("~/Uploads/" + cg_com_name.Replace(" ", "") + "/");
                    //purchase Upload
                    try
                    {
                        HttpPostedFileBase file1 = upd1;
                        ctype1 = file1.ContentType;
                        fileName1 = file1.FileName;
                        path1 = clientid_mst + unitid_mst + userid_mst + currdate + "_" + fileName1;
                        encpath1 = sgen.Convert_Stringto64(path1).ToString();
                        finalpath1 = serverpath + encpath1;
                        file1.SaveAs(finalpath1);
                        filesave(model, currdate, dtfile, fileName1, encpath1, "PUR", ctype1, model[0].Col32, model[0].Col31, "", "");
                    }
                    catch (Exception ex) { }
                    if (dtfile.Rows.Count > 0)
                    {
                        res = sgen.Update_data_fast1(userCode, dtfile, "file_tab", "", false);
                    }
                    #endregion
                    if (Result == true)
                    {
                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col10 = tm.Col10,
                            Col11 = tm.Col11,
                            Col12 = tm.Col12,
                            Col13 = "Save",
                            Col100 = "Save & New",
                            Col121 = "S",
                            Col122 = "<u>S</u>ave",
                            Col123 = "Save & Ne<u>w</u>",
                            Col14 = tm.Col14,
                            Col15 = tm.Col15,
                            Col9 = tm.Col9,
                            TList1 = mod1,
                            TList2 = mod2,
                            TList4 = mod4,
                            SelectedItems1 = new string[] { "" },
                            SelectedItems2 = new string[] { "" },
                            SelectedItems3 = new string[] { "" },
                            SelectedItems4 = new string[] { "" },
                        });
                        if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                        {
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                        {
                            try
                            {
                                Make_query("fas_fix", "Select Parent Account", "PARENT", "1", "", "");
                                ViewBag.scripCall = "callFoo('Select Parent Account');";
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                            }
                            catch (Exception ex) { }
                        }
                    }
                    #endregion
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region product name master
        public ActionResult pn_unit()
        {
            FillMst();
            List<Tmodelmain> model = new List<Tmodelmain>();
            List<SelectListItem> mod1 = new List<SelectListItem>();
            model = getload(model);
            model[0].Col9 = "PRODUCT NAME MASTER";
            model[0].Col10 = "enx_tab2";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "PNM";

            TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1;
            model[0].SelectedItems1 = new string[] { "" };
            model[0].SelectedItems2 = new string[] { "" };
            ModelState.Clear();
            return View(model);
        }
        [HttpPost]
        public ActionResult pn_unit(List<Tmodelmain> model, string command, HttpPostedFileBase upd1)
        {
            try
            {
                FillMst();
                var result = false;
                var tm = model.FirstOrDefault();
                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
                List<SelectListItem> mod2 = (List<SelectListItem>)TempData[MyGuid + "_TList2"];
                TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2;
                if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                if (model[0].SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };

                if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE") || command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                {
                    string currdate = sgen.server_datetime(userCode);
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        isedit = true;
                        model[0].Col16 = tm.Col16.Trim();
                    }
                    else
                    {
                        mq1 = "";
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10 + " where type='" + model[0].Col12 + "' " + model[0].Col11 + "  ";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        isedit = false;
                        model[0].Col16 = vch_num;
                    }
                    DataTable dataTable = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                    DataRow dr = dataTable.NewRow();
                    dr["rec_id"] = "0";
                    dr["vch_num"] = model[0].Col16;
                    dr["vch_date"] = currdate;
                    dr["type"] = model[0].Col12;
                    dr["col5"] = model[0].Col17; // Manufacturer Name
                    dr["col6"] = model[0].Col18; //product name
                    dr["col7"] = model[0].Col21; //ptcode
                    dr["col4"] = model[0].Col19; //remark
                    dr["col9"] = model[0].SelectedItems1.FirstOrDefault();
                    dr["col10"] = model[0].SelectedItems2.FirstOrDefault(); //sub cat
                    dr = getsave(currdate, dr, model);
                    dataTable.Rows.Add(dr);
                    result = sgen.Update_data(userCode, dataTable, model[0].Col10.Trim(), model[0].Col8, isedit);
                    #region attachment
                    DataTable dtfile = cmd_Fun.GetStructure(userCode, "file_tab");
                    string serverpath = Server.MapPath("~/Uploads/" + cg_com_name.Replace(" ", "") + "/");
                    //purchase Upload
                    try
                    {
                        HttpPostedFileBase file1 = upd1;
                        ctype1 = file1.ContentType;
                        fileName1 = file1.FileName;
                        path1 = clientid_mst + unitid_mst + userid_mst + currdate + "_" + fileName1;
                        encpath1 = sgen.Convert_Stringto64(path1).ToString();
                        finalpath1 = serverpath + encpath1;
                        file1.SaveAs(finalpath1);
                        filesave(model, currdate, dtfile, fileName1, encpath1, "PUR", ctype1, model[0].Col31, model[0].Col32, "", "");
                    }
                    catch (Exception ex) { }
                    if (dtfile.Rows.Count > 0)
                    {
                        res = sgen.Update_data_fast1(userCode, dtfile, "file_tab", "", false);
                    }
                    #endregion
                    if (result == true)
                    {
                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col10 = tm.Col10,
                            Col11 = tm.Col11,
                            Col12 = tm.Col12,
                            Col13 = "Save",
                            Col100 = "Save & New",
                            Col121 = "S",
                            Col122 = "<u>S</u>ave",
                            Col123 = "Save & Ne<u>w</u>",
                            Col14 = tm.Col14,
                            Col15 = tm.Col15,
                            Col9 = tm.Col9,
                            TList1 = mod1,
                            TList2 = mod2,
                            SelectedItems1 = new string[] { "" },
                            SelectedItems2 = new string[] { "" },
                        });
                        if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                        {
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                        {
                            Make_query("n_finreq", "Select Manufacturer", "MANUF", "1", "", "");
                            ViewBag.scripCall = "callFoo('Select Manufacturer');";
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                        }
                    }
                    else { ViewBag.scripCall = "showmsgJS(1, 'Something Went Wrong, Data Not Saved', 0);"; }
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region product assign to client
        public ActionResult p_a_client()
        {
            FillMst();
            List<Tmodelmain> model = new List<Tmodelmain>();
            List<SelectListItem> mod1 = new List<SelectListItem>();
            model = getload(model);
            model[0].Col9 = "PRODUCT ASSIGN TO CLIENT";
            model[0].Col10 = "enx_tab2";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "PAC";
            #region ddl
            model[0].TList1 = model[0].TList2 = mod1;

            TempData[MyGuid + "_TList1"] = TempData[MyGuid + "_TList2"] = mod1;
            model[0].SelectedItems1 = new string[] { "" };

            model[0].SelectedItems2 = new string[] { "" };
            #endregion
            ModelState.Clear();
            return View(model);
        }
        [HttpPost]
        public ActionResult p_a_client(List<Tmodelmain> model, string command, HttpPostedFileBase upd1)
        {
            try
            {
                FillMst();
                var result = false;
                #region ddl
                var tm = model.FirstOrDefault();
                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;

                if (tm.SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                List<SelectListItem> mod2 = new List<SelectListItem>();
                model[0].TList2 = (List<SelectListItem>)TempData[MyGuid + "_TList2"];
                TempData[MyGuid + "_TList2"] = model[0].TList2;
                if (tm.SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
                #endregion
                if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE") || command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                {
                    string currdate = sgen.server_datetime(userCode);
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        isedit = true;
                        model[0].Col16 = tm.Col16.Trim();
                    }
                    else
                    {
                        mq1 = "";
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10 + " where type='" + model[0].Col12 + "' " + model[0].Col11 + "  ";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        isedit = false;
                        model[0].Col16 = vch_num;
                    }
                    DataTable dataTable = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                    DataRow dr = dataTable.NewRow();
                    dr["rec_id"] = "0";
                    dr["vch_num"] = model[0].Col16;
                    dr["vch_date"] = currdate;
                    dr["type"] = model[0].Col12;
                    dr["col5"] = model[0].Col17; // client Name
                    dr["col10"] = model[0].Col19; //product name
                    dr["col7"] = model[0].Col18; //ptcode
                    dr["col4"] = model[0].Col22; //remark
                    dr["col6"] = model[0].Col20; //amount
                    dr["date1"] = sgen.Make_date_S(model[0].Col21); //purdate
                    dr["R_NO"] = model[0].Col23; //prdcode
                    dr["col9"] = model[0].SelectedItems1.FirstOrDefault();
                    dr["col18"] = model[0].SelectedItems2.FirstOrDefault();
                    dr["date2"] = sgen.Make_date_S(model[0].Col24); //nxtdate
                    dr["date3"] = sgen.Make_date_S(model[0].Col25); //PAYdate
                    dr["date4"] = sgen.Make_date_S(model[0].Col28); //end date
                    dr["col12"] = model[0].Col29; //status
                    dr = getsave(currdate, dr, model);
                    dataTable.Rows.Add(dr);
                    result = sgen.Update_data(userCode, dataTable, model[0].Col10.Trim(), model[0].Col8, isedit);
                    #region attachment
                    DataTable dtfile = cmd_Fun.GetStructure(userCode, "file_tab");
                    string serverpath = Server.MapPath("~/Uploads/" + cg_com_name.Replace(" ", "") + "/");
                    //purchase Upload
                    try
                    {
                        HttpPostedFileBase file1 = upd1;
                        ctype1 = file1.ContentType;
                        fileName1 = file1.FileName;
                        path1 = clientid_mst + unitid_mst + userid_mst + currdate + "_" + fileName1;
                        encpath1 = sgen.Convert_Stringto64(path1).ToString();
                        finalpath1 = serverpath + encpath1;
                        file1.SaveAs(finalpath1);
                        filesave(model, currdate, dtfile, fileName1, encpath1, "PUR", ctype1, model[0].Col31, model[0].Col32, "", "");
                    }
                    catch (Exception ex) { }
                    if (dtfile.Rows.Count > 0)
                    {
                        res = sgen.Update_data_fast1(userCode, dtfile, "file_tab", "", false);
                    }
                    #endregion
                    if (result == true)
                    {
                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col10 = tm.Col10,
                            Col11 = tm.Col11,
                            Col12 = tm.Col12,
                            Col13 = "Save",
                            Col100 = "Save & New",
                            Col121 = "S",
                            Col122 = "<u>S</u>ave",
                            Col123 = "Save & Ne<u>w</u>",
                            Col14 = tm.Col14,
                            Col15 = tm.Col15,
                            Col9 = tm.Col9,
                            TList1 = mod1,
                            SelectedItems1 = new string[] { "" },
                            TList2 = mod2,
                            SelectedItems2 = new string[] { "" },
                        });
                        if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                        {
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                        {
                            Make_query("p_a_client", "Select Client Name", "CLIENT", "1", "", "");
                            ViewBag.scripCall = "callFoo('Select Client Name');";
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                        }
                    }
                    else { ViewBag.scripCall = "showmsgJS(1, 'Something Went Wrong, Data Not Saved', 0);"; }
                }
            }
            catch (Exception err)
            {
                var LineNumber = sgen.GetError(err);
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region fd redumtion
        public ActionResult fas_fd()
        {
            FillMst();
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            List<SelectListItem> md1 = new List<SelectListItem>();
            TempData[MyGuid + "_TList1"] = model[0].TList1 = md1;
            TempData[MyGuid + "_TList2"] = model[0].TList2 = md1;
            TempData[MyGuid + "_TList3"] = model[0].TList3 = md1;
            TempData[MyGuid + "_TList4"] = model[0].TList4 = md1;
            model[0].SelectedItems1 = new string[] { "" };
            model[0].SelectedItems2 = new string[] { "" };
            model[0].SelectedItems3 = new string[] { "" };
            model[0].SelectedItems4 = new string[] { "" };
            model[0].Col10 = "enx_tab2";
            model[0].Col9 = "FD REDEMPTION";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "BFD";

            return View(model);
        }
        [HttpPost]
        public ActionResult fas_fd(List<Tmodelmain> model, string command, string mid, HttpPostedFileBase upd1)
        {
            try
            {
                FillMst(model[0].Col15);
                #region
                var tm = model.FirstOrDefault();
                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_Tlist1"];
                List<SelectListItem> mod2 = (List<SelectListItem>)TempData[MyGuid + "_Tlist2"];
                List<SelectListItem> mod3 = (List<SelectListItem>)TempData[MyGuid + "_Tlist3"];
                List<SelectListItem> mod4 = (List<SelectListItem>)TempData[MyGuid + "_Tlist4"];
                TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1;
                TempData[MyGuid + "_Tlist2"] = model[0].TList2 = mod2;
                TempData[MyGuid + "_Tlist3"] = model[0].TList3 = mod3;
                TempData[MyGuid + "_Tlist4"] = model[0].TList4 = mod4;
                if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                if (model[0].SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
                if (model[0].SelectedItems3 == null) model[0].SelectedItems3 = new string[] { "" };
                if (model[0].SelectedItems4 == null) model[0].SelectedItems4 = new string[] { "" };
                #endregion
                if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {
                    tm = model.FirstOrDefault();
                    if (model[0].Col127 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for save " + model[0].Col9 + " , please contact your admin', 2);";
                        return View(model);
                    }
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        isedit = true;
                        model[0].Col16 = tm.Col16.Trim();
                    }
                    else
                    {
                        mq1 = "";
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10 + " where type='" + model[0].Col12 + "' " + model[0].Col11 + "  ";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        isedit = false;
                        model[0].Col16 = vch_num;
                    }
                    #region dtstr
                    DataTable dtstr = new DataTable();
                    dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                    string currdate = sgen.server_datetime(userCode);
                    DataRow dr = dtstr.NewRow();
                    dr["vch_num"] = model[0].Col16;
                    dr["vch_date"] = sgen.Make_date_S(model[0].Col24);
                    dr["type"] = model[0].Col12;
                    dr["COL5"] = model[0].Col18;
                    dr["COL6"] = model[0].Col20;
                    dr["COL7"] = model[0].Col35;
                    dr["COL9"] = model[0].SelectedItems1.FirstOrDefault(); //option
                    dr["col10"] = model[0].SelectedItems2.FirstOrDefault();//maturity type
                    dr["COL11"] = model[0].Col23; //mat amount
                    dr["col12"] = (model[0].Chk1 == true) ? "Y" : "N"; //fd date

                    dr = getsave(currdate, dr, model, isedit);
                    dtstr.Rows.Add(dr);
                    bool Result = sgen.Update_data_fast1(userCode, dtstr, model[0].Col10.Trim(), tm.Col8, isedit);
                    #region attachment
                    DataTable dtfile = cmd_Fun.GetStructure(userCode, "file_tab");
                    string serverpath = Server.MapPath("~/Uploads/" + cg_com_name.Replace(" ", "") + "/");
                    //purchase Upload
                    try
                    {
                        HttpPostedFileBase file1 = upd1;
                        ctype1 = file1.ContentType;
                        fileName1 = file1.FileName;
                        path1 = clientid_mst + unitid_mst + userid_mst + currdate + "_" + fileName1;
                        encpath1 = sgen.Convert_Stringto64(path1).ToString();
                        finalpath1 = serverpath + encpath1;
                        file1.SaveAs(finalpath1);
                        filesave(model, currdate, dtfile, fileName1, encpath1, "PUR", ctype1, model[0].Col32, model[0].Col31, "", "");
                    }
                    catch (Exception ex) { }
                    if (dtfile.Rows.Count > 0)
                    {
                        res = sgen.Update_data_fast1(userCode, dtfile, "file_tab", "", false);
                    }
                    #endregion
                    if (Result == true)
                    {
                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col10 = tm.Col10,
                            Col11 = tm.Col11,
                            Col12 = tm.Col12,
                            Col13 = "Save",
                            Col100 = "Save & New",
                            Col121 = "S",
                            Col122 = "<u>S</u>ave",
                            Col123 = "Save & Ne<u>w</u>",
                            Col14 = tm.Col14,
                            Col15 = tm.Col15,
                            Col9 = tm.Col9,
                            TList1 = mod1,
                            TList2 = mod2,
                            TList4 = mod4,
                            SelectedItems1 = new string[] { "" },
                            SelectedItems2 = new string[] { "" },
                            SelectedItems3 = new string[] { "" },
                            SelectedItems4 = new string[] { "" },
                        });
                        if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                        {
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                        {
                            try
                            {
                                Make_query("fas_fd", "Select Parent Account", "PARENT", "1", "", "");
                                ViewBag.scripCall = "callFoo('Select Parent Account');";
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                            }
                            catch (Exception ex) { }
                        }
                    }
                    #endregion
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region sms_mail_tmp
        public ActionResult automail_tmp()
        {
            FillMst();
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            model[0].Col9 = "SMS & EMAIL TEMPLATE";
            model[0].Col10 = "enx_tab";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "AMT";
            return View(model);
        }
        [HttpPost]
        public ActionResult automail_tmp(List<Tmodelmain> model, string command, HttpPostedFileBase upd1)
        {
            try
            {
                string fdt = "", tdt = "";
                FillMst();
                var tm = model.FirstOrDefault();
                if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command.Trim() == "Save" || command.Trim() == "Update")
                {
                    try
                    {
                        var tmodel = model.FirstOrDefault();
                        string currdate = sgen.server_datetime(userCode);
                        DataTable dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                        if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                        {
                            isedit = true;
                            vch_num = model[0].Col16;
                        }
                        else
                        {
                            isedit = false;
                            mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                            vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                            model[0].Col16 = vch_num;
                        }
                        DataRow dr = dtstr.NewRow();
                        dr["type"] = model[0].Col12;
                        dr["vch_num"] = vch_num.Trim();
                        dr["vch_date"] = sgen.Savedate(currdate, false);
                        dr["col1"] = model[0].Col20;  // body text
                        dr["col3"] = model[0].Col19;      // singnature
                        dr["ref_code"] = model[0].Col25;      // message
                        dr["col8"] = model[0].Col17;      // email heading
                        dr["col7"] = model[0].Col18;      // language
                        dr["col2"] = model[0].Col21;      //  set for
                        dr["col13"] = model[0].Col22;      // set for id
                        dr["col5"] = model[0].Col23;      // emial
                        dr["col6"] = model[0].Col24;      // mobiles
                        dr["col9"] = model[0].Chk1 == true ? "Y" : "N"; //send Mail
                        dr["col10"] = model[0].Chk2 == true ? "Y" : "N"; //send Phone (SMS)
                        dr = getsave(currdate, dr, model);
                        dtstr.Rows.Add(dr);
                        bool Result = sgen.Update_data_fast1(userCode, dtstr, model[0].Col10.Trim(), tmodel.Col8, isedit);
                        if (Result == true)
                        {
                            #region attachment
                            DataTable dtfile = new DataTable();
                            dtfile = cmd_Fun.GetStructure(userCode, "file_tab");
                            string serverpath = Server.MapPath("~/Uploads/" + cg_com_name.Replace(" ", "") + "/");
                            try
                            {
                                HttpPostedFileBase file1 = upd1;
                                ctype1 = file1.ContentType;
                                fileName1 = file1.FileName;
                                path1 = clientid_mst + unitid_mst + userid_mst + currdate + "_" + fileName1.Split('.')[0];
                                encpath1 = sgen.Convert_Stringto64(path1).ToString();
                                finalpath1 = serverpath + encpath1 + "." + fileName1.Split('.')[1];
                                file1.SaveAs(finalpath1);
                                filesave2(model, currdate, dtfile, fileName1, encpath1 + "." + fileName1.Split('.')[1], "Mail_temp", ctype1);
                                bool res = sgen.Update_data_fast1(userCode, dtfile, "file_tab", "", false);
                            }
                            catch (Exception ex) { }
                            #endregion

                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.scripCall = "mytoast('success', 'toast-top-right', 'Data Updated Successfully');disableForm();";
                            model = new List<Tmodelmain>();
                            model.Add(new Tmodelmain
                            {
                                Col10 = tm.Col10,
                                Col11 = tm.Col11,
                                Col12 = tm.Col12,
                                Col13 = "Save",
                                Col121 = "S",
                                Col122 = "<u>S</u>ave",
                                Col14 = tm.Col14,
                                Col15 = tm.Col15,
                                Col9 = tm.Col9,
                            });
                        }
                        else
                        {
                            ViewBag.scripCall = "showmsgJS(1, 'Record Not Saved', 2);";
                        }
                    }
                    catch (Exception ex) { sgen.showmsg(1, ex.Message.ToString(), 0); }
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region India Mart
        public ActionResult i_mart()
        {
            FillMst();
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            ViewBag.scripCall = "enableForm();";
            List<SelectListItem> mod1 = new List<SelectListItem>();
            List<SelectListItem> mod2 = new List<SelectListItem>();
            TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
            TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2;
            model[0].SelectedItems1 = new string[] { "" };
            model[0].SelectedItems2 = new string[] { "" };

            model[0].Col10 = "KC_TAB";
            model[0].Col9 = "LEAD INTEGRATION";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "IMT";

            #region  assigned to
            mod1 = cmd_Fun.username_mod(userCode, m_module3);
            TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
            model[0].SelectedItems1 = new string[] { "" };

            #endregion

            #region  Lead Get From
            //mod2.Add(new SelectListItem { Text = "India Mart", Value = "001" });
            //mod2.Add(new SelectListItem { Text = "Just Dial", Value = "002" });
            //mod2.Add(new SelectListItem { Text = "99 Acres", Value = "003" });
            //mod2.Add(new SelectListItem { Text = "Magic Brick", Value = "004" });
            //mod2.Add(new SelectListItem { Text = "Tawk To", Value = "005" });
            DataTable dt = sgen.getdata(userCode, "select master_id,master_name  from master_setting where type='TAL' and client_unit_id='" + unitid_mst + "' and section_strength='Y'");
            if (dt.Rows.Count > 0)
            {
                TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2 = sgen.dt_to_selectlist(dt);
            }
            model[0].SelectedItems2 = new string[] { "" };

            #endregion

            return View(model);
        }
        [HttpPost]
        public ActionResult i_mart(List<Tmodelmain> model, string command, string mid)
        {
            try
            {
                FillMst(model[0].Col15);
                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                List<SelectListItem> mod2 = (List<SelectListItem>)TempData[MyGuid + "_TList2"];
                TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1;
                TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2;
                if (model[0].SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
                foreach (var mod in model)
                {
                    mod.TList1 = mod1;

                    if (mod.SelectedItems1 == null) mod.SelectedItems1 = new string[] { "" };

                }
                string dt_ft = "YYYY-MM-dd HH24:MI:SS";
                #region
                var tm = model.FirstOrDefault();

                #endregion
                if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }

                else if (command == "Get Data")
                {
                    DataTable dtt = sgen.getdata(userCode, "select master_id, master_name,classid  mobileno,GROUP_REFRENCE_NUMBER reg_mail,sectionid password," +
                        "subjectid port_no ,client_name port_email ,group_id from_email from master_setting where type='TAL' and client_unit_id='" + unitid_mst + "'");
                    string from_dt = "";
                    string To_dt = "";
                    from_dt = sgen.SaveDate_dt(model[0].Col17.Trim(), true).ToString("dd-MMM-yyyy", CultureInfo.InvariantCulture);
                    To_dt = sgen.SaveDate_dt(model[0].Col18.Trim(), true).ToString("dd-MMM-yyyy", CultureInfo.InvariantCulture);
                    DataTable dtstr = new DataTable();
                    DataTable dt_lead = new DataTable();
                    DataTable dtkctab = new DataTable();
                    DataTable dta = new DataTable();
                    string api_name = "", ph = "", reg_mail = "", password = "", port_no = "", port_email = "", from_email = "";

                    if (model[0].SelectedItems2.FirstOrDefault() == "002")
                    {
                        if (dtt.Rows.Count > 0)
                        {
                            dta = sgen.seekval_dt(dtt, "master_id='002'");
                            if (dta.Rows.Count > 0)
                            {
                                api_name = dta.Rows[0]["master_name"].ToString();
                                ph = dta.Rows[0]["mobileno"].ToString();
                            }
                        }
                        model[0].Col12 = "IMT";
                        ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;
                        //string json = (new WebClient()).DownloadString("https://mapi.indiamart.com/wservce/enquiry/listing/GLUSR_MOBILE/8860009141/GLUSR_MOBILE_KEY/MTU4MzQ4MTAzNi43MDA5IzIyNjAxNDg4/Start_Time/01-MAR-2020/End_Time/6-MAR-2020/");
                        string json = (new WebClient()).DownloadString("https://mapi.indiamart.com/wservce/enquiry/listing/GLUSR_MOBILE/" + dta.Rows[0]["mobileno"].ToString().Trim() + "/GLUSR_MOBILE_KEY/" + dta.Rows[0]["port_email"].ToString().Trim() + "/Start_Time/" + from_dt + "/End_Time/" + To_dt + "/");

                        var data = JsonConvert.DeserializeObject<DataTable>(json);
                        dt_lead = (DataTable)data;



                        dtkctab = sgen.getdata(userCode, "select max(col1) as q_id,col43 as qtype from kc_tab where type='" + model[0].Col12 + "' and client_unit_id='" + unitid_mst + "' group by col43");
                        if (dt_lead.Rows.Count > 0)
                        {
                            string curr_date = sgen.server_datetime(userCode);

                            Satransaction sat1 = new Satransaction(userCode, MyGuid);
                            dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());

                            #region dtstr module
                            for (int i = 0; i < dt_lead.Rows.Count; i++)
                            {
                                string q_id = "0";
                                if (dtkctab.Rows.Count > 0)
                                {
                                    // q_id = sgen.seekval_dt(dtkctab, "q_id>='" + dt_lead.Rows[i]["QUERY_ID"].ToString() + "' and qtype='" + dt_lead.Rows[i]["QTYPE"].ToString() + "'", "q_id");
                                    q_id = sgen.seekval_dt(dtkctab, "qtype='" + dt_lead.Rows[i]["QTYPE"].ToString() + "'", "q_id");

                                }
                                string l_vch_num = "";
                                if (Convert.ToDecimal(dt_lead.Rows[i]["QUERY_ID"].ToString()) > Convert.ToDecimal(q_id))
                                {
                                    mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " where type='" + model[0].Col12.Trim() + "' and client_unit_id='" + unitid_mst + "'";
                                    vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                                    vch_num = (sgen.Make_decimal(vch_num) + sgen.Make_decimal(i)).ToString();
                                    vch_num = sgen.padlc(sgen.Make_int(vch_num), 6, "0");

                                    string state_id = sgen.getstring(userCode, "select  state_gst_code from country_state  where alpha_2='" + dt_lead.Rows[i]["COUNTRY_ISO"].ToString() + "' and state_name='" + dt_lead.Rows[i]["ENQ_STATE"].ToString() + "' and city_name='" + dt_lead.Rows[i]["ENQ_CITY"].ToString() + "'");
                                    string city_id = sgen.getstring(userCode, "select  rec_id from country_state  where alpha_2='" + dt_lead.Rows[i]["COUNTRY_ISO"].ToString() + "' and state_name='" + dt_lead.Rows[i]["ENQ_STATE"].ToString() + "' and city_name='" + dt_lead.Rows[i]["ENQ_CITY"].ToString() + "'");

                                    DataRow dr = dtstr.NewRow();
                                    dr["vch_num"] = vch_num.Trim();
                                    dr["vch_date"] = curr_date;
                                    dr["type"] = model[0].Col12.Trim();
                                    dr["COL1"] = dt_lead.Rows[i]["QUERY_ID"].ToString();//QUERY_ID
                                    dr["COL2"] = dt_lead.Rows[i]["SENDER_GLUSR_USR_ID"].ToString();//SENDER_GLUSR_USR_ID
                                    dr["COL3"] = dt_lead.Rows[i]["MOB"].ToString();//MOB
                                    dr["COL4"] = dt_lead.Rows[i]["SENDERNAME"].ToString();//contact person
                                    dr["COL5"] = dt_lead.Rows[i]["ENQ_CALL_DURATION"].ToString();//ENQ_CALL_DURATION
                                    dr["COL6"] = dt_lead.Rows[i]["ENQ_RECEIVER_MOB"].ToString();//ENQ_RECEIVER_MOB
                                    dr["COL7"] = city_id;//CITY
                                    dr["COL8"] = state_id;//ENQ_STATE

                                    dr["COL10"] = dt_lead.Rows[i]["COUNTRY_ISO"].ToString();//COUNTRY
                                    dr["COL11"] = dt_lead.Rows[i]["LOG_TIME"].ToString();//QUERY_MODID
                                    dr["COL12"] = dt_lead.Rows[i]["QUERY_MODREFID"].ToString();//QUERY_MODREFID
                                    dr["COL13"] = dt_lead.Rows[i]["ORG_SENDER_GLUSR_ID"].ToString();//ORG_SENDER_GLUSR_ID
                                    dr["COL14"] = dt_lead.Rows[i]["MOBILE_ALT"].ToString();//alt mob
                                    dr["COL15"] = dt_lead.Rows[i]["PHONE"].ToString();//alt mob
                                    dr["COL16"] = dt_lead.Rows[i]["PHONE_ALT"].ToString();//other mobile
                                    dr["COL17"] = dt_lead.Rows[i]["IM_MEMBER_SINCE"].ToString();//IM_MEMBER_SINCE
                                    dr["COL18"] = dt_lead.Rows[i]["TOTAL_COUNT"].ToString();//TOTAL_COUNT
                                    dr["COL21"] = dt_lead.Rows[i]["SENDEREMAIL"].ToString();//contact email
                                    dr["COL22"] = dt_lead.Rows[i]["EMAIL_ALT"].ToString();//OTHER EMAIL
                                    dr["COL23"] = dt_lead.Rows[i]["DATE_RE"].ToString();//DATE_RE
                                    dr["COL24"] = dt_lead.Rows[i]["DATE_R"].ToString();//DATE_R
                                    dr["COL25"] = dt_lead.Rows[i]["DATE_TIME_RE"].ToString();//DATE_TIME_RE
                                    dr["COL27"] = dt_lead.Rows[i]["QUERY_MODID"].ToString();//QUERY_MODID   
                                    dr["COL31"] = dt_lead.Rows[i]["SUBJECT"].ToString();//SUBJECT
                                    dr["COL32"] = dt_lead.Rows[i]["COUNTRY_FLAG"].ToString();//COUNTRY_FLAG
                                    dr["COL33"] = dt_lead.Rows[i]["PRODUCT_NAME"].ToString();
                                    dr["COL34"] = dt_lead.Rows[i]["ENQ_CITY"].ToString();
                                    dr["COL35"] = dt_lead.Rows[i]["GLUSR_USR_COMPANYNAME"].ToString();//GLUSR_USR_COMPANYNAME
                                    dr["COL40"] = dt_lead.Rows[i]["ENQ_STATE"].ToString();
                                    dr["COL41"] = dt_lead.Rows[i]["ENQ_MESSAGE"].ToString();//REMARK
                                    dr["COL42"] = dt_lead.Rows[i]["RN"].ToString();//RN
                                    dr["COL43"] = dt_lead.Rows[i]["QTYPE"].ToString();//QTYPE                                   
                                    dr["COL45"] = dt_lead.Rows[i]["READ_STATUS"].ToString();//READ_STATUS                                                           
                                    dr["COL47"] = dt_lead.Rows[i]["DIR_QUERY_MODREF_TYPE"].ToString();//DIR_QUERY_MODREF_TYPE
                                    dr["COL69"] = dt_lead.Rows[i]["ENQ_ADDRESS"].ToString();//CP ADD                            


                                    string pr_id = sgen.getstring(userCode, "SELECT master_id FROM master_setting where type = 'PNM' and find_in_set(client_unit_id,'" + unitid_mst + "')=1 and master_name='" + dt_lead.Rows[i]["PRODUCT_NAME"].ToString() + "'");

                                    if ((pr_id == "") || (pr_id == "0") || (pr_id == null))
                                    {



                                        string master_id = sgen.genNo(userCode, "select max(to_number (nvl(master_id,'0'))) as max from master_setting where client_unit_id='" + unitid_mst + "' and  type='PNM' ", 3, "max");
                                        sgen.execute_cmd(userCode, "Insert into master_setting  (INACTIVE_DATE,STATUS,MALERATIO,FEMALERATIO,SECTIONTYPE,CLIENT_GSTIN,GROUP_ID,GROUP_REFRENCE_NUMBER,CONT_PERSON_EMAIL,CONT_PERSON_ALTNUMBER,CONT_PERSON_NUMBER,CONT_PERSON_NAME,UNIT_NAME,GROUP_NAME,CLIENT_NAME,TEACHER_CATEGORY,OPTIONAL_SUBJECT,SUBJECT_STRENGTH,SECTION_STRENGTH,SECTIONID,CLASSID,ISREGFEESBEFOREADM,ISALPHABETIC_WISE,ISADMISSION_WISE,ISSECTIONBASED,ISCLASSBASED,ISSCHOOLBASED,master_status ,ISROLLNOCHANGE,ISRECEIPTNOCHANGE,ISROLLNOREGWISE,ISREGNOCHANGE,vch_num,vch_date,type,Master_type,master_id, Master_Name, master_entby ,master_entdate,client_id,client_unit_id , master_editby ,master_editdate,CREATED_DATE)" +
                                                                   " select to_date('" + curr_date + "','" + dt_ft + "'), '0','0', '0','0','0', '0', '0', '0','0', '0','0','0', '0', '0', '0', '0', '0','0','0', '0', '0', '0','0', '0', '0','0', '0','0','0','0', '0', '0',to_date('" + curr_date + "','" + dt_ft + "'), 'PNM','0','" + master_id + "','" + dt_lead.Rows[i]["PRODUCT_NAME"].ToString() + "','" + userid_mst + "',to_date('" + curr_date + "','" + dt_ft + "') ,'" + clientid_mst + "','" + unitid_mst + "','-' ,to_date('" + curr_date + "','" + dt_ft + "') ,to_date('" + curr_date + "','" + dt_ft + "') from dual" +
                                                                   " where Not EXISTS(select Master_name from master_setting where Master_name='" + dt_lead.Rows[i]["PRODUCT_NAME"].ToString() + "' and  client_unit_id='" + unitid_mst + "' and   type='PNM' ) ");

                                        dr["COL9"] = master_id;
                                    }
                                    else
                                    {
                                        dr["COL9"] = pr_id;
                                    }


                                    dr["rec_id"] = "0";
                                    dr["ent_by"] = userid_mst;
                                    dr["ent_date"] = curr_date;
                                    dr["client_id"] = clientid_mst;
                                    dr["client_unit_id"] = unitid_mst;
                                    dr["edit_by"] = userid_mst;
                                    dr["edit_date"] = curr_date;
                                    dtstr.Rows.Add(dr);
                                }
                            }
                            // res = sgen.Update_data_fast1(userCode, dtstr, model[0].Col10, "", false);
                            res = sgen.Update_data_uncommit2(userCode, dtstr, model[0].Col10, "", false, sat1);
                            if (res == true)
                            {
                                sat1.Commit();
                                dt_lead = new DataTable();
                                //if (dtstr.Rows.Count > 0)
                                //{
                                //    dt_lead = dtstr.Copy();
                                //}


                                //DataTable dt_kctab = sgen.getdata(userCode, "select  a.vch_num,a.vch_date,a.type,a.COL1,a.COL2,a.COL3, a.COL4,a.COL5,a.COL6," +
                                //   "a.COL7,a.COL8,a.COL10,a.col11,a.col12,a.col13,a.COL14,a.COL15,a.COL16,a.col17,a.col18,a.COL21,a.COL22,a.col23," +
                                //   "a.col24,a.COL25,a.col27,a.col31,a.col32,a.col33,a.col34,a.col35,a.col40,a.COL41,a.col42,a.col43,a.col45,a.col47,a.COL69," +
                                //   "a.COL9,a.rec_id,a.ent_by,a.ent_date,a.client_id,a.client_unit_id,a.edit_by,a.edit_date" +                                     
                                //      " from " + model[0].Col10.Trim() + " a   where a.type='" + model[0].Col12.Trim() + "' and" +
                                //      " a.client_unit_id='" + unitid_mst + "' and a.vch_num<'" + dtstr.Rows[0]["vch_num"] + "'" +
                                //      " and (a.col1||a.col43) not in (select distinct (ploc||cp_ref_type) from lead_master " +
                                //      "where type='LED' and client_unit_id='" + unitid_mst + "')  ");

                                //if (dt_kctab.Rows.Count > 0)
                                //{
                                //    if (dtstr.Rows.Count > 0)
                                //    {
                                //        dt_lead.Merge(dt_kctab);
                                //        dt_lead.AcceptChanges();
                                //    }
                                //    else { dt_lead = dt_kctab.Copy(); }
                                //}
                                //if (dt_lead.Rows.Count > 0)
                                //{
                                //    ViewBag.vsave = "";
                                //    model = new List<Tmodelmain>();
                                //    for (int i = 0; i < dt_lead.Rows.Count; i++)
                                //    {
                                //        Tmodelmain tmm = new Tmodelmain();
                                //        tmm.Col9 = tm.Col9;
                                //        tmm.Col10 = tm.Col10;
                                //        tmm.Col11 = tm.Col11;
                                //        tmm.Col12 = tm.Col12;
                                //        tmm.Col14 = tm.Col14;
                                //        tmm.Col15 = tm.Col15;
                                //        tmm.Col17 = tm.Col17;
                                //        tmm.Col18 = tm.Col18;



                                //        tmm.Col19 = dt_lead.Rows[i]["COL4"].ToString();// SENDERNAME
                                //        tmm.Col20 = dt_lead.Rows[i]["COL21"].ToString();// SENDEREMAIL
                                //        tmm.Col22 = dt_lead.Rows[i]["COL25"].ToString();// DATE_TIME_RE
                                //        tmm.Col23 = dt_lead.Rows[i]["COL3"].ToString();// MOB
                                //                                                       //tmm.Col27 = dt_lead.Rows[i]["COL41"].ToString();// Remark
                                //        tmm.Col27 = sgen.ExtractHtmlInnerText(dt_lead.Rows[i]["COL41"].ToString().Replace("\r\n", " %0a ")); ;// Remark
                                //        tmm.Col28 = dt_lead.Rows[i]["COL69"].ToString();// CP ADD 
                                //        tmm.Col29 = dt_lead.Rows[i]["COL7"].ToString();// CITY
                                //        tmm.Col30 = dt_lead.Rows[i]["COL8"].ToString();// STATE
                                //        tmm.Col31 = dt_lead.Rows[i]["COL10"].ToString();// Country
                                //        tmm.Col32 = dt_lead.Rows[i]["COL33"].ToString();// Product
                                //        tmm.Col21 = dt_lead.Rows[i]["COL22"].ToString();// Other Email
                                //        tmm.Col24 = dt_lead.Rows[i]["COL14"].ToString();// alt mob
                                //        tmm.Col25 = dt_lead.Rows[i]["COL15"].ToString();// phone
                                //        tmm.Col26 = dt_lead.Rows[i]["COL16"].ToString();// Other mob
                                //        tmm.Col33 = dt_lead.Rows[i]["COL1"].ToString();// query id
                                //        tmm.Col34 = dt_lead.Rows[i]["COL43"].ToString();// query type
                                //        tmm.Col35 = dt_lead.Rows[i]["COL40"].ToString();// state_name
                                //        tmm.Col36 = dt_lead.Rows[i]["COL34"].ToString();// city_name
                                //        tmm.Col37 = dt_lead.Rows[i]["COL9"].ToString();// pr_id
                                //        tmm.SelectedItems1 = new string[] { "" };
                                //        model.Add(tmm);
                                //    }
                                //}
                            }
                            #endregion
                        }
                    }

                    //else if ((model[0].SelectedItems2.FirstOrDefault() == "002") || (model[0].SelectedItems2.FirstOrDefault() == "003") || (model[0].SelectedItems2.FirstOrDefault() == "004"))
                    else
                    {
                        sgenFun sgen = new sgenFun(MyGuid);



                        string rec_id = "000001";//Get the numeric value from inside the objects array, don't forget to cast
                                                 //StringBuilder sb = new StringBuilder();//Declare a new string builder to store the result.
                                                 // string user = "gsthelp001@gmail.com", pass = "srsoffice1";
                        string user = "", pass = "";
                        if (model[0].SelectedItems2.FirstOrDefault() == "003")
                        {
                            if (dtt.Rows.Count > 0)
                            {
                                dta = sgen.seekval_dt(dtt, "master_id='003'");
                                if (dta.Rows.Count > 0)
                                {
                                    user = dta.Rows[0]["reg_mail"].ToString();
                                    pass = dta.Rows[0]["password"].ToString();
                                    port_no = dta.Rows[0]["port_no"].ToString();
                                    port_email = dta.Rows[0]["port_email"].ToString();
                                    from_email = dta.Rows[0]["from_email"].ToString();
                                }
                            }
                        }

                        else if (model[0].SelectedItems2.FirstOrDefault() == "004")
                        {
                            if (dtt.Rows.Count > 0)
                            {
                                dta = sgen.seekval_dt(dtt, "master_id='004'");
                                if (dta.Rows.Count > 0)
                                {
                                    user = dta.Rows[0]["reg_mail"].ToString();
                                    pass = dta.Rows[0]["password"].ToString();
                                    port_no = dta.Rows[0]["port_no"].ToString();
                                    port_email = dta.Rows[0]["port_email"].ToString();
                                    from_email = dta.Rows[0]["from_email"].ToString();
                                }
                            }
                        }

                        else if (model[0].SelectedItems2.FirstOrDefault() == "005")
                        {
                            if (dtt.Rows.Count > 0)
                            {
                                dta = sgen.seekval_dt(dtt, "master_id='005'");
                                if (dta.Rows.Count > 0)
                                {
                                    //user = "gsthelp001@gmail.com";
                                    //pass = "srsoffice1";
                                    //port_no = "993";
                                    //port_email = "imap.gmail.com";
                                    //from_email = "deepak.kaizenrealty@gmail.com";

                                    user = dta.Rows[0]["reg_mail"].ToString();
                                    pass = dta.Rows[0]["password"].ToString();
                                    port_no = dta.Rows[0]["port_no"].ToString();
                                    port_email = dta.Rows[0]["port_email"].ToString();
                                    from_email = dta.Rows[0]["from_email"].ToString();
                                }
                            }
                        }

                        else if (model[0].SelectedItems2.FirstOrDefault() == "006")
                        {
                            if (dtt.Rows.Count > 0)
                            {
                                dta = sgen.seekval_dt(dtt, "master_id='006'");
                                if (dta.Rows.Count > 0)
                                {
                                    //user = "gsthelp001@gmail.com";
                                    //pass = "srsoffice1";
                                    //port_no = "993";
                                    //port_email = "imap.gmail.com";
                                    //from_email = "rajshivkumar@gmail.com";

                                    user = dta.Rows[0]["reg_mail"].ToString();
                                    pass = dta.Rows[0]["password"].ToString();
                                    port_no = dta.Rows[0]["port_no"].ToString();
                                    port_email = dta.Rows[0]["port_email"].ToString();
                                    from_email = dta.Rows[0]["from_email"].ToString();
                                }
                            }
                        }


                        var client = new ImapClient();

                        var my = @"<table width='100%' border='0' cellspacing='0' cellpadding='1' style='border-collapse: collapse; font-family: Arial,Helvetica,sans-serif;' class=''>
                            
                            <tbody class=''><tr class=''>
                                <td width='10' class='' style='padding: 1px;'></td>
                                <td height='5' class='' style='padding: 1px;'></td>
                                <td width='10' class='' style='padding: 1px;'></td>
                            </tr>
                            <tr class=''>
                                <td width='10' class='' style='padding: 1px;'></td>
                                <td style='padding: 1px; color: #106c9f;font-size: 18px;text-align: center;line-height: 18px;' class=''>
                                	Contact Details of the Customer                                </td>
                                <td width='10' class='' style='padding: 1px;'></td>
                            </tr>
                            
                            <tr class=''>
                                <td width='10' class='' style='padding: 1px;'></td>
                                <td height='5' class='' style='padding: 1px;'></td>
                                <td width='10' class='' style='padding: 1px;'></td>
                            </tr>
                            <tr class=''>
                                <td width='10' class='' style='padding: 1px;'></td>
                                <td style='padding: 1px; font-size: 14px; text-align: center;' class=''> Raaj Sachdeva [Dealer] <br class=''> <a href='mailto:raaj.sachdeva1@gmail.com' target='_blank' class='mailto-link'>raaj.sachdeva1@gmail.com</a> <br class=''> 91-9811692612<font color='green' class=''><b class=''>(Verified)</b></font> <br class=''> <b class=''>Query</b> : pls send detais</td>
                                <td width='10' class='' style='padding: 1px;'></td>
                            </tr>
                            
                            <tr class=''>
                                <td width='10' class='' style='padding: 1px;'></td>
                                <td height='5' class='' style='padding: 1px;'></td>
                                <td width='10' class='' style='padding: 1px;'></td>
                            </tr>
                             
                              
                            <tr class=''>
                                <td width='10' class='' style='padding: 1px;'></td>
                                <td align='center' class='' style='padding: 1px;'>
                                                                        <table width='180px' border='0' style='border-collapse: collapse; min-width: 140px;font-family: Arial,Helvetica,sans-serif;' cellspacing='0' cellpadding='10' class=''>
                                    <tbody class=''><tr class=''>
                                    <td bgcolor='#3399fe' style='padding: 10px; border: 1px #0565cb solid;color: #fff;font-size: 14px;' align='center' class=''>
    
                                    <a href='mailto:raaj.sachdeva1@gmail.com' style='color: #fff;text-decoration: none;width: 180px;display: block;' target='_blank' class='mailto-link'>
                                    	Reply to the Query    </a>
                                    </td>
                                    </tr>
                                    </tbody></table>
                                                                         

                                </td>
                                <td width='10' class='' style='padding: 1px;'></td>
                            </tr>
                            
                            <tr class=''>
                                <td width='10' class='' style='padding: 1px;'></td>
                                <td height='5' class='' style='padding: 1px;'></td>
                                <td width='10' class='' style='padding: 1px;'></td>
                            </tr>
                             
                            
                            <tr class=''>
                                <td width='10' class='' style='padding: 1px;'></td>
                                <td height='2' style='padding: 1px; text-align: center;' class=''><img src='https://static.99acres.com/mailers/mmm_html/demo-html/img/spacer.gif' class=''></td>
                                <td width='10' class='' style='padding: 1px;'></td>
                            </tr>
                            
                            <tr class=''>
                                <td width='10' class='' style='padding: 1px;'></td>
                                <td height='5' class='' style='padding: 1px;'></td>
                                <td width='10' class='' style='padding: 1px;'></td>
                            </tr>
                            <tr class=''>
                                <td width='10' class='' style='padding: 1px;'></td>
                                <td style='padding: 1px; font-size: 12px; text-align: center;' class=''>
                               		<a href='https://www.99acres.com/maillink?url=aHR0cHM6Ly93d3cuOTlhY3Jlcy5jb20vZG8vbXk5OWFjcmVzL2FsbF9yZXNwb25zZXM=' style='color: #000;font-weight: bold;color: #106c9f;text-decoration: none;' target='_blank' class='' rel='noopener'>View all responses</a>                                 </td>
                                <td width='10' class='' style='padding: 1px;'></td>
                            </tr>
                            
                            <tr class=''>
                                <td width='10' class='' style='padding: 1px;'></td>
                                <td height='10' class='' style='padding: 1px;'></td>
                                <td width='10' class='' style='padding: 1px;'></td>
                            </tr>
                        </tbody></table>";

                        HtmlDocument doc = new HtmlDocument();
                        doc.LoadHtml(my);
                        List<string> words = doc.DocumentNode.DescendantNodes()
                                .Where(n => n.NodeType == HtmlNodeType.Text
                                  && !string.IsNullOrWhiteSpace(HtmlEntity.DeEntitize(n.InnerText))
                                  && n.ParentNode.Name != "style" && n.ParentNode.Name != "script")
                                .Select(n => HtmlEntity.DeEntitize(n.InnerText).Trim())
                                .Where(s => s.Length > 2).ToList();

                        string mm = WebUtility.HtmlDecode(my);
                        // client.Connect("imap.gmail.com", 993, true);
                        client.Connect(port_email, sgen.Make_int(port_no), true);
                        client.AuthenticationMechanisms.Remove("XOAUTH");
                        client.Authenticate(user, pass);


                        if (model[0].SelectedItems2.FirstOrDefault() == "003")//JUST DIAL
                        {
                            model[0].Col12 = "JST";
                        }
                        if (model[0].SelectedItems2.FirstOrDefault() == "004")//99 acres
                        {
                            model[0].Col12 = "ACR";
                        }
                        if (model[0].SelectedItems2.FirstOrDefault() == "005")//Magic Brick
                        {
                            model[0].Col12 = "MGB";
                        }

                        if (model[0].SelectedItems2.FirstOrDefault() == "006")//Tawk To
                        {
                            model[0].Col12 = "TWK";
                        }
                        Int64 lastid = 0;
                        try
                        {
                            // lastid = Convert.ToInt64(sgen.seekval(userCode, "select  max(convert(int, messageid) ) as id from acres", "id"));


                            lastid = Convert.ToInt64(sgen.seekval(userCode, "select  max(to_number(col1)) as id from kc_tab where type='" + model[0].Col12 + "' and client_unit_id='" + unitid_mst + "'", "id"));
                        }
                        catch (Exception err)
                        {
                            lastid = 0;
                        }

                        client.Inbox.Open(FolderAccess.ReadWrite);
                        //DateTime StartDate = DateTime.ParseExact("01/05/2018", "" + sgen.Getsqldateformat() + "", null);
                        //DateTime StartDate = DateTime.ParseExact("2020-03-14 00:01 AM", "yyyy-MM-dd HH:mm tt", null);
                        //DateTime EndDate = DateTime.ParseExact("18/03/2020", "" + sgen.Getsqldateformat() + "", null);

                        // reena not clear below lines
                        //DateTime StartDate = DateTime.ParseExact(model[0].Col17.Trim(), "dd/MM/yyyy", null);
                        //DateTime EndDate = DateTime.ParseExact(model[0].Col18.Trim(), "dd/MM/yyyy", null);

                        DateTime StartDate = sgen.Make_date(model[0].Col17);
                        DateTime EndDate = sgen.Make_date(model[0].Col18);



                        int i = 0;
                        string curr_date = sgen.server_datetime(userCode);
                        dtstr = new DataTable();
                        Satransaction sat1 = new Satransaction(userCode, MyGuid);
                        dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                        for (DateTime dd = StartDate; dd.Date <= EndDate.Date; dd = dd.AddDays(1))
                        {
                            //DateTime dd = DateTime.Now.AddDays(-1);
                            //var mails = client.Inbox.Search(SearchQuery.And(SearchQuery.DeliveredOn(dd), SearchQuery.FromContains("ram@skyinfy.com"))).Where(UniqueId => UniqueId.Id > lastid).ToList();
                            var mails = client.Inbox.Search(SearchQuery.And(SearchQuery.DeliveredOn(dd), SearchQuery.FromContains(from_email))).Where(UniqueId => UniqueId.Id > lastid).ToList();
                            foreach (var uid in mails)
                            {
                                i++;
                                try
                                {
                                    MimeKit.MimeMessage message = client.Inbox.GetMessage(uid);
                                    string body = WebUtility.HtmlEncode(message.HtmlBody);
                                    //body = mm;
                                    string datet = message.Date.ToUniversalTime().ToString(sgen.GetSaveDateFormat());
                                    string site = "", submitted = "", mtype = "CU", requirement = "", search_dt = "", jobloc = "", name = "", mobile = "", email = "", refered = "";

                                    string[] blist = sgen.Html_to_words(message.GetTextBody(MimeKit.Text.TextFormat.Html)).ToArray();
                                    //string xx = message.GetTextBody(MimeKit.Text.TextFormat.Plain).ToString().Replace("> ", "");
                                    // //xx = message.GetTextBody(MimeKit.Text.TextFormat.Html).ToString().Replace("> ", "");
                                    //xx = Regex.Replace(xx, @"(\r|\n)+^ +", "~", RegexOptions.None | RegexOptions.Multiline).Replace('\u0009'.ToString(), "~");
                                    //char[] charSeparators = new char[] { '~', '\r', '\n' };

                                    //string[] blist = xx.Split(charSeparators, StringSplitOptions.RemoveEmptyEntries);
                                    int cnt = blist.Count();
                                    int fk = 0, lk = 0;

                                    if (model[0].SelectedItems2.FirstOrDefault() == "004")//99 acres
                                    {
                                        model[0].Col12 = "ACR";
                                        for (int k = 0; k < cnt; k++)
                                        {
                                            if (blist[k].ToString().Trim().Equals("")) continue;
                                            if (blist[k].ToString().Trim().StartsWith("Contact Details")) { fk = k; }
                                            if (fk > 0 && k > fk)
                                            {
                                                try
                                                {
                                                    name = blist[k].ToString().Trim();
                                                    email = blist[k + 1].ToString().Trim();
                                                    if (email.Contains(":")) { email = email.Split(':')[0]; }
                                                    if (email.Contains("mailto")) { email = email.Replace("mailto", ""); }
                                                    mobile = blist[k + 2].ToString().Trim();
                                                    if (mobile.Contains("(")) { mobile = mobile.Split('(')[0]; }
                                                    requirement = blist[k + 3].ToString().Trim();
                                                }
                                                catch (Exception err) { }
                                                break;
                                            }
                                            if (blist[k].ToString().Trim().StartsWith("Reply to the Query")) break;
                                        }
                                    }
                                    if (model[0].SelectedItems2.FirstOrDefault() == "003")//just dial
                                    {
                                        model[0].Col12 = "JST";

                                        for (int k = 0; k < cnt; k++)
                                        {
                                            if (blist[k].ToString().Trim().Equals("User Name:")) name = blist[k + 1].ToString().Trim();
                                            if (blist[k].ToString().Trim().Equals("User Requirement:")) requirement = blist[k + 1].ToString().Trim();
                                            if (blist[k].ToString().Trim().Equals("Search Date & Time:")) search_dt = blist[k + 1].ToString().Trim();
                                            if (blist[k].ToString().Trim().Equals("User Phone:")) mobile = blist[k + 1].ToString().Trim();
                                            if (blist[k].ToString().Trim().Equals("User Email:")) email = blist[k + 1].ToString().Trim();
                                        }
                                    }

                                    if (model[0].SelectedItems2.FirstOrDefault() == "005")//Magic Brick
                                    {
                                        model[0].Col12 = "MGB";
                                        for (int k = 0; k < cnt; k++)
                                        {
                                            if (blist[k].ToString().Trim().Equals("")) continue;
                                            if (blist[k].ToString().Trim().StartsWith("Sender's Name")) { fk = k; }
                                            if (fk > 0 && k > fk)
                                            {
                                                try
                                                {
                                                    name = blist[k].ToString().Trim();
                                                    refered = blist[k + 1].ToString().Trim();
                                                    if (name.Contains("(")) { name = name.Split('(')[0]; }
                                                    if (refered.Contains("(")) { refered = refered.Split('(')[1]; }
                                                    if (refered.Contains(")")) { refered = refered.Split(')')[0]; }
                                                    mobile = blist[k + 3].ToString().Trim();
                                                    email = blist[k + 5].ToString().Trim();
                                                    requirement = blist[k + 7].ToString().Trim();

                                                }
                                                catch (Exception err) { }
                                                break;
                                            }
                                            if (blist[k].ToString().Trim().StartsWith("Reply to the Query")) break;
                                        }
                                    }
                                    if (model[0].SelectedItems2.FirstOrDefault() == "006")//Tawk To
                                    {
                                        model[0].Col12 = "TWK";
                                        for (int k = 0; k < cnt; k++)
                                        {
                                            if (blist[k].ToString().Trim().Equals("")) continue;
                                            if (blist[k].ToString().Trim().StartsWith("Offline message sent on")) { fk = k; }
                                            if (fk > 0 && k > fk)
                                            {
                                                try
                                                {
                                                    refered = blist[k + 1].ToString().Trim();//site
                                                    submitted = blist[k + 3].ToString().Trim();
                                                    name = blist[k + 5].ToString().Trim();
                                                    email = blist[k + 7].ToString().Trim();
                                                    requirement = blist[k + 9].ToString().Trim();

                                                }
                                                catch (Exception err) { }
                                                break;
                                            }
                                            if (blist[k].ToString().Trim().StartsWith("Reply to the Query")) break;
                                        }
                                    }
                                    if (name.Trim().Equals(""))
                                    {

                                    }

                                    mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " where type='" + model[0].Col12.Trim() + "' and client_unit_id='" + unitid_mst + "'";
                                    vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                                    vch_num = (sgen.Make_decimal(vch_num) + sgen.Make_decimal(i - 1)).ToString();
                                    vch_num = sgen.padlc(sgen.Make_int(vch_num), 6, "0");

                                    DataRow dr = dtstr.NewRow();
                                    dr["vch_num"] = vch_num.Trim();
                                    dr["vch_date"] = curr_date;
                                    dr["type"] = model[0].Col12.Trim();
                                    dr["COL1"] = uid;//UID
                                    dr["COL25"] = datet;//DATE_TIME
                                    dr["COL4"] = name;
                                    dr["COL3"] = mobile;
                                    dr["COL21"] = email;
                                    dr["COL41"] = requirement;
                                    dr["COL31"] = refered;
                                    dr["COL32"] = submitted;
                                    dr["rec_id"] = "0";
                                    dr["ent_by"] = userid_mst;
                                    dr["ent_date"] = curr_date;
                                    dr["client_id"] = clientid_mst;
                                    dr["client_unit_id"] = unitid_mst;
                                    dr["edit_by"] = userid_mst;
                                    dr["edit_date"] = curr_date;
                                    dtstr.Rows.Add(dr);
                                }


                                catch (Exception err)
                                {
                                    sgen.FILL_ERR(err.Message.ToString());
                                }
                            }

                            //save

                        }
                        res = sgen.Update_data_uncommit2(userCode, dtstr, model[0].Col10, "", false, sat1);
                        if (res == true)
                        {
                            sat1.Commit();
                            dt_lead = new DataTable();
                            dt_lead = dtstr.Copy();
                        }
                    }

                    if (dtstr.Rows.Count > 0)
                    {
                        dt_lead = dtstr.Copy();
                    }
                    string cond1 = "", cond2 = "";
                    if (model[0].SelectedItems2.FirstOrDefault() == "002")
                    {
                        cond1 = "(a.col1||a.col43)";
                        cond2 = "(ploc||cp_ref_type)";
                    }
                    else
                    {
                        cond1 = "(a.col1)";
                        cond2 = "(intg_id)";
                    }

                    DataTable dt_kctab = sgen.getdata(userCode, "select  a.vch_num,a.vch_date,a.type,a.COL1,a.COL2,( case when a.COL3='0' then '' else a.col3 end ) col3, a.COL4,a.COL5,a.COL6," +
                   "a.COL7,a.COL8,a.COL10,a.col11,a.col12,a.col13,a.COL14,a.COL15,a.COL16,a.col17,a.col18,a.COL21,a.COL22,a.col23," +
                   "a.col24,a.COL25,a.col27,a.col31,a.col32,a.col33,a.col34,a.col35,a.col40,a.COL41,a.col42,a.col43,a.col45,a.col47,a.COL69," +
                   "a.COL9,a.rec_id,a.ent_by,a.ent_date,a.client_id,a.client_unit_id,a.edit_by,a.edit_date" +
                      " from " + model[0].Col10.Trim() + " a   where a.col46='0' and  a.type='" + model[0].Col12.Trim() + "' and" +
                      " a.client_unit_id='" + unitid_mst + "' " +
                      " and " + cond1 + " not in (select distinct " + cond2 + " from lead_master " +
                      "where type='LED' and client_unit_id='" + unitid_mst + "' and intg_type='" + model[0].Col12 + "' )  ");

                    if (dt_kctab.Rows.Count > 0)
                    {
                        dt_lead = dt_kctab.Copy();
                        DataView DV = dt_lead.DefaultView;
                        DV.Sort = "col11 desc";
                        dt_lead = DV.ToTable();
                    }
                    if (dt_lead.Rows.Count > 0)
                    {
                        ViewBag.vsave = "";
                        model = new List<Tmodelmain>();
                        for (int i = 0; i < dt_lead.Rows.Count; i++)
                        {
                            Tmodelmain tmm = new Tmodelmain();
                            tmm.Col9 = tm.Col9;
                            tmm.Col10 = tm.Col10;
                            tmm.Col11 = tm.Col11;
                            tmm.Col12 = tm.Col12;
                            tmm.Col14 = tm.Col14;
                            tmm.Col15 = tm.Col15;
                            tmm.Col17 = tm.Col17;
                            tmm.Col18 = tm.Col18;



                            tmm.Col40 = dt_lead.Rows[i]["vch_num"].ToString();// vch_num
                            tmm.Col19 = dt_lead.Rows[i]["COL4"].ToString();// SENDERNAME
                            tmm.Col38 = dt_lead.Rows[i]["COL21"].ToString() + " \r\n" + dt_lead.Rows[i]["COL3"].ToString();// SENDEREMAIL
                            tmm.Col20 = dt_lead.Rows[i]["COL21"].ToString();// SENDEREMAIL
                            tmm.Col22 = dt_lead.Rows[i]["COL25"].ToString();// DATE_TIME_RE
                            tmm.Col23 = dt_lead.Rows[i]["COL3"].ToString();// MOB
                                                                           //tmm.Col27 = dt_lead.Rows[i]["COL41"].ToString();// Remark
                            tmm.Col27 = sgen.ExtractHtmlInnerText(dt_lead.Rows[i]["COL41"].ToString().Replace("\r\n", " %0a ")); ;// Remark
                            tmm.Col28 = dt_lead.Rows[i]["COL69"].ToString();// CP ADD 
                            tmm.Col29 = dt_lead.Rows[i]["COL7"].ToString();// CITY                           
                            tmm.Col30 = dt_lead.Rows[i]["COL8"].ToString();// STATE
                            tmm.Col31 = dt_lead.Rows[i]["COL10"].ToString();// Country
                            tmm.Col32 = dt_lead.Rows[i]["COL33"].ToString();// Product
                            tmm.Col21 = dt_lead.Rows[i]["COL22"].ToString();// Other Email
                            tmm.Col24 = dt_lead.Rows[i]["COL14"].ToString();// alt mob
                            tmm.Col25 = dt_lead.Rows[i]["COL15"].ToString();// phone
                            tmm.Col26 = dt_lead.Rows[i]["COL16"].ToString();// Other mob
                            tmm.Col33 = dt_lead.Rows[i]["COL1"].ToString();// query id
                            tmm.Col34 = dt_lead.Rows[i]["COL43"].ToString();// query type
                            tmm.Col35 = dt_lead.Rows[i]["COL40"].ToString();// state_name
                            tmm.Col39 = dt_lead.Rows[i]["COL34"].ToString() + " \r\n" + dt_lead.Rows[i]["COL40"].ToString() + " \r\n" + dt_lead.Rows[i]["COL10"].ToString(); // city_name
                            tmm.Col36 = dt_lead.Rows[i]["COL34"].ToString();// city_name
                            tmm.Col37 = dt_lead.Rows[i]["COL9"].ToString();// pr_id
                            tmm.Col42 = dt_lead.Rows[i]["COL31"].ToString();// ref_by
                            tmm.Col43 = dt_lead.Rows[i]["COL32"].ToString();// submited by
                            tmm.SelectedItems1 = new string[] { "" };
                            tmm.SelectedItems2 = tm.SelectedItems2;
                            tmm.TList1 = tm.TList1;
                            tmm.TList2 = tm.TList2;

                            if (tmm.Col12 == "TWK")
                            { tmm.Col27 = tmm.Col27 + " ( " + tmm.Col43 + " ) "; }
                            model.Add(tmm);
                        }
                    }

                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {
                    Satransaction sat1 = new Satransaction(userCode, MyGuid);
                    string currdate = sgen.server_datetime(userCode);
                    DataTable dtlead = sgen.getdata(userCode, "select * from lead_master WHERE 1=2");
                    string src_name = ((List<SelectListItem>)TempData[MyGuid + "_Tlist2"]).SingleOrDefault(item => item.Value == model[0].SelectedItems2.FirstOrDefault().ToString()).Text.ToString();
                    string ld_source = sgen.getstring(userCode, "select master_id from master_setting where type='SRC' and master_name='" + src_name + "' and find_in_set(client_unit_id,'" + unitid_mst + "')=1");
                    if ((ld_source == null) || (ld_source == "0") || (ld_source == ""))
                    {
                        string master_id = sgen.genNo(userCode, "select max(to_number (nvl(master_id,'0'))) as max from master_setting where client_unit_id='" + unitid_mst + "' and  type='SRC' ", 3, "max");
                        sgen.execute_cmd(userCode, "Insert into master_setting  (INACTIVE_DATE,STATUS,MALERATIO,FEMALERATIO,SECTIONTYPE,CLIENT_GSTIN,GROUP_ID,GROUP_REFRENCE_NUMBER,CONT_PERSON_EMAIL,CONT_PERSON_ALTNUMBER,CONT_PERSON_NUMBER,CONT_PERSON_NAME,UNIT_NAME,GROUP_NAME,CLIENT_NAME,TEACHER_CATEGORY,OPTIONAL_SUBJECT,SUBJECT_STRENGTH,SECTION_STRENGTH,SECTIONID,CLASSID,ISREGFEESBEFOREADM,ISALPHABETIC_WISE,ISADMISSION_WISE,ISSECTIONBASED,ISCLASSBASED,ISSCHOOLBASED,master_status ,ISROLLNOCHANGE,ISRECEIPTNOCHANGE,ISROLLNOREGWISE,ISREGNOCHANGE,vch_num,vch_date,type,Master_type,master_id, Master_Name, master_entby ,master_entdate,client_id,client_unit_id , master_editby ,master_editdate,CREATED_DATE)" +
                                                   " select to_date('" + currdate + "','" + dt_ft + "'), '0','0', '0','0','0', '0', '0', '0','0', '0','0','0', '0', '0', '0', '0', '0','0','0', '0', '0', '0','0', '0', '0','0', '0','0','0','0', '0', '0',to_date('" + currdate + "','" + dt_ft + "'), 'SRC','0','" + master_id + "','" + src_name + "','" + userid_mst + "',to_date('" + currdate + "','" + dt_ft + "') ,'" + clientid_mst + "','" + unitid_mst + "','-' ,to_date('" + currdate + "','" + dt_ft + "') ,to_date('" + currdate + "','" + dt_ft + "') from dual" +
                                                   " where Not EXISTS(select Master_name from master_setting where Master_name='" + src_name + "' and  client_unit_id='" + unitid_mst + "' and   type='SRC' ) ");

                    }
                    for (int i = 0; i < model.Count; i++)
                    {
                        if (model[i].Chk2 == true)
                        //dd-Mmm-YYYY HH:MI:SS TT
                        {
                            #region lead 
                            mq = "select max(to_number(vch_num)) as auto_genid from Lead_Master where type='LED' and client_unit_id='" + unitid_mst + "'";
                            vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                            vch_num = (sgen.Make_decimal(vch_num) + sgen.Make_decimal(i)).ToString();
                            vch_num = sgen.padlc(sgen.Make_int(vch_num), 6, "0");
                            DataRow dr = dtlead.NewRow();
                            //string vch_date = sgen.SaveDate_dt(model[i].Col22, true).ToString("dd-MMM-yyyy HH:MI:ss tt", CultureInfo.InvariantCulture);

                            dr["Type"] = "LED";
                            dr["vch_num"] = vch_num;
                            dr["intg_type"] = model[0].Col12;
                            dr["cust_name"] = model[i].Col19;
                            dr["cp_fname"] = model[i].Col19;
                            dr["emailid"] = model[i].Col20;
                            dr["cpemailother"] = model[i].Col21;
                            dr["lead_con"] = "N";
                            dr["ct_person"] = model[i].SelectedItems1.FirstOrDefault();
                            dr["vch_date"] = model[i].Col22;
                            dr["mobile_no"] = model[i].Col23;
                            dr["al_contact"] = model[i].Col24;
                            dr["contact_no"] = model[i].Col25;
                            dr["cpcontother"] = model[i].Col26;
                            dr["remark"] = sgen.ExtractHtmlInnerText(model[i].Col27.ToString().Replace("\r\n", " %0a ")); ;// Remark;
                            dr["address"] = model[i].Col28;
                            dr["city"] = model[i].Col29;
                            dr["state"] = model[i].Col30;
                            dr["country"] = model[i].Col31;
                            dr["ld_product"] = model[i].Col32;
                            dr["intg_id"] = model[i].Col33;//query id
                            dr["cp_ref_type"] = model[i].Col34;//query_type
                            dr["refered_by"] = model[i].Col42;//refered_by
                            dr["ld_source"] = ld_source;
                            dr["DOB"] = "01/01/1900";
                            dr["DOA"] = "01/01/1900";
                            dr["rec_id"] = 0;
                            dr["ent_by"] = userid_mst;
                            dr["ent_date"] = currdate;
                            dr["client_id"] = clientid_mst;
                            dr["client_unit_id"] = unitid_mst;
                            dr["edit_by"] = userid_mst;
                            dr["edit_date"] = currdate;
                            dtlead.Rows.Add(dr);
                            #endregion
                        }
                    }
                    res = sgen.Update_data_fast1(userCode, dtlead, "lead_master", "", false);
                    var tmodel = model.FirstOrDefault();
                    if (res == true)
                    {
                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain()
                        {
                            Col9 = tmodel.Col9,
                            Col10 = tmodel.Col10,
                            Col11 = tmodel.Col11,
                            Col12 = tmodel.Col12,
                            Col14 = tmodel.Col14,
                            Col15 = tmodel.Col15,
                            TList1 = mod1,
                            TList2 = mod2,
                            SelectedItems1 = new string[] { "" },
                            SelectedItems2 = new string[] { "" },
                        });
                        ViewBag.vsave = "disabled='disabled'";
                        ViewBag.scripCall = "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";

                    }

                }
                else if (command == "Delete")
                {
                    for (int i = 0; i < model.Count; i++)
                    {
                        if (model[i].Chk2 == true)
                        {
                            sgen.execute_cmd(userCode, "update kc_tab set Col46='1' where client_unit_id='" + unitid_mst + "' and type='" + model[0].Col12 + "' and vch_num='" + model[0].Col40 + "' ");
                        }
                    }
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region mail master
        public ActionResult mail_mst()
        {
            FillMst("");
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            model[0].Col9 = "MAIL MASTER";
            model[0].Col10 = "alerts";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "BMM";
            DataTable dt = sgen.getdata(userCode, "select '' select_,'1' as  SNo ,'-' as User_code,'-' as User_name,'-' as Address,'-' as Mobile,'-' Email_address from dual");
            model[0].dt1 = dt;
            sgen.SetSession(MyGuid, "BMAIL_DT", dt.Copy());
            ModelState.Clear();
            return View(model);
        }
        public List<Tmodelmain> new_mail_mst(List<Tmodelmain> model)
        {
            model = getnew(model);
            return model;
        }
        [HttpPost]
        public ActionResult mail_mst(List<Tmodelmain> model, string command, string hfrow, string hftable)
        {
            FillMst(model[0].Col15);
            var tm = model.FirstOrDefault();
            DataTable dtm = sgen.settable(hftable);
            model[0].dt1 = dtm;
            if (command == "New")
            {
                try
                {
                    model = new_mail_mst(model);
                }
                catch (Exception ex) { }
            }
            else if (command == "Cancel")
            {
                return CancelFun(model);
            }
            else if (command == "Callback")
            {
                model = StartCallback(model);
            }
            else if (command == "-")
            {
                if (model[0].dt1.Rows.Count > 1) model[0].dt1.Rows.RemoveAt(sgen.Make_int(hfrow));
                else { model[0].dt1 = ((DataTable)sgen.GetSession(MyGuid, "BMAIL_DT")).Copy(); }
                ViewBag.vnew = "disabled='disabled'";
                ViewBag.vedit = "disabled='disabled'";
                ViewBag.vsave = "";
                ViewBag.vsavenew = "";
            }
            else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
            {
                try
                {
                    if (model[0].dt1.Rows[0]["USER_CODE"].ToString() == "-")
                    {
                        sgen.showmsg(1, "Please Select User in grid", 2);
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                        return View(model);
                    }
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        //mq1 = " and vch_num<>'" + model[0].Col16 + "'";
                        isedit = true;
                        vch_num = model[0].Col16.Trim();
                    }
                    else
                    {
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10 + " where type='" + model[0].Col12 + "' and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "'";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                    }
                    string currdate = sgen.server_datetime(userCode);
                    DataTable dataTable = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                    for (int i = 0; i < model[0].dt1.Rows.Count; i++)
                    {
                        DataRow dr = dataTable.NewRow();
                        dr["type"] = model[0].Col12;
                        dr["vch_num"] = model[0].Col16;
                        dr["vch_date"] = currdate;
                        dr["head_text"] = model[0].Col17;
                        dr["mail_cc"] = model[0].Col18;//mailcc
                        dr["body_text"] = model[0].Col19;//body text
                        dr["ref_code1"] = model[0].dt1.Rows[i]["User_code"].ToString();
                        dr["mail_id"] = model[0].dt1.Rows[i]["Email_address"].ToString();
                        dr = getsave(currdate, dr, model);
                        dataTable.Rows.Add(dr);
                    }
                    res = sgen.Update_data_fast1(userCode, dataTable, model[0].Col10.Trim(), model[0].Col8, isedit);
                    if (res)
                    {
                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col13 = "Save",
                            Col100 = "Save & New",
                            Col121 = "S",
                            Col122 = "<u>S</u>ave",
                            Col123 = "Save & Ne<u>w</u>",
                            Col10 = tm.Col10,
                            Col9 = tm.Col9,
                            Col11 = tm.Col11,
                            Col12 = tm.Col12,
                            Col14 = tm.Col14,
                            Col15 = tm.Col15,
                            dt1 = ((DataTable)sgen.GetSession(MyGuid, "BMAIL_DT")).Copy()
                        });
                        if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                        {
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                        {
                            try
                            {
                                model = new_mail_mst(model);
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                            }
                            catch (Exception ex) { }
                        }
                    }
                }
                catch (Exception ex) { sgen.showmsg(1, ex.Message.ToString(), 0); }
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region Create Ticket
        public ActionResult cr_ticket(string mid)
        {
            FillMst();

            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            sgen.SetSession(MyGuid, "EDMODE", "N");
            List<SelectListItem> md1 = new List<SelectListItem>();


            model[0].SelectedItems1 = new string[] { "" };
            model[0].SelectedItems2 = new string[] { "" };
            model[0].SelectedItems3 = new string[] { "" };
            model[0].SelectedItems4 = new string[] { "" };
            model[0].SelectedItems5 = new string[] { "" };
            model[0].SelectedItems6 = new string[] { "" };
            model[0].SelectedItems7 = new string[] { "" };
            model[0].SelectedItems8 = new string[] { "" };

            TempData[MyGuid + "_TList1"] = model[0].TList1 = md1;
            TempData[MyGuid + "_TList2"] = model[0].TList2 = md1;
            TempData[MyGuid + "_TList3"] = model[0].TList3 = md1;
            TempData[MyGuid + "_TList4"] = model[0].TList4 = md1;
            TempData[MyGuid + "_TList5"] = model[0].TList5 = md1;
            TempData[MyGuid + "_TList6"] = model[0].TList6 = md1;
            TempData[MyGuid + "_TList7"] = model[0].TList7 = md1;
            TempData[MyGuid + "_TList8"] = model[0].TList8 = md1;

            model[0].Col9 = "CREATE TICKET";
            model[0].Col10 = "lead_master";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "TCK";
            model[0].Col30 = "A";

            DataTable dtb = (DataTable)sgen.GetSession(MyGuid, "URIGHTS");
            try
            {
                dtb = dtb.Select("m_id='" + model[0].Col14 + "'").CopyToDataTable();
                if (dtb.Rows.Count > 0)
                {
                    model[0].Col55 = dtb.Rows[0]["btnnew"].ToString();
                    model[0].Col56 = dtb.Rows[0]["btnedit"].ToString();
                    model[0].Col57 = dtb.Rows[0]["btnview"].ToString();
                }
            }
            catch (Exception ex) { }


            return View(model);
        }
        public List<Tmodelmain> new_cr_ticket(List<Tmodelmain> model)
        {
            try
            {
                model = getnew(model);
                string defval = "";
                var tm = model.FirstOrDefault();
                //model[0].Col28 = "A";
                model[0].Col29 = sgen.server_datetime_local(userCode);
                List<SelectListItem> mod8, mod7, mod6, mod5, mod4, mod3, mod2, mod1 = new List<SelectListItem>();
                #region 
                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.tickettype(userCode, unitid_mst);     // ticket type
                TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2 = cmd_Fun.ticketstatus(userCode, unitid_mst);     //ticket status
                TempData[MyGuid + "_TList3"] = model[0].TList3 = mod3 = cmd_Fun.ticketpriority(userCode, unitid_mst); //ticket priority     
                TempData[MyGuid + "_TList4"] = model[0].TList4 = mod4 = cmd_Fun.ticketgroup(userCode, unitid_mst);     //ticket grp
                TempData[MyGuid + "_TList5"] = model[0].TList5 = mod5 = cmd_Fun.username_mod(userCode, m_module3);     //agent
                mq = "select vch_num,c_name from clients_mst where type='BCD' and substr(vch_num,0,3)='303' and find_in_set(client_unit_id,'" + unitid_mst + "')=1 ";
                DataTable dt = sgen.getdata(userCode, mq);
                if (dt.Rows.Count > 0)
                {
                    TempData[MyGuid + "_TList6"] = model[0].TList6 = mod6 = sgen.dt_to_selectlist(dt);
                }

                TempData[MyGuid + "_TList8"] = model[0].TList8 = mod8 = cmd_Fun.ticketsrc(userCode, unitid_mst);     //ticket source

                #endregion


            }
            catch (Exception ex)
            { ViewBag.scripCall = "showmsgJS(1, '" + ex.Message.ToString().Replace("'", "") + "', 1);"; }
            return model;
        }
        [HttpPost]
        public ActionResult cr_ticket(List<Tmodelmain> model, string command, string mid, HttpPostedFileBase upd1)
        {
            try
            {
                FillMst(model[0].Col15);
                IList<HttpPostedFileBase> fileCollection1 = new List<HttpPostedFileBase>();
                #region DDL
                var tm = model.FirstOrDefault();
                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_Tlist1"];
                List<SelectListItem> mod2 = (List<SelectListItem>)TempData[MyGuid + "_Tlist2"];
                List<SelectListItem> mod3 = (List<SelectListItem>)TempData[MyGuid + "_Tlist3"];
                List<SelectListItem> mod4 = (List<SelectListItem>)TempData[MyGuid + "_Tlist4"];
                List<SelectListItem> mod5 = (List<SelectListItem>)TempData[MyGuid + "_Tlist5"];
                List<SelectListItem> mod6 = (List<SelectListItem>)TempData[MyGuid + "_Tlist6"];
                List<SelectListItem> mod7 = (List<SelectListItem>)TempData[MyGuid + "_Tlist7"];
                List<SelectListItem> mod8 = (List<SelectListItem>)TempData[MyGuid + "_Tlist8"];

                TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1;
                TempData[MyGuid + "_Tlist2"] = model[0].TList2 = mod2;
                TempData[MyGuid + "_Tlist3"] = model[0].TList3 = mod3;
                TempData[MyGuid + "_Tlist4"] = model[0].TList4 = mod4;
                TempData[MyGuid + "_Tlist5"] = model[0].TList5 = mod5;
                TempData[MyGuid + "_Tlist6"] = model[0].TList6 = mod6;
                TempData[MyGuid + "_Tlist7"] = model[0].TList7 = mod7;
                TempData[MyGuid + "_Tlist8"] = model[0].TList8 = mod8;


                if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                if (model[0].SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
                if (model[0].SelectedItems3 == null) model[0].SelectedItems3 = new string[] { "" };
                if (model[0].SelectedItems4 == null) model[0].SelectedItems4 = new string[] { "" };
                if (model[0].SelectedItems5 == null) model[0].SelectedItems5 = new string[] { "" };
                if (model[0].SelectedItems6 == null) model[0].SelectedItems6 = new string[] { "" };
                if (model[0].SelectedItems7 == null) model[0].SelectedItems7 = new string[] { "" };
                if (model[0].SelectedItems8 == null) model[0].SelectedItems8 = new string[] { "" };

                #endregion
                if (command == "New")
                {
                    if (model[0].Col55 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for new ticket, please contact your admin', 2);";
                        return View(model);
                    }
                    model = new_cr_ticket(model);
                }

                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    if ((model[0].Col56 == "N") && (btnval == "EDIT"))
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for edit ticket, please contact your admin', 2);disableForm();";
                        ViewBag.vnew = "";
                        ViewBag.vedit = "";
                        ViewBag.vsave = "disabled='disabled'";
                        ViewBag.vsavenew = "disabled='disabled'";

                        return View(model);
                    }
                    if (sgen.GetSession(MyGuid, "delid") != null) { btnval = "FDEL"; sgen.SetSession(MyGuid, "btnval", btnval); }
                    else if (sgen.GetSession(MyGuid, "btnval") != null) btnval = sgen.GetSession(MyGuid, "btnval").ToString();
                    model = StartCallback(model);

                }

                else if (command == "Mom")
                {
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                    ViewBag.scripCall = "enableForm();";

                    string mom_msg = sgen.getstring(userCode, "select remark as msg from lead_master where type='MOM' and client_unit_id='" + unitid_mst + "' and vch_num='" + model[0].SelectedItems7.FirstOrDefault() + "'");

                    if (mom_msg != "")
                    {
                        model[0].Col20 = mom_msg;
                    }

                    if (model[0].Chk3 == true)
                    {

                        ViewBag.scripcall = "$('[id *= mom]').show();";
                    }


                }
                else if (command.Trim() == "Save" || command.Trim() == "Update" || command == "Save & New" || command == "Update & New")
                {
                    if (model[0].Col55 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for save ticket , please contact your admin', 2);";
                        return View(model);
                    }


                    if ((model[0].SelectedItems4.FirstOrDefault() == null || model[0].SelectedItems4.FirstOrDefault() == "" || model[0].SelectedItems4.FirstOrDefault() == "0") && (model[0].SelectedItems5.FirstOrDefault() == null || model[0].SelectedItems5.FirstOrDefault() == "" || model[0].SelectedItems5.FirstOrDefault() == "0"))
                    {
                        ViewBag.vresend = "disabled='disabled'";
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                        ViewBag.scripCall += "mytoast('warning', 'toast-top-right', 'Please Select Either Group Or Agent');";
                        return View(model);
                    }

                    if ((model[0].Col20 == "") || (model[0].Col20 == null))
                    {
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";

                        ViewBag.scripCall += "mytoast('warning', 'toast-top-right', 'Please Enter Message');";

                        return View(model);
                    }



                    var tmodel = model.FirstOrDefault();
                    string currdate = sgen.server_datetime(userCode);
                    string cond = "", found = "", emailto = "";
                    DataTable dtstr = new DataTable();

                    dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                    DataRow dr = dtstr.NewRow();
                    emailto = model[0].Col22;
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        isedit = true;
                        vch_num = model[0].Col16;

                    }
                    else
                    {
                        isedit = false;
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        model[0].Col16 = vch_num;

                        #region new contact
                        if (model[0].Chk1 == true)
                        {
                            emailto = model[0].Col26;
                            model[0].Col18 = model[0].SelectedItems6.FirstOrDefault();
                            mq = "select max(to_number(vch_num)) as auto_genid from clients_mst a where  type in " +
                                    "('BCD' ,'DDBCD')" + model[0].Col11.Trim() + " and ref_code='" + model[0].Col18.Trim() + "' and substr(ref_code,0,3)='303'";
                            model[0].Col17 = sgen.genNo(userCode, mq, 6, "auto_genid");
                            DataTable dtstrr = cmd_Fun.GetStructure(userCode, "clients_mst");
                            dr = dtstrr.NewRow();
                            dr["ref_code"] = model[0].Col18;
                            dr["vch_num"] = model[0].Col17;
                            dr["vch_date"] = sgen.Make_date_S(model[0].Col29);
                            dr["type"] = "BCD";
                            dr["cpname"] = model[0].Col25;//cont per name
                            dr["cplandno"] = model[0].Col27;//cont per phone
                            dr["cpemail"] = model[0].Col26;//cont per email
                            dr["rec_id"] = "0";
                            dr["client_id"] = clientid_mst;
                            dr["client_unit_id"] = unitid_mst;
                            dr["ent_by"] = userid_mst;
                            dr["ent_date"] = currdate;
                            dr["edit_by"] = "-";
                            dr["edit_date"] = currdate;
                            dtstrr.Rows.Add(dr);
                            bool ok = sgen.Update_data_fast1(userCode, dtstrr, "clients_mst", tmodel.Col8, isedit);
                        }
                        #endregion

                    }



                    dr = dtstr.NewRow();
                    dr["rec_id"] = "0";
                    dr["type"] = model[0].Col12;
                    dr["vch_num"] = vch_num.Trim();
                    dr["vch_date"] = sgen.Make_date_S(model[0].Col29);
                    dr["CP_FNAME"] = model[0].Col17;      // contact_id
                    dr["cust_id"] = model[0].Col18;      //acc_id 

                    dr["ld_owner"] = model[0].SelectedItems1.FirstOrDefault(); //ticket type
                    dr["ld_status"] = model[0].SelectedItems2.FirstOrDefault(); //ticket status
                    dr["ld_source"] = model[0].SelectedItems3.FirstOrDefault(); //ticket priority                 

                    dr["ld_product"] = model[0].SelectedItems4.FirstOrDefault();// ticket group
                    dr["bsn_type"] = model[0].SelectedItems5.FirstOrDefault();// ticket agent                       
                    dr["INTG_ID"] = model[0].SelectedItems7.FirstOrDefault();// mom no.                       

                    dr["remark"] = model[0].Col20;// message
                    dr["address"] = model[0].Col21;// subject
                    dr["lead_con"] = "N";
                    //dr["ACCTYPE"] = model[0].Col28;// grp or agent wise
                    dr["ORD_SOURCE"] = model[0].SelectedItems8.FirstOrDefault();// ticket source                     
                    dr["lead_app"] = model[0].Col30;



                    dr = getsave(currdate, dr, model, isedit);
                    dtstr.Rows.Add(dr);

                    bool Result = sgen.Update_data_fast1(userCode, dtstr, model[0].Col10.Trim(), tmodel.Col8, isedit);
                    if (Result == true)
                    {
                        #region attachment
                        DataTable dtfile = new DataTable();
                        dtfile = cmd_Fun.GetStructure(userCode, "file_tab");
                        string serverpath = Server.MapPath("~/Uploads/" + cg_com_name.Replace(" ", "") + "/");

                        try
                        {
                            HttpPostedFileBase file1 = upd1;
                            ctype1 = file1.ContentType;
                            fileName1 = file1.FileName;
                            path1 = clientid_mst + unitid_mst + userid_mst + currdate + "_" + fileName1;
                            encpath1 = sgen.Convert_Stringto64(path1).ToString();
                            finalpath1 = serverpath + encpath1;
                            file1.SaveAs(finalpath1);
                            filesave(model, currdate, dtfile, fileName1, encpath1, "TCK", ctype1, model[0].Col32, model[0].Col31, "", "");
                        }
                        catch (Exception ex) { }

                        if (dtfile.Rows.Count > 0)
                        {
                            res = sgen.Update_data_fast1(userCode, dtfile, "file_tab", "", false);
                        }

                        #endregion

                        #region mail
                        string mailfrom = "";
                        if (model[0].Chk2 == true)
                        {
                            if ((emailto != "") && (emailto != "0") && (emailto != null))
                            {
                                DataTable datatable = new DataTable();
                                datatable = sgen.getdata(userCode, "select com_email from company_profile where Company_Profile_Id='" + clientid_mst + "' and type='CP'");
                                if (datatable.Rows.Count > 0)
                                {
                                    mailfrom = Convert.ToString(datatable.Rows[0]["com_email"]);
                                }

                                if ((upd1 != null))
                                {
                                    IList<HttpPostedFileBase> fileCollection = new List<HttpPostedFileBase>();
                                    fileCollection.Add(upd1);
                                    sgen.Send_mail_SA_attc(userCode, clientid_mst, unitid_mst, emailto, "", "", model[0].Col20, model[0].Col21, "", fileCollection);
                                }
                                else
                                {
                                    sgen.Send_mail_SA1(userCode, clientid_mst, unitid_mst, emailto, "", "", model[0].Col20, model[0].Col21, "");
                                }
                            }
                        }

                        #endregion

                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col10 = tm.Col10,
                            Col11 = tm.Col11,
                            Col12 = tm.Col12,
                            Col13 = "Save",
                            Col100 = "Save & New",
                            Col121 = "S",
                            Col122 = "<u>S</u>ave",
                            Col123 = "Save & Ne<u>w</u>",
                            Col14 = tm.Col14,
                            Col15 = tm.Col15,
                            Col9 = tm.Col9,
                            TList1 = mod1,
                            TList2 = mod2,
                            TList3 = mod3,
                            TList4 = mod4,
                            TList5 = mod5,
                            TList6 = mod6,
                            TList7 = mod7,
                            TList8 = mod8,

                            SelectedItems1 = new string[] { "" },
                            SelectedItems2 = new string[] { "" },
                            SelectedItems3 = new string[] { "" },
                            SelectedItems4 = new string[] { "" },
                            SelectedItems5 = new string[] { "" },
                            SelectedItems6 = new string[] { "" },
                            SelectedItems7 = new string[] { "" },
                            SelectedItems8 = new string[] { "" },

                        });
                        if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                        {
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.scripCall = "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                        {
                            try
                            {
                                model = new_lead(model);
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                            }
                            catch (Exception ex) { }
                        }
                    }
                    else
                    {
                        ViewBag.scripCall = "showmsgJS(1, 'Record Not Saved',0);";
                    }
                }

            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region ticket_list 
        public ActionResult ticket_list()
        {
            FillMst();
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            string defval = "";
            ViewBag.scripCall = "enableForm();";
            model[0].Col10 = "lead_master";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "LED";


            var tm = model.FirstOrDefault();

            string leadcon = "";

            if (mid_mst == "400012.3")
            {
                model[0].Col9 = "LIST OF CLOSED TICKETS";
                leadcon = "and a.lead_con='C'";
            }

            else
            {
                model[0].Col9 = "LIST OF TICKETS";
                leadcon = "and a.lead_con='N'";
            }
            string cond = "";
            if (!role_mst.ToUpper().Equals("OWNER"))
            {
                mq = "select col8 tat, col9 ticket_type, Col7 user_id,Col12 view_only  from enx_tab2 where type='WFL' and col10='000005' and client_unit_id='" + unitid_mst + "' and col7='" + userid_mst + "'";
                DataTable dttk = sgen.getdata(userCode, mq);
                if (dttk.Rows.Count > 0)
                {
                    cond = "and a.ld_owner=" + dttk.Rows[0]["ticket_type"].ToString() + " " +
                        "and (a.bsn_type='" + userid_mst + "' or a.ld_product in (select vch_num from enx_tab2 where type='GRP'" +
                        " and client_unit_id='" + unitid_mst + "' and col7='" + userid_mst + "')) ";
                }
            }

            mq = "select  (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) Ticket_No,nvl(b.c_name,'-') account_name," +
                "((replace(nvl(c.cpname,'0'), '0', '-') || ' ' || replace(c.cp_mname, '0', '') || ' ' || replace(c.cp_lname, '0', ''))) contact_person," +
                "a.address subject,nvl(d.master_name,'-') ticket_type,nvl(e.master_name,'-') ticket_status,nvl(j.first_name||' '||replace(j.middle_name,'0','')||''||replace(j.last_name,'0',''),'-') ticket_created_By," +
                "nvl(ud.first_name||' '||replace(ud.middle_name,'0','')||''||replace(ud.last_name,'0',''),'-') Agent,nvl(g.master_name,'-') ticket_priority," +
                "(case when a.INTG_ID ='0' then '-' else a.INTG_ID end ) MOM_NO,nvl(max(f.col5),'-') ticket_group from lead_master a " +
                "left join clients_mst b on a.cust_id = b.vch_num and a.client_unit_id = b.client_unit_id " +
                "left join clients_mst c on a.cp_fname = c.vch_num and b.vch_num = c.ref_code and a.client_unit_id = c.client_unit_id " +
                "left join master_setting d on a.ld_owner = d.master_id and d.type = 'TKT' and a.client_unit_id = d.client_unit_id " +
                "left join master_setting e on a.ld_status = e.master_id and e.type = 'TKS' and a.client_unit_id = e.client_unit_id " +
                "left join master_setting g on a.ld_source = g.master_id and g.type = 'TKP' and a.client_unit_id = g.client_unit_id " +
                "left join enx_tab2 f on a.ld_product = f.vch_num and f.type = 'GRP' and a.client_unit_id = f.client_unit_id " +
                "left join user_details ud on  ud.vch_num=a.bsn_type and ud.type='CPR' " +
                "inner join user_details j on a.ent_by = j.vch_num and j.type = 'CPR' " +
                "where a.type = 'TCK' and a.client_unit_id = '" + unitid_mst + "' " + leadcon + " " + cond + " and (a.lead_app is null or a.lead_app='A' or a.lead_app='0') " +
                "group by a.INTG_ID,(a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type),b.c_name,((replace(nvl(c.cpname,'0'), '0', '-') || ' ' || replace(c.cp_mname, '0', '') || ' ' || replace(c.cp_lname, '0', '')))," +
                "a.address,d.master_name,e.master_name, g.master_name,nvl(ud.first_name||' '||replace(ud.middle_name,'0','')||''||replace(ud.last_name,'0',''),'-'),nvl(j.first_name||' '||replace(j.middle_name,'0','')||''||replace(j.last_name,'0',''),'-') " +
                "order by (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) desc";
            sgen.SetSession(MyGuid, "gridq_demogrid", mq);

            ModelState.Clear();
            return View(model);
        }
        [HttpPost]
        public ActionResult ticket_list(List<Tmodelmain> model, string command, string mid)
        {
            try
            {
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();




            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region ticket_detail
        public ActionResult ticket_detail()
        {
            MyGuid = EncryptDecrypt.Decrypt(HttpUtility.ParseQueryString(Request.UrlReferrer.Query)["m_id"]);
            FillMst(MyGuid);
            chkRef();
            List<Tmodelmain> model = new List<Tmodelmain>();
            Tmodelmain tm1 = new Tmodelmain();
            Tmodelmain tm2 = new Tmodelmain();
            mid_mst = EncryptDecrypt.Decrypt(Request.QueryString["mid"]);
            ViewBag.vnew = "";
            ViewBag.vedit = "";
            ViewBag.vsave = "disabled='disabled'";
            ViewBag.scripCall = "disableForm();";
            tm1.Col13 = "Save";
            tm1.Col14 = mid_mst.Trim();
            tm1.Col15 = MyGuid.Trim();
            model.Add(tm1);
            model[0].LTM1 = new List<Tmodelmain>();
            model[0].LTM2 = new List<Tmodelmain>();
            model[0].LTM3 = new List<Tmodelmain>();
            Tmodelmain tmltm1 = new Tmodelmain();
            Tmodelmain tmltm2 = new Tmodelmain();
            Tmodelmain tmltm3 = new Tmodelmain();
            tmltm1.Col1 = "1";
            tmltm2.Col1 = "1";
            tmltm3.Col1 = "1";
            model[0].LTM1.Add(tmltm1);
            model[0].LTM2.Add(tmltm2);
            List<SelectListItem> md1 = new List<SelectListItem>();
            #region Detail

            model[0].LTM1[0].SelectedItems1 = new string[] { "" };
            model[0].LTM1[0].SelectedItems2 = new string[] { "" };
            model[0].LTM1[0].SelectedItems3 = new string[] { "" };
            model[0].LTM1[0].SelectedItems4 = new string[] { "" };
            model[0].LTM1[0].SelectedItems5 = new string[] { "" };
            model[0].LTM1[0].SelectedItems6 = new string[] { "" };
            model[0].LTM1[0].SelectedItems7 = new string[] { "" };
            model[0].LTM1[0].SelectedItems8 = new string[] { "" };
            TempData[MyGuid + "_0TList1"] = model[0].LTM1[0].TList1 = md1;
            TempData[MyGuid + "_0TList2"] = model[0].LTM1[0].TList2 = md1;
            TempData[MyGuid + "_0TList3"] = model[0].LTM1[0].TList3 = md1;
            TempData[MyGuid + "_0TList4"] = model[0].LTM1[0].TList4 = md1;
            TempData[MyGuid + "_0TList5"] = model[0].LTM1[0].TList5 = md1;
            TempData[MyGuid + "_0TList6"] = model[0].LTM1[0].TList6 = md1;
            TempData[MyGuid + "_0TList7"] = model[0].LTM1[0].TList7 = md1;
            TempData[MyGuid + "_0TList8"] = model[0].LTM1[0].TList8 = md1;


            #endregion
            #region Followup



            model[0].LTM2[0].SelectedItems1 = new string[] { "" };
            model[0].LTM2[0].SelectedItems2 = new string[] { "" };
            model[0].LTM2[0].SelectedItems3 = new string[] { "" };
            model[0].LTM2[0].SelectedItems4 = new string[] { "" };

            TempData[MyGuid + "_1TList1"] = model[0].LTM2[0].TList1 = md1;
            TempData[MyGuid + "_1TList2"] = model[0].LTM2[0].TList2 = md1;
            TempData[MyGuid + "_1TList3"] = model[0].LTM2[0].TList3 = md1;
            TempData[MyGuid + "_1TList4"] = model[0].LTM2[0].TList4 = md1;
            #endregion

            #region Rights
            DataTable dtb = (DataTable)sgen.GetSession(MyGuid, "URIGHTS");
            try
            {
                dtb = dtb.Select("m_id='400012.1'").CopyToDataTable();
                if (dtb.Rows.Count > 0)
                {

                    model[0].LTM1[0].Col56 = dtb.Rows[0]["btnedit"].ToString();
                    model[0].LTM1[0].Col57 = dtb.Rows[0]["btnview"].ToString();
                }
            }
            catch (Exception ex) { }
            #endregion
            model[0].LTM1[0].Col9 = "CREATE TICKET";
            model[0].LTM1[0].Col10 = "lead_master";
            model[0].LTM1[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'"; model[0].LTM1[0].Col12 = "TCK";

            if (Request.QueryString["fstr"] != null)
            {
                if (Request.QueryString["fstr"].StartsWith("EDIT"))
                {
                    if (model[0].LTM1[0].Col56 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for Edit ticket, please contact your admin', 2);disableForm();";

                        return View(model);
                    }
                    else
                    {
                        model[0].LTM1[0].Col16 = EncryptDecrypt.Decrypt(Request.QueryString["fstr"].ToString().Replace("EDIT", "").Trim());
                        sgen.SetSession(MyGuid, "SSEEKVAL", model[0].LTM1[0].Col16);
                        CallbackFun("EDIT", "Y", "ticket_detail", "vastu", model);
                        ViewBag.scripCall += "enableForm_tf();";
                        ViewBag.scripCall += "enableForm_td();";
                        ViewBag.vsave = "";
                    }
                }

                else if (Request.QueryString["fstr"].StartsWith("VIEW"))
                {
                    if (model[0].LTM1[0].Col56 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for Edit ticket, please contact your admin', 2);disableForm();";

                        return View(model);
                    }
                    else
                    {
                        model[0].LTM1[0].Col16 = EncryptDecrypt.Decrypt(Request.QueryString["fstr"].ToString().Replace("VIEW", "").Trim());
                        sgen.SetSession(MyGuid, "SSEEKVAL", model[0].LTM1[0].Col16);
                        CallbackFun("VIEW", "N", "ticket_detail", "vastu", model);
                        ViewBag.vsave = "disabled='disabled'";
                        ViewBag.scripCall += "disableForm_td();";
                        ViewBag.scripCall += "disableForm_tf();";
                    }
                }
                else
                {
                    if (Request.QueryString["fstr"].ToString().Contains("TCK"))
                    {
                        model[0].LTM1[0].Col16 = Request.QueryString["fstr"].ToString();
                    }
                    else
                    {
                        model[0].LTM1[0].Col16 = EncryptDecrypt.Decrypt(Request.QueryString["fstr"].ToString());
                    }

                    sgen.SetSession(MyGuid, "SSEEKVAL", model[0].LTM1[0].Col16);
                    CallbackFun("EDIT", "Y", "ticket_detail", "vastu", model);
                    ViewBag.vsave = "disabled='disabled'";
                    if (model[0].LTM1[0].Col56 == "N")
                    {
                        ViewBag.scripCall += "disableForm_td();";
                        ViewBag.scripCall += "enableForm_tf();";
                        ViewBag.vsave = "disabled='disabled'";

                    }
                    else
                    {
                        ViewBag.scripCall += "enableForm_tf();";
                        ViewBag.scripCall += "enableForm_td();";
                        ViewBag.vsave = "";
                    }
                }

            }
            return View(model);
        }
        [HttpPost]
        public ActionResult ticket_detail(List<Tmodelmain> model, string command)
        {
            try
            {
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();
                #region detail
                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_0Tlist1"];
                List<SelectListItem> mod2 = (List<SelectListItem>)TempData[MyGuid + "_0Tlist2"];
                List<SelectListItem> mod3 = (List<SelectListItem>)TempData[MyGuid + "_0Tlist3"];
                List<SelectListItem> mod4 = (List<SelectListItem>)TempData[MyGuid + "_0Tlist4"];
                List<SelectListItem> mod5 = (List<SelectListItem>)TempData[MyGuid + "_0Tlist5"];
                List<SelectListItem> mod8 = (List<SelectListItem>)TempData[MyGuid + "_0Tlist7"];
                List<SelectListItem> mod9 = (List<SelectListItem>)TempData[MyGuid + "_0Tlist8"];


                TempData[MyGuid + "_0Tlist1"] = model[0].LTM1[0].TList1 = mod1;
                TempData[MyGuid + "_0Tlist2"] = model[0].LTM1[0].TList2 = mod2;
                TempData[MyGuid + "_0Tlist3"] = model[0].LTM1[0].TList3 = mod3;
                TempData[MyGuid + "_0Tlist4"] = model[0].LTM1[0].TList4 = mod4;
                TempData[MyGuid + "_0Tlist5"] = model[0].LTM1[0].TList5 = mod5;
                TempData[MyGuid + "_0Tlist7"] = model[0].LTM1[0].TList7 = mod8;
                TempData[MyGuid + "_0Tlist8"] = model[0].LTM1[0].TList8 = mod9;


                if (model[0].LTM1[0].SelectedItems1 == null) model[0].LTM1[0].SelectedItems1 = new string[] { "" };
                if (model[0].LTM1[0].SelectedItems2 == null) model[0].LTM1[0].SelectedItems2 = new string[] { "" };
                if (model[0].LTM1[0].SelectedItems3 == null) model[0].LTM1[0].SelectedItems3 = new string[] { "" };
                if (model[0].LTM1[0].SelectedItems4 == null) model[0].LTM1[0].SelectedItems4 = new string[] { "" };
                if (model[0].LTM1[0].SelectedItems5 == null) model[0].LTM1[0].SelectedItems5 = new string[] { "" };
                if (model[0].LTM1[0].SelectedItems7 == null) model[0].LTM1[0].SelectedItems7 = new string[] { "" };
                if (model[0].LTM1[0].SelectedItems8 == null) model[0].LTM1[0].SelectedItems8 = new string[] { "" };


                #endregion
                #region followup
                List<SelectListItem> mod6 = (List<SelectListItem>)TempData[MyGuid + "_1Tlist1"];
                List<SelectListItem> mod7 = (List<SelectListItem>)TempData[MyGuid + "_1Tlist2"];
                List<SelectListItem> mod10 = (List<SelectListItem>)TempData[MyGuid + "_1Tlist3"];
                List<SelectListItem> mod11 = (List<SelectListItem>)TempData[MyGuid + "_1Tlist4"];

                model[0].LTM2[0].TList1 = mod6;
                model[0].LTM2[0].TList2 = mod7;
                model[0].LTM2[0].TList3 = mod10;
                model[0].LTM2[0].TList4 = mod11;
                TempData[MyGuid + "_1Tlist1"] = model[0].LTM2[0].TList1;
                TempData[MyGuid + "_1Tlist2"] = model[0].LTM2[0].TList2;
                TempData[MyGuid + "_1Tlist3"] = model[0].LTM2[0].TList3;
                TempData[MyGuid + "_1Tlist4"] = model[0].LTM2[0].TList4;

                if (model[0].LTM2[0].SelectedItems1 == null) model[0].LTM2[0].SelectedItems1 = new string[] { "" };
                if (model[0].LTM2[0].SelectedItems2 == null) model[0].LTM2[0].SelectedItems2 = new string[] { "" };
                if (model[0].LTM2[0].SelectedItems3 == null) model[0].LTM2[0].SelectedItems3 = new string[] { "" };
                if (model[0].LTM2[0].SelectedItems4 == null) model[0].LTM2[0].SelectedItems4 = new string[] { "" };

                #endregion
                if (command == "Callback")
                {
                    model = StartCallback(model);
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region pr_ticket
        [HttpPost]
        public ActionResult pr_ticket(String model1, string command, string mid, HttpPostedFileBase[] upd1)
        {
            FillMst(MyGuid);
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = sgen.Make_Model(model1);
            var tm = model.FirstOrDefault();
            List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_0Tlist1"];
            List<SelectListItem> mod2 = (List<SelectListItem>)TempData[MyGuid + "_0Tlist2"];
            List<SelectListItem> mod3 = (List<SelectListItem>)TempData[MyGuid + "_0Tlist3"];
            List<SelectListItem> mod4 = (List<SelectListItem>)TempData[MyGuid + "_0Tlist4"];
            List<SelectListItem> mod5 = (List<SelectListItem>)TempData[MyGuid + "_0Tlist5"];
            List<SelectListItem> mod6 = (List<SelectListItem>)TempData[MyGuid + "_0Tlist6"];
            List<SelectListItem> mod8 = (List<SelectListItem>)TempData[MyGuid + "_0Tlist7"];
            List<SelectListItem> mod9 = (List<SelectListItem>)TempData[MyGuid + "_0Tlist8"];
            TempData[MyGuid + "_0Tlist1"] = model[0].LTM1[0].TList1 = mod1;
            TempData[MyGuid + "_0Tlist2"] = model[0].LTM1[0].TList2 = mod2;
            TempData[MyGuid + "_0Tlist3"] = model[0].LTM1[0].TList3 = mod3;
            TempData[MyGuid + "_0Tlist4"] = model[0].LTM1[0].TList4 = mod4;
            TempData[MyGuid + "_0Tlist5"] = model[0].LTM1[0].TList5 = mod5;
            TempData[MyGuid + "_0Tlist6"] = model[0].LTM1[0].TList6 = mod6;
            TempData[MyGuid + "_0Tlist7"] = model[0].LTM1[0].TList7 = mod8;
            TempData[MyGuid + "_0Tlist8"] = model[0].LTM1[0].TList7 = mod9;


            if (model[0].LTM1[0].SelectedItems1 == null) model[0].LTM1[0].SelectedItems1 = new string[] { "" };
            if (model[0].LTM1[0].SelectedItems2 == null) model[0].LTM1[0].SelectedItems2 = new string[] { "" };
            if (model[0].LTM1[0].SelectedItems3 == null) model[0].LTM1[0].SelectedItems3 = new string[] { "" };
            if (model[0].LTM1[0].SelectedItems4 == null) model[0].LTM1[0].SelectedItems4 = new string[] { "" };
            if (model[0].LTM1[0].SelectedItems5 == null) model[0].LTM1[0].SelectedItems5 = new string[] { "" };
            if (model[0].LTM1[0].SelectedItems6 == null) model[0].LTM1[0].SelectedItems6 = new string[] { "" };
            if (model[0].LTM1[0].SelectedItems7 == null) model[0].LTM1[0].SelectedItems7 = new string[] { "" };
            if (model[0].LTM1[0].SelectedItems8 == null) model[0].LTM1[0].SelectedItems8 = new string[] { "" };

            try
            {
                var tmodel = model.FirstOrDefault();
                if (model[0].LTM1[0].Col56 == "N")
                {
                    ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for Update ticket, please contact your admin', 2);disableForm();";

                    return View(model);
                }
                string currdate = sgen.server_datetime(userCode);
                string cond = "", found = "";
                DataTable dtstr = new DataTable();
                //dtstr = sgen.getdata(userCode, "select * from " + model[0].Col10 + " WHERE 1=2");
                dtstr = cmd_Fun.GetStructure(userCode, model[0].LTM1[0].Col10.Trim());
                if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                {
                    isedit = true;
                    vch_num = model[0].LTM1[0].Col16;
                }

                DataRow dr = dtstr.NewRow();


                if ((model[0].LTM1[0].SelectedItems4.FirstOrDefault() == null || model[0].LTM1[0].SelectedItems4.FirstOrDefault() == "" || model[0].LTM1[0].SelectedItems4.FirstOrDefault() == "0") && (model[0].LTM1[0].SelectedItems5.FirstOrDefault() == null || model[0].LTM1[0].SelectedItems5.FirstOrDefault() == "" || model[0].LTM1[0].SelectedItems5.FirstOrDefault() == "0"))
                {
                    ViewBag.vresend = "disabled='disabled'";
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                    ViewBag.scripCall += "mytoast('warning', 'toast-top-right', 'Please Select Either Group Or Agent');";
                    return View(model);
                }
                dr["rec_id"] = "0";
                dr["type"] = model[0].LTM1[0].Col12;
                dr["vch_num"] = vch_num.Trim();
                dr["vch_date"] = currdate;
                dr["CP_FNAME"] = model[0].LTM1[0].Col17;      // contact_id
                dr["cust_id"] = model[0].LTM1[0].Col18;      //acc_id 

                dr["ld_owner"] = model[0].LTM1[0].SelectedItems1.FirstOrDefault(); //ticket type
                dr["ld_status"] = model[0].LTM1[0].SelectedItems2.FirstOrDefault(); //ticket status
                dr["ld_source"] = model[0].LTM1[0].SelectedItems3.FirstOrDefault(); //ticket priority                 

                dr["ld_product"] = model[0].LTM1[0].SelectedItems4.FirstOrDefault();// ticket group
                dr["bsn_type"] = model[0].LTM1[0].SelectedItems5.FirstOrDefault();// ticket agent                     

                dr["INTG_ID"] = model[0].LTM1[0].SelectedItems7.FirstOrDefault();// mom no.
                dr["ORD_SOURCE"] = model[0].LTM1[0].SelectedItems8.FirstOrDefault();// ticket source                     

                dr["remark"] = model[0].LTM1[0].Col20;// message
                dr["address"] = model[0].LTM1[0].Col21;// subject
                dr["lead_con"] = "N";// subject
                dr["ent_by"] = model[0].LTM1[0].Col3;
                dr["ent_date"] = model[0].LTM1[0].Col4;
                dr["client_id"] = clientid_mst;
                dr["client_unit_id"] = unitid_mst;
                dr["edit_by"] = userid_mst;
                dr["edit_date"] = currdate;
                dtstr.Rows.Add(dr);


                bool Result = sgen.Update_data_fast1(userCode, dtstr, model[0].LTM1[0].Col10.Trim(), model[0].LTM1[0].Col8.Trim(), isedit);
                if (Result == true)
                {
                    #region mail
                    string mailfrom = "", emailto = "";
                    emailto = model[0].Col22;
                    if (model[0].LTM1[0].Chk2 == true)
                    {
                        if ((emailto != "") && (emailto != "0") && (emailto != null))
                        {
                            DataTable datatable = new DataTable();
                            datatable = sgen.getdata(userCode, "select com_email from company_profile where Company_Profile_Id='" + clientid_mst + "' and type='CP'");
                            if (datatable.Rows.Count > 0)
                            {
                                mailfrom = Convert.ToString(datatable.Rows[0]["com_email"]);
                            }

                            //if ((upd1 != null))
                            //{
                            //    IList<HttpPostedFileBase> fileCollection = new List<HttpPostedFileBase>();
                            //    fileCollection.Add(upd1);
                            //    sgen.Send_mail_SA_attc(userCode, clientid_mst, unitid_mst, emailto, "", "", model[0].Col20, model[0].Col21, "", fileCollection);
                            //}
                            //else
                            //{
                            sgen.Send_mail_SA1(userCode, clientid_mst, unitid_mst, emailto, "", "", model[0].LTM1[0].Col20, model[0].LTM1[0].Col21, "");
                            //}
                        }
                    }

                    #endregion

                    vch_num = model[0].LTM1[0].Col16;
                    ViewBag.vnew = "";
                    ViewBag.vedit = "";
                    ViewBag.vsave = "disabled='disabled'";
                    ViewBag.scripCall = "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                    model = new List<Tmodelmain>();
                    model.Add(new Tmodelmain
                    {
                        Col10 = tm.Col10,
                        Col11 = tm.Col11,
                        Col12 = tm.Col12,
                        //Col13 = "Save",
                        Col14 = tm.Col14,
                        Col15 = tm.Col15,
                        Col9 = tm.Col9,
                        LTM1 = new List<Tmodelmain>(),
                        LTM2 = new List<Tmodelmain>(),

                    });
                    Tmodelmain tmltm2 = new Tmodelmain();
                    tmltm2.Col1 = "1";
                    model[0].LTM1.Add(tmltm2);
                    model[0].LTM1[0].TList1 = mod1;
                    model[0].LTM1[0].TList2 = mod2;
                    model[0].LTM1[0].TList3 = mod3;
                    model[0].LTM1[0].TList4 = mod4;
                    model[0].LTM1[0].TList5 = mod5;
                    model[0].LTM1[0].TList7 = mod8;
                    model[0].LTM1[0].TList8 = mod9;
                    model[0].LTM1[0].Col15 = MyGuid;
                    if (model[0].LTM1[0].SelectedItems1 == null) model[0].LTM1[0].SelectedItems1 = new string[] { "" };
                    if (model[0].LTM1[0].SelectedItems2 == null) model[0].LTM1[0].SelectedItems2 = new string[] { "" };
                    if (model[0].LTM1[0].SelectedItems3 == null) model[0].LTM1[0].SelectedItems3 = new string[] { "" };
                    if (model[0].LTM1[0].SelectedItems4 == null) model[0].LTM1[0].SelectedItems4 = new string[] { "" };
                    if (model[0].LTM1[0].SelectedItems5 == null) model[0].LTM1[0].SelectedItems5 = new string[] { "" };
                    if (model[0].LTM1[0].SelectedItems7 == null) model[0].LTM1[0].SelectedItems7 = new string[] { "" };
                    if (model[0].LTM1[0].SelectedItems8 == null) model[0].LTM1[0].SelectedItems8 = new string[] { "" };


                }
                else
                {
                    ViewBag.scripCall = "showmsgJS(1, 'Record Not Saved', 0);";
                }
            }
            catch (Exception ex) { sgen.showmsg(1, ex.Message.ToString(), 0); }

            ModelState.Clear();
            return PartialView(model);
        }

        #endregion
        #region pr_timeline
        [HttpPost]
        public ActionResult pr_timeline(String model1, string command, string mid)
        {
            FillMst(MyGuid);
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = sgen.Make_Model(model1);
            var tm = model.FirstOrDefault();
            List<SelectListItem> mod1 = new List<SelectListItem>();
            List<SelectListItem> mod2 = new List<SelectListItem>();
            List<SelectListItem> mod3 = new List<SelectListItem>();
            List<SelectListItem> mod4 = new List<SelectListItem>();
            TempData[MyGuid + "_FL_TList1"] = model[0].LTM2[0].TList1 = mod1 = (List<SelectListItem>)TempData[MyGuid + "_FL_TList1"];
            TempData[MyGuid + "_FL_TList2"] = model[0].LTM2[0].TList2 = mod2 = (List<SelectListItem>)TempData[MyGuid + "_FL_TList2"];
            TempData[MyGuid + "_FL_TList3"] = model[0].LTM2[0].TList3 = mod3 = (List<SelectListItem>)TempData[MyGuid + "_FL_TList3"];
            TempData[MyGuid + "_FL_TList4"] = model[0].LTM2[0].TList4 = mod4 = (List<SelectListItem>)TempData[MyGuid + "_FL_TList4"];


            if (model[0].LTM2[0].SelectedItems1 == null) model[0].LTM2[0].SelectedItems1 = new string[] { "" };
            if (model[0].LTM2[0].SelectedItems2 == null) model[0].LTM2[0].SelectedItems2 = new string[] { "" };
            if (model[0].LTM2[0].SelectedItems3 == null) model[0].LTM2[0].SelectedItems3 = new string[] { "" };
            if (model[0].LTM2[0].SelectedItems4 == null) model[0].LTM2[0].SelectedItems4 = new string[] { "" };

            //else if (command == "Save" || command == "Update")
            {
                model[0].Col15 = MyGuid;
                var tmodel = model.FirstOrDefault();
                string currdate = sgen.server_datetime(userCode);
                DataTable dtstr = new DataTable();
                dtstr = cmd_Fun.GetStructure(userCode, "enx_tab2");
                mq = "select max(to_number(vch_num)) as auto_genid from enx_tab2 where type='TCK' " + model[0].LTM2[0].Col11 + "  ";
                vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                model[0].LTM2[0].Col16 = vch_num;
                isedit = false;
                //}
                string leadid = model[0].LTM2[0].Col19;
                #region dtstr
                DataRow dr = dtstr.NewRow();
                dr["rec_id"] = "0";
                dr["vch_num"] = vch_num.Trim();
                dr["vch_date"] = sgen.Savedate(currdate, true);
                //dr["type"] = model[0].Col12.Trim();
                dr["type"] = "TCK";
                dr["col1"] = model[0].LTM2[0].Col17;
                dr["col8"] = model[0].LTM2[0].Col31;
                dr["col3"] = userid_mst;
                dr["date1"] = sgen.Make_date_S(model[0].LTM2[0].Col18);
                dr["date2"] = sgen.Make_date_S(model[0].LTM2[0].Col20);
                dr["col2"] = model[0].LTM2[0].Col19; // lead id
                dr["col5"] = model[0].LTM2[0].SelectedItems1.FirstOrDefault(); // agent
                dr["col6"] = model[0].LTM2[0].SelectedItems3.FirstOrDefault();// cloesed or reopen by
                dr["col7"] = model[0].LTM2[0].SelectedItems2.FirstOrDefault();// next action
                dr["col9"] = model[0].LTM2[0].SelectedItems4.FirstOrDefault();// ticket group
                if (model[0].LTM2[0].Col27.ToString() == "Re-Opened")
                {
                    if (model[0].LTM2[0].Chk1 == true) { dr["col12"] = "R"; } else { dr["col12"] = "N"; }
                }
                else
                {
                    if (model[0].LTM2[0].Chk1 == true) { dr["col12"] = "Y"; } else { dr["col12"] = "N"; }
                }
                dr["col4"] = model[0].LTM2[0].Col26; //reason of closing
                if (isedit)
                {
                    dr["ent_by"] = model[0].LTM2[0].Col3;
                    dr["ent_date"] = model[0].LTM2[0].Col4.Trim();
                    dr["client_id"] = model[0].LTM2[0].Col1.Trim();
                    dr["client_unit_id"] = model[0].LTM2[0].Col2.Trim();
                    dr["edit_by"] = userid_mst.Trim();
                    dr["edit_date"] = currdate;
                }
                else
                {
                    dr["ent_by"] = userid_mst;
                    dr["ent_date"] = currdate;
                    dr["client_id"] = clientid_mst;
                    dr["client_unit_id"] = unitid_mst;
                    dr["edit_by"] = "-";
                    dr["edit_date"] = currdate;
                }
                dtstr.Rows.Add(dr);
                #endregion
                ok = sgen.Update_data_fast1(userCode, dtstr, "enx_tab2", model[0].Col8, isedit);
                if (ok)
                {
                    string chkval = "";
                    if (model[0].LTM2[0].Col27.ToString() == "Re-Opened") { chkval = "N"; }
                    else { chkval = "C"; }
                    if (model[0].LTM2[0].Chk1 == true)
                    {
                        ViewBag.vsave = "disabled='disabled'";
                        ok = sgen.execute_cmd(userCode, "update lead_master set lead_con='" + chkval + "' where vch_num='" + model[0].LTM2[0].Col19 + "' and type='TCK' and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "'");
                    }
                    mq = "select a.col8, a.col5, a.vch_num, a.col1 as rmk,a.col4 as reason,col12 as closed,to_char(convert_tz(a.date1,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') as date1" +
                        ",to_char(convert_tz(a.date2,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') as date2 ,first_name||' '||replace(middle_name,'0','')||" +
                             "''||replace(last_name,'0','') as user_name , n.master_name as nxt_fl from enx_tab2 a left join user_details ud on a.col5 = " +
                             " ud.vch_num left join master_setting n on n.master_id = a.col7 and n.type = 'NAM' and " +
                                "find_in_set(n.client_unit_id, a.client_unit_id)= 1 where a.type = 'TCK' and a.client_unit_id='" + unitid_mst + "' and a.col2='" + leadid + "'" +
                             " order by a.vch_num desc";
                    DataTable dtf = new DataTable();
                    dtf = sgen.getdata(userCode, mq);
                    if (dtf.Rows.Count > 0)
                    {
                        var modme = new List<Tmodelmain>();
                        string assign = dtf.Rows[0]["col5"].ToString();
                        for (int i = 0; i < dtf.Rows.Count; i++)
                        {
                            Tmodelmain tmm = new Tmodelmain();
                            tmm.Col19 = leadid;

                            //tmm.Col20 = dtf.Rows[i]["date1"].ToString();
                            tmm.Col32 = dtf.Rows[i]["date1"].ToString();
                            tmm.Col21 = dtf.Rows[i]["user_name"].ToString();
                            tmm.Col33 = dtf.Rows[i]["col8"].ToString();
                            if (dtf.Rows[i]["closed"].ToString() == "Y")
                            {
                                tmm.Col27 = "Closed";
                                tmm.Col28 = "Reason Of Closing";
                                tmm.Col23 = "(Lead Is Closed ) " + dtf.Rows[i]["reason"].ToString();
                            }
                            else if (dtf.Rows[i]["closed"].ToString() == "R")
                            {
                                tmm.Col27 = "Re-Opened";
                                tmm.Col28 = "Reason Of Re-Open";
                                tmm.Col23 = "(Lead Is Re-opened ) " + dtf.Rows[i]["reason"].ToString();
                            }
                            else
                            {
                                tmm.Col27 = "Closed";
                                tmm.Col28 = "Reason Of Closing";
                                tmm.Col23 = dtf.Rows[i]["rmk"].ToString();
                            }
                            tmm.Col24 = dtf.Rows[i]["date2"].ToString();
                            tmm.Col25 = dtf.Rows[i]["nxt_fl"].ToString();
                            #region  Assigned to
                            TempData[MyGuid + "_FL_TList1"] = tmm.TList1 = mod1 = cmd_Fun.username_mod(userCode, m_module3);
                            tmm.SelectedItems1 = new string[] { "" };
                            #endregion
                            #region  Next Action
                            TempData[MyGuid + "_FL_TList2"] = tmm.TList2 = mod2 = cmd_Fun.nextaction(userCode, unitid_mst);
                            tmm.SelectedItems3 = new string[] { "" };
                            #endregion
                            #region  Closed or reopen by
                            TempData[MyGuid + "_FL_TList3"] = tmm.TList3 = mod3 = cmd_Fun.username_mod(userCode, m_module3);
                            tmm.SelectedItems3 = new string[] { "" };
                            #endregion                       
                            #region ticket group by
                            TempData[MyGuid + "_FL_TList4"] = tmm.TList4 = mod4 = cmd_Fun.ticketgroup(userCode, unitid_mst);
                            tmm.SelectedItems4 = new string[] { "" };
                            #endregion                       

                            tmm.LTM1 = new List<Tmodelmain>();
                            tmm.LTM2 = new List<Tmodelmain>();
                            modme.Add(tmm);
                        }
                        Tmodelmain tmltm2 = new Tmodelmain();
                        tmltm2.Col1 = "1";
                        //model[0].LTM2.Add(tmltm2);
                        model[0].LTM2 = modme;
                        model[0].LTM2[0].Col18 = sgen.server_datetime_local(userCode);
                        model[0].LTM2[0].Col20 = sgen.server_datetime_local(userCode);
                    }
                    //model[0].LTM2.Add(tmm.LTM2[0]);
                }
                else { ViewBag.scripCall = "showmsgJS(1, 'Something Went Wrong, Data Not Saved', 0);"; }
            }

            if (model[0].LTM2[0].SelectedItems1 == null) model[0].LTM2[0].SelectedItems1 = new string[] { "" };
            if (model[0].LTM2[0].SelectedItems2 == null) model[0].LTM2[0].SelectedItems2 = new string[] { "" };
            if (model[0].LTM2[0].SelectedItems3 == null) model[0].LTM2[0].SelectedItems3 = new string[] { "" };
            if (model[0].LTM2[0].SelectedItems4 == null) model[0].LTM2[0].SelectedItems4 = new string[] { "" };

            ModelState.Clear();
            return PartialView(model);
        }

        #endregion
        #region Min Of Meeting
        public ActionResult mom(string mid)
        {
            FillMst();
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);

            model[0].Col9 = "MINUTES OF MEETING";
            model[0].Col10 = "lead_master";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "MOM";

            List<SelectListItem> md1 = new List<SelectListItem>();
            List<SelectListItem> md2 = new List<SelectListItem>();
            model[0].SelectedItems1 = new string[] { "" };
            model[0].SelectedItems2 = new string[] { "" };
            TempData[MyGuid + "_TList1"] = model[0].TList1 = md1;
            TempData[MyGuid + "_TList2"] = model[0].TList2 = md2;
            DataTable dtb = (DataTable)sgen.GetSession(MyGuid, "URIGHTS");
            try
            {
                dtb = dtb.Select("m_id='" + model[0].Col14 + "'").CopyToDataTable();
                if (dtb.Rows.Count > 0)
                {
                    model[0].Col55 = dtb.Rows[0]["btnnew"].ToString();
                    model[0].Col56 = dtb.Rows[0]["btnedit"].ToString();
                    model[0].Col57 = dtb.Rows[0]["btnview"].ToString();

                }
            }
            catch (Exception ex) { }

            if (Request.QueryString["fstr"] != null)
            {
                string fstr = "";
                if (Request.QueryString["fstr"].StartsWith("EDIT"))
                {
                    fstr = EncryptDecrypt.Decrypt(Request.QueryString["fstr"].ToString().Replace("EDIT", "").Trim());
                    sgen.SetSession(MyGuid, "SSEEKVAL", fstr);
                    CallbackFun("EDIT", "Y", "mom", "vastu", model);
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
                if (Request.QueryString["fstr"].StartsWith("VIEW"))
                {
                    fstr = EncryptDecrypt.Decrypt(Request.QueryString["fstr"].ToString().Replace("VIEW", "").Trim());
                    sgen.SetSession(MyGuid, "SSEEKVAL", fstr);
                    CallbackFun("VIEW", "N", "mom", "vastu", model);
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "disabled='disabled'";
                    ViewBag.vsavenew = "disabled='disabled'";
                    model[0].Col13 = "Save";
                    model[0].Col100 = "Save & New";
                    model[0].Col121 = "S";
                    model[0].Col122 = "<u>S</u>ave";
                    model[0].Col123 = "Save & Ne<u>w</u>";
                    ViewBag.scripCall = "disableForm();";



                }

            }
            return View(model);
        }
        public List<Tmodelmain> new_mom(List<Tmodelmain> model)
        {
            try
            {
                model = getnew(model);
                List<SelectListItem> mod1 = new List<SelectListItem>();
                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.modeofmeet(userCode, unitid_mst);
                model[0].Col29 = sgen.server_datetime_local(userCode);
                string defval = "";
                var tm = model.FirstOrDefault();




            }
            catch (Exception ex)
            { ViewBag.scripCall = "showmsgJS(1, '" + ex.Message.ToString().Replace("'", "") + "', 1);"; }
            return model;
        }
        [HttpPost]
        public ActionResult mom(List<Tmodelmain> model, string command, string mid, HttpPostedFileBase upd1)
        {
            try
            {
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();
                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_Tlist1"];
                List<SelectListItem> mod2 = (List<SelectListItem>)TempData[MyGuid + "_Tlist2"];
                TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1;
                TempData[MyGuid + "_Tlist2"] = model[0].TList2 = mod2;
                if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                if (model[0].SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };

                if (command == "New")
                {
                    if (model[0].Col55 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for new entry, please contact your admin', 2);";
                        return View(model);
                    }
                    model = new_mom(model);
                }

                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    if ((model[0].Col56 == "N") && (btnval == "EDIT"))
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for edit , please contact your admin', 2);disableForm();";
                        return View(model);
                    }
                    if (sgen.GetSession(MyGuid, "delid") != null) { btnval = "FDEL"; sgen.SetSession(MyGuid, "btnval", btnval); }
                    else if (sgen.GetSession(MyGuid, "btnval") != null) btnval = sgen.GetSession(MyGuid, "btnval").ToString();
                    model = StartCallback(model);

                }
                else if (command.Trim() == "Save" || command.Trim() == "Update" || command == "Save & New" || command == "Update & New")
                {
                    if (model[0].Col55 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for save  , please contact your admin', 2);";
                        return View(model);
                    }

                    if ((model[0].Col20 == "") || (model[0].Col20 == null))
                    {
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";

                        ViewBag.scripCall += "mytoast('warning', 'toast-top-right', 'Please Enter Message');";

                        return View(model);
                    }
                    var tmodel = model.FirstOrDefault();
                    string currdate = sgen.server_datetime(userCode);
                    string cond = "", found = "", emailto = "";
                    DataTable dtstr = new DataTable();

                    dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                    DataRow dr = dtstr.NewRow();
                    emailto = model[0].SelectedItems2.FirstOrDefault();
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        isedit = true;
                        vch_num = model[0].Col16;

                    }
                    else
                    {
                        isedit = false;
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        model[0].Col16 = vch_num;

                        if (model[0].Chk1 == true)
                        {
                            emailto = model[0].Col26;
                            #region add prospect
                            mq = "select max(to_number(substr(vch_num,4,8))) as auto_genid from clients_mst a where  type in ('PRO' ,'DDPRO')" + model[0].Col11.Trim() + " and substr(vch_num,0,3)='909'";
                            model[0].Col18 = "909" + sgen.genNo(userCode, mq, 6, "auto_genid");
                            DataTable dtstrr = cmd_Fun.GetStructure(userCode, "clients_mst");
                            dr = dtstrr.NewRow();

                            dr["vch_num"] = model[0].Col18;
                            dr["parent_id"] = model[0].Col18;
                            dr["vch_date"] = currdate;
                            dr["type"] = "PRO";
                            dr["pros"] = "N";
                            dr["c_name"] = model[0].Col28;//prospect name
                            dr["cpname"] = model[0].Col28;//cont per name
                            dr["cp_lname"] = model[0].Col25;//cont per name
                            dr["cplandno"] = model[0].Col27;//cont per phone
                            dr["cpemail"] = model[0].Col26;//cont per email
                            dr["rec_id"] = "0";
                            dr["client_id"] = clientid_mst;
                            dr["client_unit_id"] = unitid_mst;
                            dr["ent_by"] = userid_mst;
                            dr["ent_date"] = currdate;
                            dr["edit_by"] = "-";
                            dr["edit_date"] = currdate;
                            dtstrr.Rows.Add(dr);
                            bool ok = sgen.Update_data_fast1(userCode, dtstrr, "clients_mst", tmodel.Col8, isedit);
                            #endregion
                            mq = "select max(to_number(vch_num)) as auto_genid from clients_mst a where  type in " +
                                    "('PRO' ,'DDPRO')" + model[0].Col11.Trim() + " and ref_code='" + model[0].Col18.Trim() + "' and substr(ref_code,0,3)='909'";
                            model[0].Col17 = sgen.genNo(userCode, mq, 6, "auto_genid");
                            dtstrr = cmd_Fun.GetStructure(userCode, "clients_mst");
                            dr = dtstrr.NewRow();
                            dr["ref_code"] = model[0].Col18;
                            dr["parent_id"] = model[0].Col18;
                            dr["vch_num"] = model[0].Col17;
                            dr["vch_date"] = sgen.Make_date_S(model[0].Col29);
                            dr["type"] = "PRO";
                            dr["pros"] = "N";
                            dr["cpname"] = model[0].Col28;//cont per name
                            dr["cp_lname"] = model[0].Col25;//cont per name
                            dr["cplandno"] = model[0].Col27;//cont per phone
                            dr["cpemail"] = model[0].Col26;//cont per email
                            dr["rec_id"] = "0";
                            dr["client_id"] = clientid_mst;
                            dr["client_unit_id"] = unitid_mst;
                            dr["ent_by"] = userid_mst;
                            dr["ent_date"] = currdate;
                            dr["edit_by"] = "-";
                            dr["edit_date"] = currdate;
                            dtstrr.Rows.Add(dr);
                            ok = sgen.Update_data_fast1(userCode, dtstrr, "clients_mst", tmodel.Col8, isedit);
                        }

                    }



                    dr = dtstr.NewRow();
                    dr["rec_id"] = "0";
                    dr["type"] = model[0].Col12;
                    dr["vch_num"] = vch_num.Trim();
                    dr["vch_date"] = sgen.Make_date_S(model[0].Col29);
                    dr["CP_FNAME"] = model[0].Col17;      // contact_id
                    dr["cust_id"] = model[0].Col18;      //acc_id 


                    // dr["remark"] = sgen.ExtractHtmlInnerText(model[0].Col20.Replace("\r\n", "  "));// message
                    dr["remark"] = model[0].Col20;// message

                    dr["address"] = model[0].Col21;// subject
                    dr["emailid"] = model[0].Col30;// 
                    dr["LD_OWNER"] = model[0].SelectedItems1.FirstOrDefault();// 
                    dr["lead_con"] = "N";



                    dr = getsave(currdate, dr, model, isedit);
                    dtstr.Rows.Add(dr);

                    bool Result = sgen.Update_data_fast1(userCode, dtstr, model[0].Col10.Trim(), tmodel.Col8, isedit);
                    if (Result == true)
                    {

                        #region attachment
                        DataTable dtfile = new DataTable();
                        dtfile = cmd_Fun.GetStructure(userCode, "file_tab");
                        string serverpath = Server.MapPath("~/Uploads/" + cg_com_name.Replace(" ", "") + "/");

                        try
                        {
                            HttpPostedFileBase file1 = upd1;
                            ctype1 = file1.ContentType;
                            fileName1 = file1.FileName;
                            path1 = clientid_mst + unitid_mst + userid_mst + currdate + "_" + fileName1;
                            encpath1 = sgen.Convert_Stringto64(path1).ToString();
                            finalpath1 = serverpath + encpath1;
                            file1.SaveAs(finalpath1);
                            filesave(model, currdate, dtfile, fileName1, encpath1, "MOM", ctype1, model[0].Col32, model[0].Col31, "", "");
                        }
                        catch (Exception ex) { }

                        if (dtfile.Rows.Count > 0)
                        {
                            res = sgen.Update_data_fast1(userCode, dtfile, "file_tab", "", false);
                        }

                        #endregion
                        #region mail
                        string mailfrom = "";
                        if (model[0].Chk2 == true)
                        {
                            if ((emailto != "") && (emailto != "0") && (emailto != null))
                            {
                                if ((model[0].Col30 != "") && (model[0].Col30 != "0") && (model[0].Col30 != null))
                                {
                                    emailto = emailto + "," + model[0].Col30;
                                }
                                DataTable datatable = new DataTable();
                                datatable = sgen.getdata(userCode, "select com_email from company_profile where Company_Profile_Id='" + clientid_mst + "' and type='CP'");
                                if (datatable.Rows.Count > 0)
                                {
                                    mailfrom = Convert.ToString(datatable.Rows[0]["com_email"]);
                                }


                                if ((upd1 != null))
                                {
                                    IList<HttpPostedFileBase> fileCollection = new List<HttpPostedFileBase>();
                                    fileCollection.Add(upd1);
                                    sgen.Send_mail_SA_attc(userCode, clientid_mst, unitid_mst, emailto, "", "", model[0].Col20, model[0].Col21, "", fileCollection);
                                }
                                else
                                {
                                    sgen.Send_mail_SA1(userCode, clientid_mst, unitid_mst, emailto, "", "", model[0].Col20, model[0].Col21, "");
                                }

                            }
                        }

                        #endregion

                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col10 = tm.Col10,
                            Col11 = tm.Col11,
                            Col12 = tm.Col12,
                            Col13 = "Save",
                            Col100 = "Save & New",
                            Col121 = "S",
                            Col122 = "<u>S</u>ave",
                            Col123 = "Save & Ne<u>w</u>",
                            Col14 = tm.Col14,
                            Col15 = tm.Col15,
                            Col9 = tm.Col9,


                        });
                        if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                        {
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.scripCall = "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                        {
                            try
                            {
                                model = new_mom(model);
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                            }
                            catch (Exception ex) { }
                        }
                    }
                    else
                    {
                        ViewBag.scripCall = "showmsgJS(1, 'Record Not Saved',0);";
                    }
                }

            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region CRM Summary
        public ActionResult crm_summ()
        {
            FillMst();
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            ViewBag.scripCall = "enableForm();";
            model[0].Col9 = "CRM SUMMARY";
            model[0].Col11 = "and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "'";
            model[0].Col23 = "Account Name";
            model[0].Col24 = "Mobile No.";
            model[0].Col25 = "Email Id";
            List<SelectListItem> md1 = new List<SelectListItem>();
            model[0].SelectedItems1 = new string[] { "" };
            model[0].SelectedItems2 = new string[] { "" };
            TempData[MyGuid + "_TList1"] = model[0].TList1 = md1;
            TempData[MyGuid + "_TList2"] = model[0].TList2 = md1;
            Tmodelmain tm1 = new Tmodelmain();
            tm1.LTM1 = new List<Tmodelmain>();

            Tmodelmain tmltm2 = new Tmodelmain();
            tmltm2.Col1 = "1";
            tm1.LTM1.Add(tmltm2);
            model.Add(tm1);

            model[0].Col48 = "Y";
            model[0].Col49 = "Y";
            model[0].Col50 = "Y";
            model[0].Col51 = "Y";
            if (role_mst != "owner")
            {
                model[0].Col48 = "N";
                model[0].Col49 = "N";
                model[0].Col50 = "N";
                model[0].Col51 = "N";
                DataTable dtr = sgen.getdata(userCode, "select m_id from urights where type='K99' and m_module3='crmvmain' and role in (select role from user_details " +
                " where  type='CPR'  and vch_num='" + userid_mst + "') and m_id in ('400012.1', '400015.1', '400015.2', '40013') ");
                if (dtr.Rows.Count > 0)
                {
                    DataTable dtseek = new DataTable();
                    try
                    {
                        dtseek = sgen.seekval_dt(dtr, "m_id='400012.1'");// ticket
                        if (dtseek.Rows.Count > 0) { model[0].Col48 = "Y"; }
                    }
                    catch { }
                    try
                    {
                        dtseek = sgen.seekval_dt(dtr, "m_id='400015.1'");// call
                        if (dtseek.Rows.Count > 0) { model[0].Col49 = "Y"; }
                    }
                    catch { }
                    try
                    {
                        dtseek = sgen.seekval_dt(dtr, "m_id='40013'");// mom
                        if (dtseek.Rows.Count > 0) { model[0].Col50 = "Y"; }
                    }
                    catch { }
                    try
                    {
                        dtseek = sgen.seekval_dt(dtr, "400015.3'");// appointment
                        if (dtseek.Rows.Count > 0) { model[0].Col51 = "Y"; }
                    }
                    catch { }
                }
            }
            if (sgen.GetSession(MyGuid, "crm_summ") != null)
            {
                model = CallbackFun("PARENT", "N", "crm_summ", "vastu", model);
                if (sgen.GetSession(MyGuid, "crm_summ_comm") != null)
                {
                    string cmd = sgen.GetSession(MyGuid, "crm_summ_comm").ToString();
                    model = crm_summ_dt(model, cmd, "");

                }
            }


            return View(model);
        }

        public List<Tmodelmain> crm_summ_dt(List<Tmodelmain> model, string command, string loadtype)
        {
            try
            {
                string acc_cond = "", ct_cond = "";
                var tm = model.FirstOrDefault();

                DataTable dt = new DataTable();
                if ((model[0].SelectedItems1.FirstOrDefault() != null) && model[0].SelectedItems1.FirstOrDefault() != "")
                {
                    acc_cond = " and vch_num='" + model[0].SelectedItems1.FirstOrDefault() + "'";
                }
                if ((model[0].SelectedItems2.FirstOrDefault() != null) && model[0].SelectedItems2.FirstOrDefault() != "")
                {
                    ct_cond = " and vch_num='" + model[0].SelectedItems2.FirstOrDefault() + "'";
                }

                if ((command == "Accounts") || (loadtype == "Accounts"))
                {


                    mq = "select vch_num||to_char(vch_date,'yyyymmdd')||type fstr,vch_num, c_name,(case when org_mobile=0 then '-' else org_mobile end ) org_mobile," +
                        " (case when comp_email='ab@ab.ab' then '-' else comp_email end ) comp_email from clients_mst where type='BCD' and client_unit_id='" + unitid_mst + "'" +
                        " and parent_id='" + model[0].Col16 + "' and substr(vch_num,0,3)='303' " + acc_cond + "";

                    dt = new DataTable();
                    dt = sgen.getdata(userCode, mq);


                    var dtmin = new DataTable();
                    if (loadtype == "")
                    {
                        dt = new DataTable();
                        dt = sgen.getdata(userCode, mq);
                        mq1 = ""; mq2 = ""; mq3 = "";
                        sgen.SetSession(MyGuid, "Account_List", dt);
                        if (dt.Rows.Count <= 5)
                        {
                            dtmin = dt;
                            mq1 = "N"; mq2 = "N"; mq3 = dt.Rows.Count.ToString();
                        }
                        else
                        {
                            dtmin = dt.AsEnumerable().Take(5).CopyToDataTable();
                            mq1 = "Y"; mq2 = "Y"; mq3 = "5";
                        }
                        model = new List<Tmodelmain>();
                        if (dtmin.Rows.Count > 0)
                        {

                            for (int i = 0; i < dtmin.Rows.Count; i++)
                            {


                                Tmodelmain tmm = new Tmodelmain();
                                tmm.Col9 = tm.Col9;
                                tmm.Col10 = tm.Col10;
                                tmm.Col11 = tm.Col11;
                                tmm.Col12 = tm.Col12;
                                tmm.Col14 = tm.Col14;
                                tmm.Col15 = tm.Col15;
                                tmm.Col16 = tm.Col16;
                                tmm.Col17 = tm.Col17;
                                tmm.Col18 = tm.Col18;
                                tmm.Col19 = tm.Col19;
                                tmm.Col20 = tm.Col20;
                                tmm.Col21 = tm.Col21;
                                tmm.Col22 = tm.Col22;
                                tmm.Col33 = tm.Col33;
                                tmm.Col34 = tm.Col34;
                                tmm.Col48 = tm.Col48;
                                tmm.Col49 = tm.Col49;
                                tmm.Col50 = tm.Col50;
                                tmm.Col51 = tm.Col51;
                                tmm.Col35 = "Accounts Detail";
                                tmm.Col31 = "Account No.";
                                tmm.Col23 = "Account Name";
                                tmm.Col24 = "Mobile No.";
                                tmm.Col25 = "Email Id";
                                tmm.Col26 = dtmin.Rows[i]["fstr"].ToString();
                                tmm.Col32 = dtmin.Rows[i]["vch_num"].ToString();
                                tmm.Col27 = dtmin.Rows[i]["c_name"].ToString();
                                tmm.Col28 = dtmin.Rows[i]["org_mobile"].ToString();
                                tmm.Col29 = dtmin.Rows[i]["comp_email"].ToString();

                                tmm.SelectedItems1 = tm.SelectedItems1;
                                tmm.TList1 = tm.TList1;
                                tmm.SelectedItems2 = tm.SelectedItems2;
                                tmm.TList2 = tm.TList2;

                                tmm.Col30 = command;
                                tmm.Col40 = mq1;
                                tmm.Col41 = mq2;
                                tmm.Col42 = mq3;
                                tmm.Col43 = mq3;

                                model.Add(tmm);
                            }

                        }

                        else
                        {
                            Tmodelmain tmm = new Tmodelmain();
                            tmm.Col9 = tm.Col9;
                            tmm.Col10 = tm.Col10;
                            tmm.Col11 = tm.Col11;
                            tmm.Col12 = tm.Col12;
                            tmm.Col14 = tm.Col14;
                            tmm.Col15 = tm.Col15;
                            tmm.Col16 = tm.Col16;
                            tmm.Col17 = tm.Col17;
                            tmm.Col18 = tm.Col18;
                            tmm.Col19 = tm.Col19;
                            tmm.Col20 = tm.Col20;
                            tmm.Col21 = tm.Col21;
                            tmm.Col22 = tm.Col22;
                            tmm.Col33 = tm.Col33;
                            tmm.Col34 = tm.Col34;
                            tmm.SelectedItems1 = tm.SelectedItems1;
                            tmm.TList1 = tm.TList1;
                            tmm.SelectedItems2 = tm.SelectedItems2;
                            tmm.TList2 = tm.TList2;

                            tmm.Col30 = command;
                            tmm.Col40 = mq1;
                            tmm.Col41 = mq2;
                            tmm.Col42 = mq3;
                            tmm.Col43 = mq3;
                            tmm.Col48 = tm.Col48;
                            tmm.Col49 = tm.Col49;
                            tmm.Col50 = tm.Col50;
                            tmm.Col51 = tm.Col51;

                            model.Add(tmm);
                        }
                    }
                    else
                    {
                        int cnt = 0, totcnt = 0, skipcnt = 0;
                        dt = (DataTable)sgen.GetSession(MyGuid, "Account_List");
                        if (dt.Rows.Count > 0)
                        {
                            dtmin = new DataTable();
                            model[0].Col40 = "N";//hf_btnshow
                            skipcnt = sgen.Make_int(model[0].Col42);
                            cnt = dt.AsEnumerable().Skip(skipcnt).Count();
                            if (cnt > 5)
                            {
                                model[0].Col40 = "Y";//hf_btnshow
                                cnt = skipcnt;
                            }
                            if (model[0].Col41 == "Y")//hf_str
                            {
                                model[0].Col41 = "N";//hf_str
                            }
                            else
                            {
                                model[0].Col41 = "N";//hf_str                                              
                            }
                            totcnt = skipcnt + cnt;
                            model[0].Col42 = totcnt.ToString();//hf_totcnt
                            model[0].Col43 = cnt.ToString();//hf_loadcnt
                            dtmin = dt.AsEnumerable().Skip(skipcnt).Take(cnt).CopyToDataTable();

                            if (dtmin.Rows.Count > 0)
                            {
                                foreach (DataRow dr in dtmin.Rows)
                                {
                                    model.Add(new Tmodelmain
                                    {
                                        Col9 = tm.Col9,
                                        Col10 = tm.Col10,
                                        Col11 = tm.Col11,
                                        Col12 = tm.Col12,
                                        Col14 = tm.Col14,
                                        Col15 = tm.Col15,
                                        Col16 = tm.Col16,
                                        Col17 = tm.Col17,
                                        Col18 = tm.Col18,
                                        Col19 = tm.Col19,
                                        Col20 = tm.Col20,
                                        Col21 = tm.Col21,
                                        Col22 = tm.Col22,
                                        Col33 = tm.Col33,
                                        Col34 = tm.Col34,
                                        Col48 = tm.Col48,
                                        Col49 = tm.Col49,
                                        Col50 = tm.Col50,
                                        Col51 = tm.Col51,

                                        Col35 = "Accounts Detail",
                                        Col31 = "Account No. / Name",
                                        Col23 = "Account Name",
                                        Col24 = "Mobile No.",
                                        Col25 = "Email Id",
                                        SelectedItems1 = tm.SelectedItems1,
                                        TList1 = tm.TList1,
                                        SelectedItems2 = tm.SelectedItems2,
                                        TList2 = tm.TList2,
                                        Col26 = dr["fstr"].ToString(),
                                        Col27 = dr["c_name"].ToString(),
                                        Col28 = dr["org_mobile"].ToString(),
                                        Col29 = dr["comp_email"].ToString(),
                                        Col32 = dr["vch_num"].ToString(),
                                        Col30 = command,

                                    });
                                }
                            }

                        }
                    }
                }
                else if ((command == "Contacts") || (loadtype == "Contacts"))
                {
                    //sgen.SetSession(MyGuid, "crm_summ_comm", null);
                    mq = "select ct.ref_code||to_char(ct.vch_date,'yyyymmdd')||ct.type fstr,ct.ref_code ,ct.vch_num cp_id,a.c_name,(replace(ct.cpname,'0','') || replace(nvl(ct.cp_mname,'0'),0,'') || replace(nvl(ct.cp_lname,''),0,'')) cp_name " +
                        ", (case when ct.cplandno = '0000000000' then '-' else ct.cplandno end) CP_MOBILE_NO  , (case when ct.cpemail = 'ab@ab.ab' then '-' else ct.cpemail end) CP_EMAIL_ID " +
                        " from clients_mst ct inner join clients_mst a on a.vch_num = ct.ref_code and find_in_set(a.client_unit_id,'" + unitid_mst + "')= 1 and a.type in ('BCD') where ct.type = 'BCD'" +
                        " and ct.client_unit_id = '" + unitid_mst + "' and substr(ct.ref_code,0,3)= '303' and ct.ref_code in (select distinct vch_num from clients_mst a where a.type = 'BCD' and" +
                        " a.client_unit_id = '" + unitid_mst + "' and substr(a.vch_num,0,3)= '303' and parent_id = '" + model[0].Col16 + "' " + acc_cond + " " + ct_cond + ") ";

                    dt = new DataTable();
                    dt = sgen.getdata(userCode, mq);


                    var dtmin = new DataTable();
                    if (loadtype == "")
                    {
                        dt = new DataTable();
                        dt = sgen.getdata(userCode, mq);
                        mq1 = ""; mq2 = ""; mq3 = "";
                        sgen.SetSession(MyGuid, "Contact_List", dt);
                        if (dt.Rows.Count <= 5)
                        {
                            dtmin = dt;
                            mq1 = "N"; mq2 = "N"; mq3 = dt.Rows.Count.ToString();
                        }
                        else
                        {
                            dtmin = dt.AsEnumerable().Take(5).CopyToDataTable();
                            mq1 = "Y"; mq2 = "Y"; mq3 = "5";
                        }
                        model = new List<Tmodelmain>();
                        if (dtmin.Rows.Count > 0)
                        {

                            for (int i = 0; i < dtmin.Rows.Count; i++)
                            {

                                Tmodelmain tmm = new Tmodelmain();
                                tmm.Col9 = tm.Col9;
                                tmm.Col10 = tm.Col10;
                                tmm.Col11 = tm.Col11;
                                tmm.Col12 = tm.Col12;
                                tmm.Col14 = tm.Col14;
                                tmm.Col15 = tm.Col15;
                                tmm.Col16 = tm.Col16;
                                tmm.Col17 = tm.Col17;
                                tmm.Col18 = tm.Col18;
                                tmm.Col19 = tm.Col19;
                                tmm.Col20 = tm.Col20;
                                tmm.Col21 = tm.Col21;
                                tmm.Col22 = tm.Col22;
                                tmm.Col33 = tm.Col33;
                                tmm.Col34 = tm.Col34;
                                tmm.Col48 = tm.Col48;
                                tmm.Col49 = tm.Col49;
                                tmm.Col50 = tm.Col50;
                                tmm.Col51 = tm.Col51;
                                tmm.Col35 = "Contacts Detail";
                                tmm.Col31 = "Account No. / Name";
                                tmm.Col23 = "Contact Person";
                                tmm.Col24 = "Mobile No.";
                                tmm.Col25 = "Email Id";

                                tmm.Col26 = dt.Rows[i]["fstr"].ToString();
                                tmm.Col32 = dt.Rows[i]["ref_code"].ToString() + " / " + dt.Rows[i]["c_name"].ToString();
                                tmm.Col27 = dt.Rows[i]["cp_name"].ToString();
                                tmm.Col28 = dt.Rows[i]["CP_MOBILE_NO"].ToString();
                                tmm.Col29 = dt.Rows[i]["CP_EMAIL_ID"].ToString();
                                tmm.Col30 = command;
                                tmm.SelectedItems1 = tm.SelectedItems1;
                                tmm.TList1 = tm.TList1;
                                tmm.SelectedItems2 = tm.SelectedItems2;
                                tmm.TList2 = tm.TList2;
                                tmm.Col36 = dt.Rows[i]["ref_code"].ToString();
                                tmm.Col37 = dt.Rows[i]["cp_id"].ToString();

                                tmm.Col40 = mq1;
                                tmm.Col41 = mq2;
                                tmm.Col42 = mq3;
                                tmm.Col43 = mq3;
                                tmm.Col48 = tm.Col48;
                                tmm.Col49 = tm.Col49;
                                tmm.Col50 = tm.Col50;
                                tmm.Col51 = tm.Col51;

                                model.Add(tmm);
                            }

                        }
                        else
                        {
                            Tmodelmain tmm = new Tmodelmain();
                            tmm.Col9 = tm.Col9;
                            tmm.Col10 = tm.Col10;
                            tmm.Col11 = tm.Col11;
                            tmm.Col12 = tm.Col12;
                            tmm.Col14 = tm.Col14;
                            tmm.Col15 = tm.Col15;
                            tmm.Col16 = tm.Col16;
                            tmm.Col17 = tm.Col17;
                            tmm.Col18 = tm.Col18;
                            tmm.Col19 = tm.Col19;
                            tmm.Col20 = tm.Col20;
                            tmm.Col21 = tm.Col21;
                            tmm.Col22 = tm.Col22;
                            tmm.Col33 = tm.Col33;
                            tmm.Col34 = tm.Col34;
                            tmm.SelectedItems1 = tm.SelectedItems1;
                            tmm.TList1 = tm.TList1;
                            tmm.SelectedItems2 = tm.SelectedItems2;
                            tmm.TList2 = tm.TList2;

                            tmm.Col30 = command;
                            tmm.Col40 = mq1;
                            tmm.Col41 = mq2;
                            tmm.Col42 = mq3;
                            tmm.Col43 = mq3;

                            model.Add(tmm);
                        }
                    }
                    else
                    {
                        int cnt = 0, totcnt = 0, skipcnt = 0;
                        dt = (DataTable)sgen.GetSession(MyGuid, "Contact_List");
                        if (dt.Rows.Count > 0)
                        {
                            dtmin = new DataTable();
                            model[0].Col40 = "N";//hf_btnshow
                            skipcnt = sgen.Make_int(model[0].Col42);
                            cnt = dt.AsEnumerable().Skip(skipcnt).Count();
                            if (cnt > 5)
                            {
                                model[0].Col40 = "Y";//hf_btnshow
                                cnt = skipcnt;
                            }
                            if (model[0].Col41 == "Y")//hf_str
                            {
                                model[0].Col41 = "N";//hf_str
                            }
                            else
                            {
                                model[0].Col41 = "N";//hf_str                                              
                            }
                            totcnt = skipcnt + cnt;
                            model[0].Col42 = totcnt.ToString();//hf_totcnt
                            model[0].Col43 = cnt.ToString();//hf_loadcnt
                            dtmin = dt.AsEnumerable().Skip(skipcnt).Take(cnt).CopyToDataTable();

                            if (dtmin.Rows.Count > 0)
                            {
                                foreach (DataRow dr in dtmin.Rows)
                                {
                                    model.Add(new Tmodelmain
                                    {
                                        Col9 = tm.Col9,
                                        Col10 = tm.Col10,
                                        Col11 = tm.Col11,
                                        Col12 = tm.Col12,
                                        Col14 = tm.Col14,
                                        Col15 = tm.Col15,
                                        Col16 = tm.Col16,
                                        Col17 = tm.Col17,
                                        Col18 = tm.Col18,
                                        Col19 = tm.Col19,
                                        Col20 = tm.Col20,
                                        Col21 = tm.Col21,
                                        Col22 = tm.Col22,
                                        Col33 = tm.Col33,
                                        Col34 = tm.Col34,
                                        Col48 = tm.Col48,
                                        Col49 = tm.Col49,
                                        Col50 = tm.Col50,
                                        Col51 = tm.Col51,
                                        Col35 = "Contacts Detail",
                                        Col31 = "Account No. / Name",
                                        Col23 = "Contact Person",
                                        Col24 = "Mobile No.",
                                        Col25 = "Email Id",
                                        SelectedItems1 = tm.SelectedItems1,
                                        TList1 = tm.TList1,
                                        SelectedItems2 = tm.SelectedItems2,
                                        TList2 = tm.TList2,
                                        Col26 = dr["fstr"].ToString(),
                                        Col27 = dr["cp_name"].ToString(),
                                        Col28 = dr["CP_MOBILE_NO"].ToString(),
                                        Col29 = dr["CP_EMAIL_ID"].ToString(),
                                        Col32 = dr["ref_code"].ToString() + " / " + dr["c_name"].ToString(),
                                        Col36 = dr["ref_code"].ToString(),
                                        Col37 = dr["cp_id"].ToString(),
                                        Col30 = command,



                                    });
                                }
                            }

                        }
                    }
                }
                else if ((command == "Leads") || (loadtype == "Leads"))
                {
                    sgen.SetSession(MyGuid, "crm_summ_comm", command);
                    mq = "select  (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) fstr, a.cust_id,a.vch_num lead_no, to_char(a.vch_date,'dd/MM/YYYY') lead_date, b.c_name,(case when b.org_mobile=0 then '-' else b.org_mobile end )" +
                        " org_mobile,(case when b.comp_email='ab@ab.ab' then '-' else b.comp_email end ) comp_email,(replace(ct.cpname,'0','') || replace(nvl(ct.cp_mname,'0'),0,'') || replace(nvl(ct.cp_lname,''),0,'')) cp_name,a.cp_id  , (case when ct.cplandno = '0000000000' then '-' else ct.cplandno end) CP_MOBILE_NO  , (case when ct.cpemail = 'ab@ab.ab' then '-' else ct.cpemail end) CP_EMAIL_ID from lead_master a inner join clients_mst b " +
                        "on a.cust_id= b.vch_num and b.type='BCD' and find_in_set(b.client_unit_id,'" + unitid_mst + "')=1  left join clients_mst ct" +
                        " on a.cust_id = ct.ref_code and a.cp_id=ct.vch_num and find_in_set(ct.client_unit_id,'" + unitid_mst + "')=1 and ct.type='BCD' where a.type='LED' and" +
                        " a.client_unit_id='" + unitid_mst + "' and a.cust_id in  (select distinct vch_num from clients_mst a where a.type='BCD' " +
                        "and a.client_unit_id='" + unitid_mst + "' and substr(a.vch_num,0,3)= '303' and parent_id = '" + model[0].Col16 + "' " + acc_cond + ") " + ct_cond.Replace("vch_num", "cp_id") + " order by a.vch_num desc";

                    dt = new DataTable();
                    dt = sgen.getdata(userCode, mq);


                    var dtmin = new DataTable();
                    if (loadtype == "")
                    {
                        dt = new DataTable();
                        dt = sgen.getdata(userCode, mq);
                        mq1 = ""; mq2 = ""; mq3 = "";
                        sgen.SetSession(MyGuid, "lead_List", dt);
                        if (dt.Rows.Count <= 5)
                        {
                            dtmin = dt;
                            mq1 = "N"; mq2 = "N"; mq3 = dt.Rows.Count.ToString();
                        }
                        else
                        {
                            dtmin = dt.AsEnumerable().Take(5).CopyToDataTable();
                            mq1 = "Y"; mq2 = "Y"; mq3 = "5";
                        }
                        model = new List<Tmodelmain>();
                        if (dtmin.Rows.Count > 0)
                        {

                            for (int i = 0; i < dtmin.Rows.Count; i++)
                            {
                                Tmodelmain tmm = new Tmodelmain();
                                tmm.Col9 = tm.Col9;
                                tmm.Col10 = tm.Col10;
                                tmm.Col11 = tm.Col11;
                                tmm.Col12 = tm.Col12;
                                tmm.Col14 = tm.Col14;
                                tmm.Col15 = tm.Col15;
                                tmm.Col16 = tm.Col16;
                                tmm.Col17 = tm.Col17;
                                tmm.Col18 = tm.Col18;
                                tmm.Col19 = tm.Col19;
                                tmm.Col20 = tm.Col20;
                                tmm.Col21 = tm.Col21;
                                tmm.Col22 = tm.Col22;
                                tmm.Col33 = tm.Col33;
                                tmm.Col34 = tm.Col34;
                                tmm.Col48 = tm.Col48;
                                tmm.Col49 = tm.Col49;
                                tmm.Col50 = tm.Col50;
                                tmm.Col51 = tm.Col51;
                                tmm.SelectedItems1 = tm.SelectedItems1;
                                tmm.TList1 = tm.TList1;
                                tmm.SelectedItems2 = tm.SelectedItems2;
                                tmm.TList2 = tm.TList2;
                                tmm.Col35 = "Lead Detail";
                                tmm.Col31 = "Account No. / Name / Contact Person";
                                tmm.Col23 = "Lead No.";
                                tmm.Col24 = "Mobile No.";
                                tmm.Col25 = "Email Id";



                                tmm.Col26 = dtmin.Rows[i]["fstr"].ToString();
                                tmm.Col27 = dtmin.Rows[i]["lead_no"].ToString();
                                tmm.Col28 = dtmin.Rows[i]["CP_MOBILE_NO"].ToString();
                                tmm.Col29 = dtmin.Rows[i]["CP_EMAIL_ID"].ToString();
                                tmm.Col32 = dtmin.Rows[i]["cust_id"].ToString() + " / " + dtmin.Rows[i]["c_name"].ToString() + " / " + dtmin.Rows[i]["cp_name"].ToString(); ;
                                tmm.Col36 = dtmin.Rows[i]["cust_id"].ToString();
                                tmm.Col37 = dtmin.Rows[i]["cp_id"].ToString();


                                tmm.Col30 = command;
                                tmm.Col40 = mq1;
                                tmm.Col41 = mq2;
                                tmm.Col42 = mq3;
                                tmm.Col43 = mq3;

                                model.Add(tmm);
                            }

                        }
                        else
                        {
                            Tmodelmain tmm = new Tmodelmain();
                            tmm.Col9 = tm.Col9;
                            tmm.Col10 = tm.Col10;
                            tmm.Col11 = tm.Col11;
                            tmm.Col12 = tm.Col12;
                            tmm.Col14 = tm.Col14;
                            tmm.Col15 = tm.Col15;
                            tmm.Col16 = tm.Col16;
                            tmm.Col17 = tm.Col17;
                            tmm.Col18 = tm.Col18;
                            tmm.Col19 = tm.Col19;
                            tmm.Col20 = tm.Col20;
                            tmm.Col21 = tm.Col21;
                            tmm.Col22 = tm.Col22;
                            tmm.Col33 = tm.Col33;
                            tmm.Col34 = tm.Col34;
                            tmm.SelectedItems1 = tm.SelectedItems1;
                            tmm.TList1 = tm.TList1;
                            tmm.SelectedItems2 = tm.SelectedItems2;
                            tmm.TList2 = tm.TList2;

                            tmm.Col30 = command;
                            tmm.Col40 = mq1;
                            tmm.Col41 = mq2;
                            tmm.Col42 = mq3;
                            tmm.Col43 = mq3;
                            tmm.Col48 = tm.Col48;
                            tmm.Col49 = tm.Col49;
                            tmm.Col50 = tm.Col50;
                            tmm.Col51 = tm.Col51;

                            model.Add(tmm);
                        }
                    }
                    else
                    {
                        int cnt = 0, totcnt = 0, skipcnt = 0;
                        dt = (DataTable)sgen.GetSession(MyGuid, "lead_List");
                        if (dt.Rows.Count > 0)
                        {
                            dtmin = new DataTable();
                            model[0].Col40 = "N";//hf_btnshow
                            skipcnt = sgen.Make_int(model[0].Col42);
                            cnt = dt.AsEnumerable().Skip(skipcnt).Count();
                            if (cnt > 5)
                            {
                                model[0].Col40 = "Y";//hf_btnshow
                                cnt = skipcnt;
                            }
                            if (model[0].Col41 == "Y")//hf_str
                            {
                                model[0].Col41 = "N";//hf_str
                            }
                            else
                            {
                                model[0].Col41 = "N";//hf_str                                              
                            }
                            totcnt = skipcnt + cnt;
                            model[0].Col42 = totcnt.ToString();//hf_totcnt
                            model[0].Col43 = cnt.ToString();//hf_loadcnt
                            dtmin = dt.AsEnumerable().Skip(skipcnt).Take(cnt).CopyToDataTable();

                            if (dtmin.Rows.Count > 0)
                            {
                                foreach (DataRow dr in dtmin.Rows)
                                {
                                    model.Add(new Tmodelmain
                                    {
                                        Col9 = tm.Col9,
                                        Col10 = tm.Col10,
                                        Col11 = tm.Col11,
                                        Col12 = tm.Col12,
                                        Col14 = tm.Col14,
                                        Col15 = tm.Col15,
                                        Col16 = tm.Col16,
                                        Col17 = tm.Col17,
                                        Col18 = tm.Col18,
                                        Col19 = tm.Col19,
                                        Col20 = tm.Col20,
                                        Col21 = tm.Col21,
                                        Col22 = tm.Col22,
                                        Col33 = tm.Col33,
                                        Col34 = tm.Col34,
                                        Col48 = tm.Col48,
                                        Col49 = tm.Col49,
                                        Col50 = tm.Col50,
                                        Col51 = tm.Col51,
                                        Col35 = "Lead Detail",
                                        Col31 = "Account No. / Name / Contact Person",
                                        Col23 = "Lead No.",
                                        Col24 = "Mobile No.",
                                        Col25 = "Email Id",
                                        SelectedItems1 = tm.SelectedItems1,
                                        TList1 = tm.TList1,
                                        SelectedItems2 = tm.SelectedItems2,
                                        TList2 = tm.TList2,
                                        Col26 = dr["fstr"].ToString(),
                                        Col27 = dr["lead_no"].ToString(),
                                        Col28 = dr["CP_MOBILE_NO"].ToString(),
                                        Col29 = dr["CP_EMAIL_ID"].ToString(),
                                        Col32 = dr["cust_id"].ToString() + " / " + dr["c_name"].ToString() + " / " + dr["cp_name"].ToString(),
                                        Col30 = command,
                                        Col36 = dr["cust_id"].ToString(),
                                        Col37 = dr["cp_id"].ToString(),
                                        Col38 = dr["cp_name"].ToString(),





                                    });
                                }
                            }

                        }
                    }
                }
                else if ((command == "Ticket") || (loadtype == "Ticket"))
                {
                    sgen.SetSession(MyGuid, "crm_summ_comm", command);
                    mq = "select  (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) fstr,a.cust_id, a.vch_num tck_no, to_char(a.vch_date,'dd/MM/YYYY') tck_date, b.c_name,(case when b.org_mobile=0 then '-' else b.org_mobile end )" +
                                            " org_mobile,(case when b.comp_email='ab@ab.ab' then '-' else b.comp_email end ) comp_email , a.CP_FNAME cp_id,(replace(ct.cpname,'0','') || replace(nvl(ct.cp_mname,'0'),0,'') || replace(nvl(ct.cp_lname,''),0,'')) cp_name  , (case when ct.cplandno = '0000000000' then '-' else ct.cplandno end) CP_MOBILE_NO  , (case when ct.cpemail = 'ab@ab.ab' then '-' else ct.cpemail end) CP_EMAIL_ID from lead_master a inner join clients_mst b " +
                                            "on a.cust_id= b.vch_num and b.type='BCD' and find_in_set(b.client_unit_id,'" + unitid_mst + "')=1 " +
                                            " inner  join clients_mst ct on a.cust_id = ct.ref_code and a.CP_FNAME=ct.vch_num and find_in_set(ct.client_unit_id,'" + unitid_mst + "')=1 and ct.type='BCD' where a.type='TCK' and" +
                                            " a.client_unit_id='" + unitid_mst + "' and a.cust_id in  (select distinct vch_num from clients_mst a where a.type='BCD' " +
                                            "and a.client_unit_id='" + unitid_mst + "' and substr(a.vch_num,0,3)= '303' and parent_id = '" + model[0].Col16 + "' " + acc_cond + ") " + ct_cond.Replace("vch_num", "cp_fname") + " order by a.vch_num desc";

                    dt = new DataTable();
                    dt = sgen.getdata(userCode, mq);


                    var dtmin = new DataTable();
                    if (loadtype == "")
                    {
                        dt = new DataTable();
                        dt = sgen.getdata(userCode, mq);
                        mq1 = ""; mq2 = ""; mq3 = "";
                        sgen.SetSession(MyGuid, "Ticket_List", dt);
                        if (dt.Rows.Count <= 5)
                        {
                            dtmin = dt;
                            mq1 = "N"; mq2 = "N"; mq3 = dt.Rows.Count.ToString();
                        }
                        else
                        {
                            dtmin = dt.AsEnumerable().Take(5).CopyToDataTable();
                            mq1 = "Y"; mq2 = "Y"; mq3 = "5";
                        }
                        model = new List<Tmodelmain>();
                        if (dtmin.Rows.Count > 0)
                        {

                            for (int i = 0; i < dtmin.Rows.Count; i++)
                            {


                                Tmodelmain tmm = new Tmodelmain();
                                tmm.Col9 = tm.Col9;
                                tmm.Col10 = tm.Col10;
                                tmm.Col11 = tm.Col11;
                                tmm.Col12 = tm.Col12;
                                tmm.Col14 = tm.Col14;
                                tmm.Col15 = tm.Col15;
                                tmm.Col16 = tm.Col16;
                                tmm.Col17 = tm.Col17;
                                tmm.Col18 = tm.Col18;
                                tmm.Col19 = tm.Col19;
                                tmm.Col20 = tm.Col20;
                                tmm.Col21 = tm.Col21;
                                tmm.Col22 = tm.Col22;
                                tmm.Col33 = tm.Col33;
                                tmm.Col34 = tm.Col34;
                                tmm.Col48 = tm.Col48;
                                tmm.Col49 = tm.Col49;
                                tmm.Col50 = tm.Col50;
                                tmm.Col51 = tm.Col51;
                                tmm.Col35 = "Tickets Detail";
                                tmm.Col31 = "Account No. / Name / Contact Person";
                                tmm.Col23 = "Ticket No.";
                                tmm.Col24 = "Mobile No.";
                                tmm.Col25 = "Email Id";


                                tmm.Col26 = dtmin.Rows[i]["fstr"].ToString();
                                tmm.Col27 = dtmin.Rows[i]["tck_no"].ToString();
                                tmm.Col28 = dtmin.Rows[i]["CP_MOBILE_NO"].ToString();
                                tmm.Col29 = dtmin.Rows[i]["CP_EMAIL_ID"].ToString();
                                tmm.Col32 = dtmin.Rows[i]["cust_id"].ToString() + " / " + dtmin.Rows[i]["c_name"].ToString() + " / " + dtmin.Rows[i]["cp_name"].ToString(); ;
                                tmm.Col36 = dtmin.Rows[i]["cust_id"].ToString();
                                tmm.Col37 = dtmin.Rows[i]["cp_id"].ToString();
                                tmm.SelectedItems1 = tm.SelectedItems1;
                                tmm.TList1 = tm.TList1;
                                tmm.SelectedItems2 = tm.SelectedItems2;
                                tmm.TList2 = tm.TList2;

                                tmm.Col30 = command;
                                tmm.Col40 = mq1;
                                tmm.Col41 = mq2;
                                tmm.Col42 = mq3;
                                tmm.Col43 = mq3;

                                model.Add(tmm);
                            }

                        }
                        else
                        {
                            Tmodelmain tmm = new Tmodelmain();
                            tmm.Col9 = tm.Col9;
                            tmm.Col10 = tm.Col10;
                            tmm.Col11 = tm.Col11;
                            tmm.Col12 = tm.Col12;
                            tmm.Col14 = tm.Col14;
                            tmm.Col15 = tm.Col15;
                            tmm.Col16 = tm.Col16;
                            tmm.Col17 = tm.Col17;
                            tmm.Col18 = tm.Col18;
                            tmm.Col19 = tm.Col19;
                            tmm.Col20 = tm.Col20;
                            tmm.Col21 = tm.Col21;
                            tmm.Col22 = tm.Col22;
                            tmm.Col33 = tm.Col33;
                            tmm.Col34 = tm.Col34;
                            tmm.SelectedItems1 = tm.SelectedItems1;
                            tmm.TList1 = tm.TList1;
                            tmm.SelectedItems2 = tm.SelectedItems2;
                            tmm.TList2 = tm.TList2;

                            tmm.Col30 = command;
                            tmm.Col40 = mq1;
                            tmm.Col41 = mq2;
                            tmm.Col42 = mq3;
                            tmm.Col43 = mq3;
                            tmm.Col48 = tm.Col48;
                            tmm.Col49 = tm.Col49;
                            tmm.Col50 = tm.Col50;
                            tmm.Col51 = tm.Col51;

                            model.Add(tmm);
                        }
                    }
                    else
                    {
                        int cnt = 0, totcnt = 0, skipcnt = 0;
                        dt = (DataTable)sgen.GetSession(MyGuid, "Ticket_List");
                        if (dt.Rows.Count > 0)
                        {
                            dtmin = new DataTable();
                            model[0].Col40 = "N";//hf_btnshow
                            skipcnt = sgen.Make_int(model[0].Col42);
                            cnt = dt.AsEnumerable().Skip(skipcnt).Count();
                            if (cnt > 5)
                            {
                                model[0].Col40 = "Y";//hf_btnshow
                                cnt = skipcnt;
                            }
                            if (model[0].Col41 == "Y")//hf_str
                            {
                                model[0].Col41 = "N";//hf_str
                            }
                            else
                            {
                                model[0].Col41 = "N";//hf_str                                              
                            }
                            totcnt = skipcnt + cnt;
                            model[0].Col42 = totcnt.ToString();//hf_totcnt
                            model[0].Col43 = cnt.ToString();//hf_loadcnt
                            dtmin = dt.AsEnumerable().Skip(skipcnt).Take(cnt).CopyToDataTable();

                            if (dtmin.Rows.Count > 0)
                            {
                                foreach (DataRow dr in dtmin.Rows)
                                {
                                    model.Add(new Tmodelmain
                                    {
                                        Col9 = tm.Col9,
                                        Col10 = tm.Col10,
                                        Col11 = tm.Col11,
                                        Col12 = tm.Col12,
                                        Col14 = tm.Col14,
                                        Col15 = tm.Col15,
                                        Col16 = tm.Col16,
                                        Col17 = tm.Col17,
                                        Col18 = tm.Col18,
                                        Col19 = tm.Col19,
                                        Col20 = tm.Col20,
                                        Col21 = tm.Col21,
                                        Col22 = tm.Col22,
                                        Col33 = tm.Col33,
                                        Col34 = tm.Col34,
                                        Col48 = tm.Col48,
                                        Col49 = tm.Col49,
                                        Col50 = tm.Col50,
                                        Col51 = tm.Col51,
                                        Col35 = "Tickets Detail",
                                        Col31 = "Account No. / Name / Contact Person",
                                        Col23 = "Ticket No.",
                                        Col24 = "Mobile No.",
                                        Col25 = "Email Id",
                                        SelectedItems1 = tm.SelectedItems1,
                                        TList1 = tm.TList1,
                                        SelectedItems2 = tm.SelectedItems2,
                                        TList2 = tm.TList2,
                                        Col26 = dr["fstr"].ToString(),
                                        Col27 = dr["tck_no"].ToString(),
                                        Col28 = dr["CP_MOBILE_NO"].ToString(),
                                        Col29 = dr["CP_EMAIL_ID"].ToString(),
                                        Col32 = dr["cust_id"].ToString() + " / " + dr["c_name"].ToString() + " / " + dr["cp_name"].ToString(),
                                        Col30 = command,
                                        Col36 = dr["cust_id"].ToString(),
                                        Col37 = dr["cp_id"].ToString(),


                                    });
                                }
                            }

                        }
                    }
                }
                else if ((command == "Mom") || (loadtype == "Mom"))
                {
                    sgen.SetSession(MyGuid, "crm_summ_comm", command);
                    mq = "select  (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) fstr, a.cust_id, a.vch_num mom_no, to_char(a.vch_date,'dd/MM/YYYY') mom_date, b.c_name,(case when b.org_mobile=0 then '-' else b.org_mobile end )" +
                                            " org_mobile,(case when b.comp_email='ab@ab.ab' then '-' else b.comp_email end ) comp_email , a.CP_FNAME cp_id ,(replace(ct.cpname,'0','') || replace(nvl(ct.cp_mname,'0'),0,'') || replace(nvl(ct.cp_lname,''),0,'')) cp_name  , (case when ct.cplandno = '0000000000' then '-' else ct.cplandno end) CP_MOBILE_NO  , (case when ct.cpemail = 'ab@ab.ab' then '-' else ct.cpemail end) CP_EMAIL_ID from lead_master a inner join clients_mst b " +
                                            "on a.cust_id= b.vch_num and b.type='BCD' and find_in_set(b.client_unit_id,'" + unitid_mst + "')=1 " +
                                            "inner  join clients_mst ct on a.cust_id = ct.ref_code and a.CP_FNAME=ct.vch_num and find_in_set(ct.client_unit_id,'" + unitid_mst + "')=1 and ct.type='BCD'  where a.type='MOM' and" +
                                            " a.client_unit_id='" + unitid_mst + "' and a.cust_id in  (select distinct vch_num from clients_mst a where a.type='BCD' " +
                                            "and a.client_unit_id='" + unitid_mst + "' and substr(a.vch_num,0,3)= '303' and parent_id = '" + model[0].Col16 + "' " + acc_cond + ") " + ct_cond.Replace("vch_num", "cp_fname") + "";
                    var dtmin = new DataTable();
                    if (loadtype == "")
                    {
                        dt = new DataTable();
                        dt = sgen.getdata(userCode, mq);
                        mq1 = ""; mq2 = ""; mq3 = "";
                        sgen.SetSession(MyGuid, "MOM_List", dt);
                        if (dt.Rows.Count <= 5)
                        {
                            dtmin = dt;
                            mq1 = "N"; mq2 = "N"; mq3 = dt.Rows.Count.ToString();
                        }
                        else
                        {
                            dtmin = dt.AsEnumerable().Take(5).CopyToDataTable();
                            mq1 = "Y"; mq2 = "Y"; mq3 = "5";
                        }
                        model = new List<Tmodelmain>();
                        if (dtmin.Rows.Count > 0)
                        {

                            for (int i = 0; i < dtmin.Rows.Count; i++)
                            {

                                Tmodelmain tmm = new Tmodelmain();
                                tmm.Col9 = tm.Col9;
                                tmm.Col10 = tm.Col10;
                                tmm.Col11 = tm.Col11;
                                tmm.Col12 = tm.Col12;
                                tmm.Col14 = tm.Col14;
                                tmm.Col15 = tm.Col15;
                                tmm.Col16 = tm.Col16;
                                tmm.Col17 = tm.Col17;
                                tmm.Col18 = tm.Col18;
                                tmm.Col19 = tm.Col19;
                                tmm.Col20 = tm.Col20;
                                tmm.Col21 = tm.Col21;
                                tmm.Col22 = tm.Col22;
                                tmm.Col33 = tm.Col33;
                                tmm.Col34 = tm.Col34;
                                tmm.Col48 = tm.Col48;
                                tmm.Col49 = tm.Col49;
                                tmm.Col50 = tm.Col50;
                                tmm.Col51 = tm.Col51;
                                tmm.Col35 = "MOM Detail";
                                tmm.Col31 = "Account No. / Name / Contact Person";
                                tmm.Col23 = "MOM No.";
                                tmm.Col24 = "Mobile No.";
                                tmm.Col25 = "Email Id";
                                tmm.SelectedItems1 = tm.SelectedItems1;
                                tmm.TList1 = tm.TList1;
                                tmm.SelectedItems2 = tm.SelectedItems2;
                                tmm.TList2 = tm.TList2;

                                tmm.Col26 = dtmin.Rows[i]["fstr"].ToString();
                                tmm.Col27 = dtmin.Rows[i]["mom_no"].ToString();
                                tmm.Col28 = dtmin.Rows[i]["CP_MOBILE_NO"].ToString();
                                tmm.Col29 = dtmin.Rows[i]["CP_EMAIL_ID"].ToString();
                                tmm.Col32 = dtmin.Rows[i]["cust_id"].ToString() + " / " + dtmin.Rows[i]["c_name"].ToString() + " / " + dtmin.Rows[i]["cp_name"].ToString(); ;

                                tmm.Col30 = command;
                                tmm.Col40 = mq1;
                                tmm.Col41 = mq2;
                                tmm.Col42 = mq3;
                                tmm.Col43 = mq3;
                                tmm.Col36 = dtmin.Rows[i]["cust_id"].ToString();
                                tmm.Col37 = dtmin.Rows[i]["cp_id"].ToString();

                                model.Add(tmm);
                            }

                        }
                        else
                        {
                            Tmodelmain tmm = new Tmodelmain();
                            tmm.Col9 = tm.Col9;
                            tmm.Col10 = tm.Col10;
                            tmm.Col11 = tm.Col11;
                            tmm.Col12 = tm.Col12;
                            tmm.Col14 = tm.Col14;
                            tmm.Col15 = tm.Col15;
                            tmm.Col16 = tm.Col16;
                            tmm.Col17 = tm.Col17;
                            tmm.Col18 = tm.Col18;
                            tmm.Col19 = tm.Col19;
                            tmm.Col20 = tm.Col20;
                            tmm.Col21 = tm.Col21;
                            tmm.Col22 = tm.Col22;
                            tmm.Col33 = tm.Col33;
                            tmm.Col34 = tm.Col34;
                            tmm.SelectedItems1 = tm.SelectedItems1;
                            tmm.TList1 = tm.TList1;
                            tmm.SelectedItems2 = tm.SelectedItems2;
                            tmm.TList2 = tm.TList2;

                            tmm.Col30 = command;
                            tmm.Col40 = mq1;
                            tmm.Col41 = mq2;
                            tmm.Col42 = mq3;
                            tmm.Col43 = mq3;
                            tmm.Col48 = tm.Col48;
                            tmm.Col49 = tm.Col49;
                            tmm.Col50 = tm.Col50;
                            tmm.Col51 = tm.Col51;

                            model.Add(tmm);
                        }
                    }
                    else
                    {
                        int cnt = 0, totcnt = 0, skipcnt = 0;
                        dt = (DataTable)sgen.GetSession(MyGuid, "MOM_List");
                        if (dt.Rows.Count > 0)
                        {
                            dtmin = new DataTable();
                            model[0].Col40 = "N";//hf_btnshow
                            skipcnt = sgen.Make_int(model[0].Col42);
                            cnt = dt.AsEnumerable().Skip(skipcnt).Count();
                            if (cnt > 5)
                            {
                                model[0].Col40 = "Y";//hf_btnshow
                                cnt = skipcnt;
                            }
                            if (model[0].Col41 == "Y")//hf_str
                            {
                                model[0].Col41 = "N";//hf_str
                            }
                            else
                            {
                                model[0].Col41 = "N";//hf_str                                              
                            }
                            totcnt = skipcnt + cnt;
                            model[0].Col42 = totcnt.ToString();//hf_totcnt
                            model[0].Col43 = cnt.ToString();//hf_loadcnt
                            dtmin = dt.AsEnumerable().Skip(skipcnt).Take(cnt).CopyToDataTable();

                            if (dtmin.Rows.Count > 0)
                            {
                                foreach (DataRow dr in dtmin.Rows)
                                {
                                    model.Add(new Tmodelmain
                                    {
                                        Col9 = tm.Col9,
                                        Col10 = tm.Col10,
                                        Col11 = tm.Col11,
                                        Col12 = tm.Col12,
                                        Col14 = tm.Col14,
                                        Col15 = tm.Col15,
                                        Col16 = tm.Col16,
                                        Col17 = tm.Col17,
                                        Col18 = tm.Col18,
                                        Col19 = tm.Col19,
                                        Col20 = tm.Col20,
                                        Col21 = tm.Col21,
                                        Col22 = tm.Col22,
                                        Col33 = tm.Col33,
                                        Col34 = tm.Col34,
                                        Col48 = tm.Col48,
                                        Col49 = tm.Col49,
                                        Col50 = tm.Col50,
                                        Col51 = tm.Col51,
                                        Col35 = "MOM Detail",
                                        Col31 = "Account No. / Name / Contact Person",
                                        Col23 = "MOM No.",
                                        Col24 = "Mobile No.",
                                        Col25 = "Email Id",
                                        SelectedItems1 = tm.SelectedItems1,
                                        TList1 = tm.TList1,
                                        SelectedItems2 = tm.SelectedItems2,
                                        TList2 = tm.TList2,
                                        Col26 = dr["fstr"].ToString(),
                                        Col27 = dr["mom_no"].ToString(),
                                        Col28 = dr["CP_MOBILE_NO"].ToString(),
                                        Col29 = dr["CP_EMAIL_ID"].ToString(),
                                        Col32 = dr["cust_id"].ToString() + " / " + dr["c_name"].ToString() + " / " + dr["cp_name"].ToString(),
                                        Col30 = command,
                                        Col36 = dr["cust_id"].ToString(),
                                        Col37 = dr["cp_id"].ToString(),
                                    });
                                }
                            }

                        }
                    }


                }
                else if ((command == "Call Log") || (loadtype == "Call Log"))
                {
                    sgen.SetSession(MyGuid, "crm_summ_comm", command);
                    mq = "select  (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) fstr,a.  col5 cust_id, a.vch_num tck_no, to_char(a.vch_date,'dd/MM/YYYY') tck_date, " +
                        "b.c_name,(case when b.org_mobile=0 then '-' else b.org_mobile end ) " +
                        "org_mobile,(case when b.comp_email = 'ab@ab.ab' then '-' else b.comp_email end ) " +
                        "comp_email, a.col6 cp_id ,(replace(ct.cpname,'0','') || replace(nvl(ct.cp_mname,'0'),0,'') || replace(nvl(ct.cp_lname,''),0,'')) cp_name  , (case when ct.cplandno = '0000000000' then '-' else ct.cplandno end) CP_MOBILE_NO  , (case when ct.cpemail = 'ab@ab.ab' then '-' else ct.cpemail end) CP_EMAIL_ID from enx_tab2 a inner join clients_mst b on a.col5 = b.vch_num and b.type = 'BCD' and find_in_set(b.client_unit_id,'" + unitid_mst + "')= 1" +
                        " inner  join clients_mst ct on a.col5 = ct.ref_code and a.col6=ct.vch_num and find_in_set(ct.client_unit_id,'" + unitid_mst + "')=1 and ct.type='BCD'   where a.type = 'CAL' and " +
                        "a.client_unit_id = '" + unitid_mst + "' and a.col5 in  (select distinct vch_num from clients_mst a where a.type = 'BCD' and a.client_unit_id = '" + unitid_mst + "' and substr(a.vch_num,0,3)= '303' and parent_id = '" + model[0].Col16 + "' " + acc_cond + ") " + ct_cond.Replace("vch_num", "col6") + "";

                    dt = new DataTable();
                    dt = sgen.getdata(userCode, mq);


                    var dtmin = new DataTable();
                    if (loadtype == "")
                    {
                        dt = new DataTable();
                        dt = sgen.getdata(userCode, mq);
                        mq1 = ""; mq2 = ""; mq3 = "";
                        sgen.SetSession(MyGuid, "Call_List", dt);
                        if (dt.Rows.Count <= 5)
                        {
                            dtmin = dt;
                            mq1 = "N"; mq2 = "N"; mq3 = dt.Rows.Count.ToString();
                        }
                        else
                        {
                            dtmin = dt.AsEnumerable().Take(5).CopyToDataTable();
                            mq1 = "Y"; mq2 = "Y"; mq3 = "5";
                        }
                        model = new List<Tmodelmain>();
                        if (dtmin.Rows.Count > 0)
                        {

                            for (int i = 0; i < dtmin.Rows.Count; i++)
                            {

                                Tmodelmain tmm = new Tmodelmain();
                                tmm.Col9 = tm.Col9;
                                tmm.Col10 = tm.Col10;
                                tmm.Col11 = tm.Col11;
                                tmm.Col12 = tm.Col12;
                                tmm.Col14 = tm.Col14;
                                tmm.Col15 = tm.Col15;
                                tmm.Col16 = tm.Col16;
                                tmm.Col17 = tm.Col17;
                                tmm.Col18 = tm.Col18;
                                tmm.Col19 = tm.Col19;
                                tmm.Col20 = tm.Col20;
                                tmm.Col21 = tm.Col21;
                                tmm.Col22 = tm.Col22;
                                tmm.Col33 = tm.Col33;
                                tmm.Col34 = tm.Col34;
                                tmm.Col48 = tm.Col48;
                                tmm.Col49 = tm.Col49;
                                tmm.Col50 = tm.Col50;
                                tmm.Col51 = tm.Col51;
                                tmm.Col35 = "Call Log Detail";
                                tmm.Col31 = "Account No. / Name / Contact Person";
                                tmm.Col23 = "Doc No.";
                                tmm.Col24 = "Mobile No.";
                                tmm.Col25 = "Email Id";

                                tmm.Col26 = dtmin.Rows[i]["fstr"].ToString();
                                tmm.Col27 = dtmin.Rows[i]["tck_no"].ToString();
                                tmm.Col32 = dtmin.Rows[i]["cust_id"].ToString() + " / " + dtmin.Rows[i]["c_name"].ToString() + " / " + dtmin.Rows[i]["cp_name"].ToString(); ;
                                tmm.Col28 = dtmin.Rows[i]["CP_MOBILE_NO"].ToString();
                                tmm.Col29 = dtmin.Rows[i]["CP_EMAIL_ID"].ToString();
                                tmm.Col36 = dtmin.Rows[i]["cust_id"].ToString();
                                tmm.Col37 = dtmin.Rows[i]["cp_id"].ToString();

                                tmm.Col30 = command;
                                tmm.Col40 = mq1;
                                tmm.Col41 = mq2;
                                tmm.Col42 = mq3;
                                tmm.Col43 = mq3;
                                tmm.SelectedItems1 = tm.SelectedItems1;
                                tmm.TList1 = tm.TList1;

                                tmm.SelectedItems2 = tm.SelectedItems2;
                                tmm.TList2 = tm.TList2;

                                model.Add(tmm);
                            }



                        }
                        else
                        {
                            Tmodelmain tmm = new Tmodelmain();
                            tmm.Col9 = tm.Col9;
                            tmm.Col10 = tm.Col10;
                            tmm.Col11 = tm.Col11;
                            tmm.Col12 = tm.Col12;
                            tmm.Col14 = tm.Col14;
                            tmm.Col15 = tm.Col15;
                            tmm.Col16 = tm.Col16;
                            tmm.Col17 = tm.Col17;
                            tmm.Col18 = tm.Col18;
                            tmm.Col19 = tm.Col19;
                            tmm.Col20 = tm.Col20;
                            tmm.Col21 = tm.Col21;
                            tmm.Col22 = tm.Col22;
                            tmm.Col33 = tm.Col33;
                            tmm.Col34 = tm.Col34;
                            tmm.SelectedItems1 = tm.SelectedItems1;
                            tmm.TList1 = tm.TList1;
                            tmm.SelectedItems2 = tm.SelectedItems2;
                            tmm.TList2 = tm.TList2;

                            tmm.Col30 = command;
                            tmm.Col40 = mq1;
                            tmm.Col41 = mq2;
                            tmm.Col42 = mq3;
                            tmm.Col43 = mq3;
                            tmm.Col48 = tm.Col48;
                            tmm.Col49 = tm.Col49;
                            tmm.Col50 = tm.Col50;
                            tmm.Col51 = tm.Col51;

                            model.Add(tmm);
                        }
                    }
                    else
                    {
                        int cnt = 0, totcnt = 0, skipcnt = 0;
                        dt = (DataTable)sgen.GetSession(MyGuid, "Call_List");
                        if (dt.Rows.Count > 0)
                        {
                            dtmin = new DataTable();
                            model[0].Col40 = "N";//hf_btnshow
                            skipcnt = sgen.Make_int(model[0].Col42);
                            cnt = dt.AsEnumerable().Skip(skipcnt).Count();
                            if (cnt > 5)
                            {
                                model[0].Col40 = "Y";//hf_btnshow
                                cnt = skipcnt;
                            }
                            if (model[0].Col41 == "Y")//hf_str
                            {
                                model[0].Col41 = "N";//hf_str
                            }
                            else
                            {
                                model[0].Col41 = "N";//hf_str                                              
                            }
                            totcnt = skipcnt + cnt;
                            model[0].Col42 = totcnt.ToString();//hf_totcnt
                            model[0].Col43 = cnt.ToString();//hf_loadcnt
                            dtmin = dt.AsEnumerable().Skip(skipcnt).Take(cnt).CopyToDataTable();

                            if (dtmin.Rows.Count > 0)
                            {
                                foreach (DataRow dr in dtmin.Rows)
                                {
                                    model.Add(new Tmodelmain
                                    {
                                        Col9 = tm.Col9,
                                        Col10 = tm.Col10,
                                        Col11 = tm.Col11,
                                        Col12 = tm.Col12,
                                        Col14 = tm.Col14,
                                        Col15 = tm.Col15,
                                        Col16 = tm.Col16,
                                        Col17 = tm.Col17,
                                        Col18 = tm.Col18,
                                        Col19 = tm.Col19,
                                        Col20 = tm.Col20,
                                        Col21 = tm.Col21,
                                        Col22 = tm.Col22,
                                        Col33 = tm.Col33,
                                        Col34 = tm.Col34,
                                        Col48 = tm.Col48,
                                        Col49 = tm.Col49,
                                        Col50 = tm.Col50,
                                        Col51 = tm.Col51,
                                        Col35 = "Call Log Detail",
                                        Col31 = "Account No. / Name / Contact Person",
                                        Col23 = "Doc No.",
                                        Col24 = "Mobile No.",
                                        Col25 = "Email Id",
                                        SelectedItems1 = tm.SelectedItems1,
                                        TList1 = tm.TList1,
                                        SelectedItems2 = tm.SelectedItems2,
                                        TList2 = tm.TList2,

                                        Col26 = dr["fstr"].ToString(),
                                        Col27 = dr["tck_no"].ToString(),
                                        Col28 = dr["CP_MOBILE_NO"].ToString(),
                                        Col29 = dr["CP_EMAIL_ID"].ToString(),
                                        Col32 = dr["cust_id"].ToString() + " / " + dr["c_name"].ToString() + " / " + dr["cp_name"].ToString(),
                                        Col30 = command,
                                        Col36 = dr["cust_id"].ToString(),
                                        Col37 = dr["cp_id"].ToString(),



                                    });
                                }
                            }

                        }
                    }
                }
                else if ((command == "Appointments") || (loadtype == "Appointments"))
                {
                    sgen.SetSession(MyGuid, "crm_summ_comm", command);
                    mq = "select  (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) fstr,a.col5 cust_id, a.vch_num tck_no, to_char(a.vch_date,'dd/MM/YYYY') tck_date, " +
                        "b.c_name,(case when b.org_mobile=0 then '-' else b.org_mobile end ) " +
                        "org_mobile,(case when b.comp_email = 'ab@ab.ab' then '-' else b.comp_email end ) " +
                        "comp_email,a.col6 cp_id  , (case when ct.cplandno = '0000000000' then '-' else ct.cplandno end) CP_MOBILE_NO  , (case when ct.cpemail = 'ab@ab.ab' then '-' else ct.cpemail end) CP_EMAIL_ID ,(replace(ct.cpname,'0','') || replace(nvl(ct.cp_mname,'0'),0,'') || replace(nvl(ct.cp_lname,''),0,'')) cp_name from enx_tab2 a inner join clients_mst b on a.col5 = b.vch_num and b.type = 'BCD' and find_in_set(b.client_unit_id,'" + unitid_mst + "')= 1" +
                        "inner  join clients_mst ct on a.col5 = ct.ref_code and a.col6=ct.vch_num and find_in_set(ct.client_unit_id,'" + unitid_mst + "')=1 and ct.type='BCD'   where a.type = 'APP' and " +
                        "a.client_unit_id = '" + unitid_mst + "' and a.col5 in  (select distinct vch_num from clients_mst a where a.type = 'BCD' and a.client_unit_id = '" + unitid_mst + "' and substr(a.vch_num,0,3)= '303' and parent_id = '" + model[0].Col16 + "' " + acc_cond + ") " + ct_cond.Replace("vch_num", "col6") + "";

                    dt = new DataTable();
                    dt = sgen.getdata(userCode, mq);

                    var dtmin = new DataTable();
                    if (loadtype == "")
                    {
                        dt = new DataTable();
                        dt = sgen.getdata(userCode, mq);
                        mq1 = ""; mq2 = ""; mq3 = "";
                        sgen.SetSession(MyGuid, "App_List", dt);
                        if (dt.Rows.Count <= 5)
                        {
                            dtmin = dt;
                            mq1 = "N"; mq2 = "N"; mq3 = dt.Rows.Count.ToString();
                        }
                        else
                        {
                            dtmin = dt.AsEnumerable().Take(5).CopyToDataTable();
                            mq1 = "Y"; mq2 = "Y"; mq3 = "5";
                        }

                        model = new List<Tmodelmain>();
                        if (dtmin.Rows.Count > 0)
                        {

                            for (int i = 0; i < dtmin.Rows.Count; i++)
                            {


                                Tmodelmain tmm = new Tmodelmain();
                                tmm.Col9 = tm.Col9;
                                tmm.Col10 = tm.Col10;
                                tmm.Col11 = tm.Col11;
                                tmm.Col12 = tm.Col12;
                                tmm.Col14 = tm.Col14;
                                tmm.Col15 = tm.Col15;
                                tmm.Col16 = tm.Col16;
                                tmm.Col17 = tm.Col17;
                                tmm.Col18 = tm.Col18;
                                tmm.Col19 = tm.Col19;
                                tmm.Col20 = tm.Col20;
                                tmm.Col21 = tm.Col21;
                                tmm.Col22 = tm.Col22;
                                tmm.Col33 = tm.Col33;
                                tmm.Col34 = tm.Col34;
                                tmm.Col48 = tm.Col48;
                                tmm.Col49 = tm.Col49;
                                tmm.Col50 = tm.Col50;
                                tmm.Col51 = tm.Col51;
                                tmm.Col35 = "Appointments Detail";
                                tmm.Col31 = "Account No. / Name / Contact Person";
                                tmm.Col23 = "Doc No.";
                                tmm.Col24 = "Mobile No.";
                                tmm.Col25 = "Email Id";

                                tmm.Col26 = dtmin.Rows[i]["fstr"].ToString();
                                tmm.Col27 = dtmin.Rows[i]["tck_no"].ToString();
                                tmm.Col28 = dtmin.Rows[i]["CP_MOBILE_NO"].ToString();
                                tmm.Col29 = dtmin.Rows[i]["CP_EMAIL_ID"].ToString();
                                tmm.Col32 = dtmin.Rows[i]["cust_id"].ToString() + " / " + dtmin.Rows[i]["c_name"].ToString() + " / " + dtmin.Rows[i]["cp_name"].ToString(); ;
                                tmm.Col36 = dtmin.Rows[i]["cust_id"].ToString();
                                tmm.Col37 = dtmin.Rows[i]["cp_id"].ToString();
                                tmm.SelectedItems1 = tm.SelectedItems1;
                                tmm.TList1 = tm.TList1;
                                tmm.SelectedItems2 = tm.SelectedItems2;
                                tmm.TList2 = tm.TList2;

                                tmm.Col30 = command;
                                tmm.Col40 = mq1;
                                tmm.Col41 = mq2;
                                tmm.Col42 = mq3;
                                tmm.Col43 = mq3;

                                model.Add(tmm);
                            }

                        }

                        else
                        {
                            Tmodelmain tmm = new Tmodelmain();
                            tmm.Col9 = tm.Col9;
                            tmm.Col10 = tm.Col10;
                            tmm.Col11 = tm.Col11;
                            tmm.Col12 = tm.Col12;
                            tmm.Col14 = tm.Col14;
                            tmm.Col15 = tm.Col15;
                            tmm.Col16 = tm.Col16;
                            tmm.Col17 = tm.Col17;
                            tmm.Col18 = tm.Col18;
                            tmm.Col19 = tm.Col19;
                            tmm.Col20 = tm.Col20;
                            tmm.Col21 = tm.Col21;
                            tmm.Col22 = tm.Col22;
                            tmm.Col33 = tm.Col33;
                            tmm.Col34 = tm.Col34;
                            tmm.SelectedItems1 = tm.SelectedItems1;
                            tmm.TList1 = tm.TList1;
                            tmm.SelectedItems2 = tm.SelectedItems2;
                            tmm.TList2 = tm.TList2;

                            tmm.Col30 = command;
                            tmm.Col40 = mq1;
                            tmm.Col41 = mq2;
                            tmm.Col42 = mq3;
                            tmm.Col43 = mq3;
                            tmm.Col48 = tm.Col48;
                            tmm.Col49 = tm.Col49;
                            tmm.Col50 = tm.Col50;
                            tmm.Col51 = tm.Col51;

                            model.Add(tmm);
                        }
                    }
                    else
                    {
                        int cnt = 0, totcnt = 0, skipcnt = 0;
                        dt = (DataTable)sgen.GetSession(MyGuid, "App_List");
                        if (dt.Rows.Count > 0)
                        {
                            dtmin = new DataTable();
                            model[0].Col40 = "N";//hf_btnshow
                            skipcnt = sgen.Make_int(model[0].Col42);
                            cnt = dt.AsEnumerable().Skip(skipcnt).Count();
                            if (cnt > 5)
                            {
                                model[0].Col40 = "Y";//hf_btnshow
                                cnt = skipcnt;
                            }
                            if (model[0].Col41 == "Y")//hf_str
                            {
                                model[0].Col41 = "N";//hf_str
                            }
                            else
                            {
                                model[0].Col41 = "N";//hf_str                                              
                            }
                            totcnt = skipcnt + cnt;
                            model[0].Col42 = totcnt.ToString();//hf_totcnt
                            model[0].Col43 = cnt.ToString();//hf_loadcnt
                            dtmin = dt.AsEnumerable().Skip(skipcnt).Take(cnt).CopyToDataTable();

                            if (dtmin.Rows.Count > 0)
                            {
                                foreach (DataRow dr in dtmin.Rows)
                                {
                                    model.Add(new Tmodelmain
                                    {
                                        Col9 = tm.Col9,
                                        Col10 = tm.Col10,
                                        Col11 = tm.Col11,
                                        Col12 = tm.Col12,
                                        Col14 = tm.Col14,
                                        Col15 = tm.Col15,
                                        Col16 = tm.Col16,
                                        Col17 = tm.Col17,
                                        Col18 = tm.Col18,
                                        Col19 = tm.Col19,
                                        Col20 = tm.Col20,
                                        Col21 = tm.Col21,
                                        Col22 = tm.Col22,
                                        Col33 = tm.Col33,
                                        Col34 = tm.Col34,
                                        Col48 = tm.Col48,
                                        Col49 = tm.Col49,
                                        Col50 = tm.Col50,
                                        Col51 = tm.Col51,
                                        Col35 = "Appointments Detail",
                                        Col31 = "Account No. / Name / Contact Person",
                                        Col23 = "Doc No.",
                                        Col24 = "Mobile No.",
                                        Col25 = "Email Id",
                                        SelectedItems1 = tm.SelectedItems1,
                                        TList1 = tm.TList1,
                                        SelectedItems2 = tm.SelectedItems2,
                                        TList2 = tm.TList2,
                                        Col26 = dr["fstr"].ToString(),
                                        Col27 = dr["tck_no"].ToString(),
                                        Col28 = dr["CP_MOBILE_NO"].ToString(),
                                        Col29 = dr["CP_EMAIL_ID"].ToString(),
                                        Col32 = dr["cust_id"].ToString() + " / " + dr["c_name"].ToString() + " / " + dr["cp_name"].ToString(),
                                        Col30 = command,
                                        Col36 = dr["cust_id"].ToString(),
                                        Col37 = dr["cp_id"].ToString(),

                                    });
                                }
                            }

                        }
                    }


                }

            }
            catch (Exception ex)
            { ViewBag.scripCall = "showmsgJS(1, '" + ex.Message.ToString().Replace("'", "") + "', 1);"; }
            return model;
        }
        [HttpPost]
        public ActionResult crm_summ(List<Tmodelmain> model, string command, string mid, string hfrow)
        {
            try
            {

                FillMst(model[0].Col15);
                //model[0].Col26 = "0";
                var tm = model.FirstOrDefault();
                DataTable dt = new DataTable();

                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_Tlist1"];
                List<SelectListItem> mod2 = (List<SelectListItem>)TempData[MyGuid + "_Tlist2"];
                TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1;
                TempData[MyGuid + "_Tlist2"] = model[0].TList2 = mod2;
                if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                if (model[0].SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };

                if (command.Contains("Accounts")) { command = "Accounts"; sgen.SetSession(MyGuid, "crm_summ_comm", command); }
                else if (command.Contains("Contacts")) { command = "Contacts"; sgen.SetSession(MyGuid, "crm_summ_comm", command); }
                else if (command.Contains("Leads")) { command = "Leads"; sgen.SetSession(MyGuid, "crm_summ_comm", command); }
                else if (command.Contains("Ticket")) { command = "Ticket"; sgen.SetSession(MyGuid, "crm_summ_comm", command); }
                else if (command.Contains("MOM")) { command = "Mom"; sgen.SetSession(MyGuid, "crm_summ_comm", command); }
                else if (command.Contains("Call Log")) { command = "Call Log"; sgen.SetSession(MyGuid, "crm_summ_comm", command); }
                else if (command.Contains("Appointments")) { command = "Appointments"; sgen.SetSession(MyGuid, "crm_summ_comm", command); }

                if (command == "Callback")
                {
                    model = StartCallback(model);
                }

                else if ((command == "Accounts") || (command == "Contacts") || (command == "Leads") || (command == "Ticket") || (command == "Appointments") || (command == "Call Log") || (command == "Mom"))
                {
                    sgen.SetSession(MyGuid, "Load_type", command);
                    model = crm_summ_dt(model, command, "");
                }

                else if (command == "Organisation")
                {
                    sgen.SetSession(MyGuid, "crm_summ_acc", model[0].SelectedItems1.FirstOrDefault());
                    model = CallbackFun("PARENT", "N", "crm_summ", "vastu", model);
                }
                else if (command == "ctperson")
                {
                    sgen.SetSession(MyGuid, "crm_summ_ct", model[0].SelectedItems2.FirstOrDefault());
                    model = CallbackFun("PARENT", "N", "crm_summ", "vastu", model);
                }

                else if (command == "RECENT ACTIVITY")
                {
                    string cust_id = model[sgen.Make_int(hfrow)].Col36;
                    string cp_id = model[sgen.Make_int(hfrow)].Col37;


                    mq = " select    a.activity, a.vch_num,to_char(convert_tz(a.created_date, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldatetimeformat() + "') activity_dt,  a.cust_id, a.cp_id,a.Ticket_Type,a.from_date,a.outcome,a.lead_status,a.lead_owner,a.call_type , ud.first_name || ' ' || replace(ud.middle_name, '0', '') || '' || replace(ud.last_name, '0', '') ent_by from ( " +
                        " select ' Add Call Log On'  activity, a.vch_num, a.created_date, a.col5 cust_id, a.col6 cp_id , a.ent_by,'' Ticket_Type,'' from_date,'' outcome,''lead_status,''lead_owner,a.col7 call_type from enx_tab2 a where a.type = 'CAL' and a.client_unit_id = '" + unitid_mst + "'  and a.col5 = '" + cust_id + "' and a.col6 = '" + cp_id + "' " +
                        " union all " +
                        " select 'Add Appointment On'  activity, a.vch_num, a.created_date, a.col5 cust_id, a.col6 cp_id , a.ent_by,'' Ticket_Type,( case when a.col12='Y' then to_char(a.date1 ,'" + sgen.Getsqldateformat() + "') else  to_char(a.date1,'" + sgen.Getsqldatetimeformat() + "') end) from_date , o.master_name outcome ,''lead_status,''lead_owner,'' call_type from enx_tab2 a inner join master_setting o on o.master_id= a.Col10 and o.type='OUT' and find_in_set (o.client_unit_id,'" + unitid_mst + "')=1 where a.type = 'APP' and a.client_unit_id = '" + unitid_mst + "'  and a.col5 = '" + cust_id + "' and a.col6 = '" + cp_id + "' " +
                        " union all " +
                        " select 'Add Ticket On'  activity, a.vch_num, a.created_date, a.cust_id, a.CP_FNAME cp_id, a.ent_by ,d.master_name  Ticket_Type ,'' from_date,'' outcome,''lead_status,''lead_owner,'' call_type from lead_master a inner join master_setting d on a.ld_owner = d.master_id and d.type = 'TKT' and a.client_unit_id = d.client_unit_id where a.type = 'TCK' and a.client_unit_id = '" + unitid_mst + "'  and a.cust_id = '" + cust_id + "' and a.CP_FNAME = '" + cp_id + "' " +
                        " union all " +
                        " select 'Add Lead On'  activity, a.vch_num, a.created_date, a.cust_id, cp_id , a.ent_by,''Ticket_Type ,'' from_date,'' outcome ,d.master_name as lead_status, ud.first_name || ' ' || replace(ud.middle_name, '0', '') || '' || replace(ud.last_name, '0', '') as lead_owner ,'' call_type from lead_master a left join master_setting d on a.ld_status = d.master_id and d.type = 'LST' and find_in_set(d.client_unit_id, '" + unitid_mst + "')= 1 left join user_details ud on ud.vch_num = a.ld_owner and ud.type='CPR' where  a.type = 'LED' and a.client_unit_id = '" + unitid_mst + "'  and a.cust_id = '" + cust_id + "' and a.cp_id = '" + cp_id + "' " +
                        " union all " +
                        " select 'Add MOM On'  activity, a.vch_num, a.created_date, a.cust_id, a.CP_FNAME cp_id , a.ent_by,'' Ticket_Type ,'' from_date,'' outcome ,''lead_status,''lead_owner,''call_type from lead_master a where a.type = 'MOM' and a.client_unit_id = '" + unitid_mst + "'  and a.cust_id = '" + cust_id + "' and a.CP_FNAME = '" + cp_id + "' ) a inner join user_details ud on a.ent_by =ud.vch_num and ud.type='CPR' order by a.created_date desc";

                    DataTable dtr = sgen.getdata(userCode, mq);
                    var dtmin = new DataTable();

                    mq1 = ""; mq2 = ""; mq3 = "";
                    if (dtr.Rows.Count > 0)
                    {
                        sgen.SetSession(MyGuid, "activity_List", dtr);
                        if (dtr.Rows.Count <= 5)
                        {
                            dtmin = dtr;
                            mq1 = "N"; mq2 = "N"; mq3 = dtr.Rows.Count.ToString();
                        }
                        else
                        {
                            dtmin = dtr.AsEnumerable().Take(5).CopyToDataTable();
                            mq1 = "Y"; mq2 = "Y"; mq3 = "5";
                        }

                        List<Tmodelmain> ltmf = new List<Tmodelmain>();
                        foreach (DataRow drf in dtmin.Rows)
                        {
                            Tmodelmain tmf = new Tmodelmain();
                            tmf.Col2 = drf["activity"].ToString();
                            tmf.Col3 = drf["activity_dt"].ToString();
                            tmf.Col4 = "Created By : " + drf["ent_by"].ToString();
                            if (drf["activity"].ToString() == "Add Ticket On")
                            {
                                tmf.Col5 = "Ticket_Type :" + drf["Ticket_Type"].ToString();
                            }
                            else if (drf["activity"].ToString() == "Add Appointment On")
                            {
                                tmf.Col5 = "Appointment Date :" + drf["from_date"].ToString() + "  Appointment Outcome :" + drf["outcome"].ToString();
                            }

                            else if (drf["activity"].ToString() == "Add Lead On")
                            {
                                tmf.Col5 = "Lead Owner :" + drf["lead_owner"].ToString() + "  Lead Status :" + drf["lead_status"].ToString();
                            }

                            else if (drf["activity"].ToString() == "Add Call Log On")
                            {
                                tmf.Col5 = "Call Type :" + drf["call_type"].ToString();
                            }

                            ltmf.Add(tmf);
                        }

                        model[0].LTM1 = ltmf;
                        model[0].Col44 = mq1;
                        model[0].Col45 = mq2;
                        model[0].Col46 = mq3;
                        model[0].Col47 = mq3;
                    }
                }

                else if (command.Trim() == "Load More Data")
                {
                    if (sgen.GetSession(MyGuid, "Load_type") != null)
                    {
                        model = crm_summ_dt(model, command, sgen.GetSession(MyGuid, "Load_type").ToString());
                    }

                }

                else if (command.Trim() == "Load More Activity")
                {

                    int cnt = 0, totcnt = 0, skipcnt = 0;
                    dt = (DataTable)sgen.GetSession(MyGuid, "activity_List");
                    if (dt.Rows.Count > 0)
                    {
                        var dtmin = new DataTable();
                        model[0].Col44 = "N";//hf_btnshow
                        skipcnt = sgen.Make_int(model[0].Col46);
                        cnt = dt.AsEnumerable().Skip(skipcnt).Count();
                        if (cnt > 5)
                        {
                            model[0].Col44 = "Y";//hf_btnshow
                            cnt = skipcnt;
                        }
                        if (model[0].Col45 == "Y")//hf_str
                        {
                            model[0].Col45 = "N";//hf_str
                        }
                        else
                        {
                            model[0].Col45 = "N";//hf_str                                              
                        }
                        totcnt = skipcnt + cnt;
                        model[0].Col46 = totcnt.ToString();//hf_totcnt
                        model[0].Col47 = cnt.ToString();//hf_loadcnt
                        dtmin = dt.AsEnumerable().Skip(skipcnt).Take(cnt).CopyToDataTable();


                        List<Tmodelmain> ltmf = new List<Tmodelmain>();
                        foreach (DataRow drf in dtmin.Rows)
                        {
                            string col5 = "";
                            if (drf["activity"].ToString() == "Add Ticket On")
                            {
                                col5 = "Ticket_Type :" + drf["Ticket_Type"].ToString();
                            }
                            else if (drf["activity"].ToString() == "Add Appointment On")
                            {
                                col5 = "Appointment Date :" + drf["from_date"].ToString() + "  Appointment Outcome :" + drf["outcome"].ToString();
                            }

                            else if (drf["activity"].ToString() == "Add Lead On")
                            {
                                col5 = "Lead Owner :" + drf["lead_owner"].ToString() + "  Lead Status :" + drf["lead_status"].ToString();
                            }

                            else if (drf["activity"].ToString() == "Add Call Log On")
                            {
                                col5 = "Call Type :" + drf["call_type"].ToString();
                            }
                            model[0].LTM1.Add(new Tmodelmain
                            {
                                Col2 = drf["activity"].ToString(),
                                Col3 = drf["activity_dt"].ToString(),
                                Col4 = "Created By : " + drf["ent_by"].ToString(),
                                Col5 = col5,


                            });


                        }
                    }


                }

                else if (command == "EDIT")
                {
                    string fstr = model[sgen.Make_int(hfrow)].Col26;

                    if (model[0].Col30 == "Accounts")
                    {

                        return RedirectToAction("party", "Purchase", new { m_id = EncryptDecrypt.Encrypt(model[0].Col15), mid = EncryptDecrypt.Encrypt("40002.6"), fstr = "EDIT" + EncryptDecrypt.Encrypt(fstr) });

                    }

                    if (model[0].Col30 == "Contacts")
                    {

                        return RedirectToAction("party", "Purchase", new { m_id = EncryptDecrypt.Encrypt(model[0].Col15), mid = EncryptDecrypt.Encrypt("40002.6"), fstr = "EDIT" + EncryptDecrypt.Encrypt(fstr) });

                    }
                    if (model[0].Col30 == "Leads")
                    {

                        return RedirectToAction("lead_detail", "Vastu", new { m_id = EncryptDecrypt.Encrypt(model[0].Col15), mid = EncryptDecrypt.Encrypt(model[0].Col14), fstr = "EDIT" + EncryptDecrypt.Encrypt(fstr) });

                    }

                    if (model[0].Col30 == "Ticket")
                    {

                        return RedirectToAction("ticket_detail", "Vastu", new { m_id = EncryptDecrypt.Encrypt(model[0].Col15), mid = EncryptDecrypt.Encrypt(model[0].Col14), fstr = "EDIT" + EncryptDecrypt.Encrypt(fstr) });

                    }

                    if (model[0].Col30 == "Mom")
                    {

                        return RedirectToAction("mom", "Vastu", new { m_id = EncryptDecrypt.Encrypt(model[0].Col15), mid = EncryptDecrypt.Encrypt(model[0].Col14), fstr = "EDIT" + EncryptDecrypt.Encrypt(fstr) });

                    }

                    if (model[0].Col30 == "Call Log")
                    {

                        return RedirectToAction("call_log", "Vastu", new { m_id = EncryptDecrypt.Encrypt(model[0].Col15), mid = EncryptDecrypt.Encrypt(model[0].Col14), fstr = "EDIT" + EncryptDecrypt.Encrypt(fstr) });

                    }

                    if (model[0].Col30 == "Appointments")
                    {

                        return RedirectToAction("appointment", "Vastu", new { m_id = EncryptDecrypt.Encrypt(model[0].Col15), mid = EncryptDecrypt.Encrypt(model[0].Col14), fstr = "EDIT" + EncryptDecrypt.Encrypt(fstr) });

                    }
                }
                else if (command == "VIEW")
                {
                    string fstr = model[sgen.Make_int(hfrow)].Col26;

                    if (model[0].Col30 == "Accounts")
                    {

                        return RedirectToAction("party", "Purchase", new { m_id = EncryptDecrypt.Encrypt(model[0].Col15), mid = EncryptDecrypt.Encrypt("40002.6"), fstr = "VIEW" + EncryptDecrypt.Encrypt(fstr) });

                    }

                    if (model[0].Col30 == "Contacts")
                    {

                        return RedirectToAction("party", "Purchase", new { m_id = EncryptDecrypt.Encrypt(model[0].Col15), mid = EncryptDecrypt.Encrypt("40002.6"), fstr = "VIEW" + EncryptDecrypt.Encrypt(fstr) });

                    }
                    if (model[0].Col30 == "Leads")
                    {

                        return RedirectToAction("lead_detail", "Vastu", new { m_id = EncryptDecrypt.Encrypt(model[0].Col15), mid = EncryptDecrypt.Encrypt(model[0].Col14), fstr = "VIEW" + EncryptDecrypt.Encrypt(fstr) });

                    }

                    if (model[0].Col30 == "Ticket")
                    {

                        return RedirectToAction("ticket_detail", "Vastu", new { m_id = EncryptDecrypt.Encrypt(model[0].Col15), mid = EncryptDecrypt.Encrypt(model[0].Col14), fstr = "VIEW" + EncryptDecrypt.Encrypt(fstr) });

                    }

                    if (model[0].Col30 == "Mom")
                    {

                        return RedirectToAction("mom", "Vastu", new { m_id = EncryptDecrypt.Encrypt(model[0].Col15), mid = EncryptDecrypt.Encrypt(model[0].Col14), fstr = "VIEW" + EncryptDecrypt.Encrypt(fstr) });

                    }
                    if (model[0].Col30 == "Call Log")
                    {

                        return RedirectToAction("call_log", "Vastu", new { m_id = EncryptDecrypt.Encrypt(model[0].Col15), mid = EncryptDecrypt.Encrypt(model[0].Col14), fstr = "VIEW" + EncryptDecrypt.Encrypt(fstr) });

                    }

                    if (model[0].Col30 == "Appointments")
                    {

                        return RedirectToAction("appointment", "Vastu", new { m_id = EncryptDecrypt.Encrypt(model[0].Col15), mid = EncryptDecrypt.Encrypt(model[0].Col14), fstr = "VIEW" + EncryptDecrypt.Encrypt(fstr) });

                    }
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region web_ticket
        public ActionResult web_ticket()
        {

            FillMst();
            //var userid_temp = "";
            //var cl_id = "";
            //var unit_id = "";
            //var ac_year = "";
            //var ttype = "";
            //userid_temp = Request.QueryString["uid"];
            //cl_id = Request.QueryString["cl_id"];
            //unit_id = Request.QueryString["ut_id"];
            //ac_year = Request.QueryString["ac_year"];
            //if (userid_temp == null || userid_temp == "") userid_temp = userid_mst;
            //if (cl_id == null || cl_id == "") cl_id = clientid_mst;
            //if (unit_id == null || unit_id == "") unit_id = unitid_mst;
            //if (ac_year == null || ac_year == "") ac_year = Ac_Year_id;
            //ttype = Request.QueryString["ttype"];
            //if (ttype == null || ttype == "") ttype = sgen.GetCookie(MyGuid, "utype_mst");

            List<Tmodelmain> model = new List<Tmodelmain>();
            List<SelectListItem> md1 = new List<SelectListItem>();



            Tmodelmain tm1 = new Tmodelmain();
            mid_mst = EncryptDecrypt.Decrypt(Request.QueryString["mid"]);
            if (MyGuid == "")
            {
                MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            }
            if (EncryptDecrypt.Decrypt(Request.QueryString["m_id"]) == "")
            {
            }


            tm1.Col14 = mid_mst.Trim();
            tm1.Col15 = MyGuid.Trim();
            TempData[MyGuid + "_TList1"] = tm1.TList1 = md1 = cmd_Fun.tickettype(userCode, unitid_mst);

            tm1.SelectedItems1 = new string[] { "" };

            model.Add(tm1);
            model[0].Col10 = "Lead_master";
            model[0].Col11 = "and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "'";
            model[0].Col12 = "TCK";

            mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
            vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
            model[0].Col16 = vch_num;
            model[0].Col30 = "N";
            model[0].Col29 = sgen.server_datetime_local(userCode);


            return View(model);
        }
        [HttpPost]
        public ActionResult web_ticket(List<Tmodelmain> model, string command, string mid)
        {
            try
            {
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();
                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_Tlist1"];
                TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1;
                if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };


                if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command.Trim() == "Callback")
                {
                    model = StartCallback(model);
                }

                else if (command.Trim() == "Save")
                {
                    string dt_ft = "YYYY-MM-dd HH24:MI:SS";
                    string currdate = sgen.server_datetime(userCode);
                    string ld_source = sgen.getstring(userCode, "select master_id from master_setting where type='TSC' and master_name='Web' and find_in_set(client_unit_id,'" + unitid_mst + "')=1");
                    if ((ld_source == null) || (ld_source == "0") || (ld_source == ""))
                    {
                        string master_id = sgen.genNo(userCode, "select max(to_number (nvl(master_id,'0'))) as max from master_setting where client_unit_id='" + unitid_mst + "' and  type='TSC' ", 3, "max");
                        ld_source = master_id;
                        sgen.execute_cmd(userCode, "Insert into master_setting  (INACTIVE_DATE,STATUS,MALERATIO,FEMALERATIO,SECTIONTYPE,CLIENT_GSTIN,GROUP_ID,GROUP_REFRENCE_NUMBER,CONT_PERSON_EMAIL,CONT_PERSON_ALTNUMBER,CONT_PERSON_NUMBER,CONT_PERSON_NAME,UNIT_NAME,GROUP_NAME,CLIENT_NAME,TEACHER_CATEGORY,OPTIONAL_SUBJECT,SUBJECT_STRENGTH,SECTION_STRENGTH,SECTIONID,CLASSID,ISREGFEESBEFOREADM,ISALPHABETIC_WISE,ISADMISSION_WISE,ISSECTIONBASED,ISCLASSBASED,ISSCHOOLBASED,master_status ,ISROLLNOCHANGE,ISRECEIPTNOCHANGE,ISROLLNOREGWISE,ISREGNOCHANGE,vch_num,vch_date,type,Master_type,master_id, Master_Name, master_entby ,master_entdate,client_id,client_unit_id , master_editby ,master_editdate,CREATED_DATE)" +
                                                   " select to_date('" + currdate + "','" + dt_ft + "'), '0','0', '0','0','0', '0', '0', '0','0', '0','0','0', '0', '0', '0', '0', '0','0','0', '0', '0', '0','0', '0', '0','0', '0','0','0','0', '0', '0',to_date('" + currdate + "','" + dt_ft + "'), 'TSC','0','" + master_id + "','Web','" + userid_mst + "',to_date('" + currdate + "','" + dt_ft + "') ,'" + clientid_mst + "','" + unitid_mst + "','-' ,to_date('" + currdate + "','" + dt_ft + "') ,to_date('" + currdate + "','" + dt_ft + "') from dual" +
                                                   " where Not EXISTS(select Master_name from master_setting where Master_name='Web' and  client_unit_id='" + unitid_mst + "' and   type='TSC' ) ");

                    }



                    if ((model[0].Col20 == "") || (model[0].Col20 == null))
                    {
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";

                        ViewBag.scripCall += "mytoast('warning', 'toast-top-right', 'Please Enter Message');";

                        return View(model);
                    }



                    var tmodel = model.FirstOrDefault();
                    //string currdate = sgen.server_datetime(userCode);
                    string cond = "", found = "", emailto = "";
                    DataTable dtstr = new DataTable();

                    dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                    DataRow dr = dtstr.NewRow();
                    emailto = model[0].Col22;
                    //if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    //{
                    //    isedit = true;
                    //    vch_num = model[0].Col16;

                    //}
                    //else
                    //{
                    isedit = false;
                    mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                    vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                    model[0].Col16 = vch_num;

                    //#region new contact
                    //if (model[0].Chk1 == true)
                    //{
                    //    emailto = model[0].Col26;
                    //    model[0].Col18 = model[0].SelectedItems6.FirstOrDefault();
                    //    mq = "select max(to_number(vch_num)) as auto_genid from clients_mst a where  type in " +
                    //            "('BCD' ,'DDBCD')" + model[0].Col11.Trim() + " and ref_code='" + model[0].Col18.Trim() + "' and substr(ref_code,0,3)='303'";
                    //    model[0].Col17 = sgen.genNo(userCode, mq, 6, "auto_genid");
                    //    DataTable dtstrr = cmd_Fun.GetStructure(userCode, "clients_mst");
                    //    dr = dtstrr.NewRow();
                    //    dr["ref_code"] = model[0].Col18;
                    //    dr["vch_num"] = model[0].Col17;
                    //    dr["vch_date"] = sgen.Make_date_S(model[0].Col29);
                    //    dr["type"] = "BCD";
                    //    dr["cpname"] = model[0].Col25;//cont per name
                    //    dr["cplandno"] = model[0].Col27;//cont per phone
                    //    dr["cpemail"] = model[0].Col26;//cont per email
                    //    dr["rec_id"] = "0";
                    //    dr["client_id"] = clientid_mst;
                    //    dr["client_unit_id"] = unitid_mst;
                    //    dr["ent_by"] = userid_mst;
                    //    dr["ent_date"] = currdate;
                    //    dr["edit_by"] = "-";
                    //    dr["edit_date"] = currdate;
                    //    dtstrr.Rows.Add(dr);
                    //    bool ok = sgen.Update_data_fast1(userCode, dtstrr, "clients_mst", tmodel.Col8, isedit);
                    //}
                    //#endregion

                    //}



                    dr = dtstr.NewRow();
                    dr["rec_id"] = "0";
                    dr["type"] = model[0].Col12;
                    dr["vch_num"] = vch_num.Trim();
                    dr["vch_date"] = sgen.Make_date_S(model[0].Col29);
                    dr["CP_FNAME"] = model[0].Col17;      // contact_id
                    dr["cust_id"] = model[0].Col18;      //acc_id 
                    dr["ld_owner"] = model[0].SelectedItems1.FirstOrDefault(); //ticket type                                  


                    dr["remark"] = model[0].Col20;// message
                    dr["address"] = model[0].Col21;// subject
                    dr["lead_con"] = "N";
                    dr["ORD_SOURCE"] = ld_source;// ticket source                     
                    dr["lead_app"] = model[0].Col30;



                    dr = getsave(currdate, dr, model, isedit);
                    dtstr.Rows.Add(dr);

                    bool Result = sgen.Update_data_fast1(userCode, dtstr, model[0].Col10.Trim(), tmodel.Col8, isedit);
                    if (Result == true)
                    {

                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        model[0].Col16 = vch_num;
                        model[0].Col30 = "N";


                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col9 = tm.Col9,
                            Col10 = tm.Col10,
                            Col11 = tm.Col11,
                            Col12 = tm.Col12,
                            Col14 = tm.Col14,
                            Col15 = tm.Col15,
                            Col16 = tm.Col16,
                            Col30 = tm.Col30,
                            Col29 = tm.Col29,
                            TList1 = mod1,
                            SelectedItems1 = new string[] { "" },


                        });


                        ViewBag.scripCall = "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";

                    }
                    else
                    {
                        ViewBag.scripCall = "showmsgJS(1, 'Record Not Saved',0);";
                    }
                }

            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region Web Ticket List
        public ActionResult web_tlist()
        {
            FillMst();
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            model[0].Col9 = "WEB TICKET APPROVAL";
            model[0].Col10 = "Lead_Master";
            model[0].Col11 = " and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "'";
            ViewBag.scripCall = "enableForm();";
            model[0].Col17 = "P";




            #region pending


            DataTable dt = new DataTable();

            mq = " select  a.vch_num Ticket_No," +
                            " b.c_name account_name, ((replace(c.cpname, '0', '-') || ' ' || replace(c.cp_mname, '0', '') || ' ' || replace(c.cp_lname, '0', ''))) contact_person," +
                            "a.address subject " +
                            " ,d.master_name ticket_type, e.master_name ticket_status, " +
                            " nvl(max(f.col5),'-') ticket_group,nvl(ud.first_name||' '||replace(ud.middle_name,'0','')||''||replace(ud.last_name,'0',''),'-') Agent" +
                            ",g.master_name ticket_priority,(case when a.INTG_ID ='0' then '-' else a.INTG_ID end ) MOM_NO from lead_master a " +
                            "inner join clients_mst b on a.cust_id = b.vch_num and a.client_unit_id = b.client_unit_id " +
                            " inner join clients_mst c on a.cp_fname = c.vch_num and b.vch_num = c.ref_code and a.client_unit_id = b.client_unit_id " +
                            " inner join master_setting d on a.ld_owner = d.master_id and d.type = 'TKT' and a.client_unit_id = d.client_unit_id" +
                            "  left join master_setting e on a.ld_status = e.master_id and e.type = 'TKS' and a.client_unit_id = e.client_unit_id" +
                            "   left join master_setting g on a.ld_source = g.master_id and g.type = 'TKP' and a.client_unit_id = g.client_unit_id" +
                            "    left join enx_tab2 f on a.ld_product = f.vch_num and f.type = 'GRP' and a.client_unit_id = f.client_unit_id left join " +
                            "user_details ud on  ud.vch_num=a.bsn_type and ud.type='CPR' " +
                            "  where a.type = 'TCK' and a.client_unit_id = '" + unitid_mst + "' and a.lead_con='N' and  a.lead_app='N'   group by " +
                            "  a.INTG_ID,a.vch_num, b.c_name ," +
                            " ((replace(c.cpname, '0', '-') || ' ' || replace(c.cp_mname, '0', '') || ' ' || replace(c.cp_lname, '0', '')))," +
                            "a.address , d.master_name, e.master_name, g.master_name," +
                            " nvl(ud.first_name||' '||replace(ud.middle_name,'0','')||''||replace(ud.last_name,'0',''),'-') order by a.vch_num desc ";

            dt = sgen.getdata(userCode, mq);
            if (dt.Rows.Count > 0)
            {
                var tm = model.FirstOrDefault();
                model = new List<Tmodelmain>();
                ViewBag.vsave = "";
                ViewBag.vsavenew = "";
                ViewBag.scripCall = "$('#btn_Fill').attr('disabled','disabled')";
                foreach (DataRow dr in dt.Rows)
                {
                    model.Add(new Tmodelmain
                    {
                        Col9 = tm.Col9,
                        Col11 = tm.Col11,
                        Col12 = tm.Col12,
                        Col10 = tm.Col10,
                        Col13 = tm.Col13,
                        Col14 = tm.Col14,
                        Col15 = tm.Col15,
                        Col28 = tm.Col28,
                        Col29 = tm.Col29,
                        Col30 = tm.Col30,
                        Col34 = tm.Col34,
                        Col35 = tm.Col35,
                        Col36 = tm.Col36,
                        Col16 = dr["Ticket_No"].ToString(),
                        Col18 = dr["Ticket_No"].ToString(),
                        Col17 = tm.Col17,
                        Col19 = dr["account_name"].ToString(),
                        Col20 = dr["contact_person"].ToString(),
                        Col21 = dr["Subject"].ToString(),
                        Col22 = dr["Ticket_type"].ToString(),
                        Col27 = "P",
                    });
                }
            }
            #endregion

            return View(model);
        }
        [HttpPost]
        public ActionResult web_tlist(List<Tmodelmain> model, string command, string mid)
        {
            try
            {
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();

                string cond = "";
                int cnt = 0;

                if (command == "Submit")
                {
                    string status = "";
                    Boolean isok = true;
                    for (int i = 0; i < model.Count; i++)
                    {
                        if (model[i].Col27 == "P")
                        {
                            status = "N";
                        }
                        else if (model[i].Col27 == "A")
                        {
                            status = "A";
                            cnt++;
                        }
                        else if (model[i].Col27 == "R")
                        {
                            status = "R";
                            cnt++;
                        }
                        string xDate = sgen.server_datetime(userCode);
                        string dt_ft = "YYYY-MM-dd HH24:MI:SS";
                        // mq = "update lead_master set col22='" + userid_mst + "', date5= to_date('" + xDate + "','" + dt_ft + "'), col20='" + status + "' where type='LON' and vch_num='" + model[i].Col16 + "' and client_unit_id='" + unitid_mst + "'";
                        mq = "update lead_master set  lead_app='" + status + "' where type='TCK' and vch_num='" + model[i].Col16 + "' and client_unit_id='" + unitid_mst + "'";
                        isok = sgen.execute_cmd(userCode, mq);
                    }
                    if (isok == true)
                    {
                        if (cnt > 0) { ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Web Ticket Updated Successfully');"; };
                        DataTable dt = new DataTable();

                        mq = " select  a.vch_num Ticket_No," +
                             " b.c_name account_name, ((replace(c.cpname, '0', '-') || ' ' || replace(c.cp_mname, '0', '') || ' ' || replace(c.cp_lname, '0', ''))) contact_person," +
                             "a.address subject " +
                             " ,d.master_name ticket_type, e.master_name ticket_status, " +
                             " nvl(max(f.col5),'-') ticket_group,nvl(ud.first_name||' '||replace(ud.middle_name,'0','')||''||replace(ud.last_name,'0',''),'-') Agent" +
                             ",g.master_name ticket_priority,(case when a.INTG_ID ='0' then '-' else a.INTG_ID end ) MOM_NO from lead_master a " +
                             "inner join clients_mst b on a.cust_id = b.vch_num and a.client_unit_id = b.client_unit_id " +
                             " inner join clients_mst c on a.cp_fname = c.vch_num and b.vch_num = c.ref_code and a.client_unit_id = b.client_unit_id " +
                             " inner join master_setting d on a.ld_owner = d.master_id and d.type = 'TKT' and a.client_unit_id = d.client_unit_id" +
                             "  left join master_setting e on a.ld_status = e.master_id and e.type = 'TKS' and a.client_unit_id = e.client_unit_id" +
                             "   left join master_setting g on a.ld_source = g.master_id and g.type = 'TKP' and a.client_unit_id = g.client_unit_id" +
                             "    left join enx_tab2 f on a.ld_product = f.vch_num and f.type = 'GRP' and a.client_unit_id = f.client_unit_id left join " +
                             "user_details ud on  ud.vch_num=a.bsn_type and ud.type='CPR' " +
                             "  where a.type = 'TCK' and a.client_unit_id = '" + unitid_mst + "' and a.lead_con='N' and  a.lead_app='N'   group by " +
                             "  a.INTG_ID,a.vch_num, b.c_name ," +
                             " ((replace(c.cpname, '0', '-') || ' ' || replace(c.cp_mname, '0', '') || ' ' || replace(c.cp_lname, '0', '')))," +
                             "a.address , d.master_name, e.master_name, g.master_name," +
                             " nvl(ud.first_name||' '||replace(ud.middle_name,'0','')||''||replace(ud.last_name,'0',''),'-') order by a.vch_num desc ";

                        dt = sgen.getdata(userCode, mq);
                        if (dt.Rows.Count > 0)
                        {
                            tm = model.FirstOrDefault();
                            model = new List<Tmodelmain>();
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            ViewBag.scripCall = "$('#btn_Fill').attr('disabled','disabled')";
                            foreach (DataRow dr in dt.Rows)
                            {
                                model.Add(new Tmodelmain
                                {
                                    Col9 = tm.Col9,
                                    Col11 = tm.Col11,
                                    Col12 = tm.Col12,
                                    Col10 = tm.Col10,
                                    Col13 = tm.Col13,
                                    Col14 = tm.Col14,
                                    Col15 = tm.Col15,
                                    Col28 = tm.Col28,
                                    Col29 = tm.Col29,
                                    Col30 = tm.Col30,
                                    Col34 = tm.Col34,
                                    Col35 = tm.Col35,
                                    Col36 = tm.Col36,
                                    Col16 = dr["Ticket_No"].ToString(),
                                    Col18 = dr["Ticket_No"].ToString(),
                                    Col17 = tm.Col17,
                                    Col19 = dr["account_name"].ToString(),
                                    Col20 = dr["contact_person"].ToString(),
                                    Col21 = dr["Subject"].ToString(),
                                    Col22 = dr["Ticket_type"].ToString(),
                                    Col27 = "P",
                                });
                            }
                        }
                    }

                }
                else if (command == "Pending")
                {
                    cond = model[0].Col35;
                    DataTable dt = new DataTable();

                    mq = " select  a.vch_num Ticket_No," +
                             " b.c_name account_name, ((replace(c.cpname, '0', '-') || ' ' || replace(c.cp_mname, '0', '') || ' ' || replace(c.cp_lname, '0', ''))) contact_person," +
                             "a.address subject " +
                             " ,d.master_name ticket_type, e.master_name ticket_status, " +
                             " nvl(max(f.col5),'-') ticket_group,nvl(ud.first_name||' '||replace(ud.middle_name,'0','')||''||replace(ud.last_name,'0',''),'-') Agent" +
                             ",g.master_name ticket_priority,(case when a.INTG_ID ='0' then '-' else a.INTG_ID end ) MOM_NO from lead_master a " +
                             "inner join clients_mst b on a.cust_id = b.vch_num and a.client_unit_id = b.client_unit_id " +
                             " inner join clients_mst c on a.cp_fname = c.vch_num and b.vch_num = c.ref_code and a.client_unit_id = b.client_unit_id " +
                             " inner join master_setting d on a.ld_owner = d.master_id and d.type = 'TKT' and a.client_unit_id = d.client_unit_id" +
                             "  left join master_setting e on a.ld_status = e.master_id and e.type = 'TKS' and a.client_unit_id = e.client_unit_id" +
                             "   left join master_setting g on a.ld_source = g.master_id and g.type = 'TKP' and a.client_unit_id = g.client_unit_id" +
                             "    left join enx_tab2 f on a.ld_product = f.vch_num and f.type = 'GRP' and a.client_unit_id = f.client_unit_id left join " +
                             "user_details ud on  ud.vch_num=a.bsn_type and ud.type='CPR' " +
                             "  where a.type = 'TCK' and a.client_unit_id = '" + unitid_mst + "' and a.lead_con='N' and  a.lead_app='N'   group by " +
                             "  a.INTG_ID,a.vch_num, b.c_name ," +
                             " ((replace(c.cpname, '0', '-') || ' ' || replace(c.cp_mname, '0', '') || ' ' || replace(c.cp_lname, '0', '')))," +
                             "a.address , d.master_name, e.master_name, g.master_name," +
                             " nvl(ud.first_name||' '||replace(ud.middle_name,'0','')||''||replace(ud.last_name,'0',''),'-') order by a.vch_num desc ";

                    dt = sgen.getdata(userCode, mq);
                    if (dt.Rows.Count > 0)
                    {
                        tm = model.FirstOrDefault();
                        model = new List<Tmodelmain>();
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                        foreach (DataRow dr in dt.Rows)
                        {
                            model.Add(new Tmodelmain
                            {
                                Col9 = tm.Col9,
                                Col11 = tm.Col11,
                                Col12 = tm.Col12,
                                Col10 = tm.Col10,
                                Col13 = tm.Col13,
                                Col14 = tm.Col14,
                                Col15 = tm.Col15,
                                Col28 = tm.Col28,
                                Col29 = tm.Col29,
                                Col30 = tm.Col30,
                                Col34 = tm.Col34,
                                Col35 = tm.Col35,
                                Col36 = tm.Col36,
                                Col16 = dr["Ticket_No"].ToString(),
                                Col18 = dr["Ticket_No"].ToString(),
                                Col17 = tm.Col17,
                                Col19 = dr["account_name"].ToString(),
                                Col20 = dr["contact_person"].ToString(),
                                Col21 = dr["Subject"].ToString(),
                                Col22 = dr["Ticket_type"].ToString(),
                                Col27 = "P",
                            });
                        }
                    }
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region Call Log
        public ActionResult call_log(string mid)
        {
            FillMst();
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);

            model[0].Col9 = "CALL LOG";
            model[0].Col10 = "Enx_tab2";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "CAL";

            List<SelectListItem> md1 = new List<SelectListItem>();
            model[0].SelectedItems1 = new string[] { "" };
            model[0].SelectedItems2 = new string[] { "" };
            model[0].SelectedItems3 = new string[] { "" };
            TempData[MyGuid + "_TList1"] = model[0].TList1 = md1;
            TempData[MyGuid + "_TList2"] = model[0].TList2 = md1;
            TempData[MyGuid + "_TList3"] = model[0].TList2 = md1;
            DataTable dtb = (DataTable)sgen.GetSession(MyGuid, "URIGHTS");
            try
            {
                dtb = dtb.Select("m_id='" + model[0].Col14 + "'").CopyToDataTable();
                if (dtb.Rows.Count > 0)
                {
                    model[0].Col55 = dtb.Rows[0]["btnnew"].ToString();
                    model[0].Col56 = dtb.Rows[0]["btnedit"].ToString();
                    model[0].Col57 = dtb.Rows[0]["btnview"].ToString();

                }
            }
            catch (Exception ex) { }

            if (Request.QueryString["fstr"] != null)
            {
                string fstr = "";
                if (Request.QueryString["fstr"].StartsWith("EDIT"))
                {
                    fstr = EncryptDecrypt.Decrypt(Request.QueryString["fstr"].ToString().Replace("EDIT", "").Trim());
                    sgen.SetSession(MyGuid, "SSEEKVAL", fstr);
                    CallbackFun("EDIT", "Y", "call_log", "vastu", model);
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                    ViewBag.scripCall = "enableForm();";

                }
                if (Request.QueryString["fstr"].StartsWith("VIEW"))
                {
                    fstr = EncryptDecrypt.Decrypt(Request.QueryString["fstr"].ToString().Replace("VIEW", "").Trim());
                    sgen.SetSession(MyGuid, "SSEEKVAL", fstr);
                    CallbackFun("VIEW", "N", "call_log", "vastu", model);
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "disabled='disabled'";
                    ViewBag.vsavenew = "disabled='disabled'";
                    model[0].Col13 = "Save";
                    model[0].Col100 = "Save & New";
                    model[0].Col121 = "S";
                    model[0].Col122 = "<u>S</u>ave";
                    model[0].Col123 = "Save & Ne<u>w</u>";
                    ViewBag.scripCall = "disableForm();";

                }

            }


            return View(model);
        }
        public List<Tmodelmain> new_call_log(List<Tmodelmain> model)
        {
            try
            {
                model = getnew(model);
                List<SelectListItem> mod1 = new List<SelectListItem>();
                List<SelectListItem> mod2 = new List<SelectListItem>();
                List<SelectListItem> mod3 = new List<SelectListItem>();
                mod1.Add(new SelectListItem { Text = "Incoming", Value = "Incoming" });
                mod1.Add(new SelectListItem { Text = "Outgoing", Value = "Outgoing" });
                TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1;

                TempData[MyGuid + "_Tlist2"] = model[0].TList2 = mod2 = cmd_Fun.outcome(userCode, unitid_mst);

                //mod3.Add(new SelectListItem { Text = "Account", Value = "Account" });
                //mod3.Add(new SelectListItem { Text = "Prospect", Value = "Prospect" });
                //mod3.Add(new SelectListItem { Text = "Lead", Value = "Lead" });
                //TempData[MyGuid + "_Tlist3"] = model[0].TList3 = mod3;
                model[0].Col36 = sgen.server_datetime_local(userCode);

                var tm = model.FirstOrDefault();




            }
            catch (Exception ex)
            { ViewBag.scripCall = "showmsgJS(1, '" + ex.Message.ToString().Replace("'", "") + "', 1);"; }
            return model;
        }
        [HttpPost]
        public ActionResult call_log(List<Tmodelmain> model, string command, string mid, HttpPostedFileBase upd1)
        {
            try
            {
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();
                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_Tlist1"];
                List<SelectListItem> mod2 = (List<SelectListItem>)TempData[MyGuid + "_Tlist2"];
                List<SelectListItem> mod3 = (List<SelectListItem>)TempData[MyGuid + "_Tlist3"];
                TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1;
                TempData[MyGuid + "_Tlist2"] = model[0].TList2 = mod2;
                //TempData[MyGuid + "_Tlist3"] = model[0].TList3 = mod3;
                if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                if (model[0].SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
                //if (model[0].SelectedItems3 == null) model[0].SelectedItems3 = new string[] { "" };

                if (command == "New")
                {
                    if (model[0].Col55 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for new entry, please contact your admin', 2);";
                        return View(model);
                    }
                    model = new_call_log(model);
                }

                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    if ((model[0].Col56 == "N") && (btnval == "EDIT"))
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for edit , please contact your admin', 2);disableForm();";
                        return View(model);
                    }
                    if (sgen.GetSession(MyGuid, "delid") != null) { btnval = "FDEL"; sgen.SetSession(MyGuid, "btnval", btnval); }
                    else if (sgen.GetSession(MyGuid, "btnval") != null) btnval = sgen.GetSession(MyGuid, "btnval").ToString();
                    model = StartCallback(model);

                }
                else if (command.Trim() == "Save" || command.Trim() == "Update" || command == "Save & New" || command == "Update & New")
                {
                    if (model[0].Col55 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for save  , please contact your admin', 2);";
                        return View(model);
                    }


                    var tmodel = model.FirstOrDefault();
                    string currdate = sgen.server_datetime(userCode);
                    string cond = "", found = "", emailto = "";
                    DataTable dtstr = new DataTable();

                    dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                    DataRow dr = dtstr.NewRow();
                    emailto = model[0].SelectedItems2.FirstOrDefault();
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        isedit = true;
                        vch_num = model[0].Col16;

                    }
                    else
                    {
                        isedit = false;
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        model[0].Col16 = vch_num;



                    }



                    dr = dtstr.NewRow();
                    dr["rec_id"] = "0";
                    dr["type"] = model[0].Col12;
                    dr["vch_num"] = vch_num.Trim();
                    dr["vch_date"] = currdate;
                    dr["Col5"] = model[0].Col18;      //acc_id  
                    dr["Col6"] = model[0].Col19;      // contact_id
                    dr["Col7"] = model[0].SelectedItems1.FirstOrDefault();// call type
                    dr["Col9"] = model[0].SelectedItems2.FirstOrDefault();// action
                                                                          // dr["Col10"] = model[0].SelectedItems3.FirstOrDefault();// associte
                    dr["Col10"] = model[0].Col35;// associte
                    dr["Col11"] = model[0].Col22;      // lead_id
                    dr["Col24"] = model[0].Col21;      // note
                    dr["date1"] = sgen.Make_date_S(model[0].Col36, sgen.Getdatetimeformat());

                    dr = getsave(currdate, dr, model, isedit);
                    dtstr.Rows.Add(dr);

                    bool Result = sgen.Update_data_fast1(userCode, dtstr, model[0].Col10.Trim(), tmodel.Col8, isedit);
                    if (Result == true)
                    {

                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col10 = tm.Col10,
                            Col11 = tm.Col11,
                            Col12 = tm.Col12,
                            Col13 = "Save",
                            Col100 = "Save & New",
                            Col121 = "S",
                            Col122 = "<u>S</u>ave",
                            Col123 = "Save & Ne<u>w</u>",
                            Col14 = tm.Col14,
                            Col15 = tm.Col15,
                            Col9 = tm.Col9,
                            TList1 = tm.TList1,
                            TList2 = tm.TList2,
                            TList3 = tm.TList3,
                            SelectedItems1 = new string[] { "" },
                            SelectedItems2 = new string[] { "" },
                            SelectedItems3 = new string[] { "" },


                        });
                        if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                        {
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.scripCall = "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                        {
                            try
                            {
                                model = new_call_log(model);
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                            }
                            catch (Exception ex) { }
                        }
                    }
                    else
                    {
                        ViewBag.scripCall = "showmsgJS(1, 'Record Not Saved',0);";
                    }
                }

            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region  Appointment
        public ActionResult appointment(string mid)
        {
            MyGuid = EncryptDecrypt.Decrypt(HttpUtility.ParseQueryString(Request.UrlReferrer.Query)["m_id"]);
            FillMst(MyGuid);
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);

            model[0].Col9 = "APPOINTMENT";
            model[0].Col10 = "Enx_tab2";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "APP";
            model[0].Chk1 = true;

            List<SelectListItem> md1 = new List<SelectListItem>();
            //model[0].SelectedItems1 = new string[] { "" };
            model[0].SelectedItems2 = new string[] { "" };
            model[0].SelectedItems3 = new string[] { "" };
            //TempData[MyGuid + "_TList1"] = model[0].TList1 = md1;
            TempData[MyGuid + "_TList2"] = model[0].TList2 = md1;
            TempData[MyGuid + "_TList3"] = model[0].TList2 = md1;
            DataTable dtb = (DataTable)sgen.GetSession(MyGuid, "URIGHTS");
            try
            {
                dtb = dtb.Select("m_id='" + model[0].Col14 + "'").CopyToDataTable();
                if (dtb.Rows.Count > 0)
                {
                    model[0].Col55 = dtb.Rows[0]["btnnew"].ToString();
                    model[0].Col56 = dtb.Rows[0]["btnedit"].ToString();
                    model[0].Col57 = dtb.Rows[0]["btnview"].ToString();

                }
            }
            catch (Exception ex) { }

            if (Request.QueryString["fstr"] != null)
            {
                string fstr = "";
                if (Request.QueryString["fstr"].StartsWith("EDIT"))
                {
                    fstr = EncryptDecrypt.Decrypt(Request.QueryString["fstr"].ToString().Replace("EDIT", "").Trim());
                    sgen.SetSession(MyGuid, "SSEEKVAL", fstr);
                    CallbackFun("EDIT", "Y", "appointment", "vastu", model);
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                    ViewBag.scripCall = "enableForm();";
                }
                else if (Request.QueryString["fstr"].StartsWith("VIEW"))
                {
                    fstr = EncryptDecrypt.Decrypt(Request.QueryString["fstr"].ToString().Replace("VIEW", "").Trim());
                    sgen.SetSession(MyGuid, "SSEEKVAL", fstr);
                    CallbackFun("VIEW", "N", "appointment", "vastu", model);
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "disabled='disabled'";
                    ViewBag.vsavenew = "disabled='disabled'";
                    model[0].Col13 = "Save";
                    model[0].Col100 = "Save & New";
                    model[0].Col121 = "S";
                    model[0].Col122 = "<u>S</u>ave";
                    model[0].Col123 = "Save & Ne<u>w</u>";
                    ViewBag.scripCall = "disableForm();";

                }

                else
                {
                    fstr = EncryptDecrypt.Decrypt(Request.QueryString["fstr"].ToString());
                    sgen.SetSession(MyGuid, "SSEEKVAL", fstr);
                    CallbackFun("EDIT", "Y", "appointment", "vastu", model);
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                    ViewBag.scripCall = "enableForm();";
                }

            }


            return View(model);
        }
        public List<Tmodelmain> new_appointment(List<Tmodelmain> model)
        {
            try
            {
                model = getnew(model);
                model[0].Chk1 = true;
                List<SelectListItem> mod1 = new List<SelectListItem>();
                List<SelectListItem> mod2 = new List<SelectListItem>();
                List<SelectListItem> mod3 = new List<SelectListItem>();
                //mod1.Add(new SelectListItem { Text = "Account", Value = "Account" });
                //mod1.Add(new SelectListItem { Text = "Prospect", Value = "Prospect" });
                //mod1.Add(new SelectListItem { Text = "Lead", Value = "Lead" });
                //TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1;

                TempData[MyGuid + "_Tlist2"] = model[0].TList2 = mod2 = cmd_Fun.username_mod(userCode, m_module3);


                TempData[MyGuid + "_Tlist3"] = model[0].TList3 = mod3 = cmd_Fun.outcome(userCode, unitid_mst);

                var tm = model.FirstOrDefault();




            }
            catch (Exception ex)
            { ViewBag.scripCall = "showmsgJS(1, '" + ex.Message.ToString().Replace("'", "") + "', 1);"; }
            return model;
        }
        [HttpPost]
        public ActionResult appointment(List<Tmodelmain> model, string command, string mid, HttpPostedFileBase upd1)
        {
            try
            {
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();
                //List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_Tlist1"];
                List<SelectListItem> mod2 = (List<SelectListItem>)TempData[MyGuid + "_Tlist2"];
                List<SelectListItem> mod3 = (List<SelectListItem>)TempData[MyGuid + "_Tlist3"];
                //TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1;
                TempData[MyGuid + "_Tlist2"] = model[0].TList2 = mod2;
                TempData[MyGuid + "_Tlist3"] = model[0].TList3 = mod3;
                //if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                if (model[0].SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
                if (model[0].SelectedItems3 == null) model[0].SelectedItems3 = new string[] { "" };

                if (command == "New")
                {
                    if (model[0].Col55 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for new entry, please contact your admin', 2);";
                        return View(model);
                    }
                    model = new_appointment(model);
                }

                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    if ((model[0].Col56 == "N") && (btnval == "EDIT"))
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for edit , please contact your admin', 2);disableForm();";
                        return View(model);
                    }
                    if (sgen.GetSession(MyGuid, "delid") != null) { btnval = "FDEL"; sgen.SetSession(MyGuid, "btnval", btnval); }
                    else if (sgen.GetSession(MyGuid, "btnval") != null) btnval = sgen.GetSession(MyGuid, "btnval").ToString();
                    model = StartCallback(model);

                }
                else if (command.Trim() == "Save" || command.Trim() == "Update" || command == "Save & New" || command == "Update & New")
                {
                    if (model[0].Col55 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for save  , please contact your admin', 2);";
                        return View(model);
                    }


                    var tmodel = model.FirstOrDefault();
                    string currdate = sgen.server_datetime(userCode);
                    string cond = "", found = "", emailto = "";
                    DataTable dtstr = new DataTable();

                    dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                    DataRow dr = dtstr.NewRow();
                    emailto = model[0].SelectedItems2.FirstOrDefault();
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        isedit = true;
                        vch_num = model[0].Col16;
                        string appcls = sgen.getstring(userCode, "select master_id from master_setting where type='OUT' and client_unit_id='" + unitid_mst + "' and classid='Y'");
                        if (appcls != model[0].SelectedItems3.FirstOrDefault())
                        {
                            sgen.execute_cmd(userCode, "update enx_tab2 set r_no='R' where " + model[0].Col8 + " ");
                            isedit = false;
                            mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                            vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                            model[0].Col16 = vch_num;
                            model[0].Col33 = "N";
                        }

                        if (appcls == model[0].SelectedItems3.FirstOrDefault())
                        {
                            model[0].Col33 = "C";
                        }

                    }
                    else
                    {
                        isedit = false;
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        model[0].Col16 = vch_num;
                        model[0].Col33 = "N";



                    }



                    dr = dtstr.NewRow();
                    dr["rec_id"] = "0";
                    dr["type"] = model[0].Col12;
                    dr["vch_num"] = vch_num.Trim();
                    dr["vch_date"] = currdate;
                    dr["Col5"] = model[0].Col18;      //acc_id  
                    dr["Col6"] = model[0].Col19;      // contact_id
                                                      // dr["Col7"] = model[0].SelectedItems1.FirstOrDefault();// related to
                    dr["Col7"] = model[0].Col35;// related to
                    dr["Col9"] = string.Join(",", model[0].SelectedItems2);//  users
                    dr["Col10"] = model[0].SelectedItems3.FirstOrDefault();// Outcome
                    dr["Col11"] = model[0].Col21;      // lead_id                   
                    dr["Col3"] = model[0].Col22;      // title
                    dr["Col4"] = model[0].Col23;      // where
                    dr["Col24"] = model[0].Col24;      // desc
                    dr["R_No"] = model[0].Col33;
                    if (model[0].Chk1 == true) //full day or not
                    {
                        dr["col12"] = "Y";
                        dr["date1"] = sgen.Make_date_S(model[0].Col25);
                        dr["date2"] = sgen.Make_date_S(model[0].Col26);
                    }
                    else
                    {
                        dr["col12"] = "N";
                        dr["date1"] = sgen.Make_date_S(model[0].Col27, sgen.Getdatetimeformat());
                        dr["date2"] = sgen.Make_date_S(model[0].Col28, sgen.Getdatetimeformat());
                    }


                    dr = getsave(currdate, dr, model, isedit);
                    dtstr.Rows.Add(dr);

                    bool Result = sgen.Update_data_fast1(userCode, dtstr, model[0].Col10.Trim(), tmodel.Col8, isedit);
                    if (Result == true)
                    {

                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col10 = tm.Col10,
                            Col11 = tm.Col11,
                            Col12 = tm.Col12,
                            Col13 = "Save",
                            Col100 = "Save & New",
                            Col121 = "S",
                            Col122 = "<u>S</u>ave",
                            Col123 = "Save & Ne<u>w</u>",
                            Col14 = tm.Col14,
                            Col15 = tm.Col15,
                            Col9 = tm.Col9,
                            TList1 = tm.TList1,
                            TList2 = tm.TList2,
                            TList3 = tm.TList3,
                            SelectedItems1 = new string[] { "" },
                            SelectedItems2 = new string[] { "" },
                            SelectedItems3 = new string[] { "" },


                        });
                        if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                        {
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.scripCall = "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                        {
                            try
                            {
                                model = new_appointment(model);
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                            }
                            catch (Exception ex) { }
                        }
                    }
                    else
                    {
                        ViewBag.scripCall = "showmsgJS(1, 'Record Not Saved',0);";
                    }
                }

            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region app_list 
        public ActionResult app_list()
        {
            FillMst();
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            string defval = "";
            ViewBag.scripCall = "enableForm();";
            model[0].Col10 = "enx_tab2";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "APP";


            var tm = model.FirstOrDefault();

            string leadcon = "";


            model[0].Col9 = "LIST OF APPOINTMENTS";


            mq = " Select  a.vch_num doc_no," +
                                "to_char(a.vch_date, '" + sgen.Getsqldateformat() + "') doc_date,replace(nvl(pr.c_name, '-'), 0, '-') as Parent_Account,b.vch_num as Account_No, " +
                                " b.c_name as Organisation_Name,((replace(ct.cpname, '0', '-') || ' ' || replace(ct.cp_mname, '0', '') || ' ' || replace(ct.cp_lname, '0', ''))) " +
                                "cp_name,a.col7 Related_To, a.col3 title,( case when a.col12 = 'Y' then 'YES' else 'No' end) Full_Day, " +
                                " ( case when a.col12='Y' then to_char(a.date1 ,'" + sgen.Getsqldateformat() + "') else  to_char(a.date1,'" + sgen.Getsqldatetimeformat() + "') end) from_date, " +
                                " ( case when a.col12='Y' then to_char(a.date2 ,'" + sgen.Getsqldateformat() + "') else  to_char(a.date2,'" + sgen.Getsqldatetimeformat() + "') end) to_date" +
                                " from enx_tab2 a inner join clients_mst b on b.vch_num = a.Col5 and" +
                                " find_in_set(b.client_unit_id,'" + unitid_mst + "')= 1 left join clients_mst pr" +
                                " on b.parent_id = pr.vch_num  and find_in_set(pr.client_unit_id,'" + unitid_mst + "')= 1 and pr.vch_num!='0' " +
                                " left join clients_mst ct  on a.col5=ct.ref_code and a.col6=ct.vch_num  and find_in_set(ct.client_unit_id,'" + unitid_mst + "')= 1" +
                                " where a.type = 'APP' and a.client_unit_id = '" + unitid_mst + "' order by a.vch_num desc ";




            sgen.SetSession(MyGuid, "gridq_demogrid", mq);

            ModelState.Clear();
            return View(model);
        }
        [HttpPost]
        public ActionResult app_list(List<Tmodelmain> model, string command, string mid)
        {
            try
            {
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();




            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region Outcome
        public ActionResult outcome()
        {
            FillMst();
            List<Tmodelmain> model = new List<Tmodelmain>();

            model = getload(model);
            model[0].Col9 = "OUTCOME MASTER";
            model[0].Col12 = "OUT";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col10 = "master_setting";

            return View(model);
        }
        public List<Tmodelmain> new_outcome(List<Tmodelmain> model)
        {

            model = getnew(model);
            mq = "select max(to_number(master_id)) as auto_genid from " + model[0].Col10 + " where type='" + model[0].Col12 + "' " + model[0].Col11 + " ";
            vch_num = sgen.genNo(userCode, mq, 3, "auto_genid");
            model[0].Col19 = vch_num;
            model[0].Col18 = "Y";
            return model;
        }
        [HttpPost]
        public ActionResult outcome(List<Tmodelmain> model, string command)
        {
            try
            {
                string isappclose = "";
                FillMst(model[0].Col15);
                if (command == "New")
                {
                    model = new_outcome(model);
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {
                    string master_id = "";
                    var tmodel = model.FirstOrDefault();
                    isappclose = "N";
                    if (model[0].Chk1 == true)
                    {
                        isappclose = "Y";

                    }
                    string currdate = sgen.server_datetime(userCode);

                    status = tmodel.Col18.Trim();
                    if (status == "N") { model[0].Col12 = "DD" + model[0].Col12; }

                    DataTable dtstr = new DataTable();
                    dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10);
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        mq1 = " and vch_num<>'" + tmodel.Col16.Trim() + "'";
                        isedit = true;
                        vch_num = tmodel.Col16.Trim();


                    }
                    else
                    {

                        mq = sgen.seekval(userCode, "Select master_name as master_name from " + model[0].Col10 + " where type in ('OUT','DDOUT') and upper(master_name)='" + tmodel.Col18.Trim().ToUpper() + "' " + model[0].Col11 + ""
                          , "master_name");
                        if (!mq.Trim().Equals("0"))
                        {
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            ViewBag.scripCall = "showmsgJS(1, 'Outcome already Exist', 2);";
                            goto END;
                        }
                        else
                        {
                            mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10 + " where type in ('OUT','DDOUT') " + model[0].Col11 + "  ";
                            vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");

                            mq = "select max(to_number(master_id)) as auto_genid from " + model[0].Col10 + " where type in ('OUT','DDOUT') " + model[0].Col11 + "  ";
                            master_id = sgen.genNo(userCode, mq, 3, "auto_genid");
                            model[0].Col19 = master_id;
                            isedit = false;
                        }
                    }

                    if (isappclose == "Y")
                    {
                        mq = sgen.seekval(userCode, "select classid from " + model[0].Col10 + " where  type in ('OUT','DDOUT') and classid='Y' " + model[0].Col11 + " " + mq1 + " ", "classid");
                        if (!mq.Trim().Equals("0"))
                        {
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            ViewBag.scripCall = "showmsgJS(1, 'You already checked for Outcome For Close Appointment', 2);";
                            goto END;
                        }
                    }
                    #region dtstr
                    DataRow dr = dtstr.NewRow();
                    dr["vch_num"] = vch_num;
                    dr["vch_date"] = currdate;
                    dr["type"] = model[0].Col12.Trim();
                    dr["master_id"] = model[0].Col19;
                    dr["master_name"] = model[0].Col17;
                    dr["status"] = status.Trim();
                    dr["classid"] = isappclose.Trim();
                    dr["rec_id"] = "0";
                    if (isedit)
                    {
                        dr["client_id"] = model[0].Col1.Trim();
                        dr["client_unit_id"] = model[0].Col2.Trim();
                        dr["master_entby"] = model[0].Col3;
                        dr["master_entdate"] = model[0].Col4;
                        dr["master_editby"] = userid_mst;
                        dr["master_editdate"] = currdate;
                    }
                    else
                    {

                        dr["client_id"] = clientid_mst;
                        dr["client_unit_id"] = unitid_mst;
                        dr["master_entby"] = userid_mst;
                        dr["master_entdate"] = currdate;
                        dr["master_editby"] = "-";
                        dr["master_editdate"] = currdate;
                    }
                    #endregion

                    dtstr.Rows.Add(dr);
                    bool Result = sgen.Update_data(userCode, dtstr, model[0].Col10, tmodel.Col8, isedit);

                    if (Result == true)
                    {
                        List<string> apps = new List<string>();
                        foreach (var key in HttpContext.Application.Keys)
                        {
                            if (key.ToString().ToUpper().Contains("_U_" + userCode + ""))
                            {
                                apps.Add(key.ToString());
                            }
                        }
                        foreach (var ap in apps)
                        {
                            HttpContext.Application[ap.ToString()] = null;
                        }

                        model = new List<Tmodelmain>();
                        tmodel.Col16 = "";
                        tmodel.Col17 = "";
                        tmodel.Col18 = "";
                        tmodel.Col20 = "";
                        tmodel.Col21 = "";
                        tmodel.Col13 = "Save";
                        tmodel.Col100 = "Save & New";
                        tmodel.Col121 = "S";
                        tmodel.Col122 = "<u>S</u>ave";
                        tmodel.Col123 = "Save & Ne<u>w</u>";
                        tmodel.Col19 = "";


                        model.Add(tmodel);
                        if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                        {
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                        {
                            try
                            {
                                model = new_outcome(model);
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                            }
                            catch (Exception ex) { }
                        }
                    }
                    else
                    {

                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                        ViewBag.scripCall += "mytoast('error', 'toast-top-right', 'Data Not Saved');";
                    }
                END:;


                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region  Small Party
        public ActionResult s_party(string mid)
        {
            MyGuid = EncryptDecrypt.Decrypt(HttpUtility.ParseQueryString(Request.UrlReferrer.Query)["m_id"]);
            var smst = Request.QueryString["smst"];
            if (smst == "") smst = "0";
            FillMst();
            chkRef();
            ViewBag.vnew = "";
            ViewBag.vedit = "";
            ViewBag.vsave = "disabled='disabled'";
            ViewBag.vsavenew = "disabled='disabled'";
            ViewBag.scripCall = "disableForm();";
            List<Tmodelmain> model = new List<Tmodelmain>();
            mid_mst = EncryptDecrypt.Decrypt(Request.QueryString["mid"]);
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            Tmodelmain tm1 = new Tmodelmain();
            tm1.Col14 = mid_mst.Trim();
            tm1.Col15 = MyGuid.Trim();
            tm1.Col13 = "Save";
            tm1.Col100 = "Save & New";
            tm1.Col121 = "S";
            tm1.Col122 = "<u>S</u>ave";
            tm1.Col123 = "Save & Ne<u>w</u>";
            tm1.Col101 = smst;
            switch (mid_mst)
            {
                //case "21008.1":// BILLING CUSTOMER DETAILS  ////Customer wala page
                //case "22005.2":
                //case "20001.1":
                case "40002.1":
                case "40002.10":
                    //case "5001.1"://work allocation ////Customer wala page
                    tm1.Col9 = "ACCOUNT DETAIL";
                    tm1.Col119 = "CUSTOMER DETAIL";
                    tm1.Col12 = "BCD";
                    tm1.Col131 = "303";
                    tm1.Col91 = "BCD";
                    break;
                case "28005.1":// PURCHASE VENDOR DETAIL AND PAYROLL
                case "9008.6":// Hr
                case "22005.1":// Vendor Account(accounts)
                case "41005.8": // BANQUET HALL CUSTOMER DETAILS    ////Vendor wala page
                    tm1.Col9 = "NEW VENDOR DETAIL";
                    tm1.Col119 = "VENDOR DETAIL";
                    tm1.Col12 = "BCD";
                    tm1.Col131 = "203";
                    tm1.Col91 = "BCD";
                    break;
            }

            DataTable dtb = (DataTable)sgen.GetSession(MyGuid, "URIGHTS");
            try
            {
                dtb = dtb.Select("m_id='" + model[0].Col14 + "'").CopyToDataTable();
                if (dtb.Rows.Count > 0)
                {
                    model[0].Col55 = dtb.Rows[0]["btnnew"].ToString();
                    model[0].Col56 = dtb.Rows[0]["btnedit"].ToString();
                    model[0].Col57 = dtb.Rows[0]["btnview"].ToString();

                }
            }
            catch (Exception ex) { }

            tm1.LTM2 = new List<Tmodelmain>();
            Tmodelmain tmltm2 = new Tmodelmain();
            tmltm2.Col1 = "1";
            tm1.LTM2.Add(tmltm2);
            model.Add(tm1);
            model[0].Col10 = "clients_mst";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            List<SelectListItem> md1 = new List<SelectListItem>();
            model[0].SelectedItems1 = new string[] { "" };
            model[0].SelectedItems2 = new string[] { "" };
            model[0].SelectedItems3 = new string[] { "" };
            TempData[MyGuid + "_TList1"] = model[0].TList1 = md1;
            TempData[MyGuid + "_TList2"] = model[0].TList2 = md1;
            TempData[MyGuid + "_TList3"] = model[0].TList3 = md1;
            sgen.SetSession(MyGuid, "VD_TYPEMST", tm1.Col12);
            sgen.SetSession(MyGuid, "VD_CONT", tm1.Col91);
            sgen.SetSession(MyGuid, "VD_PREFIX", tm1.Col131);
            return View(model);
        }
        public List<Tmodelmain> new_s_party(List<Tmodelmain> model)
        {
            try
            {
                model = getnew(model);
                List<SelectListItem> mod1 = new List<SelectListItem>();
                List<SelectListItem> mod2 = new List<SelectListItem>();
                List<SelectListItem> mod3 = new List<SelectListItem>();
                DataTable dtc = sgen.getdata(userCode, "select distinct alpha_2 ,country_name from country_state  where alpha_2='IN'");
                if (dtc.Rows.Count > 0)
                {
                    mod1 = sgen.dt_to_selectlist(dtc);
                }

                DataTable dts = sgen.getdata(userCode, "select  distinct state_gst_code,state_name  from country_state  where alpha_2='IN'");
                if (dts.Rows.Count > 0)
                {
                    mod2 = sgen.dt_to_selectlist(dts);
                }

                dts = new DataTable();
                dts = sgen.getdata(userCode, "select master_id,master_name from master_setting where type='VCG' and client_unit_id='" + unitid_mst + "'");
                if (dts.Rows.Count > 0)
                {
                    mod3 = sgen.dt_to_selectlist(dts);
                }

                TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1;
                TempData[MyGuid + "_Tlist2"] = model[0].TList2 = mod2;
                TempData[MyGuid + "_Tlist3"] = model[0].TList3 = mod3;
                var tm = model.FirstOrDefault();
            }
            catch (Exception ex) { ViewBag.scripCall = "showmsgJS(1, '" + ex.Message.ToString().Replace("'", "") + "', 1);"; }
            return model;
        }
        [HttpPost]
        public ActionResult s_party(List<Tmodelmain> model, string command, string mid, string hfrow)
        {
            try
            {
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();
                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_Tlist1"];
                List<SelectListItem> mod3 = (List<SelectListItem>)TempData[MyGuid + "_Tlist3"];
                TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1;
                TempData[MyGuid + "_Tlist3"] = model[0].TList3 = mod3;
                if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                if (model[0].SelectedItems3 == null) model[0].SelectedItems3 = new string[] { "" };

                if (command == "New")
                {
                    if (model[0].Col55 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for new entry, please contact your admin', 2);";
                        return View(model);
                    }
                    model = new_s_party(model);
                }
                else if (command == "Add")
                {
                    Tmodelmain ntm1 = new Tmodelmain();
                    ntm1.Col1 = (Convert.ToInt32(model[0].LTM2.Max(x => sgen.Make_int(x.Col1))) + 1).ToString();
                    model[0].LTM2.Add(ntm1);

                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
                else if (command == "Remove")
                {

                    if (model[0].LTM2.Count > 1) model[0].LTM2.RemoveAt(sgen.Make_int(hfrow));
                    else
                    {
                        ViewBag.scripCall = "showmsgJS(1,'You cannot remove last entry',2)";
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                        return View(model);
                    }
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
                else if (command == "Cancel")
                {
                    //return CancelFun(model);
                    return RedirectToAction(actionName, new { @m_id = EncryptDecrypt.Encrypt(model[0].Col15), @mid = EncryptDecrypt.Encrypt(model[0].Col14), @smst = model[0].Col101 });

                }
                else if (command == "Callback")
                {
                    if ((model[0].Col56 == "N") && (btnval == "EDIT"))
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for edit , please contact your admin', 2);disableForm();";
                        return View(model);
                    }
                    if (sgen.GetSession(MyGuid, "delid") != null) { btnval = "FDEL"; sgen.SetSession(MyGuid, "btnval", btnval); }
                    else if (sgen.GetSession(MyGuid, "btnval") != null) btnval = sgen.GetSession(MyGuid, "btnval").ToString();
                    model = StartCallback(model);

                }
                else if (command.Trim() == "Save" || command.Trim() == "Update" || command == "Save & New" || command == "Update & New")
                {
                    string vch_code = "";
                    if (model[0].Col55 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for save  , please contact your admin', 2);";
                        return View(model);
                    }

                    if ((model[0].LTM2[0].Col2 == "") && ((model[0].Col17 == "") || (model[0].Col17 == null)))
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'Please Enter Either Organisation Name Or Contact Person', 2);";
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                        ModelState.Clear();
                        return View(model);

                    }

                    if ((model[0].Col17 == null) || (model[0].Col17 == ""))
                    {
                        model[0].Col17 = model[0].LTM2[0].Col2;
                    }
                    var tmodel = model.FirstOrDefault();
                    string currdate = sgen.server_datetime(userCode);
                    string cond = "", found = "", emailto = "";
                    DataTable dtstr = new DataTable();

                    dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                    DataRow dr = dtstr.NewRow();
                    emailto = model[0].SelectedItems2.FirstOrDefault();
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        isedit = true;
                        vch_num = model[0].Col16;
                        vch_code = vch_num;
                    }
                    else
                    {
                        mq1 = "";
                        mq = "select max(to_number(substr(vch_num,4,8))) as auto_genid from " + model[0].Col10.Trim() + " a where  type in ('" + model[0].Col12.Trim() + "' ,'DD" + model[0].Col12 + "')" + model[0].Col11.Trim() + " and substr(vch_num,0,3)='" + model[0].Col131 + "'";
                        vch_num = model[0].Col131 + sgen.genNo(userCode, mq, 6, "auto_genid");
                        isedit = false;
                        model[0].Col16 = vch_num;
                        vch_code = vch_num;
                    }
                    #region dtstr
                    string country_id = "", state_id = "", city_id = "";
                    if ((model[0].Col18 == null) || (model[0].Col18 == "")) model[0].Col18 = "ab@ab.ab";


                    dr = dtstr.NewRow();
                    dr["rec_id"] = "0";
                    dr["type"] = model[0].Col12;
                    dr["vch_num"] = vch_num.Trim();
                    dr["vch_date"] = currdate;
                    dr["Parent_id"] = vch_num;
                    dr["status"] = "Y";
                    dr["c_name"] = model[0].Col17;

                    dr["cfrm"] = "Y";

                    dr["org_mobile"] = model[0].Col20;
                    dr["org_contact"] = model[0].Col19;
                    dr["comp_email"] = model[0].Col18;
                    dr["website"] = model[0].Col22;
                    dr["c_gstin"] = "Not Registered";
                    var cgstin = model[0].Col24;
                    if (cgstin != null)
                    {
                        dr["isgstr"] = "Y";
                        dr["c_gstin"] = cgstin;
                    }
                    if (model[0].LTM2 != null)
                    {
                        if ((model[0].LTM2[0].Col5 == null) || (model[0].LTM2[0].Col5 == "")) model[0].LTM2[0].Col5 = "0000000000";
                        if ((model[0].LTM2[0].Col4 == null) || (model[0].LTM2[0].Col4 == "")) model[0].LTM2[0].Col4 = "ab@ab.ab";
                    }
                    dr["cpname"] = model[0].LTM2[0].Col2;//cont per name
                    dr["cp_lname"] = model[0].LTM2[0].Col3; //last name
                    dr["cpemail"] = model[0].LTM2[0].Col4;//emailid
                    dr["cpcont"] = model[0].LTM2[0].Col5;//contno
                    dr["cplandno"] = model[0].LTM2[0].Col5;
                    dr["cpaltcont"] = model[0].LTM2[0].Col5;

                    dr["country"] = model[0].SelectedItems1.FirstOrDefault();
                    dr["state"] = model[0].SelectedItems2.FirstOrDefault();
                    dr["city_mn"] = model[0].Col23;
                    dr["addr"] = model[0].Col21;

                    dr["country2"] = model[0].SelectedItems1.FirstOrDefault();
                    dr["state2"] = model[0].SelectedItems2.FirstOrDefault();
                    dr["cpaddr2"] = model[0].Col21;

                    dr["country3"] = model[0].SelectedItems1.FirstOrDefault();
                    dr["state3"] = model[0].SelectedItems2.FirstOrDefault();
                    dr["cpaddr3"] = model[0].Col21;
                    dr["vdcat"] = model[0].SelectedItems3.FirstOrDefault();

                    dr = getsave(currdate, dr, model, isedit);
                    dtstr.Rows.Add(dr);

                    Satransaction sat1 = new Satransaction(userCode, MyGuid);
                    var ok0 = sgen.Update_data_fast1_uncommit(userCode, dtstr, model[0].Col10, tmodel.Col8, isedit, sat1);
                    #region contact detail
                    if (model[0].LTM2 != null)
                    {
                        dtstr = new DataTable();
                        dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                        int r = 0;
                        for (int k = 0; k < model[0].LTM2.Count; k++)
                        {
                            if (model[0].LTM2[k].Col132 == null || model[0].LTM2[k].Col132 == "")
                            {
                                mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where  type in " +
                                    "('" + model[0].Col12.Trim() + "' ,'DD" + model[0].Col12 + "')" + model[0].Col11.Trim() + " and ref_code='" + model[0].Col17.Trim() + "' and substr(ref_code,0,3)='" + model[0].Col131 + "'";
                                vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                                vch_num = (sgen.Make_decimal(vch_num) + sgen.Make_decimal(r)).ToString();
                                vch_num = sgen.padlc(sgen.Make_int(vch_num), 6, "0");
                                r = r + 1;
                            }

                            else { vch_num = model[0].LTM2[k].Col132; }
                            if ((model[0].LTM2[k].Col5 == null) || (model[0].LTM2[k].Col5 == "")) model[0].LTM2[k].Col5 = "0000000000";
                            if ((model[0].LTM2[k].Col4 == null) || (model[0].LTM2[k].Col4 == "")) model[0].LTM2[k].Col4 = "ab@ab.ab";

                            dr = dtstr.NewRow();
                            dr["ref_code"] = model[0].Col16.Trim();
                            dr["vch_num"] = vch_num;
                            dr["vch_date"] = currdate;
                            dr["type"] = model[0].Col91.Trim(); ;
                            dr["cpname"] = model[0].LTM2[k].Col2;//cont per name
                            dr["cp_lname"] = model[0].LTM2[k].Col3; //last name
                            dr["cpemail"] = model[0].LTM2[k].Col4;//emailid
                            dr["cpcont"] = model[0].LTM2[k].Col5;//contno
                            dr["cplandno"] = model[0].LTM2[k].Col5;
                            dr["cpaltcont"] = model[0].LTM2[k].Col5;
                            dr["Parent_id"] = model[0].Col16.Trim();
                            dr["rec_id"] = "0";
                            if (isedit)
                            {
                                dr["client_id"] = model[0].Col1.Trim();
                                dr["client_unit_id"] = model[0].Col2.Trim();
                                dr["ent_by"] = model[0].Col3;
                                dr["ent_date"] = model[0].Col4;
                                dr["edit_by"] = userid_mst;
                                dr["edit_date"] = currdate;
                            }
                            else
                            {
                                dr["client_id"] = clientid_mst;
                                dr["client_unit_id"] = unitid_mst;
                                dr["ent_by"] = userid_mst;
                                dr["ent_date"] = currdate;
                                dr["edit_by"] = "-";
                                dr["edit_date"] = currdate;
                            }
                            dtstr.Rows.Add(dr);
                        }
                        ok = sgen.Update_data_fast1_uncommit(userCode, dtstr, model[0].Col10, tmodel.Col85, isedit, sat1);
                    }
                    #endregion
                    #endregion
                    if (ok0 && ok)
                    {
                        sat1.Commit();
                        try
                        {
                            string reg_no = "", Email_id = "", send_type = "", phone_No = "", xclass = "", sec = "", emailidcc = "", msg_txt = "", account = "";
                            string email = "", DetailSms = "0", DetailEmail = "0", xtitle = "", url = "";
                            DataTable dtacc = new DataTable();
                            if (isedit == false)
                            {
                                string date = sgen.SaveDate_dt(currdate, false).ToString("yyyyMMdd");
                                url = vch_code + date + model[0].Col12;
                                mq = "select cp.vch_num AS ACC_ID,cp.c_name,cp.addr,group_concat((case when cp.org_mobile = '0' then '' else cp.org_mobile end)) COM_MOBILE,group_concat((case when cp.comp_email = 'ab@ab.ab' then '' else cp.comp_email end)) COM_email,group_concat((case when length(cp.cpname) = 1  and cp.cpname = '0' then '-' else cp.cpname end)) cpname,group_concat((case when cp.cpemail = 'ab@ab.ab' then '' else cp.cpemail end))  CPEMAIL ,group_concat((case when cp.cpcont = '0000000000' then '' else cp.cpcont end)) as CPMOBILE from clients_mst cp  left join clients_mst ct on cp.vch_num = ct.ref_code and find_in_set(cp.client_unit_id, ct.client_unit_id) = 1 and ct.type = 'BCD' where cp.vch_num || to_char(cp.vch_date, 'yyyymmdd') || cp.type = '" + url + "' GROUP BY cp.vch_num,cp.c_name,cp.addr";
                                dtacc = sgen.getdata(userCode, mq);
                                if (dtacc.Rows.Count > 0)
                                {
                                    DataTable dtmail = sgen.getdata(userCode, "select col2 as Temp_Set_For,nvl(col5,'0') as email_id,col7 as lang,nvl(col6,'0') as mobile_no,col9,col10,col1 as Body_Text,col3 as signature,col8 as Email_Heading from enx_tab where type = 'AMT' and client_unit_id = '" + unitid_mst + "' and col13 = '014'");
                                    if (dtmail.Rows.Count > 0)
                                    {
                                        if (dtmail.Rows[0]["mobile_no"].ToString() != null && dtmail.Rows[0]["col10"].ToString().Equals("Y"))
                                        {
                                            #region SMS
                                            BulkSMS bulk = new BulkSMS(userCode, clientid_mst, unitid_mst, MyGuid);
                                            string[] ph_cc = { "" };
                                            if (dtacc.Rows[0]["COM_MOBILE"].ToString() != "" && dtacc.Rows[0]["CPMOBILE"].ToString() != "" && dtmail.Rows[0]["mobile_no"].ToString() != "")
                                            {
                                                ph_cc = (dtacc.Rows[0]["COM_MOBILE"].ToString() + "," + dtacc.Rows[0]["CPMOBILE"].ToString() + "," + dtmail.Rows[0]["mobile_no"].ToString()).ToString().Split(',');
                                            }
                                            else if (dtacc.Rows[0]["COM_MOBILE"].ToString() != "" && dtacc.Rows[0]["CPMOBILE"].ToString() != "" && dtmail.Rows[0]["mobile_no"].ToString() == "")
                                            {
                                                ph_cc = (dtacc.Rows[0]["COM_MOBILE"].ToString() + "," + dtacc.Rows[0]["CPMOBILE"].ToString()).ToString().Split(',');
                                            }
                                            else if (dtacc.Rows[0]["COM_MOBILE"].ToString() == "" && dtacc.Rows[0]["CPMOBILE"].ToString() != "" && dtmail.Rows[0]["mobile_no"].ToString() != "")
                                            {
                                                ph_cc = (dtacc.Rows[0]["CPMOBILE"].ToString() + "," + dtmail.Rows[0]["mobile_no"].ToString()).ToString().Split(',');
                                            }
                                            else if (dtacc.Rows[0]["COM_MOBILE"].ToString() != "" && dtacc.Rows[0]["CPMOBILE"].ToString() == "" && dtmail.Rows[0]["mobile_no"].ToString() != "")
                                            {
                                                ph_cc = (dtacc.Rows[0]["COM_MOBILE"].ToString() + "," + dtmail.Rows[0]["mobile_no"].ToString()).ToString().Split(',');
                                            }
                                            string phone_cc = "";
                                            for (Int32 y = 0; y < ph_cc.Length; y++)
                                            {
                                                phone_cc = ph_cc[y];
                                                if ((phone_cc != "0"))
                                                {
                                                    msg_txt = sgen.ExtractHtmlInnerText(dtmail.Rows[0]["Body_Text"].ToString().Replace("\r\n", " %0a"));
                                                    //msg_txt = sgen.ExtractHtmlInnerText(dtmail.Rows[0]["Body_Text"].ToString().Replace("\r\n", " %0a"));
                                                    string acc = dtacc.Rows[0]["c_name"].ToString();
                                                    string person = dtacc.Rows[0]["cpname"].ToString();
                                                    string com_email = dtacc.Rows[0]["COM_email"].ToString();
                                                    string com_mob = dtacc.Rows[0]["COM_MOBILE"].ToString();
                                                    msg_txt = msg_txt.Replace("[account]", acc);
                                                    msg_txt = msg_txt.Replace("[person]", person);
                                                    msg_txt = msg_txt.Replace("[mobile]", com_mob);
                                                    msg_txt = msg_txt.Replace("[email]", com_email);
                                                    bulk.Add_sms(phone_cc, msg_txt, dtmail.Rows[0]["lang"].ToString() == "2");
                                                }
                                            }
                                            bulk.Send_SMS_Bulk();
                                            #endregion
                                        }
                                        if (dtmail.Rows[0]["email_id"].ToString() != null && dtmail.Rows[0]["email_id"].ToString() != "0" && dtmail.Rows[0]["col9"].ToString().Equals("Y"))
                                        {
                                            #region SEND MAIL
                                            string mailfrom = "";
                                            DataTable datatable = new DataTable();
                                            datatable = sgen.getdata(userCode, "select com_email from company_profile where Company_Profile_Id='" + clientid_mst + "' and type='CP'");
                                            if (datatable.Rows.Count > 0)
                                            {
                                                mailfrom = Convert.ToString(datatable.Rows[0]["com_email"].ToString());
                                            }
                                            string mailcc = "";
                                            //string mailcc = string.Join(",", dtmail.Rows[0]["email_id"].ToString());
                                            if (dtacc.Rows[0]["COM_email"].ToString() != "" && dtacc.Rows[0]["CPEMAIL"].ToString() != "" && dtmail.Rows[0]["email_id"].ToString() != "")
                                            {
                                                mailcc = string.Join(",", dtacc.Rows[0]["COM_email"].ToString() + "," + dtacc.Rows[0]["CPEMAIL"].ToString() + "," + dtmail.Rows[0]["email_id"].ToString());
                                            }
                                            else if (dtacc.Rows[0]["COM_email"].ToString() != "" && dtacc.Rows[0]["CPEMAIL"].ToString() != "" && dtmail.Rows[0]["email_id"].ToString() == "")
                                            {
                                                mailcc = string.Join(",", dtacc.Rows[0]["COM_email"].ToString() + "," + dtacc.Rows[0]["CPEMAIL"].ToString());
                                            }
                                            else if (dtacc.Rows[0]["COM_email"].ToString() == "" && dtacc.Rows[0]["CPEMAIL"].ToString() != "" && dtmail.Rows[0]["email_id"].ToString() != "")
                                            {
                                                mailcc = string.Join(",", dtacc.Rows[0]["CPEMAIL"].ToString() + "," + dtmail.Rows[0]["email_id"].ToString());
                                            }
                                            else if (dtacc.Rows[0]["COM_email"].ToString() != "" && dtacc.Rows[0]["CPEMAIL"].ToString() == "" && dtmail.Rows[0]["email_id"].ToString() != "")
                                            {
                                                mailcc = string.Join(",", dtacc.Rows[0]["COM_email"].ToString() + "," + dtmail.Rows[0]["email_id"].ToString());
                                            }
                                            mailcc = mailcc.Replace("'", "");
                                            string[] itar = mailcc.Trim().Split(',');
                                            Mailer mailer = new Mailer(userCode, clientid_mst, unitid_mst, MyGuid);
                                            var body = new StringBuilder();
                                            if (itar.Length > 0)
                                            {
                                                for (Int32 y = 0; y < itar.Length; y++)
                                                {
                                                    string[] Emialar = itar[y].Replace("(", "").Replace(")", "").Trim().Split(' ');
                                                    if (sgen.ValidateEmail(Emialar[0].ToString()))
                                                    {
                                                        if (emailidcc.Equals("")) emailidcc = Emialar[0].ToString();
                                                        else
                                                        {
                                                            emailidcc = emailidcc + "," + Emialar[0].ToString();
                                                        }
                                                    }
                                                }
                                                Email_id = emailidcc;
                                                xtitle = "";
                                                xtitle = dtmail.Rows[0]["Email_Heading"].ToString();
                                                msg_txt = dtmail.Rows[0]["Body_Text"].ToString();
                                                string acc = dtacc.Rows[0]["c_name"].ToString();
                                                string person = dtacc.Rows[0]["cpname"].ToString();
                                                string com_email = dtacc.Rows[0]["COM_email"].ToString();
                                                string com_mob = dtacc.Rows[0]["COM_MOBILE"].ToString();
                                                msg_txt = msg_txt.Replace("[account]", acc);
                                                msg_txt = msg_txt.Replace("[person]", person);
                                                msg_txt = msg_txt.Replace("[mobile]", com_mob);
                                                msg_txt = msg_txt.Replace("[email]", com_email);
                                                body.AppendLine(@"<b style='color:#3caee9; font-size: 20px'>" + xtitle + " </b><br /><hr style='border:1px solid black' />" +
                                                "<p>Hi <b>" + dtacc.Rows[0]["c_name"].ToString() + " : </b>,</p><table style='font-weight:600'>");
                                                body.AppendLine(@"</table><br /><p>" + msg_txt + "</p><p>ThankYou,<br />" + dtmail.Rows[0]["signature"].ToString() + "<br /></p><br />");
                                                sgen.Send_mail_SA1(userCode, clientid_mst, unitid_mst, mailfrom, emailidcc, Email_id, body.ToString(), dtmail.Rows[0]["Email_Heading"].ToString(), "");
                                            }
                                            #endregion
                                        }
                                    }
                                }
                            }
                        }
                        catch (Exception err) { ViewBag.scripCall += "mytoast('error', 'toast-top-right', 'Mail Not Sent');"; }
                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain()
                        {
                            Col9 = tmodel.Col9,
                            Col10 = tmodel.Col10,
                            Col11 = tmodel.Col11,
                            Col12 = tmodel.Col12,
                            Col91 = tmodel.Col91,
                            Col101 = tmodel.Col101,
                            Col102 = "saved",
                            Col13 = "Save",
                            Col100 = "Save & New",
                            Col121 = "S",
                            Col122 = "<u>S</u>ave",
                            Col123 = "Save & Ne<u>w</u>",
                            Col14 = tmodel.Col14,
                            Col15 = tmodel.Col15,
                            Col131 = tmodel.Col131,
                            TList1 = mod1,
                            TList3 = mod3,
                            SelectedItems1 = new string[] { "" },
                            SelectedItems3 = new string[] { "" },
                            LTM1 = new List<Tmodelmain>(),
                        });
                        if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                        {

                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                        {

                            model = new_s_party(model);
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                        }
                        if (model[0].Col101 != null)
                        {
                            if (model[0].Col101.Equals("0"))
                            {
                                string date = sgen.SaveDate_dt(currdate, false).ToString("yyyyMMdd");
                                string url = vch_code + date + model[0].Col12;
                                sgen.SetSession(MyGuid, "btnval", "PARTY");
                                sgen.SetSession(MyGuid, "SSEEKVAL", url);
                            }
                        }
                        Tmodelmain tmltm2 = new Tmodelmain();
                        tmltm2.Col1 = "1";
                        model[0].LTM2.Add(tmltm2);
                    }
                    else
                    {
                        sat1.Rollback();
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                        ViewBag.scripCall += "mytoast('error', 'toast-top-right', 'Data Not Saved');";
                    }
                }

            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region  Order Creation
        public ActionResult cr_order(string mid)
        {
            MyGuid = EncryptDecrypt.Decrypt(HttpUtility.ParseQueryString(Request.UrlReferrer.Query)["m_id"]);
            FillMst(MyGuid);
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);

            model[0].Col9 = "ORDER";
            model[0].Col10 = "Lead_Master";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "ORD";
            model[0].Chk1 = true;

            List<SelectListItem> md1 = new List<SelectListItem>();
            model[0].SelectedItems1 = new string[] { "" };
            TempData[MyGuid + "_TList1"] = model[0].TList1 = md1;

            DataTable dtb = (DataTable)sgen.GetSession(MyGuid, "URIGHTS");
            try
            {
                dtb = dtb.Select("m_id='" + model[0].Col14 + "'").CopyToDataTable();
                if (dtb.Rows.Count > 0)
                {
                    model[0].Col55 = dtb.Rows[0]["btnnew"].ToString();
                    model[0].Col56 = dtb.Rows[0]["btnedit"].ToString();
                    model[0].Col57 = dtb.Rows[0]["btnview"].ToString();

                }
            }
            catch (Exception ex) { }
            return View(model);
        }
        public List<Tmodelmain> new_cr_order(List<Tmodelmain> model)
        {
            try
            {
                model = getnew(model);
                model[0].Col17 = sgen.server_datetime_local(userCode);
                model[0].Col19 = sgen.server_datetime_local(userCode);
                List<SelectListItem> mod1 = new List<SelectListItem>();
                DataTable dts = sgen.getdata(userCode, "select distinct (ct.ref_code||ct.vch_num||to_char(ct.vch_date,'yyyymmdd')||ct.type)  as fstr," +
                    " (a.c_name||'( ' ||((replace(ct.cpname, '0', '-') || '- ' || replace(ct.cp_mname, '0', '') || ' ' || replace(ct.cp_lname, '0', '')))||' )' ) acc_cont from clients_mst a " +
                    "inner join clients_mst ct  on a.vch_num = ct.ref_code  and find_in_set(ct.client_unit_id, '" + unitid_mst + "') = 1 and substr(ct.ref_code, 0, 3) = '303' where a.type = 'BCD' " +
                    "and find_in_set(a.client_unit_id, '" + unitid_mst + "') = 1 and substr(a.vch_num, 0, 3) = '303' " +
                    " and(a.mftr is null or a.mftr = '0' or a.mftr = 'N') and(a.pubr is null or a.pubr = '0' or a.pubr = 'N') order by(ct.ref_code || ct.vch_num || to_char(ct.vch_date, 'yyyymmdd') || ct.type) desc    ");
                if (dts.Rows.Count > 0)
                {
                    mod1 = sgen.dt_to_selectlist(dts);
                }
                TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1;
                var tm = model.FirstOrDefault();
            }
            catch (Exception ex)
            { ViewBag.scripCall = "showmsgJS(1, '" + ex.Message.ToString().Replace("'", "") + "', 1);"; }
            return model;
        }
        [HttpPost]
        public ActionResult cr_order(List<Tmodelmain> model, string command, string mid, string hfrow)
        {
            try
            {
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();
                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_Tlist1"];
                TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1;

                if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };


                if (command == "New")
                {
                    if (model[0].Col55 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for new entry, please contact your admin', 2);";
                        return View(model);
                    }
                    model = new_cr_order(model);
                }
                else if (command == "Contact")
                {
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                    ViewBag.scripCall = "enableForm();";

                    mq = "select b.addr, (case when (a.cplandno='0000000000' or a.cplandno='0') then '' else a.cplandno end  ) cplandno," +
                        " b.c_name, a.vch_num,a.ref_code, ((replace(a.cpname, '0', '-') || ' ' || replace(a.cp_mname, '0', '') || ' ' || replace(a.cp_lname, '0', ''))) contact_person," +
                                 "  (case when (a.cpemail='ab@ab.ab' or a.cpemail='0') then '' else a.cpemail end) cpemail from clients_mst a  inner join clients_mst b on a.ref_code=b.vch_num  and find_in_set(b.client_unit_id,'" + unitid_mst + "')=1 " +
                                 "  where (a.ref_code||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type)='" + model[0].SelectedItems1.FirstOrDefault() + "'";
                    DataTable dtt = sgen.getdata(userCode, mq);
                    if (dtt.Rows.Count > 0)
                    {
                        model[0].Col25 = dtt.Rows[0]["vch_num"].ToString();
                        model[0].Col24 = dtt.Rows[0]["ref_code"].ToString();
                        model[0].Col20 = dtt.Rows[0]["addr"].ToString();// add
                        model[0].Col21 = dtt.Rows[0]["contact_person"].ToString();// contact_person
                        model[0].Col22 = dtt.Rows[0]["cplandno"].ToString();// cplandno
                        model[0].Col23 = dtt.Rows[0]["cpemail"].ToString();// cpemail
                    }
                }

                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    if ((model[0].Col56 == "N") && (btnval == "EDIT"))
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for edit , please contact your admin', 2);disableForm();";
                        return View(model);
                    }
                    if (sgen.GetSession(MyGuid, "delid") != null) { btnval = "FDEL"; sgen.SetSession(MyGuid, "btnval", btnval); }
                    else if (sgen.GetSession(MyGuid, "btnval") != null) btnval = sgen.GetSession(MyGuid, "btnval").ToString();
                    model = StartCallback(model);

                }
                else if (command.Trim() == "Save" || command.Trim() == "Update" || command == "Save & New" || command == "Update & New")
                {
                    if (model[0].Col55 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for save  , please contact your admin', 2);";
                        return View(model);
                    }


                    var tmodel = model.FirstOrDefault();
                    string currdate = sgen.server_datetime(userCode);
                    string cond = "", found = "", emailto = "";
                    DataTable dtstr = new DataTable();

                    dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                    DataRow dr = dtstr.NewRow();
                    emailto = model[0].SelectedItems2.FirstOrDefault();
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        isedit = true;
                        vch_num = model[0].Col16;
                    }
                    else
                    {
                        isedit = false;
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        model[0].Col16 = vch_num;
                    }
                    dr = dtstr.NewRow();
                    dr["rec_id"] = "0";
                    dr["type"] = model[0].Col12;
                    dr["vch_num"] = vch_num.Trim();
                    dr["vch_date"] = sgen.Make_date_S(model[0].Col17);
                    dr["cust_id"] = model[0].Col24;      //acc_id 
                    dr["cp_id"] = model[0].Col25;      //cp_id 
                    dr["dob"] = sgen.Make_date_S(model[0].Col19); //ex date
                    dr["budget"] = model[0].Col18; // value
                    dr["lead_con"] = "N";
                    dr = getsave(currdate, dr, model, isedit);
                    dtstr.Rows.Add(dr);
                    bool Result = sgen.Update_data_fast1(userCode, dtstr, model[0].Col10.Trim(), tmodel.Col8, isedit);
                    if (Result == true)
                    {
                        if (!isedit)
                        {
                            try
                            {
                                string reg_no = "", Email_id = "", send_type = "", phone_No = "", xclass = "", sec = "", emailidcc = "", msg_txt = "", account = "";
                                string email = "", DetailSms = "0", DetailEmail = "0", xtitle = "", url = "";
                                DataTable dtacc = new DataTable();
                                mq = "select b.addr, (case when (a.cplandno='0000000000' or a.cplandno='0') then '' else a.cplandno end  ) cplandno," +
                            " b.c_name, a.vch_num,a.ref_code, ((replace(a.cpname, '0', '-') || ' ' || replace(a.cp_mname, '0', '') || ' ' || replace(a.cp_lname, '0', ''))) contact_person," +
                                     "  (case when (a.cpemail='ab@ab.ab' or a.cpemail='0') then '' else a.cpemail end) cpemail from clients_mst a  inner join clients_mst b on a.ref_code=b.vch_num  and find_in_set(b.client_unit_id,'" + unitid_mst + "')=1 " +
                                     "  where (a.ref_code||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type)='" + model[0].SelectedItems1.FirstOrDefault() + "'";
                                dtacc = sgen.getdata(userCode, mq);
                                if (dtacc.Rows.Count > 0)
                                {
                                    DataTable dtmail = sgen.getdata(userCode, "select col2 as Temp_Set_For,nvl(col5,'0') as email_id,col7 as lang,nvl(col6,'0') as mobile_no,col9,col10,col1 as Body_Text,col3 as signature,col8 as Email_Heading from enx_tab where type = 'AMT' and client_unit_id = '" + unitid_mst + "' and col13 = '015'");
                                    if (dtmail.Rows.Count > 0)
                                    {
                                        if (dtmail.Rows[0]["mobile_no"].ToString() != null && dtmail.Rows[0]["col10"].ToString().Equals("Y"))
                                        {
                                            #region SMS
                                            BulkSMS bulk = new BulkSMS(userCode, clientid_mst, unitid_mst, MyGuid);
                                            string[] ph_cc = { "" };
                                            if (dtacc.Rows[0]["cplandno"].ToString() != "" && dtmail.Rows[0]["mobile_no"].ToString() == "")
                                            {
                                                ph_cc = dtacc.Rows[0]["cplandno"].ToString().Split(',');
                                            }
                                            else if (dtacc.Rows[0]["cplandno"].ToString() == "" && dtmail.Rows[0]["mobile_no"].ToString() != "")
                                            {
                                                ph_cc = dtmail.Rows[0]["mobile_no"].ToString().Split(',');
                                            }
                                            else if (dtacc.Rows[0]["cplandno"].ToString() != "" && dtmail.Rows[0]["mobile_no"].ToString() != "")
                                            {
                                                ph_cc = (dtacc.Rows[0]["cplandno"].ToString() + "," + dtmail.Rows[0]["mobile_no"].ToString()).ToString().Split(',');
                                            }
                                            string phone_cc = "";
                                            for (Int32 y = 0; y < ph_cc.Length; y++)
                                            {
                                                phone_cc = ph_cc[y];
                                                if ((phone_cc != "0"))
                                                {
                                                    msg_txt = sgen.ExtractHtmlInnerText(dtmail.Rows[0]["Body_Text"].ToString().Replace("\r\n", " %0a"));
                                                    string acc = dtacc.Rows[0]["c_name"].ToString();
                                                    string person = dtacc.Rows[0]["contact_person"].ToString();
                                                    string doc = vch_num;
                                                    string ord_date = model[0].Col17;
                                                    string value = model[0].Col18;
                                                    msg_txt = msg_txt.Replace("[account]", acc);
                                                    msg_txt = msg_txt.Replace("[person]", person);
                                                    msg_txt = msg_txt.Replace("[doc_no]", doc);
                                                    msg_txt = msg_txt.Replace("[doc_date]", ord_date);
                                                    msg_txt = msg_txt.Replace("[value]", value);
                                                    bulk.Add_sms(phone_cc, msg_txt, dtmail.Rows[0]["lang"].ToString() == "2");
                                                }
                                            }
                                            bulk.Send_SMS_Bulk();
                                            #endregion
                                        }
                                        if (dtmail.Rows[0]["email_id"].ToString() != null && dtmail.Rows[0]["email_id"].ToString() != "0" && dtmail.Rows[0]["col9"].ToString().Equals("Y"))
                                        {
                                            #region SEND MAIL
                                            string mailfrom = "";
                                            DataTable datatable = new DataTable();
                                            datatable = sgen.getdata(userCode, "select com_email from company_profile where Company_Profile_Id='" + clientid_mst + "' and type='CP'");
                                            if (datatable.Rows.Count > 0)
                                            {
                                                mailfrom = Convert.ToString(datatable.Rows[0]["com_email"].ToString());
                                            }
                                            string mailcc = "";
                                            if (dtacc.Rows[0]["cpemail"].ToString() != "" && dtmail.Rows[0]["email_id"].ToString() != "")
                                            {
                                                mailcc = string.Join(",", dtacc.Rows[0]["cpemail"].ToString() + "," + dtmail.Rows[0]["email_id"].ToString());
                                            }
                                            else if (dtacc.Rows[0]["cpemail"].ToString() != "" && dtmail.Rows[0]["email_id"].ToString() == "")
                                            {
                                                mailcc = string.Join(",", dtacc.Rows[0]["cpemail"].ToString());
                                            }
                                            else if (dtacc.Rows[0]["cpemail"].ToString() == "" && dtmail.Rows[0]["email_id"].ToString() != "")
                                            {
                                                mailcc = string.Join(",", dtmail.Rows[0]["email_id"].ToString());
                                            }
                                            mailcc = mailcc.Replace("'", "");
                                            string[] itar = mailcc.Trim().Split(',');
                                            Mailer mailer = new Mailer(userCode, clientid_mst, unitid_mst, MyGuid);
                                            var body = new StringBuilder();
                                            if (itar.Length > 0)
                                            {
                                                for (Int32 y = 0; y < itar.Length; y++)
                                                {
                                                    string[] Emialar = itar[y].Replace("(", "").Replace(")", "").Trim().Split(' ');
                                                    if (sgen.ValidateEmail(Emialar[0].ToString()))
                                                    {
                                                        if (emailidcc.Equals("")) emailidcc = Emialar[0].ToString();
                                                        else
                                                        {
                                                            emailidcc = emailidcc + "," + Emialar[0].ToString();
                                                        }
                                                    }
                                                }
                                                Email_id = emailidcc;
                                                xtitle = "";
                                                xtitle = dtmail.Rows[0]["Email_Heading"].ToString();
                                                msg_txt = dtmail.Rows[0]["Body_Text"].ToString();
                                                string acc = dtacc.Rows[0]["c_name"].ToString();
                                                string person = dtacc.Rows[0]["contact_person"].ToString();
                                                string doc = vch_num;
                                                string ord_date = model[0].Col17;
                                                string value = model[0].Col18;
                                                msg_txt = msg_txt.Replace("[account]", acc);
                                                msg_txt = msg_txt.Replace("[person]", person);
                                                msg_txt = msg_txt.Replace("[doc_no]", doc);
                                                msg_txt = msg_txt.Replace("[doc_date]", ord_date);
                                                msg_txt = msg_txt.Replace("[value]", value);
                                                body.AppendLine(@"<b style='color:#3caee9; font-size: 20px'>" + xtitle + " </b><br /><hr style='border:1px solid black' />" +
                                                "<p>Hi <b>" + dtacc.Rows[0]["c_name"].ToString() + " : </b>,</p><table style='font-weight:600'>");
                                                body.AppendLine(@"</table><br /><p>" + msg_txt + "</p><p>ThankYou,<br />" + dtmail.Rows[0]["signature"].ToString() + "<br /></p><br />");
                                                sgen.Send_mail_SA1(userCode, clientid_mst, unitid_mst, mailfrom, emailidcc, Email_id, body.ToString(), dtmail.Rows[0]["Email_Heading"].ToString(), "");
                                            }
                                            #endregion
                                        }
                                    }
                                }
                            }
                            catch (Exception err) { ViewBag.scripCall += "mytoast('error', 'toast-top-right', 'Mail Not Sent');"; }
                        }
                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col10 = tm.Col10,
                            Col11 = tm.Col11,
                            Col12 = tm.Col12,
                            Col13 = "Save",
                            Col100 = "Save & New",
                            Col121 = "S",
                            Col122 = "<u>S</u>ave",
                            Col123 = "Save & Ne<u>w</u>",
                            Col14 = tm.Col14,
                            Col15 = tm.Col15,
                            Col9 = tm.Col9,
                        });
                        if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                        {
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.scripCall = "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                        {
                            try
                            {
                                model = new_cr_order(model);
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                            }
                            catch (Exception ex) { }
                        }
                    }
                    else
                    {
                        ViewBag.scripCall = "showmsgJS(1, 'Record Not Saved',0);";
                    }
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region  Order Status
        public ActionResult ord_status(string mid)
        {
            MyGuid = EncryptDecrypt.Decrypt(HttpUtility.ParseQueryString(Request.UrlReferrer.Query)["m_id"]);
            FillMst(MyGuid);
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);

            model[0].Col9 = "ORDER STATUS";
            model[0].Col10 = "enx_tab2";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "ORD";
            model[0].Col17 = "1";
            model[0].Chk1 = true;

            List<SelectListItem> md1 = new List<SelectListItem>();
            model[0].SelectedItems1 = new string[] { "" };
            TempData[MyGuid + "_TList1"] = model[0].TList1 = md1;

            DataTable dtb = (DataTable)sgen.GetSession(MyGuid, "URIGHTS");
            try
            {
                dtb = dtb.Select("m_id='" + model[0].Col14 + "'").CopyToDataTable();
                if (dtb.Rows.Count > 0)
                {
                    model[0].Col55 = dtb.Rows[0]["btnnew"].ToString();
                    model[0].Col56 = dtb.Rows[0]["btnedit"].ToString();
                    model[0].Col57 = dtb.Rows[0]["btnview"].ToString();

                }
            }
            catch (Exception ex) { }




            return View(model);
        }
        public List<Tmodelmain> new_ord_status(List<Tmodelmain> model)
        {
            try
            {
                model = getnew(model);
                model[0].Col17 = "1";
                List<SelectListItem> mod1 = new List<SelectListItem>();
                DataTable dt = sgen.getdata(userCode, "select vch_num, vch_num||'-'|| to_char(vch_date,'" + sgen.Getsqldateformat() + "') as ord from lead_master where type='ORD' and client_unit_id='" + unitid_mst + "'  and lead_con ='N' order by vch_num desc");
                if (dt.Rows.Count > 0)
                {
                    mod1 = sgen.dt_to_selectlist(dt);
                }
                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
                model[0].Col19 = sgen.server_datetime_local(userCode);// next delivery dt
                model[0].Col21 = sgen.server_datetime_local(userCode);// dispatch dt
                model[0].Col23 = sgen.server_datetime_local(userCode);// Eway Date 
                model[0].Col28 = sgen.server_datetime_local(userCode);// GR Date 
                model[0].Col32 = sgen.server_datetime_local(userCode);// Bill Date 
                model[0].Col34 = sgen.server_datetime_local(userCode);// Courier Docket Date
                model[0].Col38 = sgen.server_datetime_local(userCode);// Received Date
                var tm = model.FirstOrDefault();
            }
            catch (Exception ex)
            { ViewBag.scripCall = "showmsgJS(1, '" + ex.Message.ToString().Replace("'", "") + "', 1);"; }
            return model;
        }
        [HttpPost]
        public ActionResult ord_status(List<Tmodelmain> model, string command, string mid, string hfrow)
        {
            try
            {
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();
                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_Tlist1"];
                TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1;

                if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                if (command == "New")
                {
                    if (model[0].Col55 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for new entry, please contact your admin', 2);";
                        return View(model);
                    }
                    model = new_ord_status(model);
                }
                else if (command == "Order")
                {
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                    ViewBag.scripCall = "enableForm();";

                    mq = "select cp.c_name,((replace(ct.cpname, '0', '-') || '- ' || replace(ct.cp_mname, '0', '') || ' ' || replace(ct.cp_lname, '0', ''))) contact_person," +
                        "(case when(ct.cpemail = 'ab@ab.ab' or ct.cpemail = '0') then '' else ct.cpemail end) CP_Email_ID," +
                        "(case when(ct.cplandno = '0000000000' or ct.cplandno = '0') then '' else ct.cplandno end  )cp_phone_no " +
                        " from lead_master a inner join clients_mst cp on cp.vch_num = a.cust_id  and find_in_set(cp.client_unit_id, '" + unitid_mst + "') = 1 " +
                        " and substr(cp.vch_num, 0, 3) = '303' inner join clients_mst ct  on a.cp_id = ct.vch_num and a.cust_id = ct.ref_code  and " +
                        "find_in_set(ct.client_unit_id, '" + unitid_mst + "') = 1 and substr(ct.ref_code, 0, 3) = '303' where a.type = 'ORD' " +
                        "and a.client_unit_id = '" + unitid_mst + "' and a.vch_num = '" + model[0].SelectedItems1.FirstOrDefault() + "'";
                    DataTable dtt = sgen.getdata(userCode, mq);
                    if (dtt.Rows.Count > 0)
                    {

                        model[0].Col39 = dtt.Rows[0]["c_name"].ToString();// c_name
                        model[0].Col40 = dtt.Rows[0]["contact_person"].ToString();// contact_person
                        model[0].Col41 = dtt.Rows[0]["cp_phone_no"].ToString();// cplandno
                        model[0].Col42 = dtt.Rows[0]["cp_email_id"].ToString();// cpemail
                    }
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    if ((model[0].Col56 == "N") && (btnval == "EDIT"))
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for edit , please contact your admin', 2);disableForm();";
                        return View(model);
                    }
                    if (sgen.GetSession(MyGuid, "delid") != null) { btnval = "FDEL"; sgen.SetSession(MyGuid, "btnval", btnval); }
                    else if (sgen.GetSession(MyGuid, "btnval") != null) btnval = sgen.GetSession(MyGuid, "btnval").ToString();
                    model = StartCallback(model);

                }

                else if (command.Trim() == "Save" || command.Trim() == "Update" || command == "Save & New" || command == "Update & New")
                {
                    if (model[0].Col55 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for save  , please contact your admin', 2);";
                        return View(model);
                    }


                    var tmodel = model.FirstOrDefault();
                    string currdate = sgen.server_datetime(userCode);
                    string cond = "", found = "", emailto = "";
                    DataTable dtstr = new DataTable();

                    dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                    DataRow dr = dtstr.NewRow();
                    emailto = model[0].SelectedItems2.FirstOrDefault();
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        isedit = true;
                        vch_num = model[0].Col16;

                    }
                    else
                    {
                        isedit = false;
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        model[0].Col16 = vch_num;



                    }

                    dr = dtstr.NewRow();
                    dr["rec_id"] = "0";
                    dr["type"] = model[0].Col12;
                    dr["vch_num"] = vch_num.Trim();
                    dr["vch_date"] = currdate;
                    dr["col12"] = model[0].Col17;      //order status type 
                    dr["ref_code"] = model[0].SelectedItems1.FirstOrDefault();      //order id 

                    if (model[0].Col17 == "1")//delay
                    {

                        dr["col4"] = model[0].Col18;      //reason of delay
                        dr["date1"] = sgen.Make_date_S(model[0].Col19);      //next delivery date

                    }

                    if (model[0].Col17 == "2")//dispatch
                    {

                        dr["COL2"] = model[0].Col20;      //Dispatch Doc No.
                        dr["date1"] = sgen.Make_date_S(model[0].Col21);      //Dispatch Date
                        dr["COL5"] = model[0].Col22;      //Eway No
                        dr["date2"] = sgen.Make_date_S(model[0].Col23);      //Eway Date                       
                        dr["COL6"] = model[0].Col24;      //Vehical No.
                        dr["COL7"] = model[0].Col25;      //Driver Name.
                        dr["COL9"] = model[0].Col26;      //Driver Mobile No.
                        dr["COL10"] = model[0].Col27;      //GR No                       
                        dr["date3"] = sgen.Make_date_S(model[0].Col28);      //GR Date 
                        dr["COL11"] = model[0].Col29;      //Transporter Name
                        dr["COL21"] = model[0].Col30;      //Transporter Phone No
                        dr["COL22"] = model[0].Col31;      //Bill No
                        dr["date4"] = sgen.Make_date_S(model[0].Col32);      //Bill Date 


                    }

                    if (model[0].Col17 == "3")//Close
                    {

                        dr["COL2"] = model[0].Col33;      //Courier Docket No.
                        dr["date1"] = sgen.Make_date_S(model[0].Col34);      //Courier Docket Date
                        dr["COL5"] = model[0].Col35;      //Courier Name                                      
                        dr["COL6"] = model[0].Col36;      //Local Courier No.
                        dr["COL7"] = model[0].Col37;      //Received By.                                          
                        dr["date2"] = sgen.Make_date_S(model[0].Col38);      //Received Date



                    }







                    dr = getsave(currdate, dr, model, isedit);
                    dtstr.Rows.Add(dr);

                    bool Result = sgen.Update_data_fast1(userCode, dtstr, model[0].Col10.Trim(), tmodel.Col8, isedit);
                    if (Result == true)
                    {
                        if (!isedit)
                        {
                            try
                            {
                                string reg_no = "", Email_id = "", send_type = "", phone_No = "", xclass = "", sec = "", emailidcc = "", msg_txt = "", account = "";
                                string email = "", DetailSms = "0", DetailEmail = "0", xtitle = "", url = "";
                                DataTable dtacc = new DataTable();
                                mq = "select cp.c_name,((replace(ct.cpname, '0', '-') || '- ' || replace(ct.cp_mname, '0', '') || ' ' || replace(ct.cp_lname, '0', ''))) contact_person," +
        "(case when(ct.cpemail = 'ab@ab.ab' or ct.cpemail = '0') then '' else ct.cpemail end) cpemail," +
        "(case when(ct.cplandno = '0000000000' or ct.cplandno = '0') then '' else ct.cplandno end  ) cplandno " +
        " from lead_master a inner join clients_mst cp on cp.vch_num = a.cust_id  and find_in_set(cp.client_unit_id, '" + unitid_mst + "') = 1 " +
        " and substr(cp.vch_num, 0, 3) = '303' inner join clients_mst ct  on a.cp_id = ct.vch_num and a.cust_id = ct.ref_code  and " +
        "find_in_set(ct.client_unit_id, '" + unitid_mst + "') = 1 and substr(ct.ref_code, 0, 3) = '303' where a.type = 'ORD' " +
        "and a.client_unit_id = '" + unitid_mst + "' and a.vch_num = '" + model[0].SelectedItems1.FirstOrDefault() + "'";

                                //    mq = "select b.addr, (case when (a.cplandno='0000000000' or a.cplandno='0') then '' else a.cplandno end  ) cplandno," +
                                //" b.c_name, a.vch_num,a.ref_code, ((replace(a.cpname, '0', '-') || ' ' || replace(a.cp_mname, '0', '') || ' ' || replace(a.cp_lname, '0', ''))) contact_person," +
                                //         "  (case when (a.cpemail='ab@ab.ab' or a.cpemail='0') then '' else a.cpemail end) cpemail from clients_mst a  inner join clients_mst b on a.ref_code=b.vch_num  and find_in_set(b.client_unit_id,'" + unitid_mst + "')=1 " +
                                //         "  where (a.ref_code||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type)='" + model[0].SelectedItems1.FirstOrDefault() + "'";
                                dtacc = sgen.getdata(userCode, mq);
                                if (dtacc.Rows.Count > 0)
                                {
                                    DataTable dtmail = sgen.getdata(userCode, "select col2 as Temp_Set_For,nvl(col5,'0') as email_id,col7 as lang,nvl(col6,'0') as mobile_no,col9,col10,col1 as Body_Text,col3 as signature,col8 as Email_Heading from enx_tab where type = 'AMT' and client_unit_id = '" + unitid_mst + "' and col13 = '016'");
                                    if (dtmail.Rows.Count > 0)
                                    {
                                        if (dtmail.Rows[0]["mobile_no"].ToString() != null && dtmail.Rows[0]["col10"].ToString().Equals("Y"))
                                        {
                                            #region SMS
                                            BulkSMS bulk = new BulkSMS(userCode, clientid_mst, unitid_mst, MyGuid);
                                            string[] ph_cc = { "" };
                                            if (dtacc.Rows[0]["cplandno"].ToString() != "" && dtmail.Rows[0]["mobile_no"].ToString() == "")
                                            {
                                                ph_cc = dtacc.Rows[0]["cplandno"].ToString().Split(',');
                                            }
                                            else if (dtacc.Rows[0]["cplandno"].ToString() == "" && dtmail.Rows[0]["mobile_no"].ToString() != "")
                                            {
                                                ph_cc = dtmail.Rows[0]["mobile_no"].ToString().Split(',');
                                            }
                                            else if (dtacc.Rows[0]["cplandno"].ToString() != "" && dtmail.Rows[0]["mobile_no"].ToString() != "")
                                            {
                                                ph_cc = (dtacc.Rows[0]["cplandno"].ToString() + "," + dtmail.Rows[0]["mobile_no"].ToString()).ToString().Split(',');
                                            }
                                            string phone_cc = "";
                                            for (Int32 y = 0; y < ph_cc.Length; y++)
                                            {
                                                phone_cc = ph_cc[y];
                                                if ((phone_cc != "0"))
                                                {
                                                    msg_txt = sgen.ExtractHtmlInnerText(dtmail.Rows[0]["Body_Text"].ToString().Replace("\r\n", " %0a"));
                                                    string acc = dtacc.Rows[0]["c_name"].ToString();
                                                    string person = dtacc.Rows[0]["contact_person"].ToString();
                                                    msg_txt = msg_txt.Replace("[account]", acc);
                                                    msg_txt = msg_txt.Replace("[person]", person);
                                                    //msg_txt = msg_txt.Replace("[doc_no]", doc);
                                                    //msg_txt = msg_txt.Replace("[doc_date]", ord_date);
                                                    //msg_txt = msg_txt.Replace("[value]", value);
                                                    bulk.Add_sms(phone_cc, msg_txt, dtmail.Rows[0]["lang"].ToString() == "2");
                                                }
                                            }
                                            bulk.Send_SMS_Bulk();
                                            #endregion
                                        }
                                        if (dtmail.Rows[0]["email_id"].ToString() != null && dtmail.Rows[0]["email_id"].ToString() != "0" && dtmail.Rows[0]["col9"].ToString().Equals("Y"))
                                        {
                                            #region SEND MAIL
                                            string mailfrom = "";
                                            DataTable datatable = new DataTable();
                                            datatable = sgen.getdata(userCode, "select com_email from company_profile where Company_Profile_Id='" + clientid_mst + "' and type='CP'");
                                            if (datatable.Rows.Count > 0)
                                            {
                                                mailfrom = Convert.ToString(datatable.Rows[0]["com_email"].ToString());
                                            }
                                            string mailcc = "";
                                            if (dtacc.Rows[0]["cpemail"].ToString() != "" && dtmail.Rows[0]["email_id"].ToString() != "")
                                            {
                                                mailcc = string.Join(",", dtacc.Rows[0]["cpemail"].ToString() + "," + dtmail.Rows[0]["email_id"].ToString());
                                            }
                                            else if (dtacc.Rows[0]["cpemail"].ToString() != "" && dtmail.Rows[0]["email_id"].ToString() == "")
                                            {
                                                mailcc = string.Join(",", dtacc.Rows[0]["cpemail"].ToString());
                                            }
                                            else if (dtacc.Rows[0]["cpemail"].ToString() == "" && dtmail.Rows[0]["email_id"].ToString() != "")
                                            {
                                                mailcc = string.Join(",", dtmail.Rows[0]["email_id"].ToString());
                                            }
                                            mailcc = mailcc.Replace("'", "");
                                            string[] itar = mailcc.Trim().Split(',');
                                            Mailer mailer = new Mailer(userCode, clientid_mst, unitid_mst, MyGuid);
                                            var body = new StringBuilder();
                                            if (itar.Length > 0)
                                            {
                                                for (Int32 y = 0; y < itar.Length; y++)
                                                {
                                                    string[] Emialar = itar[y].Replace("(", "").Replace(")", "").Trim().Split(' ');
                                                    if (sgen.ValidateEmail(Emialar[0].ToString()))
                                                    {
                                                        if (emailidcc.Equals("")) emailidcc = Emialar[0].ToString();
                                                        else
                                                        {
                                                            emailidcc = emailidcc + "," + Emialar[0].ToString();
                                                        }
                                                    }
                                                }
                                                Email_id = emailidcc;
                                                xtitle = "";
                                                xtitle = dtmail.Rows[0]["Email_Heading"].ToString();
                                                msg_txt = dtmail.Rows[0]["Body_Text"].ToString();
                                                //string acc = dtacc.Rows[0]["c_name"].ToString();
                                                //string person = dtacc.Rows[0]["contact_person"].ToString();
                                                //string doc = vch_num;
                                                //string ord_date = model[0].Col17;
                                                //string value = model[0].Col18;
                                                //msg_txt = msg_txt.Replace("[account]", account);
                                                //msg_txt = msg_txt.Replace("[person]", person);
                                                //msg_txt = msg_txt.Replace("[doc_no]", doc);
                                                //msg_txt = msg_txt.Replace("[doc_date]", ord_date);
                                                //msg_txt = msg_txt.Replace("[value]", value);
                                                string acc = dtacc.Rows[0]["c_name"].ToString();
                                                string person = dtacc.Rows[0]["contact_person"].ToString();
                                                msg_txt = msg_txt.Replace("[account]", acc);
                                                msg_txt = msg_txt.Replace("[person]", person);
                                                body.AppendLine(@"<b style='color:#3caee9; font-size: 20px'>" + xtitle + " </b><br /><hr style='border:1px solid black' />" +
                                                "<p>Hi <b>" + dtacc.Rows[0]["c_name"].ToString() + " : </b>,</p><table style='font-weight:600'>");
                                                body.AppendLine(@"</table><br /><p>" + msg_txt + "</p><p>ThankYou,<br />" + dtmail.Rows[0]["signature"].ToString() + "<br /></p><br />");
                                                sgen.Send_mail_SA1(userCode, clientid_mst, unitid_mst, mailfrom, emailidcc, Email_id, body.ToString(), dtmail.Rows[0]["Email_Heading"].ToString(), "");
                                            }
                                            #endregion
                                        }
                                    }
                                }
                            }
                            catch (Exception err) { ViewBag.scripCall += "mytoast('error', 'toast-top-right', 'Mail Not Sent');"; }
                        }
                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col10 = tm.Col10,
                            Col11 = tm.Col11,
                            Col12 = tm.Col12,
                            Col13 = "Save",
                            Col100 = "Save & New",
                            Col121 = "S",
                            Col122 = "<u>S</u>ave",
                            Col123 = "Save & Ne<u>w</u>",
                            Col14 = tm.Col14,
                            Col15 = tm.Col15,
                            Col9 = tm.Col9,
                        });
                        if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                        {
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.scripCall = "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                        {
                            try
                            {
                                model = new_ord_status(model);
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                            }
                            catch (Exception ex) { }
                        }
                    }
                    else
                    {
                        ViewBag.scripCall = "showmsgJS(1, 'Record Not Saved',0);";
                    }
                }


            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion        

        #region frequency master
        public ActionResult freqMst()
        {
            FillMst();
            chkRef();
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            model[0].Col9 = "FREQUENCY CONFIG";
            model[0].Col10 = "master_setting";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "CRF";
            List<SelectListItem> md1 = new List<SelectListItem>();
            TempData[MyGuid + "_TList1"] = model[0].TList1 = md1;
            TempData[MyGuid + "_TList2"] = model[0].TList2 = md1;
            model[0].SelectedItems1 = new string[] { "" };
            model[0].SelectedItems2 = new string[] { "" };
            return View(model);
        }
        public List<Tmodelmain> new_freq_mst(List<Tmodelmain> model)
        {
            List<SelectListItem> mod1 = new List<SelectListItem>();
            List<SelectListItem> mod2 = new List<SelectListItem>();
            model = getnew(model);
            mq = "select max(to_number(master_id)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
            vch_num = sgen.genNo(userCode, mq, 3, "auto_genid");
            model[0].Col16 = vch_num;

            mod1.Add(new SelectListItem { Text = "YEAR", Value = "YEAR" });
            mod1.Add(new SelectListItem { Text = "MONTH", Value = "MONTH" });
            mod1.Add(new SelectListItem { Text = "DAY", Value = "DAY" });
            TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
            model[0].SelectedItems1 = new string[] { "" };

            mod2.Add(new SelectListItem { Text = "Booking", Value = "001" });
            mod2.Add(new SelectListItem { Text = "Lead", Value = "002" });
            TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2;
            model[0].SelectedItems2 = new string[] { "" };
            return model;
        }
        [HttpPost]
        public ActionResult freq_mst(List<Tmodelmain> model, string command)
        {
            try
            {
                FillMst();
                DataTable dt = new DataTable();
                var tm = model.FirstOrDefault();
                #region dropdown
                List<SelectListItem> mod1 = new List<SelectListItem>();
                List<SelectListItem> mod2 = new List<SelectListItem>();
                model[0].TList1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                model[0].TList2 = (List<SelectListItem>)TempData[MyGuid + "_TList2"];
                TempData[MyGuid + "_TList1"] = model[0].TList1;
                TempData[MyGuid + "_TList2"] = model[0].TList2;
                if (tm.SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                if (tm.SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
                #endregion
                if (command == "New")
                {
                    try
                    {
                        model = new_freq_mst(model);
                    }
                    catch (Exception ex) { }
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {
                    var tmodel = model.FirstOrDefault();
                    string currdate = sgen.server_datetime(userCode);
                    ent_date = currdate;
                    DataTable dtstr = new DataTable();
                    dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        mq1 = " and master_id<>'" + model[0].Col16.Trim() + "'";
                        isedit = true;
                        vch_num = model[0].Col16.Trim();
                    }
                    else
                    {
                        isedit = false;
                        vch_num = model[0].Col16;
                        mq = "select max(to_number(master_id)) as auto_genid from " + model[0].Col10.Trim() + " a where " +
                       "type in ('" + model[0].Col12 + "','DD" + model[0].Col12 + "') " + model[0].Col11 + "";
                        vch_num = sgen.genNo(userCode, mq, 3, "auto_genid");
                        model[0].Col16 = vch_num;
                    }
                    string cond = sgen.seekval(userCode, "select master_name from " + model[0].Col17.Trim() + " a where type='" + model[0].Col12.Trim() + "'" +
                        "" + model[0].Col11 + " " + mq1 + "", "master_name");
                    if (!cond.Equals("0"))
                    {
                        ViewBag.scripCall = "showmsgJS(1, 'Name Already Exists', 2);";
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                        return View(model);
                    }
                    #region dtstr module
                    DataRow dr = dtstr.NewRow();
                    dr["master_id"] = model[0].Col16.Trim();
                    dr["vch_date"] = currdate;
                    dr["type"] = model[0].Col12;
                    dr["master_name"] = model[0].Col17;
                    dr["master_type"] = model[0].SelectedItems2.FirstOrDefault();//type
                    dr["SECTIONTYPE"] = model[0].SelectedItems1.FirstOrDefault();//freqtype
                    dr["SUBJECTID"] = model[0].Col18; //Frequency Count
                    dr["classid"] = model[0].Col19; //Reminder Time (in Days)\
                    dr["SECTIONID"] = model[0].Col20;//Interval (In Days)
                    if (isedit)
                    {
                        dr["master_entby"] = model[0].Col3;
                        dr["master_entdate"] = model[0].Col4;
                        dr["client_id"] = model[0].Col1;
                        dr["client_unit_id"] = model[0].Col2;
                        dr["rec_id"] = model[0].Col7;
                        dr["master_editby"] = userid_mst;
                        dr["master_editdate"] = ent_date;
                    }
                    else
                    {
                        dr["rec_id"] = "0";
                        dr["master_entby"] = userid_mst;
                        dr["master_entdate"] = ent_date;
                        dr["master_editby"] = "-";
                        dr["master_editdate"] = ent_date;
                        dr["client_id"] = clientid_mst;
                        dr["client_unit_id"] = unitid_mst;
                    }
                    dtstr.Rows.Add(dr);
                    #endregion
                    res = sgen.Update_data_fast1(userCode, dtstr, model[0].Col10.Trim(), model[0].Col8, isedit);
                    if (res == true)
                    {
                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col9 = tm.Col9,
                            Col10 = tm.Col10,
                            Col11 = tm.Col11,
                            Col12 = tm.Col12,
                            Col13 = "Save",
                            Col100 = "Save & New",
                            Col121 = "S",
                            Col122 = "<u>S</u>ave",
                            Col123 = "Save & Ne<u>w</u>",
                            Col14 = tm.Col14,
                            Col15 = tm.Col15,
                            TList1 = mod1,
                            TList2 = mod2,
                            SelectedItems1 = new string[] { "" },
                            SelectedItems2 = new string[] { "" }
                        });
                        if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                        {
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                        {
                            try
                            {
                                model = new_freq_mst(model);
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                            }
                            catch (Exception ex) { }
                        }

                    }
                    else { ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Something Went Wrong, Data Not Saved');"; }
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion

        #region phone template
        public ActionResult phoneTmp()
        {
            FillMst();
            List<Tmodelmain> model = new List<Tmodelmain>();
            List<SelectListItem> mod1 = new List<SelectListItem>();
            model = getload(model);
            model[0].Col9 = "PHONE TEMPLATE";
            model[0].Col12 = "PTP";
            model[0].Col10 = "enx_tab2";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
            model[0].SelectedItems1 = new string[] { "" };
            model[0].Files1 = new List<Files>();
            Files tm3 = new Files();
            tm3.FileName = "-";
            model[0].Files1.Add(tm3);
            return View(model);
        }
        [HttpPost]
        public ActionResult phoneTmp(List<Tmodelmain> model, string modelstr, string command, HttpPostedFileBase upd1)
        {
            sgen = new sgenFun(MyGuid);
            try
            {
                if (model[0].Files1 != null)
                {
                    for (int f = 0; f < model[0].Files1.Count; f++)
                    {
                        try
                        {
                            string base64String = "", fname = "", ftype = "";
                            var fi = model[0].Files1[f].PostedFile;
                            if (Request.Files["[0].Files1[" + f + "].PostedFile"] != null && Request.Files["[0].Files1[" + f + "].PostedFile"].ContentLength > 100)
                            {
                                fi = Request.Files["[0].Files1[" + f + "].PostedFile"];

                                Stream fs = fi.InputStream;
                                BinaryReader br = new BinaryReader(fs);
                                Byte[] bytes = br.ReadBytes((Int32)fs.Length);
                                base64String = Convert.ToBase64String(bytes, 0, bytes.Length);
                                fname = fi.FileName;
                                ftype = fi.ContentType;
                                model[0].Files1[f].FileBase64 = base64String;
                                model[0].Files1[f].FileName = fname;
                                model[0].Files1[f].ContentType = ftype;
                            }
                        }
                        catch (Exception ex)
                        {
                            sgen.SetSession(MyGuid, actionName + f, null);
                        }
                    }
                }
            }
            catch (Exception err) { }
            List<Tmodelmain> model1 = new List<Tmodelmain>();
            if (modelstr != null)
            {
                model1 = sgen.Make_Model(modelstr);
                model1[0].Files1 = model[0].Files1;
                model = model1;
            }

            try
            {
                string fdt = "", tdt = "";
                FillMst();
                var tm = model.FirstOrDefault();
                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
                if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };

                if (command == "New")
                {
                    model = getnew(model);
                    mod1 = new List<SelectListItem>();
                    mod1.Add(new SelectListItem { Text = "Lead", Value = "001" });
                    mod1.Add(new SelectListItem { Text = "Booking", Value = "002" });
                    mod1.Add(new SelectListItem { Text = "Booking Cancel", Value = "003" });
                    mod1.Add(new SelectListItem { Text = "Feed Back", Value = "004" });
                    TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command.Trim() == "Save" || command.Trim() == "Update")
                {
                    try
                    {
                        var tmodel = model.FirstOrDefault();
                        string currdate = sgen.server_datetime(userCode);
                        DataTable dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());

                        if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                        {
                            isedit = true;
                            vch_num = model[0].Col16;
                        }
                        else
                        {
                            isedit = false;
                            mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                            vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                            model[0].Col16 = vch_num;
                        }
                        DataRow dr = dtstr.NewRow();
                        dr["type"] = model[0].Col12;
                        dr["vch_num"] = vch_num.Trim();
                        dr["vch_date"] = sgen.Savedate(currdate, false);
                        dr["col23"] = model[0].Col20;  // body text
                        dr["col2"] = model[0].Col17;   //  set for
                        dr["col3"] = model[0].SelectedItems1.FirstOrDefault();// temp type                        
                        dr["col4"] = model[0].Chk1 == true ? "Y" : "N";
                        dr = getsave(currdate, dr, model, isedit);
                        dtstr.Rows.Add(dr);
                        Satransaction sat = new Satransaction(userCode, MyGuid);
                        bool Result = sgen.Update_data_fast1_uncommit(userCode, dtstr, model[0].Col10.Trim(), tmodel.Col8, isedit, sat);
                        if (Result == true)
                        {
                            IList<KCFile> fileCollection = new List<KCFile>();
                            #region attachment
                            string serverpath = Server.MapPath("~/Uploads/" + cg_com_name.Replace(" ", "") + "/");
                            var dtf = sgen.getdata(userCode, "select * from file_tab where " + tmodel.Col8 + "");
                            List<Tmodel> filenames = new List<Tmodel>();
                            foreach (DataRow drr in dtf.Rows)
                            {
                                try
                                {
                                    var fileNameOnly = drr["file_path"].ToString();
                                    var fullPath = serverpath + drr["file_path"].ToString();
                                    string path = Path.GetDirectoryName(fullPath);
                                    var newname = "temp_" + fileNameOnly;
                                    System.IO.File.Move(fullPath, path + newname);
                                    Tmodel tmf = new Tmodel();
                                    tmf.Col1 = path;
                                    tmf.Col2 = fileNameOnly;
                                    tmf.Col3 = newname;
                                    filenames.Add(tmf);
                                }
                                catch (Exception err) { }
                            }
                            sat.Execute_cmd("delete from file_tab where " + tmodel.Col8 + "");

                            if (model[0].Files1 != null)
                            {
                                for (int f = 0; f < model[0].Files1.Count; f++)
                                {
                                    try
                                    {
                                        if (model[0].Files1[f] != null)
                                        {
                                            string fname = model[0].Files1[f].FileName;
                                            string ftype = model[0].Files1[f].ContentType;
                                            string base64String = model[0].Files1[f].FileBase64;
                                            if (base64String != null && base64String.Trim().Length > 100)
                                            {
                                                ctype1 = ftype;
                                                fileName1 = fname;
                                                path1 = clientid_mst + unitid_mst + userid_mst + currdate + "_" + fileName1;
                                                encpath1 = sgen.Convert_Stringto64(path1).ToString();
                                                finalpath1 = serverpath + encpath1;
                                                System.IO.File.WriteAllBytes(finalpath1, Convert.FromBase64String(base64String));

                                                DataTable dtfile = cmd_Fun.GetStructure(userCode, "file_tab");
                                                filesave(model, currdate, dtfile, fileName1, encpath1, "PTP", ctype1, "Phone Template", "Phone Template", model[0].SelectedItems1.FirstOrDefault(), "");
                                                Result = sgen.Update_data_fast1_uncommit(userCode, dtfile, "file_tab", tmodel.Col8, isedit, sat);
                                                if (!Result)
                                                {
                                                    sat.Rollback();
                                                    break;
                                                }
                                                var bytes = Convert.FromBase64String(base64String);
                                                Stream stream = new MemoryStream(bytes);
                                                KCFile file = new KCFile();
                                                file.FileName = fname;
                                                file.ContentLength = stream.Length;
                                                file.ContentType = ctype1;
                                                file.InputStream = stream;
                                                fileCollection.Add(file);
                                            }
                                        }
                                    }
                                    catch (Exception err)
                                    {
                                        sat.Rollback();
                                        break;
                                    }
                                }
                            }
                            #endregion
                            if (Result)
                            {
                                sat.Commit();
                                foreach (var el in filenames)
                                {
                                    System.IO.File.Delete(el.Col1 + el.Col3);
                                }
                            }
                            else
                            {
                                foreach (var el in filenames)
                                {
                                    System.IO.File.Move(el.Col1 + el.Col3, el.Col1 + el.Col2);
                                }
                            }

                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.scripCall = "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                            model = new List<Tmodelmain>();
                            model.Add(new Tmodelmain
                            {
                                Col9 = tm.Col9,
                                Col10 = tm.Col10,
                                Col11 = tm.Col11,
                                Col12 = tm.Col12,
                                Col13 = "Save",
                                Col121 = "S",
                                Col122 = "<u>S</u>ave",
                                Col14 = tm.Col14,
                                Col15 = tm.Col15,
                                TList1 = mod1,
                                SelectedItems1 = new string[] { "" }
                            });

                            model[0].Files1 = new List<Files>();
                            Files tm3 = new Files();
                            tm3.FileName = "-";
                            model[0].Files1.Add(tm3);
                        }
                        else
                        {
                            ViewBag.scripCall = "showmsgJS(1, 'Record Not Saved', 2);";
                        }
                    }
                    catch (Exception ex) { sgen.showmsg(1, ex.Message.ToString(), 0); }
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
    }
}