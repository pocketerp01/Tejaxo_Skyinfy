using QRCoder;
using skyinfyMVC.Models;
using System;
using System.Collections.Generic;
using System.Data;
using System.Diagnostics;
using System.Globalization;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Web;
using System.Web.Mvc;
namespace skyinfyMVC.Controllers
{
    public class BillingController : Controller
    {
        string mq = "", mq1 = "", vch_num = "", btnval = "", tab_name = "", type = "", type_desc = "", tab_name1 = "", mid_mst = "", cond = "";
        static string where = "", col_name = "", master_id = "", MyGuid = "";
        string Master_Type = "", master_name = "", Condition = "", status = "", cessrate = "", name = "", trtype = "", ent_date = "", id = "", gstrate = "";
        //============================
        // string Ac_Year_id = "";
        string ctype1 = "", ctype2 = "", finalpath1 = "", finalpath2 = "", path1 = "", path2 = "", fileName1 = "", fileName2 = "", encpath1 = "", encpath2 = "";
        public static string userCode = "", userid_mst = "", FN_From_Date = "", FN_To_Date = "", Ac_Year_id = "", cg_com_name = "", clientid_mst = "",
          unitid_mst = "", Ac_To_Date = "", year_from = "", year_to = "", Ac_From_Date = "", role_mst = "", xprdrange = "", cmd = "", actionName = "", controllerName = "", Ac_Year = "";
        bool res = false, ok = false;
        public static sgenFun sgen;
        public static Cmd_Fun cmd_Fun;
        public static bool isedit = false;
        public static int cli = 0;
        string defcall = "";
        #region MAIN FUNC
        public void FillMst(string Myguid = "")
        {
            MyGuid = Myguid;
            if (MyGuid == "") { MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]); }
            Multiton multiton = Multiton.GetInstance(MyGuid);
            sgen = new sgenFun(MyGuid);
            cmd_Fun = new Cmd_Fun(MyGuid);

            userCode = sgen.GetCookie(MyGuid, "userCode");
            userid_mst = sgen.GetCookie(MyGuid, "userid_mst");
            Ac_Year_id = sgen.GetCookie(MyGuid, "Ac_Year_id");
            cg_com_name = sgen.GetCookie(MyGuid, "cg_com_name");
            clientid_mst = sgen.GetCookie(MyGuid, "clientid_mst");
            unitid_mst = sgen.GetCookie(MyGuid, "unitid_mst");
            Ac_Year = sgen.GetCookie(MyGuid, "Ac_Year");
            FN_From_Date = sgen.GetCookie(MyGuid, "year_from");
            actionName = this.ControllerContext.RouteData.Values["action"].ToString();
            controllerName = this.ControllerContext.RouteData.Values["controller"].ToString();
            sgen.SetSession(MyGuid, "viewName", actionName);
            sgen.SetSession(MyGuid, "controllerName", controllerName);
            sgen.SetSession(MyGuid, "BackToBack", "");
            year_to = sgen.GetCookie(MyGuid, "year_to");
            year_from = sgen.GetCookie(MyGuid, "year_from");
            xprdrange = "and to_date(to_char(vch_DATE,'ddMMyyyy'),'ddMMyyyy') between to_date('" + year_from + "','" + sgen.Getsqldatetimeformat() + "') " +
          "and to_date('" + year_to + "','" + sgen.Getsqldatetimeformat() + "')";
        }
        //===============getload==========
        public List<Tmodelmain> getload(List<Tmodelmain> model)
        {
            mid_mst = EncryptDecrypt.Decrypt(Request.QueryString["mid"]);
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            chkRef();
            Tmodelmain tm1 = new Tmodelmain();
            ViewBag.vnew = "";
            ViewBag.vedit = "";
            ViewBag.vsave = "disabled='disabled'";
            ViewBag.vsavenew = "disabled='disabled'";
            ViewBag.scripCall = "disableForm();";
            tm1.Col13 = "Save";
            tm1.Col100 = "Save & New";
            tm1.Col121 = "S";
            tm1.Col122 = "<u>S</u>ave";
            tm1.Col123 = "Save & Ne<u>w</u>";
            tm1.Col14 = mid_mst.Trim();
            tm1.Col15 = MyGuid.Trim();
            //string defval = "";
            model.Add(tm1);
            return model;
        }
        public List<Tmodelmain> getnew(List<Tmodelmain> model)
        {
            sgen.SetSession(MyGuid, "EDMODE", "N");
            // Session["EDMODE"] = "N";
            ViewBag.vnew = "disabled='disabled'";
            ViewBag.vedit = "disabled='disabled'";
            ViewBag.vsave = "";
            ViewBag.vsavenew = "";
            ViewBag.scripCall = "enableForm();";
            mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
            vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
            model[0].Col16 = vch_num;
            //string defval = "";
            return model;
        }
        public List<Tmodelmain> getedit(List<Tmodelmain> model, DataTable dtt, string param)
        {
            //  Session["EDMODE"] = "Y";
            sgen.SetSession(MyGuid, "EDMODE", "Y");
            model[0].Col1 = dtt.Rows[0]["client_id"].ToString();
            model[0].Col2 = dtt.Rows[0]["client_unit_id"].ToString();
            model[0].Col3 = dtt.Rows[0]["ent_by"].ToString();
            model[0].Col4 = dtt.Rows[0]["ent_date"].ToString();
            model[0].Col7 = dtt.Rows[0]["rec_id"].ToString();
            model[0].Col8 = "client_id||client_unit_id||vch_num|| to_char(vch_date, 'yyyymmdd')|| type = '" + param + "'";
            model[0].Col13 = "Update";
            model[0].Col100 = "Update & New";
            model[0].Col121 = "U";
            model[0].Col122 = "<u>U</u>pdate";
            model[0].Col123 = "Update & Ne<u>w</u>";
            return model;
        }
        public DataRow getsave(string curdt, DataRow drn, List<Tmodelmain> model)
        {
            bool edit = false;
            if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y")) { edit = true; }
            else { edit = false; }
            drn["rec_id"] = "0";
            if (edit)
            {
                drn["ent_by"] = model[0].Col3;
                drn["ent_date"] = model[0].Col4;
                drn["client_id"] = clientid_mst;
                drn["client_unit_id"] = unitid_mst;
                drn["edit_by"] = userid_mst;
                drn["edit_date"] = curdt;
            }
            else
            {
                drn["ent_by"] = userid_mst;
                drn["ent_date"] = curdt;
                drn["edit_by"] = "-";
                drn["edit_date"] = curdt;
                drn["client_id"] = clientid_mst;
                drn["client_unit_id"] = unitid_mst;
            }
            return drn;
        }
        private List<Tmodelmain> StartCallback(List<Tmodelmain> model)
        {
            if (sgen.GetSession(MyGuid, "btnval") != null) btnval = sgen.GetSession(MyGuid, "btnval").ToString();
            model = CallbackFun(btnval, "N", actionName, controllerName, model);
            if (btnval != "UNIT")
            {
                ViewBag.vnew = "disabled='disabled'";
                ViewBag.vedit = "disabled='disabled'";
                ViewBag.vsave = "";
                ViewBag.vsavenew = "";
            }
            else if (btnval.Trim() == "UNIT")
            {
                ViewBag.vnew = "";
                ViewBag.vedit = "";
                ViewBag.vsave = "disabled='disabled'";
                ViewBag.vsavenew = "disabled='disabled'";
            }
            return model;
        }
        private ActionResult CancelFun(List<Tmodelmain> model)
        {
            return RedirectToAction(actionName, new { @m_id = EncryptDecrypt.Encrypt(model[0].Col15), @mid = EncryptDecrypt.Encrypt(model[0].Col14) });
        }
        public void chkRef()
        {
            if (userCode.Equals("")) Response.Redirect(sgenFun.callbackurl);
            if (Request.UrlReferrer == null) { Response.Redirect(sgenFun.callbackurl); }
        }
        #endregion
        // GET: Billing
        public ActionResult Index()
        {
            return View();
        }
        //=============callback==============
        #region call back
        public List<Tmodelmain> CallbackFun(string btnval, string edmode, string viewName, string controllerName, List<Tmodelmain> model)
        {
            string mq = "";
            DataTable dt = new DataTable();
            DataTable dtm = new DataTable();
            DataTable dtt = new DataTable();
            List<SelectListItem> mod1 = new List<SelectListItem>();
            List<SelectListItem> mod2 = new List<SelectListItem>();
            List<SelectListItem> mod3 = new List<SelectListItem>();
            List<SelectListItem> mod4 = new List<SelectListItem>();
            List<SelectListItem> mod5 = new List<SelectListItem>();
            List<SelectListItem> mod6 = new List<SelectListItem>();
            List<SelectListItem> mod7 = new List<SelectListItem>();
            var tm = model.FirstOrDefault();
            String URL = sgen.GetSession(MyGuid, "SSEEKVAL").ToString();
            switch (viewName.ToLower())
            {
                #region billing_master
                case "billing_master":
                    switch (btnval)
                    {
                        case "EDIT":
                            #region billing_master                            
                            List<Tmodelmain> rpt_model = new List<Tmodelmain>();
                            mq = "select master_id,master_name,group_name,client_id,SECTION_STRENGTH,OPTIONAL_SUBJECT,CONT_PERSON_NAME," +
                                "CLASSID,SECTIONID,GROUP_ID,SUBJECTID,SUBJECT_STRENGTH,CONT_PERSON_EMAIL,TEACHER_CATEGORY,AUTH_SIGN_FILENAME," +
                                "CLIENT_GSTIN,QUALIFICATION_TYPE,SECTIONTYPE,GROUP_REFRENCE_NUMBER,status,content,client_unit_id,vch_num,vch_date,rec_id," +
                                "master_entby,master_entdate,master_editby,master_editdate,date_of_issue,to_char(date1,'" + sgen.Getsqldateformat() + "') date1," +
                                "to_char(date2,'" + sgen.Getsqldateformat() + "') date2,to_char(date3,'" + sgen.Getsqldateformat() + "') date3,to_char(date7,'" + sgen.Getsqldateformat() + "') date4," +
                                "to_char(date5,'" + sgen.Getsqldateformat() + "') date5,to_char(date6,'" + sgen.Getsqldateformat() + "') date6," +
                                "client_name,date_of_issue def,heading,master_type,unit_name,to_char(date7,'" + sgen.Getsqldateformat() + "') date7,col1,col2,auth_sign_filepath," +
                                "to_char(date8,'" + sgen.Getsqldateformat() + "') date8 from master_setting " +
                                "where (master_id||to_char(vch_date, 'yyyymmdd')|| type) = '" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "EDMODE", "Y");
                                model[0].Col1 = dtt.Rows[0]["master_entby"].ToString();
                                model[0].Col2 = dtt.Rows[0]["master_entdate"].ToString();
                                model[0].Col3 = tm.Col3; //tab_name
                                model[0].Col4 = dtt.Rows[0]["client_id"].ToString();
                                model[0].Col5 = dtt.Rows[0]["client_unit_id"].ToString();
                                model[0].Col6 = "(master_id|| to_char(vch_date, 'yyyymmdd')|| type) = '" + URL + "'";
                                model[0].Col7 = dtt.Rows[0]["rec_id"].ToString();
                                model[0].Col8 = tm.Col8;//type
                                model[0].Col9 = tm.Col9;//heading
                                model[0].Col10 = tm.Col10;//mid
                                model[0].Col11 = dtt.Rows[0]["master_id"].ToString();
                                model[0].Col12 = dtt.Rows[0]["group_name"].ToString();
                                model[0].Col13 = "Update";
                                model[0].Col100 = "Update & New";
                                model[0].Col121 = "U";
                                model[0].Col122 = "<u>U</u>pdate";
                                model[0].Col123 = "Update & Ne<u>w</u>";
                                model[0].Col14 = tm.Col14;
                                model[0].Col15 = dtt.Rows[0]["master_name"].ToString();
                                model[0].Col16 = dtt.Rows[0]["content"].ToString();
                                model[0].Col17 = dtt.Rows[0]["status"].ToString() == "Y" ? "Active" : "Inactive";
                                model[0].Col18 = tm.Col18;//where
                                model[0].Col20 = tm.Col20;//m_id
                                model[0].Col21 = dtt.Rows[0]["vch_num"].ToString();
                                model[0].Col22 = dtt.Rows[0]["client_name"].ToString();
                                model[0].Col23 = dtt.Rows[0]["GROUP_ID"].ToString();
                                model[0].Col24 = dtt.Rows[0]["QUALIFICATION_TYPE"].ToString();
                                model[0].Col25 = dtt.Rows[0]["SECTIONTYPE"].ToString();
                                model[0].Col26 = dtt.Rows[0]["GROUP_REFRENCE_NUMBER"].ToString();
                                model[0].Chk1 = dtt.Rows[0]["OPTIONAL_SUBJECT"].ToString() == "Y" ? true : false;
                                model[0].Chk2 = dtt.Rows[0]["TEACHER_CATEGORY"].ToString() == "Y" ? true : false;
                                model[0].Chk3 = dtt.Rows[0]["AUTH_SIGN_FILENAME"].ToString() == "Y" ? true : false;
                                model[0].Chk4 = dtt.Rows[0]["CLIENT_GSTIN"].ToString() == "Y" ? true : false;
                                model[0].Chk5 = dtt.Rows[0]["CONT_PERSON_EMAIL"].ToString() == "Y" ? true : false;
                                model[0].Chk6 = dtt.Rows[0]["SUBJECT_STRENGTH"].ToString() == "Y" ? true : false;
                                model[0].Chk7 = dtt.Rows[0]["SUBJECTID"].ToString() == "Y" ? true : false;
                                //model[0].Chk8 = dtt.Rows[0]["SECTION_STRENGTH"].ToString() == "Y" ? true : false;
                                model[0].Chk9 = dtt.Rows[0]["SECTIONID"].ToString() == "Y" ? true : false;
                                model[0].Chk10 = dtt.Rows[0]["CLASSID"].ToString() == "Y" ? true : false;
                                model[0].Chk11 = dtt.Rows[0]["CONT_PERSON_NAME"].ToString() == "Y" ? true : false;
                                model[0].Chk12 = dtt.Rows[0]["date_of_issue"].ToString() == "Y" ? true : false;
                                model[0].Col27 = dtt.Rows[0]["heading"].ToString();
                                model[0].Chk8 = dtt.Rows[0]["master_type"].ToString() == "Y" ? true : false;
                                model[0].Chk13 = dtt.Rows[0]["unit_name"].ToString() == "Y" ? true : false;
                                model[0].Col41 = dtt.Rows[0]["date7"].ToString();
                                model[0].Col28 = dtt.Rows[0]["col1"].ToString();
                                model[0].Chk14 = dtt.Rows[0]["col2"].ToString() == "Y" ? true : false;
                                model[0].Chk15 = dtt.Rows[0]["AUTH_SIGN_filepath"].ToString() == "Y" ? true : false;
                                model[0].Col42 = dtt.Rows[0]["date8"].ToString();
                                model[0].Col35 = dtt.Rows[0]["date1"].ToString();
                                model[0].Col36 = dtt.Rows[0]["date2"].ToString();
                                model[0].Col37 = dtt.Rows[0]["date3"].ToString();
                                model[0].Col38 = dtt.Rows[0]["date4"].ToString();
                                model[0].Col39 = dtt.Rows[0]["date5"].ToString();
                                model[0].Col40 = dtt.Rows[0]["date6"].ToString();
                            }
                            #endregion
                            break;
                        case "EXT":
                            mq = "select master_id,master_name,group_name,client_id,status,content,client_unit_id,vch_num,vch_date,rec_id," +
                                "master_entby,master_entdate,master_editby,master_editdate,client_name from master_setting where  " +
                                 "(master_id||to_char(vch_date, 'yyyymmdd')|| type) in ('" + URL + "')";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "HSNDT", URL.Trim());
                                Make_query(viewName.ToLower(), "Select Unit", "UNIT", "2", "", "", MyGuid);
                                ViewBag.scripCall += "callFoo('Select Unit');";
                            }
                            break;
                        case "UNIT":
                            try
                            {
                                string currdate = sgen.server_datetime(userCode);
                                ent_date = currdate;
                                string[] uts = URL.Replace("','", ",").Split(',');
                                string[] mst_data = sgen.GetSession(MyGuid, "HSNDT").ToString().Replace("','", ",").Split(',');
                                #region dtstr                                
                                try
                                {
                                    foreach (string mst in mst_data)
                                    {
                                        List<string> cp = new List<string>();
                                        List<string> up = new List<string>();
                                        foreach (string ut in uts)
                                        {
                                            cp.Add(ut.Substring(6, 3).Trim());
                                            up.Add(ut.Substring(0, 6).Trim());
                                        }
                                        cp.Add(clientid_mst);
                                        up.Add(unitid_mst);
                                        cp.Distinct().ToList();
                                        up.Distinct().ToList();

                                        mq = "update master_setting set master_editby='" + userid_mst + "',master_editdate=TO_DATE('" + sgen.Savedate(currdate, true) + "', 'YYYY-MM-DD HH24:MI:SS')," +
                                            "client_id='" + String.Join(",", cp) + "',client_unit_id='" + String.Join(",", up) + "' " +
                                            "where (master_id||to_char(vch_date, 'yyyymmdd')|| type)='" + mst + "'";
                                        res = sgen.execute_cmd(userCode, mq);
                                    }
                                }
                                catch (Exception ex) { res = false; }
                                #endregion
                                if (res)
                                {
                                    List<string> apps = new List<string>();
                                    foreach (var key in HttpContext.Application.Keys)
                                    {
                                        if (key.ToString().ToUpper().Contains("_U_" + userCode + ""))
                                        {
                                            apps.Add(key.ToString());
                                        }
                                    }
                                    foreach (var ap in apps)
                                    {
                                        HttpContext.Application[ap.ToString()] = null;
                                    }

                                    ViewBag.vnew = "";
                                    ViewBag.vedit = "";
                                    ViewBag.vsave = "disabled='disabled'";
                                    ViewBag.vsavenew = "disabled='disabled'";
                                    ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Extended Successfully');disableForm(); ";
                                }
                                else { ViewBag.scripCall = "showmsgJS(3, 'Record Not Saved', 1);"; }
                            }
                            catch (Exception ex) { sgen.showmsg(1, ex.Message.ToString().Replace("'", ""), 0); }
                            break;
                    }
                    break;
                #endregion
                #region itemservice
                case "itemservice":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "COPYITEM":
                            mq = "select it.*,mg.master_name mgrp,gp.master_name grp,sg.iname sgrp,ib.loc iloc,nvl(h.group_name,'0') tax," +
                                "to_char(it.date1,'" + sgen.Getsqldateformat() + "') dt1," +
                                "to_char(it.date2,'" + sgen.Getsqldateformat() + "') dt2," +
                                "to_char(it.date3,'" + sgen.Getsqldateformat() + "') dt3 from item it " +
                                "inner join master_setting mg on mg.classid=substr(it.icode,1,1) and mg.type='KGP' " +
                                "inner join master_setting gp on gp.master_id=substr(it.icode,1,3) and gp.type='KIG' and find_in_set(gp.client_unit_id,'" + unitid_mst + "')=1 " +
                                "inner join item sg on sg.icode=substr(it.icode,1,5) and sg.type='SG' and find_in_set(sg.client_unit_id,'" + unitid_mst + "')=1 " +
                                "inner join itbal ib on it.icode=ib.icode and it.type=ib.type and ib.client_unit_id='" + unitid_mst + "' " +
                                "left join master_setting h on it.hsno=h.master_id and h.type='HSN' and find_in_set(h.client_unit_id,it.client_unit_id)=1 " +
                                "where (it.icode|| it.type) = '" + URL + "'";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                #region HSN/SAC No
                                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.hsn(userCode, unitid_mst);
                                #endregion
                                #region location
                                TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2 = cmd_Fun.iloc(userCode, unitid_mst, out defcall);
                                ////mq1 = "select master_id, master_name from master_setting where  type='IIL' " + model[0].Col11 + "";
                                //mq1 = "select (a.client_id||a.client_unit_id||b.master_id||f.master_id||rm.master_id||rk.master_id||a.master_id) as fstr," +
                                //    "(b.master_name || ct.param1 || f.master_name || ct.param1 || rm.master_name || ct.param1 || rk.master_name || ct.param1 || a.master_name) Loc from master_setting a " +
                                //    "inner join master_setting b on b.master_id = a.classid and b.type = 'HBM' and a.client_id = b.client_id and a.client_unit_id = b.client_unit_id " +
                                //    "inner join master_setting f on f.master_id = a.sectionid and f.type = 'IN0' and a.client_id = f.client_id and a.client_unit_id = f.client_unit_id " +
                                //    "inner join master_setting rm on rm.master_id = a.client_name and rm.type = 'IN1' and a.client_id = rm.client_id and a.client_unit_id = rm.client_unit_id " +
                                //    "inner join master_setting rk on rk.master_id = a.subjectid and rk.type = 'IN2' and a.client_id = rk.client_id and a.client_unit_id = rk.client_unit_id " +
                                //    "inner join controls ct on 1 = 1 and ct.id = '000010' " +
                                //    "where a.type='IN3' and a.client_id = '" + clientid_mst + "' and a.client_unit_id = '" + unitid_mst + "'";
                                //dt = sgen.getdata(userCode, mq1);
                                //if (dt.Rows.Count > 0)
                                //{
                                //    foreach (DataRow dr in dt.Rows)
                                //    {
                                //        mod2.Add(new SelectListItem { Text = dr["Loc"].ToString(), Value = dr["fstr"].ToString() });
                                //    }
                                //}
                                //TempData[MyGuid + "_Tlist2"] = mod2;
                                #endregion
                                #region  unit meas
                                mod5 = cmd_Fun.unitmeas(userCode, unitid_mst, out defcall);

                                TempData[MyGuid + "_TList5"] = TempData[MyGuid + "_TList6"] = TempData[MyGuid + "_TList7"] = model[0].TList7 = model[0].TList6 = model[0].TList5 = mod5;
                                #endregion                                
                                #region packing type
                                TempData[MyGuid + "_TList3"] = model[0].TList3 = mod3 = cmd_Fun.packtype(userCode, unitid_mst, out defcall);
                                #endregion
                                #region storage cond
                                TempData[MyGuid + "_TList4"] = model[0].TList4 = mod4 = cmd_Fun.st_cond(userCode, unitid_mst);
                                #endregion

                                sgen.SetSession(MyGuid, "EDMODE", "N");
                                if (btnval.Trim().Equals("EDIT"))
                                {
                                    sgen.SetSession(MyGuid, "EDMODE", "Y");
                                    model[0].Col111 = "Y";
                                    model[0].Col1 = dt.Rows[0]["client_id"].ToString();
                                    model[0].Col2 = dt.Rows[0]["client_unit_id"].ToString();
                                    model[0].Col3 = dt.Rows[0]["ent_by"].ToString();
                                    model[0].Col4 = dt.Rows[0]["ent_date"].ToString();
                                    model[0].Col7 = dt.Rows[0]["rec_id"].ToString();
                                    model[0].Col8 = "icode|| type = '" + URL + "'";
                                    model[0].Col9 = tm.Col9;
                                    model[0].Col10 = tm.Col10;
                                    model[0].Col11 = tm.Col11;
                                    model[0].Col12 = tm.Col12;
                                    model[0].Col13 = "Update";
                                    model[0].Col100 = "Update & New";
                                    model[0].Col121 = "U";
                                    model[0].Col122 = "<u>U</u>pdate";
                                    model[0].Col123 = "Update & Ne<u>w</u>";
                                    model[0].Col14 = tm.Col14;
                                    model[0].Col15 = tm.Col15;
                                    model[0].Col16 = dt.Rows[0]["icode"].ToString();
                                }

                                String[] L1 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["hsno"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems1 = L1;
                                String[] L2 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["iloc"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems2 = L2;
                                String[] L3 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["pktype"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems3 = L3;
                                String[] L5 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["uom"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems5 = L5;
                                String[] L6 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["uom2"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems6 = L6;
                                String[] L4 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["stcond"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems4 = L4;
                                String[] L7 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["uom3"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems7 = L7;
                                model[0].Col17 = dt.Rows[0]["iname"].ToString();
                                model[0].Col18 = dt.Rows[0]["description"].ToString();
                                model[0].Col19 = dt.Rows[0]["cpartno"].ToString();
                                model[0].Col20 = dt.Rows[0]["partname"].ToString();
                                model[0].Col25 = dt.Rows[0]["tax"].ToString();
                                model[0].Col21 = dt.Rows[0]["minstk"].ToString();
                                model[0].Col22 = dt.Rows[0]["maxstk"].ToString();
                                model[0].Col23 = dt.Rows[0]["reorder"].ToString();
                                model[0].Col24 = dt.Rows[0]["critlvl"].ToString();
                                model[0].Col36 = dt.Rows[0]["mgrp"].ToString() + " - " + dt.Rows[0]["grp"].ToString() + " - " + dt.Rows[0]["sgrp"].ToString();
                                model[0].Col37 = dt.Rows[0]["icode"].ToString().Substring(0, 5).Trim().ToString();
                                model[0].Col38 = dt.Rows[0]["status"].ToString() == "Y" ? "Active" : "Inactive";
                                model[0].Col39 = dt.Rows[0]["length"].ToString();
                                model[0].Col40 = dt.Rows[0]["cuom"].ToString();
                                model[0].Col41 = dt.Rows[0]["pksize"].ToString();
                                model[0].Col43 = dt.Rows[0]["width"].ToString();
                                model[0].Col44 = dt.Rows[0]["weight"].ToString();
                                model[0].Col45 = dt.Rows[0]["height"].ToString();
                                model[0].Col46 = dt.Rows[0]["thick"].ToString();
                                model[0].Col47 = dt.Rows[0]["rate"].ToString();
                                model[0].Chk1 = dt.Rows[0]["qa"].ToString() == "Y" ? true : false;
                                model[0].Col50 = dt.Rows[0]["gweight"].ToString();
                                model[0].Col51 = dt.Rows[0]["hzrd"].ToString() == "Y" ? "Yes" : "No";
                                model[0].Col52 = dt.Rows[0]["ltol"].ToString();
                                model[0].Col53 = dt.Rows[0]["utol"].ToString();
                                model[0].Col54 = dt.Rows[0]["slife"].ToString();
                                model[0].Col55 = dt.Rows[0]["mslife"].ToString();
                                model[0].Col56 = dt.Rows[0]["lqty"].ToString();
                                model[0].Col57 = dt.Rows[0]["lweight"].ToString();
                                model[0].Col58 = dt.Rows[0]["bqty"].ToString();
                                model[0].Col59 = dt.Rows[0]["bweight"].ToString();
                                model[0].Chk2 = dt.Rows[0]["nonstk"].ToString() == "Y" ? true : false;
                                model[0].Chk3 = dt.Rows[0]["sale"].ToString() == "Y" ? true : false;
                                model[0].Chk4 = dt.Rows[0]["pdi"].ToString() == "Y" ? true : false;
                                model[0].Chk5 = dt.Rows[0]["dbuy"].ToString() == "Y" ? true : false;
                                model[0].Chk6 = dt.Rows[0]["tcs"].ToString() == "Y" ? true : false;
                                model[0].Col81 = dt.Rows[0]["col1"].ToString();
                                model[0].Col82 = dt.Rows[0]["col2"].ToString();
                                model[0].Col83 = dt.Rows[0]["col3"].ToString();
                                model[0].Col87 = dt.Rows[0]["col4"].ToString();
                                model[0].Col88 = dt.Rows[0]["col5"].ToString();
                                model[0].Col89 = dt.Rows[0]["col6"].ToString();
                                model[0].Col84 = dt.Rows[0]["dt1"].ToString();
                                model[0].Col85 = dt.Rows[0]["dt2"].ToString();
                                model[0].Col86 = dt.Rows[0]["dt3"].ToString();
                                model[0].Col62 = dt.Rows[0]["item_alias"].ToString();
                                model[0].Col61 = dt.Rows[0]["mstpck_size"].ToString();
                                model[0].Col90 = dt.Rows[0]["amortchrgs"].ToString();
                                model[0].Col91 = dt.Rows[0]["matjobwork"].ToString();
                                model[0].Col92 = dt.Rows[0]["sname"].ToString();
                                model[0].Col93 = dt.Rows[0]["pname"].ToString();
                                model[0].Col49 = dt.Rows[0]["cuom2"].ToString();

                                mq = "select master_name attr,(select count(master_id) from master_setting where type='ATB' and client_unit_id='" + unitid_mst + "') cnt " +
              "from master_setting where type='ATB' and client_unit_id='" + unitid_mst + "'";
                                dtm = sgen.getdata(userCode, mq);
                                if (dtm.Rows.Count > 0)
                                {
                                    switch (dtm.Rows[0]["cnt"].ToString())
                                    {
                                        case "1":
                                            model[0].Col26 = dtm.Rows[0]["attr"].ToString();
                                            break;
                                        case "2":
                                            model[0].Col26 = dtm.Rows[0]["attr"].ToString();
                                            model[0].Col28 = dtm.Rows[1]["attr"].ToString();
                                            break;
                                        case "3":
                                            model[0].Col26 = dtm.Rows[0]["attr"].ToString();
                                            model[0].Col28 = dtm.Rows[1]["attr"].ToString();
                                            model[0].Col30 = dtm.Rows[2]["attr"].ToString();
                                            break;
                                        case "4":
                                            model[0].Col26 = dtm.Rows[0]["attr"].ToString();
                                            model[0].Col28 = dtm.Rows[1]["attr"].ToString();
                                            model[0].Col30 = dtm.Rows[2]["attr"].ToString();
                                            model[0].Col32 = dtm.Rows[3]["attr"].ToString();
                                            break;
                                        case "5":
                                            model[0].Col26 = dtm.Rows[0]["attr"].ToString();
                                            model[0].Col28 = dtm.Rows[1]["attr"].ToString();
                                            model[0].Col30 = dtm.Rows[2]["attr"].ToString();
                                            model[0].Col32 = dtm.Rows[3]["attr"].ToString();
                                            model[0].Col34 = dtm.Rows[4]["attr"].ToString();
                                            break;
                                    }
                                }
                                model[0].Col27 = dt.Rows[0]["attr1"].ToString();
                                model[0].Col29 = dt.Rows[0]["attr2"].ToString();
                                model[0].Col31 = dt.Rows[0]["attr3"].ToString();
                                model[0].Col33 = dt.Rows[0]["attr4"].ToString();
                                model[0].Col35 = dt.Rows[0]["attr5"].ToString();
                                if (btnval.Trim().Equals("EDIT"))
                                {
                                    DataTable dtf = new DataTable();
                                    dtf = sgen.getdata(userCode, "select rec_id,file_name,file_path,col1 from file_tab where client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "' and ref_code1='" + dt.Rows[0]["icode"].ToString() + "' and type in ('" + model[0].Col12 + "','DD" + model[0].Col12 + "')");
                                    List<Tmodelmain> ltmf = new List<Tmodelmain>();
                                    foreach (DataRow drf in dtf.Rows)
                                    {
                                        Tmodelmain tmf = new Tmodelmain();
                                        tmf.Col4 = drf["file_path"].ToString();
                                        tmf.Col1 = drf["file_name"].ToString();
                                        tmf.Col2 = drf["col1"].ToString();
                                        tmf.Col3 = drf["rec_id"].ToString();
                                        ltmf.Add(tmf);
                                    }
                                    model[0].LTM1 = ltmf;
                                }
                            }
                            break;
                        case "FDEL":
                            string fid = sgen.GetSession(MyGuid, "delid").ToString();
                            res = sgen.execute_cmd(userCode, "Delete from file_tab WHERE client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "' and rec_id='" + fid + "' and type='IT'");
                            sgen.SetSession(MyGuid, "delid", null);
                            if (res)
                            {
                                var LTM = model[0].LTM1;
                                for (int d = 0; d < LTM.Count; d++)
                                {
                                    var id = LTM[d].Col3;
                                    if (id == fid) { model[0].LTM1.RemoveAt(d); }
                                }
                            }
                            break;
                        case "SUBGRP":
                            mq = "select substr(sg.icode,1,1) Mgid,mg.master_name MainGrp,substr(sg.icode,1,3) Igrpid,gp.master_name ItemGrp,sg.icode Isgid," +
    "sg.iname Itemsubgrp from item sg inner join master_setting mg on mg.classid=substr(sg.icode,1,1) and mg.type='KGP' " +
    "INNER join master_setting gp on gp.master_id=substr(sg.icode,1,3) and gp.type='KIG' and " +
    "find_in_set(gp.client_unit_id,'" + unitid_mst + "')=1 where sg.icode||to_char(sg.vch_date,'yyyymmdd')||sg.type='" + URL + "'";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                model[0].Col36 = dt.Rows[0]["MainGrp"].ToString() + " - " + dt.Rows[0]["ItemGrp"].ToString() + " - " + dt.Rows[0]["Itemsubgrp"].ToString();
                                model[0].Col37 = dt.Rows[0]["Isgid"].ToString();
                                if (dt.Rows[0]["Mgid"].ToString().Equals("9")) { model[0].Chk3 = true; }
                                if (sgen.Make_int(dt.Rows[0]["Mgid"].ToString()) <= 7) { model[0].Chk5 = true; }
                            }
                            break;
                        case "EXT":
                        case "DEACT":
                            mq = "select it.*,mg.master_name mgrp,gp.master_name grp,sg.iname sgrp,ib.loc iloc," +
                                 "to_char(it.date1,'" + sgen.Getsqldateformat() + "') dt1," +
                                 "to_char(it.date2,'" + sgen.Getsqldateformat() + "') dt2," +
                                 "to_char(it.date3,'" + sgen.Getsqldateformat() + "') dt3 from item it " +
                                 "inner join master_setting mg on mg.classid=substr(it.icode,1,1) and mg.type='KGP' " +
                                 "inner join master_setting gp on gp.master_id=substr(it.icode,1,3) and gp.type='KIG' and find_in_set(gp.client_unit_id,'" + unitid_mst + "')=1 " +
                                 "inner join item sg on sg.icode=substr(it.icode,1,5) and sg.type='SG' and find_in_set(sg.client_unit_id,'" + unitid_mst + "')=1 " +
                                 "inner join itbal ib on it.icode=ib.icode and it.type=ib.type and ib.client_unit_id='" + unitid_mst + "' " +
                                 "where (it.icode|| it.type) in ('" + URL + "')";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                model[0].TList1 = mod1;
                                model[0].TList2 = mod1;
                                model[0].TList3 = mod1;
                                model[0].TList4 = mod1;
                                model[0].TList5 = mod1;
                                model[0].TList6 = mod1;
                                model[0].TList7 = mod1;
                                if (btnval.ToUpper().Equals("DEACT")) model[0].Col60 = "Y";
                                sgen.SetSession(MyGuid, "IDATA", URL.Trim());

                                Make_query(viewName.ToLower(), "Select Unit", "UNIT", "2", "", "", MyGuid);

                                ViewBag.scripCall += "callFoo('Select Unit');";
                            }
                            break;
                        case "UNIT":
                            try
                            {
                                mq1 = "";
                                string currdate = sgen.server_datetime(userCode);
                                ent_date = currdate;
                                string[] uts = URL.Replace("','", ",").Split(',');
                                string[] mst_data = sgen.GetSession(MyGuid, "IDATA").ToString().Replace("','", ",").Split(',');
                                #region dtstr                                
                                try
                                {
                                    foreach (string mst in mst_data)
                                    {
                                        List<string> cp = new List<string>();
                                        List<string> up = new List<string>();
                                        foreach (string ut in uts)
                                        {
                                            cp.Add(ut.Substring(6, 3).Trim());
                                            up.Add(ut.Substring(0, 6).Trim());
                                        }
                                        cp.Add(clientid_mst);
                                        up.Add(unitid_mst);
                                        cp = cp.Distinct().ToList();
                                        up = up.Distinct().ToList();

                                        if (model[0].Col60 == null || model[0].Col60 == "")
                                        {
                                            mq = "update item set edit_by='" + userid_mst + "',edit_date=TO_DATE('" + currdate + "', 'YYYY-MM-DD HH24:MI:SS')," +
                                                "client_id='" + String.Join(",", cp) + "',client_unit_id='" + String.Join(",", up) + "' " +
                                                "where (icode|| type)='" + mst + "'";

                                            for (int i = 0; i < up.Count; i++)
                                            {
                                                mq1 = sgen.seekval(userCode, "select icode from itbal where (icode||type||client_id||client_unit_id)='" + mst + up[i].ToString().Substring(0, 3).Trim() + up[i].ToString().Trim() + "'", "icode");
                                                if (mq1.Trim().Equals("0"))
                                                {
                                                    ok = sgen.execute_cmd(userCode, "insert into itbal (created_date,client_id,client_unit_id,type,vch_date,icode,ent_by,ent_date,edit_by,edit_date,op_2019,op_2020,loc) " +
                                                    "values(to_date('" + ent_date + "','YYYY-MM-DD HH24:MI:SS'),'" + up[i].ToString().Substring(0, 3).Trim() + "','" + up[i].ToString().Trim() + "','IT',to_date('" + ent_date + "','YYYY-MM-DD HH24:MI:SS'),'" + mst.Substring(0, 10).Trim() + "','" + userid_mst + "'," +
                                                    "to_date('" + ent_date + "','YYYY-MM-DD HH24:MI:SS'),'-',to_date('" + ent_date + "','YYYY-MM-DD HH24:MI:SS'),'0','0','0')");
                                                    if (!ok)
                                                    {
                                                        ViewBag.scripCall += "showmsgJS(1, 'not extended properly, please check', 0);";
                                                        break;
                                                    }
                                                }
                                            }
                                        }
                                        else { mq = "update item set dunit='" + String.Join(",", up.Distinct()) + "' where (icode|| type)='" + mst + "'"; }
                                        res = sgen.execute_cmd(userCode, mq);
                                    }
                                    model[0].TList1 = mod1;
                                    model[0].TList2 = mod1;
                                    model[0].TList3 = mod1;
                                    model[0].TList4 = mod1;
                                    model[0].TList5 = mod1;
                                    model[0].TList6 = mod1;
                                    model[0].TList7 = mod1;
                                }
                                catch (Exception ex) { res = false; }
                                #endregion
                                if (res)
                                {
                                    List<string> apps = new List<string>();
                                    foreach (var key in HttpContext.Application.Keys)
                                    {
                                        if (key.ToString().ToUpper().Contains("_U_" + userCode + ""))
                                        {
                                            apps.Add(key.ToString());
                                        }
                                    }
                                    foreach (var ap in apps)
                                    {
                                        HttpContext.Application[ap.ToString()] = null;
                                    }
                                    ViewBag.vnew = "";
                                    ViewBag.vedit = "";
                                    ViewBag.vsave = "disabled='disabled'";
                                    ViewBag.vsavenew = "disabled='disabled'";
                                    if (model[0].Col60 == null || model[0].Col60 == "") ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Extended Successfully');disableForm(); ";
                                    else ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Deactive Successfully');disableForm(); ";
                                }
                                else { ViewBag.scripCall += "showmsgJS(1, 'Something went wrong, please check', 0);"; }
                            }
                            catch (Exception ex) { sgen.showmsg(1, ex.Message.ToString().Replace("'", ""), 0); }
                            break;
                    }
                    break;
                #endregion
                #region itemsubgrp
                case "itemsubgrp":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            mq = "select a.icode||to_char(a.vch_date,'yyyymmdd')||a.type as fstr,a.client_id," +
                                "a.client_unit_id,a.rec_id,a.icode,a.ent_by,a.ent_date,a.edit_by,a.edit_date,a.iname,substr(icode,1,3) Item_group," +
                                "status,gstrate dracc,gcess cracc from item a where a.icode||to_char(a.vch_date,'yyyymmdd')||a.type = '" + URL + "' ";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "EDMODE", "Y");
                                #region item group
                                TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1 = cmd_Fun.itemgrp(userCode, clientid_mst, unitid_mst);
                                //TempData[MyGuid + "_Tlist1"] = mod1;
                                #endregion
                                model[0].Col1 = dt.Rows[0]["client_id"].ToString();
                                model[0].Col2 = dt.Rows[0]["client_unit_id"].ToString();
                                model[0].Col3 = dt.Rows[0]["ent_by"].ToString();
                                model[0].Col4 = dt.Rows[0]["ent_date"].ToString();
                                model[0].Col7 = dt.Rows[0]["rec_id"].ToString();
                                model[0].Col8 = "icode||to_char(vch_date,'yyyymmdd')||type = '" + URL + "'";
                                model[0].Col9 = tm.Col9;
                                model[0].Col10 = tm.Col10;
                                model[0].Col11 = tm.Col11;
                                model[0].Col12 = tm.Col12;
                                model[0].Col13 = "Update";
                                model[0].Col14 = tm.Col14;
                                model[0].Col15 = tm.Col15;
                                model[0].Col100 = "Update & New";
                                model[0].Col121 = "U";
                                model[0].Col122 = "<u>U</u>pdate";
                                model[0].Col123 = "Update & Ne<u>w</u>";
                                model[0].Col16 = dt.Rows[0]["icode"].ToString();
                                model[0].Col17 = dt.Rows[0]["iname"].ToString();
                                //model[0].TList1 = mod1;
                                String[] L1 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["Item_group"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems1 = L1;
                                model[0].Col18 = dt.Rows[0]["status"].ToString() == "Y" ? "Active" : "Inactive";
                                model[0].Col19 = dt.Rows[0]["dracc"].ToString();//debit account
                                model[0].Col20 = dt.Rows[0]["cracc"].ToString();//credit account
                            }
                            break;
                        case "EXT":
                            mq = "select a.icode||to_char(a.vch_date,'yyyymmdd')||a.type as fstr,a.client_id," +
                           "a.client_unit_id,a.rec_id,a.icode,a.ent_by,a.ent_date,a.edit_by,a.edit_date,a.iname,substr(a.icode,1,3) Item_group," +
                           "a.status,a.gstrate dracc,a.gcess cracc from item a where a.icode||to_char(a.vch_date,'yyyymmdd')||a.type in ('" + URL + "') ";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "SUBGRPDT", URL.Trim());

                                Make_query(viewName.ToLower(), "Select Unit", "UNIT", "2", "", "", MyGuid);

                                ViewBag.scripCall += "callFoo('Select Unit');";
                            }
                            break;
                        case "UNIT":
                            try
                            {
                                string currdate = sgen.server_datetime(userCode);
                                ent_date = currdate;
                                string[] uts = URL.Replace("','", ",").Split(',');
                                string[] mst_data = sgen.GetSession(MyGuid, "SUBGRPDT").ToString().Replace("','", ",").Split(',');
                                #region dtstr                                
                                try
                                {
                                    foreach (string mst in mst_data)
                                    {
                                        List<string> cp = new List<string>();
                                        List<string> up = new List<string>();
                                        foreach (string ut in uts)
                                        {
                                            cp.Add(ut.Substring(6, 3).Trim());
                                            up.Add(ut.Substring(0, 6).Trim());
                                        }
                                        cp.Add(clientid_mst);
                                        up.Add(unitid_mst);
                                        cp.Distinct();
                                        up.Distinct();

                                        mq = "update item set edit_by='" + userid_mst + "',edit_date=TO_DATE('" + currdate + "', 'YYYY-MM-DD HH24:MI:SS'),client_id" +
                                            "='" + String.Join(",", cp.Distinct()) + "',client_unit_id='" + String.Join(",", up.Distinct()) + "' where (icode||to_char(vch_date,'yyyymmdd')|| type)='" + mst + "'";
                                        res = sgen.execute_cmd(userCode, mq);
                                    }
                                }
                                catch (Exception ex) { res = false; }
                                #endregion
                                if (res)
                                {
                                    List<string> apps = new List<string>();
                                    foreach (var key in HttpContext.Application.Keys)
                                    {
                                        if (key.ToString().ToUpper().Contains("_U_" + userCode + ""))
                                        {
                                            apps.Add(key.ToString());
                                        }
                                    }
                                    foreach (var ap in apps)
                                    {
                                        HttpContext.Application[ap.ToString()] = null;
                                    }
                                    ViewBag.vnew = "";
                                    ViewBag.vedit = "";
                                    ViewBag.vsave = "disabled='disabled'";
                                    ViewBag.vsavenew = "disabled='disabled'";
                                    ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Extended Successfully');disableForm(); ";
                                }
                                else { ViewBag.scripCall = "showmsgJS(3, 'Record Not Saved', 1);"; }
                            }
                            catch (Exception ex) { sgen.showmsg(1, ex.Message.ToString().Replace("'", ""), 0); }
                            break;
                    }
                    break;
                #endregion
                #region Invoice
                case "invoice":
                    List<string> values = new List<string>();
                    values = (List<string>)sgen.GetSession(MyGuid, "Values");
                    switch (btnval.ToUpper())
                    {
                        case "DEL":
                            mq = "select distinct vch_num,to_char(vch_date,'" + sgen.Getsqldateformat() + "') as vch_date,to_char(ent_date,'" + sgen.Getsqldateformat() + "') as ent_date,type,acode,netamt,ent_by from " +
                                "itransaction a where (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date, 'yyyymmdd')|| a.type) = '" + URL + "'";
                            dt = sgen.getdata(userCode, mq);
                            model[0].TList1 = mod1; model[0].TList2 = mod2; model[0].TList3 = mod3; model[0].TList4 = mod4; model[0].TList5 = mod5;
                            model[0].TList6 = mod6;
                            if (dt.Rows.Count > 0)
                            {
                                Satransaction sat = new Satransaction(userCode, MyGuid);
                                string currdate = sgen.server_datetime(userCode);
                                try
                                {
                                    bool ok = true;
                                    if (ok) ok = sat.Execute_cmd("DELETE FROM itransaction where (client_id||client_unit_id||vch_num||to_char(vch_date, 'yyyymmdd')||type) = '" + URL + "'");
                                    if (ok) ok = sat.Execute_cmd("DELETE FROM btchtrans where (client_id||client_unit_id||vch_num||to_char(vch_date, 'yyyymmdd')||type) = '" + URL + "'");
                                    if (ok) ok = sat.Execute_cmd("DELETE FROM vouchers where (client_id||client_unit_id||vch_num||to_char(vch_date, 'yyyymmdd')||type) = '" + URL + "'");
                                    if (ok) ok = sat.Execute_cmd("DELETE FROM sales where (client_id||client_unit_id||vch_num||to_char(vch_date, 'yyyymmdd')||type) = '" + URL + "'");
                                    if (ok) ok = sat.Execute_cmd("DELETE FROM enx_tab where (client_id||client_unit_id||vch_num||to_char(vch_date, 'yyyymmdd')||type) = '" + URL + "'");
                                    if (ok) ok = save_to_recycle(userCode, currdate, dt.Rows[0]["type"].ToString(), dt.Rows[0]["vch_num"].ToString(), dt.Rows[0]["vch_date"].ToString(), dt.Rows[0]["acode"].ToString(), dt.Rows[0]["netamt"].ToString(), dt.Rows[0]["ent_by"].ToString(), userid_mst, dt.Rows[0]["ent_date"].ToString(), currdate, "DEL", sat);
                                    if (ok)
                                    {
                                        ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Invoice Cancelled Successfully');disableForm();";
                                        sat.Commit();
                                    }
                                    else sat.Rollback();
                                }
                                catch (Exception ex)
                                {
                                    ViewBag.scripCall = "showmsgJS(1, '" + ex.Message + "', 2);";
                                }
                            }
                            break;
                        case "PRINT":
                        case "PRINTPKL":
                            model[0].TList1 = mod1; model[0].TList2 = mod2; model[0].TList3 = mod3; model[0].TList4 = mod4; model[0].TList5 = mod5;
                            model[0].TList6 = mod6;
                            string term = "", doc_contrl_no = "", invtype = "";
                            invtype = sgen.getstring(userCode, "select distinct p.type as master_id from itransaction p where (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) = '" + URL + "'");
                            DataTable dtterm = sgen.getdata(userCode, "select k.col73 tandc,k.col1 doc_control_no,k.col5 rptid,fm.master_name rptname from kc_tab k " +
                                "inner join master_setting fm on fm.master_id = k.col5 and fm.type = 'IRF' and fm.classid = '83' and fm.sectionid = '" + invtype + "' " +
                                //"inner join master_setting fm on fm.master_id = k.col5 and fm.type = 'IRF' and fm.client_unit_id = '" + unitid_mst + "' and fm.classid = '83' and fm.sectionid = '" + invtype + "' " +
                                "where k.type='PRN' and k.client_unit_id = '" + unitid_mst + "'");
                            if (dtterm.Rows.Count > 0)
                            {
                                term = dtterm.Rows[0]["tandc"].ToString();
                                model[0].Col30 = dtterm.Rows[0]["rptname"].ToString();
                                doc_contrl_no = dtterm.Rows[0]["doc_control_no"].ToString();
                            }
                            else
                            {
                                if (invtype == "45") model[0].Col30 = "invamr";
                                else model[0].Col30 = "gst_inv5";
                            }
                            mq = "select (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) fstr,(case when nvl(pt.master_name,'-')='0' then '-' else nvl(pt.master_name,'-') end) as pay_term," +
                                "(case when nvl(prc.master_name,'-')='0' then '-' else nvl(prc.master_name,'-') end) as price_term,to_number(p.col1) as less_amort,(case when nvl(p.cpartno,'-')='0' then '-' else nvl(p.cpartno,'-') end) as cpartno,to_number(p.col3) as mat_cons_amt,to_number(p.col2) as net_total_amt" +
                                ",(case when nvl(tm.master_name,'-')='0' then '-' else nvl(tm.master_name,'-') end) as trpt_mode,to_number(p.lineamount) lineamount,p.totremark remark," +
                                "p.uom,p.irate,p.TaxRate,to_number(p.taxamt) taxamt,p.vch_num Invoice_Number," +
                                "to_char(convert_tz(p.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') Invoice_Date," +
                                "to_number(p.qtyout) inv_qty,to_number(p.ginstlchrg) as taxable_amt,p.iremark del_note,(case when p.GFREIGHT='0' then '-' else p.GFREIGHT end) veh_no,p.hsno hsn_no,p.iname,p.icode," +
                                "to_char(convert_tz(p.ewaydate, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') Delevery_date,to_char(convert_tz(p.chldate, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') ewaybilldate,(case when nvl(p.ewayno,'-')='0' then '-' else nvl(p.ewayno,'-') end) as ewayno," +
                                "ai.master_name Against,c.c_name Party_Name," +
                                "(case when nvl(c.c_gstin,'-')='0' then '-' else nvl(c.c_gstin,'-') end) as Party_Gstin,(case when c.addr='0' then '-' else c.addr end) as Party_Address,p.discrate as discrate, p.discamt,to_number(p.iamount) iamount,nvl(sf.c_name, '-') From_Name," +
                                "nvl(sf.c_gstin, '-') as From_Gstin,(case when nvl(p.DEPTNAME,'-')='0' then '-' else nvl(p.DEPTNAME,'-') end) as Terms_of_del,nvl(sf.cpaddr, '-') FromAddress,nvl(st.c_name, '-') To_Name," +
                                "nvl(st.c_gstin, '-') as To_Gstin,nvl(st.cpaddr, '-') ToAddress,(case when nvl(p.gothrchrg,'-')='0' then '-' else nvl(p.gothrchrg,'-') end) po_no,to_char(p.date1,'" + sgen.Getsqldateformat() + "') as po_date, p.gserchrg IGST, p.gloadchrg SGST," +
                                "p.gamc CGST, to_number(p.basicamt) BasicAmt,to_number(p.ginstlchrg) GrossAmt,to_number(p.netamt) net_amount," +
                                "'" + term + "' terms_cond,'" + doc_contrl_no + "' doc_control_no,to_number(p.amrtchrgamt) as amortamt,it.amortchrgs,p.round_amt" +
                                ",TRIM(dbms_lob.substr(p.iremark,4000,1)) iremark,to_number(p.iamount)-to_number(p.iamount*to_number(p.DISCRATE)/100) AS txbleamt from itransaction p " +
                                "inner join clients_mst c on p.acode = c.vch_num and find_in_set(c.client_unit_id, p.client_unit_id)= 1 and c.type = 'BCD' and substr(c.vch_num,0,3)= '303' " +
                                "inner join item it on it.icode=p.icode and it.type='IT' and find_in_set(it.client_unit_id,p.client_unit_id)=1 " +
                                "left join clients_mst sf on p.shipfrom = sf.vch_num and find_in_set(sf.client_unit_id, p.client_unit_id)= 1 and sf.type = 'BCD' and substr(sf.vch_num,0,3)= '303' " +
                                "left join clients_mst st on p.shipto = st.vch_num and find_in_set(st.client_unit_id, p.client_unit_id)= 1 and st.type = 'BCD' and substr(st.vch_num,0,3)= '303' " +
                                "left join master_setting pt on pt.master_id = p.pay_term and pt.type = 'PTM' and find_in_set(pt.client_unit_id,'" + unitid_mst + "')= 1 " +
                                "left join master_setting prc on prc.master_id = p.price_term and prc.type = 'PRI' and find_in_set(prc.client_unit_id,'" + unitid_mst + "')= 1 " +
                                "left join master_setting tm on tm.master_id = p.tmode and tm.type = 'AMT' and find_in_set(tm.client_unit_id,'" + unitid_mst + "')= 1 " +
                                "inner join master_setting ai on ai.master_id=p.potype and ai.type='KIV' and substr(ai.master_id,1,1)='5' and find_in_set(ai.client_unit_id,p.client_unit_id)=1 " +
                                "where(p.client_id || p.client_unit_id || p.vch_num || to_char(p.vch_date, 'yyyymmdd') || p.type) = '" + URL + "'";
                            dt = sgen.getdata(userCode, mq);
                            mq1 = "select sum(a.basicamt) as taxableamt,max(a.Igstr) as Igstr,max(a.cgstr) as cgstr ,max(a.sgstr) as sgstr,sum(a.igst) as igst,sum(a.cgst) as cgst,sum(a.sgst) as sgst,a.hsno from " +
                                "(select to_number(p.iamount)-to_number(p.iamount*to_number(p.DISCRATE)/100) AS basicamt,(case when to_number(igst)=0 then 0 else to_number(taxrate) end) Igstr,(case when to_number(igst)=0 then  taxrate/2 else 0 end) cgstr,(case when to_number(igst)=0 then  taxrate/2 else 0 end) sgstr" +
                                ",(case when to_number(igst)=0 then 0 else to_number(taxAMT) end) igst,(case when to_number(igst)=0 then  taxAMT/2 else 0 end) cgst,(case when to_number(igst)=0 then  taxAMT/2 else 0 end) sgst,p.hsno from itransaction p " +
                                "where (p.client_id || p.client_unit_id || p.vch_num || to_char(p.vch_date, 'yyyymmdd') || p.type) = '" + URL + "' union all select to_number(en.col2) chrgamt" +
                                ",to_number(en.col4) as igstr,to_number(en.col6) as cgstr,to_number(en.col8) as sgstr,to_number(en.col5) igstamt,to_number(en.col7) cgstamt,to_number(en.col9) sgstamt" +
                                ",en.col11 as hsno from enx_tab en where (en.client_id||en.client_unit_id||en.vch_num||to_char(en.vch_date, 'yyyymmdd')|| en.type) = '" + URL + "') a group by a.hsno";
                            var dthsn = sgen.getdata(userCode, mq1);
                            mq1 = "select ch.master_name chrgname,en.col1,to_number(en.col2) col2,en.col3,en.col4,to_number(en.col5) col5,en.col6,to_number(en.col7) col7,en.col8,to_number(en.col9) col9,en.col10" +
                                ",en.r_no from enx_tab en inner join master_setting ch on en.col1=ch.master_id and ch.type='MR0' and " +
                                "find_in_set(ch.client_unit_id,en.client_unit_id)=1 where (en.client_id||en.client_unit_id||en.vch_num||to_char(en.vch_date, 'yyyymmdd')|| en.type) = '" + URL + "'";
                            var othrr = sgen.getdata(userCode, mq1);
                            mq1 = "select sum(amount) as amount,taxname,(case when trim(taxname)<>'IGST' then rate/2 else rate end) rate from (SELECT * FROM (select to_number(en.col5) as igstamt,to_number(en.col7) as cgstamt,to_number(en.col9) as sgstamt,nvl(to_number(en.col4),0) + nvl(to_number(en.col6),0)+nvl(to_number(en.col8),'0') as rate from enx_tab en inner join master_setting ch on en.col1=ch.master_id and ch.type='MR0' and find_in_set(ch.client_unit_id,en.client_unit_id)=1 where (en.client_id||en.client_unit_id||en.vch_num||to_char(en.vch_date, 'yyyymmdd')|| en.type) = '" + URL + "' union all select (case when to_number(p.igst)<>0 then to_number(taxamt) else 0 end) igst,(case when to_number(p.igst)=0 then to_number(taxamt)/2 else 0 end) cgst,(case when to_number(p.igst) = 0 then to_number(taxamt)/ 2 else 0 end) sgst,nvl(to_number(p.taxrate), 00) as rate from itransaction p where (p.client_id || p.client_unit_id || p.vch_num || to_char(p.vch_date, 'yyyymmdd') || p.type) = '" + URL + "' ) UNPIVOT INCLUDE NULLS(amount FOR taxname IN (cgstamt as 'CGST', igstamt as 'IGST', sgstamt as 'SGST'))) t group by taxname,rate having  sum(amount)>0 order by rate";
                            var invtaxes = sgen.getdata(userCode, mq1);
                            if (dt.Rows.Count > 0)
                            {
                                ViewBag.vnew = "";
                                ViewBag.vedit = "";
                                ViewBag.vsave = "disabled='disabled'";
                                ViewBag.vsavenew = "disabled='disabled'";
                                ViewBag.vimport = "disabled='disabled";
                                DataSet ds = new DataSet();
                                dt.TableName = "prepcur";
                                if (btnval.ToUpper() != "PRINTPKL")
                                {
                                    #region For Duplicates Copies 14072020 Ram
                                    var dtdup = sgen.getdata(userCode, "select param1,param2,param3,param4,param6,param7 " +
                                        "from controls where type='CTL' and id='000016' and trim(param5) = '-' ");
                                    if (dt.Rows.Count > 0)
                                    {
                                        dt.Columns.Add("CTITLE", typeof(string));
                                        dt.Columns.Add("CTITLENO", typeof(string));
                                        var copies = sgen.Make_int(dtdup.Rows[0]["param1"].ToString());
                                        var defRows = dt.Copy();
                                        var dtmain = dt.Clone();
                                        int i = 0;
                                        for (int a = 1; a <= copies; a++)
                                        {
                                            i++;
                                            var colval = a + 1;
                                            if (colval == 5 || colval > 5) colval += 1;

                                            var colname = "";
                                            try
                                            {
                                                colname = dtdup.Rows[0]["param" + colval].ToString();
                                                if (colname.Trim().Length < 2) colname = "Extra Copy";
                                            }
                                            catch (Exception err) { colname = "Extra Copy"; }
                                            foreach (DataRow ro in defRows.Rows)
                                            {
                                                ro["CTITLE"] = colname;
                                                ro["CTITLENO"] = i.ToString();
                                                dtmain.ImportRow(ro);
                                            }
                                        }
                                        dtmain.AcceptChanges();
                                        dt = dtmain;
                                    }
                                    #endregion
                                    ds.Tables.Add(dt);
                                    dthsn.TableName = "prepcur2";
                                    othrr.TableName = "prepcur3";
                                    invtaxes.TableName = "prepcur4";
                                    ds.Tables.Add(dthsn);
                                    ds.Tables.Add(othrr);
                                    ds.Tables.Add(invtaxes);
                                    sgen.open_report_byDs_xml(userCode, ds, model[0].Col30, "Invoice");
                                    //sgen.open_report_byDs_xml(userCode, ds, "gst_inv8", "Invoice");
                                }
                                else
                                {
                                    ds.Tables.Add(dt);
                                    sgen.open_report_byDs_xml(userCode, ds, "inv_pklist", "Packing List");
                                }
                                ViewBag.scripCall += "showRptnew('Report');disableForm();";
                            }
                            else
                            {
                                ViewBag.scripCall = "showmsgJS(1, 'Data Not Exist', 2);";
                            }
                            break;
                        case "EDIT":
                            mq = "select a.*,(case when it.tcs='Y' then nvl(hsn.col1,'0%') else '0%' end) tcs_per," +
                                "(case when a.potype='51' then 'SALES ORDER' when a.potype='52' then 'DISPATCH SCHEDULE' when a.potype='53' then 'DISPATCH CHALLAN' when a.potype='54' then 'WITHOUT SO' else 'WITH PI' end) as against," +
                                "to_char(convert_tz(a.vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') vch_date1," +
                                "to_char(a.ewaydate,'" + sgen.Getsqldateformat() + "') dlv_date1" +
                                ",to_char(a.invdate,'" + sgen.Getsqldateformat() + "') inddate1," +
                                   "to_char(a.date1,'" + sgen.Getsqldateformat() + "') date11," +
                                   "to_char(a.date2,'" + sgen.Getsqldateformat() + "') date12," +
                                   "to_char(a.date3,'" + sgen.Getsqldateformat() + "') date13," +
                                   "to_char(a.date4,'" + sgen.Getsqldateformat() + "') date14," +
                                  "to_char(a.podate,'" + sgen.Getsqldateformat() + "') po_date," +
                                  "to_char(a.sodate,'" + sgen.Getsqldateformat() + "') so_date," +
                                 "to_char(a.sdldate,'" + sgen.Getsqldateformat() + "') sdl_date," +
                                 "to_char(a.dspdate,'" + sgen.Getsqldateformat() + "') dsp_date," +
                                 "to_char(a.chldate,'" + sgen.Getsqldateformat() + "') chldate1," +
                                 "to_char(a.pi_date,'" + sgen.Getsqldateformat() + "') pi_date from itransaction a inner join " +
                                 "item it on it.icode=a.icode and it.type='IT' and it.sale='Y' and " +
                                 "find_in_set(a.client_unit_id,it.client_unit_id)=1  left join master_setting hsn on" +
                                 " hsn.master_id = it.hsno and hsn.type = 'HSN' and find_in_set(hsn.client_unit_id,it.client_unit_id)=1 " +
                                 "where (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date, 'yyyymmdd')|| a.type) = '" + URL + "'";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                values = new List<string>();
                                #region 1.pay_term
                                TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1 = cmd_Fun.payterm(userCode, unitid_mst, out defcall);

                                #endregion
                                #region 2.priceterms
                                TempData[MyGuid + "_Tlist2"] = model[0].TList2 = mod2 = cmd_Fun.priceterm(userCode, unitid_mst);

                                #endregion
                                #region 3.Transportmode
                                TempData[MyGuid + "_Tlist3"] = model[0].TList3 = mod3 = cmd_Fun.transportmode(userCode, unitid_mst);
                                TempData[MyGuid + "_Tlist5"] = model[0].TList5 = mod5 = cmd_Fun.sales_channel(userCode, unitid_mst);

                                #endregion
                                #region 4.Transporter
                                mq = "select vch_num,c_name from clients_mst where type='BCD' and substr(vch_num,0,3)='203' and trans='Y' and client_unit_id='" + unitid_mst + "'";
                                DataTable dttr = new DataTable();
                                dttr = sgen.getdata(userCode, mq);
                                foreach (DataRow dr in dttr.Rows)
                                {
                                    mod4.Add(new SelectListItem { Text = dr["c_name"].ToString(), Value = dr["vch_num"].ToString() });
                                }
                                TempData[MyGuid + "_Tlist4"] = model[0].TList4 = mod4;
                                #endregion
                                sgen.SetSession(MyGuid, "EDMODE", "Y");
                                model[0].Col1 = dt.Rows[0]["client_id"].ToString();
                                model[0].Col2 = dt.Rows[0]["client_unit_id"].ToString();
                                model[0].Col3 = dt.Rows[0]["ent_by"].ToString();
                                model[0].Col4 = dt.Rows[0]["ent_date"].ToString();
                                model[0].Col5 = dt.Rows[0]["edit_by"].ToString();
                                model[0].Col6 = dt.Rows[0]["edit_date"].ToString();
                                String[] L1 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["pay_term"].ToString()).Distinct()).Split(',');
                                String[] L2 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["price_term"].ToString()).Distinct()).Split(',');
                                String[] L3 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["tmode"].ToString()).Distinct()).Split(',');
                                String[] L4 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["trptr_name"].ToString()).Distinct()).Split(',');
                                String[] L5 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["inspected"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems1 = L1;
                                model[0].SelectedItems2 = L2;
                                model[0].SelectedItems3 = L3;
                                model[0].SelectedItems4 = L4;
                                model[0].SelectedItems5 = L5;
                                model[0].Col8 = "client_id||client_unit_id||vch_num|| To_Char(vch_date, 'yyyymmdd')|| type = '" + URL + "'";
                                model[0].Col10 = model[0].Col10;
                                model[0].Col11 = model[0].Col11;
                                model[0].Col13 = "Update";
                                model[0].Col100 = "Update & New";
                                model[0].Col121 = "U";
                                model[0].Col122 = "<u>U</u>pdate";
                                model[0].Col123 = "Update & Ne<u>w</u>";
                                model[0].Col14 = model[0].Col14;
                                model[0].Col15 = model[0].Col15;
                                model[0].Col16 = dt.Rows[0]["vch_num"].ToString();
                                model[0].Col86 = dt.Rows[0]["ewayno"].ToString();
                                model[0].Col87 = dt.Rows[0]["chldate1"].ToString();
                                model[0].Col47 = dt.Rows[0]["vch_num"].ToString();
                                model[0].Col48 = dt.Rows[0]["vch_date1"].ToString();
                                model[0].Col126 = dt.Rows[0]["vch_date1"].ToString();
                                model[0].Col12 = dt.Rows[0]["type"].ToString();
                                model[0].Col64 = dt.Rows[0]["potype"].ToString();
                                model[0].Col88 = dt.Rows[0]["round_amt"].ToString();
                                values.Add(model[0].Col12);
                                values.Add(model[0].Col64);
                                model[0].Chk1 = (dt.Rows[0]["is_other"].ToString() == "Y") ? true : false;
                                if (model[0].Chk1) model[0].Col82 = dt.Rows[0]["other_per"].ToString();
                                mq1 = "select (a.vch_num|| to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.c_name as name,a.c_gstin as gstin,a.addr as Address,a.vch_num,a.tor,nvl(ba.country_name,'-') as country_name," +
"nvl(ba.state_name,'-') state_name,nvl(ba.city_name,'-') as city_name,a.pincode_2 from clients_mst a left join country_state ba on ba.rec_id = a.city2 where find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 and a.type='BCD' and substr(a.vch_num,0,3)='303' and a.vch_num='" + dt.Rows[0]["acode"].ToString() + "'";
                                DataTable dtp = sgen.getdata(userCode, mq1);
                                if (dtp.Rows.Count > 0)
                                {
                                    model[0].Col49 = dtp.Rows[0]["vch_num"].ToString();
                                    values.Add(dtp.Rows[0]["fstr"].ToString());
                                    sgen.SetSession(MyGuid, "Values", values);
                                    model[0].Col20 = dtp.Rows[0]["name"].ToString();
                                    model[0].Col21 = dtp.Rows[0]["address"].ToString();
                                    model[0].Col22 = dtp.Rows[0]["gstin"].ToString();
                                    model[0].Col52 = dtp.Rows[0]["tor"].ToString();
                                    model[0].Col101 = dtp.Rows[0]["city_name"].ToString();
                                    model[0].Col102 = dtp.Rows[0]["state_name"].ToString();
                                    model[0].Col103 = dtp.Rows[0]["country_name"].ToString();
                                    model[0].Col104 = dtp.Rows[0]["pincode_2"].ToString();
                                    mq1 = "select (ct.ref_code||ct.vch_num||ct.type) as cont_perid,a.vch_num as Account_No,  a.c_name CUSTNAME," +
                          "((replace(ct.cpname, '0', '') || ' ' || replace(ct.cp_mname, '0', '') || ' ' || replace(ct.cp_lname, '0', ''))) cp_name,'Account Detail' as Data_Source" +
                          " from clients_mst a INNER join clients_mst ct  on a.vch_num = ct.ref_code and find_in_set(ct.client_unit_id, '" + unitid_mst + "') = 1 and substr(ct.ref_code,0,3)= '303'" +
                          " and a.vch_num='" + model[0].Col49 + "' where find_in_set(a.client_unit_id,'" + unitid_mst + "')= 1 and a.type in ('BCD')  and(a.mftr is null or a.mftr = '0' or a.mftr = 'N') and " +
                          "(a.pubr is null or a.pubr = '0' or a.pubr = 'N') and substr(a.vch_num,0,3)= '303'";
                                    DataTable dtcp = new DataTable();
                                    dtcp = sgen.getdata(userCode, mq1);
                                    if (dtcp.Rows.Count > 0)
                                    {
                                        foreach (DataRow dataRow in dtcp.Rows)
                                        {
                                            mod6.Add(new SelectListItem { Text = dataRow["cp_name"].ToString(), Value = dataRow["cont_perid"].ToString() });
                                        }
                                    }
                                    TempData[MyGuid + "_Tlist6"] = model[0].TList6 = mod6;
                                    String[] L6 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["per_id"].ToString()).Distinct()).Split(',');
                                    model[0].SelectedItems6 = L6;
                                }
                                mq1 = "select a.c_name as name,a.c_gstin as gstin,a.addr as Address,a.vch_num from clients_mst a where find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 and a.type='BCD' and substr(a.vch_num,0,3)='303' and a.vch_num='" + dt.Rows[0]["shipfrom"].ToString() + "'";
                                dtp = sgen.getdata(userCode, mq1);
                                if (dtp.Rows.Count > 0)
                                {
                                    model[0].Col50 = dtp.Rows[0]["vch_num"].ToString();
                                    model[0].Col23 = dtp.Rows[0]["name"].ToString();
                                    model[0].Col24 = dtp.Rows[0]["address"].ToString();
                                    model[0].Col25 = dtp.Rows[0]["gstin"].ToString();
                                }
                                mq1 = "select a.c_name as name,a.c_gstin as gstin,a.addr as Address,a.vch_num from clients_mst a where find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 and a.type='BCD' and substr(a.vch_num,0,3)='303' and a.vch_num='" + dt.Rows[0]["shipto"].ToString() + "'";
                                dtp = sgen.getdata(userCode, mq1);
                                if (dtp.Rows.Count > 0)
                                {
                                    model[0].Col51 = dtp.Rows[0]["vch_num"].ToString();
                                    model[0].Col26 = dtp.Rows[0]["name"].ToString();
                                    model[0].Col27 = dtp.Rows[0]["address"].ToString();
                                    model[0].Col28 = dtp.Rows[0]["gstin"].ToString();
                                }
                                model[0].Col31 = dt.Rows[0]["totremark"].ToString();
                                model[0].Col32 = dt.Rows[0]["cond"].ToString();
                                model[0].Col33 = dt.Rows[0]["basicamt"].ToString();
                                model[0].Col37 = dt.Rows[0]["ginstlchrg"].ToString();
                                model[0].Col38 = dt.Rows[0]["gserchrg"].ToString();
                                model[0].Col39 = dt.Rows[0]["gamc"].ToString();
                                model[0].Col40 = dt.Rows[0]["gloadchrg"].ToString();
                                model[0].Col56 = dt.Rows[0]["date12"].ToString();
                                sgen.SetSession(MyGuid, "inv_t_id", model[0].Col64.Trim());
                                model[0].Col69 = dt.Rows[0]["GFREIGHT"].ToString();
                                model[0].Col70 = dt.Rows[0]["DEPTNAME"].ToString();
                                model[0].Col59 = dt.Rows[0]["gothrchrg"].ToString();
                                model[0].Col60 = dt.Rows[0]["date11"].ToString();
                                model[0].Col83 = dt.Rows[0]["col1"].ToString() == "" ? "0" : dt.Rows[0]["col1"].ToString();   //Less Amortization
                                model[0].Col84 = dt.Rows[0]["col2"].ToString() == "" ? "0" : dt.Rows[0]["col2"].ToString();   //Net Total Amount
                                model[0].Col85 = dt.Rows[0]["col3"].ToString() == "" ? "0" : dt.Rows[0]["col3"].ToString();   //Mat. Cons. Amount
                                model[0].Col34 = dt.Rows[0]["igst"].ToString() == "" ? "0" : dt.Rows[0]["igst"].ToString(); //taxes
                                model[0].Col35 = dt.Rows[0]["cgst"].ToString() == "" ? "0" : dt.Rows[0]["cgst"].ToString(); //taxes
                                model[0].Col36 = dt.Rows[0]["sgst"].ToString() == "" ? "0" : dt.Rows[0]["sgst"].ToString(); //taxes
                                switch (sgen.GetSession(MyGuid, "inv_t_id").ToString())
                                {
                                    case "52":
                                        model[0].Col29 = dt.Rows[0]["insurance"].ToString();
                                        model[0].Col63 = dt.Rows[0]["date13"].ToString();
                                        model[0].Col65 = dt.Rows[0]["RGPTYPE"].ToString();
                                        model[0].Col66 = dt.Rows[0]["date14"].ToString();
                                        sgen.SetSession(MyGuid, "Sdl_num", model[0].Col65.ToString());
                                        values.Add(clientid_mst + unitid_mst + model[0].Col65 + DateTime.ParseExact(model[0].Col81, "dd/MM/yyyy", CultureInfo.InvariantCulture).ToString("yyyyMMdd") + model[0].Col12);
                                        break;
                                    case "55":
                                        model[0].Col80 = dt.Rows[0]["insurance"].ToString();
                                        model[0].Col81 = dt.Rows[0]["date13"].ToString();
                                        values.Add(clientid_mst + unitid_mst + model[0].Col80 + DateTime.ParseExact(model[0].Col81, "dd/MM/yyyy", CultureInfo.InvariantCulture).ToString("yyyyMMdd") + model[0].Col12);
                                        break;
                                    case "51":
                                        model[0].Col29 = dt.Rows[0]["insurance"].ToString();
                                        model[0].Col63 = dt.Rows[0]["date13"].ToString();
                                        sgen.SetSession(MyGuid, "So_num", model[0].Col29.ToString());
                                        values.Add(clientid_mst + unitid_mst + model[0].Col29 + DateTime.ParseExact(model[0].Col81, "dd/MM/yyyy", CultureInfo.InvariantCulture).ToString("yyyyMMdd") + model[0].Col12);
                                        break;
                                    case "53":
                                        model[0].Col29 = dt.Rows[0]["insurance"].ToString();
                                        model[0].Col63 = dt.Rows[0]["date13"].ToString();
                                        model[0].Col65 = dt.Rows[0]["RGPTYPE"].ToString();
                                        model[0].Col66 = dt.Rows[0]["date14"].ToString();
                                        model[0].Col68 = dt.Rows[0]["inddate1"].ToString();
                                        model[0].Col67 = dt.Rows[0]["chlno"].ToString();
                                        model[0].Col71 = dt.Rows[0]["req_by"].ToString();
                                        sgen.SetSession(MyGuid, "dsp_numbr", model[0].Col67.ToString());
                                        values.Add(clientid_mst + unitid_mst + model[0].Col67 + DateTime.ParseExact(model[0].Col81, "dd/MM/yyyy", CultureInfo.InvariantCulture).ToString("yyyyMMdd") + model[0].Col12);
                                        break;
                                }
                                sgen.SetSession(MyGuid, "Values", values);
                                sgen.SetSession(MyGuid, "ORD_TYPE", model[0].Col12.ToString());
                                model[0].Col9 = dt.Rows[0]["against"].ToString();
                                model[0].Col84 = dt.Rows[0]["netamt"].ToString();
                                DataTable dt2 = new DataTable();
                                switch (sgen.GetSession(MyGuid, "inv_t_id").ToString())
                                {
                                    case "52":
                                        if (model[0].Col12 == "45")
                                        {
                                            dt2 = sgen.getdata(userCode, "select '' Item,'1' as  SNo ,'-' as Icode,'-' as IName,'-' PARTNO,'-'  HSN,'-' as UOM,'0' as TaxRate,'0' as  Qty_in_stock,'0' as Bal_Qty_Ord,'0' as Qty_inv,'0' as IRate,'-' disc_type,'0' as disc_rate,'0' IAmount,'0' TaxAmount,'0' discAmount,'0' LineAmount,'-' as PO_no,'-' PO_date,'-' as SO_no,'-' SO_date,'-' sdl_no,'-' sdl_date,'0' as Amort_Chrgs_Perunit,'' Amort_Chrgs_Amount,'0' Mat_Cons_Per,'0' Mat_Cons_Amt,'-' as Remark from dual");
                                            model[0].dt1 = dt2;
                                            sgen.SetSession(MyGuid, "BINV_DT", dt2.Copy());
                                        }
                                        else
                                        {
                                            dt2 = sgen.getdata(userCode, "select '' Item,'1' as  SNo ,'-' as Icode,'-' as IName,'-' PARTNO,'-'  HSN,'-' as UOM,'0' as TaxRate,'0' as  Qty_in_stock,'0' as Bal_Qty_Ord,'0' as Qty_inv,'0' as IRate," +
                                            "'-' disc_type,'0' as disc_rate,'0' IAmount,'0' TaxAmount,'0' discAmount,'0' LineAmount,'-' as PO_no,'-' PO_date,'-' as SO_no,'-' SO_date,'-' sdl_no,'-' sdl_date,'-' as Remark from dual");
                                            model[0].dt1 = dt2;
                                            sgen.SetSession(MyGuid, "BINV_DT", dt2.Copy());
                                        }
                                        break;
                                    case "51":
                                        if (model[0].Col12 == "45")
                                        {
                                            dt2 = sgen.getdata(userCode, "select '' Item,'1' as  SNo ,'-' as Icode,'-' as IName,'-' PARTNO,'-'  HSN,'-' as UOM,'0' as TaxRate,'0' as  Qty_in_stock,'0' as Bal_Qty_Ord,'0' as Qty_inv,'0' as IRate," +
                                       "'-' disc_type,'0' as disc_rate,'0' IAmount,'0' TaxAmount,'0' discAmount,'0' LineAmount,'-' as delivery_date,'-' as PO_no,'-' PO_date,'-' as SO_no,'-' SO_date,'-' as Remark,'0' as Amort_Chrgs_Perunit,'' Amort_Chrgs_Amount,'0' Mat_Cons_Per,'0' Mat_Cons_Amt from dual");
                                            model[0].dt1 = dt2;
                                            sgen.SetSession(MyGuid, "BINV_DT", dt2.Copy());
                                        }
                                        else
                                        {
                                            dt2 = sgen.getdata(userCode, "select '' Item,'1' as  SNo ,'-' as Icode,'-' as IName,'-' PARTNO,'-'  HSN,'-' as UOM,'0' as TaxRate,'0' as  Qty_in_stock,'0' as Bal_Qty_Ord,'0' as Qty_inv,'0' as IRate," +
                                               "'-' disc_type,'0' as disc_rate,'0' IAmount,'0' TaxAmount,'0' discAmount,'0' LineAmount,'-' as delivery_date,'-' as PO_no,'-' PO_date,'-' as SO_no,'-' SO_date,'-' as Remark from dual");
                                            model[0].dt1 = dt2;
                                            sgen.SetSession(MyGuid, "BINV_DT", dt2.Copy());
                                        }
                                        break;
                                    case "53":
                                        dt2 = sgen.getdata(userCode, "select '' Item,'1' as  SNo ,'-' as Icode,'-' as IName,'-' PARTNO,'-'  HSN,'-' as UOM,'0' as TaxRate,'0' as  Qty_in_stock,'0' as Qty_disp,'0' as IRate," +
                                         "'-' disc_type,'0' as disc_rate,'0' IAmount,'0' TaxAmount,'0' discAmount,'0' LineAmount,'-' as PO_no,'-' PO_date,'-' as SO_no,'-' SO_date,'-' sdl_no,'-' sdl_date,'-' as dsp_no,'-' dsp_date,'-' as Remark from dual");
                                        model[0].dt1 = dt2;
                                        sgen.SetSession(MyGuid, "BINV_DT", dt2.Copy());
                                        break;
                                    case "54":
                                        DataTable gdt = new DataTable();
                                        if (model[0].Col12 == "45")
                                        {
                                            gdt = sgen.getdata(userCode, "select '' Item,'1' as  SNo ,'-' as Icode,'-' as IName,'-' PARTNO,'-'  HSN,'-' as UOM,'0' as TaxRate,'0' as  Qty_in_stock,'0' as Qty_inv,'0' as IRate," +
                                                "'-' disc_type,'0' as disc_rate,'0' IAmount,'0' TaxAmount,'0' discAmount,'0' LineAmount,'-' as delivery_date,'-' as Remark,'0' as Amort_Chrgs_Perunit,'0' Amort_Chrgs_Amount,'0' Mat_Cons_Per,'0' Mat_Cons_Amt from dual");
                                        }
                                        else if (model[0].Col12 == "46")
                                        {
                                            mq = "select '' Item,'1' as  SNo ,'-' as Icode,'-' as IName,'-' PARTNO,'-'  HSN,'-' as UOM,'0' as TaxRate,'0' as  Qty_in_stock,'0' as Qty_inv,'0' as IRate," +
                                           "'-' disc_type,'0' as disc_rate,'0' IAmount,'0' TaxAmount,'0' discAmount,'0' LineAmount,'-' as delivery_date,'-' as Remark,'0' Tcs_amt,'0%' Tcs_per from dual";
                                            gdt = sgen.getdata(userCode, mq);
                                        }
                                        else
                                        {
                                            gdt = sgen.getdata(userCode, "select '' Item,'1' as  SNo ,'-' as Icode,'-' as IName,'-' PARTNO,'-'  HSN,'-' as UOM,'0' as TaxRate,'0' as  Qty_in_stock,'0' as Qty_inv,'0' as IRate," +
                                              "'-' disc_type,'0' as disc_rate,'0' IAmount,'0' TaxAmount,'0' discAmount,'0' LineAmount,'-' as delivery_date,'-' as Remark from dual");
                                        }
                                        model[0].dt1 = gdt;
                                        sgen.SetSession(MyGuid, "BINV_DT", gdt.Copy());
                                        break;
                                    case "55":
                                        DataTable ivpi = sgen.getdata(userCode, "select '' Item,'1' as  SNo ,'-' as Icode,'-' as IName,'-' PARTNO,'-'  HSN,'-' as UOM,'0' as TaxRate,'0' as  Qty_in_stock,'0' as Bal_Qty_Ord,'0' as Qty_inv,'0' as IRate," +
                                           "'-' disc_type,'0' as disc_rate,'0' IAmount,'0' TaxAmount,'0' discAmount,'0' LineAmount,'-' as PI_NO,'-' PI_DATE,'-' as Remark from dual");
                                        model[0].dt1 = ivpi;
                                        sgen.SetSession(MyGuid, "BINV_DT", ivpi.Copy());
                                        break;
                                }
                                model[0].dt1 = model[0].dt1.Clone();
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["SNo"] = i + 1;
                                    dr["Icode"] = dt.Rows[i]["icode"].ToString();
                                    dr["IName"] = dt.Rows[i]["iname"].ToString();
                                    dr["PARTNO"] = dt.Rows[i]["cpartno"].ToString();
                                    dr["HSN"] = dt.Rows[i]["hsno"].ToString();
                                    dr["UOM"] = dt.Rows[i]["uom"].ToString();
                                    dr["TaxRate"] = dt.Rows[i]["taxrate"].ToString();
                                    dr["Qty_in_stock"] = dt.Rows[i]["qtystk"].ToString();
                                    switch (sgen.GetSession(MyGuid, "inv_t_id").ToString())
                                    {
                                        case "52":
                                            dr["Qty_inv"] = dt.Rows[i]["qtyout"].ToString();
                                            dr["Bal_Qty_Ord"] = dt.Rows[i]["ordqty"].ToString();
                                            dr["PO_no"] = dt.Rows[i]["pono"].ToString();
                                            dr["PO_date"] = dt.Rows[i]["po_date"].ToString();
                                            dr["SO_date"] = dt.Rows[i]["so_date"].ToString();
                                            dr["SO_no"] = dt.Rows[i]["sono"].ToString();
                                            dr["sdl_date"] = dt.Rows[i]["sdl_date"].ToString();
                                            dr["sdl_no"] = dt.Rows[i]["sdlno"].ToString();
                                            if (model[0].Col12 == "45")
                                            {
                                                dr["MAT_CONS_AMT"] = dt.Rows[i]["mat_cosamt"].ToString();
                                                dr["MAT_CONS_PER"] = dt.Rows[i]["mat_cosunit"].ToString();
                                                dr["AMORT_CHRGS_AMOUNT"] = dt.Rows[i]["amrtchrgamt"].ToString();
                                                dr["AMORT_CHRGS_PERUNIT"] = dt.Rows[i]["amrtchrgunit"].ToString();
                                            }
                                            break;
                                        case "51":
                                            dr["Qty_inv"] = dt.Rows[i]["qtyout"].ToString();
                                            dr["Bal_Qty_Ord"] = dt.Rows[i]["ordqty"].ToString();
                                            dr["PO_no"] = dt.Rows[i]["pono"].ToString();
                                            dr["PO_date"] = dt.Rows[i]["po_date"].ToString();
                                            dr["SO_date"] = dt.Rows[i]["so_date"].ToString();
                                            dr["SO_no"] = dt.Rows[i]["sono"].ToString();
                                            dr["delivery_date"] = dt.Rows[i]["dlv_date1"].ToString();
                                            if (model[0].Col12 == "45")
                                            {
                                                dr["MAT_CONS_AMT"] = dt.Rows[i]["mat_cosamt"].ToString();
                                                dr["MAT_CONS_PER"] = dt.Rows[i]["mat_cosunit"].ToString();
                                                dr["AMORT_CHRGS_AMOUNT"] = dt.Rows[i]["amrtchrgamt"].ToString();
                                                dr["AMORT_CHRGS_PERUNIT"] = dt.Rows[i]["amrtchrgunit"].ToString();
                                            }
                                            break;
                                        case "55":
                                            dr["Qty_inv"] = dt.Rows[i]["qtyout"].ToString();
                                            dr["Bal_Qty_Ord"] = dt.Rows[i]["ordqty"].ToString();
                                            dr["PI_NO"] = dt.Rows[i]["pi_no"].ToString();
                                            dr["PI_DATE"] = dt.Rows[i]["pi_date"].ToString();
                                            break;
                                        case "53":
                                            dr["Qty_disp"] = dt.Rows[i]["qtyout"].ToString();
                                            dr["PO_no"] = dt.Rows[i]["pono"].ToString();
                                            dr["PO_date"] = dt.Rows[i]["po_date"].ToString();
                                            dr["SO_date"] = dt.Rows[i]["so_date"].ToString();
                                            dr["SO_no"] = dt.Rows[i]["sono"].ToString();
                                            dr["sdl_date"] = dt.Rows[i]["sdl_date"].ToString();
                                            dr["sdl_no"] = dt.Rows[i]["sdlno"].ToString();
                                            dr["dsp_date"] = dt.Rows[i]["dsp_date"].ToString();
                                            dr["dsp_no"] = dt.Rows[i]["dspno"].ToString();
                                            break;
                                        case "54":
                                            dr["Qty_inv"] = dt.Rows[i]["qtyout"].ToString();
                                            dr["delivery_date"] = dt.Rows[i]["dlv_date1"].ToString();
                                            if (model[0].Col12 == "45")
                                            {
                                                dr["MAT_CONS_AMT"] = dt.Rows[i]["mat_cosamt"].ToString();
                                                dr["MAT_CONS_PER"] = dt.Rows[i]["mat_cosunit"].ToString();
                                                dr["AMORT_CHRGS_AMOUNT"] = dt.Rows[i]["amrtchrgamt"].ToString();
                                                dr["AMORT_CHRGS_PERUNIT"] = dt.Rows[i]["amrtchrgunit"].ToString();
                                            }
                                            else if (model[0].Col12 == "46")
                                            {
                                                dr["TCS_PER"] = dt.Rows[i]["tcs_per"].ToString();
                                            }
                                            break;
                                    }
                                    dr["IRate"] = dt.Rows[i]["irate"].ToString();
                                    dr["disc_type"] = dt.Rows[i]["disctype"].ToString();
                                    dr["disc_rate"] = dt.Rows[i]["discrate"].ToString();
                                    dr["Iamount"] = dt.Rows[i]["Iamount"].ToString();
                                    dr["taxamount"] = dt.Rows[i]["taxamt"].ToString();
                                    dr["discamount"] = dt.Rows[i]["discamt"].ToString();
                                    dr["lineamount"] = dt.Rows[i]["lineamount"].ToString();
                                    dr["Remark"] = dt.Rows[i]["iremark"].ToString();
                                    model[0].dt1.Rows.Add(dr);
                                }
                                model[0].dt1.AcceptChanges();
                                if (sgen.GetSession(MyGuid, "inv_t_id").ToString() != "53")
                                {
                                    DataTable dtloc = sgen.getdata(userCode, "select '-' as SNo ,'-' as Icode,'-' as IName,'-' PartNo,'-' as UOM,'0' as Qty_in_stock,'0' as Qty_Out,'-' as Remark,'0' LocCode,'-' Loc from dual");
                                    model[0].dt2 = dtloc.Copy();
                                    sgen.SetSession(MyGuid, "BINV_DT2", (model[0].dt2).Copy());
                                }
                                //other charges LTM
                                mq1 = "select ch.master_name chrgname,en.col1,en.col2,en.col3,en.col4,en.col5,en.col6,en.col7,en.col8,en.col9,en.col10,en.col11,en.col12,en.r_no from enx_tab en " +
                                    "inner join master_setting ch on en.col1=ch.master_id and ch.type='MR0' and find_in_set(ch.client_unit_id,en.client_unit_id)=1 " +
                                    "where (en.client_id||en.client_unit_id||en.vch_num||to_char(en.vch_date, 'yyyymmdd')|| en.type) = '" + URL + "'";
                                dt = sgen.getdata(userCode, mq1);
                                if (dt.Rows.Count > 0)
                                {
                                    model[0].LTM1 = new List<Tmodelmain>();
                                    foreach (DataRow dr in dt.Rows)
                                    {
                                        model[0].LTM1.Add(new Tmodelmain
                                        {
                                            Col13 = dr["col3"].ToString(),//chrgrtid
                                            Col14 = dr["r_no"].ToString(),//rno
                                            Col15 = dr["col1"].ToString(),//chrgid
                                            Col16 = dr["col2"].ToString(),//chrgamt
                                            Col17 = dr["col4"].ToString(),//igstrt
                                            Col18 = dr["col5"].ToString(),//igstamt
                                            Col19 = dr["col6"].ToString(),//cgstrt
                                            Col20 = dr["col7"].ToString(),//cgstamt
                                            Col21 = dr["col8"].ToString(),//sgstrt
                                            Col22 = dr["col9"].ToString(),//sgstamt
                                            Col23 = dr["chrgname"].ToString(),//chrgname
                                            Col27 = dr["col10"].ToString(),//hsnid
                                            Col28 = dr["col11"].ToString(),//hsnid
                                            Col25 = dr["col12"].ToString(),//per
                                        });
                                    }
                                }
                                string mq2 = "select (i.client_unit_id||i.icode||i.loc) fstr,i.icode,it.iname,it.cpartno,um.master_name uom,i.qtystk,i.qtyout,i.iremark," +
     "i.loc,location_name(i.client_id||i.client_unit_id||i.loc) locname from btchtrans i " +
     "inner join item it on it.icode=i.icode and it.type='IT' and find_in_set(it.client_unit_id,i.client_unit_id)=1 " +
     "left join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
 "where (i.client_id||i.client_unit_id||i.vch_num|| to_char(i.vch_date, 'yyyymmdd')||i.type)='" + URL + "'";

                                dt = sgen.getdata(userCode, mq2);
                                if (dt.Rows.Count > 0)
                                {
                                    model[0].dt2 = model[0].dt2.Clone();
                                    for (int i = 0; i < dt.Rows.Count; i++)
                                    {
                                        DataRow dr = model[0].dt2.NewRow();
                                        dr["sno"] = dt.Rows[i]["fstr"].ToString();
                                        dr["IName"] = dt.Rows[i]["iname"].ToString();
                                        dr["Icode"] = dt.Rows[i]["icode"].ToString();
                                        dr["UOM"] = dt.Rows[i]["uom"].ToString();
                                        dr["partno"] = dt.Rows[i]["cpartno"].ToString();
                                        dr["Qty_in_stock"] = dt.Rows[i]["qtystk"].ToString();
                                        dr["Qty_Out"] = dt.Rows[i]["qtyout"].ToString();
                                        dr["Remark"] = dt.Rows[i]["iremark"].ToString();
                                        dr["Loc"] = dt.Rows[i]["locname"].ToString();
                                        dr["LocCode"] = dt.Rows[i]["loc"].ToString();
                                        model[0].dt2.Rows.Add(dr);
                                    }
                                }
                            }
                            model[0].Col100 = "Update & New";
                            break;
                        case "PARTY":
                            if (model[0].Col49 == null || model[0].Col49 == "")
                            {
                                values = (List<string>)sgen.GetSession(MyGuid, "Values");
                                values.Add(URL);
                                sgen.SetSession(MyGuid, "Values", values);
                                #region ordtype
                                mq = "select master_id,upper(master_name) master_name,to_char(utc_timestamp(),'" + sgen.Getsqldateformat() + "') po_date " +
                                     "from master_Setting where master_id = '" + values[0].ToString() + "' ";
                                dt = sgen.getdata(userCode, mq);
                                if (dt.Rows.Count > 0)
                                {
                                    sgen.SetSession(MyGuid, "EDMODE", "N");
                                    model[0].Col12 = dt.Rows[0]["master_id"].ToString();
                                    sgen.SetSession(MyGuid, "ORD_TYPE", model[0].Col12.Trim());
                                }
                                #endregion
                                #region new
                                //    mq = "select * from (select '51' as master_id ,'SALES ORDER' as master_name," +
                                //"to_char(utc_timestamp(),'" + sgen.Getsqldateformat() + "') po_date from dual union all select '52' as master_id " +
                                //",'DISPATCH SCHEDULE' as master_name,to_char(utc_timestamp(),  '" + sgen.Getsqldateformat() + "') po_date" +
                                //" from dual union all select '54' as master_id ,'DIRECT INVOICE' as master_name,to_char(utc_timestamp(), '" + sgen.Getsqldateformat() + "') po_date from dual" +
                                //" union all select '53' as master_id ,'DISPATCH CHALLAN' as master_name,to_char(utc_timestamp(), '" + sgen.Getsqldateformat() + "') po_date from dual union all select '55' as master_id ,'WITH PERFORMA INVOICE' as master_name," +
                                //"to_char(utc_timestamp(), '" + sgen.Getsqldateformat() + "') po_date from dual) a where a.master_id = '" + values[1].ToString() + "'";

                                mq = "select master_id,master_name,to_char(convert_tz(utc_timestamp(),'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') po_date " +
                            "from master_setting where (master_id||to_char(vch_date,'yyyymmdd')||type) = '" + values[1].ToString() + "'";
                                dtt = sgen.getdata(userCode, mq);
                                if (dtt.Rows.Count > 0)
                                {
                                    sgen.SetSession(MyGuid, "EDMODE", "N");
                                    ViewBag.vnew = "disabled='disabled'";
                                    ViewBag.vedit = "disabled='disabled'";
                                    ViewBag.vsave = "";
                                    ViewBag.vsavenew = "";
                                    ViewBag.scripCall = "enableForm();";
                                    #region 1.pay_term
                                    TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1 = cmd_Fun.payterm(userCode, unitid_mst, out defcall);
                                    //TempData[MyGuid + "_Tlist1"] = mod1;
                                    #endregion
                                    #region 2.priceterms
                                    TempData[MyGuid + "_Tlist2"] = model[0].TList2 = mod2 = cmd_Fun.priceterm(userCode, unitid_mst);
                                    //TempData[MyGuid + "_Tlist2"] = mod2;
                                    #endregion
                                    #region 4.Transporter
                                    mq = "select vch_num,c_name from clients_mst where type='BCD' and substr(vch_num,0,3)='203' and trans='Y' and find_in_set(client_unit_id,'" + unitid_mst + "')=1";
                                    dt = sgen.getdata(userCode, mq);
                                    foreach (DataRow dr in dt.Rows)
                                    {
                                        mod4.Add(new SelectListItem { Text = dr["c_name"].ToString(), Value = dr["vch_num"].ToString() });
                                    }
                                    TempData[MyGuid + "_Tlist4"] = model[0].TList4 = mod4;
                                    #endregion
                                    #region 3.Transportmode
                                    TempData[MyGuid + "_Tlist3"] = model[0].TList3 = mod3 = cmd_Fun.transportmode(userCode, unitid_mst);
                                    #endregion
                                    TempData[MyGuid + "_Tlist5"] = model[0].TList5 = mod5 = cmd_Fun.sales_channel(userCode, unitid_mst);
                                    TempData[MyGuid + "_Tlist6"] = model[0].TList6 = mod6;
                                    model[0].SelectedItems1 = new string[] { "" };
                                    model[0].SelectedItems2 = new string[] { "" };
                                    model[0].SelectedItems3 = new string[] { "" };
                                    model[0].SelectedItems4 = new string[] { "" };
                                    model[0].SelectedItems5 = new string[] { "" };
                                    model[0].Col48 = dtt.Rows[0]["po_date"].ToString();
                                    model[0].Col64 = dtt.Rows[0]["master_id"].ToString();
                                    model[0].Col9 = dtt.Rows[0]["master_name"].ToString();
                                    string sameserial = sgen.seekval(userCode, "select param1 from controls where type='CTL' and m_module3='-' and id='000018'", "param1");
                                    if (sameserial.Trim().Equals("Y"))
                                    {
                                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where substr(trim(type),1,1)='4'" + model[0].Col11.Trim() + "";
                                    }
                                    else
                                    {
                                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                                    }

                                    //mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + " ";
                                    vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                                    sgen.SetSession(MyGuid, "inv_t_id", dtt.Rows[0]["master_id"].ToString());
                                    model[0].Col47 = vch_num;
                                    model[0].Col16 = vch_num;
                                    model[0].Col31 = "-";
                                    model[0].Col32 = "-";
                                    model[0].Col17 = "1";
                                    model[0].Col100 = "Save & New";
                                    model[0].Col121 = "S";
                                    model[0].Col122 = "<u>S</u>ave";
                                    model[0].Col123 = "Save & Ne<u>w</u>";
                                    if (values[1].ToString() == "51")
                                    {
                                        if (values[0].ToString() == "45")
                                        {
                                            DataTable gdt = sgen.getdata(userCode, "select '' Item,'1' as  SNo ,'-' as Icode,'-' as IName,'-' PARTNO,'-'  HSN,'-' as UOM,'0' as TaxRate,'0' as  Qty_in_stock,'0' as Bal_Qty_Ord,'0' as Qty_inv,'0' as IRate," +
                                       "'-' disc_type,'0' as disc_rate,'0' IAmount,'0' TaxAmount,'0' discAmount,'0' LineAmount,'-' as delivery_date,'-' as PO_no,'-' PO_date,'-' as SO_no,'-' SO_date,'-' as Remark,'0' as Amort_Chrgs_Perunit,'' Amort_Chrgs_Amount,'0' Mat_Cons_Per,'0' Mat_Cons_Amt from dual");
                                            model[0].dt1 = gdt;
                                            sgen.SetSession(MyGuid, "BINV_DT", gdt.Copy());
                                        }
                                        else
                                        {
                                            DataTable gdt = sgen.getdata(userCode, "select '' Item,'1' as  SNo ,'-' as Icode,'-' as IName,'-' PARTNO,'-'  HSN,'-' as UOM,'0' as TaxRate,'0' as  Qty_in_stock,'0' as Bal_Qty_Ord,'0' as Qty_inv,'0' as IRate," +
                                               "'-' disc_type,'0' as disc_rate,'0' IAmount,'0' TaxAmount,'0' discAmount,'0' LineAmount,'-' as delivery_date,'-' as PO_no,'-' PO_date,'-' as SO_no,'-' SO_date,'-' as Remark from dual");
                                            model[0].dt1 = gdt;
                                            sgen.SetSession(MyGuid, "BINV_DT", gdt.Copy());
                                        }
                                    }
                                    if (values[1].ToString() == "54")
                                    {
                                        if (values[0].ToString() == "45")
                                        {
                                            mq = "select '' Item,'1' as  SNo ,'-' as Icode,'-' as IName,'-' PARTNO,'-'  HSN,'-' as UOM,'0' as TaxRate,'0' as Qty_in_stock," +
                                                "'0' Qty_inv,'0' IRate,'-' disc_type,'0' disc_rate,'0' IAmount,'0' TaxAmount,'0' discAmount,'0' LineAmount,'-' delivery_date," +
                                                "'-' as Remark,'0' as Amort_Chrgs_Perunit,'0' Amort_Chrgs_Amount,'0' Mat_Cons_Per,'0' Mat_Cons_Amt from dual";
                                        }
                                        else if (values[0].ToString() == "46")
                                        {
                                            mq = "select '' Item,'1' as  SNo ,'-' as Icode,'-' as IName,'-' PARTNO,'-'  HSN,'-' as UOM,'0' as TaxRate,'0' as  Qty_in_stock,'0' as Qty_inv,'0' as IRate," +
                                            "'-' disc_type,'0' as disc_rate,'0' IAmount,'0' TaxAmount,'0' discAmount,'0' LineAmount,'-' as delivery_date,'-' as Remark,'0' Tcs_amt,'0%' Tcs_per from dual";
                                        }
                                        else
                                        {
                                            mq = "select '' Item,'1' as  SNo ,'-' as Icode,'-' as IName,'-' PARTNO,'-'  HSN,'-' as UOM,'0' as TaxRate,'0' as  Qty_in_stock,'0' as Qty_inv,'0' as IRate," +
                                             "'-' disc_type,'0' as disc_rate,'0' IAmount,'0' TaxAmount,'0' discAmount,'0' LineAmount,'-' as delivery_date,'-' as Remark from dual";
                                        }
                                        DataTable gdt = sgen.getdata(userCode, mq);
                                        model[0].dt1 = gdt;
                                        sgen.SetSession(MyGuid, "BINV_DT", gdt.Copy());
                                    }
                                    if (values[1].ToString() == "52")
                                    {
                                        if (values[0].ToString() == "45")
                                        {
                                            DataTable gdt = sgen.getdata(userCode, "select '' Item,'1' as  SNo ,'-' as Icode,'-' as IName,'-' PARTNO,'-'  HSN,'-' as UOM,'0' as TaxRate,'0' as  Qty_in_stock,'0' as Bal_Qty_Ord,'0' as Qty_inv,'0' as IRate," +
                                            "'-' disc_type,'0' as disc_rate,'0' IAmount,'0' TaxAmount,'0' discAmount,'0' LineAmount,'-' as PO_no,'-' PO_date,'-' as SO_no,'-' SO_date,'-' sdl_no,'-' sdl_date,'0' as Amort_Chrgs_Perunit,'' Amort_Chrgs_Amount,'0' Mat_Cons_Per,'0' Mat_Cons_Amt,'-' as Remark from dual");
                                            model[0].dt1 = gdt;
                                            sgen.SetSession(MyGuid, "BINV_DT", gdt.Copy());
                                        }
                                        else
                                        {
                                            DataTable gdt = sgen.getdata(userCode, "select '' Item,'1' as  SNo ,'-' as Icode,'-' as IName,'-' PARTNO,'-'  HSN,'-' as UOM,'0' as TaxRate,'0' as  Qty_in_stock,'0' as Bal_Qty_Ord,'0' as Qty_inv,'0' as IRate," +
                                                                "'-' disc_type,'0' as disc_rate,'0' IAmount,'0' TaxAmount,'0' discAmount,'0' LineAmount,'-' as PO_no,'-' PO_date,'-' as SO_no,'-' SO_date,'-' sdl_no,'-' sdl_date,'-' as Remark from dual");
                                            model[0].dt1 = gdt;
                                            sgen.SetSession(MyGuid, "BINV_DT", gdt.Copy());
                                        }
                                    }
                                    if (values[1].ToString() == "53")
                                    {
                                        DataTable gdt = sgen.getdata(userCode, "select '' Item,'1' as  SNo ,'-' as Icode,'-' as IName,'-' PARTNO,'-'  HSN,'-' as UOM,'0' as TaxRate,'0' as  Qty_in_stock,'0' as Qty_disp,'0' as IRate," +
                                            "'-' disc_type,'0' as disc_rate,'0' IAmount,'0' TaxAmount,'0' discAmount,'0' LineAmount,'-' as PO_no,'-' PO_date,'-' as SO_no,'-' SO_date,'-' sdl_no,'-' sdl_date,'-' as dsp_no,'-' dsp_date,'-' as Remark from dual");
                                        model[0].dt1 = gdt;
                                        sgen.SetSession(MyGuid, "BINV_DT", gdt.Copy());
                                    }
                                    if (values[1].ToString() == "55")
                                    {
                                        DataTable gdt = sgen.getdata(userCode, "select '' Item,'1' as  SNo ,'-' as Icode,'-' as IName,'-' PARTNO,'-'  HSN,'-' as UOM,'0' as TaxRate,'0' as  Qty_in_stock,'0' as Bal_Qty_Ord,'0' as Qty_inv,'0' as IRate," +
                                           "'-' disc_type,'0' as disc_rate,'0' IAmount,'0' TaxAmount,'0' discAmount,'0' LineAmount,'-' as PI_NO,'-' PI_DATE,'-' as Remark from dual");
                                        model[0].dt1 = gdt;
                                        sgen.SetSession(MyGuid, "BINV_DT", gdt.Copy());
                                    }
                                    if (values[1].ToString() != "53")
                                    {
                                        dt = sgen.getdata(userCode, "select '-' as SNo ,'-' as Icode,'-' as IName,'-' PartNo,'-' as UOM,'0' as Qty_in_stock,'0' as Qty_Out,'-' as Remark,'0' LocCode,'-' Loc from dual");
                                        model[0].dt2 = dt.Copy();
                                        sgen.SetSession(MyGuid, "BINV_DT2", (model[0].dt2).Copy());
                                    }
                                }
                                #endregion
                                #region Party                            
                                mq = "select a.c_name as name,a.c_gstin as gstin,a.addr as address,a.vch_num,a.tor,nvl(ba.country_name,'-') as country_name," +
    "nvl(ba.state_name,'-') state_name,nvl(ba.city_name,'-') as city_name,a.pincode_2,a.pay_term from clients_mst a left join country_state ba on ba.rec_id = a.city2 " +
                                  "where a.vch_num||To_Char(a.vch_date, 'yyyymmdd')|| a.type = '" + values[2].ToString() + "'";
                                dt = sgen.getdata(userCode, mq);
                                if (dt.Rows.Count > 0)
                                {
                                    model[0].Col49 = dt.Rows[0]["vch_num"].ToString();
                                    model[0].Col20 = dt.Rows[0]["name"].ToString();
                                    model[0].Col21 = dt.Rows[0]["address"].ToString();
                                    model[0].Col22 = dt.Rows[0]["gstin"].ToString();
                                    model[0].Col52 = dt.Rows[0]["tor"].ToString();
                                    model[0].Col101 = dt.Rows[0]["city_name"].ToString();
                                    model[0].Col102 = dt.Rows[0]["state_name"].ToString();
                                    model[0].Col103 = dt.Rows[0]["country_name"].ToString();
                                    model[0].Col104 = dt.Rows[0]["pincode_2"].ToString();
                                    #region 1.pay_term
                                    TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1 = cmd_Fun.payterm(userCode, unitid_mst, out defcall);
                                    #endregion
                                    String[] L1 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["pay_term"].ToString()).Distinct()).Split(',');
                                    model[0].SelectedItems1 = L1;
                                    mq1 = "select (ct.ref_code||ct.vch_num||ct.type) as cont_perid,a.vch_num as Account_No,  a.c_name CUSTNAME," +
                                  "((replace(ct.cpname, '0', '') || ' ' || replace(ct.cp_mname, '0', '') || ' ' || replace(ct.cp_lname, '0', ''))) cp_name,'Account Detail' as Data_Source" +
                                  " from clients_mst a INNER join clients_mst ct  on a.vch_num = ct.ref_code and find_in_set(ct.client_unit_id, '" + unitid_mst + "') = 1 and substr(ct.ref_code,0,3)= '303'" +
                                  " and a.vch_num='" + model[0].Col49 + "' where find_in_set(a.client_unit_id,'" + unitid_mst + "')= 1 and a.type in ('BCD')  and(a.mftr is null or a.mftr = '0' or a.mftr = 'N') and " +
                                  "(a.pubr is null or a.pubr = '0' or a.pubr = 'N') and substr(a.vch_num,0,3)= '303'";
                                    DataTable dtcp = new DataTable();
                                    dtcp = sgen.getdata(userCode, mq1);
                                    if (dtcp.Rows.Count > 0)
                                    {
                                        foreach (DataRow dataRow in dtcp.Rows)
                                        {
                                            mod6.Add(new SelectListItem { Text = dataRow["cp_name"].ToString(), Value = dataRow["cont_perid"].ToString() });
                                        }
                                    }
                                    TempData[MyGuid + "_Tlist6"] = model[0].TList6 = mod6;
                                    //String[] L6 = System.String.Join(",", dtcp.Rows.OfType<DataRow>().Select(r => r["cont_perid"].ToString()).Distinct()).Split(',');
                                    //model[0].SelectedItems6 = L6;
                                    if (dtcp.Rows.Count > 0) model[0].SelectedItems6 = new string[] { dtcp.Rows[0]["cont_perid"].ToString() };
                                    if (values[1].ToString() == "51")
                                    {

                                        Make_query(viewName.ToLower(), "Select Sales Order No.", "GETSO", "2", "", "", MyGuid);

                                        ViewBag.scripCall = "callFoo('Select Sales Order No.');";
                                    }
                                    else if (values[1].ToString() == "52")
                                    {

                                        Make_query(viewName.ToLower(), "Select Dispatch Schedule Order No.", "GETSO", "2", "", "", MyGuid);

                                        ViewBag.scripCall = "callFoo('Select Dispatch Schedule Order No.');";
                                    }
                                    else if (values[1].ToString() == "53")
                                    {
                                        model[0].Col71 = dt.Rows[0]["name"].ToString();

                                        Make_query(viewName.ToLower(), "Select Dispatch No.", "GETSO", "2", "", "", MyGuid);

                                        ViewBag.scripCall = "callFoo('Select Dispatch No.');";
                                    }
                                    else if (values[1].ToString() == "55")
                                    {

                                        Make_query(viewName.ToLower(), "Select PI No.", "GETSO", "2", "", "", MyGuid);

                                        ViewBag.scripCall = "callFoo('Select PI No.');";
                                    }
                                    ViewBag.vimport = "";
                                }
                                #endregion
                            }
                            else
                            {
                                mq = "select a.c_name as name,a.c_gstin as gstin,a.addr as address,a.vch_num,a.tor,nvl(ba.country_name,'-') as country_name," +
"nvl(ba.state_name,'-') state_name,nvl(ba.city_name,'-') as city_name,a.pincode_2,a.pay_term from clients_mst a left join country_state ba on ba.rec_id = a.city2 " +
                              "where a.vch_num||To_Char(a.vch_date, 'yyyymmdd')|| a.type = '" + URL + "'";
                                dt = sgen.getdata(userCode, mq);
                                if (dt.Rows.Count > 0)
                                {
                                    model[0].Col49 = dt.Rows[0]["vch_num"].ToString();
                                    model[0].Col20 = dt.Rows[0]["name"].ToString();
                                    model[0].Col21 = dt.Rows[0]["address"].ToString();
                                    model[0].Col22 = dt.Rows[0]["gstin"].ToString();
                                    model[0].Col52 = dt.Rows[0]["tor"].ToString();
                                    model[0].Col101 = dt.Rows[0]["city_name"].ToString();
                                    model[0].Col102 = dt.Rows[0]["state_name"].ToString();
                                    model[0].Col103 = dt.Rows[0]["country_name"].ToString();
                                    model[0].Col104 = dt.Rows[0]["pincode_2"].ToString();
                                    #region 1.pay_term
                                    TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1 = cmd_Fun.payterm(userCode, unitid_mst, out defcall);
                                    #endregion
                                    String[] L1 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["pay_term"].ToString()).Distinct()).Split(',');
                                    model[0].SelectedItems1 = L1;
                                    mq1 = "select (ct.ref_code||ct.vch_num||ct.type) as cont_perid,a.vch_num as Account_No,  a.c_name CUSTNAME," +
                                  "((replace(ct.cpname, '0', '') || ' ' || replace(ct.cp_mname, '0', '') || ' ' || replace(ct.cp_lname, '0', ''))) cp_name,'Account Detail' as Data_Source" +
                                  " from clients_mst a INNER join clients_mst ct  on a.vch_num = ct.ref_code and find_in_set(ct.client_unit_id, '" + unitid_mst + "') = 1 and substr(ct.ref_code,0,3)= '303'" +
                                  " and a.vch_num='" + model[0].Col49 + "' where find_in_set(a.client_unit_id,'" + unitid_mst + "')= 1 and a.type in ('BCD')  and(a.mftr is null or a.mftr = '0' or a.mftr = 'N') and " +
                                  "(a.pubr is null or a.pubr = '0' or a.pubr = 'N') and substr(a.vch_num,0,3)= '303'";
                                    DataTable dtcp = new DataTable();
                                    dtcp = sgen.getdata(userCode, mq1);
                                    if (dtcp.Rows.Count > 0)
                                    {
                                        foreach (DataRow dataRow in dtcp.Rows)
                                        {
                                            mod6.Add(new SelectListItem { Text = dataRow["cp_name"].ToString(), Value = dataRow["cont_perid"].ToString() });
                                        }
                                    }
                                    TempData[MyGuid + "_Tlist6"] = model[0].TList6 = mod6;
                                    if (dtcp.Rows.Count > 0) model[0].SelectedItems6 = new string[] { dtcp.Rows[0]["cont_perid"].ToString() };
                                }
                            }
                            break;
                        case "GETSO":
                            values = new List<string>();
                            values = (List<string>)sgen.GetSession(MyGuid, "Values");
                            values.Add(URL);
                            sgen.SetSession(MyGuid, "Values", values);
                            if (sgen.GetSession(MyGuid, "inv_t_id") != null)
                            {
                                if (sgen.GetSession(MyGuid, "inv_t_id").ToString() != "54")
                                {
                                    if (sgen.GetSession(MyGuid, "inv_t_id").ToString() == "51")
                                    {
                                        mq = "select group_concat(distinct a.vch_num) as so_no,group_concat(distinct a.gothrchrg) as po_no from purchasesc a " +
                                            "where (a.client_id || a.client_unit_id || a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.type) in ('" + values[3].ToString() + "') ";
                                    }
                                    else if (sgen.GetSession(MyGuid, "inv_t_id").ToString() == "52")
                                    {
                                        mq = "select group_concat(distinct a.vch_num) as shedule_no,group_concat(distinct a.col13) as so_no," +
                                            "group_concat(distinct a.col11) as po_no  from kc_tab a where" +
                                            " (a.client_id || a.client_unit_id || a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.type) in ('" + values[3].ToString() + "') ";
                                    }
                                    else if (sgen.GetSession(MyGuid, "inv_t_id").ToString() == "53")
                                    {
                                        mq = "select group_concat(distinct dc.vch_num) as disp_no,group_concat(distinct dc.tmode) as po_no,dc.aname," +
                                            "group_concat(distinct dc.gdisc) as shedule_no,group_concat(distinct dc.vehno) as so_no from itransaction" +
                                            " dc where (dc.client_id || dc.client_unit_id || dc.vch_num || to_char(dc.vch_date, 'yyyymmdd') || dc.type) in ('" + values[3].ToString() + "') group by (dc.aname)";
                                    }
                                    else if (sgen.GetSession(MyGuid, "inv_t_id").ToString() == "55")
                                    {
                                        mq = "select group_concat(distinct a.vch_num) as pi_no from itransactionc a " +
                                            "where (a.client_id || a.client_unit_id || a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.type) in ('" + values[3].ToString() + "') ";
                                    }
                                    dt = sgen.getdata(userCode, mq);
                                    if (dt.Rows.Count > 0)
                                    {
                                        if (sgen.GetSession(MyGuid, "inv_t_id").ToString() == "51")
                                        {
                                            model[0].Col29 = ""; model[0].Col59 = ""; model[0].Col65 = "";
                                            model[0].Col29 = dt.Rows[0]["so_no"].ToString();
                                            model[0].Col59 = dt.Rows[0]["po_no"].ToString();
                                            sgen.SetSession(MyGuid, "So_num", dt.Rows[0]["so_no"].ToString());
                                        }
                                        if (sgen.GetSession(MyGuid, "inv_t_id").ToString() == "55")
                                        {
                                            model[0].Col80 = "";
                                            model[0].Col80 = dt.Rows[0]["pi_no"].ToString();
                                            sgen.SetSession(MyGuid, "So_num", dt.Rows[0]["pi_no"].ToString());
                                        }
                                        else if (sgen.GetSession(MyGuid, "inv_t_id").ToString() == "52")
                                        {
                                            model[0].Col29 = ""; model[0].Col59 = ""; model[0].Col65 = "";
                                            model[0].Col29 = dt.Rows[0]["so_no"].ToString();
                                            model[0].Col59 = dt.Rows[0]["po_no"].ToString();
                                            model[0].Col65 = dt.Rows[0]["shedule_no"].ToString();
                                            sgen.SetSession(MyGuid, "Sdl_num", dt.Rows[0]["shedule_no"].ToString());
                                        }
                                        else if (sgen.GetSession(MyGuid, "inv_t_id").ToString() == "53")
                                        {
                                            model[0].Col29 = ""; model[0].Col59 = ""; model[0].Col65 = ""; model[0].Col67 = "";
                                            model[0].Col29 = dt.Rows[0]["so_no"].ToString();
                                            model[0].Col67 = dt.Rows[0]["disp_no"].ToString();
                                            model[0].Col59 = dt.Rows[0]["po_no"].ToString();
                                            model[0].Col65 = dt.Rows[0]["shedule_no"].ToString();
                                            model[0].Col71 = dt.Rows[0]["aname"].ToString();
                                            sgen.SetSession(MyGuid, "dsp_numbr", dt.Rows[0]["disp_no"].ToString());
                                        }
                                    }
                                    if (sgen.GetSession(MyGuid, "inv_t_id").ToString() == "51")
                                    {
                                        string[] xfstr = values[3].ToString().Split(',');
                                        string xfstrnew = xfstr[0].Substring(0, 25);
                                        mq1 = "select distinct to_char(a.vch_date,'" + sgen.Getsqldateformat() + "') as so_date,to_char(a.date1,'" + sgen.Getsqldateformat() + "') as  po_date from purchasesc a where (a.client_id || a.client_unit_id || a.vch_num || to_char(a.vch_date, 'yyyymmdd') " +
                                        "|| a.type) in ('" + xfstrnew + "') ";
                                        dt = sgen.getdata(userCode, mq1);
                                        if (dt.Rows.Count > 0)
                                        {
                                            model[0].Col63 = dt.Rows[0]["so_date"].ToString();
                                            model[0].Col60 = dt.Rows[0]["po_date"].ToString();
                                        }
                                    }
                                    if (sgen.GetSession(MyGuid, "inv_t_id").ToString() == "55")
                                    {
                                        string[] xfstr = values[3].ToString().Split(',');
                                        string xfstrnew = xfstr[0].Substring(0, 25);
                                        mq1 = "select distinct to_char(a.vch_date,'" + sgen.Getsqldateformat() + "') as so_date,to_char(a.date1,'" + sgen.Getsqldateformat() + "') as  po_date from itransactionc a where (a.client_id || a.client_unit_id || a.vch_num || to_char(a.vch_date, 'yyyymmdd') " +
                                        "|| a.type) in ('" + xfstrnew + "') ";
                                        dt = sgen.getdata(userCode, mq1);
                                        if (dt.Rows.Count > 0)
                                        {
                                            model[0].Col81 = dt.Rows[0]["so_date"].ToString();
                                        }
                                    }
                                    if (sgen.GetSession(MyGuid, "inv_t_id").ToString() == "53")
                                    {
                                        string[] xfstr = values[3].ToString().Split(',');
                                        string xfstrnew = xfstr[0].Substring(0, 25);
                                        mq1 = "select distinct to_char(convert_tz(dc.date1,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') as disp_date," +
                                            "to_char(dc.invdate ,'" + sgen.Getsqldateformat() + "') as so_date," +
                                            "to_char(dc.chldate ,'" + sgen.Getsqldateformat() + "') as po_date," +
                                            "to_char(dc.ewaydate,'" + sgen.Getsqldateformat() + "') as sdl_date " +
                                            "from itransaction dc where" +
                                            " (dc.client_id || dc.client_unit_id || dc.vch_num || to_char(dc.vch_date, 'yyyymmdd') || dc.type) in ('" + xfstrnew + "') ";
                                        dt = sgen.getdata(userCode, mq1);
                                        if (dt.Rows.Count > 0)
                                        {
                                            model[0].Col63 = dt.Rows[0]["so_date"].ToString();
                                            model[0].Col60 = dt.Rows[0]["po_date"].ToString();
                                            model[0].Col68 = dt.Rows[0]["disp_date"].ToString();
                                            model[0].Col66 = dt.Rows[0]["sdl_date"].ToString();
                                        }
                                    }
                                    if (sgen.GetSession(MyGuid, "inv_t_id").ToString() == "52")
                                    {
                                        string[] xfstr = values[3].ToString().Split(',');
                                        string xfstrnew = xfstr[0].Substring(0, 25);
                                        mq1 = "select distinct to_char(convert_tz(dsc.date1,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') as sdl_date" +
                                        ",to_char(dsc.date6,'" + sgen.Getsqldateformat() + "') as so_date,to_char(dsc.date5,'" + sgen.Getsqldateformat() + "') as po_date" +
                                        " from kc_tab dsc where (dsc.client_id || dsc.client_unit_id || dsc.vch_num || to_char(dsc.vch_date, 'yyyymmdd') || dsc.type) in ('" + xfstrnew + "') ";
                                        dt = sgen.getdata(userCode, mq1);
                                        if (dt.Rows.Count > 0)
                                        {
                                            model[0].Col63 = dt.Rows[0]["so_date"].ToString();
                                            model[0].Col60 = dt.Rows[0]["po_date"].ToString();
                                            model[0].Col66 = dt.Rows[0]["sdl_date"].ToString();
                                        }
                                    }
                                }
                            }
                            break;
                        case "PARTYFRM":
                            mq = "select a.c_name as name,a.c_gstin as gstin,a.addr as Address,a.vch_num from clients_mst a " +
                                "where a.vch_num||to_char(a.vch_date, 'yyyymmdd')|| a.type = '" + URL + "'";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                model[0].Col50 = dt.Rows[0]["vch_num"].ToString();
                                model[0].Col23 = dt.Rows[0]["name"].ToString();
                                model[0].Col24 = dt.Rows[0]["address"].ToString();
                                model[0].Col25 = dt.Rows[0]["gstin"].ToString();
                            }
                            break;
                        case "PARTYTO":
                            mq = "select a.c_name as name,a.c_gstin as gstin,a.addr as Address,a.vch_num from clients_mst a " +
                                "where a.vch_num||to_char(a.vch_date, 'yyyymmdd')|| a.type = '" + URL + "'";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                model[0].Col51 = dt.Rows[0]["vch_num"].ToString();
                                model[0].Col26 = dt.Rows[0]["name"].ToString();
                                model[0].Col27 = dt.Rows[0]["address"].ToString();
                                model[0].Col28 = dt.Rows[0]["gstin"].ToString();
                            }
                            break;
                        case "ITEMS":
                        case "ITEM":
                            values = (List<string>)sgen.GetSession(MyGuid, "Values");
                            values.Add(URL);
                            sgen.SetSession(MyGuid, "Values", values);
                            #region getso
                            if (sgen.GetSession(MyGuid, "inv_t_id") != null)
                            {
                                if (sgen.GetSession(MyGuid, "inv_t_id").ToString() != "54")
                                {
                                    if (sgen.GetSession(MyGuid, "inv_t_id").ToString() == "51")
                                    {
                                        mq = "select group_concat(distinct a.vch_num) as so_no,group_concat(distinct a.gothrchrg) as po_no from purchasesc a " +
                                            "where (a.client_id || a.client_unit_id || a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.type) in ('" + values[3].ToString() + "') ";
                                    }
                                    else if (sgen.GetSession(MyGuid, "inv_t_id").ToString() == "52")
                                    {
                                        mq = "select group_concat(distinct a.vch_num) as shedule_no,group_concat(distinct a.col13) as so_no," +
                                            "group_concat(distinct a.col11) as po_no  from kc_tab a where" +
                                            " (a.client_id || a.client_unit_id || a.vch_num || to_char(a.date1, 'yyyymmdd') || a.type) in ('" + values[3].ToString() + "') ";
                                    }
                                    else if (sgen.GetSession(MyGuid, "inv_t_id").ToString() == "53")
                                    {
                                        mq = "select group_concat(distinct dc.vch_num) as disp_no,group_concat(distinct dc.tmode) as po_no," +
                                            "group_concat(distinct dc.gdisc) as shedule_no,group_concat(distinct dc.vehno) as so_no from itransaction" +
                                            " dc where (dc.client_id || dc.client_unit_id || dc.vch_num || to_char(dc.vch_date, 'yyyymmdd') || dc.type) in ('" + values[3].ToString() + "')";
                                    }
                                    else if (sgen.GetSession(MyGuid, "inv_t_id").ToString() == "55")
                                    {
                                        mq = "select group_concat(distinct a.vch_num) as pi_no from itransactionc a " +
                                            "where (a.client_id || a.client_unit_id || a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.type) in ('" + values[3].ToString() + "') ";
                                    }
                                    dt = sgen.getdata(userCode, mq);
                                    if (dt.Rows.Count > 0)
                                    {
                                        if (sgen.GetSession(MyGuid, "inv_t_id").ToString() == "51")
                                        {
                                            model[0].Col29 = ""; model[0].Col59 = ""; model[0].Col65 = "";
                                            model[0].Col29 = dt.Rows[0]["so_no"].ToString();
                                            model[0].Col59 = dt.Rows[0]["po_no"].ToString();
                                            sgen.SetSession(MyGuid, "So_num", dt.Rows[0]["so_no"].ToString());
                                        }
                                        else if (sgen.GetSession(MyGuid, "inv_t_id").ToString() == "52")
                                        {
                                            model[0].Col29 = ""; model[0].Col59 = ""; model[0].Col65 = "";
                                            model[0].Col29 = dt.Rows[0]["so_no"].ToString();
                                            model[0].Col59 = dt.Rows[0]["po_no"].ToString();
                                            model[0].Col65 = dt.Rows[0]["shedule_no"].ToString();
                                            sgen.SetSession(MyGuid, "Sdl_num", dt.Rows[0]["shedule_no"].ToString());
                                        }
                                        else if (sgen.GetSession(MyGuid, "inv_t_id").ToString() == "55")
                                        {
                                            model[0].Col80 = "";
                                            model[0].Col80 = dt.Rows[0]["pi_no"].ToString();
                                            sgen.SetSession(MyGuid, "So_num", dt.Rows[0]["pi_no"].ToString());
                                        }
                                        else if (sgen.GetSession(MyGuid, "inv_t_id").ToString() == "53")
                                        {
                                            model[0].Col29 = ""; model[0].Col59 = ""; model[0].Col65 = ""; model[0].Col67 = ""; model[0].Col71 = "";
                                            model[0].Col29 = dt.Rows[0]["so_no"].ToString();
                                            model[0].Col67 = dt.Rows[0]["disp_no"].ToString();
                                            model[0].Col59 = dt.Rows[0]["po_no"].ToString();
                                            model[0].Col65 = dt.Rows[0]["shedule_no"].ToString();
                                            sgen.SetSession(MyGuid, "dsp_numbr", dt.Rows[0]["disp_no"].ToString());
                                        }
                                    }
                                    if (sgen.GetSession(MyGuid, "inv_t_id").ToString() == "51")
                                    {
                                        string[] xfstr = values[3].ToString().Split(',');
                                        string xfstrnew = xfstr[0].Substring(0, 25);
                                        mq1 = "select distinct to_char(a.vch_date,'" + sgen.Getsqldateformat() + "') as so_date,to_char(a.date1,'" + sgen.Getsqldateformat() + "') as  po_date from purchasesc a where (a.client_id || a.client_unit_id || a.vch_num || to_char(a.vch_date, 'yyyymmdd') " +
                                        "|| a.type) in ('" + xfstrnew + "') ";
                                        dt = sgen.getdata(userCode, mq1);
                                        if (dt.Rows.Count > 0)
                                        {
                                            model[0].Col63 = dt.Rows[0]["so_date"].ToString();
                                            model[0].Col60 = dt.Rows[0]["po_date"].ToString();
                                        }
                                    }
                                    if (sgen.GetSession(MyGuid, "inv_t_id").ToString() == "55")
                                    {
                                        string[] xfstr = values[3].ToString().Split(',');
                                        string xfstrnew = xfstr[0].Substring(0, 25);
                                        mq1 = "select distinct to_char(a.vch_date,'" + sgen.Getsqldateformat() + "') as so_date,to_char(a.date1,'" + sgen.Getsqldateformat() + "') as  po_date from itransactionc a where (a.client_id || a.client_unit_id || a.vch_num || to_char(a.vch_date, 'yyyymmdd') " +
                                        "|| a.type) in ('" + xfstrnew + "') ";
                                        dt = sgen.getdata(userCode, mq1);
                                        if (dt.Rows.Count > 0)
                                        {
                                            model[0].Col81 = dt.Rows[0]["so_date"].ToString();
                                        }
                                    }
                                    if (sgen.GetSession(MyGuid, "inv_t_id").ToString() == "53")
                                    {
                                        string[] xfstr = values[3].ToString().Split(',');
                                        string xfstrnew = xfstr[0].Substring(0, 25);
                                        mq1 = "select distinct to_char(convert_tz(dc.date1,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') as disp_date," +
                                            "to_char(dc.invdate ,'" + sgen.Getsqldateformat() + "') as so_date," +
                                            "to_char(dc.chldate ,'" + sgen.Getsqldateformat() + "') as po_date," +
                                            "to_char(dc.ewaydate,'" + sgen.Getsqldateformat() + "') as sdl_date " +
                                            "from itransaction dc where" +
                                            " (dc.client_id || dc.client_unit_id || dc.vch_num || to_char(dc.vch_date, 'yyyymmdd') || dc.type) in ('" + xfstrnew + "') ";
                                        dt = sgen.getdata(userCode, mq1);
                                        if (dt.Rows.Count > 0)
                                        {
                                            model[0].Col63 = dt.Rows[0]["so_date"].ToString();
                                            model[0].Col60 = dt.Rows[0]["po_date"].ToString();
                                            model[0].Col68 = dt.Rows[0]["disp_date"].ToString();
                                            model[0].Col66 = dt.Rows[0]["sdl_date"].ToString();
                                        }
                                    }
                                    if (sgen.GetSession(MyGuid, "inv_t_id").ToString() == "52")
                                    {
                                        string[] xfstr = values[3].ToString().Split(',');
                                        string xfstrnew = xfstr[0].Substring(0, 25);
                                        mq1 = "select distinct to_char(convert_tz(dsc.date1,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') as sdl_date" +
                                        ",to_char(dsc.date6,'" + sgen.Getsqldateformat() + "') as so_date" +
                                        ",to_char(dsc.date5,'" + sgen.Getsqldateformat() + "') as po_date" +
                                        " from kc_tab dsc where (dsc.client_id || dsc.client_unit_id || dsc.vch_num || to_char(dsc.date1, 'yyyymmdd') || dsc.type) in ('" + xfstrnew + "') ";
                                        dt = sgen.getdata(userCode, mq1);
                                        if (dt.Rows.Count > 0)
                                        {
                                            model[0].Col63 = dt.Rows[0]["so_date"].ToString();
                                            model[0].Col60 = dt.Rows[0]["po_date"].ToString();
                                            model[0].Col66 = dt.Rows[0]["sdl_date"].ToString();
                                        }
                                    }
                                }
                            }
                            #endregion
                            string vchdate = (model[0].Col126 == "" || model[0].Col126 == null) ? model[0].Col48 : model[0].Col126;
                            var cond2 = "and client_unit_id||vch_num||to_char(vch_date,'" + sgen.Getsqldateformat() + "')||type not in (" +
                                  "'" + unitid_mst + model[0].Col16 + vchdate + model[0].Col12 + "')";

                            switch (values[1].ToString())
                            {
                                case "51":
                                    mq = " select (it.icode || pc.type || pc.vch_num || to_char(it.vch_date, 'yyyymmdd') || it.type) as fstr,it.icode as Icode,it.iname as Iname,it.cpartno partno,nvl(hsn.master_name,'-') as hsn,nvl(hsn.group_name,'0') taxrate,um.master_name as UOM,pc.irate as rate" +
                                  ",pc.discrate as disc_rate,'0' as amrtchrgamt,it.amortchrgs,it.matjobwork as mat_cosunit,'0' mcamt,s.closing as qtystk,pc.bal_qty qtyord, pc.po_no as po_num,to_char" +
                                  "(pc.date1, '" + sgen.Getsqldateformat() + "') as po_date,to_char(pc.vch_date, '" + sgen.Getsqldateformat() + "') as so_date," +
                                  "pc.vch_num as so_no from item it left join (select icode,client_unit_id,sum(op) op,sum(pktop) pktop,sum(qtyin) qtyin,sum(qtyout) out," +
                                      "sum(op)+sum(qtyin)-sum(qtyout) closing from (select icode, client_unit_id, nvl(op_2019, 0) op," +
                                      " nvl(pkt_2019, 0) pktop, 0 qtyin, 0 qtyout, 0 pktno from itbal union all select icode, client_unit_id, " +
                                      "sum(to_number(qtyin)) - sum(to_number(qtyout)) op, sum((case when substr(type, 1, 1) in ('0', '1') then" +
                                      " pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktop,sum(to_number(qtyin)) " +
                                      "qtyin,sum(to_number(qtyout)) qtyout,0 pktno from itransaction where trim(store) = 'Y' and " +
                                      "to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and " +
                                      "to_date('" + year_from.Split(' ')[0].Trim() + "','" + sgen.Getsqldateformat() + "')-1 group by icode,client_unit_id union all select icode,client_unit_id," +
                                      "0 as op,0 as pktop,to_number(qtyin) qtyin,to_number(qtyout) qtyout,sum((case when substr(type, 1, 1) in " +
                                      "('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktno from " +
                                      "itransaction where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between " +
                                      "to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') " +
                                      "and to_date('" + model[0].Col48 + "','" + sgen.Getsqldateformat() + "') " + cond2 + " group by icode,client_unit_id," +
                                      "to_number(qtyin),to_number(qtyout)) a group by icode, client_unit_id) s on it.icode = s.icode and find_in_set(it.client_unit_id, s.client_unit_id)=1 inner join(select a.po_no, a.vch_num,a.icode," +
                                  " a.type, a.so_qty, a.vch_date, a.irate, a.discrate, a.date1, nvl(sum(a.invoice_qty),'0') as used_qty, a.so_qty - nvl(sum(a.invoice_qty),'0') as bal_qty" +
                                  " from(select pc.vch_num, pc.gothrchrg as po_no, pc.irate, pc.discrate, pc.date1, pc.vch_date, pc.icode, pc.type, pc.qtyord as so_qty, " +
                                  "iv.qtyout as invoice_qty from purchasesc pc left join itransaction iv on iv.sono = pc.vch_num and iv.potype = '51' and pc.icode=iv.icode " +
                                  "and iv.client_unit_id = pc.client_unit_id where pc.pur_type = 'NPI' and substr(pc.type, 1, 1) = '4' and pc.client_unit_id = '" + unitid_mst + "' union all select pc.vch_num, pc.gothrchrg as po_no, pc.irate," +
                                  " pc.discrate, pc.date1, pc.vch_date, pc.icode, pc.type, pc.qtyord as so_qty, dp.qtyout as dsp_qty from purchasesc pc left join " +
                                  "itransaction dp on dp.VEHNO = pc.vch_num and dp.type = '60' and pc.icode=dp.icode and dp.client_unit_id = pc.client_unit_id" +
                                  " where pc.pur_type = 'NPI' and substr(pc.type, 1, 1) = '4' union all select pc.vch_num, pc.gothrchrg as po_no, pc.irate, pc.discrate, " +
                                  "pc.date1, pc.vch_date, pc.icode, pc.type, pc.qtyord as so_qty, ds.col10 as dsp_qty from purchasesc pc left join kc_tab ds on " +
                                  "ds.col13 = pc.vch_num and ds.type = 'DSC' and pc.icode=ds.col5 and ds.client_unit_id = pc.client_unit_id where pc.pur_type" +
                                  " = 'NPI' and substr(pc.type, 1, 1) = '4' union all select pc.vch_num,pc.gothrchrg as po_no, pc.irate, pc.discrate," +
                                        " pc.date1, pc.vch_date, pc.icode, pc.type, pc.qtyord as so_qty,co.col11 as invoice_qty from purchasesc" +
                                        " pc left join enx_tab co on co.col7 = pc.icode and pc.vch_num = co.col5 and co.type = 'CPS' and" +
                                        " co.client_unit_id = '" + unitid_mst + "' and substr(pc.type, 1, 1) = '4')" +
                                  " a group by(a.vch_num, a.icode, a.type, a.so_qty," +
                                  " a.po_no, a.vch_date,a.date1, a.irate," +
                                  " a.discrate))pc on pc.icode = it.icode left join master_setting um on um.master_id = it.uom and um.type = 'UMM' and " +
                                  "find_in_set(um.client_unit_id, it.client_unit_id)= 1 left join master_setting hsn" +
                                  " on hsn.master_id = it.hsno and hsn.type = 'HSN' and find_in_set(hsn.client_unit_id," +
                                  " it.client_unit_id)= 1 where (it.icode || pc.type || pc.vch_num || to_char(it.vch_date, 'yyyymmdd') || it.type) in ('" + URL + "')";
                                    break;
                                case "52":
                                    mq = "select distinct (it.icode || pc.col20 || pc.sdl_no || to_char(it.vch_date, 'yyyymmdd') || it.type) as fstr,it.icode as icode,it.iname as iname," +
                                        "pc.pending_sdl as qtyord,it.cpartno partno,to_char(pc.date5,'" + sgen.Getsqldateformat() + "') " +
                                        " as po_date,to_char(pc.date6,'" + sgen.Getsqldateformat() + "') as so_date,pc.col11 as po_no,so.irate rate,it.amortchrgs,it.matjobwork,'0' mcamt,so.discrate disc_rate,pc.col13 as so_no,nvl(hsn.master_name,'-') as hsn,nvl(hsn.group_name,'0') taxrate," +
                                        "to_char(pc.date1,'" + sgen.Getsqldateformat() + "') as sdl_date, pc.col20 as type,pc.sdl_no,nvl(s.closing, 0) as qtystk," +
                                        "um.master_name as UOM,'0' Qty_Out,'0' Qty_Req_bal from item it inner join (select a.sdl_no, a.icode,a.col1,a.client_id,a.client_unit_id," +
                                        " a.col20, a.date1,a.date5, a.date6, a.col11, a.col13, a.sdl_qty, sum(a.dsp_qty) as dsp_qty,(a.sdl_qty - nvl(sum(a.dsp_qty), '0')) " +
                                        "as pending_sdl from(select ds.vch_num as sdl_no,ds.col1,ds.client_id,ds.client_unit_id, ds.col20, ds.date1,ds.date5, ds.date6, ds.col11," +
                                        " ds.col13,ds.col5 as icode, ds.col10 as sdl_qty,dp.qtyout as dsp_qty from kc_tab ds left join itransaction dp on dp.GDISC = ds.vch_num" +
                                        " and dp.type = '61'  and dp.icode=ds.col5 and dp.client_unit_id = ds.client_unit_id where" +
                                        " substr(ds.type,1,1)='4' and ds.col20='DSC' and ds.client_unit_id = '" + unitid_mst + "' union all select ds.vch_num as" +
                                        " sdl_no,ds.col1,ds.client_id,ds.client_unit_id, ds.col20, ds.date1,ds.date5, ds.date6, ds.col11, ds.col13, ds.col5 as icode,ds.col10 " +
                                        "as sdl_qty, iv.qtyout as inv_qty from kc_tab ds left join itransaction iv on iv.sdlno = ds.vch_num and iv.potype = '52' and" +
                                        " iv.icode=ds.col5 and iv.client_unit_id = ds.client_unit_id where substr(ds.type,1,1)='4' and " +
                                        "ds.col20='DSC' and ds.client_unit_id = '" + unitid_mst + "' union all select ds.vch_num as sdl_no,ds.col1,ds.client_id," +
                                        "ds.client_unit_id,ds.col20, ds.date1,ds.date5, ds.date6, ds.col11, ds.col13, ds.col5 as icode, ds.col10 as sdl_qty,co.col11 as close_qty" +
                                        " from kc_tab ds left join enx_tab co on  co.col7 = ds.col5 and ds.vch_num = co.col5 and co.type = 'CPD' and" +
                                        " co.client_unit_id = '" + unitid_mst + "' where substr(ds.type,1,1)='4' and ds.col20='DSC' and ds.client_unit_id = '" + unitid_mst + "')" +
                                        " a group by(a.sdl_no, a.icode,a.col1,a.client_id,a.client_unit_id, a.col20, a.date1, a.date5, a.date6, a.col11, a.col13, a.sdl_qty))" +
                                        " pc on pc.icode = it.icode left join master_setting um on um.master_id = it.uom  and um.type = 'UMM' and " +
                                        "find_in_set(um.client_unit_id, it.client_unit_id)= 1 left join master_setting hsn" +
                                        " on hsn.master_id = it.hsno and hsn.type = 'HSN' and find_in_set(hsn.client_unit_id," +
                                        " it.client_unit_id)= 1 left join(select icode,client_unit_id,sum(op) op,sum(pktop) pktop,sum(qtyin) qtyin,sum(qtyout) out," +
                                      "sum(op)+sum(qtyin)-sum(qtyout) closing from (select icode, client_unit_id, nvl(op_2019, 0) op," +
                                      " nvl(pkt_2019, 0) pktop, 0 qtyin, 0 qtyout, 0 pktno from itbal union all select icode, client_unit_id, " +
                                      "sum(to_number(qtyin)) - sum(to_number(qtyout)) op, sum((case when substr(type, 1, 1) in ('0', '1') then" +
                                      " pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktop,sum(to_number(qtyin)) " +
                                      "qtyin,sum(to_number(qtyout)) qtyout,0 pktno from itransaction where trim(store) = 'Y' and " +
                                      "to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and " +
                                      "to_date('" + year_from.Split(' ')[0].Trim() + "','" + sgen.Getsqldateformat() + "')-1 group by icode,client_unit_id union all select icode,client_unit_id," +
                                      "0 as op,0 as pktop,to_number(qtyin) qtyin,to_number(qtyout) qtyout,sum((case when substr(type, 1, 1) in " +
                                      "('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktno from " +
                                      "itransaction where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between " +
                                      "to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and to_date('" + model[0].Col48 + "','" + sgen.Getsqldateformat() + "') " + cond2 + "group by icode,client_unit_id," +
                                      "to_number(qtyin),to_number(qtyout)) a group by icode, client_unit_id) s on it.icode = s.icode and find_in_set(it.client_unit_id, s.client_unit_id)=1 inner join clients_mst cl on cl.vch_num = pc.col1" +
                                        " and find_in_set(cl.client_unit_id, '" + unitid_mst + "')=1 and cl.type = 'BCD' " +
                                        "left join purchasesc so on so.icode=pc.icode and substr(so.type,1,1)='4' and so.pur_type='NPI' and so.vch_num=pc.col13 and " +
                                        "to_char(so.vch_date,'ddmmyyyy') = to_char(pc.date6, 'ddmmyyyy') and pc.client_unit_id = so.client_unit_id where" +
                                        " (it.icode || pc.col20 || pc.sdl_no || to_char(it.vch_date, 'yyyymmdd') || it.type) in ('" + URL + "')";
                                    break;
                                case "53":
                                    mq = "select distinct (it.icode || pc.type || pc.dsp_no || to_char(it.vch_date, 'yyyymmdd') || it.type) as fstr,it.icode as icode,it.iname as iname,pc.dsp_date,pc.sdl_date,pc.so_date,pc.po_date,um.master_name as UOM,nvl(hsn.master_name,'-') as hsn,nvl(hsn.group_name,'0') taxrate,cl.c_name as Party_Name,s.closing as qtystk,pc.dsp_no,pc.po_no,pc.sdl_no,pc.so_no,it.cpartno partno,pc.type,pc.dsp_qty,pc.bal_qty as bal_qty from item it inner join (select a.dsp_no,a.po_no,a.sdl_no,a.so_no,a.type,a.type2, a.icode,a.acode,a.client_id,a.client_unit_id," +
                                        "a.dsp_date,a.po_date,a.sdl_date,a.so_date,a.dsp_qty, sum(a.inv_qty) as inv_qty,(a.dsp_qty - nvl(sum(a.inv_qty), '0')) as bal_qty from(select distinct ds.vch_num as dsp_no,ds.type,ds.type2,ds.acode,ds.icode,ds.client_id,ds.client_unit_id,to_char(ds.vch_date, '" + sgen.Getsqldateformat() + "') dsp_date," +
                                        "to_char(ds.chldate, '" + sgen.Getsqldateformat() + "') po_date,to_char(ds.ewaydate, '" + sgen.Getsqldateformat() + "') sdl_date,to_char(ds.invdate, '" + sgen.Getsqldateformat() + "') so_date,ds.tmode as po_no,ds.gdisc as sdl_no,ds.vehno as so_no,ds.qtyout as dsp_qty,nvl(iv.qtyout,'0') as inv_qty from itransaction ds " +
                                        "left join itransaction iv on iv.dspno = ds.vch_num and substr(iv.type,1,1) = '4' and iv.potype='53' and iv.icode=ds.icode and iv.client_unit_id = ds.client_unit_id where substr(ds.type,1,1)='6' and substr(ds.type2,1,1)='4' and ds.client_unit_id = '" + unitid_mst + "' " +
                                        "union all  select distinct ds.vch_num as dsp_no,ds.type,ds.type2,ds.acode,ds.icode,ds.client_id,ds.client_unit_id,to_char(ds.vch_date, '" + sgen.Getsqldateformat() + "') dsp_date,to_char(ds.chldate, '" + sgen.Getsqldateformat() + "') po_date,to_char(ds.ewaydate, '" + sgen.Getsqldateformat() + "') sdl_date," +
                                        "to_char(ds.invdate, '" + sgen.Getsqldateformat() + "') so_date,ds.tmode as po_no,ds.gdisc as sdl_no,ds.vehno as so_no,ds.qtyout as dsp_qty,nvl(co.col11, '0') as close_qty from itransaction ds inner join enx_tab co on co.col7 = ds.icode and ds.vch_num = co.col12 and co.type = 'CPC' " +
                                        "and co.client_unit_id = '" + unitid_mst + "' where substr(ds.type, 1, 1) = '6' and substr(ds.type2,1,1)= '4' and ds.client_unit_id = '" + unitid_mst + "') a group by(a.dsp_no,a.po_no," +
                                        "a.sdl_no,a.so_no,a.type,a.type2, a.icode,a.acode,a.client_id,a.client_unit_id,a.dsp_date, a.po_date,a.sdl_date,a.so_date, a.dsp_qty)) pc on pc.icode = it.icode " +
                                        "inner join clients_mst cl on cl.vch_num = pc.acode and cl.type = 'BCD' and substr(cl.vch_num,0,3)='303' and find_in_set(cl.client_unit_id, pc.client_unit_id)=1 left join master_setting um on um.master_id = it.uom and um.type = 'UMM'" +
                                        " and find_in_set(um.client_unit_id, it.client_unit_id) = 1 left join " +
                                        "master_setting hsn on hsn.master_id = it.hsno and hsn.type = 'HSN' and " +
                                        "find_in_set(hsn.client_unit_id, it.client_unit_id)= 1 left join(select icode,client_unit_id,sum(op) op,sum(pktop) pktop,sum(qtyin) qtyin,sum(qtyout) out," +
                                      "sum(op)+sum(qtyin)-sum(qtyout) closing from (select icode, client_unit_id, nvl(op_2019, 0) op," +
                                      " nvl(pkt_2019, 0) pktop, 0 qtyin, 0 qtyout, 0 pktno from itbal union all select icode, client_unit_id, " +
                                      "sum(to_number(qtyin)) - sum(to_number(qtyout)) op, sum((case when substr(type, 1, 1) in ('0', '1') then" +
                                      " pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktop,sum(to_number(qtyin)) " +
                                      "qtyin,sum(to_number(qtyout)) qtyout,0 pktno from itransaction where trim(store) = 'Y' and " +
                                      "to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and " +
                                      "to_date('" + year_from.Split(' ')[0].Trim() + "','" + sgen.Getsqldateformat() + "')-1 group by icode,client_unit_id union all select icode,client_unit_id," +
                                      "0 as op,0 as pktop,to_number(qtyin) qtyin,to_number(qtyout) qtyout,sum((case when substr(type, 1, 1) in " +
                                      "('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktno from " +
                                      "itransaction where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between " +
                                      "to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and to_date('" + model[0].Col48 + "','" + sgen.Getsqldateformat() + "') " + cond2 + " group by icode,client_unit_id," +
                                      "to_number(qtyin),to_number(qtyout)) a group by icode, client_unit_id) s on " +
                                        "it.icode = s.icode and find_in_set(it.client_unit_id, s.client_unit_id)=1 where (it.icode || pc.type || pc.dsp_no || to_char(it.vch_date, 'yyyymmdd') || it.type) in ('" + URL + "')";
                                    break;
                                case "55":
                                    //mq = "select distinct (it.icode||to_char(it.vch_date,'yyyymmdd')||it.type||pi.vch_num||pi.type) as fstr,it.icode as Icode,it.iname as Iname," +
                                    //    "it.cpartno Partno, um.master_name as UOM,pi.vch_num as pi_no,to_char(pi.vch_date,'" + sgen.Getsqldateformat() + "') pi_date," +
                                    //    "nvl(hsn.master_name,'-') as hsn,nvl(hsn.group_name,'0') taxrate,s.closing as qtystk,pi.ORDQTY as pi_qty," +
                                    //    "(pi.ORDQTY - nvl(iv.used_amt, 0)) as pi_bal_qty,pi.irate,TRIM(dbms_lob.substr( pi.iremark,4000,1)) iremark from item it inner join itransactionc pi on pi.icode = it.icode and substr(pi.type, 1, 1) = '4' and " +
                                    //    "pi.pur_type = 'BPI' and find_in_set(pi.client_unit_id, it.client_unit_id)=1 left join master_setting um on um.master_id = it.uom " +
                                    //    "and um.type = 'UMM' and find_in_set(um.client_unit_id, it.client_unit_id)= 1 left join master_setting " +
                                    //    "hsn on hsn.master_id = it.hsno and hsn.type = 'HSN' and find_in_set(hsn.client_unit_id, it.client_unit_id)= 1" +
                                    //    " left join(select icode,client_unit_id,sum(op) op,sum(pktop) pktop,sum(qtyin) qtyin,sum(qtyout) out," +
                                    //  "sum(op)+sum(qtyin)-sum(qtyout) closing from (select icode, client_unit_id, nvl(op_2019, 0) op," +
                                    //  " nvl(pkt_2019, 0) pktop, 0 qtyin, 0 qtyout, 0 pktno from itbal union all select icode, client_unit_id, " +
                                    //  "sum(to_number(qtyin)) - sum(to_number(qtyout)) op, sum((case when substr(type, 1, 1) in ('0', '1') then" +
                                    //  " pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktop,sum(to_number(qtyin)) " +
                                    //  "qtyin,sum(to_number(qtyout)) qtyout,0 pktno from itransaction where trim(store) = 'Y' and " +
                                    //  "to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and " +
                                    //  "to_date('" + year_from.Split(' ')[0].Trim() + "','" + sgen.Getsqldateformat() + "')-1 group by icode,client_unit_id union all select icode,client_unit_id," +
                                    //  "0 as op,0 as pktop,to_number(qtyin) qtyin,to_number(qtyout) qtyout,sum((case when substr(type, 1, 1) in " +
                                    //  "('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktno from " +
                                    //  "itransaction where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between " +
                                    //  "to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and to_date('" + model[0].Col48 + "','" + sgen.Getsqldateformat() + "') group by icode,client_unit_id," +
                                    //  "to_number(qtyin),to_number(qtyout)) a group by icode, client_unit_id) s on it.icode = s.icode and find_in_set(it.client_unit_id, s.client_unit_id)=1 " +
                                    //    "left join(select sum(qtyout) as used_amt ,pi_no,client_id,client_unit_id,icode from itransaction where client_unit_id = '" + unitid_mst + "' and substr(type, 1, 1) = '4' and potype = '55' group by pi_no,client_id,client_unit_id,icode) iv on " +
                                    //    "iv.pi_no = pi.vch_num and iv.icode = pi.icode and iv.client_unit_id = pi.client_unit_id where " +
                                    //    "(it.icode || to_char(it.vch_date, 'yyyymmdd') || it.type || pi.vch_num || pi.type) in ('" + URL + "')";
                                    mq = "select (it.icode||to_char(it.vch_date,'yyyymmdd')||it.type||pc.PI_NO||pc.type) as fstr,it.icode as Icode,it.iname as Iname,it.cpartno Partno,um.master_name as UOM,pc.PI_NO," +
                                        "pc.pi_date,nvl(hsn.master_name,'-') as hsn,nvl(hsn.group_name,'0') taxrate,s.closing as qtystk,pc.pi_qty as pi_qty,pc.bal_qty,pc.irate,pc.discrate,'-' iremark from item it " +
                                        "left join master_setting um on um.master_id = it.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, it.client_unit_id)= 1 left join master_setting hsn on hsn.master_id = it.hsno " +
                                        "and hsn.type = 'HSN' and find_in_set(hsn.client_unit_id, it.client_unit_id)= 1 " +
                                        " left join(select icode,client_unit_id,sum(op) op,sum(pktop) pktop,sum(qtyin) qtyin,sum(qtyout) out," +
                                      "sum(op)+sum(qtyin)-sum(qtyout) closing from (select icode, client_unit_id, nvl(op_2019, 0) op," +
                                      " nvl(pkt_2019, 0) pktop, 0 qtyin, 0 qtyout, 0 pktno from itbal union all select icode, client_unit_id, " +
                                      "sum(to_number(qtyin)) - sum(to_number(qtyout)) op, sum((case when substr(type, 1, 1) in ('0', '1') then" +
                                      " pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktop,sum(to_number(qtyin)) " +
                                      "qtyin,sum(to_number(qtyout)) qtyout,0 pktno from itransaction where trim(store) = 'Y' and " +
                                      "to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and " +
                                      "to_date('" + year_from.Split(' ')[0].Trim() + "','" + sgen.Getsqldateformat() + "')-1 group by icode,client_unit_id union all select icode,client_unit_id," +
                                      "0 as op,0 as pktop,to_number(qtyin) qtyin,to_number(qtyout) qtyout,sum((case when substr(type, 1, 1) in " +
                                      "('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktno from " +
                                      "itransaction where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between " +
                                      "to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and to_date('" + model[0].Col48 + "','" + sgen.Getsqldateformat() + "') " + cond2 + " group by icode,client_unit_id," +
                                      "to_number(qtyin),to_number(qtyout)) a group by icode, client_unit_id) s on it.icode = s.icode and find_in_set(it.client_unit_id, s.client_unit_id)=1 " +
                                        "inner join (select a.PI_NO,a.pi_date,a.type,a.icode,a.irate,a.discrate,a.client_id,a.client_unit_id,max(a.pi_qty) pi_qty,sum(a.inv_qty) as inv_qty," +
                                        "(max(a.pi_qty) - nvl(sum(a.inv_qty), '0')) as bal_qty from(select pi.vch_num as PI_NO,to_char(pi.vch_date, '" + sgen.Getsqldateformat() + "') pi_date,pi.type,pi.icode," +
                                        "pi.irate,pi.discrate,pi.client_id,pi.client_unit_id,pi.ORDQTY as pi_qty,nvl(iv.qtyout,'0') as inv_qty from itransactionc pi left join itransaction " +
                                        "iv on iv.pi_no = pi.vch_num and iv.potype = '55' and iv.icode=pi.icode and iv.client_unit_id = pi.client_unit_id where substr(pi.type,1,1)='4' and " +
                                        "pi.pur_type='BPI' and pi.client_unit_id = '" + unitid_mst + "' union all select pi.vch_num as PI_NO,to_char(pi.vch_date, '" + sgen.Getsqldateformat() + "') pi_date,pi.type,pi.icode" +
                                        ",pi.irate,pi.discrate,pi.client_id,pi.client_unit_id,pi.ORDQTY as pi_qty,nvl(iv.col11, '0') as close_qty from itransactionc pi left join enx_tab iv " +
                                        "on iv.col12 = pi.vch_num and iv.type = 'PRI' and iv.col7=pi.icode and iv.client_unit_id = pi.client_unit_id where substr(pi.type,1,1)='4' and " +
                                        "pi.pur_type='BPI' and pi.client_unit_id = '" + unitid_mst + "') a group by (a.PI_NO,a.pi_date,a.type,a.icode,a.client_id,a.client_unit_id,a.irate,a.discrate)) " +
                                        "pc on pc.icode = it.icode where (it.icode || to_char(it.vch_date, 'yyyymmdd') || it.type ||pc.PI_NO||pc.type) in ('" + URL + "')";
                                    break;
                                default:
                                    mq = "select distinct (it.icode || to_char(it.vch_date, 'yyyymmdd') || it.type) fstr,it.icode,it.iname,it.cpartno as partno,um.master_name as UOM,nvl(hsn.master_name,'-') as hsn,nvl(hsn.group_name,'0') taxrate," +
                               "nvl(s.closing, 0) AS qtystk,it.amortchrgs,it.matjobwork,'0' mcamt,'0' qtyord,'0' ind_no,'-' ind_date,(case when it.tcs='Y' then nvl(hsn.col1,'0%') else '0%' end) tcsper from item it " +
                               "left join master_setting um on um.master_id = it.uom and um.type = 'UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
                               "left join master_setting hsn on hsn.master_id = it.hsno and hsn.type = 'HSN' and find_in_set(hsn.client_unit_id,it.client_unit_id)=1 " +
                               "left join(select icode,client_unit_id,sum(op) op,sum(pktop) pktop,sum(qtyin) qtyin,sum(qtyout) out," +
                                      "sum(op)+sum(qtyin)-sum(qtyout) closing from (select icode, client_unit_id, nvl(op_2019, 0) op," +
                                      " nvl(pkt_2019, 0) pktop, 0 qtyin, 0 qtyout, 0 pktno from itbal union all select icode, client_unit_id, " +
                                      "sum(to_number(qtyin)) - sum(to_number(qtyout)) op, sum((case when substr(type, 1, 1) in ('0', '1') then" +
                                      " pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktop,sum(to_number(qtyin)) " +
                                      "qtyin,sum(to_number(qtyout)) qtyout,0 pktno from itransaction where trim(store) = 'Y' and " +
                                      "to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and " +
                                      "to_date('" + year_from.Split(' ')[0].Trim() + "','" + sgen.Getsqldateformat() + "')-1 group by icode,client_unit_id union all select icode,client_unit_id," +
                                      "0 as op,0 as pktop,to_number(qtyin) qtyin,to_number(qtyout) qtyout,sum((case when substr(type, 1, 1) in " +
                                      "('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktno from " +
                                      "itransaction where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between " +
                                      "to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and to_date('" + model[0].Col48 + "','" + sgen.Getsqldateformat() + "') " + cond2 + " group by icode,client_unit_id," +
                                      "to_number(qtyin),to_number(qtyout)) a group by icode, client_unit_id) s on it.icode = s.icode " +
                               "and find_in_set(it.client_unit_id, s.client_unit_id)=1 where it.icode || to_char(it.vch_date, 'yyyymmdd') || it.type in ('" + URL + "')";
                                    break;
                            }
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt1.Rows.RemoveAt(0); }
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["Item"] = dt.Rows[i]["fstr"].ToString();
                                    dr["SNo"] = i + 1;
                                    dr["Icode"] = dt.Rows[i]["icode"].ToString();
                                    dr["IName"] = dt.Rows[i]["iname"].ToString();
                                    dr["PARTNO"] = dt.Rows[i]["partno"].ToString();
                                    dr["HSN"] = dt.Rows[i]["hsn"].ToString();
                                    dr["UOM"] = dt.Rows[i]["uom"].ToString();
                                    dr["TaxRate"] = dt.Rows[i]["taxrate"].ToString();
                                    dr["Qty_In_Stock"] = dt.Rows[i]["qtystk"].ToString();
                                    dr["disc_rate"] = "0";
                                    dr["Iamount"] = "0";
                                    dr["taxamount"] = "0";
                                    dr["discamount"] = "0";
                                    dr["lineamount"] = "0";
                                    if (values[1].ToString() == "51")
                                    {
                                        dr["Bal_Qty_Ord"] = dt.Rows[i]["qtyord"].ToString();
                                        dr["delivery_date"] = sgen.server_datetime_local(userCode);
                                        dr["PO_no"] = dt.Rows[i]["po_num"].ToString();
                                        dr["PO_date"] = dt.Rows[i]["po_date"].ToString();
                                        dr["SO_no"] = dt.Rows[i]["so_no"].ToString();
                                        dr["SO_date"] = dt.Rows[i]["so_date"].ToString();
                                        dr["IRate"] = dt.Rows[i]["rate"].ToString();
                                        dr["disc_rate"] = dt.Rows[i]["disc_rate"].ToString();
                                        if (values[0].ToString() == "45")
                                        {
                                            dr["Amort_Chrgs_Perunit"] = dt.Rows[i]["amortchrgs"].ToString();
                                            dr["MAT_CONS_AMT"] = dt.Rows[i]["mcamt"].ToString();
                                            dr["MAT_CONS_PER"] = dt.Rows[i]["mat_cosunit"].ToString();
                                            dr["AMORT_CHRGS_AMOUNT"] = dt.Rows[i]["amrtchrgamt"].ToString();
                                        }
                                    }
                                    if (values[1].ToString() == "52")
                                    {
                                        dr["Bal_Qty_Ord"] = dt.Rows[i]["qtyord"].ToString();
                                        dr["PO_no"] = dt.Rows[i]["po_no"].ToString();
                                        dr["PO_date"] = dt.Rows[i]["po_date"].ToString();
                                        dr["SO_no"] = dt.Rows[i]["so_no"].ToString();
                                        dr["SO_date"] = dt.Rows[i]["so_date"].ToString();
                                        dr["sdl_no"] = dt.Rows[i]["sdl_no"].ToString();
                                        dr["sdl_date"] = dt.Rows[i]["sdl_date"].ToString();
                                        dr["IRate"] = dt.Rows[i]["rate"].ToString();
                                        dr["disc_rate"] = dt.Rows[i]["disc_rate"].ToString();
                                        if (values[0].ToString() == "45")
                                        {
                                            dr["AMORT_CHRGS_PERUNIT"] = dt.Rows[i]["amortchrgs"].ToString();
                                            dr["Mat_Cons_Per"] = dt.Rows[i]["matjobwork"].ToString();
                                            dr["Mat_Cons_Amt"] = dt.Rows[i]["mcamt"].ToString();
                                        }
                                    }
                                    if (values[1].ToString() == "55")
                                    {
                                        dr["Bal_Qty_Ord"] = dt.Rows[i]["bal_qty"].ToString();
                                        dr["qty_inv"] = dt.Rows[i]["bal_qty"].ToString();
                                        dr["IRate"] = dt.Rows[i]["irate"].ToString();
                                        dr["PI_NO"] = dt.Rows[i]["pi_no"].ToString();
                                        dr["PI_DATE"] = dt.Rows[i]["pi_date"].ToString();
                                        dr["remark"] = dt.Rows[i]["iremark"].ToString();
                                        dr["disc_rate"] = dt.Rows[i]["discrate"].ToString();
                                    }
                                    if (values[1].ToString() == "53")
                                    {
                                        dr["PO_no"] = dt.Rows[i]["po_no"].ToString();
                                        dr["PO_date"] = dt.Rows[i]["po_date"].ToString();
                                        dr["SO_no"] = dt.Rows[i]["so_no"].ToString();
                                        dr["SO_date"] = dt.Rows[i]["so_date"].ToString();
                                        dr["sdl_no"] = dt.Rows[i]["sdl_no"].ToString();
                                        dr["sdl_date"] = dt.Rows[i]["sdl_date"].ToString();
                                        dr["dsp_no"] = dt.Rows[i]["Dsp_no"].ToString();
                                        dr["dsp_date"] = dt.Rows[i]["dsp_date"].ToString();
                                        dr["Qty_disp"] = dt.Rows[i]["bal_qty"].ToString();
                                    }
                                    if (values[1].ToString() == "54")
                                    {
                                        if (values[0].ToString() == "45")
                                        {
                                            dr["AMORT_CHRGS_PERUNIT"] = dt.Rows[i]["amortchrgs"].ToString();
                                            dr["Mat_Cons_Per"] = dt.Rows[i]["matjobwork"].ToString();
                                            dr["Mat_Cons_Amt"] = dt.Rows[i]["mcamt"].ToString();
                                        }
                                        if (values[0].ToString() == "46")
                                        {
                                            dr["Tcs_amt"] = "0";
                                            dr["Tcs_per"] = dt.Rows[i]["tcsper"].ToString();
                                        }
                                    }
                                    model[0].dt1.Rows.Add(dr);
                                }
                                model[0].dt1.AcceptChanges();
                            }
                            break;
                        case "CHRGS":
                            mq = "select master_id,master_name from master_setting where (master_id||to_char(vch_date,'yyyymmdd')||type) in ('" + URL + "')";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                int i = 0;
                                if (model[0].LTM1 == null) { model[0].LTM1 = new List<Tmodelmain>(); }
                                if (model[0].LTM1.Count == 0) { model[0].LTM1 = new List<Tmodelmain>(); }
                                else i = model[0].LTM1.Count;
                                foreach (DataRow dr in dtt.Rows)
                                {
                                    i++;
                                    model[0].LTM1.Add(new Tmodelmain
                                    {
                                        Col14 = i.ToString(),
                                        Col15 = dr["master_id"].ToString(),
                                        Col23 = dr["master_name"].ToString(),
                                        Col16 = "0",
                                        Col17 = "0",
                                        Col18 = "0",
                                        Col19 = "0",
                                        Col20 = "0",
                                        Col21 = "0",
                                        Col22 = "0",
                                    });
                                }
                            }
                            break;
                        case "CHRGDEL":
                            if (sgen.GetSession(MyGuid, "sodelrno") != null)
                            {
                                var mrno = sgen.GetSession(MyGuid, "sodelrno").ToString();
                                var LTM = model[0].LTM1;
                                for (int d = 0; d < LTM.Count; d++)
                                {
                                    string chrgno = LTM[d].Col14;
                                    if (chrgno.Trim() == mrno.Trim()) { model[0].LTM1.RemoveAt(d); }
                                }
                                sgen.SetSession(MyGuid, "sodelrno", null);
                            }
                            break;
                        case "RATE":
                            if (sgen.GetSession(MyGuid, "rtrno") == null)
                            {
                                ViewBag.scripCall += "showmsgJS(1,'Rno not defined', 0);";
                                return model;
                            }
                            var rno = sgen.Make_int(sgen.GetSession(MyGuid, "rtrno").ToString());
                            mq = "select master_id DocNo,vch_num,master_name,group_name TaxRate from master_setting where (master_id||to_char(vch_date,'yyyymmdd')||type)='" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                model[0].LTM1[rno - 1].Col13 = dtt.Rows[0]["DocNo"].ToString().Trim();
                                model[0].LTM1[rno - 1].Col27 = dtt.Rows[0]["vch_num"].ToString().Trim();
                                model[0].LTM1[rno - 1].Col28 = dtt.Rows[0]["master_name"].ToString().Trim();
                                var utgst = model[0].Col18.Substring(0, 2).Trim();
                                var pgst = "";
                                if (model[0].Col22 == "Not Registered") pgst = model[0].Col22;
                                else pgst = model[0].Col22.Substring(0, 2).Trim();
                                if ((utgst == pgst) || pgst == "Not Registered")
                                {
                                    var amt = sgen.Make_decimal(model[0].LTM1[rno - 1].Col16);
                                    var rt = sgen.Make_decimal(dtt.Rows[0]["TaxRate"].ToString().Trim().Split('%')[0].Trim());
                                    var amtrt = (amt * rt) / 100;
                                    model[0].LTM1[rno - 1].Col19 = (rt / 2).ToString() + "%";
                                    model[0].LTM1[rno - 1].Col20 = (amtrt / 2).ToString();
                                    model[0].LTM1[rno - 1].Col21 = (rt / 2).ToString() + "%";
                                    model[0].LTM1[rno - 1].Col22 = (amtrt / 2).ToString();
                                }
                                else
                                {
                                    var amt = sgen.Make_decimal(model[0].LTM1[rno - 1].Col16);
                                    var rt = sgen.Make_decimal(dtt.Rows[0]["TaxRate"].ToString().Trim().Split('%')[0].Trim());
                                    var amtrt = (amt * rt) / 100;
                                    model[0].LTM1[rno - 1].Col17 = rt.ToString() + "%";
                                    model[0].LTM1[rno - 1].Col18 = amtrt.ToString();
                                }
                                decimal bamt = sgen.Make_decimal(model[0].Col33);
                                decimal bigst = sgen.Make_decimal(model[0].Col34);
                                decimal bcgst = sgen.Make_decimal(model[0].Col35);
                                decimal bsgst = sgen.Make_decimal(model[0].Col36);
                                decimal tamt = 0, tigst = 0, tcgst = 0, tsgst = 0;
                                for (int i = 0; i < model[0].LTM1.Count; i++)
                                {
                                    tamt = tamt + sgen.Make_decimal(model[0].LTM1[i].Col16);
                                    tigst = tigst + sgen.Make_decimal(model[0].LTM1[i].Col18);
                                    tcgst = tcgst + sgen.Make_decimal(model[0].LTM1[i].Col20);
                                    tsgst = tsgst + sgen.Make_decimal(model[0].LTM1[i].Col22);
                                }
                                model[0].Col37 = (bamt + tamt).ToString();
                                model[0].Col38 = (bigst + tigst).ToString();
                                model[0].Col39 = (bcgst + tcgst).ToString();
                                model[0].Col40 = (bsgst + tsgst).ToString();
                                model[0].Col62 = (bamt + tamt + bigst + tigst + bcgst + tcgst + bsgst + tsgst).ToString();//netamt
                            }
                            break;
                    }
                    break;
                #endregion
                #region Sales Order
                case "s_order":
                    switch (btnval.ToUpper())
                    {
                        case "PRINT":
                            mq = "select (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) as fstr,p.vch_num SO_number,to_char(p.vch_date, '" + sgen.Getsqldateformat() + "') SO_date,c.c_name as Party_Name,c.c_gstin as Party_Gstin,c.addr as Party_Address,nvl(sf.c_name, '-') as From_Name,nvl(sf.c_gstin, '-') as From_Gstin,tp.master_name as Against,nvl(sf.addr, '-') FromAddress,nvl(st.c_name, '-') as To_Name,nvl(st.c_gstin, '-') as To_Gstin,nvl(st.addr, '-') ToAddress,p.pur_type Purchase_Type,pt.master_name as payment_tems,p.totremark,p.cond as term_condition,p.gothrchrg as pono,to_char(p.date1,'" + sgen.Getsqldateformat() + "') as podate, p.icode ItemCode, p.iname ItemName,p.cpartno PartNo, p.uom UOM, p.hsno HSN, p.indno as SO_Mode,nvl(p.pino,'-') as pino,to_number(NVL(p.qtystk,'0')) Stock_Qty,to_number(NVL(p.qtyord,'0')) Order_Qty" +
                                ",to_number(NVL(p.irate,'0')) ItemRate,p.taxrate TaxRate,to_number(NVL(iamount,'0')) Item_Amt,to_number(NVL(p.taxamt,'0')) taxamt," +
                                "p.disctype Discount_Type,to_number(NVL(p.discrate,'0')) Discount_Rate,to_number(NVL(p.discamt,'0')) Discount_Amt," +
                                "to_number(NVL(p.lineamount,'0')) LineAmt,to_char(p.dlv_date, '" + sgen.Getsqldateformat() + "') Delivery_Date,to_number(NVL(p.gserchrg,'0')) IGST," +
                                " to_number(NVL(p.gloadchrg,'0')) SGST, to_number(NVL(p.gamc,'0')) CGST, to_number(NVL(p.basicamt,'0')) BasicAmt,to_number(NVL(p.ginstlchrg,'0'))" +
                                " GrossAmt,to_number(NVL(p.gtaxamt,'0')) as Net_Amount from purchasesc p inner join clients_mst c on p.acode = c.vch_num and find_in_set(c.client_unit_id, p.client_unit_id)=1 and c.type = 'BCD' and substr(c.vch_num,0,3)='303' inner join master_setting tp on tp.master_id=p.type and tp.type='KPO' and substr(tp.master_id,1,1)='4' and find_in_set(tp.client_unit_id,p.client_unit_id)=1 inner join master_setting pt on pt.master_id=p.pay_term and pt.type='PTM' and find_in_set(pt.client_unit_id,p.client_unit_id)=1 left join clients_mst sf on p.shipfrom = sf.vch_num and find_in_set(sf.client_unit_id, p.client_unit_id)=1 and sf.type = 'BCD' left join clients_mst st on p.shipto = st.vch_num and find_in_set(st.client_unit_id, p.client_unit_id)=1 and st.type = 'BCD' and substr(st.vch_num,0,3)='303' where (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) = '" + URL + "'";
                            dt = sgen.getdata(userCode, mq);
                            TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1 = cmd_Fun.payterm(userCode, unitid_mst, out defcall);
                            TempData[MyGuid + "_Tlist2"] = model[0].TList2 = mod2 = cmd_Fun.priceterm(userCode, unitid_mst);
                            TempData[MyGuid + "_Tlist3"] = model[0].TList3 = mod3 = cmd_Fun.transportmode(userCode, unitid_mst);
                            mod5.Add(new SelectListItem { Text = "Open Qty SO", Value = "open" });
                            mod5.Add(new SelectListItem { Text = "Fix Qty SO", Value = "fix" });
                            TempData[MyGuid + "_Tlist5"] = model[0].TList5 = mod5;
                            if (dt.Rows.Count > 0)
                            {
                                DataSet ds = new DataSet();
                                dt.TableName = "prepcur";
                                ds.Tables.Add(dt);
                                sgen.open_report_byDs_xml(userCode, ds, "sales_order_1", "Sales Order");
                                ViewBag.scripCall += "showRptnew('Sales Order');disableForm();";
                            }
                            else
                            {
                                ViewBag.scripCall = "showmsgJS(1, 'Data Not Exist', 2);";
                            }
                            break;
                        case "EDIT":
                        case "BDCOPYSO":
                            mq = "select a.*,to_char(convert_tz(vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') vch_date1," +
                            "to_char(dlv_date,'" + sgen.Getsqldateformat() + "') dlv_date1," +
                            "to_char(date1,'" + sgen.Getsqldateformat() + "') date11," +
                            "to_char(date2,'" + sgen.Getsqldateformat() + "') date12,to_char(date3,'" + sgen.Getsqldateformat() + "') date13," +
                            "to_char(date4,'" + sgen.Getsqldateformat() + "') date14,to_char(date5,'" + sgen.Getsqldateformat() + "') date15" +
                            ",to_char(pidate,'" + sgen.Getsqldateformat() + "') pidate1 from purchasesc a " +
                            "where client_id||client_unit_id||vch_num||to_char(vch_date, 'yyyymmdd')|| type= '" + URL + "'";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1 = cmd_Fun.payterm(userCode, unitid_mst, out defcall);
                                TempData[MyGuid + "_Tlist2"] = model[0].TList2 = mod2 = cmd_Fun.priceterm(userCode, unitid_mst);
                                TempData[MyGuid + "_Tlist3"] = model[0].TList3 = mod3 = cmd_Fun.transportmode(userCode, unitid_mst);
                                mod5.Add(new SelectListItem { Text = "Open Qty SO", Value = "open" });
                                mod5.Add(new SelectListItem { Text = "Fix Qty SO", Value = "fix" });
                                TempData[MyGuid + "_Tlist5"] = model[0].TList5 = mod5;

                                if (btnval.ToUpper().Equals("EDIT") || btnval.ToUpper().Equals("VIEW"))
                                {
                                    sgen.SetSession(MyGuid, "EDMODE", "Y");
                                    model[0].Col1 = dt.Rows[0]["client_id"].ToString();
                                    model[0].Col2 = dt.Rows[0]["client_unit_id"].ToString();
                                    model[0].Col3 = dt.Rows[0]["ent_by"].ToString();
                                    model[0].Col4 = dt.Rows[0]["ent_date"].ToString();
                                    model[0].Col5 = dt.Rows[0]["edit_by"].ToString();
                                    model[0].Col6 = dt.Rows[0]["edit_date"].ToString();
                                    //model[0].Col7 = dt.Rows[0]["rec_id"].ToString();
                                    model[0].Col8 = "client_id||client_unit_id||vch_num|| To_Char(vch_date, 'yyyymmdd')|| type = '" + URL + "'";
                                    model[0].Col10 = model[0].Col10;
                                    model[0].Col11 = model[0].Col11;
                                    model[0].Col13 = "Update";
                                    model[0].Col100 = "Update & New";
                                    model[0].Col121 = "U";
                                    model[0].Col122 = "<u>U</u>pdate";
                                    model[0].Col123 = "Update & Ne<u>w</u>";
                                    model[0].Col14 = model[0].Col14;
                                    model[0].Col15 = model[0].Col15;
                                    model[0].Col16 = dt.Rows[0]["vch_num"].ToString();
                                    model[0].Col47 = dt.Rows[0]["vch_num"].ToString();
                                    model[0].Col48 = dt.Rows[0]["vch_date1"].ToString();
                                    model[0].Col12 = dt.Rows[0]["type"].ToString();
                                    sgen.SetSession(MyGuid, "BDSOORDTYPE", dt.Rows[0]["type"].ToString());
                                    model[0].Col54 = dt.Rows[0]["pur_type"].ToString();
                                    model[0].Col9 = sgen.seekval(userCode, "select upper(master_name) master_name from master_setting where master_id='" + dt.Rows[0]["type"].ToString() + "' and type='KPO'", "master_name");
                                }
                                else
                                {
                                    sgen.SetSession(MyGuid, "EDMODE", "N");
                                }
                                String[] L1 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["pay_term"].ToString()).Distinct()).Split(',');
                                String[] L2 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["price_term"].ToString()).Distinct()).Split(',');
                                String[] L3 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["tmode"].ToString()).Distinct()).Split(',');
                                //String[] L4 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["disc_rate"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems1 = L1;
                                model[0].SelectedItems2 = L2;
                                model[0].SelectedItems3 = L3;
                                //model[0].SelectedItems4 = L4;
                                mq1 = "select a.c_name as name,a.c_gstin as gstin,a.addr as Address,a.vch_num,a.tor,nvl(ba.country_name,'-') as country_name," +
"nvl(ba.state_name,'-') state_name,nvl(ba.city_name,'-') as city_name,a.pincode_2 from clients_mst a left join country_state ba on ba.rec_id = a.city2 where find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 and a.type='BCD' and substr(a.vch_num,0,3)='303' and a.vch_num='" + dt.Rows[0]["acode"].ToString() + "'";
                                DataTable dtp = sgen.getdata(userCode, mq1);
                                if (dtp.Rows.Count > 0)
                                {
                                    model[0].Col49 = dtp.Rows[0]["vch_num"].ToString();
                                    model[0].Col19 = dtp.Rows[0]["name"].ToString();//brijesh
                                    model[0].Col21 = dtp.Rows[0]["address"].ToString();
                                    //model[0].Col20 = dtp.Rows[0]["gstin"].ToString();//brijesh
                                    model[0].Col20 = dtp.Rows[0]["name"].ToString();//kc
                                    model[0].Col22 = dtp.Rows[0]["gstin"].ToString();
                                    model[0].Col52 = dtp.Rows[0]["tor"].ToString();
                                    model[0].Col101 = dtp.Rows[0]["city_name"].ToString();
                                    model[0].Col102 = dtp.Rows[0]["state_name"].ToString();
                                    model[0].Col103 = dtp.Rows[0]["country_name"].ToString();
                                    model[0].Col104 = dtp.Rows[0]["pincode_2"].ToString();
                                    sgen.SetSession(MyGuid, "BDSOPARTY", dtp.Rows[0]["vch_num"].ToString());
                                }
                                mq1 = "select a.c_name as name,a.c_gstin as gstin,a.addr as Address,a.vch_num from clients_mst a where a.vch_num='" + dt.Rows[0]["shipfrom"].ToString() + "' " +
                                  "and find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 and a.type='BCD' and substr(a.vch_num,0,3)='303'";
                                dtp = sgen.getdata(userCode, mq1);
                                if (dtp.Rows.Count > 0)
                                {
                                    model[0].Col50 = dtp.Rows[0]["vch_num"].ToString();
                                    model[0].Col23 = dtp.Rows[0]["name"].ToString();
                                    model[0].Col24 = dtp.Rows[0]["address"].ToString();
                                    model[0].Col25 = dtp.Rows[0]["gstin"].ToString();
                                }
                                mq1 = "select a.c_name as name,a.c_gstin as gstin,a.addr as Address,a.vch_num from clients_mst a where a.vch_num='" + dt.Rows[0]["shipto"].ToString() + "' " +
                              "and find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 and a.type='BCD' and substr(a.vch_num,0,3)='303'";
                                dtp = sgen.getdata(userCode, mq1);
                                if (dtp.Rows.Count > 0)
                                {
                                    model[0].Col51 = dtp.Rows[0]["vch_num"].ToString();
                                    model[0].Col26 = dtp.Rows[0]["name"].ToString();
                                    model[0].Col27 = dtp.Rows[0]["address"].ToString();
                                    model[0].Col28 = dtp.Rows[0]["gstin"].ToString();
                                }
                                model[0].Col31 = dt.Rows[0]["totremark"].ToString();
                                model[0].Col32 = dt.Rows[0]["cond"].ToString();
                                model[0].Col33 = dt.Rows[0]["basicamt"].ToString();
                                model[0].Col37 = dt.Rows[0]["ginstlchrg"].ToString();
                                model[0].Col38 = dt.Rows[0]["gserchrg"].ToString();
                                model[0].Col39 = dt.Rows[0]["gamc"].ToString();
                                model[0].Col40 = dt.Rows[0]["gloadchrg"].ToString();
                                model[0].Col56 = dt.Rows[0]["date12"].ToString();
                                model[0].Col80 = dt.Rows[0]["sotype"].ToString();
                                DataTable gdt = new DataTable();
                                if (model[0].Col80 == "75")
                                {
                                    if (model[0].Col12 == "45")
                                    {
                                        gdt = sgen.getdata(userCode, "select '' Item,'1' as  SNo ,'-' as Icode,'-' as IName,'-' PARTNO,'-'  HSN,'-' as UOM,'0' as TaxRate,'0' as  Qty_in_stock,'0' as Qty_Ord,'0' as IRate," +
                                           "'-' disc_type,'0' as disc_rate,'0' IAmount,'0' TaxAmount,'0' discAmount,'0' LineAmount,'-' as delivery_date,'-' as Remark,'0' as Amort_Chrgs_Perunit,'' Amort_Chrgs_Amount,'-' as PI_NO,'-' as PI_DATE from dual");
                                    }
                                    else if (model[0].Col12 == "46")
                                    {
                                        gdt = sgen.getdata(userCode, "select '' Item,'1' as  SNo ,'-' as Icode,'-' as IName,'-' PARTNO,'-'  HSN,'-' as UOM,'0' as TaxRate,'0' as  Qty_in_stock,'0' as Qty_Ord,'0' as IRate," +
                                                     "'-' disc_type,'0' as disc_rate,'0' IAmount,'0' TaxAmount,'0' discAmount,'0' LineAmount,'-' as delivery_date,'-' as Remark,'-' as PI_NO,'-' as PI_DATE,'0' Tcs_amt,'0%' Tcs_per from dual");
                                    }
                                    else
                                    {
                                        gdt = sgen.getdata(userCode, "select '' Item,'1' as  SNo ,'-' as Icode,'-' as IName,'-' PARTNO,'-'  HSN,'-' as UOM,'0' as TaxRate,'0' as  Qty_in_stock,'0' as Qty_Ord,'0' as IRate," +
                                          "'-' disc_type,'0' as disc_rate,'0' IAmount,'0' TaxAmount,'0' discAmount,'0' LineAmount,'-' as delivery_date,'-' as PI_NO,'-' as PI_DATE,'-' as Remark from dual");
                                    }
                                    model[0].dt1 = gdt;
                                    sgen.SetSession(MyGuid, "BSO_DT", gdt.Copy());
                                }
                                else
                                {
                                    if (model[0].Col12 == "45")
                                    {
                                        gdt = sgen.getdata(userCode, "select '' Item,'1' as  SNo ,'-' as Icode,'-' as IName,'-' PARTNO,'-'  HSN,'-' as UOM,'0' as TaxRate,'0' as  Qty_in_stock,'0' as Qty_Ord,'0' as IRate," +
                                                                           "'-' disc_type,'0' as disc_rate,'0' IAmount,'0' TaxAmount,'0' discAmount,'0' LineAmount,'-' as delivery_date,'-' as Remark,'0' as Amort_Chrgs_Perunit,'0' Amort_Chrgs_Amount,'0' Mat_Cons_Per,'0' Mat_Cons_Amt from dual");
                                    }
                                    else if (model[0].Col12 == "46")
                                    {
                                        gdt = sgen.getdata(userCode, "select '' Item,'1' as  SNo ,'-' as Icode,'-' as IName,'-' PARTNO,'-'  HSN,'-' as UOM,'0' as TaxRate,'0' as  Qty_in_stock,'0' as Qty_Ord,'0' as IRate," +
                                                     "'-' disc_type,'0' as disc_rate,'0' IAmount,'0' TaxAmount,'0' discAmount,'0' LineAmount,'-' as delivery_date,'-' as Remark,'0' Tcs_amt,'0%' Tcs_per from dual");
                                    }
                                    else
                                    {
                                        gdt = sgen.getdata(userCode, "select '' Item,'1' as  SNo ,'-' as Icode,'-' as IName,'-' PARTNO,'-'  HSN,'-' as UOM,'0' as TaxRate,'0' as  Qty_in_stock,'0' as Qty_Ord,'0' as IRate," +
                                                                                                               "'-' disc_type,'0' as disc_rate,'0' IAmount,'0' TaxAmount,'0' discAmount,'0' LineAmount,'-' as delivery_date,'-' as Remark from dual");
                                    }
                                    model[0].dt1 = gdt;
                                    model[0].Col81 = "WITHOUT PI";
                                    sgen.SetSession(MyGuid, "BSO_DT", gdt.Copy());
                                }
                                sgen.SetSession(MyGuid, "BDSOTYPE", dt.Rows[0]["sotype"].ToString());
                                String[] L5 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["indno"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems5 = L5;
                                model[0].Col62 = dt.Rows[0]["gtaxamt"].ToString();
                                model[0].Col59 = dt.Rows[0]["gothrchrg"].ToString();
                                model[0].Col60 = dt.Rows[0]["date11"].ToString();
                                model[0].Col70 = dt.Rows[0]["col1"].ToString();
                                model[0].Col71 = dt.Rows[0]["col2"].ToString();
                                model[0].Col72 = dt.Rows[0]["col3"].ToString();
                                model[0].Col76 = dt.Rows[0]["col4"].ToString();
                                model[0].Col77 = dt.Rows[0]["col5"].ToString();
                                model[0].Col78 = dt.Rows[0]["col6"].ToString();
                                model[0].Col73 = dt.Rows[0]["date13"].ToString();
                                model[0].Col74 = dt.Rows[0]["date14"].ToString();
                                model[0].Col75 = dt.Rows[0]["date15"].ToString();
                                model[0].dt1 = model[0].dt1.Clone();
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["SNo"] = i + 1;
                                    dr["Icode"] = dt.Rows[i]["icode"].ToString();
                                    dr["IName"] = dt.Rows[i]["iname"].ToString();
                                    dr["PARTNO"] = dt.Rows[i]["cpartno"].ToString();
                                    dr["HSN"] = dt.Rows[i]["hsno"].ToString();
                                    dr["UOM"] = dt.Rows[i]["uom"].ToString();
                                    dr["TaxRate"] = dt.Rows[i]["taxrate"].ToString();
                                    dr["Qty_in_stock"] = dt.Rows[i]["qtystk"].ToString();
                                    dr["Qty_Ord"] = dt.Rows[i]["qtyord"].ToString();
                                    dr["delivery_date"] = dt.Rows[i]["dlv_date1"].ToString();
                                    dr["IRate"] = dt.Rows[i]["irate"].ToString();
                                    if (model[0].Col80 == "75")
                                    {
                                        dr["PI_NO"] = dt.Rows[i]["pino"].ToString();
                                        dr["PI_DATE"] = dt.Rows[i]["pidate1"].ToString();
                                    }
                                    if (model[0].Col12 == "45")
                                    {
                                        dr["MAT_CONS_AMT"] = dt.Rows[i]["matjobamt"].ToString();
                                        dr["MAT_CONS_PER"] = dt.Rows[i]["matjoper"].ToString();
                                        dr["AMORT_CHRGS_AMOUNT"] = dt.Rows[i]["amrt_amount"].ToString();
                                        dr["AMORT_CHRGS_PERUNIT"] = dt.Rows[i]["amort_unit"].ToString();
                                    }
                                    else if (model[0].Col12 == "46")
                                    {
                                        dr["Tcs_amt"] = dt.Rows[i]["tcsamt"].ToString();
                                        dr["Tcs_per"] = dt.Rows[i]["tcsper"].ToString();
                                    }
                                    dr["disc_type"] = dt.Rows[i]["disctype"].ToString();
                                    dr["disc_rate"] = dt.Rows[i]["discrate"].ToString();
                                    dr["Iamount"] = dt.Rows[i]["Iamount"].ToString();
                                    dr["taxamount"] = dt.Rows[i]["taxamt"].ToString();
                                    dr["discamount"] = dt.Rows[i]["discamt"].ToString();
                                    dr["lineamount"] = dt.Rows[i]["lineamount"].ToString();
                                    dr["Remark"] = dt.Rows[i]["iremark"].ToString();
                                    model[0].dt1.Rows.Add(dr);
                                }
                                model[0].dt1.AcceptChanges();
                                //other charges LTM
                                mq1 = "select ch.master_name chrgname,en.col1,en.col2,en.col3,en.col4,en.col5,en.col6,en.col7,en.col8,en.col9,en.r_no from enx_tab en " +
                                    "inner join master_setting ch on en.col1=ch.master_id and ch.type='MR0' and find_in_set(ch.client_unit_id,en.client_unit_id)=1 " +
                                    "where (en.client_id||en.client_unit_id||en.vch_num||to_char(en.vch_date, 'yyyymmdd')|| en.type) = '" + URL + "'";
                                dt = sgen.getdata(userCode, mq1);
                                if (dt.Rows.Count > 0)
                                {
                                    model[0].LTM1 = new List<Tmodelmain>();
                                    foreach (DataRow dr in dt.Rows)
                                    {
                                        model[0].LTM1.Add(new Tmodelmain
                                        {
                                            Col13 = dr["col3"].ToString(),//chrgrtid
                                            Col14 = dr["r_no"].ToString(),//rno
                                            Col15 = dr["col1"].ToString(),//chrgid
                                            Col16 = dr["col2"].ToString(),//chrgamt
                                            Col17 = dr["col4"].ToString(),//igstrt
                                            Col18 = dr["col5"].ToString(),//igstamt
                                            Col19 = dr["col6"].ToString(),//cgstrt
                                            Col20 = dr["col7"].ToString(),//cgstamt
                                            Col21 = dr["col8"].ToString(),//sgstrt
                                            Col22 = dr["col9"].ToString(),//sgstamt
                                            Col23 = dr["chrgname"].ToString(),//chrgname
                                        });
                                    }
                                }
                            }
                            break;
                        case "BDSOTYPE":
                            mq = "select * from (select '001' fstr,'75' master_id,'WITH PI' master_name from dual union all" +
                                " select '002' fstr,'76' master_id,'WITHOUT PI' master_name from dual) a where fstr='" + URL + "'";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                model[0].Col80 = dt.Rows[0]["master_id"].ToString();
                                model[0].Col81 = dt.Rows[0]["master_name"].ToString();
                                sgen.SetSession(MyGuid, "BDSOTYPE", dt.Rows[0]["master_id"].ToString());
                                DataTable gdt = new DataTable();
                                if (model[0].Col80 == "75")
                                {
                                    if (model[0].Col12 == "45")
                                    {
                                        gdt = sgen.getdata(userCode, "select '' Item,'1' as  SNo ,'-' as Icode,'-' as IName,'-' PARTNO,'-'  HSN,'-' as UOM,'0' as TaxRate,'0' as  Qty_in_stock,'0' as Qty_Ord,'0' as IRate," +
                                           "'-' disc_type,'0' as disc_rate,'0' IAmount,'0' TaxAmount,'0' discAmount,'0' LineAmount,'-' as delivery_date,'-' as Remark,'-' as PI_NO,'-' as PI_DATE," +
                                           "'0' as Amort_Chrgs_Perunit,'0' Amort_Chrgs_Amount,'0' Mat_Cons_Per,'0' Mat_Cons_Amt from dual");
                                    }
                                    else if (model[0].Col12 == "46")
                                    {
                                        gdt = sgen.getdata(userCode, "select '' Item,'1' as  SNo ,'-' as Icode,'-' as IName,'-' PARTNO,'-'  HSN,'-' as UOM,'0' as TaxRate,'0' as  Qty_in_stock,'0' as Qty_Ord,'0' as IRate," +
                                                     "'-' disc_type,'0' as disc_rate,'0' IAmount,'0' TaxAmount,'0' discAmount,'0' LineAmount,'-' as delivery_date,'-' as Remark,'-' as PI_NO,'-' as PI_DATE,'0' Tcs_amt,'0%' Tcs_per from dual");
                                    }
                                    else
                                    {
                                        gdt = sgen.getdata(userCode, "select '' Item,'1' as  SNo ,'-' as Icode,'-' as IName,'-' PARTNO,'-'  HSN,'-' as UOM,'0' as TaxRate,'0' as  Qty_in_stock,'0' as Qty_Ord,'0' as IRate," +
                                          "'-' disc_type,'0' as disc_rate,'0' IAmount,'0' TaxAmount,'0' discAmount,'0' LineAmount,'-' as delivery_date,'-' as PI_NO,'-' as PI_DATE,'-' as Remark from dual");
                                    }
                                    model[0].dt1 = gdt;
                                    sgen.SetSession(MyGuid, "BSO_DT", gdt.Copy());

                                    Make_query(viewName.ToLower(), "Select PARTY", "PARTY", "1", "", "", MyGuid);

                                    ViewBag.scripCall = "callFoo('Select PARTY');";
                                }
                                else
                                {
                                    if (model[0].Col12 == "45")
                                    {
                                        gdt = sgen.getdata(userCode, "select '' Item,'1' as  SNo ,'-' as Icode,'-' as IName,'-' PARTNO,'-'  HSN,'-' as UOM,'0' as TaxRate,'0' as  Qty_in_stock,'0' as Qty_Ord,'0' as IRate," +
                                                                           "'-' disc_type,'0' as disc_rate,'0' IAmount,'0' TaxAmount,'0' discAmount,'0' LineAmount,'-' as delivery_date,'-' as Remark,'0' as Amort_Chrgs_Perunit,'0' Amort_Chrgs_Amount,'0' Mat_Cons_Per,'0' Mat_Cons_Amt from dual");
                                    }
                                    else if (model[0].Col12 == "46")
                                    {
                                        gdt = sgen.getdata(userCode, "select '' Item,'1' as  SNo ,'-' as Icode,'-' as IName,'-' PARTNO,'-'  HSN,'-' as UOM,'0' as TaxRate,'0' as  Qty_in_stock,'0' as Qty_Ord,'0' as IRate," +
                                                     "'-' disc_type,'0' as disc_rate,'0' IAmount,'0' TaxAmount,'0' discAmount,'0' LineAmount,'-' as delivery_date,'-' as Remark,'0' Tcs_amt,'0%' Tcs_per from dual");
                                    }
                                    else
                                    {
                                        gdt = sgen.getdata(userCode, "select '' Item,'1' as  SNo ,'-' as Icode,'-' as IName,'-' PARTNO,'-'  HSN,'-' as UOM,'0' as TaxRate,'0' as  Qty_in_stock,'0' as Qty_Ord,'0' as IRate," +
                                                                                                               "'-' disc_type,'0' as disc_rate,'0' IAmount,'0' TaxAmount,'0' discAmount,'0' LineAmount,'-' as delivery_date,'-' as Remark from dual");
                                    }
                                    model[0].dt1 = gdt;
                                    sgen.SetSession(MyGuid, "BSO_DT", gdt.Copy());
                                }
                            }
                            break;
                        case "NEW":
                            mq = "select master_id,upper(master_name) master_name,to_char(utc_timestamp(),'" + sgen.Getsqldateformat() + "') po_date " +
                                "from master_Setting where master_id||To_Char(vch_date, 'yyyymmdd')||type = '" + URL + "' ";

                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "EDMODE", "N");
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                                ViewBag.scripCall = "enableForm();";
                                model[0].Col48 = dt.Rows[0]["po_date"].ToString();
                                model[0].Col12 = dt.Rows[0]["master_id"].ToString();
                                sgen.SetSession(MyGuid, "BDSOORDTYPE", dt.Rows[0]["master_id"].ToString());
                                model[0].Col9 = dt.Rows[0]["master_name"].ToString();
                                mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a " +
                                    "where type='" + dt.Rows[0]["master_id"].ToString() + "'" + model[0].Col11.Trim() + " and pur_type='NPI'";
                                vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                                model[0].Col47 = vch_num;
                                model[0].Col16 = vch_num;
                                model[0].Col31 = "-";
                                model[0].Col32 = "-";
                                model[0].Col17 = "1";
                                model[0].Col100 = "Save & New";
                                model[0].Col121 = "S";
                                model[0].Col122 = "<u>S</u>ave";
                                model[0].Col123 = "Save & Ne<u>w</u>";
                                TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1 = cmd_Fun.payterm(userCode, unitid_mst, out defcall);
                                TempData[MyGuid + "_Tlist2"] = model[0].TList2 = mod2 = cmd_Fun.priceterm(userCode, unitid_mst);
                                TempData[MyGuid + "_Tlist3"] = model[0].TList3 = mod3 = cmd_Fun.transportmode(userCode, unitid_mst);
                                mod5.Add(new SelectListItem { Text = "Open Qty SO", Value = "open" });
                                mod5.Add(new SelectListItem { Text = "Fix Qty SO", Value = "fix" });
                                TempData[MyGuid + "_Tlist5"] = model[0].TList5 = mod5;
                                model[0].SelectedItems1 = new string[] { "" };
                                model[0].SelectedItems2 = new string[] { "" };
                                model[0].SelectedItems3 = new string[] { "" };
                                model[0].SelectedItems4 = new string[] { "" };
                                model[0].SelectedItems5 = new string[] { "" };

                                Make_query(viewName.ToLower(), "Select SO Type", "BDSOTYPE", "1", "", "", MyGuid);
                                ViewBag.scripCall = "callFoo('Select SO Type');";
                            }
                            break;
                        case "PARTY":
                            mq = "select a.c_name as name,a.c_gstin as gstin,a.addr as address,a.vch_num,a.tor,nvl(ba.country_name,'-') as country_name," +
"nvl(ba.state_name,'-') state_name,nvl(ba.city_name,'-') as city_name,a.pincode_2,a.pay_term from clients_mst a left join country_state ba on ba.rec_id = a.city2  " +
                            "where a.vch_num||To_Char(a.vch_date, 'yyyymmdd')|| a.type = '" + URL + "'";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1 = cmd_Fun.payterm(userCode, unitid_mst, out defcall);
                                model[0].Col49 = dt.Rows[0]["vch_num"].ToString();
                                model[0].Col20 = dt.Rows[0]["name"].ToString();
                                model[0].Col21 = dt.Rows[0]["address"].ToString();
                                model[0].Col22 = dt.Rows[0]["gstin"].ToString();
                                model[0].Col52 = dt.Rows[0]["tor"].ToString();
                                model[0].Col101 = dt.Rows[0]["city_name"].ToString();
                                model[0].Col102 = dt.Rows[0]["state_name"].ToString();
                                model[0].Col103 = dt.Rows[0]["country_name"].ToString();
                                model[0].Col104 = dt.Rows[0]["pincode_2"].ToString();
                                String[] L1 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["pay_term"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems1 = L1;
                                ViewBag.vimport = "";
                                sgen.SetSession(MyGuid, "BDSOPARTY", dt.Rows[0]["vch_num"].ToString());
                            }
                            break;
                        case "PARTYFRM":
                            mq = "select a.c_name as name,a.c_gstin as gstin,a.addr as Address,a.vch_num from clients_mst a " +
                                "where a.vch_num||to_char(a.vch_date, 'yyyymmdd')|| a.type = '" + URL + "'";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                model[0].Col50 = dt.Rows[0]["vch_num"].ToString();
                                model[0].Col23 = dt.Rows[0]["name"].ToString();
                                model[0].Col24 = dt.Rows[0]["address"].ToString();
                                model[0].Col25 = dt.Rows[0]["gstin"].ToString();
                            }
                            break;
                        case "PARTYTO":
                            mq = "select a.c_name as name,a.c_gstin as gstin,a.addr as Address,a.vch_num from clients_mst a " +
                                "where a.vch_num||to_char(a.vch_date, 'yyyymmdd')|| a.type = '" + URL + "'";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                model[0].Col51 = dt.Rows[0]["vch_num"].ToString();
                                model[0].Col26 = dt.Rows[0]["name"].ToString();
                                model[0].Col27 = dt.Rows[0]["address"].ToString();
                                model[0].Col28 = dt.Rows[0]["gstin"].ToString();
                            }
                            break;
                        case "ITEM":
                            if (model[0].Col80 == "75")
                            {
                                mq = "select pi.vch_num||it.icode||to_char(it.vch_date,'yyyymmdd')||it.type as fstr,it.icode as Icode,it.iname as Iname" +
                                    ",it.cpartno Partno,um.master_name as UOM,nvl(it.amortchrgs,'0') amortchrgs,nvl(it.matjobwork,'0') matjobwork,'0' mcamt,pi.irate,nvl((case when it.tcs='Y' then nvl(hsn.col1,'0%') else '0%' end),'0') tcsper,pi.discrate,pi.disctype,nvl(hsn.master_name,'-') as hsn,nvl(hsn.group_name,'0') taxrate,pi.ordqty Order_qqty,(pi.ordqty-nvl(uf.used_qty,0)) as" +
                                    " qtyord,'0' as tcsamt,pi.vch_num as pi_no,to_char(pi.vch_date,'" + sgen.Getsqldateformat() + "') as pi_date, nvl(s.closing, '0') as qtystk from item it left join " +
                                    "master_setting um on um.master_id = it.uom and um.type = 'UMM' and " +
                                    "find_in_set(um.client_unit_id, it.client_unit_id)= 1 left join master_setting hsn on hsn.master_id = it.hsno and hsn.type = 'HSN' and " +
                                    "find_in_set(hsn.client_unit_id, it.client_unit_id)= 1 left join(select icode,client_unit_id,sum(op) op,sum(pktop) pktop,sum(qtyin) qtyin,sum(qtyout) out," +
                                      "sum(op)+sum(qtyin)-sum(qtyout) closing from (select icode, client_unit_id, nvl(op_2019, 0) op," +
                                      " nvl(pkt_2019, 0) pktop, 0 qtyin, 0 qtyout, 0 pktno from itbal union all select icode, client_unit_id, " +
                                      "sum(to_number(qtyin)) - sum(to_number(qtyout)) op, sum((case when substr(type, 1, 1) in ('0', '1') then" +
                                      " pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktop,sum(to_number(qtyin)) " +
                                      "qtyin,sum(to_number(qtyout)) qtyout,0 pktno from itransaction where trim(store) = 'Y' and " +
                                      "to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and " +
                                      "to_date('" + year_from.Split(' ')[0].Trim() + "','" + sgen.Getsqldateformat() + "')-1 group by icode,client_unit_id union all select icode,client_unit_id," +
                                      "0 as op,0 as pktop,to_number(qtyin) qtyin,to_number(qtyout) qtyout,sum((case when substr(type, 1, 1) in " +
                                      "('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktno from " +
                                      "itransaction where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between " +
                                      "to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and to_date('" + model[0].Col48 + "','" + sgen.Getsqldateformat() + "') group by icode,client_unit_id," +
                                      "to_number(qtyin),to_number(qtyout)) a group by icode, client_unit_id) s on it.icode = s.icode and find_in_set(it.client_unit_id, s.client_unit_id)=1" +
                                    " inner join itransactionc pi on it.icode = pi.icode and substr(pi.type,1,1)='4' and pi.pur_type='BPI' and " +
                                    "find_in_set(it.client_unit_id,pi.client_unit_id)=1 inner join clients_mst c on pi.acode = c.vch_num and find_in_set(c.client_unit_id, pi.client_unit_id)=1 and c.type = 'BCD' left join (select sum(qtyord) as used_qty ,icode,pino,type from purchasesc" +
                                    " where client_unit_id = '" + unitid_mst + "' and substr(type,1,1)='4' and pur_type='NPI' and sotype='75' group by icode,pino,type) uf on uf.pino" +
                                    " = pi.vch_num and uf.icode=pi.icode and pi.type = uf.type where pi.vch_num || it.icode || to_char(it.vch_date, 'yyyymmdd') || it.type in ('" + URL + "')";
                                //mq = "select it.client_id||it.client_unit_id||pi.vch_num||it.icode||to_char(it.vch_date,'yyyymmdd')||it.type as fstr,it.icode as Icode,it.iname as Iname,it.cpartno Partno, um.master_name as UOM,hsn.master_name as hsn,hsn.group_name taxrate, pi.vch_num as pi_no,to_char(pi.vch_date, '" + sgen.Getsqldateformat() + "') as pi_date, nvl(s.closing, '0') as qty_in_stock from item it left join master_setting um on um.master_id = it.uom and um.type = 'UMM' and find_in_set(um.client_id, it.client_id) = 1 and find_in_set(um.client_unit_id, it.client_unit_id)= 1 left join master_setting hsn on hsn.master_id = it.hsno and hsn.type = 'HSN' and find_in_set(hsn.client_id, it.client_id)= 1 and find_in_set(hsn.client_unit_id, it.client_unit_id)= 1 left join(select t.client_unit_id, t.icode,sum(nvl(t.qtyin, 0)) as Received,sum(nvl(t.qtyout, 0)) as Issued,sum(nvl(t.qtyin, 0)) - sum(nvl(t.qtyout, 0)) as closing from itransaction t where trim(t.store) = 'Y' group by t.icode,t.client_unit_id ) s on it.icode = s.icode and it.client_unit_id = s.client_unit_id inner join itransactionc pi on it.icode = pi.icode and substr(pi.type,1,1)= '4' and pi.pur_type = 'BPI' and pi.client_id = '001' and find_in_set(it.client_unit_id, pi.client_unit_id)= 1 inner join clients_mst c on pi.acode = c.vch_num and c.client_id = pi.client_id and c.client_unit_id = pi.client_unit_id and c.type = 'BCD' where it.client_id || it.client_unit_id || pi.vch_num || it.icode || to_char(it.vch_date, 'yyyymmdd') || it.type in ('" + URL + "')";
                            }
                            else if (model[0].Col80 == "76")
                            {

                                // kashish why nvl with case
                                mq = "select distinct '-' fstr,it.icode,it.iname,it.cpartno as partno,um.master_name as UOM,'0' as disc_rate,'-' disctype,'0' IAmount," +
                                    "'0' TaxAmount,'0' discAmount,'0' LineAmount,'0' as IRate,nvl(hsn.master_name,'-') as hsn,nvl(hsn.group_name,'0') taxrate,nvl(s.closing, 0) qtystk," +
                                    "nvl(it.amortchrgs,'0') amortchrgs,nvl(it.matjobwork,'0') matjobwork,'0' mcamt,'0' qtyord,'0' ind_no,'-' ind_date,'0' tcsamt,nvl((case when it.tcs='Y' then nvl(hsn.col1,'0%') else '0%' end),'0') tcsper from item it " +
                                    "left join master_setting um on um.master_id = it.uom and um.type = 'UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
                                    "left join master_setting hsn on hsn.master_id = it.hsno and hsn.type = 'HSN' and find_in_set(hsn.client_unit_id,it.client_unit_id)=1 " +
                                    "left join(select icode,client_unit_id,sum(op) op,sum(pktop) pktop,sum(qtyin) qtyin,sum(qtyout) out," +
                                      "sum(op)+sum(qtyin)-sum(qtyout) closing from (select icode, client_unit_id, nvl(op_2019, 0) op," +
                                      " nvl(pkt_2019, 0) pktop, 0 qtyin, 0 qtyout, 0 pktno from itbal union all select icode, client_unit_id, " +
                                      "sum(to_number(qtyin)) - sum(to_number(qtyout)) op, sum((case when substr(type, 1, 1) in ('0', '1') then" +
                                      " pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktop,sum(to_number(qtyin)) " +
                                      "qtyin,sum(to_number(qtyout)) qtyout,0 pktno from itransaction where trim(store) = 'Y' and " +
                                      "to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and " +
                                      "to_date('" + year_from.Split(' ')[0].Trim() + "','" + sgen.Getsqldateformat() + "')-1 group by icode,client_unit_id union all select icode,client_unit_id," +
                                      "0 as op,0 as pktop,to_number(qtyin) qtyin,to_number(qtyout) qtyout,sum((case when substr(type, 1, 1) in " +
                                      "('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktno from " +
                                      "itransaction where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between " +
                                      "to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and to_date('" + model[0].Col48 + "','" + sgen.Getsqldateformat() + "') group by icode,client_unit_id," +
                                      "to_number(qtyin),to_number(qtyout)) a group by icode, client_unit_id) s on it.icode = s.icode and find_in_set(it.client_unit_id, s.client_unit_id)=1 " +
                                    "where it.icode || to_char(it.vch_date, 'yyyymmdd') || it.type in ('" + URL + "')";
                            }
                            else
                            {
                                mq = "select distinct '-' fstr,it.icode,it.iname,it.cpartno as partno,um.master_name as UOM," +
                                       "'0' as disc_rate,'-' disctype,'0' IAmount,'0' TaxAmount,'0' discAmount,'0' LineAmount,'0' as IRate,nvl(hsn.master_name,'-') as hsn,nvl(hsn.group_name,'0') taxrate, " +
                                   "nvl(s.closing, 0) AS qtystk,it.amortchrgs,it.matjobwork,'0' mcamt,'0' qtyord,'0' ind_no,'-' ind_date from item it" +
                                   " left join master_setting um on um.master_id = it.uom and " +
                                   "um.type = 'UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1" +
                                   " left join master_setting hsn on hsn.master_id = it.hsno and hsn.type = 'HSN' " +
                                   "and find_in_set(hsn.client_unit_id,it.client_unit_id)=1 " +
                                   "left join(select icode,client_unit_id,sum(op) op,sum(pktop) pktop,sum(qtyin) qtyin,sum(qtyout) out," +
                                      "sum(op)+sum(qtyin)-sum(qtyout) closing from (select icode, client_unit_id, nvl(op_2019, 0) op," +
                                      " nvl(pkt_2019, 0) pktop, 0 qtyin, 0 qtyout, 0 pktno from itbal union all select icode, client_unit_id, " +
                                      "sum(to_number(qtyin)) - sum(to_number(qtyout)) op, sum((case when substr(type, 1, 1) in ('0', '1') then" +
                                      " pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktop,sum(to_number(qtyin)) " +
                                      "qtyin,sum(to_number(qtyout)) qtyout,0 pktno from itransaction where trim(store) = 'Y' and " +
                                      "to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and " +
                                      "to_date('" + year_from.Split(' ')[0].Trim() + "','" + sgen.Getsqldateformat() + "')-1 group by icode,client_unit_id union all select icode,client_unit_id," +
                                      "0 as op,0 as pktop,to_number(qtyin) qtyin,to_number(qtyout) qtyout,sum((case when substr(type, 1, 1) in " +
                                      "('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktno from " +
                                      "itransaction where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between " +
                                      "to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and to_date('" + model[0].Col48 + "','" + sgen.Getsqldateformat() + "') group by icode,client_unit_id," +
                                      "to_number(qtyin),to_number(qtyout)) a group by icode, client_unit_id)" +
                                   " s on it.icode = s.icode and find_in_set(it.client_unit_id, s.client_unit_id)=1 where " +
                                   "it.icode || to_char(it.vch_date, 'yyyymmdd') || it.type in ('" + URL + "')";
                            }
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt1.Rows.RemoveAt(0); }
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["Item"] = dt.Rows[i]["fstr"].ToString();
                                    dr["SNo"] = i + 1;
                                    dr["Icode"] = dt.Rows[i]["icode"].ToString();
                                    dr["IName"] = dt.Rows[i]["iname"].ToString();
                                    dr["PARTNO"] = dt.Rows[i]["partno"].ToString();
                                    dr["HSN"] = dt.Rows[i]["hsn"].ToString();
                                    dr["UOM"] = dt.Rows[i]["uom"].ToString();
                                    dr["TaxRate"] = dt.Rows[i]["taxrate"].ToString();
                                    dr["Qty_In_Stock"] = dt.Rows[i]["qtystk"].ToString();
                                    dr["IRate"] = "0";
                                    dr["disc_type"] = "0";
                                    dr["disc_rate"] = "0";
                                    dr["Iamount"] = "0";
                                    dr["taxamount"] = "0";
                                    dr["discamount"] = "0";
                                    dr["lineamount"] = "0";
                                    dr["Qty_ord"] = dt.Rows[i]["qtyord"].ToString();
                                    if (model[0].Col80 == "75")
                                    {
                                        dr["PI_NO"] = dt.Rows[i]["pi_no"].ToString();
                                        dr["PI_DATE"] = dt.Rows[i]["pi_date"].ToString();
                                        dr["IRate"] = dt.Rows[i]["irate"].ToString();
                                        dr["disc_type"] = dt.Rows[i]["disctype"].ToString();
                                        dr["disc_rate"] = dt.Rows[i]["discrate"].ToString();
                                        if (model[0].Col12 == "45")
                                        {
                                            dr["AMORT_CHRGS_PERUNIT"] = dt.Rows[i]["amortchrgs"].ToString();
                                            dr["Mat_Cons_Per"] = dt.Rows[i]["matjobwork"].ToString();
                                            dr["Mat_Cons_Amt"] = dt.Rows[i]["mcamt"].ToString();
                                        }
                                        else if (model[0].Col12 == "46")
                                        {
                                            dr["Tcs_amt"] = dt.Rows[i]["tcsamt"].ToString();
                                            dr["Tcs_per"] = dt.Rows[i]["tcsper"].ToString();
                                        }
                                    }
                                    if (model[0].Col80 == "76")
                                    {
                                        if (model[0].Col12 == "45")
                                        {
                                            dr["AMORT_CHRGS_PERUNIT"] = dt.Rows[i]["amortchrgs"].ToString();
                                            dr["Mat_Cons_Per"] = dt.Rows[i]["matjobwork"].ToString();
                                            dr["Mat_Cons_Amt"] = dt.Rows[i]["mcamt"].ToString();
                                        }
                                        else if (model[0].Col12 == "46")
                                        {
                                            dr["Tcs_amt"] = dt.Rows[i]["tcsamt"].ToString();
                                            dr["Tcs_per"] = dt.Rows[i]["tcsper"].ToString();
                                        }
                                    }
                                    model[0].dt1.Rows.Add(dr);
                                }
                                model[0].dt1.AcceptChanges();
                            }
                            model[0].Col100 = tm.Col100;
                            break;
                        case "CHRGS":
                            mq = "select master_id,master_name from master_setting where (master_id||to_char(vch_date,'yyyymmdd')||type) in ('" + URL + "')";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                int i = 0;
                                if (model[0].LTM1 == null) { model[0].LTM1 = new List<Tmodelmain>(); }
                                if (model[0].LTM1.Count == 0) { model[0].LTM1 = new List<Tmodelmain>(); }
                                else i = model[0].LTM1.Count;
                                foreach (DataRow dr in dtt.Rows)
                                {
                                    i++;
                                    model[0].LTM1.Add(new Tmodelmain
                                    {
                                        Col14 = i.ToString(),
                                        Col15 = dr["master_id"].ToString(),
                                        Col23 = dr["master_name"].ToString(),
                                        Col16 = "0",
                                        Col17 = "0",
                                        Col18 = "0",
                                        Col19 = "0",
                                        Col20 = "0",
                                        Col21 = "0",
                                        Col22 = "0",
                                    });
                                }
                            }
                            break;
                        case "CHRGDEL":
                            if (sgen.GetSession(MyGuid, "soorddelrno") != null)
                            {
                                var mrno = sgen.GetSession(MyGuid, "soorddelrno").ToString();
                                var LTM = model[0].LTM1;
                                for (int d = 0; d < LTM.Count; d++)
                                {
                                    string chrgno = LTM[d].Col14;
                                    if (chrgno.Trim() == mrno.Trim()) { model[0].LTM1.RemoveAt(d); }
                                }
                                sgen.SetSession(MyGuid, "soorddelrno", null);
                            }
                            break;
                        case "RATE":
                            //if (sgen.GetSession(MyGuid, "sortrno") == null)BRIJESH
                            if (sgen.GetSession(MyGuid, "cust_portrno") == null)//KC
                            {
                                ViewBag.scripCall += "showmsgJS(1,'Rno not defined', 0);";
                                return model;
                            }
                            var rno = sgen.Make_int(sgen.GetSession(MyGuid, "cust_portrno").ToString());
                            mq = "select master_id DocNo,group_name TaxRate from master_setting where (master_id||to_char(vch_date,'yyyymmdd')||type)='" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                model[0].LTM1[rno - 1].Col13 = dtt.Rows[0]["DocNo"].ToString().Trim();
                                var utgst = model[0].Col18.Substring(0, 2).Trim();
                                var pgst = model[0].Col22.Substring(0, 2).Trim();
                                if (utgst == pgst)
                                {
                                    var amt = sgen.Make_decimal(model[0].LTM1[rno - 1].Col16);
                                    var rt = sgen.Make_decimal(dtt.Rows[0]["TaxRate"].ToString().Trim().Split('%')[0].Trim());
                                    var amtrt = (amt * rt) / 100;
                                    model[0].LTM1[rno - 1].Col19 = (rt / 2).ToString() + "%";
                                    model[0].LTM1[rno - 1].Col20 = (amtrt / 2).ToString();
                                    model[0].LTM1[rno - 1].Col21 = (rt / 2).ToString() + "%";
                                    model[0].LTM1[rno - 1].Col22 = (amtrt / 2).ToString();
                                }
                                else
                                {
                                    var amt = sgen.Make_decimal(model[0].LTM1[rno - 1].Col16);
                                    var rt = sgen.Make_decimal(dtt.Rows[0]["TaxRate"].ToString().Trim().Split('%')[0].Trim());
                                    var amtrt = (amt * rt) / 100;
                                    model[0].LTM1[rno - 1].Col17 = rt.ToString() + "%";
                                    model[0].LTM1[rno - 1].Col18 = amtrt.ToString();
                                }
                                decimal bamt = sgen.Make_decimal(model[0].Col33);
                                decimal bigst = sgen.Make_decimal(model[0].Col34);
                                decimal bcgst = sgen.Make_decimal(model[0].Col35);
                                decimal bsgst = sgen.Make_decimal(model[0].Col36);
                                decimal tamt = 0, tigst = 0, tcgst = 0, tsgst = 0;
                                for (int i = 0; i < model[0].LTM1.Count; i++)
                                {
                                    tamt = tamt + sgen.Make_decimal(model[0].LTM1[i].Col16);
                                    tigst = tigst + sgen.Make_decimal(model[0].LTM1[i].Col18);
                                    tcgst = tcgst + sgen.Make_decimal(model[0].LTM1[i].Col20);
                                    tsgst = tsgst + sgen.Make_decimal(model[0].LTM1[i].Col22);
                                }
                                model[0].Col37 = (bamt + tamt).ToString();
                                model[0].Col38 = (bigst + tigst).ToString();
                                model[0].Col39 = (bcgst + tcgst).ToString();
                                model[0].Col40 = (bsgst + tsgst).ToString();
                                model[0].Col62 = (bamt + tamt + bigst + tigst + bcgst + tcgst + bsgst + tsgst).ToString();//netamt
                            }
                            break;
                    }
                    break;
                #endregion
                #region itemgrp
                case "itemgrp":
                    switch (btnval.ToUpper())
                    {
                        case "ACCOUNT":
                            mq = "select a.c_name as name,a.vch_num from clients_mst a " +
                         "where a.vch_num||To_Char(a.vch_date, 'yyyymmdd')|| a.type = '" + URL + "'";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                model[0].Col25 = dt.Rows[0]["vch_num"].ToString();
                            }
                            break;
                        case "EDIT":
                            mq = "select a.rec_id,a.client_name description,a.GROUP_REFRENCE_NUMBER,a.master_id,a.master_name,a.classid iso,a.sectionid pattern,a.master_entby as ent_by,a.master_entdate as ent_date," +
                                "a.vch_date,a.status,a.master_editby edit_by,a.master_editdate as edit_date,a.client_id,a.client_unit_id,group_name evaltype,subjectid ggrp from " + model[0].Col10.Trim() + " a " +
                                "where (a.master_id||to_char(a.vch_date,'yyyymmdd')||a.type)='" + URL + "' ";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1 = cmd_Fun.grandgrp(userCode, unitid_mst);
                                // TempData[MyGuid + "_Tlist1"] = mod1;
                                sgen.SetSession(MyGuid, "EDMODE", "Y");
                                model[0].Col1 = dtt.Rows[0]["client_id"].ToString();
                                model[0].Col2 = dtt.Rows[0]["client_unit_id"].ToString();
                                model[0].Col3 = dtt.Rows[0]["ent_by"].ToString();
                                model[0].Col4 = dtt.Rows[0]["ent_date"].ToString();
                                model[0].Col5 = dtt.Rows[0]["edit_by"].ToString();
                                model[0].Col6 = dtt.Rows[0]["edit_date"].ToString();
                                model[0].Col7 = dtt.Rows[0]["rec_id"].ToString();
                                model[0].Col8 = "(master_id||to_char(vch_date,'yyyymmdd')||type) = '" + URL + "'";
                                model[0].Col9 = tm.Col9;
                                model[0].Col10 = tm.Col10;
                                model[0].Col11 = tm.Col11;
                                model[0].Col12 = tm.Col12;
                                model[0].Col13 = "Update";
                                model[0].Col100 = "Update & New";
                                model[0].Col121 = "U";
                                model[0].Col122 = "<u>U</u>pdate";
                                model[0].Col123 = "Update & Ne<u>w</u>";
                                model[0].Col14 = tm.Col14;
                                model[0].Col15 = tm.Col15;
                                model[0].Col16 = dtt.Rows[0]["master_id"].ToString();
                                model[0].Col17 = dtt.Rows[0]["iso"].ToString();
                                model[0].Col18 = dtt.Rows[0]["pattern"].ToString();
                                model[0].Col20 = dtt.Rows[0]["master_name"].ToString();
                                model[0].Col21 = dtt.Rows[0]["status"].ToString() == "Y" ? "Active" : "Inactive";
                                model[0].Col22 = dtt.Rows[0]["description"].ToString();
                                model[0].Col24 = dtt.Rows[0]["evaltype"].ToString();
                                model[0].Col25 = dtt.Rows[0]["GROUP_REFRENCE_NUMBER"].ToString();
                                model[0].SelectedItems1 = System.String.Join(",", dtt.Rows.OfType<DataRow>().Select(r => r["ggrp"].ToString().Substring(0, 1)).Distinct()).Split(',');
                            }
                            break;
                        case "EXT":
                            mq = "select a.rec_id,a.client_name description,a.master_id,a.master_name,a.classid iso,a.sectionid pattern,a.master_entby as ent_by,a.master_entdate as ent_date," +
                               "a.vch_date,a.status,a.master_editby edit_by,a.master_editdate as edit_date,a.client_id,a.client_unit_id,group_name evaltype,subjectid ggrp from " + model[0].Col10.Trim() + " a " +
                               "where (a.master_id||to_char(a.vch_date,'yyyymmdd')||a.type) in ('" + URL + "') ";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "MGRPDT", URL.Trim());

                                Make_query(viewName.ToLower(), "Select Unit", "UNIT", "2", "", "", MyGuid);

                                ViewBag.scripCall += "callFoo('Select Unit');";
                            }
                            break;
                        case "UNIT":
                            try
                            {
                                string currdate = sgen.server_datetime(userCode);
                                ent_date = currdate;
                                string[] uts = URL.Replace("','", ",").Split(',');
                                string[] mst_data = sgen.GetSession(MyGuid, "MGRPDT").ToString().Replace("','", ",").Split(',');
                                #region dtstr                                
                                try
                                {
                                    foreach (string mst in mst_data)
                                    {
                                        List<string> cp = new List<string>();
                                        List<string> up = new List<string>();
                                        foreach (string ut in uts)
                                        {
                                            cp.Add(ut.Substring(6, 3).Trim());
                                            up.Add(ut.Substring(0, 6).Trim());
                                        }
                                        cp.Add(clientid_mst);
                                        up.Add(unitid_mst);
                                        cp.Distinct();
                                        up.Distinct();

                                        mq = "update master_setting set master_editby='" + userid_mst + "',master_editdate=TO_DATE('" + sgen.Savedate(currdate, true) + "', 'YYYY-MM-DD HH24:MI:SS')," +
                                 "client_id='" + String.Join(",", cp.Distinct()) + "',client_unit_id='" + String.Join(",", up.Distinct()) + "' " +
                                 "where (master_id||to_char(vch_date,'yyyymmdd')||type) ='" + mst + "'";
                                        res = sgen.execute_cmd(userCode, mq);
                                    }
                                }
                                catch (Exception ex) { res = false; }
                                #endregion
                                if (res)
                                {
                                    List<string> apps = new List<string>();
                                    foreach (var key in HttpContext.Application.Keys)
                                    {
                                        if (key.ToString().ToUpper().Contains("_U_" + userCode + ""))
                                        {
                                            apps.Add(key.ToString());
                                        }
                                    }
                                    foreach (var ap in apps)
                                    {
                                        HttpContext.Application[ap.ToString()] = null;
                                    }

                                    ViewBag.vnew = "";
                                    ViewBag.vedit = "";
                                    ViewBag.vsave = "disabled='disabled'";
                                    ViewBag.vsavenew = "disabled='disabled'";
                                    ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Extended Successfully');disableForm(); ";
                                }
                                else { ViewBag.scripCall = "showmsgJS(3, 'Record Not Saved', 1);"; }
                            }
                            catch (Exception ex) { sgen.showmsg(1, ex.Message.ToString().Replace("'", ""), 0); }
                            break;
                    }
                    break;
                #endregion
                #region standard_price
                case "standard_price":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "PRE":
                            mq = "select (a.client_id||a.client_unit_id||a.vch_num||a.type) fstr,a.vch_num,a.client_id,a.client_unit_id,a.ent_by,a.ent_date,a.col1 icode," +
                                "i.iname,to_char(a.date1,'" + sgen.Getsqldateformat() + "') date1,to_char(a.date2,'" + sgen.Getsqldateformat() + "') date2,a.col5 plname,a.col2 mrp,a.col3 min_price,a.col4 sale_price " +
                                "from enx_tab a " +
                                "inner join item i on i.icode=a.col1 and i.type='IT' and find_in_set(i.client_unit_id,a.client_unit_id)=1 " +
                                "where (a.client_id||a.client_unit_id||a.vch_num||a.type)='" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "EDMODE", "N");
                                model[0].Col20 = dtt.Rows[0]["vch_num"].ToString();
                                if (btnval.Trim().ToUpper().Equals("EDIT"))
                                {
                                    sgen.SetSession(MyGuid, "EDMODE", "Y");
                                    model[0].Col1 = dtt.Rows[0]["client_id"].ToString();
                                    model[0].Col2 = dtt.Rows[0]["client_unit_id"].ToString();
                                    model[0].Col3 = dtt.Rows[0]["ent_by"].ToString();
                                    model[0].Col4 = dtt.Rows[0]["ent_date"].ToString();
                                    model[0].Col8 = "(client_id||client_unit_id||vch_num||type)='" + URL + "'";
                                    model[0].Col9 = tm.Col9;
                                    model[0].Col10 = tm.Col10;
                                    model[0].Col11 = tm.Col11;
                                    model[0].Col12 = tm.Col12;
                                    model[0].Col13 = "Update";
                                    model[0].Col14 = tm.Col14;
                                    model[0].Col15 = tm.Col15;
                                    model[0].Col16 = dtt.Rows[0]["vch_num"].ToString();
                                }
                                model[0].Col17 = dtt.Rows[0]["date1"].ToString();
                                model[0].Col18 = dtt.Rows[0]["date2"].ToString();
                                model[0].Col19 = dtt.Rows[0]["plname"].ToString();
                                mq = "select '' item,'-' sno,'-' icode,'-' iname,'0' mrp,'0' min_price,'0' sale_price from dual";
                                model[0].dt1 = sgen.getdata(userCode, mq);
                                if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt1.Rows.RemoveAt(0); }
                                for (int i = 0; i < dtt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["item"] = "";
                                    dr["SNo"] = i + 1;
                                    dr["Icode"] = dtt.Rows[i]["icode"].ToString();
                                    dr["Iname"] = dtt.Rows[i]["iname"].ToString();
                                    dr["mrp"] = dtt.Rows[i]["mrp"].ToString();
                                    dr["min_price"] = dtt.Rows[i]["min_price"].ToString();
                                    dr["sale_price"] = dtt.Rows[i]["sale_price"].ToString();
                                    model[0].dt1.Rows.Add(dr);
                                }
                                model[0].dt1.AcceptChanges();
                            }
                            break;
                        case "ITEM":
                            mq = "select it.icode,it.iname,'0' mrp,'0' min_price,'0' sale_price from item it where " +
                                "(it.icode||it.type) in ('" + URL + "')";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                try
                                {
                                    if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt1.Rows.RemoveAt(0); }
                                    for (int i = 0; i < dtt.Rows.Count; i++)
                                    {
                                        DataRow dr = model[0].dt1.NewRow();
                                        dr["SNo"] = i + 1;
                                        dr["Icode"] = dtt.Rows[i]["icode"].ToString();
                                        dr["IName"] = dtt.Rows[i]["iname"].ToString();
                                        dr["mrp"] = dtt.Rows[i]["mrp"].ToString();
                                        dr["min_price"] = dtt.Rows[i]["min_price"].ToString();
                                        dr["sale_price"] = dtt.Rows[i]["sale_price"].ToString();
                                        model[0].dt1.Rows.Add(dr);
                                    }
                                    model[0].dt1.AcceptChanges();
                                }
                                catch (Exception ex) { ViewBag.scripCall = "showmsgJS(1," + ex.Message.ToString().Replace("'", "").Replace('\'', ' ') + ",0);"; }
                            }
                            break;
                    }
                    break;
                #endregion
                #region custom_price
                case "custom_price":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            mq = "select (a.client_id||a.client_unit_id||a.vch_num||a.type) fstr,a.vch_num,a.client_id,a.client_unit_id,a.ent_by,a.ent_date,a.col1 icode," +
                                "i.iname,to_char(a.date1, '" + sgen.Getsqldateformat() + "') date1,to_char(a.date2, '" + sgen.Getsqldateformat() + "') date2,a.col2 mrp, a.col3 sale_price, " +
                                "a.col4 plistname,a.col6 custid, group_concat(distinct c.c_name) custname,a.col5 disctype,a.col7 spl,a.col8 disc,a.col9 appall,a.col10," +
                                "a.col11,a.col12,col13 discon from enx_tab a " +
                                "inner join item i on i.icode = a.col1 and i.type = 'IT' and i.client_unit_id = a.client_unit_id " +
                                "inner join clients_mst c on find_in_set(c.vch_num, a.col6)= 1 and c.type = 'BCD' and and find_in_set(c.client_unit_id, a.client_unit_id)=1 and substr(c.vch_num,0,3)='303'" +
                                "where (a.client_id || a.client_unit_id || a.vch_num || a.type) = '" + URL + "'" +
                                "group by (a.client_id|| a.client_unit_id || a.vch_num || a.type),a.vch_num,a.client_id,a.client_unit_id,a.ent_by,a.ent_date,a.col1," +
                                "i.iname,to_char(a.date1, '" + sgen.Getsqldateformat() + "'),to_char(a.date2, '" + sgen.Getsqldateformat() + "')a.col2,a.col3,a.col4,a.col6,a.col7";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "EDMODE", "Y");
                                model[0].Col1 = dtt.Rows[0]["client_id"].ToString();
                                model[0].Col2 = dtt.Rows[0]["client_unit_id"].ToString();
                                model[0].Col3 = dtt.Rows[0]["ent_by"].ToString();
                                model[0].Col4 = dtt.Rows[0]["ent_date"].ToString();
                                model[0].Col8 = "(client_id||client_unit_id||vch_num||type)='" + URL + "'";
                                model[0].Col9 = tm.Col9;
                                model[0].Col10 = tm.Col10;
                                model[0].Col11 = tm.Col11;
                                model[0].Col12 = tm.Col12;
                                model[0].Col13 = "Update";
                                model[0].Col14 = tm.Col14;
                                model[0].Col15 = tm.Col15;
                                model[0].Col16 = dtt.Rows[0]["vch_num"].ToString();
                                model[0].Col17 = dtt.Rows[0]["date1"].ToString();
                                model[0].Col18 = dtt.Rows[0]["plistname"].ToString();
                                model[0].Col19 = dtt.Rows[0]["custid"].ToString();
                                model[0].Col20 = dtt.Rows[0]["custname"].ToString();
                                model[0].Col21 = dtt.Rows[0]["date2"].ToString();
                                model[0].Col22 = dtt.Rows[0]["disctype"].ToString();
                                model[0].Col23 = dtt.Rows[0]["disc"].ToString();
                                model[0].Col24 = dtt.Rows[0]["discon"].ToString();
                                model[0].Chk1 = dtt.Rows[0]["appall"].ToString() == "Y" ? true : false;
                                mq1 = "select distinct col5 plname,vch_num from enx_tab where type='" + model[0].Col12 + "'" + model[0].Col11 + "";
                                dtm = sgen.getdata(userCode, mq1);
                                if (dtm.Rows.Count > 0)
                                {
                                    foreach (DataRow dr in dtm.Rows)
                                    {
                                        mod1.Add(new SelectListItem { Text = dr["plname"].ToString(), Value = dr["vch_num"].ToString() });
                                    }
                                }
                                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
                                //TempData[MyGuid + "_TList1"] = mod1;
                                model[0].SelectedItems1 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["spl"].ToString()).Distinct()).Split(',');
                                mq = "select '' item,'-' sno,'-' icode,'-' iname,'0' mrp,'0' sale_price,'0' Disc_in_Per,'0' Disc_in_Abs,'0' Net_Amount from dual";
                                model[0].dt1 = sgen.getdata(userCode, mq);
                                if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt1.Rows.RemoveAt(0); }
                                for (int i = 0; i < dtt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["item"] = "";
                                    dr["SNo"] = i + 1;
                                    dr["Icode"] = dtt.Rows[i]["icode"].ToString();
                                    dr["Iname"] = dtt.Rows[i]["iname"].ToString();
                                    dr["mrp"] = dtt.Rows[i]["mrp"].ToString();
                                    dr["sale_price"] = dtt.Rows[i]["sale_price"].ToString();
                                    dr["Disc_in_Per"] = dtt.Rows[i]["col10"].ToString();
                                    dr["Disc_in_Abs"] = dtt.Rows[i]["col11"].ToString();
                                    dr["Net_Amount"] = dtt.Rows[i]["col12"].ToString();
                                    model[0].dt1.Rows.Add(dr);
                                }
                                model[0].dt1.AcceptChanges();
                            }
                            break;
                        case "ITEM":
                            mq = "select it.icode,it.iname,nvl(e.col2,'0') mrp,'0' sale_price from item it " +
                                "left join enx_tab e on e.col1=it.icode and e.vch_num='" + model[0].SelectedItems1.FirstOrDefault() + "' and find_in_set(e.client_unit_id,it.client_unit_id)=1 and e.type='SP1' and " + "where (it.icode||it.type) in ('" + URL + "')";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                try
                                {
                                    if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt1.Rows.RemoveAt(0); }
                                    for (int i = 0; i < dtt.Rows.Count; i++)
                                    {
                                        DataRow dr = model[0].dt1.NewRow();
                                        dr["SNo"] = i + 1;
                                        dr["Icode"] = dtt.Rows[i]["icode"].ToString();
                                        dr["IName"] = dtt.Rows[i]["iname"].ToString();
                                        dr["mrp"] = dtt.Rows[i]["mrp"].ToString();
                                        dr["sale_price"] = dtt.Rows[i]["sale_price"].ToString();
                                        model[0].dt1.Rows.Add(dr);
                                    }
                                    model[0].dt1.AcceptChanges();
                                }
                                catch (Exception ex) { ViewBag.scripCall = "showmsgJS(1," + ex.Message.ToString().Replace('\'', ' ') + ",0);"; }
                            }
                            break;
                        case "CUST":
                            mq = "select Group_concat(a.c_name) name,Group_concat(a.vch_num) vch_num from clients_mst a " +
                                "where (a.vch_num||to_char(a.vch_date, 'yyyymmdd')|| a.type) in ('" + URL + "')";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                model[0].Col19 = dt.Rows[0]["vch_num"].ToString();
                                model[0].Col20 = dt.Rows[0]["name"].ToString();
                            }
                            break;
                    }
                    break;
                #endregion
                #region p invoce
                case "p_invoice":
                    switch (btnval.ToUpper())
                    {
                        case "PRINT":
                            string term = "", doc_contrl_no = "", invtype = "", rpt_name = "";
                            TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1;
                            TempData[MyGuid + "_Tlist2"] = model[0].TList2 = mod2;
                            TempData[MyGuid + "_Tlist3"] = model[0].TList3 = mod3;
                            TempData[MyGuid + "_Tlist4"] = model[0].TList4 = mod4;
                            invtype = sgen.getstring(userCode, "select distinct p.type as master_id from itransactionc p where (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.pur_type) = '" + URL + "'");
                            DataTable dtterm = sgen.getdata(userCode, "select k.col73 tandc,k.col1 doc_control_no,k.col5 rptid,fm.CLIENT_NAME rptname from kc_tab k " +
                                "inner join master_setting fm on fm.master_id = k.col5 and fm.type = 'IRF' and fm.classid = '88' and fm.sectionid = '" + invtype + "' " +
                                "where k.type='PRN' and k.client_unit_id = '" + unitid_mst + "'");
                            if (dtterm.Rows.Count > 0)
                            {
                                term = dtterm.Rows[0]["tandc"].ToString();
                                rpt_name = dtterm.Rows[0]["rptname"].ToString();
                                doc_contrl_no = dtterm.Rows[0]["doc_control_no"].ToString();
                            }
                            else
                            {
                                rpt_name = "per_inv1";
                            }
                            if (rpt_name == "per_inv1")
                            {
                                mq = "select TRIM(dbms_lob.substr( p.iremark,4000,1)) iremark, p.vch_num Doc_number,'" + term + "' terms_cond,'" + doc_contrl_no + "' doc_control_no,to_char(p.vch_date, '" + sgen.Getsqldateformat() + "') Doc_date,c.c_name as Party_Name,(case when p.is_other='Y' then p.other_per else c.cpname end) as cont_per,c.cpcont,c.cpemail,c.c_gstin as gstin," +
                                    "c.addr as Party_Address,c.org_mobile,nvl(sf.c_name, '-') as From_Name,nvl(sf.c_gstin, '-') as From_Gstin,tp.master_name as Against,nvl(sf.addr, '-') FromAddress," +
                                    "nvl(st.c_name, '-') as To_Name,nvl(st.c_gstin, '-') as To_Gstin,nvl(st.addr, '-') ToAddress,p.pur_type Purchase_Type, p.icode ItemCode," +
                                    "p.iname ItemName,p.cpartno PartNo, p.uom UOM, p.hsno HSN,to_number(NVL(p.ordqty,'0')) Order_Qty,to_number(NVL(p.irate,'0')) ItemRate,p.taxrate TaxRate," +
                                    "to_number(NVL(iamount,'0')) Item_Amt,to_number(NVL(p.taxamt,'0')) taxamt,p.disctype Discount_Type, to_number(NVL(p.discrate,'0')) Discount_Rate, to_number(NVL(p.discamt,'0')) Discount_Amt,to_number(NVL(p.lineamount,'0')) LineAmt,to_number(NVL(p.gserchrg,'0')) IGST, " +
                                    "to_number(NVL(p.gloadchrg,'0')) SGST,to_number(NVL(p.gamc,'0')) CGST,to_number(NVL(p.basicamt,'0')) BasicAmt,to_number(NVL(p.ginstlchrg,'0')) GrossAmt,to_number(NVL(p.gtaxamt,'0')) as Net_Amount," +
                                    "pt.master_name as payment_tems,p.cond AS term_cond,p.pono,to_char(p.podate,'" + sgen.Getsqldateformat() + "') as podate1,p.totremark,pi_no as quot_no,to_char(p.pi_date, '" + sgen.Getsqldateformat() + "') quot_date,OTH.col3 as othr_chrg,OTH.col4 as othr_taxrate,OTH.col5 AS othr_igst,OTH.col6 AS othr_cgst,OTH.col7 AS othr_sgst" +
                                    " from itransactionc p inner join clients_mst c on p.acode = c.vch_num and find_in_set(c.client_unit_id, p.client_unit_id)=1 and " +
                                    "c.type = 'BCD' and substr(c.vch_num,0,3)='303' left join (select ch.master_name chrgname,en.col1,en.col2,en.col3,en.col4,en.col5,en.col6,en.col7,en.col8,en.col9,en.r_no from enx_tab en inner join master_setting ch on en.col1=ch.master_id and ch.type='MR0' and find_in_set(ch.client_unit_id,en.client_unit_id)=1 where (en.client_id||en.client_unit_id||en.vch_num||to_char(en.vch_date, 'yyyymmdd')|| en.type) = '" + URL + "') OTH on 1=1 inner join master_setting tp on tp.master_id=p.type and tp.type='KPO' and " +
                                    "substr(tp.master_id,1,1)='4' and find_in_set(tp.client_unit_id,p.client_unit_id)=1 inner join master_setting pt on pt.master_id=p.pay_term " +
                                    "and pt.type='PTM' and find_in_set(pt.client_unit_id,p.client_unit_id)=1 left join clients_mst sf on p.shipfrom = sf.vch_num and " +
                                    "find_in_set(sf.client_unit_id, p.client_unit_id)=1 and sf.type = 'BCD' left join clients_mst st on p.shipto = st.vch_num and " +
                                    "find_in_set(st.client_unit_id, p.client_unit_id)=1 and st.type = 'BCD' and substr(st.vch_num,0,3)='303' where " +
                                    "(p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.PUR_TYPE) = '" + URL + "'";
                            }
                            else
                            {
                                mq = "select (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) fstr,(case when nvl(pt.master_name,'-')='0' then '-' else nvl(pt.master_name,'-') end) as pay_term,(case when nvl(prc.master_name,'-')='0' then '-' else nvl(prc.master_name,'-') end) as price_term,(case when nvl(p.cpartno,'-')='0' then '-' else nvl(p.cpartno,'-') end) as cpartno,(case when nvl(tm.master_name,'-')='0' then '-' else nvl(tm.master_name,'-') end) as trpt_mode,to_number(p.lineamount) lineamount,p.totremark remark,p.uom,p.irate,p.TaxRate,to_number(p.taxamt) taxamt,p.vch_num Invoice_Number,to_char(convert_tz(p.vch_date, 'UTC', '+05:30'), 'dd/MM/YYYY') Invoice_Date,to_number(p.ORDQTY) inv_qty,to_number(p.ginstlchrg) as taxable_amt,p.iremark del_note,p.hsno hsn_no,p.iname,p.icode,c.c_name Party_Name,(case when nvl(c.c_gstin,'-')='0' then '-' else nvl(c.c_gstin,'-') end) as Party_Gstin,(case when c.addr='0' then '-' else c.addr end) as Party_Address,p.discrate as discrate, p.discamt,to_number(p.iamount) iamount,(case when nvl(p.DEPTNAME,'-')='0' then '-' else nvl(p.DEPTNAME,'-') end) as Terms_of_del,(case when nvl(p.PONO,'-')='0' then '-' else nvl(p.PONO,'-') end) po_no,to_char(p.PODATE,'dd/MM/YYYY') as po_date," +
                                    " p.gserchrg IGST, p.gloadchrg SGST,p.gamc CGST, to_number(p.basicamt) BasicAmt,to_number(p.ginstlchrg) GrossAmt,to_number(p.gtaxamt) net_amount,'" + term + "' terms_cond,'" + doc_contrl_no + "' doc_control_no,TRIM(dbms_lob.substr(p.iremark,4000,1)) iremark,to_number(p.iamount)-to_number(p.iamount*to_number(p.DISCRATE)/100) AS txbleamt from itransactionc p " +
                                    "inner join clients_mst c on p.acode = c.vch_num and find_in_set(c.client_unit_id, p.client_unit_id)= 1 and c.type = 'BCD' and substr(c.vch_num,0,3)= '303' inner join item it on it.icode=p.icode and it.type='IT' and find_in_set(it.client_unit_id,p.client_unit_id)=1 left join master_setting pt on pt.master_id = p.pay_term and pt.type = 'PTM' and find_in_set(pt.client_unit_id,'" + unitid_mst + "')= 1 " +
                                    "left join master_setting prc on prc.master_id = p.price_term and prc.type = 'PRI' and find_in_set(prc.client_unit_id,'" + unitid_mst + "')= 1 left join master_setting tm on tm.master_id = p.tmode and tm.type = 'AMT' and find_in_set(tm.client_unit_id,'" + unitid_mst + "')= 1 where (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.PUR_TYPE) = '" + URL + "'";
                            }
                            dt = sgen.getdata(userCode, mq);
                            mq1 = "select sum(a.basicamt) as taxableamt,max(a.Igstr) as Igstr,max(a.cgstr) as cgstr ,max(a.sgstr) as sgstr,sum(a.igst) as igst,sum(a.cgst) as cgst,sum(a.sgst) as sgst,a.hsno from " +
                             "(select to_number(p.iamount)-to_number(p.iamount*to_number(p.DISCRATE)/100) AS basicamt,(case when to_number(igst)=0 then 0 else to_number(taxrate) end) Igstr,(case when to_number(igst)=0 then  taxrate/2 else 0 end) cgstr,(case when to_number(igst)=0 then  taxrate/2 else 0 end) sgstr" +
                             ",(case when to_number(igst)=0 then 0 else to_number(taxAMT) end) igst,(case when to_number(igst)=0 then  taxAMT/2 else 0 end) cgst,(case when to_number(igst)=0 then  taxAMT/2 else 0 end) sgst,p.hsno from itransactionc p " +
                             "where (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.PUR_TYPE) = '" + URL + "' union all select to_number(en.col2) chrgamt" +
                             ",to_number(en.col4) as igstr,to_number(en.col6) as cgstr,to_number(en.col8) as sgstr,to_number(en.col5) igstamt,to_number(en.col7) cgstamt,to_number(en.col9) sgstamt" +
                             ",en.col11 as hsno from enx_tab en where (en.client_id||en.client_unit_id||en.vch_num||to_char(en.vch_date, 'yyyymmdd')|| en.type) = '" + URL + "') a group by a.hsno";
                            var dthsn = sgen.getdata(userCode, mq1);
                            mq1 = "select ch.master_name chrgname,en.col1,to_number(en.col2) col2,en.col3,en.col4,to_number(en.col5) col5,en.col6,to_number(en.col7) col7,en.col8,to_number(en.col9) col9,en.col10" +
                                ",en.r_no from enx_tab en inner join master_setting ch on en.col1=ch.master_id and ch.type='MR0' and " +
                                "find_in_set(ch.client_unit_id,en.client_unit_id)=1 where (en.client_id||en.client_unit_id||en.vch_num||to_char(en.vch_date, 'yyyymmdd')|| en.type) = '" + URL + "'";
                            var othrr = sgen.getdata(userCode, mq1);
                            mq1 = "select sum(amount) as amount,taxname,(case when trim(taxname)<>'IGST' then rate/2 else rate end) rate from (SELECT * FROM (select to_number(en.col5) as igstamt,to_number(en.col7) as cgstamt,to_number(en.col9) as sgstamt,nvl(to_number(en.col4),0) + nvl(to_number(en.col6),0)+nvl(to_number(en.col8),'0') as rate from enx_tab en inner join master_setting ch on en.col1=ch.master_id and ch.type='MR0' and find_in_set(ch.client_unit_id,en.client_unit_id)=1 where (en.client_id||en.client_unit_id||en.vch_num||to_char(en.vch_date, 'yyyymmdd')|| en.type) = '" + URL + "' union all select (case when to_number(p.igst)<>0 then to_number(taxamt) else 0 end) igst,(case when to_number(p.igst)=0 then to_number(taxamt)/2 else 0 end) cgst,(case when to_number(p.igst) = 0 then to_number(taxamt)/ 2 else 0 end) sgst,nvl(to_number(p.taxrate), 00) as rate from itransactionc p where (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.PUR_TYPE) = '" + URL + "' ) UNPIVOT INCLUDE NULLS(amount FOR taxname IN (cgstamt as 'CGST', igstamt as 'IGST', sgstamt as 'SGST'))) t group by taxname,rate having  sum(amount)>0 order by rate";
                            var invtaxes = sgen.getdata(userCode, mq1);
                            if (dt.Rows.Count > 0)
                            {
                                DataSet ds = new DataSet();
                                #region For Duplicates Copies 14072020 Ram
                                var dtdup = sgen.getdata(userCode, "select param1,param2,param3,param4,param6,param7 " +
                                    "from controls where type='CTL' and id='000022' and trim(param5) = '-' ");
                                if (dt.Rows.Count > 0)
                                {
                                    dt.Columns.Add("CTITLE", typeof(string));
                                    dt.Columns.Add("CTITLENO", typeof(string));
                                    var copies = sgen.Make_int(dtdup.Rows[0]["param1"].ToString());
                                    var defRows = dt.Copy();
                                    var dtmain = dt.Clone();
                                    int i = 0;
                                    for (int a = 1; a <= copies; a++)
                                    {
                                        i++;
                                        var colval = a + 1;
                                        if (colval == 5 || colval > 5) colval += 1;

                                        var colname = "";
                                        try
                                        {
                                            colname = dtdup.Rows[0]["param" + colval].ToString();
                                            if (colname.Trim().Length < 2) colname = "Extra Copy";
                                        }
                                        catch (Exception err) { colname = "Extra Copy"; }
                                        foreach (DataRow ro in defRows.Rows)
                                        {
                                            ro["CTITLE"] = colname;
                                            ro["CTITLENO"] = i.ToString();
                                            dtmain.ImportRow(ro);
                                        }
                                    }
                                    dtmain.AcceptChanges();
                                    dt = dtmain;
                                }
                                #endregion
                                dt.TableName = "prepcur";
                                ds.Tables.Add(dt);
                                dthsn.TableName = "prepcur2";
                                othrr.TableName = "prepcur3";
                                invtaxes.TableName = "prepcur4";
                                ds.Tables.Add(dthsn);
                                ds.Tables.Add(othrr);
                                ds.Tables.Add(invtaxes);
                                sgen.open_report_byDs_xml(userCode, ds, rpt_name, "Performa Invoice");
                                ViewBag.scripCall += "showRptnew('Performa Invoice');disableForm();";
                            }
                            else
                            {
                                ViewBag.scripCall = "showmsgJS(1, 'Data Not Exist', 2);";
                            }
                            break;
                        case "EDIT":
                            mq = "select a.*,to_char(convert_tz(vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') vch_date1,to_char(convert_tz(pi_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') pi_date1,to_char(convert_tz(podate,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') podate1 from itransactionc a " +
                            "where client_id||client_unit_id||vch_num||to_char(vch_date, 'yyyymmdd')||pur_type= '" + URL + "'";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "EDMODE", "Y");
                                #region 1.pay_term
                                TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1 = cmd_Fun.payterm(userCode, unitid_mst, out defcall);
                                #endregion
                                #region 2.priceterms
                                TempData[MyGuid + "_Tlist2"] = model[0].TList2 = mod2 = cmd_Fun.priceterm(userCode, unitid_mst);
                                #endregion
                                #region 3.Transportmode
                                TempData[MyGuid + "_Tlist3"] = model[0].TList3 = mod3 = cmd_Fun.transportmode(userCode, unitid_mst);
                                TempData[MyGuid + "_Tlist3"] = model[0].TList4 = mod4;
                                #endregion
                                model[0].Col80 = dt.Rows[0]["gdisc"].ToString();
                                model[0].Col56 = dt.Rows[0]["pono"].ToString();
                                model[0].Col57 = dt.Rows[0]["podate1"].ToString();
                                model[0].Col1 = dt.Rows[0]["client_id"].ToString();
                                model[0].Col2 = dt.Rows[0]["client_unit_id"].ToString();
                                model[0].Col3 = dt.Rows[0]["ent_by"].ToString();
                                model[0].Col4 = dt.Rows[0]["ent_date"].ToString();
                                model[0].Col5 = dt.Rows[0]["edit_by"].ToString();
                                model[0].Col6 = dt.Rows[0]["edit_date"].ToString();
                                model[0].Col8 = "client_id||client_unit_id||vch_num|| To_Char(vch_date, 'yyyymmdd')||pur_type = '" + URL + "'";
                                model[0].Col10 = model[0].Col10;
                                model[0].Col11 = model[0].Col11;
                                model[0].Col13 = "Update";
                                model[0].Col100 = "Update & New";
                                model[0].Col121 = "U";
                                model[0].Col122 = "<u>U</u>pdate";
                                model[0].Col123 = "Update & Ne<u>w</u>";
                                model[0].Col14 = model[0].Col14;
                                model[0].Col15 = model[0].Col15;
                                model[0].Col16 = dt.Rows[0]["vch_num"].ToString();
                                model[0].Col47 = dt.Rows[0]["vch_num"].ToString();
                                model[0].Col48 = dt.Rows[0]["vch_date1"].ToString();
                                model[0].Col12 = dt.Rows[0]["type"].ToString();
                                model[0].Chk1 = (dt.Rows[0]["is_other"].ToString() == "Y") ? true : false;
                                if (model[0].Chk1) model[0].Col63 = dt.Rows[0]["other_per"].ToString();
                                sgen.SetSession(MyGuid, "BDPIORDTYPE", model[0].Col12);
                                String[] L1 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["pay_term"].ToString()).Distinct()).Split(',');
                                String[] L2 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["price_term"].ToString()).Distinct()).Split(',');
                                String[] L3 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["tmode"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems1 = L1;
                                model[0].SelectedItems2 = L2;
                                model[0].SelectedItems3 = L3;
                                mq1 = "select a.c_name as name,a.c_gstin as gstin,a.addr as Address,a.vch_num,a.tor,nvl(ba.country_name,'-') as country_name," +
             "nvl(ba.state_name,'-') state_name,nvl(ba.city_name,'-') as city_name,a.pincode_2 from clients_mst a left join country_state ba on ba.rec_id = a.city2 where find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 and a.type='BCD' and substr(a.vch_num,0,3)='303' and a.vch_num='" + dt.Rows[0]["acode"].ToString() + "'";
                                DataTable dtp = sgen.getdata(userCode, mq1);
                                if (dtp.Rows.Count > 0)
                                {
                                    model[0].Col49 = dtp.Rows[0]["vch_num"].ToString();
                                    model[0].Col20 = dtp.Rows[0]["name"].ToString();
                                    model[0].Col21 = dtp.Rows[0]["address"].ToString();
                                    model[0].Col22 = dtp.Rows[0]["gstin"].ToString();
                                    model[0].Col52 = dtp.Rows[0]["tor"].ToString();
                                    model[0].Col75 = dtp.Rows[0]["city_name"].ToString();
                                    model[0].Col76 = dtp.Rows[0]["state_name"].ToString();
                                    model[0].Col77 = dtp.Rows[0]["country_name"].ToString();
                                    model[0].Col78 = dtp.Rows[0]["pincode_2"].ToString();
                                    sgen.SetSession(MyGuid, "BDPIPARTY", model[0].Col49);
                                    mq1 = "select (ct.ref_code||ct.vch_num||ct.type) as cont_perid,a.vch_num as Account_No,  a.c_name CUSTNAME," +
                          "((replace(ct.cpname, '0', '') || ' ' || replace(ct.cp_mname, '0', '') || ' ' || replace(ct.cp_lname, '0', ''))) cp_name,'Account Detail' as Data_Source" +
                          " from clients_mst a INNER join clients_mst ct  on a.vch_num = ct.ref_code and find_in_set(ct.client_unit_id, '" + unitid_mst + "') = 1 and substr(ct.ref_code,0,3)= '303'" +
                          " and a.vch_num='" + model[0].Col49 + "' where find_in_set(a.client_unit_id,'" + unitid_mst + "')= 1 and a.type in ('BCD')  and(a.mftr is null or a.mftr = '0' or a.mftr = 'N') and " +
                          "(a.pubr is null or a.pubr = '0' or a.pubr = 'N') and substr(a.vch_num,0,3)= '303'";
                                    DataTable dtcp = new DataTable();
                                    dtcp = sgen.getdata(userCode, mq1);
                                    if (dtcp.Rows.Count > 0)
                                    {
                                        foreach (DataRow dataRow in dtcp.Rows)
                                        {
                                            mod4.Add(new SelectListItem { Text = dataRow["cp_name"].ToString(), Value = dataRow["cont_perid"].ToString() });
                                        }
                                    }
                                    TempData[MyGuid + "_Tlist4"] = model[0].TList4 = mod4;
                                    String[] L4 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["per_id"].ToString()).Distinct()).Split(',');
                                    model[0].SelectedItems4 = L4;
                                }
                                mq1 = "select a.c_name as name,a.c_gstin as gstin,a.addr as Address,a.vch_num from clients_mst a where find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 and a.type='BCD' and a.vch_num='" + dt.Rows[0]["shipfrom"].ToString() + "' and substr(a.vch_num,0,3)='303'";
                                dtp = sgen.getdata(userCode, mq1);
                                if (dtp.Rows.Count > 0)
                                {
                                    model[0].Col50 = dtp.Rows[0]["vch_num"].ToString();
                                    model[0].Col23 = dtp.Rows[0]["name"].ToString();
                                    model[0].Col24 = dtp.Rows[0]["address"].ToString();
                                    model[0].Col25 = dtp.Rows[0]["gstin"].ToString();
                                }
                                mq1 = "select a.c_name as name,a.c_gstin as gstin,a.addr as Address,a.vch_num from clients_mst a where find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 and a.type='BCD' and a.vch_num='" + dt.Rows[0]["shipfrom"].ToString() + "' and substr(a.vch_num,0,3)='303'";
                                dtp = sgen.getdata(userCode, mq1);
                                if (dtp.Rows.Count > 0)
                                {
                                    model[0].Col51 = dtp.Rows[0]["vch_num"].ToString();
                                    model[0].Col26 = dtp.Rows[0]["name"].ToString();
                                    model[0].Col27 = dtp.Rows[0]["address"].ToString();
                                    model[0].Col28 = dtp.Rows[0]["gstin"].ToString();
                                }

                                model[0].Col31 = dt.Rows[0]["totremark"].ToString();
                                model[0].Col32 = dt.Rows[0]["cond"].ToString();
                                model[0].Col33 = dt.Rows[0]["basicamt"].ToString();
                                model[0].Col37 = dt.Rows[0]["ginstlchrg"].ToString();
                                model[0].Col38 = dt.Rows[0]["gserchrg"].ToString();
                                model[0].Col39 = dt.Rows[0]["gamc"].ToString();
                                model[0].Col40 = dt.Rows[0]["gloadchrg"].ToString();
                                model[0].Col54 = dt.Rows[0]["pur_type"].ToString();
                                model[0].Col9 = sgen.seekval(userCode, "select upper(master_name) master_name from master_setting where master_id='" + dt.Rows[0]["type"].ToString() + "' and type='KPO'", "master_name");
                                model[0].Col62 = dt.Rows[0]["gtaxamt"].ToString();
                                model[0].Col59 = dt.Rows[0]["gothrchrg"].ToString();
                                DataTable gdt = new DataTable();
                                if (model[0].Col80 == "77")
                                {
                                    gdt = sgen.getdata(userCode, "select '' Item,'1' as  SNo ,'-' as Icode,'-' as IName,'-' PARTNO,'-'  HSN,'-' as UOM,'0' as TaxRate,'0' as  Qty_in_stock,'0' as Qty_Ord,'0' as IRate," +
                                      "'-' disc_type,'0' as disc_rate,'0' IAmount,'0' TaxAmount,'0' discAmount,'0' LineAmount,'-' as QT_NO,'-' as QT_DATE,'-' as Remark from dual");
                                    model[0].dt1 = gdt;
                                    sgen.SetSession(MyGuid, "PIV_DT", gdt.Copy());
                                    model[0].Col81 = "WITH QUOTATION";
                                }
                                else
                                {
                                    gdt = sgen.getdata(userCode, "select '' Item,'1' as  SNo ,'-' as Icode,'-' as IName,'-' PARTNO,'-'  HSN,'-' as UOM,'0' as TaxRate,'0' as  Qty_in_stock,'0' as Qty_Ord,'0' as IRate," +
                                         "'-' disc_type,'0' as disc_rate,'0' IAmount,'0' TaxAmount,'0' discAmount,'0' LineAmount,'-' as Remark from dual");
                                    model[0].dt1 = gdt;
                                    model[0].Col81 = "WITHOUT QUOTATION";
                                    sgen.SetSession(MyGuid, "PIV_DT", gdt.Copy());
                                }
                                sgen.SetSession(MyGuid, "BDPITYPE", model[0].Col80);
                                model[0].dt1 = model[0].dt1.Clone();
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["SNo"] = i + 1;
                                    dr["Icode"] = dt.Rows[i]["icode"].ToString();
                                    dr["IName"] = dt.Rows[i]["iname"].ToString();
                                    dr["PARTNO"] = dt.Rows[i]["cpartno"].ToString();
                                    dr["HSN"] = dt.Rows[i]["hsno"].ToString();
                                    dr["UOM"] = dt.Rows[i]["uom"].ToString();
                                    dr["TaxRate"] = dt.Rows[i]["taxrate"].ToString();
                                    if (model[0].Col80 == "77")
                                    {
                                        dr["QT_NO"] = dt.Rows[i]["pi_no"].ToString();
                                        dr["QT_DATE"] = dt.Rows[i]["pi_date1"].ToString();
                                    }
                                    dr["Qty_in_stock"] = dt.Rows[i]["qtystk"].ToString();
                                    dr["Qty_Ord"] = dt.Rows[i]["ordqty"].ToString();
                                    dr["IRate"] = dt.Rows[i]["irate"].ToString();
                                    dr["disc_type"] = dt.Rows[i]["disctype"].ToString();
                                    dr["disc_rate"] = dt.Rows[i]["discrate"].ToString();
                                    dr["Iamount"] = dt.Rows[i]["Iamount"].ToString();
                                    dr["taxamount"] = dt.Rows[i]["taxamt"].ToString();
                                    dr["discamount"] = dt.Rows[i]["discamt"].ToString();
                                    dr["lineamount"] = dt.Rows[i]["lineamount"].ToString();
                                    dr["Remark"] = dt.Rows[i]["iremark"].ToString();
                                    model[0].dt1.Rows.Add(dr);
                                }
                                model[0].dt1.AcceptChanges();
                                //other charges LTM
                                mq1 = "select ch.master_name chrgname,en.col1,en.col2,en.col3,en.col4,en.col5,en.col6,en.col7,en.col8,en.col9,en.col10,en.col11,en.col12,en.r_no from enx_tab en " +
                                    "inner join master_setting ch on en.col1=ch.master_id and ch.type='MR0' and find_in_set(ch.client_unit_id,en.client_unit_id)=1 " +
                                    "where (en.client_id||en.client_unit_id||en.vch_num||to_char(en.vch_date, 'yyyymmdd')|| en.type) = '" + URL + "'";
                                dt = sgen.getdata(userCode, mq1);
                                if (dt.Rows.Count > 0)
                                {
                                    model[0].Col85 = "client_id||client_unit_id||vch_num|| To_Char(vch_date, 'yyyymmdd')|| type = '" + URL + "'";
                                    model[0].LTM1 = new List<Tmodelmain>();
                                    foreach (DataRow dr in dt.Rows)
                                    {
                                        model[0].LTM1.Add(new Tmodelmain
                                        {
                                            Col13 = dr["col3"].ToString(),//chrgrtid
                                            Col14 = dr["r_no"].ToString(),//rno
                                            Col15 = dr["col1"].ToString(),//chrgid
                                            Col16 = dr["col2"].ToString(),//chrgamt
                                            Col17 = dr["col4"].ToString(),//igstrt
                                            Col18 = dr["col5"].ToString(),//igstamt
                                            Col19 = dr["col6"].ToString(),//cgstrt
                                            Col20 = dr["col7"].ToString(),//cgstamt
                                            Col21 = dr["col8"].ToString(),//sgstrt
                                            Col22 = dr["col9"].ToString(),//sgstamt
                                            Col23 = dr["chrgname"].ToString(),//chrgname
                                            Col25 = dr["col12"].ToString(),//chrgrate
                                            Col27 = dr["col10"].ToString(),//
                                            Col28 = dr["col11"].ToString(),//
                                        });
                                    }
                                }
                            }
                            break;
                        case "NEW":
                            mq = "select master_id,upper(master_name) master_name,to_char(utc_timestamp(),'" + sgen.Getsqldateformat() + "') po_date " +
                                "from master_Setting where master_id||To_Char(vch_date, 'yyyymmdd')||type = '" + URL + "' ";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "EDMODE", "N");
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                                ViewBag.scripCall = "enableForm();";
                                model[0].Col48 = dt.Rows[0]["po_date"].ToString();
                                model[0].Col12 = dt.Rows[0]["master_id"].ToString();
                                model[0].Col9 = dt.Rows[0]["master_name"].ToString();
                                sgen.SetSession(MyGuid, "BDPIORDTYPE", model[0].Col12);
                                mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + dt.Rows[0]["master_id"].ToString() + "'" + model[0].Col11.Trim() + " and pur_type='BPI'";
                                vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                                model[0].Col47 = vch_num;
                                model[0].Col16 = vch_num;
                                model[0].Col31 = "-";
                                model[0].Col32 = "-";
                                model[0].Col17 = "1";
                                model[0].Col100 = "Save & New";
                                model[0].Col121 = "S";
                                model[0].Col122 = "<u>S</u>ave";
                                model[0].Col123 = "Save & Ne<u>w</u>";
                                #region 1.pay_term
                                TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1 = cmd_Fun.payterm(userCode, unitid_mst, out defcall);

                                #endregion
                                #region 2.priceterms
                                TempData[MyGuid + "_Tlist2"] = model[0].TList2 = mod2 = cmd_Fun.priceterm(userCode, unitid_mst);
                                // TempData[MyGuid + "_Tlist2"] = mod2;
                                #endregion
                                #region 3.Transportmode
                                TempData[MyGuid + "_Tlist3"] = model[0].TList3 = mod3 = cmd_Fun.transportmode(userCode, unitid_mst);
                                TempData[MyGuid + "_Tlist4"] = model[0].TList4 = mod4;
                                #endregion
                                model[0].SelectedItems1 = new string[] { "" };
                                model[0].SelectedItems2 = new string[] { "" };
                                model[0].SelectedItems3 = new string[] { "" };
                                Make_query(viewName.ToLower(), "Select PI Type", "BDQTN_TYPE", "1", "", "", MyGuid);
                                ViewBag.scripCall = "callFoo('Select PI Type');";
                            }
                            break;
                        case "BDQTN_TYPE":
                            mq = "select * from (select '001' fstr,'77' master_id,'WITH QUOTATION' PI_Against from dual union all select '002' " +
                                "fstr,'78' master_id,'WITHOUT QUOTATION' PI_Against from dual) a where fstr='" + URL + "'";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                model[0].Col80 = dt.Rows[0]["master_id"].ToString();
                                model[0].Col81 = dt.Rows[0]["PI_Against"].ToString();
                                sgen.SetSession(MyGuid, "BDPITYPE", dt.Rows[0]["master_id"].ToString());
                                DataTable gdt = new DataTable();
                                if (model[0].Col80 == "77")
                                {
                                    gdt = sgen.getdata(userCode, "select '' Item,'1' as  SNo ,'-' as Icode,'-' as IName,'-' PARTNO,'-'  HSN,'-' as UOM,'0' as TaxRate,'0' as  Qty_in_stock,'0' as Qty_Ord,'0' as IRate," +
                                      "'-' disc_type,'0' as disc_rate,'0' IAmount,'0' TaxAmount,'0' discAmount,'0' LineAmount,'-' as QT_NO,'-' as QT_DATE,'-' as Remark from dual");
                                }
                                else
                                {
                                    gdt = sgen.getdata(userCode, "select '' Item,'1' as  SNo ,'-' as Icode,'-' as IName,'-' PARTNO,'-'  HSN,'-' as UOM,'0' as TaxRate,'0' as  Qty_in_stock,'0' as Qty_Ord,'0' as IRate," +
                                           "'-' disc_type,'0' as disc_rate,'0' IAmount,'0' TaxAmount,'0' discAmount,'0' LineAmount,'-' as Remark from dual");
                                }
                                model[0].dt1 = gdt;
                                sgen.SetSession(MyGuid, "PIV_DT", gdt.Copy());
                                Make_query(viewName.ToLower(), "Select PARTY", "PARTY", "1", "", "", MyGuid);
                                ViewBag.scripCall = "callFoo('Select PARTY');";
                            }
                            break;
                        case "PARTY":
                            mq = "select a.c_name as name,a.c_gstin as gstin,a.addr as Address,a.vch_num,a.tor,nvl(ba.country_name,'-') as country_name," +
"nvl(ba.state_name,'-') state_name,nvl(ba.city_name,'-') as city_name,a.pincode_2 from clients_mst a left join country_state ba on ba.rec_id = a.city2 where a.vch_num||To_Char(a.vch_date, 'yyyymmdd')|| a.type = '" + URL + "'";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                model[0].Col49 = dt.Rows[0]["vch_num"].ToString();
                                model[0].Col20 = dt.Rows[0]["name"].ToString();
                                model[0].Col21 = dt.Rows[0]["address"].ToString();
                                model[0].Col22 = dt.Rows[0]["gstin"].ToString();
                                model[0].Col52 = dt.Rows[0]["tor"].ToString();
                                model[0].Col75 = dt.Rows[0]["city_name"].ToString();
                                model[0].Col76 = dt.Rows[0]["state_name"].ToString();
                                model[0].Col77 = dt.Rows[0]["country_name"].ToString();
                                model[0].Col78 = dt.Rows[0]["pincode_2"].ToString();
                                sgen.SetSession(MyGuid, "BDPIPARTY", model[0].Col49);
                                mq1 = "select (ct.ref_code||ct.vch_num||ct.type) as cont_perid,a.vch_num as Account_No,  a.c_name CUSTNAME," +
                                    "((replace(ct.cpname, '0', '') || ' ' || replace(ct.cp_mname, '0', '') || ' ' || replace(ct.cp_lname, '0', ''))) cp_name,'Account Detail' as Data_Source" +
                                    " from clients_mst a INNER join clients_mst ct  on a.vch_num = ct.ref_code and find_in_set(ct.client_unit_id, '" + unitid_mst + "') = 1 and substr(ct.ref_code,0,3)= '303'" +
                                    " and a.vch_num='" + model[0].Col49 + "' where find_in_set(a.client_unit_id,'" + unitid_mst + "')= 1 and a.type in ('BCD')  and(a.mftr is null or a.mftr = '0' or a.mftr = 'N') and " +
                                    "(a.pubr is null or a.pubr = '0' or a.pubr = 'N') and substr(a.vch_num,0,3)= '303'";
                                DataTable dtcp = new DataTable();
                                dtcp = sgen.getdata(userCode, mq1);
                                if (dtcp.Rows.Count > 0)
                                {
                                    foreach (DataRow dataRow in dtcp.Rows)
                                    {
                                        mod4.Add(new SelectListItem { Text = dataRow["cp_name"].ToString(), Value = dataRow["cont_perid"].ToString() });
                                    }
                                }
                                TempData[MyGuid + "_Tlist4"] = model[0].TList4 = mod4;
                                //String[] L4 = System.String.Join(",", dtcp.Rows.OfType<DataRow>().Select(r => r["cont_perid"].ToString()).Distinct()).Split(',');
                                //model[0].SelectedItems4 = L4;
                                if (dtcp.Rows.Count > 0) model[0].SelectedItems4 = new string[] { dtcp.Rows[0]["cont_perid"].ToString() };
                            }
                            break;

                        case "ITEM":
                            string vchdate = (model[0].Col126 == "" || model[0].Col126 == null) ? model[0].Col48 : model[0].Col126;
                            var cond2 = "and client_unit_id||vch_num||to_char(vch_date,'" + sgen.Getsqldateformat() + "')||type not in (" +
                                  "'" + unitid_mst + model[0].Col16 + vchdate + model[0].Col12 + "')";

                            if (model[0].Col80 == "77")
                            {
                                mq = "select pi.qt_NO||it.icode||to_char(it.vch_date,'yyyymmdd')||it.type as fstr,it.icode as Icode,TRIM(dbms_lob.substr(it.description,4000,1)) description,it.iname as Iname" +
                                    ",it.cpartno Partno,um.master_name as UOM,'-' as disctype,nvl(it.amortchrgs,'0') amortchrgs,nvl(it.matjobwork,'0') matjobwork,'0' mcamt,pi.bal_qty as qtyord,pi.irate,nvl((case when it.tcs='Y' then nvl(hsn.col1,'0%') else '0%' end),'0') tcsper,pi.discrate,nvl(hsn.master_name,'-') as hsn,nvl(hsn.group_name,'0') taxrate,'0' as tcsamt,pi.qt_NO as QT_NO,pi.qt_date QT_DATE, nvl(s.closing, '0') as qtystk from item it left join " +
                                    "master_setting um on um.master_id = it.uom and um.type = 'UMM' and " +
                                    "find_in_set(um.client_unit_id, it.client_unit_id)= 1 left join master_setting hsn on hsn.master_id = it.hsno and hsn.type = 'HSN' and " +
                                    "find_in_set(hsn.client_unit_id, it.client_unit_id)= 1 left join(select icode,client_unit_id,sum(op) op,sum(pktop) pktop,sum(qtyin) qtyin,sum(qtyout) out," +
                                      "sum(op)+sum(qtyin)-sum(qtyout) closing from (select icode, client_unit_id, nvl(op_2019, 0) op," +
                                      " nvl(pkt_2019, 0) pktop, 0 qtyin, 0 qtyout, 0 pktno from itbal union all select icode, client_unit_id, " +
                                      "sum(to_number(qtyin)) - sum(to_number(qtyout)) op, sum((case when substr(type, 1, 1) in ('0', '1') then" +
                                      " pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktop,sum(to_number(qtyin)) " +
                                      "qtyin,sum(to_number(qtyout)) qtyout,0 pktno from itransaction where trim(store) = 'Y' and " +
                                      "to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and " +
                                      "to_date('" + year_from.Split(' ')[0].Trim() + "','" + sgen.Getsqldateformat() + "')-1 group by icode,client_unit_id union all select icode,client_unit_id," +
                                      "0 as op,0 as pktop,to_number(qtyin) qtyin,to_number(qtyout) qtyout,sum((case when substr(type, 1, 1) in " +
                                      "('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktno from " +
                                      "itransaction where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between " +
                                      "to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and to_date('" + model[0].Col48 + "','" + sgen.Getsqldateformat() + "') " + cond2 + " group by icode,client_unit_id," +
                                      "to_number(qtyin),to_number(qtyout)) a group by icode, client_unit_id) s on it.icode = s.icode and find_in_set(it.client_unit_id, s.client_unit_id)=1" +
                                    "inner join (select a.qt_NO,a.qt_date,a.type,a.icode,a.acode,a.client_id,a.client_unit_id,a.irate,a.discrate,max(a.qt_qty) qt_qty, sum(a.inv_qty) as inv_qty,(max(a.qt_qty) - nvl(sum(a.inv_qty), '0')) as bal_qty from(select qt.vch_num as qt_NO,to_char(qt.vch_date, 'dd/MM/YYYY') qt_date" +
                                    ",qt.type,qt.icode,qt.acode,qt.client_id,qt.client_unit_id,qt.irate,qt.discrate,qt.ORDQTY as qt_qty,nvl(iv.ORDQTY,'0') as inv_qty from itransactionc qt left join itransactionc iv on iv.pi_no = qt.vch_num and substr(iv.type,1,1)='4' " +
                                    "and iv.gdisc = '77' and iv.icode=qt.icode and iv.pur_type='BPI'and iv.client_unit_id = qt.client_unit_id where substr(qt.type,1,1)='4' and qt.pur_type='QTN' and qt.client_unit_id = '" + unitid_mst + "' union all select " +
                                    "qt.vch_num as qt_NO,to_char(qt.vch_date, 'dd/MM/YYYY') qt_date,qt.type,qt.icode,qt.acode,qt.client_id,qt.client_unit_id,qt.irate,qt.discrate,qt.ORDQTY as qt_qty,nvl(iv.col11, '0') as close_qty from itransactionc qt " +
                                    "left join enx_tab iv on iv.col12 = qt.vch_num and iv.type = 'CPQ' and iv.col7=qt.icode and iv.client_unit_id = qt.client_unit_id where substr(qt.type,1,1)='4' and qt.pur_type='QTN' and qt.client_unit_id = '" + unitid_mst + "' ) a " +
                                    "group by(a.qt_NO,a.qt_date,a.type,a.icode,a.acode,a.client_id,a.client_unit_id,a.irate,a.discrate)) pi on pi.icode=it.icode where " +
                                    "pi.qt_NO || it.icode || to_char(it.vch_date, 'yyyymmdd') || it.type in ('" + URL + "')";
                            }
                            else if (model[0].Col80 == "78")
                            {
                                mq = "select distinct '-' fstr,it.icode,TRIM(dbms_lob.substr(it.description,4000,1)) description,it.iname,it.cpartno as partno,um.master_name as UOM,'0' as disc_rate,'-' disctype,'0' IAmount," +
                                    "'0' TaxAmount,'0' discAmount,'0' LineAmount,'0' as IRate,nvl(hsn.master_name,'-') as hsn,nvl(hsn.group_name,'0') taxrate,nvl(s.closing, 0) qtystk," +
                                    "nvl(it.amortchrgs,'0') amortchrgs,nvl(it.matjobwork,'0') matjobwork,'0' mcamt,'0' qtyord,'0' ind_no,'-' ind_date,'0' tcsamt,nvl((case when it.tcs='Y' then nvl(hsn.col1,'0%') else '0%' end),'0') tcsper from item it " +
                                    "left join master_setting um on um.master_id = it.uom and um.type = 'UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
                                    "left join master_setting hsn on hsn.master_id = it.hsno and hsn.type = 'HSN' and find_in_set(hsn.client_unit_id,it.client_unit_id)=1 " +
                                    "left join(select icode,client_unit_id,sum(op) op,sum(pktop) pktop,sum(qtyin) qtyin,sum(qtyout) out," +
                                      "sum(op)+sum(qtyin)-sum(qtyout) closing from (select icode, client_unit_id, nvl(op_2019, 0) op," +
                                      " nvl(pkt_2019, 0) pktop, 0 qtyin, 0 qtyout, 0 pktno from itbal union all select icode, client_unit_id, " +
                                      "sum(to_number(qtyin)) - sum(to_number(qtyout)) op, sum((case when substr(type, 1, 1) in ('0', '1') then" +
                                      " pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktop,sum(to_number(qtyin)) " +
                                      "qtyin,sum(to_number(qtyout)) qtyout,0 pktno from itransaction where trim(store) = 'Y' and " +
                                      "to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and " +
                                      "to_date('" + year_from.Split(' ')[0].Trim() + "','" + sgen.Getsqldateformat() + "')-1 group by icode,client_unit_id union all select icode,client_unit_id," +
                                      "0 as op,0 as pktop,to_number(qtyin) qtyin,to_number(qtyout) qtyout,sum((case when substr(type, 1, 1) in " +
                                      "('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktno from " +
                                      "itransaction where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between " +
                                      "to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and to_date('" + model[0].Col48 + "','" + sgen.Getsqldateformat() + "') " + cond2 + " group by icode,client_unit_id," +
                                      "to_number(qtyin),to_number(qtyout)) a group by icode, client_unit_id) s on it.icode = s.icode and find_in_set(it.client_unit_id, s.client_unit_id)=1 " +
                                    "where it.icode || to_char(it.vch_date, 'yyyymmdd') || it.type in ('" + URL + "')";
                            }
                            else
                            {
                                mq = "select distinct '-' fstr,TRIM(dbms_lob.substr(it.description,4000,1)) description,it.icode,it.iname,it.cpartno as partno,um.master_name as UOM," +
                                       "'0' as disc_rate,'-' disctype,'0' IAmount,'0' TaxAmount,'0' discAmount,'0' LineAmount,'0' as IRate,nvl(hsn.master_name,'-') as hsn,nvl(hsn.group_name,'0') taxrate, " +
                                   "nvl(s.closing, 0) AS qtystk,it.amortchrgs,it.matjobwork,'0' mcamt,'0' qtyord,'0' ind_no,'-' ind_date from item it" +
                                   " left join master_setting um on um.master_id = it.uom and " +
                                   "um.type = 'UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1" +
                                   " left join master_setting hsn on hsn.master_id = it.hsno and hsn.type = 'HSN' " +
                                   "and find_in_set(hsn.client_unit_id,it.client_unit_id)=1 " +
                                   "left join(select icode,client_unit_id,sum(op) op,sum(pktop) pktop,sum(qtyin) qtyin,sum(qtyout) out," +
                                      "sum(op)+sum(qtyin)-sum(qtyout) closing from (select icode, client_unit_id, nvl(op_2019, 0) op," +
                                      " nvl(pkt_2019, 0) pktop, 0 qtyin, 0 qtyout, 0 pktno from itbal union all select icode, client_unit_id, " +
                                      "sum(to_number(qtyin)) - sum(to_number(qtyout)) op, sum((case when substr(type, 1, 1) in ('0', '1') then" +
                                      " pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktop,sum(to_number(qtyin)) " +
                                      "qtyin,sum(to_number(qtyout)) qtyout,0 pktno from itransaction where trim(store) = 'Y' and " +
                                      "to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and " +
                                      "to_date('" + year_from.Split(' ')[0].Trim() + "','" + sgen.Getsqldateformat() + "')-1 group by icode,client_unit_id union all select icode,client_unit_id," +
                                      "0 as op,0 as pktop,to_number(qtyin) qtyin,to_number(qtyout) qtyout,sum((case when substr(type, 1, 1) in " +
                                      "('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktno from " +
                                      "itransaction where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between " +
                                      "to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and to_date('" + model[0].Col48 + "','" + sgen.Getsqldateformat() + "') " + cond2 + " group by icode,client_unit_id," +
                                      "to_number(qtyin),to_number(qtyout)) a group by icode, client_unit_id)" +
                                   " s on it.icode = s.icode and find_in_set(it.client_unit_id, s.client_unit_id)=1 where " +
                                   "it.icode || to_char(it.vch_date, 'yyyymmdd') || it.type in ('" + URL + "')";
                            }
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt1.Rows.RemoveAt(0); }
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["Item"] = dt.Rows[i]["fstr"].ToString();
                                    dr["SNo"] = i + 1;
                                    dr["Icode"] = dt.Rows[i]["icode"].ToString();
                                    dr["IName"] = dt.Rows[i]["iname"].ToString();
                                    dr["PARTNO"] = dt.Rows[i]["partno"].ToString();
                                    dr["HSN"] = dt.Rows[i]["hsn"].ToString();
                                    dr["UOM"] = dt.Rows[i]["uom"].ToString();
                                    dr["TaxRate"] = dt.Rows[i]["taxrate"].ToString();
                                    dr["Qty_In_Stock"] = dt.Rows[i]["qtystk"].ToString();
                                    dr["IRate"] = "0";
                                    dr["disc_type"] = "0";
                                    dr["disc_rate"] = "0";
                                    dr["Iamount"] = "0";
                                    dr["taxamount"] = "0";
                                    dr["discamount"] = "0";
                                    dr["lineamount"] = "0";
                                    dr["Qty_ord"] = dt.Rows[i]["qtyord"].ToString();
                                    dr["remark"] = dt.Rows[i]["description"].ToString();
                                    if (model[0].Col80 == "77")
                                    {
                                        dr["QT_NO"] = dt.Rows[i]["QT_NO"].ToString();
                                        dr["QT_DATE"] = dt.Rows[i]["QT_DATE"].ToString();
                                        dr["IRate"] = dt.Rows[i]["irate"].ToString();
                                        dr["disc_type"] = dt.Rows[i]["disctype"].ToString();
                                        dr["disc_rate"] = dt.Rows[i]["discrate"].ToString();
                                    }
                                    model[0].dt1.Rows.Add(dr);
                                }
                                model[0].dt1.AcceptChanges();
                            }
                            break;
                        case "PARTYFRM":
                            mq = "select a.c_name as name,a.c_gstin as gstin,a.addr as Address,a.vch_num from clients_mst a " +
                                "where a.vch_num||to_char(a.vch_date, 'yyyymmdd')|| a.type = '" + URL + "'";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                model[0].Col50 = dt.Rows[0]["vch_num"].ToString();
                                model[0].Col23 = dt.Rows[0]["name"].ToString();
                                model[0].Col24 = dt.Rows[0]["address"].ToString();
                                model[0].Col25 = dt.Rows[0]["gstin"].ToString();
                            }
                            break;
                        case "PARTYTO":
                            mq = "select a.c_name as name,a.c_gstin as gstin,a.addr as Address,a.vch_num from clients_mst a " +
                                "where a.vch_num||to_char(a.vch_date, 'yyyymmdd')|| a.type = '" + URL + "'";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                model[0].Col51 = dt.Rows[0]["vch_num"].ToString();
                                model[0].Col26 = dt.Rows[0]["name"].ToString();
                                model[0].Col27 = dt.Rows[0]["address"].ToString();
                                model[0].Col28 = dt.Rows[0]["gstin"].ToString();
                            }
                            break;
                        case "CHRGS":
                            mq = "select master_id,master_name from master_setting where (master_id||to_char(vch_date,'yyyymmdd')||type) in ('" + URL + "')";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                int i = 0;
                                if (model[0].LTM1 == null) { model[0].LTM1 = new List<Tmodelmain>(); }
                                if (model[0].LTM1.Count == 0) { model[0].LTM1 = new List<Tmodelmain>(); }
                                else i = model[0].LTM1.Count;
                                foreach (DataRow dr in dtt.Rows)
                                {
                                    i++;
                                    model[0].LTM1.Add(new Tmodelmain
                                    {
                                        Col14 = i.ToString(),
                                        Col15 = dr["master_id"].ToString(),
                                        Col23 = dr["master_name"].ToString(),
                                        Col16 = "0",
                                        Col17 = "0",
                                        Col18 = "0",
                                        Col19 = "0",
                                        Col20 = "0",
                                        Col21 = "0",
                                        Col22 = "0",
                                    });
                                }
                            }
                            break;
                        case "CHRGDEL":
                            if (sgen.GetSession(MyGuid, "pivdelrno") != null)
                            {
                                var mrno = sgen.GetSession(MyGuid, "pivdelrno").ToString();
                                var LTM = model[0].LTM1;
                                for (int d = 0; d < LTM.Count; d++)
                                {
                                    string chrgno = LTM[d].Col14;
                                    if (chrgno.Trim() == mrno.Trim()) { model[0].LTM1.RemoveAt(d); }
                                }
                                sgen.SetSession(MyGuid, "pivdelrno", null);
                            }
                            break;
                        case "RATE":
                            if (sgen.GetSession(MyGuid, "pirtrno") == null)
                            {
                                ViewBag.scripCall += "showmsgJS(1,'Rno not defined', 0);";
                                return model;
                            }
                            var rno = sgen.Make_int(sgen.GetSession(MyGuid, "pirtrno").ToString());
                            mq = "select master_id DocNo,vch_num,master_name,group_name TaxRate from master_setting where (master_id||to_char(vch_date,'yyyymmdd')||type)='" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                model[0].LTM1[rno - 1].Col13 = dtt.Rows[0]["DocNo"].ToString().Trim();
                                model[0].LTM1[rno - 1].Col27 = dtt.Rows[0]["vch_num"].ToString().Trim();
                                model[0].LTM1[rno - 1].Col28 = dtt.Rows[0]["master_name"].ToString().Trim();
                                var utgst = model[0].Col18.Substring(0, 2).Trim();
                                var pgst = "";
                                if (model[0].Col22 == "Not Registered") pgst = model[0].Col22;
                                else pgst = model[0].Col22.Substring(0, 2).Trim();
                                if ((utgst == pgst) || pgst == "Not Registered")
                                {
                                    var amt = sgen.Make_decimal(model[0].LTM1[rno - 1].Col16);
                                    var rt = sgen.Make_decimal(dtt.Rows[0]["TaxRate"].ToString().Trim().Split('%')[0].Trim());
                                    var amtrt = (amt * rt) / 100;
                                    model[0].LTM1[rno - 1].Col19 = (rt / 2).ToString() + "%";
                                    model[0].LTM1[rno - 1].Col20 = (amtrt / 2).ToString();
                                    model[0].LTM1[rno - 1].Col21 = (rt / 2).ToString() + "%";
                                    model[0].LTM1[rno - 1].Col22 = (amtrt / 2).ToString();
                                }
                                else
                                {
                                    var amt = sgen.Make_decimal(model[0].LTM1[rno - 1].Col16);
                                    var rt = sgen.Make_decimal(dtt.Rows[0]["TaxRate"].ToString().Trim().Split('%')[0].Trim());
                                    var amtrt = (amt * rt) / 100;
                                    model[0].LTM1[rno - 1].Col17 = rt.ToString() + "%";
                                    model[0].LTM1[rno - 1].Col18 = amtrt.ToString();
                                }
                                decimal bamt = sgen.Make_decimal(model[0].Col33);
                                decimal bigst = sgen.Make_decimal(model[0].Col34);
                                decimal bcgst = sgen.Make_decimal(model[0].Col35);
                                decimal bsgst = sgen.Make_decimal(model[0].Col36);
                                decimal tamt = 0, tigst = 0, tcgst = 0, tsgst = 0;
                                for (int i = 0; i < model[0].LTM1.Count; i++)
                                {
                                    tamt = tamt + sgen.Make_decimal(model[0].LTM1[i].Col16);
                                    tigst = tigst + sgen.Make_decimal(model[0].LTM1[i].Col18);
                                    tcgst = tcgst + sgen.Make_decimal(model[0].LTM1[i].Col20);
                                    tsgst = tsgst + sgen.Make_decimal(model[0].LTM1[i].Col22);
                                }
                                model[0].Col37 = (bamt + tamt).ToString();
                                model[0].Col38 = (bigst + tigst).ToString();
                                model[0].Col39 = (bcgst + tcgst).ToString();
                                model[0].Col40 = (bsgst + tsgst).ToString();
                                model[0].Col62 = (bamt + tamt + bigst + tigst + bcgst + tcgst + bsgst + tsgst).ToString();//netamt
                            }
                            break;
                            //case "RATE":
                            //    if (sgen.GetSession(MyGuid, "pirtrno") == null)
                            //    {
                            //        ViewBag.scripCall += "showmsgJS(1,'Rno not defined', 0);";
                            //        return model;
                            //    }
                            //    var rno = sgen.Make_int(sgen.GetSession(MyGuid, "pirtrno").ToString());
                            //    mq = "select master_id DocNo,group_name TaxRate from master_setting where (master_id||to_char(vch_date,'yyyymmdd')||type)='" + URL + "'";
                            //    dtt = sgen.getdata(userCode, mq);
                            //    if (dtt.Rows.Count > 0)
                            //    {
                            //        model[0].LTM1[rno - 1].Col13 = dtt.Rows[0]["DocNo"].ToString().Trim();
                            //        var utgst = model[0].Col18.Substring(0, 2).Trim();
                            //        var pgst = model[0].Col22.Substring(0, 2).Trim();
                            //        if (utgst == pgst)
                            //        {
                            //            var amt = sgen.Make_decimal(model[0].LTM1[rno - 1].Col16);
                            //            var rt = sgen.Make_decimal(dtt.Rows[0]["TaxRate"].ToString().Trim().Split('%')[0].Trim());
                            //            var amtrt = (amt * rt) / 100;
                            //            model[0].LTM1[rno - 1].Col19 = (rt / 2).ToString() + "%";
                            //            model[0].LTM1[rno - 1].Col20 = (amtrt / 2).ToString();
                            //            model[0].LTM1[rno - 1].Col21 = (rt / 2).ToString() + "%";
                            //            model[0].LTM1[rno - 1].Col22 = (amtrt / 2).ToString();
                            //        }
                            //        else
                            //        {
                            //            var amt = sgen.Make_decimal(model[0].LTM1[rno - 1].Col16);
                            //            var rt = sgen.Make_decimal(dtt.Rows[0]["TaxRate"].ToString().Trim().Split('%')[0].Trim());
                            //            var amtrt = (amt * rt) / 100;
                            //            model[0].LTM1[rno - 1].Col17 = rt.ToString() + "%";
                            //            model[0].LTM1[rno - 1].Col18 = amtrt.ToString();
                            //        }
                            //        decimal bamt = sgen.Make_decimal(model[0].Col33);
                            //        decimal bigst = sgen.Make_decimal(model[0].Col34);
                            //        decimal bcgst = sgen.Make_decimal(model[0].Col35);
                            //        decimal bsgst = sgen.Make_decimal(model[0].Col36);
                            //        decimal tamt = 0, tigst = 0, tcgst = 0, tsgst = 0;
                            //        for (int i = 0; i < model[0].LTM1.Count; i++)
                            //        {
                            //            tamt = tamt + sgen.Make_decimal(model[0].LTM1[i].Col16);
                            //            tigst = tigst + sgen.Make_decimal(model[0].LTM1[i].Col18);
                            //            tcgst = tcgst + sgen.Make_decimal(model[0].LTM1[i].Col20);
                            //            tsgst = tsgst + sgen.Make_decimal(model[0].LTM1[i].Col22);
                            //        }
                            //        model[0].Col37 = (bamt + tamt).ToString();
                            //        model[0].Col38 = (bigst + tigst).ToString();
                            //        model[0].Col39 = (bcgst + tcgst).ToString();
                            //        model[0].Col40 = (bsgst + tsgst).ToString();
                            //        model[0].Col62 = (bamt + tamt + bigst + tigst + bcgst + tcgst + bsgst + tsgst).ToString();//netamt
                            //    }
                            //    break;
                    }
                    break;
                #endregion
                #region pod entry
                case "pod_entry":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            mq = "select a.*,to_char(convert_tz(vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') vch_date1," +
                                "to_char(convert_tz(INVDATE,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') INVDATE1," +
                                "to_char(convert_tz(podate,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') podate1 from itransactionc a " +
                            "where client_id||client_unit_id||vch_num||to_char(vch_date, 'yyyymmdd')|| type= '" + URL + "'";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                model = getedit(model, dt, URL);
                                model[0].Col16 = dt.Rows[0]["vch_num"].ToString();
                                mq1 = "select a.c_name as name,a.c_gstin as gstin,a.addr as Address,a.vch_num,a.tor from clients_mst a where find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 and a.type='BCD' and substr(a.vch_num,0,3)='203' and a.vch_num='" + dt.Rows[0]["acode"].ToString() + "'";
                                DataTable dtp = sgen.getdata(userCode, mq1);
                                if (dtp.Rows.Count > 0)
                                {
                                    model[0].Col21 = dtp.Rows[0]["vch_num"].ToString();
                                    model[0].Col20 = dtp.Rows[0]["name"].ToString();
                                }
                                model[0].dt1 = model[0].dt1.Clone();
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["party_code"] = dt.Rows[i]["icode"].ToString();
                                    dr["party_name"] = dt.Rows[i]["iname"].ToString();
                                    dr["invoice_no"] = dt.Rows[i]["INVNO"].ToString();
                                    dr["invoice_date"] = dt.Rows[i]["INVDATE1"].ToString();
                                    dr["invoice_qty"] = dt.Rows[i]["QTYCHL"].ToString();
                                    dr["invoice_value"] = dt.Rows[i]["NETAMT"].ToString();
                                    dr["POD_NO"] = dt.Rows[i]["pono"].ToString();
                                    dr["POD_DATE"] = dt.Rows[i]["podate1"].ToString();
                                    dr["RECIEVED_BY"] = dt.Rows[i]["REQ_BY"].ToString();
                                    dr["REMARK"] = dt.Rows[i]["IREMARK"].ToString();
                                    model[0].dt1.Rows.Add(dr);
                                }
                                model[0].dt1.AcceptChanges();
                            }
                            break;
                        case "NEW":
                            mq = "select master_id,upper(master_name) master_name,to_char(utc_timestamp(),'" + sgen.Getsqldateformat() + "') po_date " +
                                "from master_Setting where master_id||To_Char(vch_date, 'yyyymmdd')||type = '" + URL + "' ";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "EDMODE", "N");
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                                ViewBag.scripCall = "enableForm();";
                                model[0].Col48 = dt.Rows[0]["po_date"].ToString();
                                model[0].Col12 = dt.Rows[0]["master_id"].ToString();
                                model[0].Col9 = dt.Rows[0]["master_name"].ToString();
                                mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + dt.Rows[0]["master_id"].ToString() + "'" + model[0].Col11.Trim() + " and pur_type='BPI'";
                                vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                                model[0].Col47 = vch_num;
                                model[0].Col16 = vch_num;
                                model[0].Col31 = "-";
                                model[0].Col32 = "-";
                                model[0].Col17 = "1";
                                model[0].Col100 = "Save & New";
                                model[0].Col121 = "S";
                                model[0].Col122 = "<u>S</u>ave";
                                model[0].Col123 = "Save & Ne<u>w</u>";
                                #region 1.pay_term
                                TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1 = cmd_Fun.payterm(userCode, unitid_mst, out defcall);

                                #endregion
                                #region 2.priceterms
                                TempData[MyGuid + "_Tlist2"] = model[0].TList2 = mod2 = cmd_Fun.priceterm(userCode, unitid_mst);

                                #endregion
                                #region 3.Transportmode
                                TempData[MyGuid + "_Tlist3"] = model[0].TList3 = mod3 = cmd_Fun.transportmode(userCode, unitid_mst);

                                #endregion

                                model[0].SelectedItems1 = new string[] { "" };
                                model[0].SelectedItems2 = new string[] { "" };
                                model[0].SelectedItems3 = new string[] { "" };

                                Make_query(viewName.ToLower(), "Select Party", "PARTY", "1", "", "", MyGuid);

                                ViewBag.scripCall = "callFoo('Select Party');";
                            }
                            break;
                        case "TRPTR":
                            mq = "select a.c_name as name,a.vch_num from clients_mst a where a.vch_num||To_Char(a.vch_date, 'yyyymmdd')|| a.type = '" + URL + "'";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                model[0].Col20 = dt.Rows[0]["name"].ToString();
                                model[0].Col21 = dt.Rows[0]["vch_num"].ToString();
                                sgen.SetSession(MyGuid, "PODPARTY", dt.Rows[0]["vch_num"].ToString());
                                model = getnew(model);
                                model[0].Col100 = "Save & New";
                                model[0].Col121 = "S";
                                model[0].Col122 = "<u>S</u>ave";
                                model[0].Col123 = "Save & Ne<u>w</u>";
                            }
                            break;
                        case "ITEM":
                            mq = "select (iv.client_unit_id||iv.vch_num||to_char(iv.vch_date,'yyyymmdd')||iv.type) as fstr," +
                                "tr.vch_num as trptr_code,tr.c_name trptr_name,iv.vch_num as invoice_no," +
                                "to_char(iv.vch_date,'" + sgen.Getsqldateformat() + "') invoice_date, iv.acode party_code," +
                                " iv.qtyout as inv_qty,iv.netamt as inv_value,cl.c_name as party_name from" +
                                " itransaction iv inner join clients_mst tr on iv.trptr_name = tr.vch_num and " +
                                "iv.client_unit_id = tr.client_unit_id inner join clients_mst cl on cl.vch_num = " +
                                "iv.acode and cl.type = 'BCD' and substr(tr.vch_num,0,3)= '203' and tr.trans = 'Y' " +
                                "where(iv.client_unit_id || iv.vch_num || to_char(iv.vch_date, 'yyyymmdd') || iv.type) in ('" + URL + "')";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                if (model[0].dt1.Rows[0]["PARTY_CODE"].ToString().Trim().Equals("-")) { model[0].dt1.Rows.RemoveAt(0); }
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["select_"] = dt.Rows[i]["fstr"].ToString();
                                    dr["SNo"] = i + 1;
                                    dr["PARTY_CODE"] = dt.Rows[i]["party_code"].ToString();
                                    dr["PARTY_NAME"] = dt.Rows[i]["party_name"].ToString();
                                    dr["INVOICE_NO"] = dt.Rows[i]["invoice_no"].ToString();
                                    dr["INVOICE_DATE"] = dt.Rows[i]["invoice_date"].ToString();
                                    dr["INVOICE_QTY"] = dt.Rows[i]["inv_qty"].ToString();
                                    dr["INVOICE_VALUE"] = dt.Rows[i]["inv_value"].ToString();
                                    dr["POD_NO"] = "-";
                                    dr["POD_DATE"] = "-";
                                    dr["RECIEVED_BY"] = "-";
                                    dr["RECIEVED_BY"] = "-";
                                    dr["REMARK"] = "-";
                                    model[0].dt1.Rows.Add(dr);
                                }
                                model[0].dt1.AcceptChanges();
                            }
                            break;
                    }
                    break;
                #endregion
                #region RFQ
                case "rfq":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            mq = "select fr.vch_num as doc_no,to_char(fr.vch_date,'" + sgen.Getsqldateformat() + "') as doc_date,a.c_name as name,a.c_gstin as gstin,a.addr,a.vch_num,a.tor,it.icode as Icode," +
                                 "it.iname,it.cpartno Partno, nvl(um.master_name, '-') as UOM,fr.* from kc_tab fr inner join clients_mst " +
                                 "a on a.vch_num = fr.col1 and a.type = 'BCD' and find_in_set(a.client_unit_id, fr.client_unit_id)= 1 inner join item it on it.icode = " +
                                 "fr.col13 and it.type = 'IT' and find_in_set(it.client_unit_id, fr.client_unit_id)= 1 left join master_setting um on um.master_id = it.uom " +
                                 "and um.type = 'UMM' and find_in_set(um.client_unit_id,'" + unitid_mst + "')= 1 where fr.client_id||fr.client_unit_id||fr.vch_num|| to_char(fr.vch_date, 'yyyymmdd')|| fr.type = '" + URL + "'";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.payterm(userCode, unitid_mst, out defcall);
                                TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2 = cmd_Fun.priceterm(userCode, unitid_mst);
                                TempData[MyGuid + "_TList3"] = model[0].TList3 = mod3 = cmd_Fun.transportmode(userCode, unitid_mst);
                                TempData[MyGuid + "_TList4"] = model[0].TList4 = mod4 = cmd_Fun.Modeofpayment(userCode, unitid_mst);
                                TempData[MyGuid + "_TList5"] = model[0].TList5 = mod5 = cmd_Fun.insby(userCode, unitid_mst);
                                TempData[MyGuid + "_TList6"] = model[0].TList6 = mod6 = cmd_Fun.delterm(userCode, unitid_mst);
                                TempData[MyGuid + "_TList7"] = model[0].TList7 = mod7 = cmd_Fun.curname(userCode, unitid_mst);
                                model[0].Col12 = dt.Rows[0]["type"].ToString();
                                model = getedit(model, dt, URL);
                                model[0].Col16 = dt.Rows[0]["doc_no"].ToString();
                                model[0].Col17 = dt.Rows[0]["doc_date"].ToString();
                                model[0].Col49 = dt.Rows[0]["col1"].ToString();
                                model[0].Col22 = dt.Rows[0]["col2"].ToString();
                                model[0].Col23 = dt.Rows[0]["col3"].ToString();
                                model[0].Col24 = dt.Rows[0]["col11"].ToString();
                                model[0].Col25 = dt.Rows[0]["col12"].ToString();
                                model[0].Col26 = dt.Rows[0]["col21"].ToString();
                                model[0].Col27 = dt.Rows[0]["col69"].ToString();
                                model[0].Col19 = dt.Rows[0]["name"].ToString();
                                model[0].Col20 = dt.Rows[0]["gstin"].ToString();
                                model[0].Col21 = dt.Rows[0]["addr"].ToString();
                                String[] L1 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["col4"].ToString()).Distinct()).Split(',');
                                String[] L2 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["col5"].ToString()).Distinct()).Split(',');
                                String[] L3 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["col6"].ToString()).Distinct()).Split(',');
                                String[] L4 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["col7"].ToString()).Distinct()).Split(',');
                                String[] L5 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["col8"].ToString()).Distinct()).Split(',');
                                String[] L6 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["col9"].ToString()).Distinct()).Split(',');
                                String[] L7 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["col10"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems1 = L1;
                                model[0].SelectedItems2 = L2;
                                model[0].SelectedItems3 = L3;
                                model[0].SelectedItems4 = L4;
                                model[0].SelectedItems5 = L5;
                                model[0].SelectedItems6 = L6;
                                model[0].SelectedItems7 = L7;
                                model[0].dt1 = model[0].dt1.Clone();
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["SNo"] = i + 1;
                                    dr["Icode"] = dt.Rows[i]["Icode"].ToString();
                                    dr["IName"] = dt.Rows[i]["IName"].ToString();
                                    dr["PartNo"] = dt.Rows[i]["PartNo"].ToString();
                                    dr["UOM"] = dt.Rows[i]["UOM"].ToString();
                                    dr["Order_qty"] = dt.Rows[i]["col14"].ToString();
                                    dr["Remark"] = dt.Rows[i]["col22"].ToString();
                                    model[0].dt1.Rows.Add(dr);
                                }
                                model[0].dt1.AcceptChanges();

                            }
                            break;
                        case "NEW":
                            mq = "select * from (select '001' fstr,'001' master_id,'With Indent' master_name from dual union all select '002' fstr,'002' master_id," +
                 "'Without Indent' master_name from dual) a where fstr='" + URL + "'";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                model[0].Col40 = dt.Rows[0]["master_id"].ToString();
                                sgen.SetSession(MyGuid, "RFQ_TYP", dt.Rows[0]["master_id"].ToString());

                                Make_query(viewName.ToLower(), "Select RFQ Type", "RFQTYPE", "1", "", "", MyGuid);
                                ViewBag.scripCall = "callFoo('Select RFQ Type');";
                            }
                            break;
                        case "RFQTYPE":
                            mq = "select master_id,upper(master_name) master_name,to_char(convert_tz(utc_timestamp(),'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') po_date " +
                                "from master_Setting where (master_id||to_char(vch_date, 'yyyymmdd')||type) = '" + URL + "'";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                model = getnew(model);
                                model[0].Col17 = dt.Rows[0]["po_date"].ToString();
                                model[0].Col12 = dt.Rows[0]["master_id"].ToString();
                                model[0].Col9 += " " + dt.Rows[0]["master_name"].ToString();
                                var loccur = sgen.GetSession(MyGuid, "LOCALCUR").ToString();
                                #region ddl
                                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.payterm(userCode, unitid_mst, out defcall);

                                TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2 = cmd_Fun.priceterm(userCode, unitid_mst);

                                TempData[MyGuid + "_TList3"] = model[0].TList3 = mod3 = cmd_Fun.transportmode(userCode, unitid_mst);

                                TempData[MyGuid + "_TList4"] = model[0].TList4 = mod4 = cmd_Fun.Modeofpayment(userCode, unitid_mst);

                                TempData[MyGuid + "_TList5"] = model[0].TList5 = mod5 = cmd_Fun.insby(userCode, unitid_mst);

                                TempData[MyGuid + "_TList6"] = model[0].TList6 = mod6 = cmd_Fun.delterm(userCode, unitid_mst);

                                TempData[MyGuid + "_TList7"] = model[0].TList7 = mod7 = cmd_Fun.curname(userCode, unitid_mst);

                                model[0].SelectedItems1 = new string[] { "" };
                                model[0].SelectedItems2 = new string[] { "" };
                                model[0].SelectedItems3 = new string[] { "" };
                                model[0].SelectedItems4 = new string[] { "" };
                                model[0].SelectedItems5 = new string[] { "" };
                                model[0].SelectedItems6 = new string[] { "" };
                                model[0].SelectedItems7 = new string[] { loccur };
                                #endregion
                            }
                            break;
                        case "PARTY":
                            mq = "select a.c_name as name,a.c_gstin as gstin,a.addr,a.vch_num,a.tor from clients_mst a " +
                                "where (a.vch_num||to_char(a.vch_date, 'yyyymmdd')|| a.type) = '" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                model[0].Col49 = dtt.Rows[0]["vch_num"].ToString();
                                model[0].Col19 = dtt.Rows[0]["name"].ToString();
                                model[0].Col20 = dtt.Rows[0]["gstin"].ToString();
                                model[0].Col21 = dtt.Rows[0]["addr"].ToString();
                                sgen.SetSession(MyGuid, "RFQPRTY_ID", dtt.Rows[0]["vch_num"].ToString());
                            }
                            break;
                        case "ITEM":

                            mq = "select distinct it.icode || to_char(it.vch_date, 'yyyymmdd') || it.type fstr,it.icode,it.iname,it.cpartno as partno,um.master_name as UOM," +
                   "'0' as disc_rate,'-' disctype,'0' IAmount,'0' TaxAmount,'0' discAmount,'0' LineAmount,'0' as IRate,hsn.master_name as hsn,hsn.group_name taxrate, " +
               "nvl(s.closing, 0) AS qtystk,it.amortchrgs,it.matjobwork,'0' mcamt,'0' qtyord,'0' ind_no,'-' ind_date from item it" +
               " left join master_setting um on um.master_id = it.uom and " +
               "um.type = 'UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1" +
               " left join master_setting hsn on hsn.master_id = it.hsno and hsn.type = 'HSN' " +
               "and find_in_set(hsn.client_unit_id,it.client_unit_id)=1 " +
               "left join(select icode,client_unit_id,sum(op) op,sum(pktop) pktop,sum(qtyin) qtyin,sum(qtyout) out," +
                  "sum(op)+sum(qtyin)-sum(qtyout) closing from (select icode, client_unit_id, nvl(op_2019, 0) op," +
                  " nvl(pkt_2019, 0) pktop, 0 qtyin, 0 qtyout, 0 pktno from itbal union all select icode, client_unit_id, " +
                  "sum(to_number(qtyin)) - sum(to_number(qtyout)) op, sum((case when substr(type, 1, 1) in ('0', '1') then" +
                  " pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktop,sum(to_number(qtyin)) " +
                  "qtyin,sum(to_number(qtyout)) qtyout,0 pktno from itransaction where trim(store) = 'Y' and " +
                  "to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and " +
                  "to_date('" + year_from.Split(' ')[0].Trim() + "','" + sgen.Getsqldateformat() + "')-1 group by icode,client_unit_id union all select icode,client_unit_id," +
                  "0 as op,0 as pktop,to_number(qtyin) qtyin,to_number(qtyout) qtyout,sum((case when substr(type, 1, 1) in " +
                  "('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktno from " +
                  "itransaction where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between " +
                  "to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and to_date('" + model[0].Col48 + "','" + sgen.Getsqldateformat() + "') group by icode,client_unit_id," +
                  "to_number(qtyin),to_number(qtyout)) a group by icode, client_unit_id)" +
               " s on it.icode = s.icode and find_in_set(it.client_unit_id, s.client_unit_id)=1 where " +
               "it.icode || to_char(it.vch_date, 'yyyymmdd') || it.type in ('" + URL + "')";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-") || model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("")) { model[0].dt1.Rows.RemoveAt(0); }
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["Item"] = dt.Rows[i]["fstr"].ToString();
                                    dr["SNo"] = i + 1;
                                    dr["Icode"] = dt.Rows[i]["icode"].ToString();
                                    dr["IName"] = dt.Rows[i]["iname"].ToString();
                                    dr["PartNo"] = dt.Rows[i]["Partno"].ToString();
                                    dr["UOM"] = dt.Rows[i]["UOM"].ToString();
                                    model[0].dt1.Rows.Add(dr);
                                }
                                model[0].dt1.AcceptChanges();
                            }
                            break;
                    }
                    break;
                #endregion
                #region sales forcast
                case "s_fcast":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            mq = "select p.*,to_char(convert_tz(vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') vch_date1,to_char(p.CHLDATE, '" + sgen.Getsqldateformat() + "') as Delivery_date from" +
                                " itransactionc p where (p.client_id || p.client_unit_id || p.vch_num || to_char(p.vch_date, 'yyyymmdd') || p.type) = '" + URL + "'";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                model[0].Col16 = dt.Rows[0]["vch_num"].ToString();
                                model = getedit(model, dt, URL);
                                #region bind months
                                dtm = new DataTable();
                                dtm = sgen.getdata(userCode, "select DISTINCT master_id,master_name from master_setting where type='MNT'");
                                foreach (DataRow dr in dtm.Rows)
                                {
                                    mod1.Add(new SelectListItem { Text = dr["master_name"].ToString(), Value = dr["master_id"].ToString() });
                                }
                                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
                                //model[0].TList1 = mod1;
                                #endregion
                                model[0].Col17 = dt.Rows[0]["vch_date1"].ToString();
                                model[0].Col12 = dt.Rows[0]["type"].ToString();
                                model[0].Col18 = dt.Rows[0]["RNO"].ToString();
                                String[] L1 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["pono"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems1 = L1;
                                model[0].dt1 = model[0].dt1.Clone();
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["SNo"] = i + 1;
                                    dr["Icode"] = dt.Rows[i]["icode"].ToString();
                                    dr["IName"] = dt.Rows[i]["iname"].ToString();
                                    dr["PARTNO"] = dt.Rows[i]["cpartno"].ToString();
                                    dr["UOM"] = dt.Rows[i]["uom"].ToString();
                                    dr["Qty_in_stock"] = dt.Rows[i]["qtystk"].ToString();
                                    dr["SALES_FORCAST"] = dt.Rows[i]["qtyout"].ToString();
                                    dr["INV_QTY"] = dt.Rows[i]["QTYPO"].ToString();
                                    dr["SO_QTY"] = dt.Rows[i]["ordqty"].ToString();
                                    dr["IRate"] = dt.Rows[i]["irate"].ToString();
                                    dr["Iamount"] = dt.Rows[i]["Iamount"].ToString();
                                    dr["Remark"] = dt.Rows[i]["IREMARK"].ToString();
                                    dr["Delivery_date"] = dt.Rows[i]["Delivery_date"].ToString();
                                    model[0].dt1.Rows.Add(dr);
                                }
                                model[0].dt1.AcceptChanges();
                            }
                            break;
                        case "ITEM":
                            mq = "select iv.client_unit_id||it.icode|| it.type as fstr,iv.icode,it.iname,nvl(s.closing, '0') as qtystk,it.cpartno,um.master_name as uom," +
                                "iv.Inv_qty,iv.so_qty from item it inner join(select a.icode, a.client_unit_id, sum(Inv_qty) as Inv_qty," +
                                "sum(so_qty) as so_qty from(select icode, client_unit_id, to_number(nvl(qtyout, '0')) as Inv_qty, 0 as so_qty" +
                                " from itransaction where client_unit_id = '" + unitid_mst + "' and substr(type, 1, 1) = '4' and " +
                                "substr(potype, 1, 1) = '5' union all select icode, client_unit_id, 0 as Inv_qty, to_number(nvl(qtyord, '0')) " +
                                "as so_qty from purchasesc  where client_unit_id = '" + unitid_mst + "' and substr(type, 1, 1) = '4' and" +
                                " pur_type = 'NPI')a group by a.icode,a.client_unit_id) iv on iv.icode = it.icode and find_in_set" +
                                "(it.client_unit_id, iv.client_unit_id)= 1 left join master_setting um on um.master_id = it.uom and um.type =" +
                                " 'UMM' and find_in_set(um.client_unit_id, it.client_unit_id)= 1" +
                                " left join(select icode,client_unit_id,sum(op) op,sum(pktop) pktop,sum(qtyin) qtyin,sum(qtyout) out," +
                                      "sum(op)+sum(qtyin)-sum(qtyout) closing from (select icode, client_unit_id, nvl(op_2019, 0) op," +
                                      " nvl(pkt_2019, 0) pktop, 0 qtyin, 0 qtyout, 0 pktno from itbal union all select icode, client_unit_id, " +
                                      "sum(to_number(qtyin)) - sum(to_number(qtyout)) op, sum((case when substr(type, 1, 1) in ('0', '1') then" +
                                      " pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktop,sum(to_number(qtyin)) " +
                                      "qtyin,sum(to_number(qtyout)) qtyout,0 pktno from itransaction where trim(store) = 'Y' and " +
                                      "to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and " +
                                      "to_date('" + year_from.Split(' ')[0].Trim() + "','" + sgen.Getsqldateformat() + "')-1 group by icode,client_unit_id union all select icode,client_unit_id," +
                                      "0 as op,0 as pktop,to_number(qtyin) qtyin,to_number(qtyout) qtyout,sum((case when substr(type, 1, 1) in " +
                                      "('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktno from " +
                                      "itransaction where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between " +
                                      "to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and to_date('" + model[0].Col22 + "','" + sgen.Getsqldateformat() + "') group by icode,client_unit_id," +
                                      "to_number(qtyin),to_number(qtyout)) a group by icode, client_unit_id) s on it.icode = s.icode and find_in_set(it.client_unit_id, s.client_unit_id)=1" +
                                " where iv.client_unit_id || it.icode || it.type in ('" + URL + "')";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt1.Rows.RemoveAt(0); }
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["Item"] = dt.Rows[i]["fstr"].ToString();
                                    dr["SNo"] = i + 1;
                                    dr["Icode"] = dt.Rows[i]["icode"].ToString();
                                    dr["IName"] = dt.Rows[i]["iname"].ToString();
                                    dr["PARTNO"] = dt.Rows[i]["cpartno"].ToString();
                                    dr["UOM"] = dt.Rows[i]["uom"].ToString();
                                    dr["SO_QTY"] = dt.Rows[i]["so_qty"].ToString();
                                    dr["INV_QTY"] = dt.Rows[i]["Inv_qty"].ToString();
                                    dr["Qty_In_Stock"] = dt.Rows[i]["qtystk"].ToString();
                                    dr["sales_forcast"] = '0';
                                    dr["irate"] = '0';
                                    model[0].dt1.Rows.Add(dr);
                                }
                                model[0].dt1.AcceptChanges();
                            }
                            break;
                    }
                    break;
                #endregion
                #region customer po
                case "cust_po":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "BDCOPYSO":
                            mq = "select a.*,to_char(convert_tz(vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') vch_date1," +
                            "to_char(dlv_date,'" + sgen.Getsqldateformat() + "') dlv_date1," +
                            "to_char(date1,'" + sgen.Getsqldateformat() + "') date11," +
                            "to_char(date2,'" + sgen.Getsqldateformat() + "') date12,to_char(date3,'" + sgen.Getsqldateformat() + "') date13," +
                            "to_char(date4,'" + sgen.Getsqldateformat() + "') date14,to_char(date5,'" + sgen.Getsqldateformat() + "') date15" +
                            ",to_char(pidate,'" + sgen.Getsqldateformat() + "') pidate1 from purchasesc a " +
                            "where client_id||client_unit_id||vch_num||to_char(vch_date, 'yyyymmdd')|| type= '" + URL + "'";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1 = cmd_Fun.payterm(userCode, unitid_mst, out defcall);
                                TempData[MyGuid + "_Tlist2"] = model[0].TList2 = mod2 = cmd_Fun.priceterm(userCode, unitid_mst);
                                TempData[MyGuid + "_Tlist3"] = model[0].TList3 = mod3 = cmd_Fun.transportmode(userCode, unitid_mst);
                                mod5.Add(new SelectListItem { Text = "Open Qty", Value = "open" });
                                mod5.Add(new SelectListItem { Text = "Fix Qty", Value = "fix" });
                                TempData[MyGuid + "_Tlist5"] = model[0].TList5 = mod5;

                                if (btnval.ToUpper().Equals("EDIT") || btnval.ToUpper().Equals("VIEW"))
                                {
                                    sgen.SetSession(MyGuid, "EDMODE", "Y");
                                    model[0].Col1 = dt.Rows[0]["client_id"].ToString();
                                    model[0].Col2 = dt.Rows[0]["client_unit_id"].ToString();
                                    model[0].Col3 = dt.Rows[0]["ent_by"].ToString();
                                    model[0].Col4 = dt.Rows[0]["ent_date"].ToString();
                                    model[0].Col5 = dt.Rows[0]["edit_by"].ToString();
                                    model[0].Col6 = dt.Rows[0]["edit_date"].ToString();
                                    //model[0].Col7 = dt.Rows[0]["rec_id"].ToString();
                                    model[0].Col8 = "client_id||client_unit_id||vch_num|| To_Char(vch_date, 'yyyymmdd')|| type = '" + URL + "'";
                                    model[0].Col10 = model[0].Col10;
                                    model[0].Col11 = model[0].Col11;
                                    model[0].Col13 = "Update";
                                    model[0].Col100 = "Update & New";
                                    model[0].Col121 = "U";
                                    model[0].Col122 = "<u>U</u>pdate";
                                    model[0].Col123 = "Update & Ne<u>w</u>";
                                    model[0].Col14 = model[0].Col14;
                                    model[0].Col15 = model[0].Col15;
                                    model[0].Col16 = dt.Rows[0]["vch_num"].ToString();
                                    model[0].Col17 = dt.Rows[0]["vch_date1"].ToString();
                                    model[0].Col12 = dt.Rows[0]["type"].ToString();
                                }
                                else
                                {
                                    sgen.SetSession(MyGuid, "EDMODE", "N");
                                }
                                String[] L1 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["pay_term"].ToString()).Distinct()).Split(',');
                                String[] L2 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["price_term"].ToString()).Distinct()).Split(',');
                                String[] L3 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["tmode"].ToString()).Distinct()).Split(',');
                                //String[] L4 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["disc_rate"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems1 = L1;
                                model[0].SelectedItems2 = L2;
                                model[0].SelectedItems3 = L3;
                                //model[0].SelectedItems4 = L4;
                                mq1 = "select a.c_name as name,a.c_gstin as gstin,a.addr as Address,a.vch_num,a.tor from clients_mst a where find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 and a.type='BCD' and substr(a.vch_num,0,3)='303' and a.vch_num='" + dt.Rows[0]["acode"].ToString() + "'";
                                DataTable dtp = sgen.getdata(userCode, mq1);
                                if (dtp.Rows.Count > 0)
                                {
                                    model[0].Col49 = dtp.Rows[0]["vch_num"].ToString();
                                    model[0].Col20 = dtp.Rows[0]["name"].ToString();
                                    model[0].Col21 = dtp.Rows[0]["address"].ToString();
                                    model[0].Col22 = dtp.Rows[0]["gstin"].ToString();
                                    model[0].Col52 = dtp.Rows[0]["tor"].ToString();
                                }
                                mq1 = "select a.c_name as name,a.c_gstin as gstin,a.addr as Address,a.vch_num from clients_mst a where a.vch_num='" + dt.Rows[0]["shipfrom"].ToString() + "' " +
                                  "and find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 and a.type='BCD' and substr(a.vch_num,0,3)='303'";
                                dtp = sgen.getdata(userCode, mq1);
                                if (dtp.Rows.Count > 0)
                                {
                                    model[0].Col50 = dtp.Rows[0]["vch_num"].ToString();
                                    model[0].Col23 = dtp.Rows[0]["name"].ToString();
                                    model[0].Col24 = dtp.Rows[0]["address"].ToString();
                                    model[0].Col25 = dtp.Rows[0]["gstin"].ToString();
                                }
                                mq1 = "select a.c_name as name,a.c_gstin as gstin,a.addr as Address,a.vch_num from clients_mst a where a.vch_num='" + dt.Rows[0]["shipto"].ToString() + "' " +
                              "and find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 and a.type='BCD' and substr(a.vch_num,0,3)='303'";
                                dtp = sgen.getdata(userCode, mq1);
                                if (dtp.Rows.Count > 0)
                                {
                                    model[0].Col51 = dtp.Rows[0]["vch_num"].ToString();
                                    model[0].Col26 = dtp.Rows[0]["name"].ToString();
                                    model[0].Col27 = dtp.Rows[0]["address"].ToString();
                                    model[0].Col28 = dtp.Rows[0]["gstin"].ToString();
                                }
                                model[0].Col31 = dt.Rows[0]["totremark"].ToString();
                                model[0].Col32 = dt.Rows[0]["cond"].ToString();
                                model[0].Col33 = dt.Rows[0]["basicamt"].ToString();
                                model[0].Col37 = dt.Rows[0]["ginstlchrg"].ToString();
                                model[0].Col38 = dt.Rows[0]["gserchrg"].ToString();
                                model[0].Col39 = dt.Rows[0]["gamc"].ToString();
                                model[0].Col40 = dt.Rows[0]["gloadchrg"].ToString();
                                //DataTable gdt = sgen.getdata(userCode, "select '' Item,'1' as  SNo ,'-' as Icode,'-' as IName,'-' PARTNO,'-'  HSN,'-' as UOM,'0' as TaxRate,'0' as  Qty_in_stock,'0' as Qty_Ord,'0' as IRate," +
                                //                                                                               "'-' disc_type,'0' as disc_rate,'0' IAmount,'0' TaxAmount,'0' discAmount,'0' LineAmount,'-' as delivery_date,'-' as Remark from dual");
                                //model[0].dt1 = gdt;
                                //sgen.SetSession(MyGuid, "BCPO_DT", gdt.Copy());
                                String[] L5 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["indno"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems5 = L5;
                                model[0].Col84 = dt.Rows[0]["gtaxamt"].ToString();
                                model[0].Col62 = dt.Rows[0]["ginstlchrg"].ToString();
                                model[0].Col60 = dt.Rows[0]["date11"].ToString();
                                model[0].Col70 = dt.Rows[0]["col1"].ToString();
                                model[0].Col71 = dt.Rows[0]["col2"].ToString();
                                model[0].Col72 = dt.Rows[0]["col3"].ToString();
                                model[0].Col76 = dt.Rows[0]["col4"].ToString();
                                model[0].Col77 = dt.Rows[0]["col5"].ToString();
                                model[0].Col78 = dt.Rows[0]["col6"].ToString();
                                model[0].Col73 = dt.Rows[0]["date13"].ToString();
                                model[0].Col74 = dt.Rows[0]["date14"].ToString();
                                model[0].Col75 = dt.Rows[0]["date15"].ToString();
                                model[0].dt1 = model[0].dt1.Clone();
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["SNo"] = i + 1;
                                    dr["Icode"] = dt.Rows[i]["icode"].ToString();
                                    dr["IName"] = dt.Rows[i]["iname"].ToString();
                                    dr["PARTNO"] = dt.Rows[i]["cpartno"].ToString();
                                    dr["HSN"] = dt.Rows[i]["hsno"].ToString();
                                    dr["UOM"] = dt.Rows[i]["uom"].ToString();
                                    dr["TaxRate"] = dt.Rows[i]["taxrate"].ToString();
                                    dr["Qty_Ord"] = dt.Rows[i]["qtyord"].ToString();
                                    dr["delivery_date"] = dt.Rows[i]["dlv_date1"].ToString();
                                    dr["IRate"] = dt.Rows[i]["irate"].ToString();
                                    dr["disc_type"] = dt.Rows[i]["disctype"].ToString();
                                    dr["disc_rate"] = dt.Rows[i]["discrate"].ToString();
                                    dr["Iamount"] = dt.Rows[i]["Iamount"].ToString();
                                    dr["taxamount"] = dt.Rows[i]["taxamt"].ToString();
                                    dr["discamount"] = dt.Rows[i]["discamt"].ToString();
                                    dr["lineamount"] = dt.Rows[i]["lineamount"].ToString();
                                    dr["Remark"] = dt.Rows[i]["iremark"].ToString();
                                    model[0].dt1.Rows.Add(dr);
                                }
                                model[0].dt1.AcceptChanges();
                                //other charges LTM
                                mq1 = "select ch.master_name chrgname,en.col1,en.col2,en.col3,en.col4,en.col5,en.col6,en.col7,en.col8,en.col9,en.r_no from enx_tab en " +
                                    "inner join master_setting ch on en.col1=ch.master_id and ch.type='MR0' and find_in_set(ch.client_unit_id,en.client_unit_id)=1 " +
                                    "where (en.client_id||en.client_unit_id||en.vch_num||to_char(en.vch_date, 'yyyymmdd')|| en.type) = '" + URL + "'";
                                dt = sgen.getdata(userCode, mq1);
                                if (dt.Rows.Count > 0)
                                {
                                    model[0].LTM1 = new List<Tmodelmain>();
                                    foreach (DataRow dr in dt.Rows)
                                    {
                                        model[0].LTM1.Add(new Tmodelmain
                                        {
                                            Col13 = dr["col3"].ToString(),//chrgrtid
                                            Col14 = dr["r_no"].ToString(),//rno
                                            Col15 = dr["col1"].ToString(),//chrgid
                                            Col16 = dr["col2"].ToString(),//chrgamt
                                            Col17 = dr["col4"].ToString(),//igstrt
                                            Col18 = dr["col5"].ToString(),//igstamt
                                            Col19 = dr["col6"].ToString(),//cgstrt
                                            Col20 = dr["col7"].ToString(),//cgstamt
                                            Col21 = dr["col8"].ToString(),//sgstrt
                                            Col22 = dr["col9"].ToString(),//sgstamt
                                            Col23 = dr["chrgname"].ToString(),//chrgname
                                        });
                                    }
                                }
                            }
                            break;
                        case "PARTYFRM":
                            mq = "select a.c_name as name,a.c_gstin as gstin,a.addr as Address,a.vch_num from clients_mst a " +
                                "where a.vch_num||to_char(a.vch_date, 'yyyymmdd')|| a.type = '" + URL + "'";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                model[0].Col50 = dt.Rows[0]["vch_num"].ToString();
                                model[0].Col23 = dt.Rows[0]["name"].ToString();
                                model[0].Col24 = dt.Rows[0]["address"].ToString();
                                model[0].Col25 = dt.Rows[0]["gstin"].ToString();
                            }
                            break;
                        case "PARTYTO":
                            mq = "select a.c_name as name,a.c_gstin as gstin,a.addr as Address,a.vch_num from clients_mst a " +
                                "where a.vch_num||to_char(a.vch_date, 'yyyymmdd')|| a.type = '" + URL + "'";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                model[0].Col51 = dt.Rows[0]["vch_num"].ToString();
                                model[0].Col26 = dt.Rows[0]["name"].ToString();
                                model[0].Col27 = dt.Rows[0]["address"].ToString();
                                model[0].Col28 = dt.Rows[0]["gstin"].ToString();
                            }
                            break;
                        case "ITEM":
                            mq = "select distinct '-' fstr,it.icode,it.iname,it.cpartno as partno,um.master_name as UOM," +
                               "'0' as disc_rate,'-' disctype,'0' IAmount,'0' TaxAmount,'0' discAmount,'0' LineAmount,'0' as IRate,nvl(hsn.master_name,'-') as hsn,nvl(hsn.group_name,'0') taxrate, " +
                               "it.amortchrgs,it.matjobwork,'0' mcamt,'0' qtyord,'0' ind_no,'-' ind_date from item it" +
                               " left join master_setting um on um.master_id = it.uom and " +
                               "um.type = 'UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1" +
                               " left join master_setting hsn on hsn.master_id = it.hsno and hsn.type = 'HSN' " +
                               "and find_in_set(hsn.client_unit_id,it.client_unit_id)=1  where " +
                               "it.icode || to_char(it.vch_date, 'yyyymmdd') || it.type in ('" + URL + "')";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt1.Rows.RemoveAt(0); }
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["Item"] = dt.Rows[i]["fstr"].ToString();
                                    dr["SNo"] = i + 1;
                                    dr["Icode"] = dt.Rows[i]["icode"].ToString();
                                    dr["IName"] = dt.Rows[i]["iname"].ToString();
                                    dr["PARTNO"] = dt.Rows[i]["partno"].ToString();
                                    dr["HSN"] = dt.Rows[i]["hsn"].ToString();
                                    dr["UOM"] = dt.Rows[i]["uom"].ToString();
                                    dr["TaxRate"] = dt.Rows[i]["taxrate"].ToString();
                                    dr["IRate"] = "0";
                                    dr["disc_type"] = "0";
                                    dr["disc_rate"] = "0";
                                    dr["Iamount"] = "0";
                                    dr["taxamount"] = "0";
                                    dr["discamount"] = "0";
                                    dr["lineamount"] = "0";
                                    dr["Qty_ord"] = dt.Rows[i]["qtyord"].ToString();
                                    model[0].dt1.Rows.Add(dr);
                                }
                                model[0].dt1.AcceptChanges();
                            }
                            break;
                        case "CHRGS":
                            mq = "select master_id,master_name from master_setting where (master_id||to_char(vch_date,'yyyymmdd')||type) in ('" + URL + "')";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                int i = 0;
                                if (model[0].LTM1 == null) { model[0].LTM1 = new List<Tmodelmain>(); }
                                if (model[0].LTM1.Count == 0) { model[0].LTM1 = new List<Tmodelmain>(); }
                                else i = model[0].LTM1.Count;
                                foreach (DataRow dr in dtt.Rows)
                                {
                                    i++;
                                    model[0].LTM1.Add(new Tmodelmain
                                    {
                                        Col14 = i.ToString(),
                                        Col15 = dr["master_id"].ToString(),
                                        Col23 = dr["master_name"].ToString(),
                                        Col16 = "0",
                                        Col17 = "0",
                                        Col18 = "0",
                                        Col19 = "0",
                                        Col20 = "0",
                                        Col21 = "0",
                                        Col22 = "0",
                                    });
                                }
                            }
                            break;
                        case "CHRGDEL":
                            if (sgen.GetSession(MyGuid, "cust_posoorddelrno") != null)
                            {
                                var mrno = sgen.GetSession(MyGuid, "cust_posoorddelrno").ToString();
                                var LTM = model[0].LTM1;
                                for (int d = 0; d < LTM.Count; d++)
                                {
                                    string chrgno = LTM[d].Col14;
                                    if (chrgno.Trim() == mrno.Trim()) { model[0].LTM1.RemoveAt(d); }
                                }
                                sgen.SetSession(MyGuid, "cust_posoorddelrno", null);
                            }
                            break;
                        case "RATE":
                            if (sgen.GetSession(MyGuid, "cust_portrno") == null)
                            {
                                ViewBag.scripCall += "showmsgJS(1,'Rno not defined', 0);";
                                return model;
                            }
                            var rno = sgen.Make_int(sgen.GetSession(MyGuid, "cust_portrno").ToString());
                            mq = "select master_id DocNo,group_name TaxRate from master_setting where (master_id||to_char(vch_date,'yyyymmdd')||type)='" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                model[0].LTM1[rno - 1].Col13 = dtt.Rows[0]["DocNo"].ToString().Trim();
                                var utgst = model[0].Col18.Substring(0, 2).Trim();
                                var pgst = model[0].Col22.Substring(0, 2).Trim();
                                if (utgst == pgst)
                                {
                                    var amt = sgen.Make_decimal(model[0].LTM1[rno - 1].Col16);
                                    var rt = sgen.Make_decimal(dtt.Rows[0]["TaxRate"].ToString().Trim().Split('%')[0].Trim());
                                    var amtrt = (amt * rt) / 100;
                                    model[0].LTM1[rno - 1].Col19 = (rt / 2).ToString() + "%";
                                    model[0].LTM1[rno - 1].Col20 = (amtrt / 2).ToString();
                                    model[0].LTM1[rno - 1].Col21 = (rt / 2).ToString() + "%";
                                    model[0].LTM1[rno - 1].Col22 = (amtrt / 2).ToString();
                                }
                                else
                                {
                                    var amt = sgen.Make_decimal(model[0].LTM1[rno - 1].Col16);
                                    var rt = sgen.Make_decimal(dtt.Rows[0]["TaxRate"].ToString().Trim().Split('%')[0].Trim());
                                    var amtrt = (amt * rt) / 100;
                                    model[0].LTM1[rno - 1].Col17 = rt.ToString() + "%";
                                    model[0].LTM1[rno - 1].Col18 = amtrt.ToString();
                                }
                                decimal bamt = sgen.Make_decimal(model[0].Col33);
                                decimal bigst = sgen.Make_decimal(model[0].Col34);
                                decimal bcgst = sgen.Make_decimal(model[0].Col35);
                                decimal bsgst = sgen.Make_decimal(model[0].Col36);
                                decimal tamt = 0, tigst = 0, tcgst = 0, tsgst = 0;
                                for (int i = 0; i < model[0].LTM1.Count; i++)
                                {
                                    tamt = tamt + sgen.Make_decimal(model[0].LTM1[i].Col16);
                                    tigst = tigst + sgen.Make_decimal(model[0].LTM1[i].Col18);
                                    tcgst = tcgst + sgen.Make_decimal(model[0].LTM1[i].Col20);
                                    tsgst = tsgst + sgen.Make_decimal(model[0].LTM1[i].Col22);
                                }
                                model[0].Col37 = (bamt + tamt).ToString();
                                model[0].Col38 = (bigst + tigst).ToString();
                                model[0].Col39 = (bcgst + tcgst).ToString();
                                model[0].Col40 = (bsgst + tsgst).ToString();
                                model[0].Col62 = (bamt + tamt + bigst + tigst + bcgst + tcgst + bsgst + tsgst).ToString();//netamt
                            }
                            break;
                    }
                    break;
                #endregion
                #region customer po approve
                case "cstpo_apr":
                    switch (btnval.ToUpper())
                    {
                        case "INPO":
                        case "ACPO":
                        case "REJPO":
                            mq = "select a.*,to_char(convert_tz(vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') vch_date1," +
                            "to_char(dlv_date,'" + sgen.Getsqldateformat() + "') dlv_date1," +
                            "to_char(date1,'" + sgen.Getsqldateformat() + "') date11," +
                            "to_char(date2,'" + sgen.Getsqldateformat() + "') date12,to_char(date3,'" + sgen.Getsqldateformat() + "') date13," +
                            "to_char(date4,'" + sgen.Getsqldateformat() + "') date14,to_char(date5,'" + sgen.Getsqldateformat() + "') date15" +
                            ",to_char(pidate,'" + sgen.Getsqldateformat() + "') pidate1 from purchasesc a " +
                            "where client_id||client_unit_id||vch_num||to_char(vch_date, 'yyyymmdd')|| type= '" + URL + "'";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1 = cmd_Fun.payterm(userCode, unitid_mst, out defcall);
                                TempData[MyGuid + "_Tlist2"] = model[0].TList2 = mod2 = cmd_Fun.priceterm(userCode, unitid_mst);
                                TempData[MyGuid + "_Tlist3"] = model[0].TList3 = mod3 = cmd_Fun.transportmode(userCode, unitid_mst);
                                mod5.Add(new SelectListItem { Text = "Open Qty", Value = "open" });
                                mod5.Add(new SelectListItem { Text = "Fix Qty", Value = "fix" });
                                TempData[MyGuid + "_Tlist5"] = model[0].TList5 = mod5;
                                model[0].Col1 = dt.Rows[0]["client_id"].ToString();
                                model[0].Col2 = dt.Rows[0]["client_unit_id"].ToString();
                                model[0].Col3 = dt.Rows[0]["ent_by"].ToString();
                                model[0].Col4 = dt.Rows[0]["ent_date"].ToString();
                                model[0].Col5 = dt.Rows[0]["edit_by"].ToString();
                                model[0].Col6 = dt.Rows[0]["edit_date"].ToString();
                                model[0].Col8 = "client_id||client_unit_id||vch_num|| To_Char(vch_date, 'yyyymmdd')|| type = '" + URL + "'";
                                model[0].Col10 = model[0].Col10;
                                model[0].Col11 = model[0].Col11;
                                model[0].Col13 = "Update";
                                model[0].Col100 = "Update & New";
                                model[0].Col121 = "U";
                                model[0].Col122 = "<u>U</u>pdate";
                                model[0].Col123 = "Update & Ne<u>w</u>";
                                model[0].Col14 = model[0].Col14;
                                model[0].Col15 = model[0].Col15;
                                model[0].Col16 = dt.Rows[0]["vch_num"].ToString();
                                model[0].Col17 = dt.Rows[0]["vch_date1"].ToString();
                                model[0].Col12 = dt.Rows[0]["type"].ToString();
                                String[] L1 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["pay_term"].ToString()).Distinct()).Split(',');
                                String[] L2 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["price_term"].ToString()).Distinct()).Split(',');
                                String[] L3 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["tmode"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems1 = L1;
                                model[0].SelectedItems2 = L2;
                                model[0].SelectedItems3 = L3;
                                //model[0].SelectedItems4 = L4;
                                mq1 = "select a.c_name as name,a.c_gstin as gstin,a.addr as Address,a.vch_num,a.tor from clients_mst a where find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 and a.type='BCD' and substr(a.vch_num,0,3)='303' and a.vch_num='" + dt.Rows[0]["acode"].ToString() + "'";
                                DataTable dtp = sgen.getdata(userCode, mq1);
                                if (dtp.Rows.Count > 0)
                                {
                                    model[0].Col49 = dtp.Rows[0]["vch_num"].ToString();
                                    model[0].Col20 = dtp.Rows[0]["name"].ToString();
                                    model[0].Col21 = dtp.Rows[0]["address"].ToString();
                                    model[0].Col22 = dtp.Rows[0]["gstin"].ToString();
                                    model[0].Col52 = dtp.Rows[0]["tor"].ToString();
                                }
                                mq1 = "select a.c_name as name,a.c_gstin as gstin,a.addr as Address,a.vch_num from clients_mst a where a.vch_num='" + dt.Rows[0]["shipfrom"].ToString() + "' " +
                                  "and find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 and a.type='BCD' and substr(a.vch_num,0,3)='303'";
                                dtp = sgen.getdata(userCode, mq1);
                                if (dtp.Rows.Count > 0)
                                {
                                    model[0].Col50 = dtp.Rows[0]["vch_num"].ToString();
                                    model[0].Col23 = dtp.Rows[0]["name"].ToString();
                                    model[0].Col24 = dtp.Rows[0]["address"].ToString();
                                    model[0].Col25 = dtp.Rows[0]["gstin"].ToString();
                                }
                                mq1 = "select a.c_name as name,a.c_gstin as gstin,a.addr as Address,a.vch_num from clients_mst a where a.vch_num='" + dt.Rows[0]["shipto"].ToString() + "' " +
                              "and find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 and a.type='BCD' and substr(a.vch_num,0,3)='303'";
                                dtp = sgen.getdata(userCode, mq1);
                                if (dtp.Rows.Count > 0)
                                {
                                    model[0].Col51 = dtp.Rows[0]["vch_num"].ToString();
                                    model[0].Col26 = dtp.Rows[0]["name"].ToString();
                                    model[0].Col27 = dtp.Rows[0]["address"].ToString();
                                    model[0].Col28 = dtp.Rows[0]["gstin"].ToString();
                                }
                                model[0].Col31 = dt.Rows[0]["totremark"].ToString();
                                model[0].Col32 = dt.Rows[0]["cond"].ToString();
                                model[0].Col33 = dt.Rows[0]["basicamt"].ToString();
                                model[0].Col37 = dt.Rows[0]["ginstlchrg"].ToString();
                                model[0].Col38 = dt.Rows[0]["gserchrg"].ToString();
                                model[0].Col39 = dt.Rows[0]["gamc"].ToString();
                                model[0].Col40 = dt.Rows[0]["gloadchrg"].ToString();
                                //DataTable gdt = sgen.getdata(userCode, "select '' Item,'1' as  SNo ,'-' as Icode,'-' as IName,'-' PARTNO,'-'  HSN,'-' as UOM,'0' as TaxRate,'0' as  Qty_in_stock,'0' as Qty_Ord,'0' as IRate," +
                                //                                                                               "'-' disc_type,'0' as disc_rate,'0' IAmount,'0' TaxAmount,'0' discAmount,'0' LineAmount,'-' as delivery_date,'-' as Remark from dual");
                                //model[0].dt1 = gdt;
                                //sgen.SetSession(MyGuid, "BCPO_DT", gdt.Copy());
                                String[] L5 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["indno"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems5 = L5;
                                model[0].Col84 = dt.Rows[0]["gtaxamt"].ToString();
                                model[0].Col62 = dt.Rows[0]["ginstlchrg"].ToString();
                                model[0].Col60 = dt.Rows[0]["date11"].ToString();
                                model[0].Col70 = dt.Rows[0]["col1"].ToString();
                                model[0].Col71 = dt.Rows[0]["col2"].ToString();
                                model[0].Col72 = dt.Rows[0]["col3"].ToString();
                                model[0].Col76 = dt.Rows[0]["col4"].ToString();
                                model[0].Col77 = dt.Rows[0]["col5"].ToString();
                                model[0].Col78 = dt.Rows[0]["col6"].ToString();
                                model[0].Col73 = dt.Rows[0]["date13"].ToString();
                                model[0].Col74 = dt.Rows[0]["date14"].ToString();
                                model[0].Col75 = dt.Rows[0]["date15"].ToString();
                                DataTable gdt = sgen.getdata(userCode, "select '' Item,'1' as  SNo ,'-' as Icode,'-' as IName,'-' PARTNO,'-'  HSN,'-' as UOM,'0' as TaxRate,'0' as Qty_Ord,'0' as IRate," +
                                                                           "'-' disc_type,'0' as disc_rate,'0' IAmount,'0' TaxAmount,'0' discAmount,'0' LineAmount,'-' as delivery_date,'-' as Remark from dual");
                                model[0].dt1 = gdt;
                                model[0].dt1 = model[0].dt1.Clone();

                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["SNo"] = i + 1;
                                    dr["Icode"] = dt.Rows[i]["icode"].ToString();
                                    dr["IName"] = dt.Rows[i]["iname"].ToString();
                                    dr["PARTNO"] = dt.Rows[i]["cpartno"].ToString();
                                    dr["HSN"] = dt.Rows[i]["hsno"].ToString();
                                    dr["UOM"] = dt.Rows[i]["uom"].ToString();
                                    dr["TaxRate"] = dt.Rows[i]["taxrate"].ToString();
                                    dr["Qty_Ord"] = dt.Rows[i]["qtyord"].ToString();
                                    dr["delivery_date"] = dt.Rows[i]["dlv_date1"].ToString();
                                    dr["IRate"] = dt.Rows[i]["irate"].ToString();
                                    dr["disc_type"] = dt.Rows[i]["disctype"].ToString();
                                    dr["disc_rate"] = dt.Rows[i]["discrate"].ToString();
                                    dr["Iamount"] = dt.Rows[i]["Iamount"].ToString();
                                    dr["taxamount"] = dt.Rows[i]["taxamt"].ToString();
                                    dr["discamount"] = dt.Rows[i]["discamt"].ToString();
                                    dr["lineamount"] = dt.Rows[i]["lineamount"].ToString();
                                    dr["Remark"] = dt.Rows[i]["iremark"].ToString();
                                    model[0].dt1.Rows.Add(dr);
                                }
                                model[0].dt1.AcceptChanges();
                                //other charges LTM
                                mq1 = "select ch.master_name chrgname,en.col1,en.col2,en.col3,en.col4,en.col5,en.col6,en.col7,en.col8,en.col9,en.r_no from enx_tab en " +
                                    "inner join master_setting ch on en.col1=ch.master_id and ch.type='MR0' and find_in_set(ch.client_unit_id,en.client_unit_id)=1 " +
                                    "where (en.client_id||en.client_unit_id||en.vch_num||to_char(en.vch_date, 'yyyymmdd')|| en.type) = '" + URL + "'";
                                dt = sgen.getdata(userCode, mq1);
                                if (dt.Rows.Count > 0)
                                {
                                    model[0].LTM1 = new List<Tmodelmain>();
                                    foreach (DataRow dr in dt.Rows)
                                    {
                                        model[0].LTM1.Add(new Tmodelmain
                                        {
                                            Col13 = dr["col3"].ToString(),//chrgrtid
                                            Col14 = dr["r_no"].ToString(),//rno
                                            Col15 = dr["col1"].ToString(),//chrgid
                                            Col16 = dr["col2"].ToString(),//chrgamt
                                            Col17 = dr["col4"].ToString(),//igstrt
                                            Col18 = dr["col5"].ToString(),//igstamt
                                            Col19 = dr["col6"].ToString(),//cgstrt
                                            Col20 = dr["col7"].ToString(),//cgstamt
                                            Col21 = dr["col8"].ToString(),//sgstrt
                                            Col22 = dr["col9"].ToString(),//sgstamt
                                            Col23 = dr["chrgname"].ToString(),//chrgname
                                        });
                                    }
                                }
                            }
                            break;
                        case "PARTYFRM":
                            mq = "select a.c_name as name,a.c_gstin as gstin,a.addr as Address,a.vch_num from clients_mst a " +
                                "where a.vch_num||to_char(a.vch_date, 'yyyymmdd')|| a.type = '" + URL + "'";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                model[0].Col50 = dt.Rows[0]["vch_num"].ToString();
                                model[0].Col23 = dt.Rows[0]["name"].ToString();
                                model[0].Col24 = dt.Rows[0]["address"].ToString();
                                model[0].Col25 = dt.Rows[0]["gstin"].ToString();
                            }
                            break;
                        case "PARTYTO":
                            mq = "select a.c_name as name,a.c_gstin as gstin,a.addr as Address,a.vch_num from clients_mst a " +
                                "where a.vch_num||to_char(a.vch_date, 'yyyymmdd')|| a.type = '" + URL + "'";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                model[0].Col51 = dt.Rows[0]["vch_num"].ToString();
                                model[0].Col26 = dt.Rows[0]["name"].ToString();
                                model[0].Col27 = dt.Rows[0]["address"].ToString();
                                model[0].Col28 = dt.Rows[0]["gstin"].ToString();
                            }
                            break;
                        case "ITEM":
                            mq = "select distinct '-' fstr,it.icode,it.iname,it.cpartno as partno,um.master_name as UOM," +
                               "'0' as disc_rate,'-' disctype,'0' IAmount,'0' TaxAmount,'0' discAmount,'0' LineAmount,'0' as IRate,nvl(hsn.master_name,'-') as hsn,nvl(hsn.group_name,'0') taxrate, " +
                               "it.amortchrgs,it.matjobwork,'0' mcamt,'0' qtyord,'0' ind_no,'-' ind_date from item it" +
                               " left join master_setting um on um.master_id = it.uom and " +
                               "um.type = 'UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1" +
                               " left join master_setting hsn on hsn.master_id = it.hsno and hsn.type = 'HSN' " +
                               "and find_in_set(hsn.client_unit_id,it.client_unit_id)=1  where " +
                               "it.icode || to_char(it.vch_date, 'yyyymmdd') || it.type in ('" + URL + "')";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt1.Rows.RemoveAt(0); }
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["Item"] = dt.Rows[i]["fstr"].ToString();
                                    dr["SNo"] = i + 1;
                                    dr["Icode"] = dt.Rows[i]["icode"].ToString();
                                    dr["IName"] = dt.Rows[i]["iname"].ToString();
                                    dr["PARTNO"] = dt.Rows[i]["partno"].ToString();
                                    dr["HSN"] = dt.Rows[i]["hsn"].ToString();
                                    dr["UOM"] = dt.Rows[i]["uom"].ToString();
                                    dr["TaxRate"] = dt.Rows[i]["taxrate"].ToString();
                                    dr["IRate"] = "0";
                                    dr["disc_type"] = "0";
                                    dr["disc_rate"] = "0";
                                    dr["Iamount"] = "0";
                                    dr["taxamount"] = "0";
                                    dr["discamount"] = "0";
                                    dr["lineamount"] = "0";
                                    dr["Qty_ord"] = dt.Rows[i]["qtyord"].ToString();
                                    model[0].dt1.Rows.Add(dr);
                                }
                                model[0].dt1.AcceptChanges();
                            }
                            break;
                        case "CHRGS":
                            mq = "select master_id,master_name from master_setting where (master_id||to_char(vch_date,'yyyymmdd')||type) in ('" + URL + "')";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                int i = 0;
                                if (model[0].LTM1 == null) { model[0].LTM1 = new List<Tmodelmain>(); }
                                if (model[0].LTM1.Count == 0) { model[0].LTM1 = new List<Tmodelmain>(); }
                                else i = model[0].LTM1.Count;
                                foreach (DataRow dr in dtt.Rows)
                                {
                                    i++;
                                    model[0].LTM1.Add(new Tmodelmain
                                    {
                                        Col14 = i.ToString(),
                                        Col15 = dr["master_id"].ToString(),
                                        Col23 = dr["master_name"].ToString(),
                                        Col16 = "0",
                                        Col17 = "0",
                                        Col18 = "0",
                                        Col19 = "0",
                                        Col20 = "0",
                                        Col21 = "0",
                                        Col22 = "0",
                                    });
                                }
                            }
                            break;
                        case "CHRGDEL":
                            if (sgen.GetSession(MyGuid, "cust_posoorddelrno") != null)
                            {
                                var mrno = sgen.GetSession(MyGuid, "cust_posoorddelrno").ToString();
                                var LTM = model[0].LTM1;
                                for (int d = 0; d < LTM.Count; d++)
                                {
                                    string chrgno = LTM[d].Col14;
                                    if (chrgno.Trim() == mrno.Trim()) { model[0].LTM1.RemoveAt(d); }
                                }
                                sgen.SetSession(MyGuid, "cust_posoorddelrno", null);
                            }
                            break;
                        case "RATE":
                            if (sgen.GetSession(MyGuid, "cust_portrno") == null)
                            {
                                ViewBag.scripCall += "showmsgJS(1,'Rno not defined', 0);";
                                return model;
                            }
                            var rno = sgen.Make_int(sgen.GetSession(MyGuid, "cust_portrno").ToString());
                            mq = "select master_id DocNo,group_name TaxRate from master_setting where (master_id||to_char(vch_date,'yyyymmdd')||type)='" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                model[0].LTM1[rno - 1].Col13 = dtt.Rows[0]["DocNo"].ToString().Trim();
                                var utgst = model[0].Col18.Substring(0, 2).Trim();
                                var pgst = model[0].Col22.Substring(0, 2).Trim();
                                if (utgst == pgst)
                                {
                                    var amt = sgen.Make_decimal(model[0].LTM1[rno - 1].Col16);
                                    var rt = sgen.Make_decimal(dtt.Rows[0]["TaxRate"].ToString().Trim().Split('%')[0].Trim());
                                    var amtrt = (amt * rt) / 100;
                                    model[0].LTM1[rno - 1].Col19 = (rt / 2).ToString() + "%";
                                    model[0].LTM1[rno - 1].Col20 = (amtrt / 2).ToString();
                                    model[0].LTM1[rno - 1].Col21 = (rt / 2).ToString() + "%";
                                    model[0].LTM1[rno - 1].Col22 = (amtrt / 2).ToString();
                                }
                                else
                                {
                                    var amt = sgen.Make_decimal(model[0].LTM1[rno - 1].Col16);
                                    var rt = sgen.Make_decimal(dtt.Rows[0]["TaxRate"].ToString().Trim().Split('%')[0].Trim());
                                    var amtrt = (amt * rt) / 100;
                                    model[0].LTM1[rno - 1].Col17 = rt.ToString() + "%";
                                    model[0].LTM1[rno - 1].Col18 = amtrt.ToString();
                                }
                                decimal bamt = sgen.Make_decimal(model[0].Col33);
                                decimal bigst = sgen.Make_decimal(model[0].Col34);
                                decimal bcgst = sgen.Make_decimal(model[0].Col35);
                                decimal bsgst = sgen.Make_decimal(model[0].Col36);
                                decimal tamt = 0, tigst = 0, tcgst = 0, tsgst = 0;
                                for (int i = 0; i < model[0].LTM1.Count; i++)
                                {
                                    tamt = tamt + sgen.Make_decimal(model[0].LTM1[i].Col16);
                                    tigst = tigst + sgen.Make_decimal(model[0].LTM1[i].Col18);
                                    tcgst = tcgst + sgen.Make_decimal(model[0].LTM1[i].Col20);
                                    tsgst = tsgst + sgen.Make_decimal(model[0].LTM1[i].Col22);
                                }
                                model[0].Col37 = (bamt + tamt).ToString();
                                model[0].Col38 = (bigst + tigst).ToString();
                                model[0].Col39 = (bcgst + tcgst).ToString();
                                model[0].Col40 = (bsgst + tsgst).ToString();
                                model[0].Col62 = (bamt + tamt + bigst + tigst + bcgst + tcgst + bsgst + tsgst).ToString();//netamt
                            }
                            break;
                    }
                    break;
                #endregion
                #region quot
                case "quot":
                    switch (btnval.ToUpper())
                    {
                        case "PRINT":
                            string term = "", doc_contrl_no = "", invtype = "", rpt_name = "";
                            invtype = sgen.getstring(userCode, "select distinct p.type as master_id from itransactionc p where (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.pur_type) = '" + URL + "'");
                            DataTable dtterm = sgen.getdata(userCode, "select k.col73 tandc,k.col1 doc_control_no,k.col5 rptid,fm.CLIENT_NAME rptname from kc_tab k " +
                                "inner join master_setting fm on fm.master_id = k.col5 and fm.type = 'IRF' and fm.classid = '89' and fm.sectionid = '" + invtype + "' " +
                                "where k.type='PRN' and k.client_unit_id = '" + unitid_mst + "'");
                            if (dtterm.Rows.Count > 0)
                            {
                                term = dtterm.Rows[0]["tandc"].ToString();
                                rpt_name = dtterm.Rows[0]["rptname"].ToString();
                                doc_contrl_no = dtterm.Rows[0]["doc_control_no"].ToString();
                            }
                            else
                            {
                                rpt_name = "quotation1";
                            }
                            mq = "select p.vch_num Doc_number,'" + term + "' terms_cond,'" + doc_contrl_no + "' doc_control_no,to_char(p.vch_date, '" + sgen.Getsqldateformat() + "') Doc_date,c.c_name as Party_Name,(case when p.is_other='Y' then p.other_per else c.cpname end) as cont_per,c.cpcont,c.cpemail,c.c_gstin as gstin," +
                                "c.addr as Party_Address,c.org_mobile,nvl(sf.c_name, '-') as From_Name,nvl(sf.c_gstin, '-') as From_Gstin,tp.master_name as Against,nvl(sf.addr, '-') FromAddress," +
                                "nvl(st.c_name, '-') as To_Name,nvl(st.c_gstin, '-') as To_Gstin,nvl(st.addr, '-') ToAddress,p.pur_type Purchase_Type, p.icode ItemCode," +
                                "p.iname ItemName,p.cpartno PartNo, p.uom UOM, p.hsno HSN,p.qtystk Stock_Qty, p.ordqty Order_Qty, p.irate ItemRate, p.taxrate TaxRate," +
                                "iamount Item_Amt,p.taxamt taxamt,p.cond,p.totremark, p.disctype Discount_Type, p.discrate Discount_Rate, p.discamt Discount_Amt,p.lineamount LineAmt,p.gserchrg IGST, " +
                                "p.gloadchrg SGST, p.gamc CGST, p.basicamt BasicAmt, p.ginstlchrg GrossAmt, p.gtaxamt as Net_Amount,pt.master_name as payment_tems" +
                                ",OTH.col3 as othr_chrg,OTH.col4 as othr_taxrate,OTH.col5 AS othr_igst,OTH.col6 AS othr_cgst,OTH.col7 AS othr_sgst,P.iremark " +
                                "from itransactionc p " +
                                "inner join clients_mst c on p.acode = c.vch_num and find_in_set(c.client_unit_id, p.client_unit_id)=1 and " +
                                "c.type = 'BCD' and substr(c.vch_num,0,3)='303' inner join master_setting tp on tp.master_id=p.type and tp.type='KPO' and " +
                                "substr(tp.master_id,1,1)='4' and find_in_set(tp.client_unit_id,p.client_unit_id)=1 left join (select ch.master_name chrgname,en.col1,en.col2,en.col3,en.col4,en.col5,en.col6,en.col7,en.col8,en.col9,en.r_no from enx_tab en inner join master_setting ch on en.col1=ch.master_id and ch.type='MR0' and find_in_set(ch.client_unit_id,en.client_unit_id)=1 where (en.client_id||en.client_unit_id||en.vch_num||to_char(en.vch_date, 'yyyymmdd')|| en.type) = '" + URL + "') OTH on 1=1 inner join master_setting pt on pt.master_id=p.pay_term " +
                                "and pt.type='PTM' and find_in_set(pt.client_unit_id,p.client_unit_id)=1 left join clients_mst sf on p.shipfrom = sf.vch_num and " +
                                "find_in_set(sf.client_unit_id, p.client_unit_id)=1 and sf.type = 'BCD' left join clients_mst st on p.shipto = st.vch_num and " +
                                "find_in_set(st.client_unit_id, p.client_unit_id)=1 and st.type = 'BCD' and substr(st.vch_num,0,3)='303' where " +
                                "(p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.pur_type) = '" + URL + "'";
                            dt = sgen.getdata(userCode, mq);
                            #region 1.pay_term
                            TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1 = cmd_Fun.payterm(userCode, unitid_mst, out defcall);
                            #endregion
                            #region 2.priceterms
                            TempData[MyGuid + "_Tlist2"] = model[0].TList2 = mod2 = cmd_Fun.priceterm(userCode, unitid_mst);
                            #endregion
                            #region 3.Transportmode
                            TempData[MyGuid + "_Tlist3"] = model[0].TList3 = mod3 = cmd_Fun.transportmode(userCode, unitid_mst);
                            TempData[MyGuid + "_Tlist4"] = model[0].TList4 = mod4 = cmd_Fun.transportmode(userCode, unitid_mst);
                            #endregion
                            if (dt.Rows.Count > 0)
                            {
                                DataSet ds = new DataSet();
                                dt.TableName = "prepcur";
                                ds.Tables.Add(dt);
                                sgen.open_report_byDs_xml(userCode, ds, rpt_name, "Quotaion");
                                ViewBag.scripCall += "showRptnew('Quotaion');disableForm();";
                            }
                            else
                            {
                                ViewBag.scripCall = "showmsgJS(1, 'Data Not Exist', 2);";
                            }
                            break;
                        case "EDIT":
                            mq = "select a.*,to_char(convert_tz(vch_date,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') vch_date1,to_char(convert_tz(chldate,'UTC','" + sgen.Gettimezone() + "'),'" + sgen.Getsqldateformat() + "') chldate1 from itransactionc a " +
                            "where client_id||client_unit_id||vch_num||to_char(vch_date, 'yyyymmdd')|| pur_type = '" + URL + "'";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "EDMODE", "Y");
                                #region 1.pay_term
                                TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1 = cmd_Fun.payterm(userCode, unitid_mst, out defcall);
                                #endregion
                                #region 2.priceterms
                                TempData[MyGuid + "_Tlist2"] = model[0].TList2 = mod2 = cmd_Fun.priceterm(userCode, unitid_mst);
                                #endregion
                                #region 3.Transportmode
                                TempData[MyGuid + "_Tlist3"] = model[0].TList3 = mod3 = cmd_Fun.transportmode(userCode, unitid_mst);
                                TempData[MyGuid + "_Tlist4"] = model[0].TList4 = mod4;
                                #endregion
                                model[0].Col1 = dt.Rows[0]["client_id"].ToString();
                                model[0].Col2 = dt.Rows[0]["client_unit_id"].ToString();
                                model[0].Col3 = dt.Rows[0]["ent_by"].ToString();
                                model[0].Col4 = dt.Rows[0]["ent_date"].ToString();
                                model[0].Col5 = dt.Rows[0]["edit_by"].ToString();
                                model[0].Col6 = dt.Rows[0]["edit_date"].ToString();
                                model[0].Col8 = "client_id||client_unit_id||vch_num|| To_Char(vch_date, 'yyyymmdd')|| pur_type = '" + URL + "'";
                                model[0].Col10 = model[0].Col10;
                                model[0].Col11 = model[0].Col11;
                                model[0].Col13 = "Update";
                                model[0].Col100 = "Update & New";
                                model[0].Col121 = "U";
                                model[0].Col122 = "<u>U</u>pdate";
                                model[0].Col123 = "Update & Ne<u>w</u>";
                                model[0].Col14 = model[0].Col14;
                                model[0].Col15 = model[0].Col15;
                                model[0].Chk1 = (dt.Rows[0]["is_other"].ToString() == "Y") ? true : false;
                                if (model[0].Chk1) model[0].Col63 = dt.Rows[0]["other_per"].ToString();
                                model[0].Col16 = dt.Rows[0]["vch_num"].ToString();
                                model[0].Col47 = dt.Rows[0]["vch_num"].ToString();
                                model[0].Col48 = dt.Rows[0]["vch_date1"].ToString();
                                model[0].Col12 = dt.Rows[0]["type"].ToString();
                                model[0].Col60 = dt.Rows[0]["GFREIGHT"].ToString();
                                model[0].Col59 = dt.Rows[0]["REQ_BY"].ToString();
                                String[] L1 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["pay_term"].ToString()).Distinct()).Split(',');
                                String[] L2 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["price_term"].ToString()).Distinct()).Split(',');
                                String[] L3 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["tmode"].ToString()).Distinct()).Split(',');
                                model[0].SelectedItems1 = L1;
                                model[0].SelectedItems2 = L2;
                                model[0].SelectedItems3 = L3;
                                mq1 = "select a.c_name as name,a.c_gstin as gstin,a.addr as Address,a.vch_num,a.tor,nvl(ba.country_name,'-') as country_name," +
                 "nvl(ba.state_name,'-') state_name,nvl(ba.city_name,'-') as city_name,a.pincode_2 from clients_mst a left join country_state ba on ba.rec_id = a.city2 where find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 and a.type='BCD' and substr(a.vch_num,0,3)='303' and a.vch_num='" + dt.Rows[0]["acode"].ToString() + "'";
                                DataTable dtp = sgen.getdata(userCode, mq1);
                                if (dtp.Rows.Count > 0)
                                {
                                    model[0].Col49 = dtp.Rows[0]["vch_num"].ToString();
                                    model[0].Col20 = dtp.Rows[0]["name"].ToString();
                                    model[0].Col21 = dtp.Rows[0]["address"].ToString();
                                    model[0].Col22 = dtp.Rows[0]["gstin"].ToString();
                                    model[0].Col52 = dtp.Rows[0]["tor"].ToString();
                                    model[0].Col75 = dtp.Rows[0]["city_name"].ToString();
                                    model[0].Col76 = dtp.Rows[0]["state_name"].ToString();
                                    model[0].Col77 = dtp.Rows[0]["country_name"].ToString();
                                    model[0].Col78 = dtp.Rows[0]["pincode_2"].ToString();
                                    mq1 = "select (ct.ref_code||ct.vch_num||ct.type) as cont_perid,a.vch_num as Account_No,  a.c_name CUSTNAME," +
                                  "((replace(ct.cpname, '0', '') || ' ' || replace(ct.cp_mname, '0', '') || ' ' || replace(ct.cp_lname, '0', ''))) cp_name,'Account Detail' as Data_Source" +
                                  " from clients_mst a INNER join clients_mst ct  on a.vch_num = ct.ref_code and find_in_set(ct.client_unit_id, '" + unitid_mst + "') = 1 and substr(ct.ref_code,0,3)= '303'" +
                                  " and a.vch_num='" + model[0].Col49 + "' where find_in_set(a.client_unit_id,'" + unitid_mst + "')= 1 and a.type in ('BCD')  and(a.mftr is null or a.mftr = '0' or a.mftr = 'N') and " +
                                  "(a.pubr is null or a.pubr = '0' or a.pubr = 'N') and substr(a.vch_num,0,3)= '303'";
                                    DataTable dtcp = new DataTable();
                                    dtcp = sgen.getdata(userCode, mq1);
                                    if (dtcp.Rows.Count > 0)
                                    {
                                        foreach (DataRow dataRow in dtcp.Rows)
                                        {
                                            mod4.Add(new SelectListItem { Text = dataRow["cp_name"].ToString(), Value = dataRow["cont_perid"].ToString() });
                                        }
                                    }
                                    TempData[MyGuid + "_Tlist4"] = model[0].TList4 = mod4;
                                    String[] L4 = System.String.Join(",", dt.Rows.OfType<DataRow>().Select(r => r["per_id"].ToString()).Distinct()).Split(',');
                                    model[0].SelectedItems4 = L4;
                                }
                                mq1 = "select a.c_name as name,a.c_gstin as gstin,a.addr as Address,a.vch_num from clients_mst a where find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 and a.type='BCD' and a.vch_num='" + dt.Rows[0]["shipfrom"].ToString() + "' and substr(a.vch_num,0,3)='303'";
                                dtp = sgen.getdata(userCode, mq1);
                                if (dtp.Rows.Count > 0)
                                {
                                    model[0].Col50 = dtp.Rows[0]["vch_num"].ToString();
                                    model[0].Col23 = dtp.Rows[0]["name"].ToString();
                                    model[0].Col24 = dtp.Rows[0]["address"].ToString();
                                    model[0].Col25 = dtp.Rows[0]["gstin"].ToString();
                                }
                                mq1 = "select a.c_name as name,a.c_gstin as gstin,a.addr as Address,a.vch_num from clients_mst a where find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 and a.type='BCD' and a.vch_num='" + dt.Rows[0]["shipfrom"].ToString() + "' and substr(a.vch_num,0,3)='303'";
                                dtp = sgen.getdata(userCode, mq1);
                                if (dtp.Rows.Count > 0)
                                {
                                    model[0].Col51 = dtp.Rows[0]["vch_num"].ToString();
                                    model[0].Col26 = dtp.Rows[0]["name"].ToString();
                                    model[0].Col27 = dtp.Rows[0]["address"].ToString();
                                    model[0].Col28 = dtp.Rows[0]["gstin"].ToString();
                                }
                                model[0].Col31 = dt.Rows[0]["totremark"].ToString();
                                model[0].Col32 = dt.Rows[0]["cond"].ToString();
                                model[0].Col33 = dt.Rows[0]["basicamt"].ToString();
                                model[0].Col37 = dt.Rows[0]["ginstlchrg"].ToString();
                                model[0].Col38 = dt.Rows[0]["gserchrg"].ToString();
                                model[0].Col39 = dt.Rows[0]["gamc"].ToString();
                                model[0].Col40 = dt.Rows[0]["gloadchrg"].ToString();
                                model[0].Col54 = dt.Rows[0]["pur_type"].ToString();
                                model[0].Col9 = sgen.seekval(userCode, "select upper(master_name) master_name from master_setting where master_id='" + dt.Rows[0]["type"].ToString() + "' and type='KPO'", "master_name");
                                model[0].Col62 = dt.Rows[0]["gtaxamt"].ToString();
                                //model[0].Col59 = dt.Rows[0]["gothrchrg"].ToString();
                                model[0].dt1 = model[0].dt1.Clone();
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["SNo"] = i + 1;
                                    dr["Icode"] = dt.Rows[i]["icode"].ToString();
                                    dr["IName"] = dt.Rows[i]["iname"].ToString();
                                    dr["PARTNO"] = dt.Rows[i]["cpartno"].ToString();
                                    dr["HSN"] = dt.Rows[i]["hsno"].ToString();
                                    dr["UOM"] = dt.Rows[i]["uom"].ToString();
                                    dr["TaxRate"] = dt.Rows[i]["taxrate"].ToString();
                                    dr["Qty_in_stock"] = dt.Rows[i]["qtystk"].ToString();
                                    dr["Qty_Ord"] = dt.Rows[i]["ordqty"].ToString();
                                    dr["IRate"] = dt.Rows[i]["irate"].ToString();
                                    dr["disc_type"] = dt.Rows[i]["disctype"].ToString();
                                    dr["disc_rate"] = dt.Rows[i]["discrate"].ToString();
                                    dr["Iamount"] = dt.Rows[i]["Iamount"].ToString();
                                    dr["taxamount"] = dt.Rows[i]["taxamt"].ToString();
                                    dr["discamount"] = dt.Rows[i]["discamt"].ToString();
                                    dr["lineamount"] = dt.Rows[i]["lineamount"].ToString();
                                    dr["Remark"] = dt.Rows[i]["iremark"].ToString();
                                    model[0].dt1.Rows.Add(dr);
                                }
                                model[0].dt1.AcceptChanges();
                                //other charges LTM
                                mq1 = "select ch.master_name chrgname,en.col1,en.col2,en.col3,en.col4,en.col5,en.col6,en.col7,en.col8,en.col9,en.col10,en.col11,en.col12,en.r_no from enx_tab en " +
                                    "inner join master_setting ch on en.col1=ch.master_id and ch.type='MR0' and find_in_set(ch.client_unit_id,en.client_unit_id)=1 " +
                                    "where (en.client_id||en.client_unit_id||en.vch_num||to_char(en.vch_date, 'yyyymmdd')|| en.type) = '" + URL + "'";
                                dt = sgen.getdata(userCode, mq1);
                                if (dt.Rows.Count > 0)
                                {
                                    model[0].Col85 = "client_id||client_unit_id||vch_num|| To_Char(vch_date, 'yyyymmdd')|| type = '" + URL + "'";
                                    model[0].LTM1 = new List<Tmodelmain>();
                                    foreach (DataRow dr in dt.Rows)
                                    {
                                        model[0].LTM1.Add(new Tmodelmain
                                        {
                                            Col13 = dr["col3"].ToString(),//chrgrtid
                                            Col14 = dr["r_no"].ToString(),//rno
                                            Col15 = dr["col1"].ToString(),//chrgid
                                            Col16 = dr["col2"].ToString(),//chrgamt
                                            Col17 = dr["col4"].ToString(),//igstrt
                                            Col18 = dr["col5"].ToString(),//igstamt
                                            Col19 = dr["col6"].ToString(),//cgstrt
                                            Col20 = dr["col7"].ToString(),//cgstamt
                                            Col21 = dr["col8"].ToString(),//sgstrt
                                            Col22 = dr["col9"].ToString(),//sgstamt
                                            Col23 = dr["chrgname"].ToString(),//chrgname
                                            Col25 = dr["col12"].ToString(),//chrgrate
                                            Col27 = dr["col10"].ToString(),//
                                            Col28 = dr["col11"].ToString(),//
                                        });
                                    }
                                }
                            }
                            break;
                        case "NEW":
                            mq = "select master_id,upper(master_name) master_name,to_char(utc_timestamp(),'" + sgen.Getsqldateformat() + "') po_date " +
                                "from master_Setting where master_id||To_Char(vch_date, 'yyyymmdd')||type = '" + URL + "' ";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                sgen.SetSession(MyGuid, "EDMODE", "N");
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                                ViewBag.scripCall = "enableForm();";
                                model[0].Col48 = dt.Rows[0]["po_date"].ToString();
                                model[0].Col12 = dt.Rows[0]["master_id"].ToString();
                                model[0].Col9 = dt.Rows[0]["master_name"].ToString();
                                mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + dt.Rows[0]["master_id"].ToString() + "'" + model[0].Col11.Trim() + " and pur_type='QTN'";
                                vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                                model[0].Col47 = vch_num;
                                model[0].Col16 = vch_num;
                                model[0].Col31 = "-";
                                model[0].Col32 = "-";
                                model[0].Col17 = "1";
                                model[0].Col100 = "Save & New";
                                model[0].Col121 = "S";
                                model[0].Col122 = "<u>S</u>ave";
                                model[0].Col123 = "Save & Ne<u>w</u>";
                                #region 1.pay_term
                                TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1 = cmd_Fun.payterm(userCode, unitid_mst, out defcall);
                                #endregion
                                #region 2.priceterms
                                TempData[MyGuid + "_Tlist2"] = model[0].TList2 = mod2 = cmd_Fun.priceterm(userCode, unitid_mst);
                                #endregion
                                #region 3.Transportmode
                                TempData[MyGuid + "_Tlist3"] = model[0].TList3 = mod3 = cmd_Fun.transportmode(userCode, unitid_mst);
                                mod4 = new List<SelectListItem>();
                                TempData[MyGuid + "_Tlist4"] = model[0].TList4 = mod4;
                                #endregion
                                model[0].SelectedItems1 = new string[] { "" };
                                model[0].SelectedItems2 = new string[] { "" };
                                model[0].SelectedItems3 = new string[] { "" };
                                model[0].SelectedItems4 = new string[] { "" };
                                Make_query(viewName.ToLower(), "Select Party", "PARTY", "1", "", "", MyGuid);
                                ViewBag.scripCall = "callFoo('Select Party');";
                            }
                            break;
                        case "PARTY":
                            mq = "select a.c_name as name,a.c_gstin as gstin,a.addr as Address,a.vch_num,a.tor,nvl(ba.country_name,'-') as country_name," +
                     "nvl(ba.state_name,'-') state_name,nvl(ba.city_name,'-') as city_name,a.pincode_2 from clients_mst a left join country_state ba on ba.rec_id = a.city2 where a.vch_num||To_Char(a.vch_date, 'yyyymmdd')|| a.type = '" + URL + "'";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                model[0].Col49 = dt.Rows[0]["vch_num"].ToString();
                                model[0].Col20 = dt.Rows[0]["name"].ToString();
                                model[0].Col21 = dt.Rows[0]["address"].ToString();
                                model[0].Col22 = dt.Rows[0]["gstin"].ToString();
                                model[0].Col52 = dt.Rows[0]["tor"].ToString();
                                model[0].Col75 = dt.Rows[0]["city_name"].ToString();
                                model[0].Col76 = dt.Rows[0]["state_name"].ToString();
                                model[0].Col77 = dt.Rows[0]["country_name"].ToString();
                                model[0].Col78 = dt.Rows[0]["pincode_2"].ToString();
                                ViewBag.vimport = "";

                                mq1 = "select (ct.ref_code||ct.vch_num||ct.type) as cont_perid,a.vch_num as Account_No,  a.c_name CUSTNAME," +
                                    "((replace(ct.cpname, '0', '') || ' ' || replace(ct.cp_mname, '0', '') || ' ' || replace(ct.cp_lname, '0', ''))) cp_name,'Account Detail' as Data_Source" +
                                    " from clients_mst a INNER join clients_mst ct  on a.vch_num = ct.ref_code and find_in_set(ct.client_unit_id, '" + unitid_mst + "') = 1 and substr(ct.ref_code,0,3)= '303'" +
                                    " and a.vch_num='" + model[0].Col49 + "' where find_in_set(a.client_unit_id,'" + unitid_mst + "')= 1 and a.type in ('BCD')  and(a.mftr is null or a.mftr = '0' or a.mftr = 'N') and " +
                                    "(a.pubr is null or a.pubr = '0' or a.pubr = 'N') and substr(a.vch_num,0,3)= '303'";
                                DataTable dtcp = new DataTable();
                                dtcp = sgen.getdata(userCode, mq1);
                                if (dtcp.Rows.Count > 0)
                                {
                                    foreach (DataRow dataRow in dtcp.Rows)
                                    {
                                        mod4.Add(new SelectListItem { Text = dataRow["cp_name"].ToString(), Value = dataRow["cont_perid"].ToString() });
                                    }
                                }
                                TempData[MyGuid + "_Tlist4"] = model[0].TList4 = mod4;
                                //String[] L4 = System.String.Join(",", dtcp.Rows.OfType<DataRow>().Select(r => r["cont_perid"].ToString()).Distinct()).Split(',');
                                if (dtcp.Rows.Count > 0) model[0].SelectedItems4 = new string[] { dtcp.Rows[0]["cont_perid"].ToString() };
                            }
                            break;
                        case "ITEM":
                            mq = "select distinct '-' fstr,TRIM(dbms_lob.substr( it.description,4000,1)) description,it.icode,it.iname,it.cpartno as partno,um.master_name as UOM,nvl(hsn.master_name,'-') as hsn,nvl(hsn.group_name,'0') taxrate, " +
                                "nvl(s.closing, 0) AS qtystk,'0' qtyord,'0' ind_no,'-' ind_date from item it left join master_setting um on um.master_id = it.uom and " +
                                "um.type = 'UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1" +
                                " left join master_setting hsn on hsn.master_id = it.hsno and hsn.type = 'HSN' " +
                                "and find_in_set(hsn.client_unit_id,it.client_unit_id)=1 " +
                                "left join(select icode,client_unit_id,sum(op) op,sum(pktop) pktop,sum(qtyin) qtyin,sum(qtyout) out," +
                                      "sum(op)+sum(qtyin)-sum(qtyout) closing from (select icode, client_unit_id, nvl(op_2019, 0) op," +
                                      " nvl(pkt_2019, 0) pktop, 0 qtyin, 0 qtyout, 0 pktno from itbal union all select icode, client_unit_id, " +
                                      "sum(to_number(qtyin)) - sum(to_number(qtyout)) op, sum((case when substr(type, 1, 1) in ('0', '1') then" +
                                      " pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktop,sum(to_number(qtyin)) " +
                                      "qtyin,sum(to_number(qtyout)) qtyout,0 pktno from itransaction where trim(store) = 'Y' and " +
                                      "to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and " +
                                      "to_date('" + year_from.Split(' ')[0].Trim() + "','" + sgen.Getsqldateformat() + "')-1 group by icode,client_unit_id union all select icode,client_unit_id," +
                                      "0 as op,0 as pktop,to_number(qtyin) qtyin,to_number(qtyout) qtyout,sum((case when substr(type, 1, 1) in " +
                                      "('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktno from " +
                                      "itransaction where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between " +
                                      "to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and to_date('" + model[0].Col48 + "','" + sgen.Getsqldateformat() + "') group by icode,client_unit_id," +
                                      "to_number(qtyin),to_number(qtyout)) a group by icode, client_unit_id)" +
                                " s on it.icode = s.icode and find_in_set(it.client_unit_id, s.client_unit_id)=1 where " +
                                "it.icode || to_char(it.vch_date, 'yyyymmdd') || it.type in ('" + URL + "')";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-")) { model[0].dt1.Rows.RemoveAt(0); }
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    DataRow dr = model[0].dt1.NewRow();
                                    dr["Item"] = dt.Rows[i]["fstr"].ToString();
                                    dr["SNo"] = i + 1;
                                    dr["Icode"] = dt.Rows[i]["icode"].ToString();
                                    dr["IName"] = dt.Rows[i]["iname"].ToString();
                                    dr["PARTNO"] = dt.Rows[i]["partno"].ToString();
                                    dr["HSN"] = dt.Rows[i]["hsn"].ToString();
                                    dr["UOM"] = dt.Rows[i]["uom"].ToString();
                                    dr["TaxRate"] = dt.Rows[i]["taxrate"].ToString();
                                    dr["Qty_In_Stock"] = dt.Rows[i]["qtystk"].ToString();
                                    dr["Qty_ord"] = dt.Rows[i]["qtyord"].ToString();
                                    dr["IRate"] = "0";
                                    dr["disc_type"] = "-";
                                    dr["disc_rate"] = "0";
                                    dr["REMARK"] = dt.Rows[i]["description"].ToString();
                                    model[0].dt1.Rows.Add(dr);
                                }
                                model[0].dt1.AcceptChanges();
                            }
                            model[0].Col100 = tm.Col100;
                            break;
                        case "PARTYFRM":
                            mq = "select a.c_name as name,a.c_gstin as gstin,a.addr as Address,a.vch_num from clients_mst a " +
                                "where a.vch_num||to_char(a.vch_date, 'yyyymmdd')|| a.type = '" + URL + "'";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                model[0].Col50 = dt.Rows[0]["vch_num"].ToString();
                                model[0].Col23 = dt.Rows[0]["name"].ToString();
                                model[0].Col24 = dt.Rows[0]["address"].ToString();
                                model[0].Col25 = dt.Rows[0]["gstin"].ToString();
                            }
                            break;
                        case "PARTYTO":
                            mq = "select a.c_name as name,a.c_gstin as gstin,a.addr as Address,a.vch_num from clients_mst a " +
                                "where a.vch_num||to_char(a.vch_date, 'yyyymmdd')|| a.type = '" + URL + "'";
                            dt = sgen.getdata(userCode, mq);
                            if (dt.Rows.Count > 0)
                            {
                                model[0].Col51 = dt.Rows[0]["vch_num"].ToString();
                                model[0].Col26 = dt.Rows[0]["name"].ToString();
                                model[0].Col27 = dt.Rows[0]["address"].ToString();
                                model[0].Col28 = dt.Rows[0]["gstin"].ToString();
                            }
                            break;

                        case "CHRGS":
                            mq = "select master_id,master_name from master_setting where (master_id||to_char(vch_date,'yyyymmdd')||type) in ('" + URL + "')";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                int i = 0;
                                if (model[0].LTM1 == null) { model[0].LTM1 = new List<Tmodelmain>(); }
                                if (model[0].LTM1.Count == 0) { model[0].LTM1 = new List<Tmodelmain>(); }
                                else i = model[0].LTM1.Count;
                                foreach (DataRow dr in dtt.Rows)
                                {
                                    i++;
                                    model[0].LTM1.Add(new Tmodelmain
                                    {
                                        Col14 = i.ToString(),
                                        Col15 = dr["master_id"].ToString(),
                                        Col23 = dr["master_name"].ToString(),
                                        Col16 = "0",
                                        Col17 = "0",
                                        Col18 = "0",
                                        Col19 = "0",
                                        Col20 = "0",
                                        Col21 = "0",
                                        Col22 = "0",
                                    });
                                }
                            }
                            break;
                        case "CHRGDEL":
                            if (sgen.GetSession(MyGuid, "qtndelrno") != null)
                            {
                                var mrno = sgen.GetSession(MyGuid, "qtndelrno").ToString();
                                var LTM = model[0].LTM1;
                                for (int d = 0; d < LTM.Count; d++)
                                {
                                    string chrgno = LTM[d].Col14;
                                    if (chrgno.Trim() == mrno.Trim()) { model[0].LTM1.RemoveAt(d); }
                                }
                                sgen.SetSession(MyGuid, "qtndelrno", null);
                            }
                            break;
                        case "RATE":
                            if (sgen.GetSession(MyGuid, "qtnrno") == null)
                            {
                                ViewBag.scripCall += "showmsgJS(1,'Rno not defined', 0);";
                                return model;
                            }
                            var rno = sgen.Make_int(sgen.GetSession(MyGuid, "qtnrno").ToString());
                            mq = "select master_id DocNo,vch_num,master_name,group_name TaxRate from master_setting where (master_id||to_char(vch_date,'yyyymmdd')||type)='" + URL + "'";
                            dtt = sgen.getdata(userCode, mq);
                            if (dtt.Rows.Count > 0)
                            {
                                model[0].LTM1[rno - 1].Col13 = dtt.Rows[0]["DocNo"].ToString().Trim();
                                model[0].LTM1[rno - 1].Col27 = dtt.Rows[0]["vch_num"].ToString().Trim();
                                model[0].LTM1[rno - 1].Col28 = dtt.Rows[0]["master_name"].ToString().Trim();
                                var utgst = model[0].Col18.Substring(0, 2).Trim();
                                var pgst = "";
                                if (model[0].Col22 == "Not Registered") pgst = model[0].Col22;
                                else pgst = model[0].Col22.Substring(0, 2).Trim();
                                if ((utgst == pgst) || pgst == "Not Registered")
                                {
                                    var amt = sgen.Make_decimal(model[0].LTM1[rno - 1].Col16);
                                    var rt = sgen.Make_decimal(dtt.Rows[0]["TaxRate"].ToString().Trim().Split('%')[0].Trim());
                                    var amtrt = (amt * rt) / 100;
                                    model[0].LTM1[rno - 1].Col19 = (rt / 2).ToString() + "%";
                                    model[0].LTM1[rno - 1].Col20 = (amtrt / 2).ToString();
                                    model[0].LTM1[rno - 1].Col21 = (rt / 2).ToString() + "%";
                                    model[0].LTM1[rno - 1].Col22 = (amtrt / 2).ToString();
                                }
                                else
                                {
                                    var amt = sgen.Make_decimal(model[0].LTM1[rno - 1].Col16);
                                    var rt = sgen.Make_decimal(dtt.Rows[0]["TaxRate"].ToString().Trim().Split('%')[0].Trim());
                                    var amtrt = (amt * rt) / 100;
                                    model[0].LTM1[rno - 1].Col17 = rt.ToString() + "%";
                                    model[0].LTM1[rno - 1].Col18 = amtrt.ToString();
                                }
                                decimal bamt = sgen.Make_decimal(model[0].Col33);
                                decimal bigst = sgen.Make_decimal(model[0].Col34);
                                decimal bcgst = sgen.Make_decimal(model[0].Col35);
                                decimal bsgst = sgen.Make_decimal(model[0].Col36);
                                decimal tamt = 0, tigst = 0, tcgst = 0, tsgst = 0;
                                for (int i = 0; i < model[0].LTM1.Count; i++)
                                {
                                    tamt = tamt + sgen.Make_decimal(model[0].LTM1[i].Col16);
                                    tigst = tigst + sgen.Make_decimal(model[0].LTM1[i].Col18);
                                    tcgst = tcgst + sgen.Make_decimal(model[0].LTM1[i].Col20);
                                    tsgst = tsgst + sgen.Make_decimal(model[0].LTM1[i].Col22);
                                }
                                model[0].Col37 = (bamt + tamt).ToString();
                                model[0].Col38 = (bigst + tigst).ToString();
                                model[0].Col39 = (bcgst + tcgst).ToString();
                                model[0].Col40 = (bsgst + tsgst).ToString();
                                model[0].Col62 = (bamt + tamt + bigst + tigst + bcgst + tcgst + bsgst + tsgst).ToString();//netamt
                            }
                            break;
                    }
                    break;
                    #endregion
            }
            ModelState.Clear();
            return model;
        }
        #endregion
        //=========makequery============
        #region make query
        public void Make_query(string viewname, string title, string btnval, string seektype, string param1, string param2, string Myguid)
        {
            FillMst(Myguid);
            sgen.SetSession(MyGuid, "btnval", btnval);
            String URL = "";
            try
            {
                URL = sgen.GetSession(MyGuid, "SSEEKVAL").ToString();
            }
            catch (Exception err) { }
            string cmd = "";
            List<string> values = new List<string>();
            switch (viewname.ToLower())
            {
                #region billing_master
                case "billing_master":
                    if (sgen.GetSession(MyGuid, "tr_type") != null)
                    {
                        trtype = sgen.GetSession(MyGuid, "tr_type").ToString();
                        switch (btnval)
                        {
                            //case "EDIT":
                            case "VIEW":
                                //case "EXT":
                                //if (Session["TR_MID"].ToString().Trim().Equals("21001.2") || Session["TR_MID"].ToString().Trim().Equals("17001.2") || Session["TR_MID"].ToString().Trim().Equals("28004.6") || Session["TR_MID"].ToString().Trim().Equals("41005.6"))
                                //{
                                cmd = @"SELECT (a.master_id||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.master_id DocNo," +
                               "a.master_name HSNO,a.content as Description,a.group_name as GST_Rate,a.client_name Cess,GROUP_ID BCD_Rate,QUALIFICATION_TYPE Social_Welf_Scharge," +
                               "SECTIONTYPE as Anti_dumping,GROUP_REFRENCE_NUMBER as Safeguard_Duty,a.heading Tcs_gst,a.col1 Tcs_it, a.date_of_issue Default_Code, a.client_unit_id Unit_id from master_setting a " +
                               "where a.type in ('" + trtype + "','DD" + trtype + "' ) order by a.master_name ";
                                //                                }
                                //                                else
                                //                                {
                                //                                    cmd = @"SELECT (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,
                                //a.master_name,a.content as Description,(CASE when a.status = 'Y' THEN 'Active'  when a.status = '' THEN 'Active' when a.status = 'N' THEN 'Inactive' end) as Status,(b.First_name|| ' '|| b.middle_name|| ' '|| b.last_name) as Ent_By," +
                                //"to_char(convert_tz(a.master_EntDate, 'UTC', '" + sgen.Gettimezone() + "'), " + "'" + sgen.Getsqldateformat() + "') as Ent_Date " +
                                //"from master_setting a inner join user_details b on a.master_entby = lpad(b.rec_id, 6, '0')  and b.type = 'CPR' and a.client_id='"
                                //+ clientid_mst + "' and a.client_unit_id='" + unitid_mst + "' where a.type in ('" + trtype + "','DD" + trtype + "')  order by a.master_name ";
                                //                                }
                                break;
                            case "EDIT":
                                cmd = @"SELECT (a.master_id||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.master_id DocNo," +
                                  "a.master_name HSNO,a.content as Description,a.group_name as GST_Rate,a.client_name Cess,GROUP_ID BCD_Rate,QUALIFICATION_TYPE Social_Welf_Scharge," +
                                  "SECTIONTYPE as Anti_dumping,GROUP_REFRENCE_NUMBER as Safeguard_Duty,a.heading Tcs_gst,a.col1 Tcs_it,(CASE when a.status = 'Y' " +
                                  "THEN 'Active'  when a.status = '' THEN 'Active' else 'Inactive' end) as Status,a.date_of_issue Default_Code," +
                                  "a.client_unit_id Unit_id,(b.First_name|| ' '|| replace(b.middle_name,'0','')|| ' '|| replace(b.last_name,'0','')) as Ent_By," +
                                  "to_char(convert_tz(a.master_EntDate, 'UTC', '" + sgen.Gettimezone() + "'), " + "'" + sgen.Getsqldateformat() + "') as Ent_Date " +
                                  "from master_setting a left join user_details b on a.master_entby = b.vch_num and b.type = 'CPR' " +
                                  "where a.type in ('" + trtype + "','DD" + trtype + "' ) " +
                                  "and find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 order by a.master_name ";
                                break;
                            case "EXT":
                                cmd = @"SELECT (a.master_id||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.master_id DocNo," +
                                  "a.master_name HSNO,a.content as Description,a.group_name as GST_Rate,a.client_name as Cess,GROUP_ID as BCD_Rate,QUALIFICATION_TYPE as Social_Welf_Scharge,SECTIONTYPE as Anti_dumping,GROUP_REFRENCE_NUMBER as Safeguard_Duty,(CASE when a.status = 'Y' " +
                                  "THEN 'Active'  when a.status = '' THEN 'Active' else 'Inactive' end) as Status," +
                                  "a.client_unit_id Unit_id,(b.First_name|| ' '|| replace(b.middle_name,'0','')|| ' '|| replace(b.last_name,'0','')) as Ent_By," +
                                  "to_char(convert_tz(a.master_EntDate, 'UTC', '" + sgen.Gettimezone() + "'), " + "'" + sgen.Getsqldateformat() + "') as Ent_Date " +
                                  "from master_setting a left join user_details b on a.master_entby = b.vch_num and b.type = 'CPR' " +
                                  "where a.type in ('" + trtype + "','DD" + trtype + "' ) " +
                                  "and find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 and a.date_of_issue<>'Y' order by a.master_name ";
                                break;
                            case "UNIT":
                                cmd = "select (cup_id||company_profile_id||to_char(vch_date,'yyyymmdd')) fstr,company_profile_id Company_d,(unit_name||' ('||cup_id||')') " +
                                  "Unit_Name from company_unit_profile where unit_status='1' and cup_id<>'" + unitid_mst + "' order by unit_name asc";
                                break;
                        }
                    }
                    break;
                #endregion
                #region itemservice
                case "itemservice":
                    string condition = "", cond = "";
                    switch (btnval.ToUpper())

                    {
                        case "EDIT":
                        case "COPYITEM":
                        case "DEACT":
                        case "EXT":
                            cond = "fstr,MAIN_GRP,ITEM_GRP";

                            if (sgen.GetSession(MyGuid, "tmp_items") != null)
                            {
                                mq = @"select '-' as fstr,'' ITEM_SUB_GROUP,a.icode as ITEM_CODE,a.iname as ITEM_NAME,
                                     a.item_alias ITEM_ALIAS_NAME,'-' as HSN_SAC_NO,a.rate RATE,a.pksize PACKING_SIZE,a.mstpck_size MASTER_PACKING_SIZE,
                                     '' TAX_RATE,a.ltol LOWER_TOLERANCE,a.utol as UPPER_TOLERANCE,'' as PRIMARY_UNIT,'' as SECONDARY_UNIT,
                                     '' as PACKING_TYPE,a.cuom as CONVERSION_UNIT,a.cpartno PART_NO,a.partname PART_NAME,a.minstk MIN_STOCK_LEVEL,a.maxstk MAX_STOCK_LEVEL,
                                     a.reorder REORDER_LEVEL,a.critlvl SAFETY_LEVEL,a.length LENGTH,a.height HEIGHT,a.width WIDTH,a.weight NET_WEIGHT,
                                     a.thick THICKNESS,a.gweight GROSS_WEIGHT,a.slife as TOTAL_SELF_LIFE,a.mslife MIN_REM_SELF_LIFE,a.lqty as LOT_QTY,
                                     a.lweight as LOT_WEIGHT,a.bqty as BIN_QTY,a.bweight BIN_WEIGHT,nvl(a.nonstk,'-') as NON_STOCK,nvl(a.qa,'-') as QUALITY,
                                     '' as ITEM_LOCATION,a.description REMARKS,PDI,nvl(a.dbuy, '-') as DIRECT_BUY,nvl(a.sname,'-') as SALE_NAME,nvl(a.pname,'-') as PURCHASE_NAME from item a 
                                     WHERE 1=2";
                                DataTable dtmain = sgen.getdata(userCode, mq);
                                DataTable dtdaily = (DataTable)sgen.GetSession(MyGuid, "tmp_items");
                                dtdaily = sgen.seekval_dt(dtdaily, "param2='Y'");
                                string[] param3 = dtdaily.AsEnumerable().Select(r => r.Field<string>("Param3")).ToArray();
                                if (param3.Length > 0)
                                {
                                    foreach (DataColumn col in dtmain.Columns)
                                    {
                                        string colname = col.ToString();
                                        for (Int32 i = 0; i < param3.Length; i++)
                                        {
                                            string ctrcol = param3[i].ToString();
                                            if (ctrcol.Contains('.'))
                                            {
                                                ctrcol = ctrcol.Replace('.', ' ');
                                            }
                                            if (ctrcol.Contains(' '))
                                            {
                                                ctrcol = ctrcol.TrimEnd().Replace(' ', '_');
                                            }
                                            if (ctrcol.Contains('/'))
                                            {
                                                ctrcol = ctrcol.TrimEnd().Replace('/', '_');
                                            }
                                            if ((colname == ctrcol) && (!cond.Contains(colname)))
                                            {
                                                cond = cond + ',' + ctrcol;
                                            }
                                        }
                                    }
                                }
                            }
                            cond = cond + ",STATUS,SALE,client_unit_id unit_id";
                            cmd = @"select a.icode||a.type as fstr,tg.master_name MAIN_GRP,
mg.master_name ITEM_GRP, sg.iname ITEM_SUB_GROUP, a.icode as ITEM_CODE,a.iname as ITEM_NAME,
nvl(a.item_alias, '-') ITEM_ALIAS_NAME,hsn.master_name as HSN_SAC_NO,a.rate RATE, a.pksize PACKING_SIZE,a.mstpck_size MASTER_PACKING_SIZE, hsn.group_name TAX_RATE
   , a.ltol LOWER_TOLERANCE, a.utol as UPPER_TOLERANCE,u.master_name as PRIMARY_UNIT,nvl(u2.master_name, '-') as
     SECONDARY_UNIT,nvl(pt.master_name, '-') as PACKING_TYPE,a.cuom as CONVERSION_UNIT,a.cpartno PART_NO, a.partname PART_NAME,
       a.minstk MIN_STOCK_LEVEL, a.maxstk MAX_STOCK_LEVEL, a.reorder REORDER_LEVEL,
         a.critlvl SAFETY_LEVEL, a.length LENGTH, a.height HEIGHT, a.width WIDTH, a.weight NET_WEIGHT, a.thick THICKNESS, a.gweight GROSS_WEIGHT
               , a.slife as TOTAL_SELF_LIFE,a.mslife MIN_REM_SELF_LIFE, a.lqty as LOT_QTY,a.lweight as LOT_WEIGHT,a.bqty as BIN_QTY,a.bweight BIN_WEIGHT,
                 (CASE when a.status = 'Y' THEN 'Active'  when a.status = '' THEN 'Active' else 'Inactive' end) as STATUS,
nvl(a.nonstk, '-') as NON_STOCK,nvl(a.qa, '-') as QUALITY,nvl(a.sale, '-') as SALE,nvl(a.pdi, '-') PDI,nvl(a.dbuy, '-') as DIRECT_BUY,nvl(a.sname,'-') as SALE_NAME,nvl(a.pname,'-') as PURCHASE_NAME,
lc.master_name as ITEM_LOCATION,a.description REMARKS,a.client_unit_id from item a 
left join itbal ib on a.icode = ib.icode and a.type = ib.type and find_in_set(ib.client_unit_id,'" + unitid_mst + "')=1 " +
                            "left join master_setting lc on lc.master_id = ib.loc and lc.type = 'LC6' and find_in_set(lc.client_unit_id, ib.client_unit_id)= 1 " +
                            "left join master_setting hsn on hsn.master_id = a.hsno and hsn.type = 'HSN' and find_in_set(hsn.client_unit_id, a.client_unit_id) = 1 " +
                            "left join master_setting u on u.master_id = a.uom and u.type = 'UMM' and find_in_set(u.client_unit_id, a.client_unit_id)= 1 " +
                            "left join master_setting u2 on u2.master_id = a.uom2 and u2.type = 'UMM' and find_in_set(u2.client_unit_id, a.client_unit_id) = 1 " +
                            "left join master_setting pt on pt.master_id = a.pktype and pt.type = 'KPK' and find_in_set(u2.client_unit_id, a.client_unit_id)= 1 " +
                            "left join master_setting mg on mg.master_id = substr(a.icode, 1, 3) and mg.type = 'KIG' and find_in_set(mg.client_unit_id, a.client_unit_id)=1 " +
                            "left join item sg on sg.icode = substr(a.icode, 1, 5) and sg.type = 'SG' and find_in_set(sg.client_unit_id, a.client_unit_id)=1 " +
                            "left join master_setting tg on tg.classid = (case when substr(a.icode,1,2)<>'99' then substr(a.icode,1,1) else substr(a.icode,1,2) end) and tg.type = 'KGP' " +
                            "where a.type in ('IT', 'DDIT') and find_in_set(a.client_unit_id, '" + unitid_mst + "')=1";

                            cmd = "select  " + cond + " from (" + cmd + ")a";
                            break;

                        case "VIEW":
                            cond = "fstr,MAIN_GRP,ITEM_GRP";
                            #region old command
                            //cmd = "select a.client_id||a.client_unit_id||a.icode||a.type as fstr,tg.master_name MainGrp,mg.master_name ItemGrp," +
                            //    "sg.iname ItemSubgrp,a.icode as Item_Code,a.iname as Item_Name,a.description Remark,hsn.master_name as HSN_Code,a.gstrate TaxRate,u.master_name as Primary_Unit,a.cpartno,a.partname PartName," +
                            //    "a.minstk Min_Stock,a.maxstk Max_Stock,a.reorder Reorder_Level,a.critlvl Critical_Level,a.length,a.height,a.width,a.weight,a.thick," +
                            //    "(CASE when a.status = 'Y' THEN 'Active'  when a.status = '' THEN 'Active' when a.status = 'N' THEN 'Inactive' end) as Status,lc.master_name as loc" +
                            //    " from item a " +
                            //    "left join itbal ib on a.icode=ib.icode and a.type=ib.type and a.client_id=ib.client_id and a.client_unit_id=ib.client_unit_id " +
                            //    "left join master_setting lc on lc.master_id=ib.loc and lc.type='LC6' and find_in_set(lc.client_id,ib.client_id)=1 and find_in_set(lc.client_unit_id,ib.client_unit_id)=1 " +
                            //    "left join master_setting hsn on hsn.master_id = a.hsno and hsn.type = 'HSN' and find_in_set(hsn.client_id,a.client_id)=1 and find_in_set(hsn.client_unit_id,a.client_unit_id)=1 " +
                            //    "left join master_setting u on u.master_id = a.uom and u.type = 'UMM' and find_in_set(u.client_id,a.client_id)=1 and find_in_set(u.client_unit_id,a.client_unit_id)=1 " +
                            //    "left join master_setting mg on mg.master_id = substr(a.icode, 1, 3) and mg.type = 'KIG' and mg.client_id = a.client_id and mg.client_unit_id = a.client_unit_id " +
                            //    "left join item sg on sg.icode = substr(a.icode, 1, 5) and sg.type = 'SG' and sg.client_id = a.client_id and sg.client_unit_id = a.client_unit_id " +
                            //    "left join master_setting tg on tg.classid=substr(a.icode,1,1) and tg.type='KGP' " +
                            //    "where a.type in ('IT','DDIT') and a.client_id = '" + clientid_mst + "' and a.client_unit_id = '" + unitid_mst + "'";
                            //KC
                            //cmd = "select (a.icode||a.type) fstr,a.client_unit_id Extend_Unit,a.dunit Deactive_unit,tg.master_name MainGrp,mg.master_name ItemGrp,sg.iname ItemSubgrp," +
                            //    "a.icode Item_Code,a.iname as Item_Name,nvl(a.item_alias,'-') item_alias,hsn.master_name as HSN_Code,a.rate,a.pksize,a.mstpck_size," +
                            //    "a.gstrate TaxRate,a.ltol lowe_tol,a.utol as upper_tol,u.master_name as Primary_Unit,nvl(u2.master_name,'-') as Secondary_unit," +
                            //    "nvl(pt.master_name,'-') as pck_type,a.cuom as convrsn_unit,a.cpartno,a.partname PartName,a.minstk Min_Stock,a.maxstk Max_Stock," +
                            //    "a.reorder Reorder_Level,a.critlvl Critical_Level,a.length,a.height,a.width,a.weight,a.thick,a.gweight gross_weight,a.slife ttl_self_life," +
                            //    "a.mslife rem_self_life,a.lqty as lot_qty,a.lweight as lot_weight,a.bqty as bin_qty,a.bweight bin_weight," +
                            //    "(CASE when a.status = 'Y' THEN 'Active'  when a.status = '' THEN 'Active' when a.status = 'N' THEN 'Inactive' end) as Status," +
                            //    "nvl(a.nonstk,'-') as nonstk,nvl(a.qa,'-') as quality,nvl(a.sale,'-') as saleable,nvl(a.pdi,'-') pdi,nvl(a.dbuy,'-') as direct_buy," +
                            //    "lc.master_name as loc,a.description Remark from item a " +
                            //    "inner join itbal ib on a.icode=ib.icode and a.type=ib.type and ib.client_id='"+clientid_mst+"' and ib.client_unit_id='"+unitid_mst+"' " +
                            //    "inner join master_setting lc on lc.master_id=ib.loc and lc.type='LC6' and find_in_set(lc.client_id,ib.client_id)=1 and find_in_set(lc.client_unit_id,ib.client_unit_id)=1 " +
                            //    "left join master_setting hsn on hsn.master_id = a.hsno and hsn.type = 'HSN' and find_in_set(hsn.client_id,a.client_id)=1 and find_in_set(hsn.client_unit_id,a.client_unit_id)=1 " +
                            //    "left join master_setting u on u.master_id = a.uom and u.type = 'UMM' and find_in_set(u.client_id,a.client_id)=1 and find_in_set(u.client_unit_id,a.client_unit_id)=1 " +
                            //    "left join master_setting u2 on u2.master_id = a.uom2 and u2.type = 'UMM' and find_in_set(u2.client_id,a.client_id)=1 and find_in_set(u2.client_unit_id,a.client_unit_id)=1 l" +
                            //    "left join master_setting pt on pt.master_id = a.pktype and pt.type = 'KPK' and find_in_set(pt.client_id,a.client_id)=1 and find_in_set(u2.client_unit_id,a.client_unit_id)=1 " +
                            //    "inner join master_setting mg on mg.master_id = substr(a.icode, 1, 3) and mg.type = 'KIG' and mg.client_id = a.client_id and mg.client_unit_id = a.client_unit_id " +
                            //    "inner join item sg on sg.icode = substr(a.icode, 1, 5) and sg.type = 'SG' and sg.client_id = a.client_id and sg.client_unit_id = a.client_unit_id " +
                            //    "inner join master_setting tg on tg.classid=substr(a.icode,1,1) and tg.type='KGP' " +
                            //    "where a.type in ('IT','DDIT') and find_in_set(a.client_id,'" + clientid_mst + "')=1 and find_in_set(a.client_unit_id,'" + unitid_mst + "')=1";
                            #endregion
                            if (sgen.GetSession(MyGuid, "tmp_items") != null)
                            {
                                mq = @"select '-' as fstr,'' ITEM_SUB_GROUP,a.icode as ITEM_CODE,a.iname as ITEM_NAME,
                                     a.item_alias ITEM_ALIAS_NAME,'-' as HSN_SAC_NO,a.rate RATE,a.pksize PACKING_SIZE,a.mstpck_size MASTER_PACKING_SIZE,
                                     '' TAX_RATE,a.ltol LOWER_TOLERANCE,a.utol as UPPER_TOLERANCE,'' as PRIMARY_UNIT,'' as SECONDARY_UNIT,
                                     '' as PACKING_TYPE,a.cuom as CONVERSION_UNIT,a.cpartno PART_NO,a.partname PART_NAME,a.minstk MIN_STOCK_LEVEL,a.maxstk MAX_STOCK_LEVEL,
                                     a.reorder REORDER_LEVEL,a.critlvl SAFETY_LEVEL,a.length LENGTH,a.height HEIGHT,a.width WIDTH,a.weight NET_WEIGHT,
                                     a.thick THICKNESS,a.gweight GROSS_WEIGHT,a.slife as TOTAL_SELF_LIFE,a.mslife MIN_REM_SELF_LIFE,a.lqty as LOT_QTY,
                                     a.lweight as LOT_WEIGHT,a.bqty as BIN_QTY,a.bweight BIN_WEIGHT,nvl(a.nonstk,'-') as NON_STOCK,nvl(a.qa,'-') as QUALITY,
                                     '' as ITEM_LOCATION,a.description REMARKS from item a 
                                     WHERE 1=2";
                                DataTable dtmain = sgen.getdata(userCode, mq);
                                DataTable dtdaily = (DataTable)sgen.GetSession(MyGuid, "tmp_items");
                                dtdaily = sgen.seekval_dt(dtdaily, "param2='Y'");
                                string[] param3 = dtdaily.AsEnumerable().Select(r => r.Field<string>("Param3")).ToArray();
                                if (param3.Length > 0)
                                {
                                    foreach (DataColumn col in dtmain.Columns)
                                    {
                                        string colname = col.ToString();
                                        for (Int32 i = 0; i < param3.Length; i++)
                                        {
                                            string ctrcol = param3[i].ToString();
                                            if (ctrcol.Contains('.'))
                                            {
                                                ctrcol = ctrcol.Replace('.', ' ');
                                            }
                                            if (ctrcol.Contains(' '))
                                            {
                                                ctrcol = ctrcol.TrimEnd().Replace(' ', '_');
                                            }
                                            if (ctrcol.Contains('/'))
                                            {
                                                ctrcol = ctrcol.TrimEnd().Replace('/', '_');
                                            }
                                            if ((colname == ctrcol) && (!cond.Contains(colname)))
                                            {
                                                cond = cond + ',' + ctrcol;
                                            }
                                        }
                                    }
                                }
                            }
                            cond = cond + ",STATUS,SALE,PDI,DIRECT_BUY,client_unit_id unit_id";
                            cmd = @"select a.icode||a.type as fstr,tg.master_name MAIN_GRP,
mg.master_name ITEM_GRP, sg.iname ITEM_SUB_GROUP, a.icode as ITEM_CODE,a.iname as ITEM_NAME,
nvl(a.item_alias, '-') ITEM_ALIAS_NAME,hsn.master_name as HSN_SAC_NO,a.rate RATE, a.pksize PACKING_SIZE,a.mstpck_size MASTER_PACKING_SIZE, hsn.group_name TAX_RATE
   , a.ltol LOWER_TOLERANCE, a.utol as UPPER_TOLERANCE,u.master_name as PRIMARY_UNIT,nvl(u2.master_name, '-') as
     SECONDARY_UNIT,nvl(pt.master_name, '-') as PACKING_TYPE,a.cuom as CONVERSION_UNIT,a.cpartno PART_NO, a.partname PART_NAME,
       a.minstk MIN_STOCK_LEVEL, a.maxstk MAX_STOCK_LEVEL, a.reorder REORDER_LEVEL,
         a.critlvl SAFETY_LEVEL, a.length LENGTH, a.height HEIGHT, a.width WIDTH, a.weight NET_WEIGHT, a.thick THICKNESS, a.gweight GROSS_WEIGHT
               , a.slife as TOTAL_SELF_LIFE,a.mslife MIN_REM_SELF_LIFE, a.lqty as LOT_QTY,a.lweight as LOT_WEIGHT,a.bqty as BIN_QTY,a.bweight BIN_WEIGHT,
                 (CASE when a.status = 'Y' THEN 'Active'  when a.status = '' THEN 'Active' else 'Inactive' end) as STATUS,
nvl(a.nonstk, '-') as NON_STOCK,nvl(a.qa, '-') as QUALITY,nvl(a.sale, '-') as SALE,nvl(a.pdi, '-') PDI,nvl(a.dbuy, '-') as DIRECT_BUY,
lc.master_name as ITEM_LOCATION,a.description REMARKS,a.client_unit_id from item a 
left join itbal ib on a.icode = ib.icode and a.type = ib.type and find_in_set(ib.client_unit_id,'" + unitid_mst + "')=1 " +
                            "left join master_setting lc on lc.master_id = ib.loc and lc.type = 'LC6' and find_in_set(lc.client_unit_id, ib.client_unit_id)= 1 " +
                            "left join master_setting hsn on hsn.master_id = a.hsno and hsn.type = 'HSN' and find_in_set(hsn.client_unit_id, a.client_unit_id) = 1 " +
                            "left join master_setting u on u.master_id = a.uom and u.type = 'UMM' and find_in_set(u.client_unit_id, a.client_unit_id)= 1 " +
                            "left join master_setting u2 on u2.master_id = a.uom2 and u2.type = 'UMM' and find_in_set(u2.client_unit_id, a.client_unit_id) = 1 " +
                            "left join master_setting pt on pt.master_id = a.pktype and pt.type = 'KPK' and find_in_set(u2.client_unit_id, a.client_unit_id)= 1 " +
                            "left join master_setting mg on mg.master_id = substr(a.icode, 1, 3) and mg.type = 'KIG' and find_in_set(mg.client_unit_id, a.client_unit_id)=1 " +
                            "left join item sg on sg.icode = substr(a.icode, 1, 5) and sg.type = 'SG' and find_in_set(sg.client_unit_id, a.client_unit_id)=1 " +
                            "left join master_setting tg on tg.classid = (case when substr(a.icode,1,2)<>'99' then substr(a.icode,1,1) else substr(a.icode,1,2) end) and tg.type = 'KGP' " +
                            "where a.type in ('IT', 'DDIT') and find_in_set(a.client_unit_id, '" + unitid_mst + "')=1";
                            //                            cmd = @"select a.icode||a.type as fstr,tg.master_name MAIN_GRP,
                            //mg.master_name ITEM_GRP, sg.iname ITEM_SUB_GROUP, a.icode as ITEM_CODE,a.iname as ITEM_NAME,
                            //nvl(a.item_alias, '-') ITEM_ALIAS_NAME,hsn.master_name as HSN_SAC_NO,a.rate RATE, a.pksize PACKING_SIZE,a.mstpck_size MASTER_PACKING_SIZE, hsn.group_name TAX_RATE
                            //   , a.ltol LOWER_TOLERANCE, a.utol as UPPER_TOLERANCE,u.master_name as PRIMARY_UNIT,nvl(u2.master_name, '-') as
                            //     SECONDARY_UNIT,nvl(pt.master_name, '-') as PACKING_TYPE,a.cuom as CONVERSION_UNIT,a.cpartno PART_NO, a.partname PART_NAME,
                            //       a.minstk MIN_STOCK_LEVEL, a.maxstk MAX_STOCK_LEVEL, a.reorder REORDER_LEVEL,
                            //         a.critlvl SAFETY_LEVEL, a.length LENGTH, a.height HEIGHT, a.width WIDTH, a.weight NET_WEIGHT, a.thick THICKNESS, a.gweight GROSS_WEIGHT
                            //               , a.slife as TOTAL_SELF_LIFE,a.mslife MIN_REM_SELF_LIFE, a.lqty as LOT_QTY,a.lweight as LOT_WEIGHT,a.bqty as BIN_QTY,a.bweight BIN_WEIGHT,
                            //                 (CASE when a.status = 'Y' THEN 'Active'  when a.status = '' THEN 'Active' when a.status = 'N' THEN 'Inactive' end) as STATUS,
                            //nvl(a.nonstk, '-') as NON_STOCK,nvl(a.qa, '-') as QUALITY,nvl(a.sale, '-') as SALE,nvl(a.pdi, '-') PDI,nvl(a.dbuy, '-') as DIRECT_BUY,
                            //lc.master_name as ITEM_LOCATION,a.description REMARKS,a.client_id,a.client_unit_id from item a 
                            //left join itbal ib on a.icode = ib.icode and a.type = ib.type and ib.client_id='" + clientid_mst + "' and ib.client_unit_id='" + unitid_mst + "' " +
                            //                            "left join master_setting lc on lc.master_id = ib.loc and lc.type = 'LC6' and find_in_set(lc.client_id, ib.client_id)= 1 and find_in_set(lc.client_unit_id, ib.client_unit_id)= 1 " +
                            //                            "left join master_setting hsn on hsn.master_id = a.hsno and hsn.type = 'HSN' and find_in_set(hsn.client_id, a.client_id)= 1 and find_in_set(hsn.client_unit_id, a.client_unit_id) = 1 " +
                            //                            "left join master_setting u on u.master_id = a.uom and u.type = 'UMM' and find_in_set(u.client_id, a.client_id)= 1 and find_in_set(u.client_unit_id, a.client_unit_id)= 1 " +
                            //                            "left join master_setting u2 on u2.master_id = a.uom2 and u2.type = 'UMM' and find_in_set(u2.client_id, a.client_id)= 1 and find_in_set(u2.client_unit_id, a.client_unit_id) = 1 " +
                            //                            "left join master_setting pt on pt.master_id = a.pktype and pt.type = 'KPK' and find_in_set(pt.client_id, a.client_id)= 1 and find_in_set(u2.client_unit_id, a.client_unit_id)= 1 " +
                            //                            "left join master_setting mg on mg.master_id = substr(a.icode, 1, 3) and mg.type = 'KIG' and mg.client_id = a.client_id and mg.client_unit_id = a.client_unit_id " +
                            //                            "left join item sg on sg.icode = substr(a.icode, 1, 5) and sg.type = 'SG' and sg.client_id = a.client_id and sg.client_unit_id = a.client_unit_id " +
                            //                            "left join master_setting tg on tg.classid = (case when substr(a.icode,1,2)<>'99' then substr(a.icode,1,1) else substr(a.icode,1,2) end) and tg.type = 'KGP' " +
                            //                            "where a.type in ('IT', 'DDIT') and a.client_id = '" + clientid_mst + "' and a.client_unit_id = '" + unitid_mst + "'";

                            cmd = "select  " + cond + " from (" + cmd + ")a";
                            break;
                        case "SUBGRP":
                            cmd = "select sg.icode||to_char(sg.vch_date,'yyyymmdd')||sg.type as fstr,(case when substr(sg.icode,1,2)<>'99' then substr(sg.icode,1,1) else substr(sg.icode,1,2) end) Main_Grp_id," +
                                "substr(sg.icode,1,3) Item_grp_id,gp.master_name Item_Grp,sg.icode Item_sgrp_id," +
                                "sg.iname Item_subgrp from item sg " +
                                "inner join master_setting gp on gp.master_id=substr(sg.icode,1,3) and gp.type='KIG' and find_in_set(gp.client_unit_id,'" + unitid_mst + "')=1 " +
                                "where sg.type='SG' and find_in_set(sg.client_unit_id,'" + unitid_mst + "')=1";
                            break;
                        case "UNIT":
                            cmd = "select (cup_id||company_profile_id||to_char(vch_date,'yyyymmdd')) fstr,company_profile_id Company_id,(unit_name||' ('||cup_id||')') " +
                                "Unit_Name from company_unit_profile where unit_status='1' and cup_id<>'" + unitid_mst + "' order by unit_name asc";
                            break;
                    }
                    break;
                #endregion
                #region itemsubgrp
                case "itemsubgrp":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                            cmd = "select a.icode|| to_char(a.vch_date,'yyyymmdd')||a.type as fstr,g.master_name as Item_group,a.icode Sub_grp_Code," +
                                "a.iname as Sub_Grp_Name,(CASE when a.status = 'Y' THEN 'Active'  when a.status = '' THEN 'Active' else 'Inactive' end) Status ,a.client_unit_id unit_id from item a " +
                                "inner join master_setting g on g.master_id = substr(a.icode, 1, 3) and g.type = 'KIG' and find_in_set(g.client_unit_id, a.client_unit_id)=1 " +
                                "where a.type in ('SG','DDSG') and find_in_set(a.client_unit_id, '" + unitid_mst + "')=1";
                            break;
                        case "VIEW":
                            cmd = "select a.icode|| to_char(a.vch_date,'yyyymmdd')||a.type as fstr,g.master_name as Item_group,a.icode Sub_grp_Code," +
    "a.iname as Sub_Grp_Name,(CASE when a.status = 'Y' THEN 'Active'  when a.status = '' THEN 'Active' else 'Inactive' end) Status,a.client_unit_id unit_id from item a " +
    "inner join master_setting g on g.master_id = substr(a.icode, 1, 3) and g.type = 'KIG' and find_in_set(g.client_unit_id, a.client_unit_id)=1 " +
    "where a.type in ('SG','DDSG')";
                            break;
                        case "EXT":
                            cmd = "select a.icode|| to_char(a.vch_date,'yyyymmdd')||a.type as fstr,g.master_name as Item_group,a.icode Sub_grp_Code," +
                                 "a.iname as Sub_Grp_Name,(CASE when a.status = 'Y' THEN 'Active'  when a.status = '' THEN 'Active' else 'Inactive' end) Status from item a " +
                                 "inner join master_setting g on g.master_id = substr(a.icode, 1, 3) and g.type = 'KIG' and find_in_set(g.client_unit_id, a.client_unit_id)=1 " +
                                 "where a.type in ('SG','DDSG') and find_in_set(a.client_unit_id, '" + unitid_mst + "')=1";
                            break;
                        case "UNIT":
                            cmd = "select (cup_id||company_profile_id||to_char(vch_date,'yyyymmdd')) fstr,company_profile_id Company_d,(unit_name||' ('||cup_id||')') " +
                              "Unit_Name from company_unit_profile where unit_status='1' order by unit_name asc";
                            break;
                    }
                    break;
                #endregion
                #region Invoice
                case "invoice":

                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "PRINT":
                        case "PRINTPKL":
                        case "DEL":
                            cmd = "select distinct (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) as fstr,p.vch_num Invoice_Number," +
                                "to_char(convert_tz(p.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') Invoice_Date," +
                                "c.c_name as Party_Name,c.c_gstin as Party_Gstin,c.addr as Party_Address from itransaction p " +
                                "inner join clients_mst c on p.acode = c.vch_num and find_in_set(c.client_unit_id,p.client_unit_id)=1 and c.type = 'BCD' and substr(c.vch_num,0,3)='303' " +
                                "where p.client_unit_id = '" + unitid_mst + "' and SUBSTR(p.type, 1, 1) = '4' and SUBSTR(p.potype, 1, 1)='5' and to_date(to_char(p.vch_DATE,'ddMMyyyy'),'ddMMyyyy') between to_date('" + year_from + "','" + sgen.Getsqldatetimeformat() + "') and to_date('" + year_to + "','" + sgen.Getsqldatetimeformat() + "') order by p.vch_num desc";
                            break;
                        case "VIEW":
                            cmd = "select (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) as fstr,p.vch_num Invoice_Number,to_char(convert_tz(p.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') Invoice_Date,tp.master_name as inv_type,p.icode,p.iname,p.HSNO,p.qtyout as inv_qty," +
                                "ai.master_name as Against,c.c_name as Party_Name,c.c_gstin as Party_Gstin,c.addr as Party_Address,p.discrate,p.iamount, nvl(sf.c_name, '-') as From_Name,nvl(sf.c_gstin, '-') as From_Gstin,nvl(sf.addr, '-') FromAddress,nvl(st.c_name, '-') as To_Name,nvl(st.c_gstin, '-') as To_Gstin,nvl(st.addr, '-') ToAddress," +
                                "p.gothrchrg po_no, p.gserchrg IGST, p.gloadchrg SGST, p.gamc CGST , p.basicamt BasicAmt, p.ginstlchrg GrossAmt, p.netamt net_amount" +
                                ",p.ewayno from itransaction p inner join clients_mst c on p.acode = c.vch_num and find_in_set(c.client_unit_id,p.client_unit_id)=1 and c.type = 'BCD' and substr(c.vch_num,0,3)='303' left join clients_mst sf on p.shipfrom = sf.vch_num and" +
                                " find_in_set(sf.client_unit_id, p.client_unit_id)=1 and sf.type = 'BCD' and substr(sf.vch_num,0,3)='303' left join clients_mst st on p.shipto = st.vch_num and find_in_set(st.client_unit_id, p.client_unit_id)=1 and st.type = 'BCD' and substr(st.vch_num,0,3)='303'" +
                                " inner join master_setting ai on ai.master_id=p.potype and ai.type='KIV' and substr(ai.master_id,1,1)='5' and find_in_set(ai.client_unit_id,p.client_unit_id)=1 inner join master_setting tp on tp.master_id=p.type and tp.type='KPO' and substr(tp.master_id,1,1)='4' and find_in_set(tp.client_unit_id,p.client_unit_id)=1 where p.client_unit_id = '" + unitid_mst + "' and SUBSTR(p.type, 1, 1) = '4' and SUBSTR(p.potype, 1, 1)='5' and to_date(to_char(p.vch_DATE,'ddMMyyyy'),'ddMMyyyy') between to_date('" + year_from + "','" + sgen.Getsqldatetimeformat() + "') and to_date('" + year_to + "','" + sgen.Getsqldatetimeformat() + "') order by p.vch_num desc";
                            break;
                        case "ORDTYPE":
                            cmd = "select master_id fstr,master_id as Type,master_name Name from master_setting where find_in_set(client_unit_id,'" + unitid_mst + "')=1" +
                                " and type='KPO' and SUBSTR(master_id,1,1)='4'";
                            sgen.SetSession(MyGuid, "BackToBack", "Select Invoive Against!~!NEW!~!1");
                            break;
                        case "NEW":
                            values = new List<string>();
                            values.Add(URL);
                            sgen.SetSession(MyGuid, "Values", values);
                            cmd = "select (master_id||to_char(vch_date,'yyyymmdd')||type) fstr, master_id,master_name from master_setting " +
                             "where type='KIV' and find_in_set(client_unit_id,'" + unitid_mst + "')=1 and status ='Y'";
                            sgen.SetSession(MyGuid, "BackToBack", "Select Party!~!PARTY!~!1");
                            break;
                        case "PARTY":
                            values = (List<string>)sgen.GetSession(MyGuid, "Values");
                            values.Add(URL);
                            sgen.SetSession(MyGuid, "Values", values);
                            switch (values[1].ToString())
                            {
                                case "51": //with sales order
                                    string cond1 = " and p.type='" + values[0].ToString() + "'";
                                    cmd = "select distinct (a.vch_num|| to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.vch_num as Party_code,a.c_name Name,a.addr address," +
                                          "a.c_gstin as GSTIN," +
                                          "(case when a.cpcont='0000000000' then '-' else a.cpcont end) as ContactNo from clients_mst a " +
                                          "inner join purchasesc p on p.acode = a.vch_num and find_in_set(a.client_unit_id, p.client_unit_id)=1 and p.pur_type='NPI' " +
                                          "where find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 and a.type='BCD' " + cond1 + " and substr(a.vch_num,0,3)='303' ";
                                    break;
                                case "52": //with Dispatch Schedule
                                    cond1 = " and  dsc.type='" + values[0].ToString() + "'";
                                    cmd = "select distinct (a.vch_num|| to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.vch_num as Party_code,a.c_name Name,a.addr address," +
                                          "a.c_gstin as GSTIN," +
                                          "(case when a.cpcont='0000000000' then '-' else a.cpcont end) as ContactNo from clients_mst a " +
                                          "inner join kc_tab dsc on dsc.col1 = a.vch_num and substr(dsc.type,1,1) = '4' and dsc.col20='DSC' and find_in_set(dsc.client_unit_id, a.client_unit_id)=1 " +
                                          "where find_in_set(a.client_unit_id, '" + unitid_mst + "')=1 and a.type = 'BCD' " + cond1 + " and substr(a.vch_num,0,3)='303'";
                                    break;
                                case "53":  //with Dispatch Challan
                                    cond1 = " and d.type2='" + values[0].ToString() + "'";
                                    cmd = "select distinct (a.vch_num || to_char(a.vch_date, 'yyyymmdd') || a.type) as fstr,a.vch_num as Party_code,a.c_name as Party_name," +
                                        "a.addr address, a.c_gstin as GSTIN,(case when a.cpcont='0000000000' then '-' else a.cpcont end) ContactNo from clients_mst a " +
                                        "inner join itransaction d on d.acode = a.vch_num and substr(d.type, 1, 1) = '6' and find_in_set(d.client_unit_id, a.client_unit_id)=1 where " +
                                        "find_in_set(a.client_unit_id, '" + unitid_mst + "')=1 and a.type = 'BCD' and substr(a.vch_num,0,3)='303' " + cond1 + "";
                                    break;
                                case "54": //Without So / Direct Invoice
                                    cmd = "select (a.vch_num|| to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.vch_num as Party_code,a.c_name as Party_name,a.addr address,a.c_gstin as GSTIN," +
                              "a.type_desc as Search_text,(case when a.cpcont='0000000000' then '-' else a.cpcont end) ContactNo " +
                              "from clients_mst a where find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 AND a.type='BCD' and substr(a.vch_num,0,3)='303'";
                                    break;
                                case "55": //with performa invoice
                                    cmd = "select distinct (a.vch_num|| to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.vch_num as Party_code,a.c_name as Party_name" +
                                        ",a.addr address,a.c_gstin as GSTIN,a.type_desc as Search_text," +
                                        "(case when a.cpcont='0000000000' then '-' else a.cpcont end) ContactNo " +
                                        "from clients_mst a inner join itransactionc pi on pi.acode = a.vch_num and substr(pi.type, 1, 1) = '4' " +
                                        "and pi.pur_type = 'BPI' and find_in_set(pi.client_unit_id, a.client_unit_id)=1 where " +
                                        "find_in_set(a.client_unit_id, '" + unitid_mst + "')=1 and a.type = 'BCD' and substr(a.vch_num,0,3)='303'";
                                    break;
                                default:  //others
                                    cmd = "select (a.vch_num|| to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.vch_num as Party_code,a.c_name as Party_name,a.addr address,a.c_gstin as GSTIN," +
                                         "a.type_desc as Search_text,(case when a.cpcont='0000000000' then '-' else a.cpcont end) ContactNo " +
                                         "from clients_mst a where find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 AND a.type='BCD' and substr(a.vch_num,0,3)='303'";
                                    break;
                            }
                            sgen.SetSession(MyGuid, "BackToBack", "");
                            break;
                        case "GETSO":
                            values = new List<string>();
                            values = (List<string>)sgen.GetSession(MyGuid, "Values");
                            //values.Add(URL);
                            //sgen.SetSession(MyGuid, "Values", values);
                            //sgen.SetSession(MyGuid, "BackToBack", "Select Items!~!ITEM!~!2");
                            if (values[1].ToString() == "51") //with so
                            {
                                string cond1 = " and (c.vch_num|| to_char(c.vch_date,'yyyymmdd')||c.type) = '" + values[2].ToString() + "'";
                                cmd = "select distinct (a.client_id||a.client_unit_id||a.vch_num||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr, a.vch_num as so_no," +
                                    "a.type,c.c_name as Party_Name from purchasesc a inner join clients_mst c on a.acode = c.vch_num " +
                                    "and c.type = 'BCD' and find_in_set(c.client_unit_id, a.client_unit_id)=1 and substr(c.vch_num,0,3)='303' " +
                                    "" + cond1 + " where a.client_unit_id = '" + unitid_mst + "' and a.type = '" + values[0].ToString() + "' and a.pur_type = 'NPI' and a.indno = 'fix' and " +
                                    "(a.vch_num|| a.icode || a.type) not in (select col4 || col5 || type from kc_tab kt where " +
                                    "kt.client_unit_id = '" + unitid_mst + "' and substr(kt.type,1,1)='4' and kt.col20 = 'DSC') ";
                            }
                            if (values[1].ToString() == "52")  //with schedule
                            {
                                string cond1 = "  and (a.vch_num|| to_char(a.vch_date,'yyyymmdd')||a.type) = '" + values[2].ToString() + "' " +
                                    "and dsc.type='" + values[0].ToString() + "'";
                                cmd = "select distinct (dsc.client_id||dsc.client_unit_id||dsc.vch_num||to_char(dsc.date1,'yyyymmdd')||dsc.type) as fstr," +
                                    "dsc.vch_num as shedule_no,dsc.col13 as so_no,dsc.col11 as po_no,to_char(dsc.date1, '" + sgen.Getsqldateformat() + "') as sdl_date," +
                                    "to_char(dsc.date6, '" + sgen.Getsqldateformat() + "') as " +
                                    "so_date,to_char(dsc.date5, '" + sgen.Getsqldateformat() + "') as po_date," +
                                    "a.c_name as Party_Name from kc_tab dsc inner join clients_mst a on dsc.col1 = a.vch_num and a.type = 'BCD' and substr(a.vch_num,0,3)='303' and" +
                                    " find_in_set(dsc.client_unit_id, a.client_unit_id)=1 where dsc.client_unit_id = '" + unitid_mst + "' and dsc.col20='DSC' " + cond1 + "";
                            }
                            if (values[1].ToString() == "53") //with dispatch chl
                            {
                                string cond1 = "  and (cl.vch_num|| to_char(cl.vch_date,'yyyymmdd')||cl.type) = '" + values[2].ToString() + "' and " +
                                    "dc.type2='" + values[0].ToString() + "'";
                                cmd = "select distinct (dc.client_id||dc.client_unit_id||dc.vch_num||to_char(dc.vch_date, 'yyyymmdd')||dc.type) fstr," +
                                    "dc.vch_num as Disp_no,to_char(dc.vch_date, '" + sgen.Getsqldateformat() + "') as disp_date," +
                                    "cl.c_name as Party_Name, (case when dc.type='60' then 'Sales Order' when dc.type='61' then 'Dispatch Schedule' else 'Without SO' end) as Disp_type,dc.tmode as po_no,dc.vehno as so_no, dc.gdisc as sdl_no," +
                                    "to_char(dc.invdate,  '" + sgen.Getsqldateformat() + "') as so_date,to_char(dc.ewaydate, '" + sgen.Getsqldateformat() + "') as sdl_date from itransaction dc inner join clients_mst cl on" +
                                    " cl.vch_num = dc.acode and cl.type = 'BCD' and substr(cl.vch_num,0,3)='303' and find_in_set(cl.client_unit_id, dc.client_unit_id)=1 where " +
                                    "dc.client_unit_id = '" + unitid_mst + "' and dc.type in ('60', '61', '62') " + cond1 + " ";
                            }
                            if (values[1].ToString() == "55")  //with performa invoice
                            {
                                string cond1 = "  and (cl.vch_num|| to_char(cl.vch_date,'yyyymmdd')||cl.type) = '" + values[2].ToString() + "' and " +
                                    "pi.type='" + values[0].ToString() + "'";
                                cmd = "select distinct (pi.client_id||pi.client_unit_id||pi.vch_num||to_char(pi.vch_date,'yyyymmdd')||pi.type) as fstr,pi.vch_num as PI_NO,to_char(pi.vch_date,'" + sgen.Getsqldateformat() + "') as PI_DATE,cl.c_name as Name,cl.addr address from itransactionc pi" +
                                    " inner join clients_mst cl on cl.vch_num=pi.acode and cl.type='BCD' and substr(cl.vch_num,0,3)='303' " +
                                    "and find_in_set(cl.client_unit_id,'" + unitid_mst + "')=1 where pi.client_unit_id='" + unitid_mst + "' and substr(pi.type,1,1)='4' and pi.pur_type='BPI' " + cond1 + "";
                            }
                            sgen.SetSession(MyGuid, "BackToBack", "");

                            break;
                        case "ITEMS":
                        case "ITEM":
                            values = (List<string>)sgen.GetSession(MyGuid, "Values");
                            if (values == null) values = new List<string>();
                            values.Add(URL);
                            sgen.SetSession(MyGuid, "Values", values);
                            sgen.SetSession(MyGuid, "BackToBack", "");
                            where = "";
                            if (values[1].ToString() == "53")  //with dispatch chl
                            {
                                if (param1 != null)
                                {
                                    if (param1 != "" && param1 != "-")
                                    {
                                        if (param1 != "") where = " and(it.icode || pc.type || pc.dsp_no || to_char(it.vch_date, 'yyyymmdd') || it.type) not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','").Trim().ToString() + "')";
                                    }
                                }
                            }
                            else if (values[1].ToString() == "51")   //with sales order
                            {
                                if (param1 != null)
                                {
                                    if (param1 != "" && param1 != "-")
                                    {
                                        if (param1 != "") where = " and (it.icode||pc.type|| pc.vch_num ||to_char(it.vch_date,'yyyymmdd')||it.type) not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','").Trim().ToString() + "')";
                                    }
                                }
                            }
                            else if (values[1].ToString() == "52")   //with dispatch schedule
                            {
                                if (param1 != null)
                                {
                                    if (param1 != "" && param1 != "-")
                                    {
                                        if (param1 != "") where = " and (it.icode || pc.col20 || pc.sdl_no || to_char(it.vch_date, 'yyyymmdd') || it.type) not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','").Trim().ToString() + "')";
                                    }
                                }
                            }
                            else if (values[1].ToString() == "55")   //with Performa invoice
                            {
                                if (param1 != null)
                                {
                                    if (param1 != "" && param1 != "-")
                                    {
                                        if (param1 != "") where = " and (it.icode||to_char(it.vch_date,'yyyymmdd')||it.type||pc.PI_NO||pc.type) not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','").Trim().ToString() + "')";
                                    }
                                }
                            }
                            else  //others
                            {
                                if (param1 != null)
                                {
                                    if (param1 != "" && param1 != "-")
                                    {
                                        if (param1 != "") where = " and (it.icode||to_char(it.vch_date,'yyyymmdd')||it.type) not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','").Trim().ToString() + "')";
                                    }
                                }
                            }
                            string cond2 = " and (cl.vch_num|| to_char(cl.vch_date,'yyyymmdd')||cl.type) = '" + values[2].ToString() + "'";
                            switch (values[1].ToString())
                            {
                                case "53":  //with dispatch chl
                                    string condi = " and pc.type2='" + values[0].ToString() + "'" +
                                 " and (cl.vch_num|| to_char(cl.vch_date,'yyyymmdd')||cl.type) in ('" + values[2].ToString() + "') " +
                                 " and  (pc.client_id||pc.client_unit_id||pc.dsp_no||to_char(pc.dsp_date, 'yyyymmdd')||pc.type) in ('" + values[3].ToString() + "') ";
                                    cmd = "select distinct (it.icode || pc.type || pc.dsp_no || to_char(it.vch_date, 'yyyymmdd') || it.type) " +
                                        "as fstr,it.icode as icode,it.iname as iname, cl.c_name as Party_Name,pc.dsp_no,pc.po_no,pc.sdl_no,pc.so_no,it.cpartno partno" +
                                        ",pc.type,pc.dsp_qty,pc.bal_qty as bal_qty from item it inner join (select a.dsp_no,a.po_no,a.sdl_no,a.so_no,a.type,a.type2," +
                                        " a.icode,a.acode,a.client_id,a.client_unit_id,a.dsp_date,a.po_date,a.sdl_date,a.so_date,a.dsp_qty, sum(a.inv_qty) as inv_qty" +
                                        ",(a.dsp_qty - nvl(sum(a.inv_qty), '0')) as bal_qty from(select distinct ds.vch_num as dsp_no,ds.type,ds.type2,ds.acode," +
                                        "ds.icode,ds.client_id,ds.client_unit_id,ds.vch_date dsp_date,to_char(ds.chldate, '" + sgen.Getsqldateformat() + "') po_date" +
                                        ",to_char(ds.ewaydate, '" + sgen.Getsqldateformat() + "') sdl_date,to_char(ds.invdate, '" + sgen.Getsqldateformat() + "') so_date,ds.tmode as po_no,ds.gdisc as sdl_no," +
                                        "ds.vehno as so_no,ds.qtyout as dsp_qty,nvl(iv.qtyout,'0') as inv_qty from itransaction ds left join itransaction iv on " +
                                        "iv.dspno = ds.vch_num and substr(iv.type,1,1) = '4' and iv.potype='53' and iv.icode=ds.icode and iv.client_unit_id = " +
                                        "ds.client_unit_id where substr(ds.type,1,1)='6' and substr(ds.type2,1,1)='4' and " +
                                        "ds.client_unit_id = '" + unitid_mst + "' union all  select distinct ds.vch_num as dsp_no,ds.type,ds.type2,ds.acode,ds.icode," +
                                        "ds.client_id,ds.client_unit_id,ds.vch_date dsp_date,to_char(ds.chldate, '" + sgen.Getsqldateformat() + "') po_date," +
                                        "to_char(ds.ewaydate, '" + sgen.Getsqldateformat() + "') sdl_date,to_char(ds.invdate, '" + sgen.Getsqldateformat() + "') so_date,ds.tmode as po_no,ds.gdisc as sdl_no," +
                                        "ds.vehno as so_no,ds.qtyout as dsp_qty,nvl(co.col11, '0') as close_qty from itransaction ds inner join enx_tab co on co.col7 " +
                                        "= ds.icode and ds.vch_num = co.col12 and co.type = 'CPC' and co.client_unit_id = '" + unitid_mst + "' " +
                                        "where substr(ds.type,1,1)='6' and substr(ds.type2,1,1)='4' and " +
                                        "ds.client_unit_id = '" + unitid_mst + "') a group by(a.dsp_no,a.po_no,a.sdl_no,a.so_no,a.type,a.type2, a.icode," +
                                        "a.acode,a.client_id,a.client_unit_id,a.dsp_date, a.po_date,a.sdl_date,a.so_date, a.dsp_qty)) pc on pc.icode = " +
                                        "it.icode inner join clients_mst cl on cl.vch_num = pc.acode and cl.type = 'BCD' and find_in_set(cl.client_unit_id,pc.client_unit_id)=1 where " +
                                        "find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 and it.type='IT' and it.sale='Y' " + condi + "";
                                    break;
                                case "51":  //with sales order
                                    condi = " and pc.type='" + values[0].ToString() + "' and (cl.vch_num|| to_char(cl.vch_date,'yyyymmdd')||cl.type) ='" + values[2].ToString() + "' and " +
                                        "(pc.client_id||pc.client_unit_id||pc.vch_num||to_char(pc.vch_date,'yyyymmdd')||pc.type) in ('" + values[3].ToString() + "')";

                                    #region command with hsn,stock
                                    //cmd = " select (it.icode||pc.type|| pc.vch_num ||to_char(it.vch_date,'yyyymmdd')||it.type) as fstr," +
                                    //    "it.icode as Icode,it.iname as Iname,it.cpartno partno,nvl(hsn.master_name,'-') as hsn,nvl(hsn.group_name,'0') taxrate,um.master_name as UOM,pc.irate as rate,pc.discrate as " +
                                    //    "disc_rate,s.closing as qtystk,pc.so_qty as ord_qty,pc.used_qty,pc.bal_qty Bal_ord_qty, pc.po_no as po_num," +
                                    //    "to_char(pc.date1, '" + sgen.Getsqldateformat() + "') as po_date,to_char(pc.vch_date, '" + sgen.Getsqldateformat() + "') as so_date,pc.vch_num as so_no from item it left join" +
                                    //    " (select icode,client_unit_id,sum(op) op,sum(pktop) pktop,sum(qtyin) qtyin,sum(qtyout) out," +
                                    //  "sum(op)+sum(qtyin)-sum(qtyout) closing from (select icode, client_unit_id, nvl(op_2019, 0) op," +
                                    //  " nvl(pkt_2019, 0) pktop, 0 qtyin, 0 qtyout, 0 pktno from itbal union all select icode, client_unit_id, " +
                                    //  "sum(to_number(qtyin)) - sum(to_number(qtyout)) op, sum((case when substr(type, 1, 1) in ('0', '1') then" +
                                    //  " pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktop,sum(to_number(qtyin)) " +
                                    //  "qtyin,sum(to_number(qtyout)) qtyout,0 pktno from itransaction where trim(store) = 'Y' and " +
                                    //  "to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and " +
                                    //  "to_date('" + year_from.Split(' ')[0].Trim() + "','" + sgen.Getsqldateformat() + "')-1 group by icode,client_unit_id union all select icode,client_unit_id," +
                                    //  "0 as op,0 as pktop,to_number(qtyin) qtyin,to_number(qtyout) qtyout,sum((case when substr(type, 1, 1) in " +
                                    //  "('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktno from " +
                                    //  "itransaction where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between " +
                                    //  "to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and to_date('" + param2.Trim() + "','" + sgen.Getsqldateformat() + "') group by icode,client_unit_id," +
                                    //  "to_number(qtyin),to_number(qtyout)) a group by icode, client_unit_id) s on it.icode " +
                                    //    "= s.icode and it.client_unit_id = s.client_unit_id inner join(select a.po_no, a.vch_num, a.icode, a.acode, a.client_id, a.client_unit_id," +
                                    //    " a.type, a.so_qty, a.vch_date,a.irate, a.discrate, a.date1, nvl(sum(a.invoice_qty),'0') as used_qty,a.so_qty - nvl(sum(a.invoice_qty), '0')" +
                                    //    " as bal_qty from(select pc.vch_num,pc.gothrchrg as po_no, pc.irate, pc.discrate, pc.date1, pc.vch_date, pc.icode, pc.acode, pc.client_id, " +
                                    //    "pc.client_unit_id, pc.type, pc.qtyord as so_qty, iv.qtyout as invoice_qty from purchasesc pc left join itransaction iv on iv.sono = " +
                                    //    "pc.vch_num and iv.potype = '51' and pc.icode = iv.icode and iv.client_unit_id = pc.client_unit_id where " +
                                    //    "pc.pur_type = 'NPI' and substr(pc.type, 1, 1) = '4' and pc.client_unit_id = '" + unitid_mst + "' union all select pc.vch_num," +
                                    //    "pc.gothrchrg as po_no, pc.irate,pc.discrate, pc.date1, pc.vch_date, pc.icode, pc.acode, pc.client_id, pc.client_unit_id, pc.type," +
                                    //    "pc.qtyord as so_qty, dp.qtyout as dsp_qty from purchasesc pc left join itransaction dp on dp.VEHNO = pc.vch_num and dp.type = '60' and " +
                                    //    "pc.icode = dp.icode and dp.client_unit_id = pc.client_unit_id where pc.pur_type = 'NPI' and " +
                                    //    "substr(pc.type, 1, 1) = '4' union all select pc.vch_num,pc.gothrchrg as po_no, pc.irate, pc.discrate, pc.date1, pc.vch_date, pc.icode," +
                                    //    "pc.acode, pc.client_id, pc.client_unit_id, pc.type, pc.qtyord as so_qty, ds.col10 as dsp_qty from purchasesc pc left join kc_tab ds on " +
                                    //    "ds.col13 = pc.vch_num and substr(ds.type,1,1)='4' and ds.col20='DSC' and pc.icode = ds.col5 and ds.client_unit_id = pc.client_unit_id " +
                                    //    "where pc.pur_type = 'NPI' and substr(pc.type, 1, 1) = '4' union all select pc.vch_num,pc.gothrchrg as po_no, pc.irate, pc.discrate," +
                                    //    " pc.date1, pc.vch_date, pc.icode,pc.acode, pc.client_id,pc.client_unit_id, pc.type, pc.qtyord as so_qty,co.col11 as invoice_qty from purchasesc" +
                                    //    " pc left join enx_tab co on co.col7 = pc.icode and pc.vch_num = co.col5 and co.type = 'CPS' and" +
                                    //    " co.client_unit_id = '" + unitid_mst + "' and substr(pc.type, 1, 1) = '4') a group by(a.vch_num, a.icode, a.acode, a.client_id," +
                                    //    " a.client_unit_id, a.type,a.so_qty, a.po_no, a.vch_date, a.date1, a.irate, a.discrate))pc on pc.icode = it.icode left join master_setting um on um.master_id = " +
                                    //    "it.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, it.client_unit_id) = 1 left " +
                                    //    "join master_setting hsn on hsn.master_id = it.hsno and hsn.type = 'HSN' and " +
                                    //    "find_in_set(hsn.client_unit_id, it.client_unit_id)= 1 inner join clients_mst cl on cl.vch_num = pc.acode and " +
                                    //    "find_in_set(cl.client_unit_id, '" + unitid_mst + "')=1 and cl.type = 'BCD' where find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 and it.type = 'IT'" +
                                    //    " " + condi + " and it.sale = 'Y' and nvl(pc.bal_qty,'0') > 0 and nvl(s.closing,'0') > 0 " + where + "";

                                    #endregion
                                    cmd = " select (it.icode||pc.type|| pc.vch_num ||to_char(it.vch_date,'yyyymmdd')||it.type) as fstr," +
                                        "it.icode as Icode,it.iname as Iname,it.cpartno partno,um.master_name as UOM,pc.irate as rate,pc.discrate as " +
                                        "disc_rate,pc.so_qty as ord_qty,pc.used_qty,pc.bal_qty Bal_ord_qty, pc.po_no as po_num," +
                                        "to_char(pc.date1, '" + sgen.Getsqldateformat() + "') as po_date,to_char(pc.vch_date, '" + sgen.Getsqldateformat() + "') as so_date,pc.vch_num as so_no from item it inner join(select a.po_no, a.vch_num, a.icode, a.acode, a.client_id, a.client_unit_id," +
                                        " a.type, a.so_qty, a.vch_date,a.irate, a.discrate, a.date1, nvl(sum(a.invoice_qty),'0') as used_qty,a.so_qty - nvl(sum(a.invoice_qty), '0')" +
                                        " as bal_qty from(select pc.vch_num,pc.gothrchrg as po_no, pc.irate, pc.discrate, pc.date1, pc.vch_date, pc.icode, pc.acode, pc.client_id, " +
                                        "pc.client_unit_id, pc.type, pc.qtyord as so_qty, iv.qtyout as invoice_qty from purchasesc pc left join itransaction iv on iv.sono = " +
                                        "pc.vch_num and iv.potype = '51' and pc.icode = iv.icode and iv.client_unit_id = pc.client_unit_id where " +
                                        "pc.pur_type = 'NPI' and substr(pc.type, 1, 1) = '4' and pc.client_unit_id = '" + unitid_mst + "' union all select pc.vch_num," +
                                        "pc.gothrchrg as po_no, pc.irate,pc.discrate, pc.date1, pc.vch_date, pc.icode, pc.acode, pc.client_id, pc.client_unit_id, pc.type," +
                                        "pc.qtyord as so_qty, dp.qtyout as dsp_qty from purchasesc pc left join itransaction dp on dp.VEHNO = pc.vch_num and dp.type = '60' and " +
                                        "pc.icode = dp.icode and dp.client_unit_id = pc.client_unit_id where pc.pur_type = 'NPI' and " +
                                        "substr(pc.type, 1, 1) = '4' union all select pc.vch_num,pc.gothrchrg as po_no, pc.irate, pc.discrate, pc.date1, pc.vch_date, pc.icode," +
                                        "pc.acode, pc.client_id, pc.client_unit_id, pc.type, pc.qtyord as so_qty, ds.col10 as dsp_qty from purchasesc pc left join kc_tab ds on " +
                                        "ds.col13 = pc.vch_num and substr(ds.type,1,1)='4' and ds.col20='DSC' and pc.icode = ds.col5 and ds.client_unit_id = pc.client_unit_id " +
                                        "where pc.pur_type = 'NPI' and substr(pc.type, 1, 1) = '4' union all select pc.vch_num,pc.gothrchrg as po_no, pc.irate, pc.discrate," +
                                        " pc.date1, pc.vch_date, pc.icode,pc.acode, pc.client_id,pc.client_unit_id, pc.type, pc.qtyord as so_qty,co.col11 as invoice_qty from purchasesc" +
                                        " pc left join enx_tab co on co.col7 = pc.icode and pc.vch_num = co.col5 and co.type = 'CPS' and" +
                                        " co.client_unit_id = '" + unitid_mst + "' and substr(pc.type, 1, 1) = '4') a group by(a.vch_num, a.icode, a.acode, a.client_id," +
                                        " a.client_unit_id, a.type,a.so_qty, a.po_no, a.vch_date, a.date1, a.irate, a.discrate))pc on pc.icode = it.icode left join master_setting um on um.master_id = " +
                                        "it.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, it.client_unit_id) = 1 inner join clients_mst cl on cl.vch_num = pc.acode and " +
                                        "find_in_set(cl.client_unit_id, '" + unitid_mst + "')=1 and cl.type = 'BCD' where find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 and it.type = 'IT'" +
                                        " " + condi + " and it.sale = 'Y' and nvl(pc.bal_qty,'0') > 0 " + where + "";
                                    break;
                                case "52": //with dispatch schedule
                                    condi = " and pc.typ ='" + values[0].ToString() + "' and (cl.vch_num|| to_char(cl.vch_date,'yyyymmdd')||cl.type) = " +
                                        "'" + values[2].ToString() + "' and (pc.client_id||pc.client_unit_id||pc.sdl_no||to_char(pc.date1,'yyyymmdd')||pc.typ) in ('" + values[3].ToString() + "')";

                                    #region command with hsn,stock
                                    //cmd = "select distinct (it.icode || pc.col20 || pc.sdl_no || to_char(it.vch_date, 'yyyymmdd') || it.type) as fstr," +
                                    //    "it.icode as icode,it.iname as iname,cl.c_name as party,pc.pending_sdl as qtyord,it.cpartno partno," +
                                    //    "to_char(pc.date5,'" + sgen.Getsqldateformat() + "') as po_date,to_char(pc.date6,'" + sgen.Getsqldateformat() + "') as so_date,pc.col11 as po_no,pc.col13 as so_no," +
                                    //    "it.amortchrgs,it.matjobwork,nvl(hsn.master_name,'-') as hsn,nvl(hsn.group_name,'0') taxrate,to_char(pc.date1,'" + sgen.Getsqldateformat() + "') sdl_date, " +
                                    //    "pc.col20 as type,pc.sdl_no,nvl(s.closing, 0) as qtystk,um.master_name as UOM " +
                                    //    "from item it " +
                                    //    "inner join (select a.sdl_no,a.typ, a.icode,a.col1,a.client_id,a.client_unit_id, a.col20, a.date1,a.date5, a.date6, a.col11, " +
                                    //    "a.col13, a.sdl_qty, sum(a.dsp_qty) as dsp_qty,(a.sdl_qty - nvl(sum(a.dsp_qty), '0')) as pending_sdl from " +
                                    //    "(select ds.vch_num as sdl_no,ds.type typ,ds.col1,ds.client_id,ds.client_unit_id, ds.col20,ds.date1,ds.date5," +
                                    //    " ds.date6,ds.col11, ds.col13,ds.col5 as icode, ds.col10 as sdl_qty,dp.qtyout as dsp_qty from kc_tab ds " +
                                    //    "left join itransaction dp on dp.GDISC = ds.vch_num and dp.type = '61'  and dp.icode=ds.col5 and dp.client_unit_id = ds.client_unit_id " +
                                    //    "where substr(ds.type,1,1)='4' and ds.col20='DSC' and ds.client_unit_id = '" + unitid_mst + "' " +
                                    //    "union all " +
                                    //    "select ds.vch_num as sdl_no," +
                                    //    "ds.type typ,ds.col1,ds.client_id,ds.client_unit_id, ds.col20,ds.date1,ds.date5, ds.date6, ds.col11, ds.col13, ds.col5 as icode, ds.col10 as sdl_qty, iv.qtyout as inv_qty from kc_tab ds " +
                                    //    "left join itransaction iv on iv.sdlno = ds.vch_num and iv.potype = '52'  and iv.icode=ds.col5 and iv.client_unit_id = ds.client_unit_id " +
                                    //    "where substr(ds.type,1,1)='4' and ds.col20='DSC' and ds.client_unit_id = '" + unitid_mst + "' " +
                                    //    "union all " +
                                    //    "select ds.vch_num as sdl_no,ds.type typ,ds.col1,ds.client_id,ds.client_unit_id,ds.col20,ds.date1,ds.date5, ds.date6," +
                                    //    " ds.col11, ds.col13, ds.col5 as icode, ds.col10 as sdl_qty,co.col11 as close_qty from kc_tab ds " +
                                    //    "left join enx_tab co on co.col7 = ds.col5 and ds.vch_num = co.col5 and co.type = 'CPD' and co.client_unit_id = '" + unitid_mst + "' where substr(ds.type,1,1)='4' and ds.col20='DSC' " +
                                    //    "and ds.client_unit_id = '" + unitid_mst + "') a group by(a.sdl_no,a.typ, a.icode,a.col1,a.client_id,a.client_unit_id, a.col20,a.date1, a.date5, a.date6," +
                                    //    " a.col11, a.col13, a.sdl_qty)) pc on pc.icode = it.icode " +
                                    //    "left join master_setting um on um.master_id = it.uom  and um.type = 'UMM' and find_in_set(um.client_unit_id, it.client_unit_id)= 1 " +
                                    //    "left join master_setting hsn on hsn.master_id = it.hsno and hsn.type = 'HSN' and find_in_set(hsn.client_unit_id, it.client_unit_id)= 1 " +
                                    //    "left join(select icode,client_unit_id,sum(op) op,sum(pktop) pktop,sum(qtyin) qtyin,sum(qtyout) out,sum(op)+sum(qtyin)-sum(qtyout) closing from (select icode, client_unit_id, nvl(op_2019, 0) op," +
                                    //  " nvl(pkt_2019, 0) pktop, 0 qtyin, 0 qtyout, 0 pktno from itbal union all select icode, client_unit_id, " +
                                    //  "sum(to_number(qtyin)) - sum(to_number(qtyout)) op, sum((case when substr(type, 1, 1) in ('0', '1') then" +
                                    //  " pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktop,sum(to_number(qtyin)) " +
                                    //  "qtyin,sum(to_number(qtyout)) qtyout,0 pktno from itransaction where trim(store) = 'Y' and " +
                                    //  "to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and " +
                                    //  "to_date('" + year_from.Split(' ')[0].Trim() + "','" + sgen.Getsqldateformat() + "')-1 group by icode,client_unit_id union all select icode,client_unit_id," +
                                    //  "0 as op,0 as pktop,to_number(qtyin) qtyin,to_number(qtyout) qtyout,sum((case when substr(type, 1, 1) in " +
                                    //  "('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktno from " +
                                    //  "itransaction where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between " +
                                    //  "to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and to_date('" + param2.Trim() + "','" + sgen.Getsqldateformat() + "') group by icode,client_unit_id," +
                                    //  "to_number(qtyin),to_number(qtyout)) a group by icode, client_unit_id) s" +
                                    //    " on it.icode = s.icode and find_in_set( s.client_unit_id,it.client_unit_id)=1 inner join clients_mst cl on cl.vch_num = pc.col1 and find_in_set(cl.client_unit_id, '" + unitid_mst + "')=1" +
                                    //    " and cl.type = 'BCD' where find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 and it.type='IT' " + condi + " " + where + "";

                                    #endregion
                                    cmd = "select distinct (it.icode || pc.col20 || pc.sdl_no || to_char(it.vch_date, 'yyyymmdd') || it.type) as fstr," +
                                        "it.icode as icode,it.iname as iname,cl.c_name as party,pc.pending_sdl as qtyord,it.cpartno partno," +
                                        "to_char(pc.date5,'" + sgen.Getsqldateformat() + "') as po_date,to_char(pc.date6,'" + sgen.Getsqldateformat() + "') as so_date,pc.col11 as po_no,pc.col13 as so_no," +
                                        "it.amortchrgs,it.matjobwork,to_char(pc.date1,'" + sgen.Getsqldateformat() + "') sdl_date,pc.col20 as type,pc.sdl_no,um.master_name as UOM from item it " +
                                        "inner join (select a.sdl_no,a.typ, a.icode,a.col1,a.client_id,a.client_unit_id, a.col20, a.date1,a.date5, a.date6, a.col11, " +
                                        "a.col13, a.sdl_qty, sum(a.dsp_qty) as dsp_qty,(a.sdl_qty - nvl(sum(a.dsp_qty), '0')) as pending_sdl from " +
                                        "(select ds.vch_num as sdl_no,ds.type typ,ds.col1,ds.client_id,ds.client_unit_id, ds.col20,ds.date1,ds.date5," +
                                        " ds.date6,ds.col11, ds.col13,ds.col5 as icode, ds.col10 as sdl_qty,dp.qtyout as dsp_qty from kc_tab ds " +
                                        "left join itransaction dp on dp.GDISC = ds.vch_num and dp.type = '61'  and dp.icode=ds.col5 and dp.client_unit_id = ds.client_unit_id " +
                                        "where substr(ds.type,1,1)='4' and ds.col20='DSC' and ds.client_unit_id = '" + unitid_mst + "' " +
                                        "union all select ds.vch_num as sdl_no,ds.type typ,ds.col1,ds.client_id,ds.client_unit_id, ds.col20,ds.date1,ds.date5, ds.date6, ds.col11, ds.col13, ds.col5 as icode, ds.col10 as sdl_qty, iv.qtyout as inv_qty from kc_tab ds " +
                                        "left join itransaction iv on iv.sdlno = ds.vch_num and iv.potype = '52'  and iv.icode=ds.col5 and iv.client_unit_id = ds.client_unit_id " +
                                        "where substr(ds.type,1,1)='4' and ds.col20='DSC' and ds.client_unit_id = '" + unitid_mst + "' " +
                                        "union all select ds.vch_num as sdl_no,ds.type typ,ds.col1,ds.client_id,ds.client_unit_id,ds.col20,ds.date1,ds.date5, ds.date6," +
                                        " ds.col11, ds.col13, ds.col5 as icode, ds.col10 as sdl_qty,co.col11 as close_qty from kc_tab ds " +
                                        "left join enx_tab co on co.col7 = ds.col5 and ds.vch_num = co.col5 and co.type = 'CPD' and co.client_unit_id = '" + unitid_mst + "' where substr(ds.type,1,1)='4' and ds.col20='DSC' " +
                                        "and ds.client_unit_id = '" + unitid_mst + "') a group by(a.sdl_no,a.typ, a.icode,a.col1,a.client_id,a.client_unit_id, a.col20,a.date1, a.date5, a.date6," +
                                        " a.col11, a.col13, a.sdl_qty)) pc on pc.icode = it.icode " +
                                        "left join master_setting um on um.master_id = it.uom  and um.type = 'UMM' and find_in_set(um.client_unit_id, it.client_unit_id)= 1 " +
                                        "inner join clients_mst cl on cl.vch_num = pc.col1 and find_in_set(cl.client_unit_id, '" + unitid_mst + "')=1" +
                                        " and cl.type = 'BCD' where find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 and it.type='IT' " + condi + " " + where + "";
                                    break;
                                case "55":  //with performa invoice
                                    condi = " and pc.type ='" + values[0].ToString() + "' and (pc.client_id||pc.client_unit_id||pc.PI_NO||to_char(pc.pi_date,'yyyymmdd')||pc.type) in ('" + values[3].ToString() + "')";

                                    #region command with hsn,stock
                                    //cmd = "select distinct (it.icode||to_char(it.vch_date,'yyyymmdd')||it.type||pi.vch_num||pi.type) as fstr," +
                                    //    "it.icode as Icode,it.iname as Iname,it.cpartno Partno,um.master_name as UOM,nvl(hsn.master_name,'-') as hsn,nvl(hsn.group_name,'0') taxrate," +
                                    //    " s.closing as qty_in_stock,pi.ORDQTY as pi_qty,(pi.ORDQTY - nvl(iv.used_amt, 0)) as pi_bal_qty from item it inner join" +
                                    //    " itransactionc pi on pi.icode = it.icode and pi.pur_type = 'BPI' and find_in_set(pi.client_unit_id,it.client_unit_id)=1 " + condi + " left join master_setting um on um.master_id = it.uom and um.type" +
                                    //    " = 'UMM' and find_in_set(um.client_unit_id, it.client_unit_id)= 1 " +
                                    //    "left join master_setting hsn on hsn.master_id = it.hsno and hsn.type = 'HSN' and find_in_set(hsn.client_unit_id, it.client_unit_id)= 1 left join(select icode,client_unit_id,sum(op) op,sum(pktop) pktop,sum(qtyin) qtyin,sum(qtyout) out," +
                                    //  "sum(op)+sum(qtyin)-sum(qtyout) closing from (select icode, client_unit_id, nvl(op_2019, 0) op," +
                                    //  " nvl(pkt_2019, 0) pktop, 0 qtyin, 0 qtyout, 0 pktno from itbal union all select icode, client_unit_id, " +
                                    //  "sum(to_number(qtyin)) - sum(to_number(qtyout)) op, sum((case when substr(type, 1, 1) in ('0', '1') then" +
                                    //  " pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktop,sum(to_number(qtyin)) " +
                                    //  "qtyin,sum(to_number(qtyout)) qtyout,0 pktno from itransaction where trim(store) = 'Y' and " +
                                    //  "to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and " +
                                    //  "to_date('" + year_from.Split(' ')[0].Trim() + "','" + sgen.Getsqldateformat() + "')-1 group by icode,client_unit_id union all select icode,client_unit_id," +
                                    //  "0 as op,0 as pktop,to_number(qtyin) qtyin,to_number(qtyout) qtyout,sum((case when substr(type, 1, 1) in " +
                                    //  "('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktno from " +
                                    //  "itransaction where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between " +
                                    //  "to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and to_date('" + param2.Trim() + "','" + sgen.Getsqldateformat() + "') group by icode,client_unit_id," +
                                    //  "to_number(qtyin),to_number(qtyout)) a group by icode, client_unit_id) s on it.icode = s.icode and find_in_set(s.client_unit_id ,it.client_unit_id)=1" +
                                    //    " left join(select sum(qtyout) as used_amt ,pi_no,client_id,client_unit_id from itransaction where client_unit_id = '" + unitid_mst + "' and substr(type, 1, 1) = '4' and" +
                                    //    " potype= '55' group by pi_no,client_id,client_unit_id) iv on iv.pi_no = pi.vch_num and iv.client_unit_id = pi.client_unit_id where it.type = 'IT' " +
                                    //    "and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 and it.sale = 'Y' and nvl(s.closing,'0') > 0 and (pi.ORDQTY - nvl(iv.used_amt, 0)) > 0 " + where + "";

                                    #endregion
                                    //cmd = "select distinct (it.icode||to_char(it.vch_date,'yyyymmdd')||it.type||pi.vch_num||pi.type) as fstr," +
                                    //    "it.icode as Icode,it.iname as Iname,it.cpartno Partno,um.master_name as UOM,pi.ORDQTY as pi_qty,(pi.ORDQTY - nvl(iv.used_amt, 0)) as pi_bal_qty from item it inner join" +
                                    //    " itransactionc pi on pi.icode = it.icode and pi.pur_type = 'BPI' and find_in_set(pi.client_unit_id,it.client_unit_id)=1 " + condi + " left join master_setting um on um.master_id = it.uom and um.type" +
                                    //    " = 'UMM' and find_in_set(um.client_unit_id, it.client_unit_id)= 1 left join(select sum(qtyout) as used_amt ,pi_no,client_id,client_unit_id,icode from itransaction where client_unit_id = '" + unitid_mst + "' and substr(type, 1, 1) = '4' and" +
                                    //    " potype= '55' group by pi_no,client_id,client_unit_id,icode) iv on iv.pi_no = pi.vch_num and iv.icode=pi.icode and iv.client_unit_id = pi.client_unit_id where it.type = 'IT' " +
                                    //    "and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 and it.sale = 'Y' and (pi.ORDQTY - nvl(iv.used_amt, 0)) > 0 " + where + "";

                                    cmd = "select distinct (it.icode||to_char(it.vch_date,'yyyymmdd')||it.type||pc.PI_NO||pc.type) as fstr,it.icode as Icode,pc.PI_NO,it.iname as Iname,it.cpartno Partno,um.master_name as UOM,pc.pi_qty,pc.bal_qty " +
                                        "from item it left join master_setting um on um.master_id = it.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, it.client_unit_id)= 1 inner join (select a.PI_NO,a.pi_date,a.type,a.icode,a.client_id," +
                                        "a.client_unit_id,max(a.pi_qty) pi_qty,sum(a.inv_qty) as inv_qty,(max(a.pi_qty) - nvl(sum(a.inv_qty), '0')) as bal_qty from(select pi.vch_num as PI_NO,pi.vch_date pi_date,pi.type,pi.icode," +
                                        "pi.client_id,pi.client_unit_id,pi.ORDQTY as pi_qty,nvl(iv.qtyout,'0') as inv_qty from itransactionc pi left join itransaction iv on iv.pi_no = pi.vch_num and iv.potype = '55' and iv.icode=pi.icode and " +
                                        "iv.client_unit_id = pi.client_unit_id where substr(pi.type,1,1)='4' and pi.pur_type='BPI' and pi.client_unit_id = '" + unitid_mst + "' union all select pi.vch_num as PI_NO,pi.vch_date pi_date,pi.type," +
                                        "pi.icode,pi.client_id,pi.client_unit_id,pi.ORDQTY as pi_qty,nvl(iv.col11, '0') as close_qty from itransactionc pi left join enx_tab iv on iv.col12 = pi.vch_num and iv.type = 'PRI' and iv.col7=pi.icode and " +
                                        "iv.client_unit_id = pi.client_unit_id where substr(pi.type,1,1)='4' and pi.pur_type='BPI' and pi.client_unit_id = '" + unitid_mst + "') a group by (a.PI_NO,a.pi_date,a.type,a.icode,a.client_id,a.client_unit_id)) pc on " +
                                        "pc.icode = it.icode " + condi + " where it.type='IT' and it.sale='Y' and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 and pc.bal_qty>0 " + where + "";
                                    break;
                                case "54":  //without sales order 
                                    #region command with hsn,stock
                                    //cmd = "select it.icode||to_char(it.vch_date,'yyyymmdd')||it.type as fstr,it.icode as Icode,it.iname as Iname,it.cpartno Partno," +
                                    //"um.master_name as UOM,nvl(hsn.master_name,'-') as hsn,nvl(hsn.group_name,'0') taxrate,s.closing as qty_in_stock," +
                                    //"(case when it.tcs='Y' then nvl(hsn.col1,'0%') else '0%' end) tcsper from item it " +
                                    //"left join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
                                    //"left join master_setting hsn on hsn.master_id=it.hsno and hsn.type='HSN' and find_in_set(hsn.client_unit_id,it.client_unit_id)=1 " +
                                    //"left join(select icode,client_unit_id,sum(op) op,sum(pktop) pktop,sum(qtyin) qtyin,sum(qtyout) out," +
                                    //  "sum(op)+sum(qtyin)-sum(qtyout) closing from (select icode, client_unit_id, nvl(op_2019, 0) op," +
                                    //  " nvl(pkt_2019, 0) pktop, 0 qtyin, 0 qtyout, 0 pktno from itbal union all select icode, client_unit_id, " +
                                    //  "sum(to_number(qtyin)) - sum(to_number(qtyout)) op, sum((case when substr(type, 1, 1) in ('0', '1') then" +
                                    //  " pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktop,sum(to_number(qtyin)) " +
                                    //  "qtyin,sum(to_number(qtyout)) qtyout,0 pktno from itransaction where trim(store) = 'Y' and " +
                                    //  "to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and " +
                                    //  "to_date('" + year_from.Split(' ')[0].Trim() + "','" + sgen.Getsqldateformat() + "')-1 group by icode,client_unit_id union all select icode,client_unit_id," +
                                    //  "0 as op,0 as pktop,to_number(qtyin) qtyin,to_number(qtyout) qtyout,sum((case when substr(type, 1, 1) in " +
                                    //  "('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktno from " +
                                    //  "itransaction where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between " +
                                    //  "to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and to_date('" + param2.Trim() + "','" + sgen.Getsqldateformat() + "') group by icode,client_unit_id," +
                                    //  "to_number(qtyin),to_number(qtyout)) a group by icode, client_unit_id)" +
                                    //" s on it.icode = s.icode and find_in_set(s.client_unit_id,it.client_unit_id)=1 " +
                                    //"where find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 and it.type='IT' and it.sale='Y' and " +
                                    //"nvl(s.closing,'0') > 0 " + where + ""; 
                                    #endregion
                                    cmd = "select it.icode||to_char(it.vch_date,'yyyymmdd')||it.type as fstr,it.icode as Icode,it.iname as Iname,it.cpartno Partno," +
                                    "um.master_name as UOM from item it left join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
                                    "where find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 and it.type='IT' and it.sale='Y' " + where + "";
                                    break;
                                default: //other types
                                    cmd = "select it.icode||to_char(it.vch_date,'yyyymmdd')||it.type as fstr,it.icode as Icode,it.iname as Iname,it.cpartno Partno," +
                                  "um.master_name as UOM from item it left join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,it.client_unit_id)=1 " +
                                  " where it.type='IT' and find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 and it.sale='Y' " + where + "";
                                    break;
                            }
                            break;
                        case "PARTYFRM":
                        case "PARTYTO":
                            cmd = "select (a.vch_num|| to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.c_name as Name,a.addr address,a.pincode as Pincode,a.c_gstin as GSTIN,a.type_desc as Search_text,a.cpname as PerName,(case when a.cpcont='0000000000' then '-' else a.cpcont end) ContactNo,(case when a.cpaltcont='0000000000' then '-' else a.cpaltcont end) as AltContactNo,(case when a.cpemail='ab@ab.ab' then '-' else a.cpemail end) as Email,a.cpaddr as PerAddr,a.cpdesig Designation from clients_mst a where find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 and a.type='BCD' and substr(a.vch_num,0,3)='303'";
                            break;
                        case "CHRGS":
                            cmd = "select (master_id||to_char(vch_date,'yyyymmdd')||type) fstr,master_id DocNo,master_name Charge " +
                                "from master_setting where type='MR0' and find_in_set(client_unit_id,'" + unitid_mst + "')=1";
                            break;
                        case "RATE":
                            sgen.SetSession(MyGuid, "rtrno", param1.Trim());
                            cmd = "select (master_id||to_char(vch_date,'yyyymmdd')||type) fstr,master_id DocNo,master_name as hsncode,group_name TaxRate " +
                                "from master_setting where type='HSN' and find_in_set(client_unit_id,'" + unitid_mst + "')=1";
                            break;
                    }
                    break;
                #endregion
                #region sales order
                case "s_order":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "PRINT":
                            cmd = "select distinct (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) as fstr,p.vch_num SO_number,to_char(p.vch_date, '" + sgen.Getsqldateformat() + "') SO_date,c.c_name as Party_Name," +
                               "c.c_gstin as Party_Gstin,c.addr as Party_Address, p.pur_type Purchase_Type from purchasesc p " +
                               "inner join clients_mst c on p.acode = c.vch_num and find_in_set(c.client_unit_id, p.client_unit_id)=1 and c.type = 'BCD' and substr(c.vch_num,0,3)='303' " +
                               "where p.client_unit_id = '" + unitid_mst + "'" +
                               " and SUBSTR(p.type,1,1)= '4' and p.pur_type = 'NPI' and to_date(to_char(p.vch_DATE,'ddMMyyyy'),'ddMMyyyy') between to_date('" + year_from + "','" + sgen.Getsqldatetimeformat() + "') and to_date('" + year_to + "','" + sgen.Getsqldatetimeformat() + "') order by p.vch_num desc";
                            break;
                        case "VIEW":
                        case "BDCOPYSO":
                            cmd = "select distinct (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) as fstr,p.vch_num SO_number,to_char(p.vch_date, '" + sgen.Getsqldateformat() + "') SO_date,c.c_name as Party_Name," +
                                "c.c_gstin as Party_Gstin,c.addr as Party_Address,nvl(sf.c_name, '-') as From_Name,nvl(sf.c_gstin, '-') as From_Gstin," +
                                "tp.master_name as Against,nvl(sf.addr, '-') FromAddress," +
                                "nvl(st.c_name, '-') as To_Name,nvl(st.c_gstin, '-') as To_Gstin,nvl(st.addr, '-') ToAddress," +
                                "p.pur_type Purchase_Type, p.icode ItemCode, p.iname ItemName, p.cpartno PartNo, p.uom UOM, p.hsno HSN, p.indno as SO_Mode,nvl(p.pino,'-') as pino," +
                                "p.qtystk Stock_Qty, p.qtyord Order_Qty, p.irate ItemRate, p.taxrate TaxRate, iamount Item_Amt,p.taxamt taxamt, p.disctype Discount_Type" +
                                ", p.discrate Discount_Rate, p.discamt Discount_Amt, p.lineamount LineAmt,to_char(p.dlv_date, '" + sgen.Getsqldateformat() + "') Delivery_Date" +
                                ",p.gserchrg IGST, p.gloadchrg SGST, p.gamc CGST, p.basicamt BasicAmt, p.ginstlchrg GrossAmt, p.gtaxamt as Net_Amount from purchasesc p " +
                                "inner join clients_mst c on p.acode = c.vch_num and find_in_set(c.client_unit_id, p.client_unit_id)=1 and c.type = 'BCD' and substr(c.vch_num,0,3)='303' " +
                                "inner join master_setting tp on tp.master_id=p.type and tp.type='KPO' and substr(tp.master_id,1,1)='4' and find_in_set(tp.client_unit_id,p.client_unit_id)=1 " +
                                "left join clients_mst sf on p.shipfrom = sf.vch_num and find_in_set(sf.client_unit_id, p.client_unit_id)=1 and sf.type = 'BCD' " +
                                "left join clients_mst st on p.shipto = st.vch_num and find_in_set(st.client_unit_id, p.client_unit_id)=1 and st.type = 'BCD' " +
                                "and substr(st.vch_num,0,3)='303' where p.client_unit_id = '" + unitid_mst + "'" +
                                " and SUBSTR(p.type,1,1)= '4' and p.pur_type = 'NPI' and to_date(to_char(p.vch_DATE,'ddMMyyyy'),'ddMMyyyy') between to_date('" + year_from + "','" + sgen.Getsqldatetimeformat() + "') and to_date('" + year_to + "','" + sgen.Getsqldatetimeformat() + "') order by p.vch_num desc";
                            break;
                        case "BDSOTYPE":
                            cmd = "select '001' fstr,'75' master_id,'With PERFORMA INVOICE' SO_Against from dual union all select '002' " +
                                "fstr,'76' master_id,'Without PERFORMA INVOICE' SO_Against from dual";
                            break;
                        case "NEW":
                            cmd = "select master_id||to_char(vch_date,'yyyymmdd')||type fstr,master_id as Type,master_name Name " +
                            "from master_setting where type='KPO' and substr(master_id,1,1)='4' and find_in_set(client_unit_id,'" + unitid_mst + "')=1";
                            break;
                        case "PARTY":
                            if (sgen.GetSession(MyGuid, "BDSOTYPE") != null)
                            {
                                if (sgen.GetSession(MyGuid, "BDSOTYPE").ToString().Trim().Equals("75")) //with pi
                                {
                                    cmd = "select distinct (a.vch_num|| to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.vch_num as Party_code," +
                                "a.c_name as Name,a.addr address,a.pincode as Pincode,a.type_desc as Search_text" +
                                ",(case when a.cpcont='0000000000' then '-' else a.cpcont end) ContactNo,(case when a.cpemail='ab@ab.ab' then '-' else a.cpemail end) as Email from clients_mst a inner join itransactionc pi on a.vch_num" +
                                " = pi.acode and pi.type = '" + sgen.GetSession(MyGuid, "BDSOORDTYPE").ToString() + "' and pi.pur_type = 'BPI' and find_in_set(a.client_unit_id, pi.client_unit_id)=1 where find_in_set(a.client_unit_id, '" + unitid_mst + "')=1 AND a.type = 'BCD' and substr(a.vch_num,0,3)='303'";
                                }
                                else //without pi
                                {
                                    cmd = "select distinct (a.vch_num|| to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.vch_num as Party_code,a.c_name as Name,a.addr address,a.pincode as Pincode,a.c_gstin as GSTIN," +
                                  "a.type_desc as Search_text,(case when a.cpcont='0000000000' then '-' else a.cpcont end) ContactNo,(case when a.cpemail='ab@ab.ab' then '-' else a.cpemail end) as Email " +
                                  "from clients_mst a where find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 AND a.type='BCD' and substr(a.vch_num,0,3)='303'";
                                }
                            }
                            break;
                        case "ITEM":
                            if (param1 != null)
                            {
                                if (param1 != "")
                                {
                                    if (param1 != "") where = " and it.icode not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','").Trim().ToString() + "')";
                                }
                            }
                            string condi = "";
                            if (sgen.GetSession(MyGuid, "BDSOORDTYPE") != null)
                            {
                                if (sgen.GetSession(MyGuid, "BDSOORDTYPE").ToString().Equals("46")) condi = " and substr(it.icode,0,2)='99'";
                                else if (sgen.GetSession(MyGuid, "BDSOORDTYPE").ToString().Equals("40")) condi = " and it.sale='Y'";
                                else if (sgen.GetSession(MyGuid, "BDSOORDTYPE").ToString().Equals("45")) condi = "";
                            }
                            if (sgen.GetSession(MyGuid, "BDSOTYPE").ToString().Trim().Equals("75"))  //Domestic SO With Proforma 
                            {
                                #region command with hsn,stock
                                //cmd = "select pi.vch_num||it.icode||to_char(it.vch_date,'yyyymmdd')||it.type as fstr," +
                                //      "it.icode as Icode,it.iname as Iname,it.cpartno Partno, um.master_name as UOM,nvl(hsn.master_name,'-') as hsn," +
                                //      "nvl(hsn.group_name,'0') taxrate, nvl(s.closing, '0') as qty_in_stock,pi.vch_num as pi_no,to_char(pi.vch_date,'" + sgen.Getsqldateformat() + "') as pi_date" +
                                //      ",pi.ordqty,pi.irate,pi.discrate from item it left join master_setting um on" +
                                //      " um.master_id = it.uom and um.type = 'UMM' and " +
                                //      "find_in_set(um.client_unit_id, it.client_unit_id)= 1 left join master_setting hsn on hsn.master_id = " +
                                //      "it.hsno and hsn.type = 'HSN' and find_in_set(hsn.client_unit_id,it.client_unit_id)= 1 " +
                                //      "left join(select icode,client_unit_id,sum(op) op,sum(pktop) pktop,sum(qtyin) qtyin,sum(qtyout) out," +
                                //      "sum(op)+sum(qtyin)-sum(qtyout) closing from (select icode, client_unit_id, nvl(op_2019, 0) op," +
                                //      " nvl(pkt_2019, 0) pktop, 0 qtyin, 0 qtyout, 0 pktno from itbal union all select icode, client_unit_id, " +
                                //      "sum(to_number(qtyin)) - sum(to_number(qtyout)) op, sum((case when substr(type, 1, 1) in ('0', '1') then" +
                                //      " pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktop,sum(to_number(qtyin)) " +
                                //      "qtyin,sum(to_number(qtyout)) qtyout,0 pktno from itransaction where trim(store) = 'Y' and " +
                                //      "to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between " +
                                //      "to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and " +
                                //      "to_date('" + year_from.Split(' ')[0].Trim() + "','" + sgen.Getsqldateformat() + "')-1 group by icode,client_unit_id " +
                                //      "union all select icode,client_unit_id," +
                                //      "0 as op,0 as pktop,to_number(qtyin) qtyin,to_number(qtyout) qtyout,sum((case when substr(type, 1, 1) in " +
                                //      "('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktno from " +
                                //      "itransaction where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between " +
                                //      "to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and to_date('" + param2.Trim() + "','" + sgen.Getsqldateformat() + "') group by icode,client_unit_id," +
                                //      "to_number(qtyin),to_number(qtyout)) a group by icode, client_unit_id) s on it.icode = s.icode" +
                                //      " and it.client_unit_id = s.client_unit_id inner join itransactionc pi on it.icode = pi.icode and" +
                                //      " substr(pi.type,1,1)= '4' and pi.pur_type = 'BPI' and find_in_set(it.client_unit_id, pi.client_unit_id)= 1 inner join clients_mst c on pi.acode = c.vch_num and" +
                                //      " find_in_set(c.client_unit_id, pi.client_unit_id)=1 and c.type = 'BCD' and" +
                                //      " c.vch_num = '" + sgen.GetSession(MyGuid, "BDSOPARTY").ToString() + "' where it.type = 'IT' and find_in_set(it.client_unit_id, '" + unitid_mst + "')= 1" +
                                //      " and it.sale = 'Y' " + where + " " + condi + ""; 
                                #endregion
                                cmd = "select pi.vch_num||it.icode||to_char(it.vch_date,'yyyymmdd')||it.type as fstr,it.icode as Icode,it.iname as Iname,it.cpartno Partno, um.master_name as UOM," +
                                      "pi.vch_num as pi_no,to_char(pi.vch_date,'" + sgen.Getsqldateformat() + "') as pi_date" +
                                      ",pi.ordqty,pi.irate,pi.discrate from item it left join master_setting um on um.master_id = it.uom and um.type = 'UMM' and " +
                                      "find_in_set(um.client_unit_id, it.client_unit_id)= 1 inner join itransactionc pi on it.icode = pi.icode and" +
                                      " substr(pi.type,1,1)= '4' and pi.pur_type = 'BPI' and find_in_set(it.client_unit_id, pi.client_unit_id)= 1 inner join clients_mst c on pi.acode = c.vch_num and" +
                                      " find_in_set(c.client_unit_id, pi.client_unit_id)=1 and c.type = 'BCD' and c.vch_num = '" + sgen.GetSession(MyGuid, "BDSOPARTY").ToString() + "' where it.type = 'IT' and find_in_set(it.client_unit_id, '" + unitid_mst + "')= 1" +
                                      " and it.sale = 'Y' " + where + " " + condi + "";
                            }
                            else if (sgen.GetSession(MyGuid, "BDSOTYPE").ToString().Trim().Equals("76")) // Domestic SO without Proforma 
                            {
                                #region Command With Hsn,stock
                                //cmd = "select it.icode||to_char(it.vch_date,'yyyymmdd')||it.type as fstr,it.icode as Icode,it.iname as Iname,it.cpartno Partno, " +
                                //"um.master_name as UOM,nvl(hsn.master_name,'-') as hsn,nvl(hsn.group_name,'0') taxrate,(case when it.tcs='Y' then nvl(hsn.col1,'0%') else '0%' end) tcsper,nvl(s.closing, '0') as qty_in_stock from item it " +
                                //"left join master_setting um on um.master_id = it.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, it.client_unit_id)= 1 " +
                                //"left join master_setting hsn on hsn.master_id = it.hsno and hsn.type = 'HSN' and find_in_set(hsn.client_unit_id, it.client_unit_id)= 1 " +
                                //"left join(select icode,client_unit_id,sum(op) op,sum(pktop) pktop,sum(qtyin) qtyin,sum(qtyout) out," +
                                //      "sum(op)+sum(qtyin)-sum(qtyout) closing from (select icode, client_unit_id, nvl(op_2019, 0) op," +
                                //      " nvl(pkt_2019, 0) pktop, 0 qtyin, 0 qtyout, 0 pktno from itbal union all select icode, client_unit_id, " +
                                //      "sum(to_number(qtyin)) - sum(to_number(qtyout)) op, sum((case when substr(type, 1, 1) in ('0', '1') then" +
                                //      " pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktop,sum(to_number(qtyin)) " +
                                //      "qtyin,sum(to_number(qtyout)) qtyout,0 pktno from itransaction where trim(store) = 'Y' and " +
                                //      "to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between " +
                                //      "to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and " +
                                //      "to_date('" + year_from.Split(' ')[0].Trim() + "','" + sgen.Getsqldateformat() + "')-1 group by icode,client_unit_id union all " +
                                //      "select icode,client_unit_id," +
                                //      "0 as op,0 as pktop,to_number(qtyin) qtyin,to_number(qtyout) qtyout,sum((case when substr(type, 1, 1) in " +
                                //      "('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktno from " +
                                //      "itransaction where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between " +
                                //      "to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and to_date('" + param2.Trim() + "','" + sgen.Getsqldateformat() + "')" +
                                //      " group by icode,client_unit_id," +
                                //      "to_number(qtyin),to_number(qtyout)) a group by icode, client_unit_id) s on it.icode = s.icode and it.client_unit_id = s.client_unit_id " +
                                //"where it.type = 'IT' and find_in_set(it.client_unit_id, '" + unitid_mst + "')=1 " + condi + " " + where + "";

                                #endregion
                                cmd = "select it.icode||to_char(it.vch_date,'yyyymmdd')||it.type as fstr,it.icode as Icode,it.iname as Iname,it.cpartno Partno, " +
                                "um.master_name as UOM from item it left join master_setting um on um.master_id = it.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, it.client_unit_id)= 1 " +
                                "where it.type = 'IT' and find_in_set(it.client_unit_id, '" + unitid_mst + "')=1 " + condi + " " + where + "";
                            }
                            else //other types
                            {
                                #region command with hsn,stock
                                //cmd = "select it.icode||to_char(it.vch_date,'yyyymmdd')||it.type as fstr,it.icode as Icode,it.iname as Iname,it.cpartno Partno, " +
                                //"um.master_name as UOM,nvl(hsn.master_name,'-') as hsn,nvl(hsn.group_name,'0') taxrate, nvl(s.closing, '0') as qty_in_stock from item it left join master_setting um on " +
                                //"um.master_id = it.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, it.client_unit_id)= 1 left " +
                                //"join master_setting hsn on hsn.master_id = it.hsno and hsn.type = 'HSN' and " +
                                //"find_in_set(hsn.client_unit_id, it.client_unit_id)= 1 left join(select icode,client_unit_id,sum(op) op,sum(pktop) pktop,sum(qtyin) qtyin,sum(qtyout) out," +
                                //      "sum(op)+sum(qtyin)-sum(qtyout) closing from (select icode, client_unit_id, nvl(op_2019, 0) op," +
                                //      " nvl(pkt_2019, 0) pktop, 0 qtyin, 0 qtyout, 0 pktno from itbal union all select icode, client_unit_id, " +
                                //      "sum(to_number(qtyin)) - sum(to_number(qtyout)) op, sum((case when substr(type, 1, 1) in ('0', '1') then" +
                                //      " pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktop,sum(to_number(qtyin)) " +
                                //      "qtyin,sum(to_number(qtyout)) qtyout,0 pktno from itransaction where trim(store) = 'Y' and " +
                                //      "to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and " +
                                //      "to_date('" + year_from.Split(' ')[0].Trim() + "','" + sgen.Getsqldateformat() + "')-1 group by icode,client_unit_id union all select icode,client_unit_id," +
                                //      "0 as op,0 as pktop,to_number(qtyin) qtyin,to_number(qtyout) qtyout,sum((case when substr(type, 1, 1) in " +
                                //      "('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktno from " +
                                //      "itransaction where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between " +
                                //      "to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and to_date('" + param2.Trim() + "','" + sgen.Getsqldateformat() + "') group by icode,client_unit_id," +
                                //      "to_number(qtyin),to_number(qtyout)) a group by icode, client_unit_id) s on it.icode = s.icode " +
                                //"and it.client_unit_id = s.client_unit_id where it.type = 'IT' and find_in_set(it.client_unit_id, '" + unitid_mst + "')=1 and " +
                                //"it.sale = 'Y' " + where + ""; 
                                #endregion
                                cmd = "select it.icode||to_char(it.vch_date,'yyyymmdd')||it.type as fstr,it.icode as Icode,it.iname as Iname,it.cpartno Partno, " +
                                "um.master_name as UOM from item it left join master_setting um on um.master_id = it.uom and um.type = 'UMM' and " +
                                "find_in_set(um.client_unit_id, it.client_unit_id)= 1 where it.type = 'IT' and find_in_set(it.client_unit_id, '" + unitid_mst + "')=1 and " +
                                "it.sale = 'Y' " + where + "";
                            }
                            break;
                        case "PARTYFRM":
                        case "PARTYTO":
                            cmd = "select (a.vch_num|| to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.c_name as Name,a.addr address,a.pincode as Pincode,a.c_gstin as GSTIN,a.type_desc as Search_text,a.cpname as PerName,(case when a.cpcont='0000000000' then '-' else a.cpcont end) ContactNo,(case when a.cpemail='ab@ab.ab' then '-' else a.cpemail end) as Email,a.cpaddr as PerAddr from clients_mst a where a.type='BCD' and substr(a.vch_num,0,3)='303' and a.client_unit_id='" + unitid_mst + "'";
                            break;
                        case "CHRGS":
                            cmd = "select (master_id||to_char(vch_date,'yyyymmdd')||type) fstr,master_id DocNo,master_name Charge " +
                                "from master_setting where type='MR0' and find_in_set(client_unit_id,'" + unitid_mst + "')=1";
                            break;
                        case "RATE":
                            sgen.SetSession(MyGuid, "cust_portrno", param1.Trim());
                            cmd = "select (master_id||to_char(vch_date,'yyyymmdd')||type) fstr,master_id DocNo,group_name TaxRate " +
                                "from master_setting where type='HSN' and find_in_set(client_unit_id,'" + unitid_mst + "')=1";
                            break;
                    }
                    break;
                #endregion
                #region itemgrp
                case "itemgrp":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "EXT":
                            cmd = "select (a.master_id||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr," +
                                "mg.master_name category,a.master_id Group_id,a.master_name group_Name,a.client_name Description,a.client_unit_id unit_id from master_setting a " +
                                "inner join master_setting mg on mg.classid = (case when a.master_id = '99' then '99' else substr(a.master_id, 1, 1) end) and mg.type = 'KGP' " +
                                "where find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 and a.type in ('KIG', 'DDKIG')";
                            //cmd = "select (a.master_id||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,(case when a.master_id = '99' then '99' else substr(a.master_id, 1, 1) end) GrpType," +
                            //    "mg.master_name GrpName,a.master_id Type,a.master_name Name,a.client_name Description,(CASE when a.status = 'Y' THEN 'Active'  when a.status = '' THEN 'Active' when " +
                            //    "a.status = 'N' THEN 'Inactive' end) as Status from master_setting a " +
                            //    "inner join master_setting mg on mg.classid = (case when a.master_id = '99' then '99' else substr(a.master_id, 1, 1) end) and mg.type = 'KGP' " +
                            //    "where find_in_set(a.client_id,'" + clientid_mst + "')=1 and find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 and a.type in ('KIG', 'DDKIG')";
                            break;
                        case "VIEW":
                            cmd = "select (a.master_id||to_char(a.vch_date,'yyyymmdd')||a.type) as fstr," +
                                "mg.master_name category,a.master_id Group_id,a.master_name group_Name,a.client_name Description,(CASE when a.status = 'Y' THEN 'Active'  when a.status = '' THEN 'Active' else 'Inactive' end) " +
                                "as Status,a.client_unit_id unit_id from master_setting a " +
                                "inner join master_setting mg on mg.classid = (case when a.master_id = '99' then '99' else substr(a.master_id, 1, 1) end) and mg.type = 'KGP' " +
                                "where a.type in ('KIG', 'DDKIG')";
                            break;
                        case "UNIT":
                            cmd = "select (cup_id||company_profile_id||to_char(vch_date,'yyyymmdd')) fstr,company_profile_id Company_d,(unit_name||' ('||cup_id||')') " +
                              "Unit_Name from company_unit_profile where unit_status='1' order by unit_name asc";
                            break;
                        case "ACCOUNT":
                            cmd = "select distinct (a.vch_num|| to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.vch_num as Ledger_code,a.c_name as Ledger_Name from clients_mst a where " +
                          "find_in_set(a.client_id,'" + clientid_mst + "')=1 and find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 and type='LDG'";
                            break;
                    }
                    break;
                #endregion
                #region standard_price
                case "standard_price":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "VIEW":
                        case "PRE":
                            cmd = "select distinct (a.client_id||a.client_unit_id||a.vch_num||a.type) fstr,a.vch_num Docno,to_char(a.vch_date,'" + sgen.Getsqldateformat() + "') Doc_date," +
                                "a.col5 Pricelist_Name,to_char(a.date1,'" + sgen.Getsqldateformat() + "') Eff_from_date,to_char(a.date2,'" + sgen.Getsqldateformat() + "') Eff_to_date " +
                                "from enx_tab a " +
                                "where a.client_unit_id = '" + unitid_mst + "' and a.type='SP1'";
                            break;
                        case "ITEM":
                            if (param1 != "") where = " and it.icode not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','").Trim().ToString() + "')";
                            cmd = "select (it.icode||it.type) fstr,mg.master_name MainGrp,gp.master_name ItemGrp,sg.iname SubGrp,it.icode," +
                                "it.iname,it.cpartno Partno,um.master_name UOM,hsn.master_name hsn,hsn.group_name taxrate from item it " +
                                "inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,'" + unitid_mst + "')=1 " +
                                "inner join master_setting hsn on hsn.master_id=it.hsno and hsn.type='HSN' and find_in_set(hsn.client_unit_id,'" + unitid_mst + "')=1 " +
                                "inner join master_setting mg on mg.classid=substr(it.icode,1,1) and mg.type='KGP'" +
                                "inner join master_setting gp on gp.master_id=substr(it.icode,1,3) and gp.type='KIG' and find_in_set(gp.client_unit_id,'" + unitid_mst + "')=1" +
                                "inner join item sg on sg.icode=substr(it.icode,1,5) and sg.type='SG' and find_in_set(sg.client_unit_id,'" + unitid_mst + "')=1" +
                                "where find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 and it.type='IT' and it.sale='Y'" + where + "";
                            break;
                    }
                    break;
                #endregion
                #region custom_price
                case "custom_price":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "VIEW":
                            cmd = "select Distinct (a.client_id||a.client_unit_id||a.vch_num||a.type) fstr,a.vch_num Docno,to_char(a.vch_date,'" + sgen.Getsqldateformat() + "') Docdate," +
                                "group_concat(distinct c.c_name) Customer,a.col4 PriceListName, to_char(a.date1, '" + sgen.Getsqldateformat() + "') Eff_fromdate," +
                                "to_char(a.date2, '" + sgen.Getsqldateformat() + "') Eff_todate from enx_tab a " +
                                "inner join clients_mst c on find_in_set(c.vch_num, a.col6)= 1 and c.type = 'BCD' and find_in_set(c.client_unit_id, a.client_unit_id)=1 " +
                                "inner join enx_tab e on e.vch_num = a.col7 and e.type = 'SP1' and e.client_unit_id = a.client_unit_id " +
                                "where a.client_unit_id = '" + unitid_mst + "' a.type = 'SP2'" +
                                "group by(a.client_id|| a.client_unit_id || a.vch_num || a.type),a.vch_num,to_char(a.vch_date, '" + sgen.Getsqldateformat() + "'),a.col4," +
                                "to_char(a.date1, '" + sgen.Getsqldateformat() + "'),to_char(a.date2, '" + sgen.Getsqldateformat() + "')";
                            break;
                        case "ITEM":
                            if (param1 != "") where = " and it.icode not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','").Trim().ToString() + "')";
                            cmd = "select (it.icode||it.type) fstr,mg.master_name MainGrp,gp.master_name ItemGrp,sg.iname SubGrp,it.icode," +
                                "it.iname,it.cpartno Partno,um.master_name UOM,hsn.master_name hsn,hsn.group_name taxrate,nvl(e.col2,'0') Mrp from item it " +
                                "inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,'" + unitid_mst + "')=1 " +
                                "inner join master_setting hsn on hsn.master_id=it.hsno and hsn.type='HSN' and find_in_set(hsn.client_unit_id,'" + unitid_mst + "')=1 " +
                                "inner join master_setting mg on mg.classid=substr(it.icode,1,1) and mg.type='KGP' " +
                                "inner join master_setting gp on gp.master_id=substr(it.icode,1,3) and gp.type='KIG' and find_in_set(gp.client_unit_id,'" + unitid_mst + "')=1 " +
                                "inner join item sg on sg.icode=substr(it.icode,1,5) and sg.type='SG' and find_in_set(sg.client_unit_id,'" + unitid_mst + "')=1 " +
                                "left join enx_tab e on e.col1=it.icode and e.vch_num='" + param2.Trim() + "' and e.type='SP1' and find_in_set(e.client_unit_id,it.client_unit_id)=1 " +
                                "where find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 and it.type='IT' and it.sale='Y'" + where + "";
                            break;
                        case "CUST":
                            cmd = @"select (a.vch_num|| to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.c_name as Name,a.addr address,a.pincode as Pincode,
                                  a.c_gstin as GSTIN,a.type_desc as Search_text,a.cpname as PerName,(case when a.cpcont='0000000000' then '-' else a.cpcont end) ContactNo,(case when a.cpaltcont='0000000000' then '-' else a.cpaltcont end) as AltContactNo,(case when a.cpemail='ab@ab.ab' then '-' else a.cpemail end) as Email,a.cpaddr as PerAddr,a.cpdesig Designation from clients_mst a 
                                  where find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 and a.type='BCD' and substr(a.vch_num,0,3)='303'";
                            break;
                    }
                    break;
                #endregion
                #region p invoice
                case "p_invoice":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "PRINT":
                            cmd = "select distinct (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.pur_type) as fstr,p.vch_num PI_number,to_char(p.vch_date, '" + sgen.Getsqldateformat() + "') PI_date," +
                                "c.c_name as Party_Name,c.c_gstin as Party_Gstin,c.addr as Party_Address from itransactionc p " +
                                "inner join clients_mst c on p.acode = c.vch_num and c.type = 'BCD' and find_in_set(c.client_unit_id, p.client_unit_id)=1 " +
                                "where p.client_unit_id = '" + unitid_mst + "' and SUBSTR(p.type,1,1)= '4' and p.pur_type = 'BPI' and to_date(to_char(p.vch_DATE,'ddMMyyyy'),'ddMMyyyy') between to_date('" + year_from + "','" + sgen.Getsqldatetimeformat() + "') and to_date('" + year_to + "','" + sgen.Getsqldatetimeformat() + "') order by p.vch_num desc";
                            break;
                        case "VIEW":
                            cmd = "select distinct (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.pur_type) as fstr,p.vch_num PI_number,to_char(p.vch_date, '" + sgen.Getsqldateformat() + "') PI_date,c.c_name as Party_Name,c.c_gstin as Party_Gstin,c.addr as Party_Address,nvl(sf.c_name, '-') as From_Name,nvl(sf.c_gstin, '-') as From_Gstin,tp.master_name as Against,nvl(sf.addr, '-') FromAddress,nvl(st.c_name, '-') as To_Name,nvl(st.c_gstin, '-') as To_Gstin,nvl(st.addr, '-') ToAddress,p.pur_type Purchase_Type, p.icode ItemCode, p.iname ItemName,p.cpartno PartNo, p.uom UOM, p.hsno HSN,p.qtystk Stock_Qty, p.ordqty Order_Qty, p.irate ItemRate, p.taxrate TaxRate, iamount Item_Amt,p.taxamt taxamt, p.disctype Discount_Type, p.discrate Discount_Rate, p.discamt Discount_Amt,p.lineamount LineAmt,p.gserchrg IGST, p.gloadchrg SGST, p.gamc CGST, p.basicamt BasicAmt, p.ginstlchrg GrossAmt, p.gtaxamt as Net_Amount from itransactionc p " +
                                "inner join clients_mst c on p.acode = c.vch_num and c.type = 'BCD' and find_in_set(c.client_unit_id, p.client_unit_id)=1 " +
                                "inner join master_setting tp on tp.master_id=p.type and tp.type='KPO' and substr(tp.master_id,1,1)='4' and find_in_set(tp.client_unit_id,p.client_unit_id)=1 " +
                                "left join clients_mst sf on p.shipfrom = sf.vch_num and find_in_set(sf.client_unit_id, p.client_unit_id)=1 and sf.type = 'BCD' " +
                                "left join clients_mst st on p.shipto = st.vch_num and find_in_set(st.client_unit_id, p.client_unit_id)=1 and st.type = 'BCD' " +
                                "where p.client_unit_id = '" + unitid_mst + "' and SUBSTR(p.type,1,1)= '4' and pur_type = 'BPI' and to_date(to_char(p.vch_DATE,'ddMMyyyy'),'ddMMyyyy') between to_date('" + year_from + "','" + sgen.Getsqldatetimeformat() + "') and to_date('" + year_to + "','" + sgen.Getsqldatetimeformat() + "') order by p.vch_num desc";
                            break;
                        case "NEW":
                            cmd = "select master_id||to_char(vch_date,'yyyymmdd')||type fstr,master_id as Type,master_name Name " +
                            "from master_setting where find_in_set(client_unit_id,'" + unitid_mst + "')=1 and type='KPO' and substr(master_id,1,1)='4'";
                            break;
                        case "BDQTN_TYPE":
                            cmd = "select '001' fstr,'77' master_id,'WITH QUOTATION' PI_Against from dual union all select '002' " +
                                "fstr,'78' master_id,'WITHOUT QUOTATION' PI_Against from dual";
                            break;
                        case "PARTY":
                            if (sgen.GetSession(MyGuid, "BDPITYPE") != null)
                            {
                                if (sgen.GetSession(MyGuid, "BDPITYPE").ToString().Trim().Equals("77")) //with QTN
                                {
                                    cmd = "select distinct (a.vch_num|| to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.vch_num as Party_code," +
                                "a.c_name as Name,a.addr address,a.pincode as Pincode,a.type_desc as Search_text" +
                                ",(case when a.cpcont='0000000000' then '-' else a.cpcont end) ContactNo,(case when a.cpemail='ab@ab.ab' then '-' else a.cpemail end) as Email from clients_mst a inner join itransactionc pi on a.vch_num" +
                                " = pi.acode and pi.type = '" + sgen.GetSession(MyGuid, "BDPIORDTYPE").ToString() + "' and pi.pur_type = 'QTN' and find_in_set(a.client_unit_id, pi.client_unit_id)=1 where find_in_set(a.client_unit_id, '" + unitid_mst + "')=1 AND a.type = 'BCD' and substr(a.vch_num,0,3)='303'";
                                }
                                else //without QTN
                                {
                                    cmd = "select distinct (a.vch_num|| to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.vch_num as Party_code,a.c_name as Name,a.addr address,a.pincode as Pincode,a.c_gstin as GSTIN," +
                                  "a.type_desc as Search_text,(case when a.cpcont='0000000000' then '-' else a.cpcont end) ContactNo,(case when a.cpemail='ab@ab.ab' then '-' else a.cpemail end) as Email " +
                                  "from clients_mst a where find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 AND a.type='BCD' and substr(a.vch_num,0,3)='303'";
                                }
                            }
                            break;
                        case "ITEM":
                            if (param1 != null)
                            {
                                if (param1 != "")
                                {
                                    if (param1 != "") where = " and it.icode not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','").Trim().ToString() + "')";
                                }
                            }
                            string condi = "";
                            if (sgen.GetSession(MyGuid, "BDPIORDTYPE") != null)
                            {
                                if (sgen.GetSession(MyGuid, "BDPIORDTYPE").ToString().Equals("46")) condi = " and substr(it.icode,0,2)='99'";
                                else if (sgen.GetSession(MyGuid, "BDPIORDTYPE").ToString().Equals("40")) condi = " and it.sale='Y'";
                                else if (sgen.GetSession(MyGuid, "BDPIORDTYPE").ToString().Equals("45")) condi = "";
                            }
                            if (sgen.GetSession(MyGuid, "BDPITYPE").ToString().Trim().Equals("77"))  //Domestic PI_QT
                            {
                                //cmd = "select pi.vch_num||it.icode||to_char(it.vch_date,'yyyymmdd')||it.type as fstr,it.icode as Icode,it.iname as Iname,it.cpartno Partno, um.master_name as UOM," +
                                //      "pi.vch_num as pi_no,to_char(pi.vch_date,'" + sgen.Getsqldateformat() + "') as pi_date" +
                                //      ",pi.ordqty,pi.irate,pi.discrate from item it left join master_setting um on um.master_id = it.uom and um.type = 'UMM' and " +
                                //      "find_in_set(um.client_unit_id, it.client_unit_id)= 1 inner join itransactionc pi on it.icode = pi.icode and" +
                                //      " substr(pi.type,1,1)= '4' and pi.pur_type = 'QTN' and find_in_set(it.client_unit_id, pi.client_unit_id)= 1 inner join clients_mst c on pi.acode = c.vch_num and" +
                                //      " find_in_set(c.client_unit_id, pi.client_unit_id)=1 and c.type = 'BCD' and c.vch_num = '" + sgen.GetSession(MyGuid, "BDPIPARTY").ToString() + "' where it.type = 'IT' and find_in_set(it.client_unit_id, '" + unitid_mst + "')= 1" +
                                //      " and it.sale = 'Y' " + where + " " + condi + "";
                                cmd = "select pi.qt_NO||it.icode||to_char(it.vch_date,'yyyymmdd')||it.type as fstr,it.icode as Icode,it.iname as Iname,it.cpartno Partno, um.master_name as UOM,pi.bal_qty,pi.irate,pi.discrate " +
                                    "from item it left join master_setting um on um.master_id = it.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, it.client_unit_id)= 1 inner join (select a.qt_NO,a.qt_date,a.type,a.icode" +
                                    ",a.acode,a.client_id,a.client_unit_id,a.irate,a.discrate,max(a.qt_qty) qt_qty, sum(a.inv_qty) as inv_qty,(max(a.qt_qty) - nvl(sum(a.inv_qty), '0')) as bal_qty from(select qt.vch_num as qt_NO,to_char(qt.vch_date, 'dd/MM/YYYY') qt_date" +
                                    ",qt.type,qt.icode,qt.acode,qt.client_id,qt.client_unit_id,qt.irate,qt.discrate,qt.ORDQTY as qt_qty,nvl(iv.ORDQTY,'0') as inv_qty from itransactionc qt left join itransactionc iv on iv.pi_no = qt.vch_num and substr(iv.type,1,1)='4' " +
                                    "and iv.gdisc = '77' and iv.icode=qt.icode and iv.pur_type='BPI'and iv.client_unit_id = qt.client_unit_id where substr(qt.type,1,1)='4' and qt.pur_type='QTN' and qt.client_unit_id = '" + unitid_mst + "' union all select " +
                                    "qt.vch_num as qt_NO,to_char(qt.vch_date, 'dd/MM/YYYY') qt_date,qt.type,qt.icode,qt.acode,qt.client_id,qt.client_unit_id,qt.irate,qt.discrate,qt.ORDQTY as qt_qty,nvl(iv.col11, '0') as close_qty from itransactionc qt " +
                                    "left join enx_tab iv on iv.col12 = qt.vch_num and iv.type = 'CPQ' and iv.col7=qt.icode and iv.client_unit_id = qt.client_unit_id where substr(qt.type,1,1)='4' and qt.pur_type='QTN' and qt.client_unit_id = '" + unitid_mst + "' ) a " +
                                    "group by(a.qt_NO,a.qt_date,a.type,a.icode,a.acode,a.client_id,a.client_unit_id,a.irate,a.discrate)) pi on pi.icode=it.icode and pi.acode = '" + sgen.GetSession(MyGuid, "BDPIPARTY").ToString() + "' where it.type = 'IT' and find_in_set(it.client_unit_id, '" + unitid_mst + "')= 1 and it.sale = 'Y'";
                            }
                            else if (sgen.GetSession(MyGuid, "BDPITYPE").ToString().Trim().Equals("78")) // Domestic SO without Proforma 
                            {
                                cmd = "select it.icode||to_char(it.vch_date,'yyyymmdd')||it.type as fstr,it.icode as Icode,it.iname as Iname,it.cpartno Partno, " +
                                "um.master_name as UOM from item it left join master_setting um on um.master_id = it.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, it.client_unit_id)= 1 " +
                                "where it.type = 'IT' and find_in_set(it.client_unit_id, '" + unitid_mst + "')=1 " + condi + " " + where + "";
                            }
                            else //other types
                            {
                                cmd = "select it.icode||to_char(it.vch_date,'yyyymmdd')||it.type as fstr,it.icode as Icode,it.iname as Iname,it.cpartno Partno, " +
                                "um.master_name as UOM from item it left join master_setting um on um.master_id = it.uom and um.type = 'UMM' and " +
                                "find_in_set(um.client_unit_id, it.client_unit_id)= 1 where it.type = 'IT' and find_in_set(it.client_unit_id, '" + unitid_mst + "')=1 and " +
                                "it.sale = 'Y' " + where + "";
                            }
                            break;
                        case "PARTYFRM":
                        case "PARTYTO":
                            cmd = "select (a.vch_num|| to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.c_name as Name,a.addr address,a.pincode as Pincode,a.c_gstin as GSTIN,a.type_desc as Search_text," +
                                "a.cpname as PerName,(case when a.cpcont='0000000000' then '-' else a.cpcont end) ContactNo,(case when a.cpemail='ab@ab.ab' then '-' else a.cpemail end) as Email,a.cpaddr as PerAddr from clients_mst a " +
                                "where find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 and a.type='BCD' and substr(a.vch_num,0,3)='303'";
                            break;
                        case "CHRGS":
                            cmd = "select (master_id||to_char(vch_date,'yyyymmdd')||type) fstr,master_id DocNo,master_name Charge " +
                                "from master_setting where type='MR0' and find_in_set(client_unit_id,'" + unitid_mst + "')=1";
                            break;
                        case "RATE":
                            sgen.SetSession(MyGuid, "pirtrno", param1.Trim());
                            cmd = "select (master_id||to_char(vch_date,'yyyymmdd')||type) fstr,master_id DocNo,master_name as hsncode,group_name TaxRate " +
                                "from master_setting where type='HSN' and find_in_set(client_unit_id,'" + unitid_mst + "')=1";
                            break;
                    }
                    break;
                #endregion
                #region pod entry
                case "pod_entry":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "PRINT":
                            cmd = "select distinct (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) as fstr,p.vch_num Doc_number," +
                               "to_char(p.vch_date, '" + sgen.Getsqldateformat() + "') Doc_date,p.pono as pod_no,to_char(p.podate,'" + sgen.Getsqldateformat() + "') as pod_date,c.c_name as trptr_Name," +
                               "p.iname as party_name from itransactionc p " +
                               "inner join clients_mst c on p.acode = c.vch_num and c.type = 'BCD' and find_in_set(c.client_unit_id, p.client_unit_id)=1 " +
                               "where p.client_unit_id = '" + unitid_mst + "' and p.type='POD' and to_date(to_char(p.vch_DATE,'ddMMyyyy'),'ddMMyyyy') between to_date('" + year_from + "','" + sgen.Getsqldatetimeformat() + "') and to_date('" + year_to + "','" + sgen.Getsqldatetimeformat() + "')" +
                               " order by p.vch_num desc";
                            break;
                        case "VIEW":
                            cmd = "select distinct (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) as fstr,p.vch_num Doc_number," +
                                "to_char(p.vch_date, '" + sgen.Getsqldateformat() + "') Doc_date,p.pono as pod_no,to_char(p.podate,'" + sgen.Getsqldateformat() + "') as pod_date,c.vch_num as trptr_code,c.c_name as trptr_Name,p.icode as party_code,p.iname as party_name,p.req_by as requested_by from itransactionc p " +
                                "inner join clients_mst c on p.acode = c.vch_num and c.type = 'BCD' and " +
                                "find_in_set(c.client_unit_id, p.client_unit_id)=1 where p.client_unit_id = '" + unitid_mst + "' and p.type='POD' and to_date(to_char(p.vch_DATE,'ddMMyyyy'),'ddMMyyyy') between to_date('" + year_from + "','" + sgen.Getsqldatetimeformat() + "') and to_date('" + year_to + "','" + sgen.Getsqldatetimeformat() + "')" +
                                " order by p.vch_num desc";
                            break;
                        case "TRPTR":
                            cmd = "select distinct tr.vch_num||To_Char(tr.vch_date, 'yyyymmdd')|| tr.type as fstr,tr.vch_num transporter_code,tr.c_name transporter_name from clients_mst tr inner join itransaction iv on iv.trptr_name = tr.vch_num and substr(iv.type, 1, 1) = '4' and substr(iv.potype,1,1)= '5' and find_in_set(iv.client_unit_id, tr.client_unit_id)= 1 where tr.type = 'BCD' and substr(tr.vch_num,0,3)= '203' and tr.trans = 'Y' and find_in_set(tr.client_unit_id,'" + unitid_mst + "')= 1";
                            break;
                        case "ITEM":
                            if (param1 != null)
                            {
                                if (param1 != "")
                                {
                                    if (param1 != "") where = " and iv.client_unit_id||iv.vch_num||to_char(iv.vch_date,'yyyymmdd')||iv.type not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','").Trim().ToString() + "')";
                                }
                            }
                            string party_code = "";
                            if (sgen.GetSession(MyGuid, "PODPARTY") != null)
                            {
                                party_code = sgen.GetSession(MyGuid, "PODPARTY").ToString();
                            }
                            cmd = "select (iv.client_unit_id||iv.vch_num||to_char(iv.vch_date,'yyyymmdd')||iv.type) as fstr," +
                                "tr.vch_num as trptr_code,tr.c_name trptr_name,iv.vch_num as invoice_no,to_char(iv.vch_date,'" + sgen.Getsqldateformat() + "') invoice_date," +
                                "iv.acode party_code, cl.c_name as party_name,iv.qtyout as inv_qty,iv.netamt as inv_value from" +
                                " itransaction iv inner join clients_mst tr on iv.trptr_name = tr.vch_num and iv.client_unit_id = " +
                                "tr.client_unit_id inner join clients_mst cl on cl.vch_num = iv.acode and cl.type = 'BCD' and " +
                                "substr(tr.vch_num,0,3)= '203' and tr.trans = 'Y' where substr(iv.type,1,1)= '4' and " +
                                "iv.client_unit_id = '" + unitid_mst + "' and substr(iv.potype,1,1)= '5' and " +
                                "tr.vch_num='" + party_code + "' and iv.acode||iv.vch_num not in " +
                                "(select icode || invno from itransactionc where type = 'POD' " +
                                "and client_unit_id = '" + unitid_mst + "') " + where + "";
                            break;
                    }
                    break;
                #endregion
                #region RFQ
                case "rfq":
                    switch (btnval.ToUpper())
                    {
                        case "NEW":
                            cmd = "select '001' fstr,'001' master_id,'With Indent' master_name from dual union all select '002' fstr,'002' master_id,'Without Indent' master_name from dual";
                            break;
                        case "RFQTYPE":
                            cmd = "select (master_id||to_char(vch_date,'yyyymmdd')||type) fstr,master_id as Type,master_name Name " +
                                "from master_setting where find_in_set(client_unit_id,'" + unitid_mst + "')=1 and type='KPO' and substr(master_id,1,1)='5'";
                            break;
                        case "PRINT":
                        case "VIEW":
                        case "EDIT":
                            cmd = "select fr.client_id||fr.client_unit_id||fr.vch_num|| to_char(fr.vch_date, 'yyyymmdd')|| fr.type as fstr," +
                                "fr.vch_num as doc_no,to_char(fr.vch_date,'" + sgen.Getsqldateformat() + "') as doc_date,cl.vch_num as party_code,cl.c_name as party_name,it.icode as Icode," +
                                "it.iname,it.cpartno Partno, nvl(um.master_name, '-') as UOM,fr.col2 as ship_from,fr.col3 as ship_to,fr.col11 as transporter,fr.col12 as " +
                                "pi_reference,fr.col21 as tax_remark,fr.col69 as remark,fr.col14 as order_qty,fr.col22 as item_remk from kc_tab fr inner join clients_mst " +
                                "cl on cl.vch_num = fr.col1 and cl.type = 'BCD' and find_in_set(cl.client_unit_id, fr.client_unit_id)= 1 inner join item it on it.icode = " +
                                "fr.col13 and it.type = 'IT' and find_in_set(it.client_unit_id, fr.client_unit_id)= 1 left join master_setting um on um.master_id = it.uom " +
                                "and um.type = 'UMM' and find_in_set(um.client_unit_id,'" + unitid_mst + "')= 1 where fr.type = 'RFQ' and fr.client_unit_id = '" + unitid_mst + "' and " +
                                "to_date(to_char(fr.vch_date,'ddMMyyyy'),'ddMMyyyy') between to_date('" + year_from + "','" + sgen.Getsqldatetimeformat() + "') " +
                                "and to_date('" + year_to + "','" + sgen.Getsqldatetimeformat() + "')";
                            break;
                        case "PARTY":
                            cmd = "select distinct (a.vch_num|| to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.c_name Name,a.addr address,a.pincode Pincode," +
                                "a.isgstr IsGST,a.c_gstin as GSTIN, (case when a.tor='C' then 'Composition' when a.tor='R' then 'Regular' else 'Not Registered' end) GSTType," +
                                "a.type_desc as Search_text,a.cpname as PerName,(case when a.cpcont='0000000000' then '-' else a.cpcont end) as ContactNo," +
                                "(case when a.cpemail='ab@ab.ab' then '-' else a.cpemail end) as Email,a.cpaddr PerAddress " +
                                "from clients_mst a where find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 and a.type='BCD' and substr(a.vch_num,0,3)='303'";
                            break;
                        case "ITEM":
                            if (param1 != "") where = " and it.icode not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','").Trim().ToString() + "')";

                            cmd = "select (it.icode||to_char(it.vch_date,'yyyymmdd')||it.type) fstr,it.icode as Icode,it.iname," +
                                "it.cpartno Partno,um.master_name as UOM,hsn.master_name as hsn,hsn.group_name taxrate from item it " +
                                "inner join master_setting um on um.master_id=it.uom and um.type='UMM' and find_in_set(um.client_unit_id,'" + unitid_mst + "')=1 " +
                                "inner join master_setting hsn on hsn.master_id=it.hsno and hsn.type='HSN' and find_in_set(hsn.client_unit_id,'" + unitid_mst + "')=1 " +
                                "where find_in_set(it.client_unit_id,'" + unitid_mst + "')=1 and it.type='IT'" + where + "";
                            break;
                    }
                    break;
                #endregion
                #region sales forcast
                case "s_fcast":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "PRINT":
                        case "VIEW":
                            cmd = "select (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) as fstr,p.vch_num Doc_number,to_char(p.vch_date,'" + sgen.Getsqldateformat() + "') as doc_date,p.RNO as year,p.icode,p.iname,p.cpartno as part_no,p.uom,p.qtystk,p.qtyout as sales_forcast,p.QTYPO as inv_qty,p.ORDQTY as so_qty,p.IRATE,p.iamount,p.IREMARK,to_char(CHLDATE, '" + sgen.Getsqldateformat() + "') as Delivery_date from itransactionc p where p.type = 'BFC'" +
                                " and p.client_unit_id = '" + unitid_mst + "' and to_date(to_char(p.vch_DATE,'ddMMyyyy'),'ddMMyyyy') between to_date('" + year_from + "','" + sgen.Getsqldatetimeformat() + "') and to_date('" + year_to + "','" + sgen.Getsqldatetimeformat() + "')";
                            break;
                        case "NEW":
                            cmd = "select master_id||to_char(vch_date,'yyyymmdd')||type fstr,master_id as Type,master_name Name " +
                            "from master_setting where find_in_set(client_unit_id,'" + unitid_mst + "')=1 and type='KPO' and substr(master_id,1,1)='4'";
                            break;
                        case "PARTY":
                            cmd = "select a.vch_num|| to_char(a.vch_date,'yyyymmdd')||a.type as fstr,a.vch_num as Party_code,a.c_name as Name,a.addr address,a.pincode as Pincode,a.c_gstin as GSTIN," +
                                "a.type_desc as Search_text,a.cpname as PerName,(case when a.cpcont='0000000000' then '-' else a.cpcont end) ContactNo,(case when a.cpaltcont='0000000000' then '-' else a.cpaltcont end) as AltContactNo,(case when a.cpemail='ab@ab.ab' then '-' else a.cpemail end) as Email,a.cpaddr as PerAddr,a.cpdesig Designation " +
                                "from clients_mst a where find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 AND a.type='BCD' and substr(a.vch_num,0,3)='303' ";
                            break;
                        case "ITEM":
                            if (param1 != null)
                            {
                                if (param1 != "")
                                {
                                    if (param1 != "") where = " and iv.client_unit_id||it.icode|| it.type not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','").Trim().ToString() + "')";
                                }
                            }
                            cmd = "select iv.client_unit_id||it.icode|| it.type as fstr,iv.icode,it.iname,it.cpartno,um.master_name as uom,iv.Inv_qty,iv.so_qty,nvl(s.closing, '0') as qtystk from item it " +
                                "inner join(select a.icode, a.client_unit_id, sum(Inv_qty) as Inv_qty,sum(so_qty) as so_qty from(select icode, client_unit_id, to_number(nvl(qtyout, '0')) as Inv_qty, 0 as so_qty " +
                                "from itransaction where client_unit_id = '" + unitid_mst + "' and substr(type, 1, 1) = '4' and substr(potype, 1, 1) = '5' " +
                                "union all select icode, client_unit_id, 0 as Inv_qty, to_number(nvl(qtyord, '0')) as so_qty from purchasesc where client_unit_id = '" + unitid_mst + "' and substr(type, 1, 1) = '4' and pur_type = 'NPI')a group by a.icode,a.client_unit_id) iv on iv.icode = it.icode and find_in_set(it.client_unit_id, iv.client_unit_id)= 1 left join master_setting um on um.master_id = it.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, it.client_unit_id)= 1" +
                                " left join(select icode,client_unit_id,sum(op) op,sum(pktop) pktop,sum(qtyin) qtyin,sum(qtyout) out," +
                                      "sum(op)+sum(qtyin)-sum(qtyout) closing from (select icode, client_unit_id, nvl(op_2019, 0) op," +
                                      " nvl(pkt_2019, 0) pktop, 0 qtyin, 0 qtyout, 0 pktno from itbal " +
                                      "union all select icode, client_unit_id, " +
                                      "sum(to_number(qtyin)) - sum(to_number(qtyout)) op, sum((case when substr(type, 1, 1) in ('0', '1') then" +
                                      " pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktop,sum(to_number(qtyin)) " +
                                      "qtyin,sum(to_number(qtyout)) qtyout,0 pktno from itransaction where trim(store) = 'Y' and " +
                                      "to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and " +
                                      "to_date('" + year_from.Split(' ')[0].Trim() + "','" + sgen.Getsqldateformat() + "')-1 group by icode,client_unit_id " +
                                      "union all select icode,client_unit_id," +
                                      "0 as op,0 as pktop,to_number(qtyin) qtyin,to_number(qtyout) qtyout,sum((case when substr(type, 1, 1) in " +
                                      "('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktno from " +
                                      "itransaction where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between " +
                                      "to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and to_date('" + param2.Trim() + "','" + sgen.Getsqldateformat() + "') group by icode,client_unit_id," +
                                      "to_number(qtyin),to_number(qtyout)) a group by icode, client_unit_id) s on it.icode = s.icode and find_in_set(it.client_unit_id, s.client_unit_id)=1" +
                                " where it.type = 'IT' and find_in_set(it.client_unit_id,'" + unitid_mst + "')= 1 and it.sale = 'Y' " + where + "";
                            break;
                    }
                    break;
                #endregion
                #region customer po
                case "cust_po":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "PRINT":
                            cmd = "select distinct (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) as fstr,p.vch_num po_number,to_char(p.vch_date, '" + sgen.Getsqldateformat() + "') po_date,c.c_name as Party_Name," +
                               "c.c_gstin as Party_Gstin,c.addr as Party_Address from purchasesc p " +
                               "inner join clients_mst c on p.acode = c.vch_num and find_in_set(c.client_unit_id, p.client_unit_id)=1 and c.type = 'BCD' and substr(c.vch_num,0,3)='303' " +
                               "where p.client_unit_id = '" + unitid_mst + "'" +
                               " and p.type='BDP' and to_date(to_char(p.vch_DATE,'ddMMyyyy'),'ddMMyyyy') between to_date('" + year_from + "','" + sgen.Getsqldatetimeformat() + "') and to_date('" + year_to + "','" + sgen.Getsqldatetimeformat() + "') order by p.vch_num desc";
                            break;
                        case "VIEW":
                        case "BDCOPYSO":
                            cmd = "select distinct (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) as fstr,p.vch_num po_number,to_char(p.vch_date, '" + sgen.Getsqldateformat() + "') po_date,c.c_name as Party_Name," +
                                "c.c_gstin as Party_Gstin,c.addr as Party_Address,nvl(sf.c_name, '-') as From_Name,nvl(sf.c_gstin, '-') as From_Gstin,nvl(sf.addr, '-') FromAddress," +
                                "nvl(st.c_name, '-') as To_Name,nvl(st.c_gstin, '-') as To_Gstin,nvl(st.addr, '-') ToAddress, p.icode ItemCode, p.iname ItemName, p.cpartno PartNo, p.uom UOM, p.hsno HSN, p.indno as po_Mode, p.qtyord Order_Qty, p.irate ItemRate, p.taxrate TaxRate, iamount Item_Amt,p.taxamt taxamt, p.disctype Discount_Type" +
                                ", p.discrate Discount_Rate, p.discamt Discount_Amt, p.lineamount LineAmt,to_char(p.dlv_date, '" + sgen.Getsqldateformat() + "') Delivery_Date" +
                                ",p.gserchrg IGST, p.gloadchrg SGST, p.gamc CGST, p.basicamt BasicAmt, p.ginstlchrg GrossAmt, p.gtaxamt as Net_Amount from purchasesc p " +
                                "inner join clients_mst c on p.acode = c.vch_num and find_in_set(c.client_unit_id, p.client_unit_id)=1 and c.type = 'BCD' and substr(c.vch_num,0,3)='303' " +
                                "left join clients_mst sf on p.shipfrom = sf.vch_num and find_in_set(sf.client_unit_id, p.client_unit_id)=1 and sf.type = 'BCD' " +
                                "left join clients_mst st on p.shipto = st.vch_num and find_in_set(st.client_unit_id, p.client_unit_id)=1 and st.type = 'BCD' " +
                                "and substr(st.vch_num,0,3)='303' where p.client_unit_id = '" + unitid_mst + "' and p.type='BDP' and to_date(to_char(p.vch_DATE,'ddMMyyyy'),'ddMMyyyy') between to_date('" + year_from + "','" + sgen.Getsqldatetimeformat() + "') and to_date('" + year_to + "','" + sgen.Getsqldatetimeformat() + "') order by p.vch_num desc";
                            break;
                        case "ITEM":
                            if (param1 != null)
                            {
                                if (param1 != "")
                                {
                                    if (param1 != "") where = " and it.icode not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','").Trim().ToString() + "')";
                                }
                            }
                            string condi = "";
                            //cmd = "select it.icode||to_char(it.vch_date,'yyyymmdd')||it.type as fstr,it.icode as Icode,it.iname as Iname,it.cpartno Partno, " +
                            //"um.master_name as UOM,nvl(hsn.master_name,'-') as hsn,nvl(hsn.group_name,'0') taxrate,(case when it.tcs='Y' then nvl(hsn.col1,'0%') else '0%' end) tcsper,nvl(s.closing, '0') as qty_in_stock from item it " +
                            //"left join master_setting um on um.master_id = it.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, it.client_unit_id)= 1 " +
                            //"left join master_setting hsn on hsn.master_id = it.hsno and hsn.type = 'HSN' and find_in_set(hsn.client_unit_id, it.client_unit_id)= 1 " +
                            //"left join(select icode,client_unit_id,sum(op) op,sum(pktop) pktop,sum(qtyin) qtyin,sum(qtyout) out," +
                            //      "sum(op)+sum(qtyin)-sum(qtyout) closing from (select icode, client_unit_id, nvl(op_2019, 0) op," +
                            //      " nvl(pkt_2019, 0) pktop, 0 qtyin, 0 qtyout, 0 pktno from itbal union all select icode, client_unit_id, " +
                            //      "sum(to_number(qtyin)) - sum(to_number(qtyout)) op, sum((case when substr(type, 1, 1) in ('0', '1') then" +
                            //      " pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktop,sum(to_number(qtyin)) " +
                            //      "qtyin,sum(to_number(qtyout)) qtyout,0 pktno from itransaction where trim(store) = 'Y' and " +
                            //      "to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between " +
                            //      "to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and " +
                            //      "to_date('" + year_from.Split(' ')[0].Trim() + "','" + sgen.Getsqldateformat() + "')-1 group by icode,client_unit_id union all " +
                            //      "select icode,client_unit_id," +
                            //      "0 as op,0 as pktop,to_number(qtyin) qtyin,to_number(qtyout) qtyout,sum((case when substr(type, 1, 1) in " +
                            //      "('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktno from " +
                            //      "itransaction where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between " +
                            //      "to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and to_date('" + param2.Trim() + "','" + sgen.Getsqldateformat() + "')" +
                            //      " group by icode,client_unit_id," +
                            //      "to_number(qtyin),to_number(qtyout)) a group by icode, client_unit_id) s on it.icode = s.icode and it.client_unit_id = s.client_unit_id " +
                            //"where it.type = 'IT' and find_in_set(it.client_unit_id, '" + unitid_mst + "')=1 " + condi + " " + where + "";

                            cmd = "select it.icode||to_char(it.vch_date,'yyyymmdd')||it.type as fstr,it.icode as Icode,it.iname as Iname,it.cpartno Partno, " +
                            "um.master_name as UOM from item it left join master_setting um on um.master_id = it.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, it.client_unit_id)= 1 " +
                            "where it.type = 'IT' and find_in_set(it.client_unit_id, '" + unitid_mst + "')=1 " + condi + " " + where + "";

                            break;
                        case "PARTYFRM":
                        case "PARTYTO":
                            cmd = "select (a.vch_num|| to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.c_name as Name,a.addr address,a.pincode as Pincode,a.c_gstin as GSTIN,a.type_desc as Search_text,a.cpname as PerName,(case when a.cpcont='0000000000' then '-' else a.cpcont end) ContactNo,(case when a.cpemail='ab@ab.ab' then '-' else a.cpemail end) as Email,a.cpaddr as PerAddr from clients_mst a where a.type='BCD' and substr(a.vch_num,0,3)='303' and a.client_unit_id='" + unitid_mst + "'";
                            break;
                        case "CHRGS":
                            cmd = "select (master_id||to_char(vch_date,'yyyymmdd')||type) fstr,master_id DocNo,master_name Charge " +
                                "from master_setting where type='MR0' and find_in_set(client_unit_id,'" + unitid_mst + "')=1";
                            break;
                        case "RATE":
                            sgen.SetSession(MyGuid, "cust_portrno", param1.Trim());
                            cmd = "select (master_id||to_char(vch_date,'yyyymmdd')||type) fstr,master_id DocNo,group_name TaxRate " +
                                "from master_setting where type='HSN' and find_in_set(client_unit_id,'" + unitid_mst + "')=1";
                            break;
                    }
                    break;
                #endregion
                #region customer po approve
                case "cstpo_apr":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "PRINT":
                            cmd = "select distinct (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) as fstr,p.vch_num po_number,to_char(p.vch_date, '" + sgen.Getsqldateformat() + "') po_date,c.c_name as Party_Name," +
                               "c.c_gstin as Party_Gstin,c.addr as Party_Address from purchasesc p " +
                               "inner join clients_mst c on p.acode = c.vch_num and find_in_set(c.client_unit_id, p.client_unit_id)=1 and c.type = 'BCD' and substr(c.vch_num,0,3)='303' " +
                               "where p.client_unit_id = '" + unitid_mst + "'" +
                               " and p.type='BDP' and to_date(to_char(p.vch_DATE,'ddMMyyyy'),'ddMMyyyy') between to_date('" + year_from + "','" + sgen.Getsqldatetimeformat() + "') and to_date('" + year_to + "','" + sgen.Getsqldatetimeformat() + "') order by p.vch_num desc";
                            break;
                        case "INPO":
                            cmd = "select distinct (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) as fstr,p.vch_num po_number,to_char(p.vch_date, '" + sgen.Getsqldateformat() + "') po_date,c.c_name as Party_Name," +
                                "c.c_gstin as Party_Gstin,c.addr as Party_Address, p.icode ItemCode, p.iname ItemName, p.cpartno PartNo, p.uom UOM, p.hsno HSN, p.indno as po_Mode, p.qtyord Order_Qty, p.irate ItemRate, p.taxrate TaxRate, iamount Item_Amt,p.taxamt taxamt, p.disctype Discount_Type" +
                                ", p.discrate Discount_Rate, p.discamt Discount_Amt, p.lineamount LineAmt,to_char(p.dlv_date, '" + sgen.Getsqldateformat() + "') Delivery_Date" +
                                ",p.gserchrg IGST, p.gloadchrg SGST, p.gamc CGST, p.basicamt BasicAmt, p.ginstlchrg GrossAmt, p.gtaxamt as Net_Amount,nvl(sf.c_name, '-') as From_Name,nvl(sf.c_gstin, '-') as From_Gstin,nvl(sf.addr, '-') FromAddress," +
                                "nvl(st.c_name, '-') as To_Name,nvl(st.c_gstin, '-') as To_Gstin,nvl(st.addr, '-') ToAddress from purchasesc p " +
                                "inner join clients_mst c on p.acode = c.vch_num and find_in_set(c.client_unit_id, p.client_unit_id)=1 and c.type = 'BCD' and substr(c.vch_num,0,3)='303' " +
                                "left join clients_mst sf on p.shipfrom = sf.vch_num and find_in_set(sf.client_unit_id, p.client_unit_id)=1 and sf.type = 'BCD' " +
                                "left join clients_mst st on p.shipto = st.vch_num and find_in_set(st.client_unit_id, p.client_unit_id)=1 and st.type = 'BCD' " +
                                "and substr(st.vch_num,0,3)='303' where p.client_unit_id = '" + unitid_mst + "' and p.type='BDP' and p.pur_type='P' and to_date(to_char(p.vch_DATE,'ddMMyyyy'),'ddMMyyyy') between to_date('" + year_from + "','" + sgen.Getsqldatetimeformat() + "') and to_date('" + year_to + "','" + sgen.Getsqldatetimeformat() + "') order by p.vch_num desc";
                            break;
                        case "ACPO":
                            cmd = "select distinct (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) as fstr,p.vch_num po_number,to_char(p.vch_date, '" + sgen.Getsqldateformat() + "') po_date,c.c_name as Party_Name," +
                                "c.c_gstin as Party_Gstin,c.addr as Party_Address, p.icode ItemCode, p.iname ItemName, p.cpartno PartNo, p.uom UOM, p.hsno HSN, p.indno as po_Mode, p.qtyord Order_Qty, p.irate ItemRate, p.taxrate TaxRate, iamount Item_Amt,p.taxamt taxamt, p.disctype Discount_Type" +
                                ", p.discrate Discount_Rate, p.discamt Discount_Amt, p.lineamount LineAmt,to_char(p.dlv_date, '" + sgen.Getsqldateformat() + "') Delivery_Date" +
                                ",p.gserchrg IGST, p.gloadchrg SGST, p.gamc CGST, p.basicamt BasicAmt, p.ginstlchrg GrossAmt, p.gtaxamt as Net_Amount,nvl(sf.c_name, '-') as From_Name,nvl(sf.c_gstin, '-') as From_Gstin,nvl(sf.addr, '-') FromAddress," +
                                "nvl(st.c_name, '-') as To_Name,nvl(st.c_gstin, '-') as To_Gstin,nvl(st.addr, '-') ToAddress from purchasesc p " +
                                "inner join clients_mst c on p.acode = c.vch_num and find_in_set(c.client_unit_id, p.client_unit_id)=1 and c.type = 'BCD' and substr(c.vch_num,0,3)='303' " +
                                "left join clients_mst sf on p.shipfrom = sf.vch_num and find_in_set(sf.client_unit_id, p.client_unit_id)=1 and sf.type = 'BCD' " +
                                "left join clients_mst st on p.shipto = st.vch_num and find_in_set(st.client_unit_id, p.client_unit_id)=1 and st.type = 'BCD' " +
                                "and substr(st.vch_num,0,3)='303' where p.client_unit_id = '" + unitid_mst + "' and p.type='BDP' and p.pur_type='A' and to_date(to_char(p.vch_DATE,'ddMMyyyy'),'ddMMyyyy') between to_date('" + year_from + "','" + sgen.Getsqldatetimeformat() + "') and to_date('" + year_to + "','" + sgen.Getsqldatetimeformat() + "') order by p.vch_num desc";
                            break;
                        case "REJPO":
                            cmd = "select distinct (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) as fstr,p.vch_num po_number,to_char(p.vch_date, '" + sgen.Getsqldateformat() + "') po_date,c.c_name as Party_Name," +
                                "c.c_gstin as Party_Gstin,c.addr as Party_Address, p.icode ItemCode, p.iname ItemName, p.cpartno PartNo, p.uom UOM, p.hsno HSN, p.indno as po_Mode, p.qtyord Order_Qty, p.irate ItemRate, p.taxrate TaxRate, iamount Item_Amt,p.taxamt taxamt, p.disctype Discount_Type" +
                                ", p.discrate Discount_Rate, p.discamt Discount_Amt, p.lineamount LineAmt,to_char(p.dlv_date, '" + sgen.Getsqldateformat() + "') Delivery_Date" +
                                ",p.gserchrg IGST, p.gloadchrg SGST, p.gamc CGST, p.basicamt BasicAmt, p.ginstlchrg GrossAmt, p.gtaxamt as Net_Amount,nvl(sf.c_name, '-') as From_Name,nvl(sf.c_gstin, '-') as From_Gstin,nvl(sf.addr, '-') FromAddress," +
                                "nvl(st.c_name, '-') as To_Name,nvl(st.c_gstin, '-') as To_Gstin,nvl(st.addr, '-') ToAddress from purchasesc p " +
                                "inner join clients_mst c on p.acode = c.vch_num and find_in_set(c.client_unit_id, p.client_unit_id)=1 and c.type = 'BCD' and substr(c.vch_num,0,3)='303' " +
                                "left join clients_mst sf on p.shipfrom = sf.vch_num and find_in_set(sf.client_unit_id, p.client_unit_id)=1 and sf.type = 'BCD' " +
                                "left join clients_mst st on p.shipto = st.vch_num and find_in_set(st.client_unit_id, p.client_unit_id)=1 and st.type = 'BCD' " +
                                "and substr(st.vch_num,0,3)='303' where p.client_unit_id = '" + unitid_mst + "' and p.type='BDP' and p.pur_type='R' and to_date(to_char(p.vch_DATE,'ddMMyyyy'),'ddMMyyyy') between to_date('" + year_from + "','" + sgen.Getsqldatetimeformat() + "') and to_date('" + year_to + "','" + sgen.Getsqldatetimeformat() + "') order by p.vch_num desc";
                            break;
                        case "CHRGS":
                            cmd = "select (master_id||to_char(vch_date,'yyyymmdd')||type) fstr,master_id DocNo,master_name Charge " +
                                "from master_setting where type='MR0' and find_in_set(client_unit_id,'" + unitid_mst + "')=1";
                            break;
                        case "RATE":
                            sgen.SetSession(MyGuid, "sortrno", param1.Trim());
                            cmd = "select (master_id||to_char(vch_date,'yyyymmdd')||type) fstr,master_id DocNo,group_name TaxRate " +
                                "from master_setting where type='HSN' and find_in_set(client_unit_id,'" + unitid_mst + "')=1";
                            break;
                    }
                    break;
                #endregion
                #region quot
                case "quot":
                    switch (btnval.ToUpper())
                    {
                        case "EDIT":
                        case "PRINT":
                            cmd = "select distinct (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.pur_type) as fstr,p.vch_num Doc_number,to_char(p.vch_date, '" + sgen.Getsqldateformat() + "') Doc_date," +
                                "c.c_name as Party_Name,c.c_gstin as Party_Gstin,c.addr as Party_Address from itransactionc p " +
                                "inner join clients_mst c on p.acode = c.vch_num and c.type = 'BCD' and find_in_set(c.client_unit_id, p.client_unit_id)=1 " +
                                "where p.client_unit_id = '" + unitid_mst + "' and SUBSTR(p.type,1,1)= '4' and pur_type = 'QTN' and to_date(to_char(p.vch_DATE,'ddMMyyyy'),'ddMMyyyy') between to_date('" + year_from + "','" + sgen.Getsqldatetimeformat() + "') and to_date('" + year_to + "','" + sgen.Getsqldatetimeformat() + "') order by p.vch_num desc";
                            break;
                        case "VIEW":
                            cmd = "select distinct (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.pur_type) as fstr,p.vch_num Doc_number,to_char(p.vch_date, '" + sgen.Getsqldateformat() + "') Doc_date,c.c_name as Party_Name,c.c_gstin as Party_Gstin,c.addr as Party_Address,nvl(sf.c_name, '-') as From_Name,nvl(sf.c_gstin, '-') as From_Gstin,tp.master_name as Against,nvl(sf.addr, '-') FromAddress,nvl(st.c_name, '-') as To_Name,nvl(st.c_gstin, '-') as To_Gstin,nvl(st.addr, '-') ToAddress,p.pur_type Purchase_Type, p.icode ItemCode, p.iname ItemName,p.cpartno PartNo, p.uom UOM, p.hsno HSN,p.qtystk Stock_Qty, p.ordqty Order_Qty, p.irate ItemRate, p.taxrate TaxRate, iamount Item_Amt,p.taxamt taxamt, p.disctype Discount_Type, p.discrate Discount_Rate, p.discamt Discount_Amt,p.lineamount LineAmt,p.gserchrg IGST, p.gloadchrg SGST, p.gamc CGST, p.basicamt BasicAmt, p.ginstlchrg GrossAmt, p.gtaxamt as Net_Amount from itransactionc p " +
                                "inner join clients_mst c on p.acode = c.vch_num and c.type = 'BCD' and find_in_set(c.client_unit_id, p.client_unit_id)=1 " +
                                "inner join master_setting tp on tp.master_id=p.type and tp.type='KPO' and substr(tp.master_id,1,1)='4' and find_in_set(tp.client_unit_id,p.client_unit_id)=1 " +
                                "left join clients_mst sf on p.shipfrom = sf.vch_num and find_in_set(sf.client_unit_id, p.client_unit_id)=1 and sf.type = 'BCD' " +
                                "left join clients_mst st on p.shipto = st.vch_num and find_in_set(st.client_unit_id, p.client_unit_id)=1 and st.type = 'BCD' " +
                                "where p.client_unit_id = '" + unitid_mst + "' and SUBSTR(p.type,1,1)= '4' and pur_type = 'QTN' and to_date(to_char(p.vch_DATE,'ddMMyyyy'),'ddMMyyyy') between to_date('" + year_from + "','" + sgen.Getsqldatetimeformat() + "') and to_date('" + year_to + "','" + sgen.Getsqldatetimeformat() + "') order by p.vch_num desc";
                            break;
                        case "NEW":
                            cmd = "select master_id||to_char(vch_date,'yyyymmdd')||type fstr,master_id as Type,master_name Name " +
                            "from master_setting where find_in_set(client_unit_id,'" + unitid_mst + "')=1 and type='KPO' and substr(master_id,1,1)='4'";
                            break;
                        case "PARTY":
                            cmd = "select a.vch_num|| to_char(a.vch_date,'yyyymmdd')||a.type as fstr,a.vch_num as Party_code,a.c_name as Name,a.addr address,a.pincode as Pincode,a.c_gstin as GSTIN," +
                                "a.type_desc as Search_text,a.cpname as PerName,(case when a.cpcont='0000000000' then '-' else a.cpcont end) ContactNo,(case when a.cpaltcont='0000000000' then '-' else a.cpaltcont end) as AltContactNo,(case when a.cpemail='ab@ab.ab' then '-' else a.cpemail end) as Email,a.cpaddr as PerAddr " +
                                "from clients_mst a where find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 AND a.type='BCD' and substr(a.vch_num,0,3)='303' ";
                            break;
                        case "ITEM":
                            if (param1 != null)
                            {
                                if (param1 != "")
                                {
                                    if (param1 != "") where = " and it.icode not in ('" + param1.Trim().TrimEnd(',').Replace(",", "','").Trim().ToString() + "')";
                                }
                            }
                            cmd = "select it.icode||to_char(it.vch_date,'yyyymmdd')||it.type as fstr,it.icode as Icode,it.iname as Iname,it.cpartno Partno, " +
                                "um.master_name as UOM,nvl(hsn.master_name,'-') as hsn,nvl(hsn.group_name,'0') taxrate,nvl(s.closing, '0') as qty_in_stock from item it left join master_setting um on " +
                                "um.master_id = it.uom and um.type = 'UMM' and find_in_set(um.client_unit_id, it.client_unit_id)= 1 left " +
                                "join master_setting hsn on hsn.master_id = it.hsno and hsn.type = 'HSN' and " +
                                "find_in_set(hsn.client_unit_id, it.client_unit_id)= 1 left join(select icode,client_unit_id,sum(op) op,sum(pktop) pktop,sum(qtyin) qtyin,sum(qtyout) out," +
                                      "sum(op)+sum(qtyin)-sum(qtyout) closing from (select icode, client_unit_id, nvl(op_2019, 0) op," +
                                      " nvl(pkt_2019, 0) pktop, 0 qtyin, 0 qtyout, 0 pktno from itbal union all select icode, client_unit_id, " +
                                      "sum(to_number(qtyin)) - sum(to_number(qtyout)) op, sum((case when substr(type, 1, 1) in ('0', '1') then" +
                                      " pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktop,sum(to_number(qtyin)) " +
                                      "qtyin,sum(to_number(qtyout)) qtyout,0 pktno from itransaction where trim(store) = 'Y' and " +
                                      "to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and " +
                                      "to_date('" + year_from.Split(' ')[0].Trim() + "','" + sgen.Getsqldateformat() + "')-1 group by icode,client_unit_id union all select icode,client_unit_id," +
                                      "0 as op,0 as pktop,to_number(qtyin) qtyin,to_number(qtyout) qtyout,sum((case when substr(type, 1, 1) in " +
                                      "('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktno from " +
                                      "itransaction where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between " +
                                      "to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and to_date('" + param2.Trim() + "','" + sgen.Getsqldateformat() + "') group by icode,client_unit_id," +
                                      "to_number(qtyin),to_number(qtyout)) a group by icode, client_unit_id) s on it.icode = s.icode " +
                                "and find_in_set(it.client_unit_id, s.client_unit_id)=1 where find_in_set(it.client_unit_id, '" + unitid_mst + "')=1  and it.type = 'IT' and " +
                                "it.sale = 'Y' " + where + "";
                            break;
                        case "PARTYFRM":
                        case "PARTYTO":
                            cmd = "select (a.vch_num|| to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.c_name as Name,a.addr address,a.pincode as Pincode,a.c_gstin as GSTIN,a.type_desc as Search_text," +
                                "a.cpname as PerName,(case when a.cpcont='0000000000' then '-' else a.cpcont end) ContactNo,(case when a.cpemail='ab@ab.ab' then '-' else a.cpemail end) as Email,a.cpaddr as PerAddr from clients_mst a " +
                                "where find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 and a.type='BCD' and substr(a.vch_num,0,3)='303'";
                            break;
                        case "CHRGS":
                            cmd = "select (master_id||to_char(vch_date,'yyyymmdd')||type) fstr,master_id DocNo,master_name Charge " +
                                "from master_setting where type='MR0' and find_in_set(client_unit_id,'" + unitid_mst + "')=1";
                            break;
                        case "RATE":
                            sgen.SetSession(MyGuid, "qtnrno", param1.Trim());
                            cmd = "select (master_id||to_char(vch_date,'yyyymmdd')||type) fstr,master_id DocNo,master_name as hsncode,group_name TaxRate " +
                                "from master_setting where type='HSN' and find_in_set(client_unit_id,'" + unitid_mst + "')=1";
                            break;
                    }
                    break;
                    #endregion
            }
            sgen.open_grid(title, cmd, sgen.Make_int(seektype));
            // footable asp shiv
            //ViewBag.pageurl = sgen.GetSession(MyGuid,"pageurl").ToString();
        }
        #endregion
        public ActionResult Tax_invoice()
        {
            //if (userCode.Equals("")) Response.Redirect("~/erp/login_main.aspx");
            int year = 2019, month = 4;
            DateTime date = new DateTime();
            DateTime firstMonthDay = new DateTime(year, month, 1);
            int lastdate = DateTime.DaysInMonth(year, month);
            date = new DateTime(year, month, lastdate);
            DateTime firstMonthMonday = firstMonthDay.AddDays((DayOfWeek.Monday + 7 - firstMonthDay.DayOfWeek) % 7);
            if (firstMonthMonday > date)
            {
                firstMonthDay = firstMonthDay.AddMonths(-1);
                firstMonthMonday = firstMonthDay.AddDays((DayOfWeek.Monday + 7 - firstMonthDay.DayOfWeek) % 7);
            }
            int weeks = (date - firstMonthMonday).Days / 7 + 1;
            return View();
        }
        //==================Inv Temp============
        #region
        public ActionResult inv_temp()
        {
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            FillMst(MyGuid);
            chkRef();
            List<Tmodelmain> model = new List<Tmodelmain>();
            Tmodelmain tm1 = new Tmodelmain();
            if (mid_mst.Trim().Equals("21001.8")) { ViewBag.Title = "INVOICE TEMPLATE"; }
            tm1.Col10 = mid_mst.Trim();
            sgen.SetSession(MyGuid, "TR_MID", mid_mst.Trim());
            model.Add(tm1);
            return View(model);
        }
        [HttpPost]
        public ActionResult inv_temp(List<Tmodelmain> model, string command)
        {
            userCode = sgen.GetCookie(MyGuid, "userCode");
            tab_name = "emp_master";
            tab_name1 = "file_tab";
            type_desc = "Employee Detail";
            type = "EMP";
            DataTable dtr = new DataTable();
            if (model[0].Col10.Trim().Equals("21001.8"))
            {
                if (dtr.Rows.Count < 1)
                {
                    DataRow dr = dtr.NewRow();
                    dtr.Columns.Add("temp", typeof(string));
                    dr["temp"] = "temp";
                    dtr.Rows.Add(dr);
                }
                if (command == "Template 1") { sgen.open_report_bydt_xml(userCode, dtr, "gst_inv1", "GST Invoice 1"); }
                if (command == "Template 2") { sgen.open_report_bydt_xml(userCode, dtr, "gst_inv2", "GST Invoice 2"); }
                if (command == "Template 3") { sgen.open_report_bydt_xml(userCode, dtr, "gst_inv3", "GST Invoice 3"); }
                if (command == "Template 4") { sgen.open_report_bydt_xml(userCode, dtr, "gst_inv4", "GST Invoice 4"); }
            }
            //ViewBag.scripCall = "OpenSingle('../../../../../schoolReports_Rpts/Filter_Report_xml.aspx','95%','900px','Reports');";
            ViewBag.scripCall += "showRptnew('Report');";

            return View(model);
        }
        #endregion
        //===========billing master=========================
        #region billingmaster
        public ActionResult billing_master()
        {
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            FillMst(MyGuid);
            chkRef();
            List<Tmodelmain> model = new List<Tmodelmain>();
            List<SelectListItem> mod1 = new List<SelectListItem>();
            Tmodelmain tm1 = new Tmodelmain();
            ViewBag.vnew = "";
            ViewBag.vedit = "";
            ViewBag.vsave = "disabled='disabled'";
            ViewBag.vsavenew = "disabled='disabled'";
            ViewBag.scripCall = "disableForm();";
            mid_mst = EncryptDecrypt.Decrypt(Request.QueryString["mid"]);
            if (mid_mst.Trim().Equals("21001.2") || mid_mst.Trim().Equals("17001.2") || mid_mst.Trim().Equals("28004.6") || mid_mst.Trim().Equals("41005.6"))
            {
                tm1.Col3 = "master_setting";
                tm1.Col8 = "HSN";
                tm1.Col9 = "HSN/SAC CODE MASTER";
                tm1.Col14 = "HSN/SAC Code";
                tm1.Col18 = " and find_in_set(client_unit_id,'" + unitid_mst + "')=1";
            }
            tm1.Col10 = mid_mst.Trim();
            tm1.Col13 = "Save";
            tm1.Col100 = "Save & New";
            tm1.Col121 = "S";
            tm1.Col122 = "<u>S</u>ave";
            tm1.Col123 = "Save & Ne<u>w</u>";
            tm1.Col20 = MyGuid.Trim();
            sgen.SetSession(MyGuid, "tr_type", tm1.Col8);
            sgen.SetSession(MyGuid, "TR_MID", mid_mst.Trim());

            ViewBag.showextend = "N";

            try
            {
                if (sgen.Make_int(sgen.GetSession(MyGuid, "unitcnt").ToString()) > 1) ViewBag.showextend = "Y";
            }
            catch (Exception err)
            {
                mq = "select count(*) unitcnt from company_unit_profile where unit_status = '1' and company_profile_id='" + clientid_mst + "'";
                mq = sgen.seekval(userCode, mq, "unitcnt");
                sgen.SetSession(MyGuid, "unitcnt", mq);
                if (sgen.Make_int(sgen.GetSession(MyGuid, "unitcnt").ToString()) > 1) ViewBag.showextend = "Y";
            }
            model.Add(tm1);
            return View(model);
        }
        public List<Tmodelmain> newbilling_master(List<Tmodelmain> model)
        {
            try
            {
                sgen.SetSession(MyGuid, "EDMODE", "N");
                ViewBag.vnew = "disabled='disabled'";
                ViewBag.vedit = "disabled='disabled'";
                ViewBag.vsave = "";
                ViewBag.vsavenew = "";
                ViewBag.scripCall = "enableForm();";
                mq = "select max(to_number(master_id)) as auto_genid from " + tab_name + " where type in ('" + type + "','DD" + type + "')";
                master_id = sgen.genNo(userCode, mq, 3, "auto_genid");
                model[0].Col11 = master_id;
                model[0].Col17 = "Active";
                model[0].Col12 = "0";
                model[0].Col22 = "0";
                model[0].Col23 = "0";
                model[0].Col24 = "0";
                model[0].Col25 = "0";
                model[0].Col26 = "0";
                model[0].Col27 = "0";
                model[0].Col28 = "0";

                mq = "select param1 from controls where type='CTL' and m_module3='-' and id in ('000008','000009','000010')";
                DataTable dtm = sgen.getdata(userCode, mq);
                if (dtm.Rows.Count > 0)
                {
                    model[0].Chk9 = dtm.Rows[0]["param1"].ToString() == "Y" ? true : false;//Social Welfare Surcharge
                    model[0].Chk10 = dtm.Rows[1]["param1"].ToString() == "Y" ? true : false;//Anti-dumping Duty
                    model[0].Chk11 = dtm.Rows[2]["param1"].ToString() == "Y" ? true : false;//Safeguard Duty
                }
            }
            catch (Exception ex) { sgen.showmsg(1, ex.Message.ToString().Replace("'", ""), 0); }
            return model;
        }
        [HttpPost]
        public ActionResult billing_master(List<Tmodelmain> model, string command, HttpPostedFileBase upd1)
        {
            FillMst(model[0].Col20);
            var tmodel = model.FirstOrDefault();
            type = model[0].Col8;
            tab_name = model[0].Col3;
            where = model[0].Col18;
            if (command == "New")
            {
                try
                {
                    //sgen.SetSession(MyGuid, "EDMODE", "N");
                    //ViewBag.vnew = "disabled='disabled'";
                    //ViewBag.vedit = "disabled='disabled'";
                    //ViewBag.vsave = "";
                    //ViewBag.vsavenew = "";
                    //ViewBag.scripCall = "enableForm();";
                    //mq = "select max(to_number(master_id)) as auto_genid from " + tab_name + " where type in ('" + type + "','DD" + type + "')";
                    //master_id = sgen.genNo(userCode, mq, 3, "auto_genid");
                    //model[0].Col11 = master_id;
                    //model[0].Col17 = "Active";
                    //model[0].Col12 = "0";
                    //model[0].Col22 = "0";
                    //model[0].Col23 = "0";
                    //model[0].Col24 = "0";
                    //model[0].Col25 = "0";
                    model = newbilling_master(model);
                }
                catch (Exception ex) { sgen.showmsg(1, ex.Message.ToString().Replace("'", ""), 0); }
            }
            else if (command == "Cancel")
            {
                return RedirectToAction(actionName, new { @m_id = EncryptDecrypt.Encrypt(model[0].Col20), @mid = EncryptDecrypt.Encrypt(model[0].Col10) });
            }
            else if (command == "Callback")
            {
                model = StartCallback(model);
            }
            else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
            {
                try
                {
                    tmodel = model.FirstOrDefault();
                    string currdate = sgen.server_datetime(userCode);
                    ent_date = currdate;
                    // shiv
                    DataTable dtstr = cmd_Fun.GetStructure(userCode, tab_name);
                    if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                    {
                        mq1 = " and master_id<>'" + tmodel.Col11.Trim() + "'";
                        isedit = true;
                        id = tmodel.Col11;
                        vch_num = tmodel.Col21;
                    }
                    else
                    {
                        mq1 = "";
                        mq = "select max(to_number(vch_num)) as auto_genid from " + tab_name + " where type in ('" + type + "','DD" + type + "')";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        string mid = "select max(to_number(master_id)) as auto_genid from " + tab_name + " where type in ('" + type + "','DD" + type + "')";
                        id = sgen.genNo(userCode, mid, 3, "auto_genid");
                        isedit = false;
                    }
                    mq = sgen.seekval(userCode, "Select trim(master_name) master_name from " + tab_name + " where type in ('" + type + "','DD" + type + "') " +
                          "and upper(trim(master_name))='" + tmodel.Col15.Trim().ToUpper() + "' " + mq1 + "", "master_name");
                    if (!mq.Trim().Equals("0"))
                    {
                        ViewBag.scripCall += "showmsgJS(3, 'You already saved This', 2);";
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                        return View(model);
                    }
                    if (model[0].Chk12 == true)
                    {
                        DataTable dtk = sgen.getdata(userCode, "select master_name name,date_of_issue deflt from master_setting where type in ('" + type + "','DD" + type + "') " +
                            "and find_in_set(client_unit_id,'" + unitid_mst + "')=1 " + mq1 + " and date_of_issue='Y'");
                        if (dtk.Rows.Count > 0)
                        {
                            ViewBag.scripCall += "showmsgJS(1, 'You cannot create two default record in same unit,please remove <u><b>" + dtk.Rows[0]["name"].ToString() + "</b></u> as default.', 2);";
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            model[0].Chk1 = false;
                            return View(model);
                        }
                    }
                    #region dtstr 
                    if (model[0].Col17.Trim() == "Inactive")
                    {
                        type = "DD" + type;
                        status = "N";
                    }
                    else status = "Y";
                    DataRow dr = dtstr.NewRow();
                    dr["vch_num"] = vch_num.Trim();
                    dr["vch_date"] = ent_date;
                    dr["type"] = type.Trim();
                    dr["master_id"] = id.Trim();
                    dr["master_name"] = model[0].Col15.Trim();
                    dr["Status"] = status.Trim();
                    dr["content"] = model[0].Col16.Trim();
                    dr["group_name"] = model[0].Col12;
                    dr["client_name"] = model[0].Col22;
                    dr["GROUP_ID"] = model[0].Col23;
                    dr["QUALIFICATION_TYPE"] = model[0].Col24;
                    dr["SECTIONTYPE"] = model[0].Col25;
                    dr["GROUP_REFRENCE_NUMBER"] = model[0].Col26;
                    dr["OPTIONAL_SUBJECT"] = model[0].Chk1 == true ? "Y" : "N";
                    dr["TEACHER_CATEGORY"] = model[0].Chk2 == true ? "Y" : "N";
                    dr["AUTH_SIGN_FILENAME"] = model[0].Chk3 == true ? "Y" : "N";
                    dr["CLIENT_GSTIN"] = model[0].Chk4 == true ? "Y" : "N";
                    dr["CONT_PERSON_EMAIL"] = model[0].Chk5 == true ? "Y" : "N";
                    dr["SUBJECT_STRENGTH"] = model[0].Chk6 == true ? "Y" : "N";
                    dr["SUBJECTID"] = model[0].Chk7 == true ? "Y" : "N";
                    //dr["SECTION_STRENGTH"] = model[0].Chk8 == true ? "Y" : "N";
                    dr["SECTIONID"] = model[0].Chk9 == true ? "Y" : "N";
                    dr["CLASSID"] = model[0].Chk10 == true ? "Y" : "N";
                    dr["CONT_PERSON_NAME"] = model[0].Chk11 == true ? "Y" : "N";
                    dr["heading"] = model[0].Col27;
                    dr["master_type"] = model[0].Chk8 == true ? "Y" : "N";
                    dr["unit_name"] = model[0].Chk13 == true ? "Y" : "N";
                    dr["date7"] = sgen.Make_date_S(model[0].Col41);
                    dr["col1"] = model[0].Col28;
                    dr["col2"] = model[0].Chk14 == true ? "Y" : "N";
                    dr["AUTH_SIGN_filepath"] = model[0].Chk15 == true ? "Y" : "N";
                    dr["date8"] = sgen.Make_date_S(model[0].Col42);
                    dr["date1"] = sgen.Make_date_S(model[0].Col35);
                    dr["date2"] = sgen.Make_date_S(model[0].Col36);
                    dr["date3"] = sgen.Make_date_S(model[0].Col37);
                    dr["date4"] = sgen.Make_date_S(model[0].Col38);
                    dr["date5"] = sgen.Make_date_S(model[0].Col39);
                    dr["date6"] = sgen.Make_date_S(model[0].Col40);
                    dr["date_of_issue"] = model[0].Chk12 == true ? "Y" : "N";
                    if (isedit)
                    {
                        dr["master_entby"] = model[0].Col1;
                        dr["master_entdate"] = model[0].Col2;
                        dr["client_id"] = model[0].Col4;
                        dr["client_unit_id"] = model[0].Col5;
                        dr["rec_id"] = model[0].Col7;
                        dr["master_editby"] = userid_mst;
                        dr["master_editdate"] = currdate;
                    }
                    else
                    {
                        dr["rec_id"] = "0";
                        dr["master_entby"] = userid_mst;
                        dr["master_entdate"] = currdate;
                        dr["master_editby"] = "-";
                        dr["master_editdate"] = currdate;
                        dr["client_id"] = clientid_mst;
                        dr["client_unit_id"] = unitid_mst;
                    }
                    dtstr.Rows.Add(dr);
                    #endregion
                    res = sgen.Update_data_fast1(userCode, dtstr, tab_name, tmodel.Col6, isedit);
                    if (res == true)
                    {
                        //sgen.SetSession(MyGuid, "hsn", null);                        
                        //DataTable dtu = sgen.getdata(userCode, "select distinct cup_id from company_unit_profile");
                        //for (int k = 0; k < dtu.Rows.Count; k++)
                        //{
                        //    HttpContext.Application["hsn_" + dtu.Rows[k]["cup_id"].ToString()] = null;
                        //}

                        //foreach (var key in HttpContext.Application.Keys)
                        //{
                        //    if (key.ToString().ToLower().StartsWith("hsn_")) HttpContext.Application[key.ToString()] = null;
                        //}

                        List<string> apps = new List<string>();
                        foreach (var key in HttpContext.Application.Keys)
                        {
                            if (key.ToString().ToUpper().Contains("_U_" + userCode + ""))
                            {
                                apps.Add(key.ToString());
                            }
                        }
                        foreach (var ap in apps)
                        {
                            HttpContext.Application[ap.ToString()] = null;
                        }


                        model = new List<Tmodelmain>();
                        model.Add(new Tmodelmain
                        {
                            Col3 = tmodel.Col3,
                            Col8 = tmodel.Col8,
                            Col9 = tmodel.Col9,
                            Col10 = tmodel.Col10,
                            Col13 = "Save",
                            Col100 = "Save & New",
                            Col121 = "S",
                            Col122 = "<u>S</u>ave",
                            Col123 = "Save & Ne<u>w</u>",
                            Col14 = tmodel.Col14,
                            Col18 = tmodel.Col18,
                            Col20 = tmodel.Col20
                        });
                        if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                        {
                            try
                            {
                                if (sgen.Make_int(sgen.GetSession(MyGuid, "unitcnt").ToString()) > 1) ViewBag.showextend = "Y";
                            }
                            catch (Exception err)
                            {
                                mq = "select count(*) unitcnt from company_unit_profile where unit_status = '1' and company_profile_id='" + clientid_mst + "'";
                                mq = sgen.seekval(userCode, mq, "unitcnt");
                                sgen.SetSession(MyGuid, "unitcnt", mq);
                                if (sgen.Make_int(sgen.GetSession(MyGuid, "unitcnt").ToString()) > 1) ViewBag.showextend = "Y";
                            }

                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                        }
                        else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                        {
                            try
                            {
                                model = newbilling_master(model);
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                            }
                            catch (Exception ex)
                            {
                                ViewBag.scripCall += "mytoast('error', 'toast-top-right', '" + ex.Message.ToString().Replace("'", "").Trim() + "');";
                            }
                        }
                    }
                    else { ViewBag.scripCall = "showmsgJS(3, 'Record Not Saved', 1);"; }
                }
                catch (Exception ex) { sgen.showmsg(1, ex.Message.ToString().Replace("'", ""), 0); }
            }
            else if (command == "Import")
            {
                HttpPostedFileBase file1 = upd1;
                DataTable dt = new DataTable();
                if (file1.ContentLength > 1)
                {
                    string ext = Path.GetExtension(file1.FileName).ToLower();
                    if (ext == ".csv")
                    {
                        string filesavepath = AppDomain.CurrentDomain.BaseDirectory + "\\Uploads\\" + cg_com_name.Replace(" ", "")
                            + "\\file" + DateTime.Now.ToString("ddMMyyyyhhmmfff") + ext;
                        file1.SaveAs(filesavepath);
                        // Read sample data from CSV file
                        int i = 0;
                        using (CsvFileReader reader = new CsvFileReader(filesavepath))
                        {
                            CsvRow row = new CsvRow();
                            while (reader.ReadRow(row))
                            {
                                DataRow dr = dt.NewRow();
                                for (int c = 0; c < row.Count; c++)
                                {
                                    if (i == 0) { dt.Columns.Add(row[c].ToString()); }
                                    else { dr[c] = row[c].ToString(); }
                                    //if (c > dt.Columns.Count) break;                                                                 
                                }
                                i++;
                                dt.Rows.Add(dr);
                            }
                        }
                    }
                    try
                    {
                        dt.Rows[0].Delete();
                        string currdate = sgen.server_datetime(userCode);
                        ent_date = currdate;
                        for (int k = 0; k < dt.Rows.Count; k++)
                        {
                            mq = sgen.seekval(userCode, "Select master_name from " + tab_name + " where type in ('" + type + "','DD" + type + "') " + where + " " +
                                "and upper(master_name)='" + dt.Rows[k][0].ToString() + "'", "master_name");
                            if (!mq.Trim().Equals("0"))
                            {
                                ViewBag.scripCall += "showmsgJS(3, 'You already have " + dt.Rows[k][0].ToString() + " hsncode saved', 2);";
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                                return View(model);
                            }
                        }
                        DataTable dataTable = cmd_Fun.GetStructure(userCode, model[0].Col3.Trim());
                        int inc = 0, inc1 = 0;
                        mq = "select max(to_number(vch_num)) as auto_genid from " + tab_name + " where type in ('" + type + "','DD" + type + "')" + where + "";
                        inc = sgen.Make_int(sgen.genNo(userCode, mq, 6, "auto_genid"));
                        string mid = "select max(to_number(master_id)) as auto_genid from " + tab_name + " where type in ('" + type + "','DD" + type + "')" + where + "";
                        inc1 = sgen.Make_int(sgen.genNo(userCode, mid, 3, "auto_genid"));
                        for (int i = 0; i < dt.Rows.Count; i++)
                        {
                            DataRow dr = dataTable.NewRow();
                            if (i == 0)
                            {
                                inc = inc + i;
                                inc1 = inc1 + i;
                            }
                            else
                            {
                                inc = inc + 1;
                                inc1 = inc1 + 1;
                            }
                            vch_num = sgen.padlc(inc, 6);
                            id = sgen.padlc(inc, 3);
                            dr["vch_num"] = vch_num.Trim();
                            dr["vch_date"] = ent_date;
                            dr["type"] = type.Trim();
                            dr["master_id"] = id.Trim();
                            dr["master_name"] = dt.Rows[i]["HSN_CODE"].ToString();
                            dr["Status"] = "Y";
                            dr["content"] = dt.Rows[i]["DESCRIPTION"].ToString();
                            dr["group_name"] = dt.Rows[i]["GST_RATE"].ToString();
                            dr["client_name"] = dt.Rows[i]["GST_CESS"].ToString();
                            dr["GROUP_ID"] = dt.Rows[i]["BCD_RATE"].ToString();
                            dr["QUALIFICATION_TYPE"] = dt.Rows[i]["SOCIAL_WELFARE_SURCHARGE"].ToString();
                            dr["SECTIONTYPE"] = dt.Rows[i]["ANTI_DUMPING_DUTY"].ToString();
                            dr["GROUP_REFRENCE_NUMBER"] = dt.Rows[i]["SAFEGUARD_DUTY"].ToString();
                            if (!dt.Rows[i]["GST_RATE"].ToString().Contains("%")) dr["group_name"] = dt.Rows[i]["GST_RATE"].ToString() + "%";
                            if (!dt.Rows[i]["GST_CESS"].ToString().Contains("%")) dr["client_name"] = dt.Rows[i]["GST_CESS"].ToString() + "%";
                            if (!dt.Rows[i]["BCD_RATE"].ToString().Contains("%")) dr["GROUP_ID"] = dt.Rows[i]["BCD_RATE"].ToString() + "%";
                            if (!dt.Rows[i]["SOCIAL_WELFARE_SURCHARGE"].ToString().Contains("%")) dr["QUALIFICATION_TYPE"] = dt.Rows[i]["SOCIAL_WELFARE_SURCHARGE"].ToString() + "%";
                            if (!dt.Rows[i]["ANTI_DUMPING_DUTY"].ToString().Contains("%")) dr["SECTIONTYPE"] = dt.Rows[i]["ANTI_DUMPING_DUTY"].ToString() + "%";
                            if (!dt.Rows[i]["SAFEGUARD_DUTY"].ToString().Contains("%")) dr["GROUP_REFRENCE_NUMBER"] = dt.Rows[i]["SAFEGUARD_DUTY"].ToString() + "%";
                            if (!dt.Rows[i]["TCS_Under_GST"].ToString().Contains("%")) dr["heading"] = dt.Rows[i]["TCS_Under_GST"].ToString() + "%";
                            if (!dt.Rows[i]["TCS_Under_IT"].ToString().Contains("%")) dr["col1"] = dt.Rows[i]["TCS_Under_IT"].ToString() + "%";
                            dr["rec_id"] = "0";
                            dr["master_entby"] = userid_mst;
                            dr["master_entdate"] = ent_date;
                            dr["master_editby"] = "-";
                            dr["master_editdate"] = ent_date;
                            dr["client_id"] = clientid_mst;
                            dr["client_unit_id"] = unitid_mst;
                            dataTable.Rows.Add(dr);
                        }
                        res = sgen.Update_data(userCode, dataTable, tab_name, model[0].Col6, false);
                        if (res == true)
                        {
                            sgen.SetSession(MyGuid, "hsn", null);
                            model = new List<Tmodelmain>();
                            model.Add(new Tmodelmain
                            {
                                Col3 = tmodel.Col3,
                                Col8 = tmodel.Col8,
                                Col9 = tmodel.Col9,
                                Col10 = tmodel.Col10,
                                Col13 = "Save",
                                Col100 = "Save & New",
                                Col121 = "S",
                                Col122 = "<u>S</u>ave",
                                Col123 = "Save & Ne<u>w</u>",
                                Col14 = tmodel.Col14,
                                Col18 = tmodel.Col18,
                                Col20 = tmodel.Col20
                            });
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.vsavenew = "disabled='disabled'";
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Imported Successfully');disableForm(); ";
                        }
                        else { ViewBag.scripCall = "showmsgJS(3, 'Record Not Saved', 1);"; }
                    }
                    catch (Exception err) { sgen.showmsg(1, err.Message.ToString().Replace("'", ""), 0); }
                }
            }
            ModelState.Clear();
            return View(model);
        }
        [HttpGet]
        public FileResult hsntemp(List<Tmodelmain> model, string Myguid = "")
        {
            if (Myguid.Equals("")) Myguid = MyGuid;
            FillMst(Myguid);
            model = (List<Tmodelmain>)sgen.GetSession(Myguid, "model");
            DataTable dtl = new DataTable();
            mq = "SELECT '' HSN_Code,'' Description,'' GST_Rate ,'' GST_Cess,'' BCD_Rate,'' Social_Welfare_Surcharge,'' Anti_dumping_Duty,'' Safeguard_Duty,'' TCS_Under_GST,'' TCS_Under_IT from Dual";
            dtl = sgen.getdata(userCode, mq);
            string cg_com_name = sgen.GetCookie(MyGuid, "cg_com_name");
            Byte[] fileBytes = sgen.Exp_to_csv_new(dtl, "hsntemp", cg_com_name);
            return File(fileBytes, System.Net.Mime.MediaTypeNames.Application.Octet, "hsntemp");
        }
        #endregion
        #region Main Group Master
        public ActionResult mg_master()
        {
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            FillMst(MyGuid);
            // shiv
            chkRef();
            List<Tmodelmain> model = new List<Tmodelmain>();
            List<SelectListItem> mod1 = new List<SelectListItem>();
            Tmodelmain tm1 = new Tmodelmain();
            ViewBag.vnew = "";
            ViewBag.vedit = "";
            ViewBag.vsave = "disabled='disabled'";
            ViewBag.scripCall = "disableForm();";
            mid_mst = EncryptDecrypt.Decrypt(Request.QueryString["mid"]);
            //if (mid_mst.Trim().Equals("21001.1"))
            //{
            //    ViewBag.Title = "UNIT MEASUREMENT MASTER"; tm1.Col14 = "Unit Name"; tm1.Col9 = "UNIT MEASUREMENT MASTER"; tm1.Col8 = "UMM";
            //    Session["tr_type"] = "UMM";
            //}
            //if (mid_mst.Trim().Equals("21001.7")) { ViewBag.Title = "PAYMENT TERM MASTER"; tm1.Col14 = "Payment Name"; tm1.Col9 = "PAYMENT TERM MASTER"; tm1.Col8 = "PTM"; Session["tr_type"] = "PTM"; }
            //if (mid_mst.Trim().Equals("21001.2") || mid_mst.Trim().Equals("17001.2") || mid_mst.Trim().Equals("28004.6")) { ViewBag.Title = "HSN/SAC CODE MASTER"; tm1.Col14 = "HSN/SAC Code"; tm1.Col9 = "HSN / SAC CODE MASTER"; tm1.Col8 = "HSN"; Session["tr_type"] = "HSN"; tm1.Col13 = "Save"; cessrate = tm1.Col22; tab_name = "master_setting"; type = "HSN"; }
            tm1.Col10 = mid_mst.Trim();
            tm1.Col20 = MyGuid.Trim();
            sgen.SetSession(MyGuid, "TR_MID", mid_mst.Trim());
            model.Add(tm1);
            return View(model);
        }
        [HttpPost]
        public ActionResult mg_master(List<Tmodelmain> model, string command)
        {
            try
            {
                List<SelectListItem> mod1 = new List<SelectListItem>();
                //if (model[0].Col10.Trim().Equals("21001.1"))
                //{
                tab_name = "Master_Setting";
                type = "MGM";
                Master_Type = "Unit Measurement Master";
                master_name = model[0].Col15;
                Condition = "and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "'";
                name = "Unit Measurement Master";
                model[0].Col8 = type;
                sgen.SetSession(MyGuid, "tr_type", type);
                //}
                //if (model[0].Col10.Trim().Equals("21001.2") || model[0].Col10.Trim().Equals("17001.2") || model[0].Col10.Trim().Equals("28004.6"))
                //{
                //    tab_name = "Master_Setting";
                //    type = "HSN";
                //    Master_Type = "HSN Code Master";
                //    master_name = model[0].Col15;
                //    Condition = "and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "'";
                //    name = "HSN Code Master";
                //    model[0].Col8 = type;
                //    Session["tr_type"] = type;
                //    model[0].Col9 = "HSN / SAC CODE MASTER";
                //    model[0].Col13 = "Save";
                //}
                if (command == "New")
                {
                    try
                    {
                        sgen.SetSession(MyGuid, "EDMODE", "N");
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.scripCall = "enableForm();";
                        mq = "select max(to_number(master_id)) as auto_genid from " + tab_name + " where type='" + type + "'" + where + "";
                        master_id = sgen.genNo(userCode, mq, 3, "auto_genid");
                        model[0].Col11 = master_id;
                        //model[0].TList1 = mod1;
                        model[0].Col17 = "Y";
                    }
                    catch (Exception ex) { sgen.showmsg(1, ex.Message.ToString().Replace("'", ""), 0); }
                }
                else if (command == "Edit")
                {
                    try
                    {
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                    }
                    catch (Exception ex) { sgen.showmsg(1, ex.Message.ToString().Replace("'", ""), 0); }
                }
                else if (command == "View")
                {
                    try
                    {
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.scripCall = "disableForm();";
                    }
                    catch (Exception ex) { sgen.showmsg(1, ex.Message.ToString().Replace("'", ""), 2); }
                }
                else if (command == "Cancel")
                {
                    // shiv
                    ViewBag.vnew = "";
                    ViewBag.vedit = "";
                    ViewBag.vsave = "disabled='disabled'";
                    model[0].Col11 = "";
                    model[0].Col12 = "";
                    //model[0].TList1 = mod1;
                    //model[0].SelectedItems1 = new string[] { "" };
                    ViewBag.scripCall = "disableForm();";
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                    //if (Session["btnval"] != null) btnval = Session["btnval"].ToString();
                    //model = CallbackFun(btnval, "N", "billing_master", "Billing", model);
                    //ViewBag.vnew = "disabled='disabled'";
                    //ViewBag.vedit = "disabled='disabled'";
                    //ViewBag.vsave = "";
                }
                else if (command == "Save" || command == "Update")
                {
                    try
                    {
                        var tmodel = model.FirstOrDefault();
                        string currdate = sgen.server_datetime_local(userCode);
                        ent_date = sgen.Savedate(currdate, true);
                        DataTable dtstr = new DataTable();
                        dtstr = sgen.getdata(userCode, "select * from " + tab_name + " WHERE 1=2");
                        if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                        {
                            mq1 = " and vch_num<>'" + tmodel.Col21.Trim() + "'";
                            isedit = true;
                            id = tmodel.Col11;
                            vch_num = tmodel.Col21;
                        }
                        else
                        {
                            mq = sgen.seekval(userCode, "Select master_name as master_name from " + tab_name + " where type='" + type + "' and master_name='" + tmodel.Col15 + "' " + Condition + ""
                                           , "master_name");
                            if (!mq.Trim().Equals("0"))
                            {
                                ViewBag.scripCall = "showmsgJS(3, 'You already saved This', 1);";
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                            }
                            else
                            {
                                mq = "select max(to_number(vch_num)) as auto_genid from " + tab_name + " where type='" + type + "'" + where + "";
                                vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                                string mid = "select max(to_number(master_id)) as auto_genid from " + tab_name + " where type='" + type + "'" + where + "";
                                id = sgen.genNo(userCode, mid, 3, "auto_genid");
                                isedit = false;
                            }
                        }
                        #region dtstr 
                        //if (model[0].Col10.Trim().Equals("21001.1")) { status = tmodel.Col17.Trim(); if (status == "N") { type = "DDUMM"; } }
                        //if (model[0].Col10.Trim().Equals("21001.7")) { status = tmodel.Col17.Trim(); if (status == "N") { type = "DDPTM"; } }
                        if (model[0].Col10.Trim().Equals("21001.2") || model[0].Col10.Trim().Equals("17001.2") || model[0].Col10.Trim().Equals("28004.6") || model[0].Col10.Trim().Equals("41005.6"))
                        { status = tmodel.Col17.Trim(); if (status == "N") { type = "DDHSN"; } gstrate = model[0].Col12; cessrate = model[0].Col22; }
                        DataRow dr = dtstr.NewRow();
                        dr["vch_num"] = vch_num.Trim();
                        dr["vch_date"] = ent_date;
                        dr["type"] = type.Trim();
                        dr["master_id"] = id.Trim();
                        dr["master_name"] = master_name.Trim();
                        dr["Status"] = status.Trim();
                        dr["master_type"] = Master_Type.Trim();
                        dr["content"] = model[0].Col16.Trim();
                        dr["group_name"] = gstrate.Trim();
                        dr["client_name"] = cessrate;
                        if (isedit)
                        {
                            dr["master_entby"] = model[0].Col1;
                            dr["master_entdate"] = model[0].Col2;
                            dr["client_id"] = model[0].Col4;
                            dr["client_unit_id"] = model[0].Col5;
                            dr["rec_id"] = model[0].Col7;
                            dr["master_editby"] = userid_mst;
                            dr["master_editdate"] = currdate;
                        }
                        else
                        {
                            dr["rec_id"] = "0";
                            dr["master_entby"] = userid_mst;
                            dr["master_entdate"] = currdate;
                            dr["master_editby"] = "-";
                            dr["master_editdate"] = currdate;
                            dr["client_id"] = clientid_mst;
                            dr["client_unit_id"] = unitid_mst;
                        }
                        dtstr.Rows.Add(dr);
                        #endregion
                        bool Result = sgen.Update_data(userCode, dtstr, tab_name, tmodel.Col6, isedit);
                        ViewBag.vnew = "";
                        ViewBag.vedit = "";
                        ViewBag.vsave = "disabled='disabled'";
                        if (Result == true)
                        {
                            ViewBag.scripCall = "showmsgJS(1, 'Data Saved Successfully', 1);disableForm();";
                            model = new List<Tmodelmain>();
                            model.Add(new Tmodelmain
                            {
                                Col10 = tmodel.Col10,
                                Col14 = tmodel.Col14,
                                Col11 = "",
                                Col12 = "",
                                Col13 = "Save",
                                Col15 = "",
                                Col16 = "",
                                Col17 = "",
                                Col18 = "",
                                Col19 = "",
                                Col9 = "HSN / SAC CODE MASTER",
                                //TList1 = mod1,
                                //SelectedItems1 = new string[] { "" }
                            });
                        }
                        else { ViewBag.scripCall = "showmsgJS(3, 'Record Not Saved', 1);"; }
                    }
                    catch (Exception ex) { sgen.showmsg(1, ex.Message.ToString().Replace("'", ""), 0); }
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        //===========
        #region itemservice
        [HttpPost]
        public ContentResult gettaxrate(string value)
        {
            DataTable dt = new DataTable();
            mq = "select group_name taxrate from master_setting where master_id='" + value.Trim() + "' and type='HSN' and find_in_set(client_unit_id,'" + unitid_mst + "')=1 ";
            mq1 = sgen.seekval(userCode, mq, "taxrate");
            if (mq1 != "") { return Content(mq1); }
            else return Content("");
        }
        public ActionResult itemservice()
        {
            List<Tmodelmain> model = new List<Tmodelmain>();
            try
            {
                MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
                FillMst(MyGuid);
                chkRef();
                ViewBag.vnew = "";
                ViewBag.vedit = "";
                ViewBag.vsave = "disabled='disabled'";
                ViewBag.vsavenew = "disabled='disabled'";
                ViewBag.scripCall = "disableForm();";
                mid_mst = EncryptDecrypt.Decrypt(Request.QueryString["mid"]);
                string layout = "";
                try { layout = TempData[MyGuid + "_layout"].ToString(); }
                catch (Exception) { }
                Tmodelmain tm1 = new Tmodelmain();
                tm1.Col9 = "ITEM / SERVICE MASTER";
                tm1.Col10 = "item";
                tm1.Col11 = " and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "'";
                tm1.Col12 = "IT";
                tm1.Col13 = "Save";
                tm1.Col100 = "Save & New";
                tm1.Col121 = "S";
                tm1.Col122 = "<u>S</u>ave";
                tm1.Col123 = "Save & Ne<u>w</u>";
                tm1.Col14 = mid_mst.Trim();
                tm1.Col15 = MyGuid.Trim();
                tm1.Col79 = "Choose File";
                tm1.Col80 = "Choose File";
                List<SelectListItem> mod1 = new List<SelectListItem>();
                tm1.TList7 = tm1.TList6 = tm1.TList5 = tm1.TList4 = tm1.TList3 = tm1.TList2 = tm1.TList1 = mod1;
                tm1.SelectedItems1 = new string[] { "" };
                tm1.SelectedItems2 = new string[] { "" };
                tm1.SelectedItems3 = new string[] { "" };
                tm1.SelectedItems4 = new string[] { "" };
                tm1.SelectedItems5 = new string[] { "" };
                tm1.SelectedItems6 = new string[] { "" };
                tm1.SelectedItems7 = new string[] { "" };
                tm1.Col65 = layout;
                mq = "select master_name attr,(select count(master_id) from master_setting where type='ATB' and client_unit_id='" + unitid_mst + "') cnt " +
                    "from master_setting where type='ATB' and client_unit_id='" + unitid_mst + "'";
                DataTable dt = sgen.getdata(userCode, mq);
                if (dt.Rows.Count > 0)
                {
                    switch (dt.Rows[0]["cnt"].ToString())
                    {
                        case "1":
                            tm1.Col26 = dt.Rows[0]["attr"].ToString();
                            break;
                        case "2":
                            tm1.Col26 = dt.Rows[0]["attr"].ToString();
                            tm1.Col28 = dt.Rows[1]["attr"].ToString();
                            break;
                        case "3":
                            tm1.Col26 = dt.Rows[0]["attr"].ToString();
                            tm1.Col28 = dt.Rows[1]["attr"].ToString();
                            tm1.Col30 = dt.Rows[2]["attr"].ToString();
                            break;
                        case "4":
                            tm1.Col26 = dt.Rows[0]["attr"].ToString();
                            tm1.Col28 = dt.Rows[1]["attr"].ToString();
                            tm1.Col30 = dt.Rows[2]["attr"].ToString();
                            tm1.Col32 = dt.Rows[3]["attr"].ToString();
                            break;
                        case "5":
                            tm1.Col26 = dt.Rows[0]["attr"].ToString();
                            tm1.Col28 = dt.Rows[1]["attr"].ToString();
                            tm1.Col30 = dt.Rows[2]["attr"].ToString();
                            tm1.Col32 = dt.Rows[3]["attr"].ToString();
                            tm1.Col34 = dt.Rows[4]["attr"].ToString();
                            break;
                    }
                }
                tm1.LTM1 = new List<Tmodelmain>();
                model.Add(tm1);
                ViewBag.showextend = "N";
                ViewBag.showdeactive = "N";
                try
                {
                    if (sgen.Make_int(sgen.GetSession(MyGuid, "unitcnt").ToString()) > 1)
                    {
                        ViewBag.showextend = "Y";
                        ViewBag.showdeactive = "Y";
                    }
                }
                catch (Exception err)
                {
                    mq = "select count(*) unitcnt from company_unit_profile where unit_status = '1' and company_profile_id='" + clientid_mst + "'";
                    mq = sgen.seekval(userCode, mq, "unitcnt");
                    sgen.SetSession(MyGuid, "unitcnt", mq);
                    if (sgen.Make_int(sgen.GetSession(MyGuid, "unitcnt").ToString()) > 1)
                    {
                        ViewBag.showextend = "Y";
                        ViewBag.showdeactive = "Y";
                    }
                }
            }
            catch (Exception ex)
            {
                var LineNumber = new StackTrace(ex, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall = "showmsgJS(1,'" + ex.Message.Replace("'", "") + " At Line number " + LineNumber + "',0)";
            }
            return View(model);
        }
        public List<Tmodelmain> newfun(List<Tmodelmain> model)
        {
            List<SelectListItem> mod1 = new List<SelectListItem>();
            List<SelectListItem> mod2 = new List<SelectListItem>();
            List<SelectListItem> mod3 = new List<SelectListItem>();
            List<SelectListItem> mod4 = new List<SelectListItem>();
            List<SelectListItem> mod5 = new List<SelectListItem>();
            sgen.SetSession(MyGuid, "EDMODE", "N");
            ViewBag.vnew = "disabled='disabled'";
            ViewBag.vedit = "disabled='disabled'";
            ViewBag.vsave = "";
            ViewBag.scripCall = "enableForm();";
            model[0].Col13 = "Save";
            model[0].Col100 = "Save & New";
            model[0].Col121 = "S";
            model[0].Col122 = "<u>S</u>ave";
            model[0].Col123 = "Save & Ne<u>w</u>";
            model[0].Col38 = "Active";
            model[0].Col21 = "0";
            model[0].Col22 = "0";
            model[0].Col23 = "0";
            model[0].Col24 = "0";
            model[0].Col51 = "No";
            string defval = "";
            #region HSN/SAC No
            TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1 = cmd_Fun.hsn(userCode, unitid_mst);
            //TempData[MyGuid + "_Tlist1"] = mod1;
            //model[0].TList1 = mod1;
            model[0].SelectedItems1 = new string[] { "" };
            #endregion
            #region location
            defval = "";

            TempData[MyGuid + "_Tlist2"] = model[0].TList2 = mod2 = cmd_Fun.iloc(userCode, unitid_mst, out defval);
            //TempData[MyGuid + "_Tlist2"] = mod2;
            //model[0].TList2 = mod2;

            model[0].SelectedItems2 = new string[] { defval };
            #endregion
            #region  unit meas               
            defval = "";
            mod5 = cmd_Fun.unitmeas(userCode, unitid_mst, out defval);
            TempData[MyGuid + "_Tlist5"] = model[0].TList5 = mod5;
            TempData[MyGuid + "_Tlist6"] = model[0].TList6 = mod5;
            TempData[MyGuid + "_Tlist7"] = model[0].TList7 = mod5;
            //model[0].TList5 = mod5;
            model[0].SelectedItems5 = new string[] { defval };
            //model[0].TList6 = mod5;
            model[0].SelectedItems6 = new string[] { defval };
            model[0].SelectedItems7 = new string[] { defval };
            #endregion
            #region packing type                
            defval = "";
            TempData[MyGuid + "_Tlist3"] = model[0].TList3 = mod3 = cmd_Fun.packtype(userCode, unitid_mst, out defval);
            //TempData[MyGuid + "_Tlist3"] = model[0].TList3 = mod3;
            //model[0].TList3 = mod3;
            model[0].SelectedItems3 = new string[] { defval };
            #endregion
            #region storage cond                
            TempData[MyGuid + "_Tlist4"] = model[0].TList4 = mod4 = cmd_Fun.st_cond(userCode, unitid_mst);
            //TempData[MyGuid + "_Tlist4"] = model[0].TList4 = mod4;
            //model[0].TList4 = mod4;
            model[0].SelectedItems4 = new string[] { "" };
            #endregion
            //brijesh

            Make_query("itemservice", "Select Sub Group For New Item", "SUBGRP", "1", "", "", MyGuid);

            ViewBag.scripCall += "callFoo('Select Sub Group');";
            return model;
        }
        [HttpPost]
        public ActionResult itemservice(List<Tmodelmain> model, String strmd, String command, String layout, HttpPostedFileBase upd1, HttpPostedFileBase upd2)
        {
            try
            {
                string qa = "N", hzrd = "N", nonstk = "N", saleable = "N", pdi = "N", directbuy = "N", istcs = "N";
                if (!command.Trim().Equals("Callback")) { model = sgen.Make_Model(strmd); }
                FillMst(model[0].Col15);
                if (sgen.Make_int(sgen.GetSession(MyGuid, "unitcnt").ToString()) > 1) ViewBag.showextend = "Y";
                model[0].Col65 = layout;
                DataTable dt = new DataTable();
                var tm = model.FirstOrDefault();
                #region ddl
                List<SelectListItem> mod1 = new List<SelectListItem>();
                List<SelectListItem> mod2 = new List<SelectListItem>();
                List<SelectListItem> mod3 = new List<SelectListItem>();
                List<SelectListItem> mod4 = new List<SelectListItem>();
                List<SelectListItem> mod5 = new List<SelectListItem>();
                List<SelectListItem> mod6 = new List<SelectListItem>();
                List<SelectListItem> mod7 = new List<SelectListItem>();
                TempData[MyGuid + "_TList1"] = model[0].TList1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                TempData[MyGuid + "_TList2"] = model[0].TList2 = (List<SelectListItem>)TempData[MyGuid + "_TList2"];
                TempData[MyGuid + "_TList3"] = model[0].TList3 = (List<SelectListItem>)TempData[MyGuid + "_TList3"];
                TempData[MyGuid + "_TList4"] = model[0].TList4 = (List<SelectListItem>)TempData[MyGuid + "_TList4"];
                TempData[MyGuid + "_TList5"] = model[0].TList5 = (List<SelectListItem>)TempData[MyGuid + "_TList5"];
                TempData[MyGuid + "_TList6"] = model[0].TList6 = (List<SelectListItem>)TempData[MyGuid + "_TList6"];
                TempData[MyGuid + "_TList7"] = model[0].TList7 = (List<SelectListItem>)TempData[MyGuid + "_TList7"];
                //TempData[MyGuid + "_TList1"] = model[0].TList1;
                //TempData[MyGuid + "_TList2"] = model[0].TList2;
                //TempData[MyGuid + "_TList3"] = model[0].TList3;
                //TempData[MyGuid + "_TList5"] = model[0].TList5;
                //TempData[MyGuid + "_TList6"] = model[0].TList6;
                //TempData[MyGuid + "_TList4"] = model[0].TList4;
                if (tm.SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                if (tm.SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
                if (tm.SelectedItems3 == null) model[0].SelectedItems3 = new string[] { "" };
                if (tm.SelectedItems4 == null) model[0].SelectedItems4 = new string[] { "" };
                if (tm.SelectedItems5 == null) model[0].SelectedItems5 = new string[] { "" };
                if (tm.SelectedItems6 == null) model[0].SelectedItems6 = new string[] { "" };
                if (tm.SelectedItems7 == null) model[0].SelectedItems7 = new string[] { "" };
                #endregion
                if (command == "Save # New" || command == "Update # New") { command = command.Replace("#", "&"); }
                if (command == "New")
                {
                    try { model = newfun(model); }
                    catch (Exception ex) { ViewBag.scripCall += "showmsgJS(1, 'Item data have error', 0);"; return View(model); }
                }
                else if (command == "Cancel")
                {
                    TempData[MyGuid + "_layout"] = layout;
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    if (sgen.GetSession(MyGuid, "delid") != null) { btnval = "FDEL"; }
                    else if (sgen.GetSession(MyGuid, "btnval") != null) btnval = sgen.GetSession(MyGuid, "btnval").ToString();
                    model = CallbackFun(btnval, "N", "itemservice", "Billing", model);
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {
                    try
                    {
                        Satransaction sat1 = new Satransaction(userCode, MyGuid);
                        var tmodel = model.FirstOrDefault();
                        string currdate = sgen.server_datetime(userCode);
                        ent_date = currdate;
                        type = model[0].Col12;
                        if (model[0].Chk1 == true) qa = "Y";
                        if (model[0].Chk2 == true) nonstk = "Y";
                        if (model[0].Chk3 == true) saleable = "Y";
                        if (model[0].Chk4 == true)
                        {
                            pdi = "Y";
                            saleable = "Y";
                        }
                        if (model[0].Chk5 == true) directbuy = "Y";
                        if (model[0].Chk6 == true) istcs = "Y";
                        DataTable dtstr = new DataTable();
                        dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                        if (model[0].Col38.Trim() == "Inactive")
                        {
                            type = "DD" + type;
                            status = "N";
                        }
                        else status = "Y";
                        if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                        {
                            mq1 = " and icode<>'" + model[0].Col16.Trim() + "'";
                            isedit = true;
                            vch_num = model[0].Col16.Trim();
                        }
                        else
                        {
                            mq = "select max(to_number(substr(icode,6,5))) as auto_genid from " + model[0].Col10.Trim() + " a where " +
                                "type in ('" + model[0].Col12.Trim() + "','DD" + model[0].Col12 + "') and substr(icode,1,5)='" + model[0].Col37 + "'";
                            vch_num = sgen.genNo(userCode, mq, 5, "auto_genid");
                            vch_num = model[0].Col37 + vch_num;
                            model[0].Col16 = vch_num;
                            isedit = false;
                        }
                        cond = sgen.seekval(userCode, "select iname from " + model[0].Col10.Trim() + " where type in('" + model[0].Col12.Trim() + "','DD" + model[0].Col12 + "') " +
                               "and substr(icode,1,1)='" + model[0].Col37.Substring(0, 1).ToString().Trim() + "' and substr(icode,1,3)='" + model[0].Col37.Substring(0, 3).ToString().Trim() + "' " +
                               "and substr(icode,1,5)='" + model[0].Col37.Substring(0, 5).ToString().Trim() + "' and upper(iname)='" + model[0].Col17.Trim().ToString().ToUpper() + "'" + mq1 + "", "iname");
                        if (!cond.Equals("0"))
                        {
                            ViewBag.scripCall = "showmsgJS(1, 'Name Already Exists', 2);";
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            return View(model);
                        }
                        if (model[0].Col51 == "Yes") hzrd = "Y";
                        #region dtstr module
                        DataRow dr = dtstr.NewRow();
                        dr["icode"] = vch_num.Trim();
                        dr["type"] = type.Trim();
                        dr["iname"] = model[0].Col17;
                        dr["description"] = model[0].Col18;
                        dr["cpartno"] = model[0].Col19;
                        dr["partname"] = model[0].Col20;
                        dr["hsno"] = model[0].SelectedItems1.FirstOrDefault();
                        dr["gstrate"] = model[0].Col25;
                        dr["uom"] = model[0].SelectedItems5.FirstOrDefault();
                        dr["uom2"] = model[0].SelectedItems6.FirstOrDefault();
                        dr["minstk"] = model[0].Col21;
                        dr["maxstk"] = model[0].Col22;
                        dr["reorder"] = model[0].Col23;
                        dr["critlvl"] = model[0].Col24;
                        dr["attr1"] = model[0].Col27;
                        dr["attr2"] = model[0].Col29;
                        dr["attr3"] = model[0].Col31;
                        dr["attr4"] = model[0].Col33;
                        dr["attr5"] = model[0].Col35;
                        dr["status"] = status.Trim();
                        //dr["loc"] = model[0].SelectedItems2.FirstOrDefault();
                        dr["length"] = model[0].Col39;
                        dr["cuom"] = model[0].Col40;
                        dr["pktype"] = model[0].SelectedItems3.FirstOrDefault();
                        dr["pksize"] = model[0].Col41;
                        dr["width"] = model[0].Col43;
                        dr["weight"] = model[0].Col44;
                        dr["height"] = model[0].Col45;
                        dr["thick"] = model[0].Col46;
                        dr["qa"] = qa.Trim();
                        //dr["rate"] = model[0].Col47 == "" ? "0" : model[0].Col47;
                        dr["rate"] = model[0].Col47;
                        dr["gweight"] = model[0].Col50;
                        dr["hzrd"] = hzrd.Trim();
                        dr["ltol"] = model[0].Col52;
                        dr["utol"] = model[0].Col53;
                        dr["slife"] = model[0].Col54;
                        dr["mslife"] = model[0].Col55;
                        dr["stcond"] = model[0].SelectedItems4.FirstOrDefault();
                        dr["lqty"] = model[0].Col56;
                        dr["lweight"] = model[0].Col57;
                        dr["bqty"] = model[0].Col58;
                        dr["bweight"] = model[0].Col59;
                        dr["nonstk"] = nonstk;
                        dr["sale"] = saleable;
                        dr["pdi"] = pdi;
                        dr["dbuy"] = directbuy;
                        dr["tcs"] = istcs;
                        dr["col1"] = model[0].Col81;
                        dr["col2"] = model[0].Col82;
                        dr["col3"] = model[0].Col83;
                        dr["date1"] = sgen.Make_date_S(model[0].Col84);
                        dr["date2"] = sgen.Make_date_S(model[0].Col85);
                        dr["date3"] = sgen.Make_date_S(model[0].Col86);
                        dr["col4"] = model[0].Col87;
                        dr["col5"] = model[0].Col88;
                        dr["col6"] = model[0].Col89;
                        dr["item_alias"] = model[0].Col62;
                        dr["mstpck_size"] = model[0].Col61;
                        dr["amortchrgs"] = model[0].Col90;
                        dr["matjobwork"] = model[0].Col91;
                        dr["sname"] = model[0].Col92;
                        dr["pname"] = model[0].Col93;
                        dr["uom3"] = model[0].SelectedItems7.FirstOrDefault();
                        dr["cuom2"] = model[0].Col49;
                        if (isedit)
                        {
                            dr["rec_id"] = model[0].Col7;
                            dr["ent_by"] = model[0].Col3;
                            dr["ent_date"] = model[0].Col4;
                            dr["client_id"] = model[0].Col1;
                            dr["client_unit_id"] = model[0].Col2;
                            dr["edit_by"] = userid_mst;
                            dr["edit_date"] = ent_date;
                        }
                        else
                        {
                            dr["rec_id"] = "0";
                            dr["ent_by"] = userid_mst;
                            dr["ent_date"] = ent_date;
                            dr["edit_by"] = "-";
                            dr["edit_date"] = ent_date;
                            dr["client_id"] = clientid_mst;
                            dr["client_unit_id"] = unitid_mst;
                        }
                        dtstr.Rows.Add(dr);
                        #endregion
                        bool Result = sgen.Update_data_uncommit2(userCode, dtstr, model[0].Col10.Trim(), model[0].Col8, isedit, sat1);
                        if (Result == true)
                        {
                            try
                            {
                                //if (System.Web.HttpContext.Current.Request.Files.AllKeys.Any())
                                if (upd1.ContentLength > 1000 || upd2.ContentLength > 1000)
                                {
                                    DataTable dtfile = new DataTable();
                                    dtfile = cmd_Fun.GetStructure(userCode, "file_tab");
                                    #region dtimg
                                    type_desc = "Item Image";
                                    string serverpath = Server.MapPath("~/Uploads/" + cg_com_name.Replace(" ", "") + "/");
                                    //Primary Image
                                    try
                                    {
                                        //var upd1 = System.Web.HttpContext.Current.Request.Files["upd1"];
                                        //HttpPostedFileBase file1 = new HttpPostedFileWrapper(upd1);
                                        HttpPostedFileBase file1 = upd1;
                                        ctype1 = file1.ContentType;
                                        fileName1 = file1.FileName;
                                        path1 = clientid_mst + unitid_mst + userid_mst + currdate + "_" + fileName1;
                                        encpath1 = sgen.Convert_Stringto64(path1).ToString();
                                        finalpath1 = serverpath + encpath1;
                                        file1.SaveAs(finalpath1);
                                        filesave(model, currdate, dtfile, fileName1, encpath1, "Primary Image", ctype1);
                                    }
                                    catch (Exception ex) { }
                                    //Secondary Image
                                    try
                                    {
                                        //var upd2 = System.Web.HttpContext.Current.Request.Files["upd2"];
                                        //HttpPostedFileBase file2 = new HttpPostedFileWrapper(upd2);
                                        HttpPostedFileBase file2 = upd2;
                                        ctype2 = file2.ContentType;
                                        fileName2 = file2.FileName;
                                        path2 = clientid_mst + unitid_mst + userid_mst + currdate + "_" + fileName2;
                                        encpath2 = sgen.Convert_Stringto64(path2).ToString();
                                        finalpath2 = serverpath + encpath2;
                                        file2.SaveAs(finalpath2);
                                        filesave(model, currdate, dtfile, fileName2, encpath2, "Secondary Image", ctype2);
                                    }
                                    catch (Exception ex) { }
                                    #endregion
                                    res = sgen.Update_data_uncommit2(userCode, dtfile, "file_tab", "", false, sat1);
                                    if (!res)
                                    {
                                        sat1.Rollback();
                                        ViewBag.vnew = "disabled='disabled'";
                                        ViewBag.vedit = "disabled='disabled'";
                                        ViewBag.vsave = "";
                                        ViewBag.vsavenew = "";
                                        ViewBag.scripCall += "showmsgJS(1, 'Image data have error', 0);";
                                        ModelState.Clear();
                                        return View(model);
                                    }
                                }
                            }
                            catch (Exception ex) { }
                            DataTable dtloc = new DataTable();
                            dtloc = cmd_Fun.GetStructure(userCode, "itbal");
                            #region dtloc
                            DataRow drl = dtloc.NewRow();
                            drl["icode"] = vch_num.Trim();
                            drl["type"] = type.Trim();
                            drl["loc"] = model[0].SelectedItems2.FirstOrDefault();
                            //if (isedit)
                            //{
                            //    drl["rec_id"] = model[0].Col7;
                            //    drl["ent_by"] = model[0].Col3;
                            //    drl["ent_date"] = model[0].Col4;
                            //    drl["client_id"] = model[0].Col1;
                            //    drl["client_unit_id"] = model[0].Col2;
                            //    drl["edit_by"] = userid_mst;
                            //    drl["edit_date"] = ent_date;
                            //}
                            //else
                            //{
                            drl["rec_id"] = "0";
                            drl["ent_by"] = userid_mst;
                            drl["ent_date"] = ent_date;
                            drl["edit_by"] = "-";
                            drl["edit_date"] = ent_date;
                            drl["client_id"] = clientid_mst;
                            drl["client_unit_id"] = unitid_mst;
                            //}
                            dtloc.Rows.Add(drl);
                            #endregion
                            ok = sgen.Update_data_uncommit2(userCode, dtloc, "itbal", model[0].Col8, isedit, sat1);
                            if (!ok)
                            {
                                sat1.Rollback();
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                                ViewBag.scripCall += "showmsgJS(1, 'Data Not Saved', 0);";
                                ModelState.Clear();
                                return View(model);
                            }
                            model = new List<Tmodelmain>();
                            model.Add(new Tmodelmain()
                            {
                                TList1 = mod1,
                                TList2 = mod2,
                                TList3 = mod3,
                                TList4 = mod4,
                                TList5 = mod5,
                                TList6 = mod6,
                                TList7 = mod7,
                                SelectedItems1 = new string[] { "" },
                                SelectedItems2 = new string[] { "" },
                                SelectedItems3 = new string[] { "" },
                                SelectedItems4 = new string[] { "" },
                                SelectedItems5 = new string[] { "" },
                                SelectedItems6 = new string[] { "" },
                                SelectedItems7 = new string[] { "" },
                                Col9 = tmodel.Col9,
                                Col10 = tmodel.Col10,
                                Col11 = tmodel.Col11,
                                Col12 = tmodel.Col12,
                                Col13 = "Save",
                                Col100 = "Save & New",
                                Col121 = "S",
                                Col122 = "<u>S</u>ave",
                                Col123 = "Save & Ne<u>w</u>",
                                Col14 = tmodel.Col14,
                                Col15 = tmodel.Col15,
                                Col16 = tmodel.Col16,
                                Col26 = tmodel.Col26,
                                Col28 = tmodel.Col28,
                                Col30 = tmodel.Col30,
                                Col32 = tmodel.Col32,
                                Col34 = tmodel.Col34,
                                Col65 = tmodel.Col65,
                                Col79 = tmodel.Col79,
                                Col80 = tmodel.Col80,
                                LTM1 = new List<Tmodelmain>()
                            });
                            sat1.Commit();
                            if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                            {
                                ViewBag.vnew = "";
                                ViewBag.vedit = "";
                                ViewBag.vsave = "disabled='disabled'";
                                ViewBag.vsavenew = "disabled='disabled'";
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                            }
                            else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                            {
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                                try { model = newfun(model); }
                                catch (Exception ex) { ViewBag.scripCall += "showmsgJS(1, 'Item data have error', 0);"; return View(model); }
                            }
                        }
                        else
                        {
                            sat1.Rollback();
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            ViewBag.scripCall += "showmsgJS(1, 'Item data have error', 0);";
                            ModelState.Clear();
                            return View(model);
                        }
                    }
                    catch (Exception ex) { ViewBag.scripCall += "showmsgJS(1,'" + ex.Message.ToString().Replace("'", "") + "', 0);"; }
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        //[HttpPost]
        //public ActionResult SaveProfileImage(HttpPostedFileBase HelpSectionImages, String model,String command,String layout)
        //{
        //    try
        //    {
        //        sgen.Make_Model(model);
        //        if (System.Web.HttpContext.Current.Request.Files.AllKeys.Any())
        //        {
        //            var pic = System.Web.HttpContext.Current.Request.Files["HelpSectionImages"];
        //            HttpPostedFileBase filebase = new HttpPostedFileWrapper(pic);
        //            var fileName = Path.GetFileName(filebase.FileName);
        //            var path = Path.Combine(Server.MapPath("~/UploadFile/"), fileName);
        //            filebase.SaveAs(path);
        //            return Json("File Saved Successfully.");
        //        }
        //        else { return Json("No File Saved."); }
        //    }
        //    catch (Exception ex) { return Json("Error While Saving."); }
        //}
        private void filesave(List<Tmodelmain> model, string currdate, DataTable dtfile, string filename, string filepath, string filetitle, string content_type)
        {
            DataRow drf = dtfile.NewRow();
            drf["vch_num"] = model[0].Col16;
            drf["type"] = model[0].Col12;
            drf["ref_code"] = model[0].Col16;
            drf["ref_code1"] = model[0].Col16;
            drf["col1"] = filetitle;
            drf["rec_id"] = "0";
            drf["vch_date"] = currdate;
            drf["file_name"] = filename;
            drf["file_path"] = filepath;
            drf["col2"] = content_type;
            drf["ent_by"] = userid_mst;
            drf["ent_date"] = currdate;
            drf["client_id"] = clientid_mst;
            drf["client_unit_id"] = unitid_mst;
            drf["edit_by"] = userid_mst;
            drf["edit_date"] = currdate;
            dtfile.Rows.Add(drf);
        }
        private bool save_to_recycle(string userCode, string currdate, string type, string docno, string docdate, string acode, string netamount, string created_by, string deleted_by, string created_date, string deleted_date, string action, Satransaction sat)
        {
            mq = "select max(to_number(vch_num)) as auto_genid from recycle_tab a where type='" + type.Trim() + "' and client_unit_id='" + unitid_mst + "'";
            vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
            DataTable dtt = new DataTable();
            dtt = sgen.getdata(userCode, "select * from recycle_tab where 1=2");
            DataRow drf = dtt.NewRow();
            drf["vch_num"] = vch_num;
            drf["vch_date"] = currdate;
            drf["type"] = type;
            drf["docno"] = docno;
            drf["docdate"] = docdate;
            drf["acode"] = acode;
            drf["amount"] = netamount;
            drf["created_by"] = created_by;
            drf["deleted_by"] = deleted_by;
            drf["created_date"] = created_date;
            drf["deleted_date"] = deleted_date;
            drf["action"] = action;
            drf["client_id"] = clientid_mst;
            drf["client_unit_id"] = unitid_mst;
            dtt.Rows.Add(drf);
            return sgen.Update_data_fast1_uncommit(userCode, dtt, "recycle_tab", null, false, sat);
        }
        [HttpGet]
        public FileResult fdown(string value, string Myguid = "")
        {
            FillMst(Myguid);
            if (!value.Trim().Equals(""))
            {
                DataTable dt2 = new DataTable();
                mq = "select file_name,file_path from file_tab where rec_id='" + value.Trim() + "' and type='IT' and client_unit_id='" + unitid_mst + "'";
                dt2 = sgen.getdata(userCode, mq);
                if (dt2.Rows.Count > 0)
                {
                    path1 = Convert.ToString(dt2.Rows[0]["file_path"]);
                    fileName1 = Convert.ToString(dt2.Rows[0]["file_name"]);
                }
            }
            byte[] fileBytes = System.IO.File.ReadAllBytes(Server.MapPath("~/Uploads/" + cg_com_name.Replace(" ", "") + "/" + path1));
            return File(fileBytes, System.Net.Mime.MediaTypeNames.Application.Octet, fileName1);
        }
        [HttpPost]
        public void fdelete(string value, string Myguid)
        {
            sgen.SetSession(Myguid, "delid", value);
        }
        #endregion
        #region BULK ITEM UPLOAD
        public ActionResult item_upd()
        {
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            FillMst(MyGuid);
            chkRef();
            ViewBag.vimport = "";
            ViewBag.vsave = "disabled='disabled'";
            mid_mst = EncryptDecrypt.Decrypt(Request.QueryString["mid"]);
            List<Tmodelmain> model = new List<Tmodelmain>();
            Tmodelmain tm1 = new Tmodelmain();
            tm1.Col9 = "BULK ITEM UPLOAD";
            tm1.Col10 = "item";
            tm1.Col11 = " and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "'";
            tm1.Col12 = "IT";
            tm1.Col13 = "Save";
            tm1.Col14 = mid_mst.Trim();
            tm1.Col15 = MyGuid.Trim();
            tm1.Col22 = "Choose File";
            tm1.dt1 = null;
            model.Add(tm1);
            return View(model);
        }
        [HttpPost]
        public ActionResult item_upd(List<Tmodelmain> model, string command, HttpPostedFileBase upd1, string hfrow, string hftable)
        {
            try
            {
                FillMst(model[0].Col15);
                DataTable dtm = sgen.settable(hftable);
                sgen.SetSession(MyGuid, "HTMLTABLE", dtm);
                model[0].dt1 = dtm;
                if (command == "Cancel") { return CancelFun(model); }
                else if (command == "Callback")
                {  // shiv
                    try
                    {
                        if (sgen.GetSession(MyGuid, "delid") != null) { btnval = "FDEL"; }
                        else if (sgen.GetSession(MyGuid, "btnval") != null) btnval = sgen.GetSession(MyGuid, "btnval").ToString();
                        model = CallbackFun(btnval, "N", actionName, controllerName, model);
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                    }
                    catch (Exception ex) { ViewBag.scripCall = "showmsgJS(1, '" + ex.Message.ToString().Replace("'", "") + "', 0);"; }
                }
                else if (command == "Save" || command == "Update")
                {
                    try
                    {
                        if (model[0].dt1.Rows.Count <= 0) { ViewBag.scripCall = "showmsgJS(1, 'No Data Found', 0);"; }
                        var tmodel = model.FirstOrDefault();
                        string currdate = sgen.server_datetime(userCode);
                        ent_date = currdate;
                        type = model[0].Col12.Trim();
                        isedit = false;
                        Satransaction sat1 = new Satransaction(userCode, MyGuid);
                        DataTable dtstr = new DataTable();
                        DataTable dtitb = new DataTable();
                        dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                        dtitb = cmd_Fun.GetStructure(userCode, "itbal");
                        DataView dv1 = dtm.DefaultView;
                        dv1.Sort = dtm.Columns[0].ColumnName.Trim();
                        dtm = dv1.ToTable();
                        mq1 = "select master_id,master_name,group_name taxrate from master_setting where type='HSN'" + model[0].Col11 + "";
                        DataTable dthsn = sgen.getdata(userCode, mq1);
                        string sg = "";
                        int inc = 1;
                        #region dtstr                                              
                        for (int k = 0; k < dtm.Rows.Count; k++)
                        {
                            #region item
                            DataRow dr = dtstr.NewRow();
                            if (sg != dtm.Rows[k][0].ToString().Trim())
                            {
                                mq = "select max(to_number(substr(icode,6,5))) as auto_genid from " + model[0].Col10 + " where type='" + model[0].Col12 + "'" + model[0].Col11 + " and substr(icode,1,5)='" + dtm.Rows[k][0].ToString().Trim() + "'";
                                inc = sgen.Make_int(sgen.seekval(userCode, mq, "auto_genid"));
                            }
                            inc = inc + 1;
                            vch_num = sgen.padlc(inc, 5);
                            sg = dtm.Rows[k][0].ToString().Trim();
                            dr["icode"] = sg + vch_num.Trim();
                            dr["type"] = type.Trim();
                            dr["hsno"] = dtm.Rows[k]["HSN/SAC NO"].ToString().Trim();
                            dr["gstrate"] = sgen.seekval_dt(dthsn, "master_id='" + dtm.Rows[k]["HSN/SAC NO"].ToString().Trim() + "'", "taxrate");
                            dr["iname"] = dtm.Rows[k]["ITEM NAME"].ToString().Trim();
                            dr["uom"] = dtm.Rows[k]["PRIMARY UNIT"].ToString().Trim();
                            dr["uom2"] = dtm.Rows[k]["SECONDARY UNIT"].ToString().Trim();
                            dr["cpartno"] = dtm.Rows[k]["PART NO."].ToString().Trim();
                            dr["partname"] = dtm.Rows[k]["PART NAME"].ToString().Trim();
                            dr["minstk"] = dtm.Rows[k]["MIN. STOCK LEVEL"].ToString().Trim();
                            dr["maxstk"] = dtm.Rows[k]["MAX. STOCK LEVEL"].ToString().Trim();
                            dr["reorder"] = dtm.Rows[k]["REORDER LEVEL"].ToString().Trim();
                            dr["critlvl"] = dtm.Rows[k]["SAFETY LEVEL"].ToString().Trim();
                            dr["loc"] = "0";
                            dr["length"] = dtm.Rows[k]["LENGTH"].ToString().Trim();
                            dr["width"] = dtm.Rows[k]["WIDTH"].ToString().Trim();
                            dr["weight"] = dtm.Rows[k]["NET WEIGHT"].ToString().Trim();
                            dr["height"] = dtm.Rows[k]["HEIGHT"].ToString().Trim();
                            dr["thick"] = dtm.Rows[k]["THICKNESS"].ToString().Trim();
                            dr["cuom"] = dtm.Rows[k]["CONVERSION UNIT"].ToString().Trim();
                            dr["pktype"] = dtm.Rows[k]["PACKING TYPE"].ToString().Trim();
                            dr["pksize"] = dtm.Rows[k]["PACKING SIZE"].ToString().Trim();
                            dr["description"] = dtm.Rows[k]["REMARKS"].ToString().Trim();
                            dr["rate"] = dtm.Rows[k]["RATE"].ToString().Trim();
                            dr["qa"] = dtm.Rows[k]["QUALITY"].ToString().Trim();
                            dr["gweight"] = dtm.Rows[k]["GROSS WEIGHT"].ToString().Trim();
                            dr["hzrd"] = dtm.Rows[k]["HAZARDOUS"].ToString().Trim();
                            dr["ltol"] = dtm.Rows[k]["LOWER TOLERANCE"].ToString().Trim();
                            dr["utol"] = dtm.Rows[k]["LOWER TOLERANCE"].ToString().Trim();
                            dr["slife"] = dtm.Rows[k]["TOTAL SELF LIFE"].ToString().Trim();
                            dr["mslife"] = dtm.Rows[k]["MIN. REM. SELF LIFE"].ToString().Trim();
                            dr["stcond"] = dtm.Rows[k]["STORAGE CONDITION"].ToString().Trim();
                            dr["lqty"] = dtm.Rows[k]["LOT QTY"].ToString().Trim();
                            dr["lweight"] = dtm.Rows[k]["LOT WEIGHT"].ToString().Trim();
                            dr["bqty"] = dtm.Rows[k]["BIN QTY"].ToString().Trim();
                            dr["bweight"] = dtm.Rows[k]["BIN WEIGHT"].ToString().Trim();
                            dr["nonstk"] = dtm.Rows[k]["NON STOCK"].ToString().Trim();
                            dr["amortchrgs"] = dtm.Rows[k]["AMORTIZATION CHARGES"].ToString().Trim();
                            dr["matjobwork"] = dtm.Rows[k]["MAT CONS JOB WORK"].ToString().Trim();
                            dr["sale"] = dtm.Rows[k]["SALABLE"].ToString().Trim();
                            dr["pdi"] = dtm.Rows[k]["PDI REQUIRED"].ToString().Trim();
                            dr["dbuy"] = dtm.Rows[k]["DIRECT BUY"].ToString().Trim();
                            dr["tcs"] = dtm.Rows[k]["TCS APPLICABLE"].ToString().Trim();
                            dr["item_alias"] = dtm.Rows[k]["ITEM ALIAS NAME"].ToString().Trim();
                            dr["status"] = "Y";
                            dr["mstpck_size"] = dtm.Rows[k]["MASTER PACKING SIZE"].ToString().Trim();
                            dr["rec_id"] = "0";
                            dr["ent_by"] = userid_mst;
                            dr["ent_date"] = ent_date;
                            dr["edit_by"] = "-";
                            dr["edit_date"] = ent_date;
                            dr["client_id"] = clientid_mst;
                            dr["client_unit_id"] = unitid_mst;
                            dtstr.Rows.Add(dr);
                            #endregion
                            #region itbal loc
                            DataRow dri = dtitb.NewRow();
                            dri["icode"] = sg + vch_num.Trim();
                            dri["type"] = type.Trim();
                            dri["vch_date"] = ent_date;
                            dri["loc"] = dtm.Rows[k]["ITEM LOCATION"].ToString().Trim();
                            dri["rec_id"] = "0";
                            dri["ent_by"] = userid_mst;
                            dri["ent_date"] = ent_date;
                            dri["edit_by"] = "-";
                            dri["edit_date"] = ent_date;
                            dri["client_id"] = clientid_mst;
                            dri["client_unit_id"] = unitid_mst;
                            dtitb.Rows.Add(dri);
                            #endregion
                        }
                        ok = sgen.Update_data_uncommit2(userCode, dtstr, model[0].Col10, model[0].Col8, isedit, sat1);
                        res = sgen.Update_data_uncommit2(userCode, dtitb, "itbal", model[0].Col8, isedit, sat1);
                        #endregion
                        if (ok && res)
                        {
                            sat1.Commit();
                            ViewBag.vimport = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.scripCall = "showmsgJS(1, 'Record Saved Successfully', 1);disableForm();";
                            model = new List<Tmodelmain>();
                            model.Add(new Tmodelmain()
                            {
                                Col9 = tmodel.Col9,
                                Col10 = tmodel.Col10,
                                Col11 = tmodel.Col11,
                                Col12 = tmodel.Col12,
                                Col13 = tmodel.Col13,
                                Col14 = tmodel.Col14,
                                Col15 = tmodel.Col15,
                                Col22 = tmodel.Col22,
                                dt1 = null
                            });
                        }
                        else
                        {
                            sat1.Rollback();
                            ViewBag.scripCall += "showmsgJS(1, 'Record Not Saved ', 0);disableForm();";
                        }
                    }
                    catch (Exception ex) { ViewBag.scripCall += "showmsgJS(1, '" + ex.Message.ToString().Replace("'", "") + "', 0);"; }
                }
                else if (command == "Import")
                {
                    HttpPostedFileBase file1 = upd1;
                    DataTable dt = new DataTable();
                    if (file1.ContentLength > 1)
                    {
                        string ext = Path.GetExtension(file1.FileName).ToLower();
                        if (ext == ".csv")
                        {
                            string filesavepath = AppDomain.CurrentDomain.BaseDirectory + "\\Uploads\\" + cg_com_name.Replace(" ", "")
                                + "\\file" + DateTime.Now.ToString("ddMMyyyyhhmmfff") + ext;
                            file1.SaveAs(filesavepath);
                            // Read sample data from CSV file
                            int i = 0;
                            using (CsvFileReader reader = new CsvFileReader(filesavepath))
                            {
                                CsvRow row = new CsvRow();
                                while (reader.ReadRow(row))
                                {
                                    DataRow dr = dt.NewRow();
                                    for (int c = 0; c < row.Count; c++)
                                    {
                                        if (i == 0) { dt.Columns.Add(row[c].ToString()); }
                                        else { dr[c] = row[c].ToString(); }
                                        //if (c > dt.Columns.Count) break;                                                                 
                                    }
                                    i++;
                                    dt.Rows.Add(dr);
                                }
                            }
                        }
                        try
                        {
                            dt.Rows[0].Delete();
                            model[0].dt1 = dt;
                            ViewBag.vsave = "";
                            ViewBag.vimport = "";
                        }
                        catch (Exception err) { sgen.showmsg(1, err.Message.ToString().Replace("'", ""), 0); }
                    }
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        [HttpPost]
        public ContentResult SetSession(List<Tmodelmain> Val, string Name, string Myguid)
        {
            var vall = "";
            if (Val != null) vall = Val[0].Col15;
            else if (!Myguid.Trim().Equals("")) vall = Myguid;
            sgen = new sgenFun(vall);
            sgen.SetSession(vall, Name, Val);
            return Content("");
        }
        [HttpGet]
        public FileResult Itemp(List<Tmodelmain> model, string Myguid = "")
        {
            model = (List<Tmodelmain>)sgen.GetSession(Myguid, "model");
            FillMst(Myguid);
            DataTable dtl = new DataTable();
            mq = "SELECT upper(PARAM3) ictrl FROM CONTROLS WHERE TYPE = 'VDC' AND UPPER(PARAM5)= 'ITEM/SERVICE MASTER' AND ID NOT IN('000042','000043','000044','000045','000046','000047','000048','000049','000050','000001','000003','000005','000028','000029') ORDER BY ID ASC";
            //mq = "select icode,iname,hsno hsn,gstrate taxrate,uom p_unit,uom2 s_unit,cpartno partno,partname,minstk,maxstk,reorder,critlvl safety,loc ilocation," +
            //    "length,width,weight,height,thick,cuom c_unit,pktype pkt_type,pksize pkt_size,description,rate,qa,attr1 grade from item where 1=2";
            dtl = sgen.getdata(userCode, mq);
            DataTable dtc = new DataTable();
            if (dtl.Rows.Count > 0)
            {
                for (int k = 0; k < dtl.Rows.Count; k++)
                {
                    dtc.Columns.Add(dtl.Rows[k]["ictrl"].ToString().Trim(), typeof(string));
                }
            }
            dtc.AcceptChanges();
            string cg_com_name = sgen.GetCookie(MyGuid, "cg_com_name");
            Byte[] fileBytes = sgen.Exp_to_csv_new(dtc, "Items", cg_com_name);
            return File(fileBytes, System.Net.Mime.MediaTypeNames.Application.Octet, "Items");
        }
        #endregion
        #region itemsubgrp
        public ActionResult itemsubgrp()
        {
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            FillMst(MyGuid);
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            model[0].Col9 = "ITEM SUB GROUP MASTER";
            model[0].Col10 = "item";
            model[0].Col11 = " and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "'";
            model[0].Col12 = "SG";
            List<SelectListItem> mod1 = new List<SelectListItem>();
            TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
            model[0].SelectedItems1 = new string[] { "" };
            ViewBag.showextend = "N";
            try
            {
                if (sgen.Make_int(sgen.GetSession(MyGuid, "unitcnt").ToString()) > 1) ViewBag.showextend = "Y";
            }
            catch (Exception err)
            {
                mq = "select count(*) unitcnt from company_unit_profile where unit_status = '1' and company_profile_id='" + clientid_mst + "'";
                mq = sgen.seekval(userCode, mq, "unitcnt");
                sgen.SetSession(MyGuid, "unitcnt", mq);
                if (sgen.Make_int(sgen.GetSession(MyGuid, "unitcnt").ToString()) > 1) ViewBag.showextend = "Y";
            }
            return View(model);
        }
        public List<Tmodelmain> newitemsubgrp(List<Tmodelmain> model)
        {
            sgen.SetSession(MyGuid, "EDMODE", "N");
            ViewBag.vnew = "disabled='disabled'";
            ViewBag.vedit = "disabled='disabled'";
            ViewBag.vsave = "";
            ViewBag.vsavenew = "";
            ViewBag.scripCall = "enableForm();";
            model[0].Col18 = "Active";
            DataTable dt = new DataTable();
            #region item group
            List<SelectListItem> mod1 = cmd_Fun.itemgrp(userCode, clientid_mst, unitid_mst);
            TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1;
            #endregion
            //model[0].TList1 = mod1;
            model[0].SelectedItems1 = new string[] { "" };
            return model;
        }
        [HttpPost]
        public ActionResult itemsubgrp(List<Tmodelmain> model, string command, HttpPostedFileBase upd1)
        {
            try
            {

                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();
                #region ddl
                TempData[MyGuid + "_TList1"] = model[0].TList1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
                if (model[0].SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                #endregion
                if (command == "New")
                {
                    try
                    {
                        model = newitemsubgrp(model);
                    }
                    catch (Exception ex) { }
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {
                    try
                    {
                        mq1 = "";
                        var tmodel = model.FirstOrDefault();
                        string currdate = sgen.server_datetime(userCode);
                        ent_date = currdate;
                        type = model[0].Col12;
                        DataTable dtstr = new DataTable();
                        //shiv
                        dtstr = sgen.getdata(userCode, "select * from " + model[0].Col10.Trim() + " WHERE 1=2");
                        if (model[0].Col18.Trim() == "Inactive")
                        {
                            type = "DD" + type;
                            status = "N";
                        }
                        else status = "Y";
                        if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                        {
                            mq1 = " and icode<>'" + model[0].Col16.Trim() + "'";
                            isedit = true;
                            vch_num = model[0].Col16.Trim();
                        }
                        else
                        {
                            //mq = "select max(to_number(substr(icode,4,2))) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "' and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "' and substr(icode,1,3)='" + model[0].SelectedItems1.FirstOrDefault() + "'";
                            mq = "select max(to_number(substr(icode,4,2))) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "' and substr(icode,1,3)='" + model[0].SelectedItems1.FirstOrDefault() + "'";
                            vch_num = sgen.genNo(userCode, mq, 2, "auto_genid");
                            vch_num = model[0].SelectedItems1.FirstOrDefault() + vch_num;
                            model[0].Col16 = vch_num;
                            isedit = false;
                            mq1 = "";
                        }
                        //cond = sgen.seekval(userCode, "select iname from " + model[0].Col10.Trim() + " where type='" + model[0].Col12.Trim() + "'" + model[0].Col11 + " and upper(iname)='" + model[0].Col17.Trim().ToUpper() + "' and substr(icode,1,3)='" + model[0].SelectedItems1.FirstOrDefault() + "'" + mq1 + "", "iname");
                        cond = sgen.seekval(userCode, "select iname from " + model[0].Col10.Trim() + " where type='" + model[0].Col12.Trim() + "' and upper(iname)='" + model[0].Col17.Trim().ToUpper() + "' and substr(icode,1,3)='" + model[0].SelectedItems1.FirstOrDefault() + "'" + mq1 + "", "iname");
                        if (!cond.Equals("0"))
                        {
                            ViewBag.scripCall = "showmsgJS(1, 'Name Already Exists', 2);";
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            return View(model);
                        }
                        #region dtstr module
                        DataRow dr = dtstr.NewRow();
                        dr["icode"] = vch_num.Trim();
                        dr["type"] = type.Trim();
                        dr["iname"] = model[0].Col17;
                        dr["status"] = status.Trim();
                        dr["gstrate"] = model[0].Col19;//debit account
                        dr["gcess"] = model[0].Col20;//credit account
                        if (isedit)
                        {
                            dr["rec_id"] = model[0].Col7;
                            dr["ent_by"] = model[0].Col3;
                            dr["ent_date"] = model[0].Col4;
                            dr["client_id"] = model[0].Col1;
                            dr["client_unit_id"] = model[0].Col2;
                            dr["edit_by"] = userid_mst;
                            dr["edit_date"] = ent_date;
                        }
                        else
                        {
                            dr["rec_id"] = "0";
                            dr["ent_by"] = userid_mst;
                            dr["ent_date"] = ent_date;
                            dr["edit_by"] = "-";
                            dr["edit_date"] = ent_date;
                            dr["client_id"] = clientid_mst;
                            dr["client_unit_id"] = unitid_mst;
                        }
                        dtstr.Rows.Add(dr);
                        #endregion
                        bool Result = sgen.Update_data_fast1(userCode, dtstr, model[0].Col10.Trim(), model[0].Col8, isedit);
                        if (Result == true)
                        {
                            model = new List<Tmodelmain>();
                            tmodel.Col17 = "";
                            tmodel.Col19 = "";
                            tmodel.Col20 = "";
                            tmodel.Col13 = "Save";
                            tmodel.Col100 = "Save & New";
                            tmodel.Col121 = "S";
                            tmodel.Col122 = "<u>S</u>ave";
                            tmodel.Col123 = "Save & Ne<u>w</u>";
                            tmodel.TList1 = mod1;
                            tmodel.SelectedItems1 = new string[] { "" };
                            sgen.SetSession(MyGuid, "itemgrp", null);
                            model.Add(tmodel);
                            if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                            {
                                try
                                {
                                    if (sgen.Make_int(sgen.GetSession(MyGuid, "unitcnt").ToString()) > 1) ViewBag.showextend = "Y";
                                }
                                catch (Exception err)
                                {
                                    mq = "select count(*) unitcnt from company_unit_profile where unit_status = '1' and company_profile_id='" + clientid_mst + "'";
                                    mq = sgen.seekval(userCode, mq, "unitcnt");
                                    sgen.SetSession(MyGuid, "unitcnt", mq);
                                    if (sgen.Make_int(sgen.GetSession(MyGuid, "unitcnt").ToString()) > 1) ViewBag.showextend = "Y";
                                }
                                ViewBag.vnew = "";
                                ViewBag.vedit = "";
                                ViewBag.vsave = "disabled='disabled'";
                                ViewBag.vsavenew = "disabled='disabled'";
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                            }
                            else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                            {
                                try
                                {
                                    newitemsubgrp(model);
                                    ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                                }
                                catch (Exception ex) { }
                            }
                        }
                        else { ViewBag.scripCall = "showmsgJS(1, 'Something Went Wrong, Data Not Saved', 0);"; }
                    }
                    catch (Exception ex) { ViewBag.scripCall = "showmsgJS(1,'" + ex.Message.ToString().Replace("'", " ") + "', 0);"; }
                }
                else if (command == "Import")
                {
                    var sg = "";
                    HttpPostedFileBase file1 = upd1;
                    DataTable dt = new DataTable();
                    if (file1.ContentLength > 1)
                    {
                        string ext = Path.GetExtension(file1.FileName).ToLower();
                        if (ext == ".csv")
                        {
                            string filesavepath = AppDomain.CurrentDomain.BaseDirectory + "\\Uploads\\" + cg_com_name.Replace(" ", "")
                                + "\\file" + DateTime.Now.ToString("ddMMyyyyhhmmfff") + ext;
                            file1.SaveAs(filesavepath);
                            // Read sample data from CSV file
                            int i = 0;
                            using (CsvFileReader reader = new CsvFileReader(filesavepath))
                            {
                                CsvRow row = new CsvRow();
                                while (reader.ReadRow(row))
                                {
                                    DataRow dr = dt.NewRow();
                                    for (int c = 0; c < row.Count; c++)
                                    {
                                        if (i == 0) { dt.Columns.Add(row[c].ToString()); }
                                        else { dr[c] = row[c].ToString(); }
                                        //if (c > dt.Columns.Count) break;                                                                 
                                    }
                                    i++;
                                    dt.Rows.Add(dr);
                                }
                            }
                        }
                        try
                        {
                            dt.Rows[0].Delete();
                            string currdate = sgen.server_datetime(userCode);
                            ent_date = currdate;
                            for (int k = 0; k < dt.Rows.Count; k++)
                            {
                                mq = sgen.seekval(userCode, "select iname from " + model[0].Col10.Trim() + " where type='" + model[0].Col12.Trim() + "' and upper(iname)='" + dt.Rows[k][1].ToString() + "' and substr(icode,1,3)='" + dt.Rows[k][0].ToString() + "'", "iname");
                                if (!mq.Trim().Equals("0"))
                                {
                                    ViewBag.scripCall += "showmsgJS(3, 'You already have " + dt.Rows[k][1].ToString() + " Item Sub Group saved', 2);";
                                    ViewBag.vnew = "disabled='disabled'";
                                    ViewBag.vedit = "disabled='disabled'";
                                    ViewBag.vsave = "";
                                    ViewBag.vsavenew = "";
                                    return View(model);
                                }
                                if (dt.Rows[k][1].ToString().Trim().Equals("") && dt.Rows[k][0].ToString().Trim().Equals(""))
                                {
                                    ViewBag.scripCall += "showmsgJS(3, 'Field " + dt.Rows[k][0].ToString() + " and " + dt.Rows[k][1].ToString() + " Are Mandatory. Please Check Before Import.', 2);";
                                    ViewBag.vnew = "disabled='disabled'";
                                    ViewBag.vedit = "disabled='disabled'";
                                    ViewBag.vsave = "";
                                    ViewBag.vsavenew = "";
                                    return View(model);
                                }

                            }
                            DataTable dataTable = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                            sgen.SetSession(MyGuid, "EDMODE", "N");
                            int inc = 1;
                            DataView dv1 = dt.DefaultView;
                            dv1.Sort = dt.Columns[0].ColumnName.Trim();
                            dt = dv1.ToTable();
                            for (int i = 0; i < dt.Rows.Count; i++)
                            {
                                if (sg != dt.Rows[i][0].ToString().Trim())
                                {
                                    mq = "select max(to_number(substr(icode,4,2))) as auto_genid from " + model[0].Col10 + " where type='" + model[0].Col12 + "'" + model[0].Col11 + " and substr(icode,1,3) ='" + dt.Rows[i][0].ToString().Trim() + "'";
                                    inc = sgen.Make_int(sgen.seekval(userCode, mq, "auto_genid"));
                                }
                                DataRow dr = dataTable.NewRow();
                                inc = inc + 1;
                                vch_num = sgen.padlc(inc, 2);
                                sg = dt.Rows[i][0].ToString().Trim();
                                dr["icode"] = sg + vch_num.Trim();
                                dr["type"] = model[0].Col12;
                                dr["iname"] = dt.Rows[i]["Item_Sub_Group_Name"].ToString();
                                dr["status"] = "Y";
                                dr["gstrate"] = dt.Rows[i]["Debit_Account"].ToString();//debit account
                                dr["gcess"] = dt.Rows[i]["Credit_Account"].ToString();//credit account
                                dr = getsave(currdate, dr, model);
                                dataTable.Rows.Add(dr);
                            }
                            res = sgen.Update_data(userCode, dataTable, model[0].Col10, model[0].Col8, false);
                            if (res == true)
                            {
                                model = new List<Tmodelmain>();
                                model.Add(new Tmodelmain
                                {
                                    Col3 = tm.Col3,
                                    Col8 = tm.Col8,
                                    Col9 = tm.Col9,
                                    Col10 = tm.Col10,
                                    Col11 = tm.Col11,
                                    Col12 = tm.Col12,
                                    Col13 = "Save",
                                    Col100 = "Save & New",
                                    Col121 = "S",
                                    Col122 = "<u>S</u>ave",
                                    Col123 = "Save & Ne<u>w</u>",
                                    Col14 = tm.Col14,
                                    Col15 = tm.Col15
                                });
                                ViewBag.vnew = "";
                                ViewBag.vedit = "";
                                ViewBag.vsave = "disabled='disabled'";
                                ViewBag.vsavenew = "disabled='disabled'";
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Imported Successfully');disableForm(); ";
                            }
                            else { ViewBag.scripCall = "showmsgJS(3, 'Record Not Saved', 1);"; }
                        }
                        catch (Exception err) { sgen.showmsg(1, err.Message.ToString().Replace("'", ""), 0); }
                    }
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        [HttpGet]
        public FileResult itsbgrptemp(List<Tmodelmain> model, string Myguid = "")
        {
            if (Myguid.Equals("")) Myguid = MyGuid;
            FillMst(Myguid);
            model = (List<Tmodelmain>)sgen.GetSession(Myguid, "model");
            DataTable dtl = new DataTable();
            mq = "SELECT '' Item_Group,'' Item_Sub_Group_Name ,'' Debit_Account,'' Credit_Account from Dual";
            dtl = sgen.getdata(userCode, mq);
            string cg_com_name = sgen.GetCookie(MyGuid, "cg_com_name");
            Byte[] fileBytes = sgen.Exp_to_csv_new(dtl, "itsbgrptemp", cg_com_name);
            return File(fileBytes, System.Net.Mime.MediaTypeNames.Application.Octet, "itsbgrptemp");
        }
        #endregion
        #region Invoice
        public ActionResult invoice()
        {
            string title = "", pur_type = "", pr_type = "";
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            FillMst(MyGuid);
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            List<SelectListItem> mod1 = new List<SelectListItem>();
            List<SelectListItem> mod2 = new List<SelectListItem>();
            List<SelectListItem> mod3 = new List<SelectListItem>();
            List<SelectListItem> mod4 = new List<SelectListItem>();
            model[0].Col64 = "";
            title = "INVOICE";
            pur_type = "";// Billing
            pr_type = "";
            tab_name = "itransaction";
            ViewBag.vimport = "disabled='disabled";
            model[0].Col10 = tab_name;
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col53 = title;
            model[0].Col54 = pr_type;
            model[0].Col12 = "";
            model[0].Col64 = "";
            model[0].Col18 = sgen.seekval(userCode, "select unit_gstin_no from company_unit_profile where cup_id='" + unitid_mst + "'", "unit_gstin_no");
            DataTable dt = sgen.getdata(userCode, "select '' Item,'1' as  SNo ,'-' as Icode,'-' as IName,'-' PARTNO,'-'  HSN,'-' as UOM,'0' as TaxRate,'0' as  Qty_in_stock,'0' as Qty_inv,'0' as IRate," +
               "'-' disc_type,'0' as disc_rate,'0' IAmount,'0' TaxAmount,'0' discAmount,'0' LineAmount,'-' as delivery_date,'-' as Remark from dual");
            model[0].dt1 = dt;
            sgen.SetSession(MyGuid, "BINV_DT", dt.Copy());
            dt = sgen.getdata(userCode, "select '-' as SNo ,'-' as Icode,'-' as IName,'-' PartNo,'-' as UOM,'0' as Qty_in_stock,'0' as Qty_Out,'-' as Remark,'0' LocCode,'-' Loc from dual");
            model[0].dt2 = dt.Copy();
            sgen.SetSession(MyGuid, "BINV_DT2", (model[0].dt2).Copy());
            model[0].TList1 = mod1;
            model[0].SelectedItems1 = new string[] { "" };
            model[0].TList2 = mod2;
            model[0].SelectedItems2 = new string[] { "" };
            model[0].TList3 = mod3;
            model[0].SelectedItems3 = new string[] { "" };
            model[0].TList4 = mod4;
            model[0].SelectedItems4 = new string[] { "" };
            model[0].TList5 = mod4;
            model[0].SelectedItems5 = new string[] { "" };
            model[0].TList6 = mod4;
            model[0].SelectedItems6 = new string[] { "" };
            DataTable dtb = (DataTable)sgen.GetSession(MyGuid, "URIGHTS");
            try
            {
                dtb = dtb.Select("m_id='" + model[0].Col14 + "'").CopyToDataTable();
                if (dtb.Rows.Count > 0)
                {
                    model[0].Col91 = dtb.Rows[0]["btnnew"].ToString();
                    model[0].Col92 = dtb.Rows[0]["btnedit"].ToString();
                    model[0].Col93 = dtb.Rows[0]["btnview"].ToString();
                }
            }
            catch (Exception ex) { }
            ModelState.Clear();
            return View(model);
        }
        [HttpPost]
        public ActionResult invoice(List<Tmodelmain> model, string command, string hfrow, string hftable, HttpPostedFileBase upd1)
        {
            try
            {
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();
                string url = "";
                DataSet ds = new DataSet();
                List<SelectListItem> mod1 = new List<SelectListItem>();
                List<SelectListItem> mod2 = new List<SelectListItem>();
                List<SelectListItem> mod3 = new List<SelectListItem>();
                List<SelectListItem> mod4 = new List<SelectListItem>();
                List<SelectListItem> mod5 = new List<SelectListItem>();
                List<SelectListItem> mod6 = new List<SelectListItem>();
                TempData[MyGuid + "_Tlist1"] = model[0].TList1 = (List<SelectListItem>)TempData[MyGuid + "_Tlist1"];
                TempData[MyGuid + "_Tlist2"] = model[0].TList2 = (List<SelectListItem>)TempData[MyGuid + "_Tlist2"];
                TempData[MyGuid + "_Tlist3"] = model[0].TList3 = (List<SelectListItem>)TempData[MyGuid + "_Tlist3"];
                TempData[MyGuid + "_Tlist4"] = model[0].TList4 = (List<SelectListItem>)TempData[MyGuid + "_Tlist4"];
                TempData[MyGuid + "_Tlist5"] = model[0].TList5 = (List<SelectListItem>)TempData[MyGuid + "_Tlist5"];
                TempData[MyGuid + "_Tlist6"] = model[0].TList6 = (List<SelectListItem>)TempData[MyGuid + "_Tlist6"];
                if (tm.SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                if (tm.SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
                if (tm.SelectedItems3 == null) model[0].SelectedItems3 = new string[] { "" };
                if (tm.SelectedItems4 == null) model[0].SelectedItems4 = new string[] { "" };
                if (tm.SelectedItems5 == null) model[0].SelectedItems5 = new string[] { "" };
                if (tm.SelectedItems6 == null) model[0].SelectedItems6 = new string[] { "" };
                if (model[0].Col64 != "53" && model[0].Col64 != null)
                {
                    if (hftable.Trim() != "")
                    {
                        ds = sgen.setDS(hftable);
                        model[0].dt1 = ds.Tables[0];
                        model[0].dt2 = ds.Tables[1];
                        if (model[0].dt2.Rows.Count == 0) model[0].dt2 = ((DataTable)sgen.GetSession(MyGuid, "BINV_DT2"));
                        if (model[0].dt1.Rows.Count == 0) model[0].dt1 = ((DataTable)sgen.GetSession(MyGuid, "BINV_DT"));
                    }
                }
                else
                {
                    ds = sgen.setDS(hftable);
                    model[0].dt1 = ds.Tables[0];
                    if (model[0].dt1.Rows.Count == 0) model[0].dt1 = ((DataTable)sgen.GetSession(MyGuid, "BINV_DT"));
                }
                model[0].Col89 = sgen.seekval(userCode, "select param1 from controls where type='CTL' and m_module3='billmain' and id='000021'", "param1");
                model[0].Col18 = sgen.seekval(userCode, "select unit_gstin_no from company_unit_profile where cup_id='" + unitid_mst + "'", "unit_gstin_no");
                if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Fill Location")
                {
                    string negativestock = sgen.seekval(userCode, "select param1 from controls where type='CTL' and m_module3='billmain' and id='000019'", "param1");
                    if (model[0].dt1.Rows[0]["Icode"].ToString().Trim().Equals("-"))
                    {
                        ViewBag.scripCall += "showmsgJS(1,'Please Select item in grid-1', 0);";
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                        return View(model);
                    }
                    switch (model[0].Col64)
                    {
                        case "53":
                            if (model[0].dt1.Rows[0]["Qty_disp"].ToString().Trim().Equals("0") || model[0].dt1.Rows[0]["Qty_disp"].ToString().Trim().Equals(""))
                            {
                                ViewBag.scripCall += "showmsgJS(1,'Please Fill Qty_disp in grid-1', 0);";
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                                return View(model);
                            }
                            break;
                        case "52":
                        case "51":
                        case "54":
                        case "55":
                            if (model[0].dt1.Rows[0]["Qty_inv"].ToString().Trim().Equals("0") || model[0].dt1.Rows[0]["Qty_inv"].ToString().Trim().Equals(""))
                            {
                                ViewBag.scripCall += "showmsgJS(1,'Please Fill Qty_inv in grid-1', 0);";
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                                return View(model);
                            }
                            break;
                    }
                    try
                    {
                        if (model[0].dt2 != null && model[0].dt2.Rows[0]["Icode"].ToString().Trim().Equals("-")) { model[0].dt2.Rows.RemoveAt(0); }
                    }
                    catch (Exception err) { }
                    var dttt = model[0].dt2.Clone();
                    model[0].dt2 = dttt;
                    foreach (DataRow dr1 in model[0].dt1.Rows)
                    {
                        try
                        {
                            var dt7 = model[0].dt2.Clone();
                            model[0].dt2 = dt7;
                            DataTable dtbtch;
                            dtbtch = model[0].dt1.Clone();
                            var t1 = model[0].dt1.AsEnumerable().GroupBy(k => new
                            {
                                icode = k.Field<string>("icode"),
                                iname = k.Field<string>("iname"),
                                partno = k.Field<string>("partno"),
                                uom = k.Field<string>("uom"),
                            });
                            switch (model[0].Col64)
                            {
                                case "53":
                                    var t2 = t1.Select(c =>
                                    {
                                        var row = dtbtch.NewRow();
                                        row["icode"] = c.Key.icode;
                                        row["iname"] = c.Key.iname;
                                        row["partno"] = c.Key.partno;
                                        row["uom"] = c.Key.uom;
                                        row["Qty_disp"] = c.Sum(k => sgen.Make_decimal(k.Field<string>("Qty_disp")));
                                        return row;
                                    });
                                    dtbtch = t2.CopyToDataTable();
                                    break;
                                case "52":
                                case "51":
                                case "54":
                                case "55":
                                    t2 = t1.Select(c =>
                                    {
                                        var row = dtbtch.NewRow();
                                        row["icode"] = c.Key.icode;
                                        row["iname"] = c.Key.iname;
                                        row["partno"] = c.Key.partno;
                                        row["uom"] = c.Key.uom;
                                        row["Qty_inv"] = c.Sum(k => sgen.Make_decimal(k.Field<string>("Qty_inv")));
                                        return row;
                                    });
                                    dtbtch = t2.CopyToDataTable();
                                    break;
                            }
                            decimal qtyout = 0;
                            foreach (DataRow dr3 in dtbtch.Rows)
                            {
                                if (model[0].Col64 == "53")
                                {
                                    qtyout = sgen.Make_decimal(dr3["Qty_disp"].ToString().Trim());
                                }
                                else
                                {
                                    qtyout = sgen.Make_decimal(dr3["Qty_inv"].ToString().Trim());
                                }
                                if (qtyout <= 0)
                                {
                                    ViewBag.vnew = "disabled='disabled'";
                                    ViewBag.vedit = "disabled='disabled'";
                                    ViewBag.vsave = "";
                                    ViewBag.vsavenew = "";
                                    ViewBag.scripCall += "showmsgJS(1,'Please FILL Out Qty in Item " + dr3["iname"].ToString() + "', 2);";
                                    model[0].dt2 = (DataTable)sgen.GetSession(MyGuid, "BINV_DT2");
                                    break;
                                }
                                string icode = dr3["icode"].ToString().Trim();
                                DataTable dloc = sgen.getdata(userCode, "select itb.loc,location_name(itb.client_id||itb.client_unit_id||itb.loc) from itbal itb " +
                                "where trim(itb.icode)='" + icode + "' and itb.type='IT' and itb.client_unit_id='" + unitid_mst + "'");
                                string vchdate = (model[0].Col126 == "" || model[0].Col126 == null) ? model[0].Col48 : model[0].Col126;
                                var cond2 = "and t.client_unit_id||t.vch_num||to_char(t.vch_date,'" + sgen.Getsqldateformat() + "')||t.type not in (" +
                                    "'" + unitid_mst + model[0].Col16 + vchdate + model[0].Col12 + "')";
                                DataTable dtlocs = sgen.locclosing_all(userCode, unitid_mst + icode, FN_From_Date + "!~!~!~!~!" + model[0].Col48, cond2);
                                int rcnt = dtlocs.Rows.Count;
                                if (!negativestock.ToString().Equals("Y"))
                                {
                                    if (rcnt == 0)
                                    {
                                        ViewBag.scripCall += "showmsgJS(1,'Item " + icode + " stock is zero' , 0);";
                                        return View(model);
                                    }
                                }
                                DataColumn dc = new DataColumn("ordd", typeof(int));
                                dc.DefaultValue = "0";
                                dtlocs.Columns.Add(dc);
                                var rind = sgen.seekval_dt_rowindex(dtlocs, "loc='" + dloc.Rows[0]["loc"].ToString().Trim() + "'");
                                try
                                {
                                    dtlocs.Rows[rind - 1]["ordd"] = rcnt;
                                }
                                catch (Exception err) { }
                                DataView dv = dtlocs.DefaultView;
                                dv.Sort = "ordd asc";
                                dtlocs = dv.ToTable();
                                foreach (DataRow dr in dtlocs.Rows)
                                {
                                    decimal lclos = sgen.Make_decimal(dr["closing"].ToString().Trim());
                                    if (qtyout <= 0 || lclos <= 0) break;
                                    DataRow dr2 = model[0].dt2.NewRow();
                                    dr2["sno"] = unitid_mst + dr3["icode"].ToString().Trim() + dloc.Rows[0][0].ToString().Trim();
                                    dr2["Icode"] = dr3["icode"].ToString().Trim();
                                    dr2["INAME"] = dr3["INAME"].ToString().Trim();
                                    dr2["PARTNO"] = dr3["PARTNO"].ToString().Trim();
                                    dr2["UOM"] = dr3["UOM"].ToString().Trim();
                                    dr2["Qty_In_Stock"] = dr["closing"].ToString().Trim();

                                    if (qtyout > lclos)
                                    {
                                        dr2["Qty_Out"] = lclos;
                                        qtyout = qtyout - lclos;
                                    }
                                    else
                                    {
                                        dr2["Qty_Out"] = qtyout;
                                        qtyout = 0;
                                    }
                                    dr2["Remark"] = "-";
                                    dr2["LocCode"] = dr["loc"].ToString().Trim();
                                    dr2["LOC"] = dr["loc_name"].ToString().Trim();
                                    model[0].dt2.Rows.Add(dr2);
                                }
                                if (qtyout > 0)
                                {
                                    DataRow dr2 = model[0].dt2.NewRow();
                                    dr2["sno"] = unitid_mst + dr3["icode"].ToString().Trim() + dloc.Rows[0][0].ToString().Trim();
                                    dr2["Icode"] = dr3["icode"].ToString().Trim();
                                    dr2["INAME"] = dr3["INAME"].ToString().Trim();
                                    dr2["PARTNO"] = dr3["PARTNO"].ToString().Trim();
                                    dr2["UOM"] = dr3["UOM"].ToString().Trim();
                                    dr2["Qty_In_Stock"] = "0";
                                    dr2["Qty_Out"] = qtyout;
                                    qtyout = 0;
                                    dr2["Remark"] = "-";
                                    dr2["LocCode"] = dloc.Rows[0][0].ToString().Trim();
                                    dr2["LOC"] = dloc.Rows[0][1].ToString().Trim();
                                    model[0].dt2.Rows.Add(dr2);
                                }
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                            }
                        }
                        catch (Exception ex) { ViewBag.scripCall += "showmsgJS(1,'" + ex.Message.ToString().Replace('\'', ' ') + "', 0);"; }
                    }
                    if (model[0].dt1.Rows.Count == 0) model[0].dt1 = ((DataTable)sgen.GetSession(MyGuid, "BINV_DT"));
                    if (model[0].dt2 == null || model[0].dt2.Rows.Count == 0) model[0].dt2 = ((DataTable)sgen.GetSession(MyGuid, "BINV_DT2"));
                }
                else if (command == "Callback")
                {
                    if (model[0].Col92 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for edit Invoice, please contact your admin', 2);disableForm();";
                        return View(model);
                    }
                    if (sgen.GetSession(MyGuid, "sodelrno") != null) btnval = "CHRGDEL";
                    else if (sgen.GetSession(MyGuid, "btnval") != null) btnval = sgen.GetSession(MyGuid, "btnval").ToString();
                    model = CallbackFun(btnval, "N", actionName, controllerName, model);
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                    if (btnval == "PRINT" || btnval == "PRINTPKL" || btnval == "DEL")
                    {
                        ViewBag.vnew = "";
                        ViewBag.vedit = "";
                        ViewBag.vsave = "disabled='disabled'";
                        ViewBag.vsavenew = "disabled='disabled'";
                    }
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {
                    string negativestock = sgen.seekval(userCode, "select param1 from controls where type='CTL' and m_module3='billmain' and id='000019'", "param1");
                    if (model[0].Col91 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for save Invoice, please contact your admin', 2);";
                        return View(model);
                    }
                    try
                    {
                        if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-"))
                        {
                            ViewBag.scripCall += "showmsgJS(1,'Please Select item in grid-1', 2);";
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            return View(model);
                        }
                        if (model[0].Col64 != "53")
                        {
                            if (!negativestock.ToString().Equals("Y"))
                            {
                                if (model[0].dt2.Rows[0]["icode"].ToString().Trim().Equals("-"))
                                {
                                    ViewBag.scripCall += "showmsgJS(1,'Please fill location in grid-2', 2);";
                                    ViewBag.vnew = "disabled='disabled'";
                                    ViewBag.vedit = "disabled='disabled'";
                                    ViewBag.vsave = "";
                                    ViewBag.vsavenew = "";
                                    return View(model);
                                }
                            }
                            foreach (DataRow dr in ds.Tables[0].Rows)
                            {
                                decimal Bal_Qty_Ord = 0, Qty_inv = 0, QTY_Out2 = 0;
                                string fstr = dr["sno"].ToString();
                                string icode = dr["icode"].ToString();
                                string INAME = dr["INAME"].ToString();
                                DataTable dtbtch2;
                                dtbtch2 = model[0].dt1.Clone();
                                var t1 = model[0].dt1.AsEnumerable().GroupBy(k => new
                                {
                                    icode = k.Field<string>("icode"),
                                    iname = k.Field<string>("iname"),
                                    partno = k.Field<string>("partno"),
                                });
                                if (model[0].Col64 == "51" || model[0].Col64 == "52" || model[0].Col64 == "55")
                                {
                                    var t2 = t1.Select(c =>
                                    {
                                        var row = dtbtch2.NewRow();
                                        row["icode"] = c.Key.icode;
                                        row["iname"] = c.Key.iname;
                                        row["partno"] = c.Key.partno;
                                        row["Bal_Qty_Ord"] = c.Sum(k => sgen.Make_decimal(k.Field<string>("Bal_Qty_Ord")));
                                        row["Qty_inv"] = c.Sum(k => sgen.Make_decimal(k.Field<string>("Qty_inv")));
                                        return row;
                                    });
                                    dtbtch2 = t2.CopyToDataTable();
                                    var filtered1 = dtbtch2.Select("icode='" + icode + "'");
                                    foreach (var row in filtered1)
                                    {
                                        Qty_inv = sgen.Make_decimal(row["Qty_inv"].ToString());
                                        Bal_Qty_Ord = sgen.Make_decimal(row["Bal_Qty_Ord"].ToString());
                                    }
                                }
                                else
                                {
                                    var t2 = t1.Select(c =>
                                    {
                                        var row = dtbtch2.NewRow();
                                        row["icode"] = c.Key.icode;
                                        row["iname"] = c.Key.iname;
                                        row["partno"] = c.Key.partno;
                                        row["Qty_inv"] = c.Sum(k => sgen.Make_decimal(k.Field<string>("Qty_inv")));
                                        return row;
                                    });
                                    dtbtch2 = t2.CopyToDataTable();
                                    var filtered1 = dtbtch2.Select("icode='" + icode + "'");
                                    foreach (var row in filtered1)
                                    {
                                        Qty_inv = sgen.Make_decimal(row["Qty_inv"].ToString());
                                    }
                                }
                                DataTable dtbtch3;
                                dtbtch3 = model[0].dt2.Clone();
                                var t21 = model[0].dt2.AsEnumerable().GroupBy(k => new
                                {
                                    icode = k.Field<string>("icode"),
                                    iname = k.Field<string>("iname"),
                                    partno = k.Field<string>("partno"),
                                });
                                var t22 = t21.Select(c =>
                                {
                                    var row = dtbtch3.NewRow();
                                    row["icode"] = c.Key.icode;
                                    row["iname"] = c.Key.iname;
                                    row["partno"] = c.Key.partno;
                                    row["qty_out"] = c.Sum(k => sgen.Make_decimal(k.Field<string>("qty_out")));
                                    return row;
                                });
                                dtbtch3 = t22.CopyToDataTable();
                                if (model[0].Col64 == "51" || model[0].Col64 == "52" || model[0].Col64 == "55")
                                {
                                    if (Bal_Qty_Ord > 0)
                                    {
                                        if (Qty_inv > Bal_Qty_Ord)
                                        {
                                            ViewBag.scripCall += "showmsgJS(1, 'Item " + INAME + ", Invoice Qty Should'nt Be More Than  Balance order Qty in Grid 1,Please Check', 2);";
                                            ModelState.Clear();
                                            ViewBag.vnew = "disabled='disabled'";
                                            ViewBag.vedit = "disabled='disabled'";
                                            ViewBag.vsave = "";
                                            ViewBag.vsavenew = "";
                                            return View(model);
                                        }
                                    }
                                }
                                else
                                {
                                    if (Qty_inv < 0)
                                    {
                                        ViewBag.scripCall += "showmsgJS(1, 'Item " + INAME + ", invoice qty should be greater than 0 in Grid 1,Please Check', 2);";
                                        ModelState.Clear();
                                        ViewBag.vnew = "disabled='disabled'";
                                        ViewBag.vedit = "disabled='disabled'";
                                        ViewBag.vsave = "";
                                        ViewBag.vsavenew = "";
                                        return View(model);
                                    }
                                }
                                var filtered = dtbtch3.Select("icode='" + icode + "'");
                                foreach (var row in filtered)
                                {
                                    decimal out2 = 0;
                                    QTY_Out2 += out2 = sgen.Make_decimal(row["QTY_Out"].ToString());
                                }
                                if (Qty_inv != QTY_Out2)
                                {
                                    ViewBag.scripCall += "showmsgJS(1, 'Qty_Out does not match with Location Grid of Item " + INAME + "', 2);";
                                    ViewBag.vnew = "disabled='disabled'";
                                    ViewBag.vedit = "disabled='disabled'";
                                    ViewBag.vsave = "";
                                    ViewBag.vsavenew = "";
                                    return View(model);
                                }
                            }
                        }
                        Satransaction sat1 = new Satransaction(userCode, MyGuid);
                        string currdate = sgen.server_datetime(userCode);
                        if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                        {
                            isedit = true;
                            vch_num = model[0].Col16;
                            vch_num = model[0].Col47;
                        }
                        else
                        {
                            isedit = false;
                            string sameserial = sgen.seekval(userCode, "select param1 from controls where type='CTL' and m_module3='-' and id='000018'", "param1");
                            if (sameserial.Trim().Equals("Y"))
                            {
                                mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where substr(trim(type),1,1)='4'" + model[0].Col11.Trim() + "";
                            }
                            else
                            {
                                mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                            }
                            vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        }
                        bool Result = false;
                        DataTable dataTable = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                        DataTable dtbtch = cmd_Fun.GetStructure(userCode, "btchtrans");
                        DataTable dtv = cmd_Fun.GetStructure(userCode, "vouchers");
                        DataTable dtsales = cmd_Fun.GetStructure(userCode, "sales");
                        for (int i = 0; i < model[0].dt1.Rows.Count; i++)
                        {
                            DataRow dr = dataTable.NewRow();
                            dr["type"] = model[0].Col12;
                            dr["vch_num"] = vch_num.Trim();
                            dr["vch_date"] = sgen.Make_date_S(model[0].Col48);
                            dr["acode"] = model[0].Col49;
                            dr["shipfrom"] = model[0].Col50;
                            dr["shipto"] = model[0].Col51;
                            dr["icode"] = model[0].dt1.Rows[i][2].ToString();
                            dr["iname"] = model[0].dt1.Rows[i][3].ToString();
                            dr["cpartno"] = model[0].dt1.Rows[i][4].ToString();
                            dr["hsno"] = model[0].dt1.Rows[i][5].ToString();
                            dr["uom"] = model[0].dt1.Rows[i][6].ToString();
                            dr["taxrate"] = model[0].dt1.Rows[i][7].ToString().Replace("%", "");
                            dr["qtystk"] = model[0].dt1.Rows[i][8].ToString();
                            dr["netamt"] = model[0].Col84; //net amount
                            dr["potype"] = model[0].Col64; //so type
                            dr["GFREIGHT"] = model[0].Col69; //
                            dr["DEPTNAME"] = model[0].Col70; //
                            dr["ewayno"] = model[0].Col86; //ewayno
                            dr["chldate"] = sgen.Make_date_S(model[0].Col87); //ewaydate
                            dr["inspected"] = model[0].SelectedItems5.FirstOrDefault();//chnnel
                            dr["tmode"] = model[0].SelectedItems3.FirstOrDefault();
                            dr["pay_term"] = model[0].SelectedItems1.FirstOrDefault();
                            dr["price_term"] = model[0].SelectedItems2.FirstOrDefault();
                            dr["trptr_name"] = model[0].SelectedItems4.FirstOrDefault();
                            dr["gothrchrg"] = model[0].Col59;  //po no
                            dr["date1"] = sgen.Make_date_S(model[0].Col60);  //po date
                            if (model[0].Col64 != "54")
                            {
                                if (model[0].Col64 == "51")
                                {
                                    dr["ordqty"] = model[0].dt1.Rows[i][9].ToString();
                                    dr["date3"] = sgen.Make_date_S(model[0].Col63); //so-date
                                    dr["insurance"] = model[0].Col29;
                                    dr["pono"] = model[0].dt1.Rows[i]["PO_no"].ToString(); //po no
                                    dr["sodate"] = sgen.Make_date_S(model[0].dt1.Rows[i]["SO_date"].ToString());
                                    dr["podate"] = sgen.Make_date_S(model[0].dt1.Rows[i]["PO_date"].ToString());
                                    dr["sono"] = model[0].dt1.Rows[i]["SO_no"].ToString();  //so no
                                    dr["iremark"] = model[0].dt1.Rows[i]["Remark"].ToString();
                                    dr["qtyout"] = model[0].dt1.Rows[i]["Qty_inv"].ToString();
                                    dr["ewaydate"] = sgen.Make_date_S(model[0].dt1.Rows[i]["delivery_date"].ToString());
                                    if (model[0].Col12 == "45")
                                    {
                                        dr["mat_cosamt"] = model[0].dt1.Rows[i]["MAT_CONS_AMT"].ToString();
                                        dr["mat_cosunit"] = model[0].dt1.Rows[i]["MAT_CONS_PER"].ToString();
                                        dr["amrtchrgamt"] = model[0].dt1.Rows[i]["AMORT_CHRGS_AMOUNT"].ToString();
                                        dr["amrtchrgunit"] = model[0].dt1.Rows[i]["AMORT_CHRGS_PERUNIT"].ToString();
                                    }
                                    dr["store"] = "Y";
                                }
                                if (model[0].Col64 == "55")
                                {
                                    dr["ordqty"] = model[0].dt1.Rows[i][9].ToString();
                                    dr["date3"] = sgen.Make_date_S(model[0].Col81); //pi-date
                                    dr["insurance"] = model[0].Col80; //pi-no
                                    dr["pi_no"] = model[0].dt1.Rows[i]["PI_NO"].ToString(); //po no
                                    dr["pi_date"] = sgen.Make_date_S(model[0].dt1.Rows[i]["PI_DATE"].ToString()); //po no
                                    dr["iremark"] = model[0].dt1.Rows[i]["Remark"].ToString();
                                    dr["qtyout"] = model[0].dt1.Rows[i]["Qty_inv"].ToString();
                                    dr["store"] = "Y";
                                }
                                if (model[0].Col64 == "52")
                                {
                                    dr["ordqty"] = model[0].dt1.Rows[i]["Bal_Qty_Ord"].ToString();
                                    dr["date3"] = sgen.Make_date_S(model[0].Col63); //so-date
                                    dr["insurance"] = model[0].Col29;
                                    dr["RGPTYPE"] = model[0].Col65; //sdl no
                                    dr["date4"] = sgen.Make_date_S(model[0].Col66); //sdl-date
                                    dr["qtyout"] = model[0].dt1.Rows[i]["Qty_inv"].ToString();
                                    dr["pono"] = model[0].dt1.Rows[i]["PO_no"].ToString(); //po no
                                    dr["podate"] = sgen.Make_date_S(model[0].dt1.Rows[i]["PO_date"].ToString());
                                    dr["sodate"] = sgen.Make_date_S(model[0].dt1.Rows[i]["SO_date"].ToString());
                                    dr["sono"] = model[0].dt1.Rows[i]["SO_no"].ToString();  //so no
                                    dr["sdldate"] = sgen.Make_date_S(model[0].dt1.Rows[i]["sdl_date"].ToString());
                                    dr["sdlno"] = model[0].dt1.Rows[i]["sdl_no"].ToString();  //sdl no
                                    dr["iremark"] = model[0].dt1.Rows[i]["Remark"].ToString();
                                    if (model[0].Col12 == "45")
                                    {
                                        dr["mat_cosamt"] = model[0].dt1.Rows[i]["MAT_CONS_AMT"].ToString();
                                        dr["mat_cosunit"] = model[0].dt1.Rows[i]["MAT_CONS_PER"].ToString();
                                        dr["amrtchrgamt"] = model[0].dt1.Rows[i]["AMORT_CHRGS_AMOUNT"].ToString();
                                        dr["amrtchrgunit"] = model[0].dt1.Rows[i]["AMORT_CHRGS_PERUNIT"].ToString();
                                    }
                                    dr["store"] = "Y";
                                }
                                if (model[0].Col64 == "53")
                                {
                                    dr["store"] = "N";
                                    dr["qtyout"] = model[0].dt1.Rows[i][9].ToString();
                                    dr["date3"] = sgen.Make_date_S(model[0].Col63); //so-date
                                    dr["insurance"] = model[0].Col29;
                                    dr["RGPTYPE"] = model[0].Col65; //sdl no
                                    dr["date4"] = sgen.Make_date_S(model[0].Col66); //sdl-date
                                    dr["chlno"] = model[0].Col67; //dsp no
                                    dr["req_by"] = model[0].Col71; //dsp thr
                                    dr["invdate"] = sgen.Make_date_S(model[0].Col68); //dsp-date
                                    dr["pono"] = model[0].dt1.Rows[i]["PO_no"].ToString(); //po no
                                    dr["podate"] = sgen.Make_date_S(model[0].dt1.Rows[i]["PO_date"].ToString());
                                    dr["sodate"] = sgen.Make_date_S(model[0].dt1.Rows[i]["SO_date"].ToString());
                                    dr["sono"] = model[0].dt1.Rows[i]["SO_no"].ToString();  //so no
                                    dr["sdldate"] = sgen.Make_date_S(model[0].dt1.Rows[i]["sdl_date"].ToString());
                                    dr["sdlno"] = model[0].dt1.Rows[i]["sdl_no"].ToString();  //sdl no
                                    dr["dspdate"] = sgen.Make_date_S(model[0].dt1.Rows[i]["dsp_date"].ToString());
                                    dr["dspno"] = model[0].dt1.Rows[i]["dsp_no"].ToString();  //dsp no
                                    dr["iremark"] = model[0].dt1.Rows[i]["Remark"].ToString();
                                }
                            }
                            else if (model[0].Col64 == "54")
                            {
                                dr["iremark"] = model[0].dt1.Rows[i]["Remark"].ToString();
                                dr["ewaydate"] = sgen.Make_date_S(model[0].dt1.Rows[i]["delivery_date"].ToString());
                                if (model[0].Col12 == "45")
                                {
                                    dr["mat_cosamt"] = model[0].dt1.Rows[i]["MAT_CONS_AMT"].ToString();
                                    dr["mat_cosunit"] = model[0].dt1.Rows[i]["MAT_CONS_PER"].ToString();
                                    dr["amrtchrgamt"] = model[0].dt1.Rows[i]["AMORT_CHRGS_AMOUNT"].ToString();
                                    dr["amrtchrgunit"] = model[0].dt1.Rows[i]["AMORT_CHRGS_PERUNIT"].ToString();
                                }
                                dr["qtyout"] = model[0].dt1.Rows[i][9].ToString();
                                dr["store"] = "Y";
                            }
                            if (model[0].Col31 == "") { model[0].Col31 = "-"; }
                            if (model[0].Col32 == "") { model[0].Col32 = "-"; }
                            dr["irate"] = model[0].dt1.Rows[i]["IRATE"].ToString();
                            dr["disctype"] = model[0].dt1.Rows[i]["DISC_TYPE"].ToString();
                            dr["discrate"] = model[0].dt1.Rows[i]["DISC_RATE"].ToString();
                            dr["iamount"] = model[0].dt1.Rows[i]["IAMOUNT"].ToString();
                            dr["taxamt"] = model[0].dt1.Rows[i]["TAXAMOUNT"].ToString();
                            dr["discamt"] = model[0].dt1.Rows[i]["DISCAMOUNT"].ToString();
                            dr["lineamount"] = model[0].dt1.Rows[i]["LINEAMOUNT"].ToString();
                            dr["totremark"] = model[0].Col31;
                            dr["cond"] = model[0].Col32;
                            dr["basicamt"] = model[0].Col33;
                            dr["ginstlchrg"] = model[0].Col37;
                            dr["gserchrg"] = model[0].Col38;
                            dr["gamc"] = model[0].Col39;
                            dr["gloadchrg"] = model[0].Col40;
                            dr["igst"] = model[0].Col34;
                            dr["cgst"] = model[0].Col35;
                            dr["sgst"] = model[0].Col36;
                            dr["col1"] = model[0].Col83;//Less Amortization
                            dr["col2"] = model[0].Col84;//Net Total Amount
                            dr["col3"] = model[0].Col85;//Mat. Cons. Amount
                            dr["round_amt"] = model[0].Col89 == "Y" ? model[0].Col88 : "0";//round amt
                            dr["per_id"] = model[0].SelectedItems6.FirstOrDefault();
                            dr["is_other"] = (model[0].Chk1 == true) ? "Y" : "N"; //is other person
                            if (model[0].Chk1)
                            {
                                dr["other_per"] = model[0].Col82;
                            }
                            dr = getsave(currdate, dr, model);
                            dataTable.Rows.Add(dr);
                        }
                        Result = sgen.Update_data_uncommit2(userCode, dataTable, model[0].Col10.Trim(), model[0].Col8, isedit, sat1);
                        if (model[0].Col64 != "53")
                        {
                            #region Location
                            for (int i = 0; i < model[0].dt2.Rows.Count; i++)
                            {
                                DataRow dr = dtbtch.NewRow();
                                dr["vch_num"] = vch_num;
                                dr["type"] = model[0].Col12;
                                dr["vch_date"] = sgen.Make_date_S(model[0].Col48);//inv date
                                dr["acode"] = model[0].Col49;//party code
                                dr["chldate"] = currdate;//return date
                                dr["chlno"] = model[0].Col23;//sender name
                                dr["invno"] = vch_num;//sender cont.
                                dr["totremark"] = model[0].Col31;
                                dr["icode"] = model[0].dt2.Rows[i]["icode"].ToString();
                                dr["iname"] = model[0].dt2.Rows[i]["iname"].ToString();
                                dr["cpartno"] = model[0].dt2.Rows[i]["partno"].ToString();
                                dr["uom"] = model[0].dt2.Rows[i]["UOM"].ToString();
                                dr["qtystk"] = model[0].dt2.Rows[i]["Qty_in_stock"].ToString();
                                dr["qtyout"] = model[0].dt2.Rows[i]["Qty_Out"].ToString().Trim();
                                dr["iremark"] = model[0].dt2.Rows[i]["Remark"].ToString();
                                dr["loc"] = model[0].dt2.Rows[i]["LocCode"].ToString();
                                dr["locname"] = model[0].dt2.Rows[i]["Loc"].ToString();
                                if (model[0].Col64 != "53")
                                {
                                    dr["store"] = "Y";
                                }
                                else
                                {
                                    dr["store"] = "";
                                }
                                dr = getsave(currdate, dr, model);
                                dtbtch.Rows.Add(dr);
                            }
                            #endregion
                            ok = sgen.Update_data_uncommit2(userCode, dtbtch, "btchtrans", model[0].Col8, isedit, sat1);
                            if (!ok)
                            {
                                sat1.Rollback();
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.vsave = "";
                                ViewBag.vsavenew = "";
                                ViewBag.scripCall += "showmsgJS(1, 'Data Not Saved In Location', 0);";
                                ModelState.Clear();
                                return View(model);
                            }
                        }
                        else
                        {
                            ok = true;
                        }
                        #region Voucher
                        if (isedit)
                        {
                            sat1.Execute_cmd("delete from vouchers where type='" + model[0].Col12 + "' and invno='" + vch_num + "' and client_unit_id='" + unitid_mst + "'");
                        }
                        var IGST = sgen.seekval(userCode, "select cl.vch_num||'-'||cl.c_name res from enx_tab v inner join clients_mst cl on cl.vch_num = v.col7 and " +
                            "find_in_set(cl.client_unit_id,v.client_unit_id)=1 where v.type = 'ACL' and v.client_unit_id = '" + unitid_mst + "' and col2='P001'", "res");
                        var CGST = sgen.seekval(userCode, "select cl.vch_num||'-'||cl.c_name res from enx_tab v inner join clients_mst cl on cl.vch_num = v.col7 and " +
                            "find_in_set(cl.client_unit_id,v.client_unit_id)=1 where v.type = 'ACL' and v.client_unit_id = '" + unitid_mst + "' and col2='P003'", "res");
                        var SGST = sgen.seekval(userCode, "select cl.vch_num||'-'||cl.c_name res from enx_tab v inner join clients_mst cl on cl.vch_num = v.col7 and " +
                            "find_in_set(cl.client_unit_id,v.client_unit_id)=1 where v.type = 'ACL' and v.client_unit_id = '" + unitid_mst + "' and col2='P002'", "res");
                        var SALE = sgen.seekval(userCode, "select group_refrence_number as res from master_setting where master_id='" + model[0].Col12 + "' and find_in_set(client_unit_id,'" + unitid_mst + "')=1 and type='KPO'", "res");
                        try
                        {
                            #region party
                            DataRow drv = dtv.NewRow();
                            drv["REC_ID"] = "0";
                            drv["VCH_NUM"] = vch_num;
                            drv["VCH_DATE"] = sgen.Make_date_S(model[0].Col48);
                            drv["TYPE"] = model[0].Col12;
                            drv["CLIENT_ID"] = clientid_mst;
                            drv["CLIENT_UNIT_ID"] = unitid_mst;
                            drv["ENT_BY"] = userid_mst;
                            drv["ENT_DATE"] = currdate;
                            drv["EDIT_BY"] = userid_mst;
                            drv["EDIT_DATE"] = currdate;
                            drv["CREATED_DATE"] = currdate;
                            drv["RVSCODE"] = SALE;//code
                            drv["ACODE"] = model[0].Col49;//party code
                            drv["ANAME"] = model[0].Col20;//party name
                            drv["CRAMOUNT"] = "0";
                            drv["DRAMOUNT"] = model[0].Col84;
                            drv["INVNO"] = vch_num;
                            //drv["INVAMT"] = model[0].Col84;
                            //drv["BALAMT"] = model[0].Col84;
                            drv["INVDATE"] = sgen.Make_date_S(model[0].Col48);
                            drv["TOTREMARK"] = "party";
                            drv["adj_type"] = "NEW";
                            drv["rno"] = "1";
                            dtv.Rows.Add(drv);
                            #endregion
                            if (model[0].Col89 == "Y")
                            {
                                string acode = sgen.seekval(userCode, "select param2 from controls where type='CTL' and m_module3='billmain' and id='000021'", "param2");
                                if (sgen.Make_decimal(model[0].Col88) > 0)
                                {
                                    #region Round Off
                                    drv = dtv.NewRow();
                                    drv["REC_ID"] = "0";
                                    drv["VCH_NUM"] = vch_num;
                                    drv["VCH_DATE"] = sgen.Make_date_S(model[0].Col48);
                                    drv["TYPE"] = model[0].Col12;
                                    drv["CLIENT_ID"] = clientid_mst;
                                    drv["CLIENT_UNIT_ID"] = unitid_mst;
                                    drv["ENT_BY"] = userid_mst;
                                    drv["ENT_DATE"] = currdate;
                                    drv["EDIT_BY"] = userid_mst;
                                    drv["EDIT_DATE"] = currdate;
                                    drv["CREATED_DATE"] = currdate;
                                    drv["RVSCODE"] = model[0].Col49;//CODE
                                    drv["ACODE"] = acode;//sales
                                    drv["ANAME"] = sgen.seekval(userCode, "select distinct c_name as name from clients_mst where vch_num||client_unit_id = '" + acode + unitid_mst + "'", "name");//account name
                                    drv["ANAME"] = "Sales";//party name
                                    drv["CRAMOUNT"] = model[0].Col88;
                                    drv["DRAMOUNT"] = "0";
                                    drv["INVNO"] = vch_num;
                                    drv["INVDATE"] = sgen.Make_date_S(model[0].Col48);
                                    drv["TOTREMARK"] = "sales";
                                    drv["adj_type"] = "OAC";
                                    drv["rno"] = "2";
                                    dtv.Rows.Add(drv);
                                }
                                #endregion

                            }
                            #region Sales
                            if (sgen.Make_decimal(model[0].Col33) > 0)
                            {
                                drv = dtv.NewRow();
                                drv["REC_ID"] = "0";
                                drv["VCH_NUM"] = vch_num;
                                drv["VCH_DATE"] = sgen.Make_date_S(model[0].Col48);
                                drv["TYPE"] = model[0].Col12;
                                drv["CLIENT_ID"] = clientid_mst;
                                drv["CLIENT_UNIT_ID"] = unitid_mst;
                                drv["ENT_BY"] = userid_mst;
                                drv["ENT_DATE"] = currdate;
                                drv["EDIT_BY"] = userid_mst;
                                drv["EDIT_DATE"] = currdate;
                                drv["CREATED_DATE"] = currdate;
                                drv["RVSCODE"] = model[0].Col49;//CODE
                                drv["ACODE"] = SALE;//sales
                                drv["ANAME"] = "Sales";//party name
                                drv["CRAMOUNT"] = model[0].Col33;
                                drv["DRAMOUNT"] = "0";
                                drv["INVNO"] = vch_num;
                                drv["INVDATE"] = sgen.Make_date_S(model[0].Col48);
                                drv["TOTREMARK"] = "sales";
                                drv["adj_type"] = "OAC";
                                drv["rno"] = "3";
                                dtv.Rows.Add(drv);
                            }
                            #endregion

                            #region IGST
                            if (sgen.Make_decimal(model[0].Col38) > 0)
                            {
                                drv = dtv.NewRow();
                                drv["REC_ID"] = "0";
                                drv["VCH_NUM"] = vch_num;
                                drv["VCH_DATE"] = sgen.Make_date_S(model[0].Col48);
                                drv["TYPE"] = model[0].Col12;
                                drv["CLIENT_ID"] = clientid_mst;
                                drv["CLIENT_UNIT_ID"] = unitid_mst;
                                drv["ENT_BY"] = userid_mst;
                                drv["ENT_DATE"] = currdate;
                                drv["EDIT_BY"] = userid_mst;
                                drv["EDIT_DATE"] = currdate;
                                drv["CREATED_DATE"] = currdate;
                                drv["RVSCODE"] = model[0].Col49;
                                drv["ACODE"] = IGST.Trim().Split('-')[0].Trim();//gst
                                drv["ANAME"] = IGST.Trim().Split('-')[0].Trim();//party name
                                drv["CRAMOUNT"] = model[0].Col38;
                                drv["DRAMOUNT"] = "0";
                                drv["INVNO"] = vch_num;
                                drv["INVDATE"] = sgen.Make_date_S(model[0].Col48);
                                drv["TOTREMARK"] = "igst";
                                drv["adj_type"] = "OAC";
                                drv["rno"] = "4";
                                dtv.Rows.Add(drv);
                            }
                            #endregion
                            #region CGST
                            if (sgen.Make_decimal(model[0].Col39) > 0)
                            {
                                drv = dtv.NewRow();
                                drv["REC_ID"] = "0";
                                drv["VCH_NUM"] = vch_num;
                                drv["VCH_DATE"] = sgen.Make_date_S(model[0].Col48);
                                drv["TYPE"] = model[0].Col12;
                                drv["CLIENT_ID"] = clientid_mst;
                                drv["CLIENT_UNIT_ID"] = unitid_mst;
                                drv["ENT_BY"] = userid_mst;
                                drv["ENT_DATE"] = currdate;
                                drv["EDIT_BY"] = userid_mst;
                                drv["EDIT_DATE"] = currdate;
                                drv["CREATED_DATE"] = currdate;
                                drv["RVSCODE"] = model[0].Col49;
                                drv["ACODE"] = CGST.Trim().Split('-')[0].Trim();//gst
                                drv["ANAME"] = CGST.Trim().Split('-')[0].Trim();//party name
                                drv["CRAMOUNT"] = model[0].Col39;
                                drv["DRAMOUNT"] = "0";
                                drv["INVNO"] = vch_num;
                                drv["INVDATE"] = sgen.Make_date_S(model[0].Col48);
                                drv["TOTREMARK"] = "cgst";
                                drv["adj_type"] = "OAC";
                                drv["rno"] = "5";
                                dtv.Rows.Add(drv);
                            }
                            #endregion
                            #region SGST
                            if (sgen.Make_decimal(model[0].Col40) > 0)
                            {
                                drv = dtv.NewRow();
                                drv["REC_ID"] = "0";
                                drv["VCH_NUM"] = vch_num;
                                drv["VCH_DATE"] = sgen.Make_date_S(model[0].Col48);
                                drv["TYPE"] = model[0].Col12;
                                drv["CLIENT_ID"] = clientid_mst;
                                drv["CLIENT_UNIT_ID"] = unitid_mst;
                                drv["ENT_BY"] = userid_mst;
                                drv["ENT_DATE"] = currdate;
                                drv["EDIT_BY"] = userid_mst;
                                drv["EDIT_DATE"] = currdate;
                                drv["CREATED_DATE"] = currdate;
                                drv["RVSCODE"] = model[0].Col49;
                                drv["ACODE"] = SGST.Trim().Split('-')[0].Trim();//gst
                                drv["ANAME"] = SGST.Trim().Split('-')[0].Trim(); //party name
                                drv["CRAMOUNT"] = model[0].Col40;
                                drv["DRAMOUNT"] = "0";
                                drv["INVNO"] = vch_num;
                                drv["INVDATE"] = sgen.Make_date_S(model[0].Col48);
                                drv["TOTREMARK"] = "sgst";
                                drv["adj_type"] = "OAC";
                                drv["rno"] = "6";
                                dtv.Rows.Add(drv);
                            }
                            #endregion
                            #region other charges
                            if (model[0].LTM1 != null && model[0].LTM1.Count > 0)
                            {
                                for (int k = 0; k < model[0].LTM1.Count; k++)
                                {
                                    var OTHERS = sgen.seekval(userCode, "select group_refrence_number as res from master_setting where master_id='" + model[0].LTM1[k].Col15 + "' and find_in_set(client_unit_id,'" + unitid_mst + "')=1 and type='MR0'", "res");

                                    drv = dtv.NewRow();
                                    drv["REC_ID"] = "0";
                                    drv["VCH_NUM"] = vch_num;
                                    drv["VCH_DATE"] = sgen.Make_date_S(model[0].Col48);
                                    drv["TYPE"] = model[0].Col12;
                                    drv["CLIENT_ID"] = clientid_mst;
                                    drv["CLIENT_UNIT_ID"] = unitid_mst;
                                    drv["ENT_BY"] = userid_mst;
                                    drv["ENT_DATE"] = currdate;
                                    drv["EDIT_BY"] = userid_mst;
                                    drv["EDIT_DATE"] = currdate;
                                    drv["CREATED_DATE"] = currdate;
                                    drv["RVSCODE"] = model[0].Col49;
                                    drv["ACODE"] = OTHERS;//party code
                                    drv["ANAME"] = "other Charges";//chrg_name
                                    drv["CRAMOUNT"] = model[0].LTM1[k].Col16; //amount chrg
                                    drv["DRAMOUNT"] = "0";
                                    drv["INVNO"] = vch_num;
                                    drv["INVDATE"] = sgen.Make_date_S(model[0].Col48);
                                    drv["TOTREMARK"] = "other charges";
                                    drv["adj_type"] = "OAC";
                                    drv["rno"] = (k + 7).ToString();
                                    dtv.Rows.Add(drv);
                                }
                            }
                            #endregion
                        }
                        catch (Exception ex)
                        {
                        }
                        #endregion
                        res = sgen.Update_data_uncommit2(userCode, dtv, "vouchers", model[0].Col8, false, sat1);
                        if (!res)
                        {
                            sat1.Rollback();
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            ViewBag.scripCall += "showmsgJS(1, 'Data Not Saved In Vouchers', 0);";
                            ModelState.Clear();
                            return View(model);
                        }
                        if (Result && ok)
                        {
                            if (!isedit && model[0].Chk1)
                            {
                                string CONTVCH_NUM = "";
                                #region new contact
                                mq = "select max(to_number(vch_num)) as auto_genid from clients_mst a where  type in " +
                                            "('BCD' ,'DDBCD')" + model[0].Col11.Trim() + " and ref_code='" + model[0].Col49.Trim() + "' and substr(ref_code,0,3)='303'";
                                CONTVCH_NUM = sgen.genNo(userCode, mq, 6, "auto_genid");
                                DataTable dtstrr = cmd_Fun.GetStructure(userCode, "clients_mst");
                                DataRow dr = dtstrr.NewRow();
                                dr["ref_code"] = model[0].Col49;
                                dr["vch_num"] = CONTVCH_NUM;
                                dr["vch_date"] = sgen.Savedate(currdate, false);
                                dr["type"] = "BCD";
                                dr["cpname"] = model[0].Col82;//cont per name
                                dr["rec_id"] = "0";
                                dr["client_id"] = clientid_mst;
                                dr["client_unit_id"] = unitid_mst;
                                dr["ent_by"] = userid_mst;
                                dr["ent_date"] = currdate;
                                dr["edit_by"] = "-";
                                dr["edit_date"] = currdate;
                                dtstrr.Rows.Add(dr);
                                bool ok = sgen.Update_data_fast1(userCode, dtstrr, "clients_mst", tm.Col8, isedit);
                                #endregion
                            }
                            DataTable dten = cmd_Fun.GetStructure(userCode, "enx_tab");
                            if (model[0].LTM1 != null && model[0].LTM1.Count > 0)
                            {
                                res = false;
                                #region dr
                                for (int k = 0; k < model[0].LTM1.Count; k++)
                                {
                                    DataRow dr = dten.NewRow();
                                    dr["type"] = model[0].Col12;
                                    dr["vch_num"] = vch_num.Trim();
                                    dr["vch_date"] = sgen.Savedate(model[0].Col48, true);
                                    dr["r_no"] = model[0].LTM1[k].Col14;
                                    dr["col1"] = model[0].LTM1[k].Col15;//chrgid
                                    dr["col2"] = model[0].LTM1[k].Col16;//chrgamt
                                    dr["col3"] = model[0].LTM1[k].Col13;//chrgrtid
                                    dr["col4"] = model[0].LTM1[k].Col17.ToString().Replace("%", ""); ;//igstrt
                                    dr["col5"] = model[0].LTM1[k].Col18;//igstamt
                                    dr["col6"] = model[0].LTM1[k].Col19.ToString().Replace("%", ""); ;//cgstrt
                                    dr["col7"] = model[0].LTM1[k].Col20;//cgstamt
                                    dr["col8"] = model[0].LTM1[k].Col21.ToString().Replace("%", "");//sgstrt
                                    dr["col9"] = model[0].LTM1[k].Col22;//sgstamt
                                    dr["col10"] = model[0].LTM1[k].Col27;//hsnvch
                                    dr["col11"] = model[0].LTM1[k].Col28;//hsncode
                                    dr["col12"] = model[0].LTM1[k].Col25;//per

                                    dr = getsave(currdate, dr, model);
                                    dten.Rows.Add(dr);
                                }
                                #endregion
                                res = sgen.Update_data_fast1_uncommit(userCode, dten, "enx_tab", model[0].Col8, isedit, sat1);
                                if (!res)
                                {
                                    sat1.Rollback();
                                    ViewBag.vnew = "disabled='disabled'";
                                    ViewBag.vedit = "disabled='disabled'";
                                    ViewBag.vsave = "";
                                    ViewBag.vsavenew = "";
                                    ViewBag.scripCall += "showmsgJS(1, 'Calc error', 0);";
                                    ModelState.Clear();
                                    return View(model);
                                }
                            }
                            if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                            {
                                sat1.Commit();
                                ViewBag.vnew = "";
                                ViewBag.vedit = "";
                                ViewBag.vsave = "disabled='disabled'";
                                ViewBag.vsavenew = "disabled='disabled'";
                                ViewBag.vimport = "disabled='disabled";
                                string date = sgen.SaveDate_dt(tm.Col48, false).ToString("yyyyMMdd");

                                url = clientid_mst + unitid_mst + vch_num + date + "" + model[0].Col12 + "";
                                sgen.SetSession(MyGuid, "SSEEKVAL", url);
                                ViewBag.scripCall = "showmsgJS(2, 'Data Saved Successfully. Do You Want To Print', 1);disableForm();";

                                //ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                            }
                            else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                            {
                                try
                                {
                                    sat1.Commit();

                                    Make_query("invoice", "Select Order Type", "ORDTYPE", "1", "", "", MyGuid);

                                    ViewBag.scripCall = "callFoo('Select SO Type');";
                                    ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                                }
                                catch (Exception ex)
                                {
                                    ViewBag.scripCall += "mytoast('error', 'toast-top-right', '" + ex.Message.ToString().Replace("'", "").Trim() + "');";
                                }
                            }
                            model = new List<Tmodelmain>();
                            model.Add(new Tmodelmain
                            {
                                Col10 = tm.Col10,
                                Col53 = tm.Col53,
                                Col54 = tm.Col54,
                                Col11 = tm.Col11,
                                Col13 = "Save",
                                Col100 = "Save & New",
                                Col121 = "S",
                                Col122 = "<u>S</u>ave",
                                Col123 = "Save & Ne<u>w</u>",
                                Col14 = tm.Col14,
                                Col15 = tm.Col15,
                                dt1 = ((DataTable)sgen.GetSession(MyGuid, "BINV_DT")).Copy(),
                                dt2 = ((DataTable)sgen.GetSession(MyGuid, "BINV_DT2")).Copy(),
                                TList2 = mod2,
                                TList3 = mod3,
                                TList1 = mod1,
                                TList4 = mod4,
                                TList5 = mod5,
                                TList6 = mod6,
                                SelectedItems3 = new string[] { "" },
                                SelectedItems5 = new string[] { "" },
                                SelectedItems6 = new string[] { "" },
                                SelectedItems4 = new string[] { "" },
                                SelectedItems2 = new string[] { "" },
                                SelectedItems1 = new string[] { "" },
                            });
                            sgen.SetSession(MyGuid, "So_num", null);
                            sgen.SetSession(MyGuid, "Sdl_num", null);
                            sgen.SetSession(MyGuid, "dsp_numbr", null);
                        }
                    }
                    catch (Exception ex) { ViewBag.scripCall = "showmsgJS(1,'" + ex.Message.ToString().Replace("'", "") + "', 0);"; }
                }
                else if (command == "hfbtnyes")
                {
                    model = CallbackFun("PRINT", "N", "invoice", "Billing", model);
                }
                else if (command == "Import")
                {
                    string currdate = sgen.server_datetime(userCode);

                    HttpPostedFileBase file1 = upd1;
                    DataTable dt = new DataTable();
                    if (file1.ContentLength > 1)
                    {
                        string ext = Path.GetExtension(file1.FileName).ToLower();
                        if (ext == ".csv")
                        {
                            string filesavepath = AppDomain.CurrentDomain.BaseDirectory + "\\Uploads\\" + cg_com_name.Replace(" ", "")
                                + "\\file" + DateTime.Now.ToString("ddMMyyyyhhmmfff") + ext;
                            file1.SaveAs(filesavepath);
                            // Read sample data from CSV file
                            int i = 0;
                            using (CsvFileReader reader = new CsvFileReader(filesavepath))
                            {
                                CsvRow row = new CsvRow();
                                while (reader.ReadRow(row))
                                {
                                    DataRow dr = dt.NewRow();
                                    for (int c = 0; c < row.Count; c++)
                                    {
                                        if (i == 0) { dt.Columns.Add(row[c].ToString()); }
                                        else { dr[c] = row[c].ToString(); }
                                        //if (c > dt.Columns.Count) break;                                                                 
                                    }
                                    i++;
                                    dt.Rows.Add(dr);
                                }
                            }
                        }
                        try
                        {
                            dt.Rows[0].Delete();
                            for (int k = 0; k < dt.Rows.Count; k++)
                            {
                                //mq = sgen.seekval(userCode, "select icode from item where icode='" + dt.Rows[k]["icode"].ToString() + "' and type='IT' and sale='Y' and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "'", "icode");
                                mq = sgen.seekval(userCode, "select icode from item where icode='" + dt.Rows[k]["icode"].ToString() + "' and type='IT' and sale='Y' and client_unit_id='" + unitid_mst + "'", "icode");
                                if (mq.Trim() == "0")
                                {
                                    ViewBag.vnew = "disabled='disabled'";
                                    ViewBag.vedit = "disabled='disabled'";
                                    ViewBag.vsave = "";
                                    ViewBag.vsavenew = "";
                                    ViewBag.scripCall += "showmsgJS(1,'Icode: " + dt.Rows[k]["icode"].ToString() + " not found,please check.', 0);";
                                    ModelState.Clear();
                                    return View(model);
                                }
                            }
                            string Fdate = sgen.server_datetime_dt(userCode).ToString("dd/MM/yyyy");
                            mq1 = "select '-' item,'0' Sno,i.icode,i.iname,i.cpartno partno,u.master_name uom,h.master_name hsn,h.group_name taxrate,nvl(s.closing, 0) qty_in_stock," +
                                "'0' iamount,'0' taxamount,'0' discamount,'0' lineamount,'' Delivery_date from item i " +
                                "inner join  master_setting u on u.master_id = i.uom and u.type = 'UMM' and find_in_set(u.client_unit_id, i.client_unit_id)= 1 " +
                                "inner join  master_setting h on h.master_id = i.hsno and h.type = 'HSN' and find_in_set(h.client_unit_id, i.client_unit_id)= 1 " +
                                "left join(select icode,client_unit_id,sum(op) op,sum(pktop) pktop,sum(qtyin) qtyin,sum(qtyout) out," +
                                      "sum(op)+sum(qtyin)-sum(qtyout) closing from (select icode, client_unit_id, nvl(op_2019, 0) op," +
                                      " nvl(pkt_2019, 0) pktop, 0 qtyin, 0 qtyout, 0 pktno from itbal union all select icode, client_unit_id, " +
                                      "sum(to_number(qtyin)) - sum(to_number(qtyout)) op, sum((case when substr(type, 1, 1) in ('0', '1') then" +
                                      " pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktop,sum(to_number(qtyin)) " +
                                      "qtyin,sum(to_number(qtyout)) qtyout,0 pktno from itransaction where trim(store) = 'Y' and " +
                                      "to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and " +
                                      "to_date('" + year_from.Split(' ')[0].Trim() + "','" + sgen.Getsqldateformat() + "')-1 group by icode,client_unit_id union all select icode,client_unit_id," +
                                      "0 as op,0 as pktop,to_number(qtyin) qtyin,to_number(qtyout) qtyout,sum((case when substr(type, 1, 1) in " +
                                      "('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktno from " +
                                      "itransaction where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between " +
                                      "to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and to_date('" + Fdate + "','" + sgen.Getsqldateformat() + "') group by icode,client_unit_id," +
                                      "to_number(qtyin),to_number(qtyout)) a group by icode, client_unit_id) s on i.icode = s.icode and find_in_set(i.client_unit_id, s.client_unit_id)=1 " +
                                "where i.type = 'IT' and i.sale='Y' and find_in_set(i.client_unit_id, '" + unitid_mst + "')=1";
                            DataTable dt2 = sgen.getdata(userCode, mq1);
                            if (dt2.Rows.Count > 0)
                            {
                                var results = from table1 in dt.AsEnumerable()
                                              join table2 in dt2.AsEnumerable() on table1["icode"] equals table2["icode"]
                                              select new
                                              {
                                                  item = table2["item"],
                                                  sno = table2["sno"],
                                                  icode = table1["icode"],
                                                  iname = table2["iname"],
                                                  partno = table2["partno"],
                                                  hsn = table2["hsn"],
                                                  uom = table2["uom"],
                                                  taxrate = table2["taxrate"],
                                                  qty_in_stock = table2["qty_in_stock"],
                                                  qty_ord = table1["qty_ord"],
                                                  irate = table1["irate"],
                                                  disc_type = table1["disc_type"],
                                                  disc_rate = table1["disc_rate"],
                                                  iamount = table2["iamount"],
                                                  taxamount = table2["taxamount"],
                                                  discamount = table2["discamount"],
                                                  lineamount = table2["lineamount"],
                                                  delivery_date = table2["delivery_date"],
                                                  remark = table1["remark"]
                                              };
                                results.ToList();
                                DataTable dtk = sgen.ToDataTable(results.ToList());
                                model[0].dt1 = dtk;
                                ViewBag.vsave = "";
                                ViewBag.vimport = "";
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                            }
                        }
                        catch (Exception err) { sgen.showmsg(1, err.Message.ToString().Replace("'", ""), 0); }
                    }
                }
                else if (command == "-")
                {
                    if (model[0].dt1.Rows.Count > 1) model[0].dt1.Rows.RemoveAt(sgen.Make_int(hfrow));
                    else { model[0].dt1 = ((DataTable)sgen.GetSession(MyGuid, "BINV_DT")).Copy(); }
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        [HttpPost]
        public void sodelrno(string value)
        {
            sgen.SetSession(MyGuid, "sodelrno", value);
        }
        [HttpGet]
        public FileResult invtemp(List<Tmodelmain> model, string Myguid = "")
        {
            FillMst(Myguid);
            model = (List<Tmodelmain>)sgen.GetSession(Myguid, "model");
            DataTable dtl = new DataTable();
            mq = "SELECT '' Icode,'' Qty_ord,'' Irate,'' Disc_type,'' Disc_Rate,'' Delivery_date,'' Remark from Dual";
            dtl = sgen.getdata(userCode, mq);
            string cg_com_name = sgen.GetCookie(MyGuid, "cg_com_name");
            Byte[] fileBytes = sgen.Exp_to_csv_new(dtl, "invoice_temp", cg_com_name);
            return File(fileBytes, System.Net.Mime.MediaTypeNames.Application.Octet, "invoice_temp");
        }
        #endregion
        #region Sales Forcast
        public ActionResult s_fcast()
        {
            FillMst("");
            List<Tmodelmain> model = new List<Tmodelmain>();
            List<SelectListItem> mod1 = new List<SelectListItem>();
            model = getload(model);
            model[0].Col9 = "SALES FORCAST";
            model[0].Col10 = "itransactionc";
            model[0].Col12 = "BFC";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            DataTable dtb = (DataTable)sgen.GetSession(MyGuid, "URIGHTS");
            try
            {
                dtb = dtb.Select("m_id='" + model[0].Col14 + "'").CopyToDataTable();
                if (dtb.Rows.Count > 0)
                {
                    model[0].Col91 = dtb.Rows[0]["btnnew"].ToString();
                    model[0].Col92 = dtb.Rows[0]["btnedit"].ToString();
                    model[0].Col93 = dtb.Rows[0]["btnview"].ToString();
                }
            }
            catch (Exception ex) { }
            DataTable dt = sgen.getdata(userCode, "select '' Item,'1' as  SNo ,'-' as Icode,'-' as IName,'-' PARTNO,'-' as UOM,'0' as  Qty_in_stock,'0' as SO_qty,'0' INV_qty,'0' Sales_forcast,'0' as IRate," +
               "'0' IAmount,'-' as Delivery_date,'-' as Remark from dual");
            model[0].dt1 = dt;
            sgen.SetSession(MyGuid, "BFC_DT", dt.Copy());
            model[0].TList1 = mod1;
            model[0].SelectedItems1 = new string[] { "" };
            ModelState.Clear();
            return View(model);
        }
        public List<Tmodelmain> new_fcast(List<Tmodelmain> model)
        {
            try
            {
                model = getnew(model);
                model[0].Col13 = "Save";
                model[0].Col100 = "Save & New";
                model[0].Col121 = "S";
                model[0].Col122 = "<u>S</u>ave";
                model[0].Col123 = "Save & Ne<u>w</u>";
                model[0].Col17 = sgen.server_datetime_local(userCode);
                List<SelectListItem> mod1 = new List<SelectListItem>();
                #region so mod
                DataTable dtm = new DataTable();
                dtm = sgen.getdata(userCode, "select DISTINCT master_id,master_name from master_setting where type='MNT'");
                foreach (DataRow dr in dtm.Rows)
                {
                    mod1.Add(new SelectListItem { Text = dr["master_name"].ToString(), Value = dr["master_id"].ToString() });
                }
                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
                //model[0].TList1 = mod1;
                #endregion
            }
            catch (Exception ex) { }
            return model;
        }
        [HttpPost]
        public ActionResult s_fcast(List<Tmodelmain> model, string command, string hfrow, string hftable, HttpPostedFileBase upd1)
        {
            try
            {
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();
                #region ddl          
                List<SelectListItem> mod1 = new List<SelectListItem>();
                TempData[MyGuid + "_TList1"] = model[0].TList1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                //TempData[MyGuid + "_TList1"] = model[0].TList1;
                if (tm.SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                #endregion
                DataTable dtm = sgen.settable(hftable);
                model[0].dt1 = dtm;
                if (command == "New")
                {
                    model = new_fcast(model);
                }
                if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    if (model[0].Col92 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for edit SO, please contact your admin', 2);disableForm();";
                        return View(model);
                    }
                    model = StartCallback(model);
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {
                    if (model[0].Col91 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for save SO, please contact your admin', 2);";
                        return View(model);
                    }
                    try
                    {
                        if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-"))
                        {
                            ViewBag.scripCall += "showmsgJS(1,'Please Select item in grid-1', 2);";
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            return View(model);
                        }
                        string currdate = sgen.server_datetime(userCode);
                        if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                        {
                            isedit = true;
                            vch_num = model[0].Col16;
                        }
                        else
                        {
                            isedit = false;
                            mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                            vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        }
                        DataTable dataTable = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                        for (int i = 0; i < model[0].dt1.Rows.Count; i++)
                        {
                            DataRow dr = dataTable.NewRow();
                            dr["rec_id"] = "0";
                            dr["type"] = model[0].Col12;
                            dr["vch_num"] = vch_num.Trim();
                            dr["vch_date"] = sgen.Make_date_S(model[0].Col17);
                            dr["PONO"] = model[0].SelectedItems1.FirstOrDefault();
                            dr["RNO"] = model[0].Col18;
                            dr["icode"] = model[0].dt1.Rows[i]["icode"].ToString();
                            dr["iname"] = model[0].dt1.Rows[i]["INAME"].ToString();
                            dr["cpartno"] = model[0].dt1.Rows[i]["PARTNO"].ToString();
                            dr["uom"] = model[0].dt1.Rows[i]["UOM"].ToString();
                            dr["qtystk"] = model[0].dt1.Rows[i]["QTY_IN_STOCK"].ToString();
                            dr["qtyout"] = model[0].dt1.Rows[i]["SALES_FORCAST"].ToString();
                            dr["QTYPO"] = model[0].dt1.Rows[i]["INV_QTY"].ToString();
                            dr["ORDQTY"] = model[0].dt1.Rows[i]["SO_QTY"].ToString();
                            dr["IRATE"] = model[0].dt1.Rows[i]["IRATE"].ToString();
                            dr["iamount"] = model[0].dt1.Rows[i]["IAmount"].ToString();
                            dr["IREMARK"] = model[0].dt1.Rows[i]["Remark"].ToString();
                            dr["CHLDATE"] = sgen.Make_date_S(model[0].dt1.Rows[i]["Delivery_date"].ToString());
                            dr = getsave(currdate, dr, model);
                            dataTable.Rows.Add(dr);
                        }
                        res = sgen.Update_data_fast1(userCode, dataTable, model[0].Col10.Trim(), model[0].Col8, isedit);
                        if (res)
                        {
                            if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                            {
                                ViewBag.vnew = "";
                                ViewBag.vedit = "";
                                ViewBag.vsave = "disabled='disabled'";
                                ViewBag.vsavenew = "disabled='disabled'";
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                            }
                            else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                            {
                                try
                                {
                                    model = new_fcast(model);
                                    ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                                }
                                catch (Exception ex)
                                {
                                    ViewBag.scripCall += "mytoast('error', 'toast-top-right', '" + ex.Message.ToString().Replace("'", "").Trim() + "');";
                                }
                            }
                            model = new List<Tmodelmain>();
                            model.Add(new Tmodelmain
                            {
                                Col10 = tm.Col10,
                                Col9 = tm.Col9,
                                Col53 = tm.Col53,
                                Col54 = tm.Col54,
                                Col11 = tm.Col11,
                                Col13 = "Save",
                                Col100 = "Save & New",
                                Col121 = "S",
                                Col122 = "<u>S</u>ave",
                                Col123 = "Save & Ne<u>w</u>",
                                Col14 = tm.Col14,
                                Col15 = tm.Col15,
                                TList1 = mod1,
                                SelectedItems1 = new string[] { "" },
                                dt1 = ((DataTable)sgen.GetSession(MyGuid, "BFC_DT")).Copy()
                            });
                        }
                        else
                        {
                            ViewBag.scripCall += "mytoast('error', 'toast-top-right', 'Data Not Saved');";
                        }
                    }
                    catch (Exception ex) { ViewBag.scripCall = "showmsgJS(1,'" + ex.Message.ToString().Replace("'", "") + "', 0);"; }
                }
                else if (command == "-")
                {
                    if (model[0].dt1.Rows.Count > 1) model[0].dt1.Rows.RemoveAt(sgen.Make_int(hfrow));
                    else { model[0].dt1 = ((DataTable)sgen.GetSession(MyGuid, "BFC_DT")).Copy(); }
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion 
        #region Sales Order
        public ActionResult s_order()
        {
            string title = "", pur_type = "", pr_type = "";
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            FillMst(MyGuid);
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            List<SelectListItem> mod1 = new List<SelectListItem>();
            List<SelectListItem> mod2 = new List<SelectListItem>();
            List<SelectListItem> mod3 = new List<SelectListItem>();
            List<SelectListItem> mod5 = new List<SelectListItem>();
            title = "SALES ORDER";
            pur_type = "and pur_type = 'NPI'";//Without PI
            pr_type = "NPI";
            tab_name = "Purchasesc";
            ViewBag.vimport = "disabled='disabled"; model[0].Col10 = tab_name;
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col14 = mid_mst.Trim();
            model[0].Col15 = MyGuid.Trim();
            model[0].Col53 = title;
            model[0].Col54 = pr_type;
            model[0].TList1 = mod1;
            model[0].SelectedItems1 = new string[] { "" };
            model[0].TList2 = mod2;
            model[0].SelectedItems2 = new string[] { "" };
            model[0].TList3 = mod3;
            model[0].SelectedItems3 = new string[] { "" };
            model[0].TList5 = mod5;
            model[0].SelectedItems5 = new string[] { "" };
            model[0].Col12 = "";
            DataTable dtb = (DataTable)sgen.GetSession(MyGuid, "URIGHTS");
            try
            {
                dtb = dtb.Select("m_id='" + model[0].Col14 + "'").CopyToDataTable();
                if (dtb.Rows.Count > 0)
                {
                    model[0].Col91 = dtb.Rows[0]["btnnew"].ToString();
                    model[0].Col92 = dtb.Rows[0]["btnedit"].ToString();
                    model[0].Col93 = dtb.Rows[0]["btnview"].ToString();
                }
            }
            catch (Exception ex) { }
            model[0].Col18 = sgen.seekval(userCode, "select unit_gstin_no from company_unit_profile where cup_id='" + unitid_mst + "'", "unit_gstin_no");
            DataTable dt = sgen.getdata(userCode, "select '' Item,'1' as  SNo ,'-' as Icode,'-' as IName,'-' PARTNO,'-'  HSN,'-' as UOM,'0' as TaxRate,'0' as  Qty_in_stock,'0' as Qty_Ord,'0' as IRate," +
               "'-' disc_type,'0' as disc_rate,'0' IAmount,'0' TaxAmount,'0' discAmount,'0' LineAmount,'-' as delivery_date,'-' as Remark from dual");
            model[0].dt1 = dt;
            sgen.SetSession(MyGuid, "BSO_DT", dt.Copy());
            ModelState.Clear();
            return View(model);
        }
        [HttpPost]
        public ActionResult s_order(List<Tmodelmain> model, string command, string hfrow, string hftable, HttpPostedFileBase upd1)
        {
            try
            {
                #region ddl          
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();
                DataTable dtm = sgen.settable(hftable);
                model[0].dt1 = dtm;
                List<SelectListItem> mod1 = new List<SelectListItem>();
                List<SelectListItem> mod2 = new List<SelectListItem>();
                List<SelectListItem> mod3 = new List<SelectListItem>();
                List<SelectListItem> mod5 = new List<SelectListItem>();
                TempData[MyGuid + "_Tlist1"] = model[0].TList1 = (List<SelectListItem>)TempData[MyGuid + "_Tlist1"];
                TempData[MyGuid + "_Tlist2"] = model[0].TList2 = (List<SelectListItem>)TempData[MyGuid + "_Tlist2"];
                TempData[MyGuid + "_Tlist3"] = model[0].TList3 = (List<SelectListItem>)TempData[MyGuid + "_Tlist3"];
                TempData[MyGuid + "_Tlist5"] = model[0].TList5 = (List<SelectListItem>)TempData[MyGuid + "_Tlist5"];
                if (tm.SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                if (tm.SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
                if (tm.SelectedItems3 == null) model[0].SelectedItems3 = new string[] { "" };
                if (tm.SelectedItems5 == null) model[0].SelectedItems5 = new string[] { "" };
                #endregion
                if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    if (model[0].Col92 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for edit SO, please contact your admin', 2);disableForm();";
                        return View(model);
                    }
                    if (sgen.GetSession(MyGuid, "soorddelrno") != null) btnval = "CHRGDEL";
                    else if (sgen.GetSession(MyGuid, "btnval") != null) btnval = sgen.GetSession(MyGuid, "btnval").ToString();
                    model = CallbackFun(btnval, "N", actionName, controllerName, model);
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                    if (btnval == "PRINT")
                    {
                        ViewBag.vnew = "";
                        ViewBag.vedit = "";
                        ViewBag.vsave = "disabled='disabled'";
                        ViewBag.vsavenew = "disabled='disabled'";
                        ViewBag.vimport = "disabled='disabled";
                    }
                }
                else if (command == "hfbtnyes")
                {
                    model = CallbackFun("PRINT", "N", "s_order", "Billing", model);
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {
                    if (model[0].Col91 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for save SO, please contact your admin', 2);";
                        return View(model);
                    }
                    try
                    {
                        if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-"))
                        {
                            ViewBag.scripCall += "showmsgJS(1,'Please Select item in grid-1', 2);";
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            return View(model);
                        }
                        Satransaction sat1 = new Satransaction(userCode, MyGuid);
                        string currdate = sgen.server_datetime(userCode);
                        if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                        {
                            isedit = true;
                            vch_num = model[0].Col16;
                            vch_num = model[0].Col47;
                        }
                        else
                        {
                            isedit = false;
                            mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + " and pur_type='NPI'";
                            vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                            string condi = sgen.seekval(userCode, "select gothrchrg from " + model[0].Col10 + " where type='" + model[0].Col12 + "' and client_id='" + clientid_mst + "'  and " +
                                           "gothrchrg='" + model[0].Col59 + "' and client_unit_id='" + unitid_mst + "' and pur_type='NPI " + mq1 + "", "gothrchrg");
                            if (!condi.Equals("0"))
                            {
                                //Means Already Exits.... 
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                                ViewBag.scripCall = "showmsgJS(1,'PO No Already Exists',2)";
                                return View(model);
                            }
                        }
                        bool Result = false; string url = "";
                        DataTable dtbtch = cmd_Fun.GetStructure(userCode, "btchtrans");
                        DataTable dataTable = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                        #region DTSTR
                        for (int i = 0; i < model[0].dt1.Rows.Count; i++)
                        {
                            DataRow dr = dataTable.NewRow();
                            dr["rec_id"] = "0";
                            dr["type"] = model[0].Col12;
                            dr["vch_num"] = vch_num.Trim();
                            dr["vch_date"] = sgen.Make_date_S(model[0].Col48);
                            dr["acode"] = model[0].Col49;
                            dr["shipfrom"] = model[0].Col50;
                            dr["shipto"] = model[0].Col51;
                            dr["icode"] = model[0].dt1.Rows[i][2].ToString();
                            dr["iname"] = model[0].dt1.Rows[i][3].ToString();
                            dr["cpartno"] = model[0].dt1.Rows[i][4].ToString();
                            dr["hsno"] = model[0].dt1.Rows[i][5].ToString();
                            dr["uom"] = model[0].dt1.Rows[i][6].ToString();
                            dr["taxrate"] = model[0].dt1.Rows[i][7].ToString();
                            dr["qtystk"] = model[0].dt1.Rows[i][8].ToString();
                            dr["qtyord"] = model[0].dt1.Rows[i][9].ToString();
                            dr["INDNO"] = model[0].SelectedItems5.FirstOrDefault();  //so mode
                            dr["gtaxamt"] = model[0].Col84; //net amount
                            dr["date2"] = sgen.Make_date_S(model[0].Col56);  //so end date
                            dr["tmode"] = model[0].SelectedItems3.FirstOrDefault();
                            dr["pay_term"] = model[0].SelectedItems1.FirstOrDefault();
                            dr["price_term"] = model[0].SelectedItems2.FirstOrDefault();
                            dr["gothrchrg"] = model[0].Col59;  //po no
                            dr["sotype"] = model[0].Col80;  //sotype
                            dr["date1"] = sgen.Make_date_S(model[0].Col60);  //po date
                            dr["iremark"] = model[0].dt1.Rows[i]["REMARK"].ToString();
                            if (model[0].Col31 == "") model[0].Col31 = "-";
                            if (model[0].Col32 == "") model[0].Col32 = "-";
                            dr["irate"] = model[0].dt1.Rows[i]["IRATE"].ToString();
                            dr["disctype"] = model[0].dt1.Rows[i]["DISC_TYPE"].ToString();
                            dr["discrate"] = model[0].dt1.Rows[i]["DISC_RATE"].ToString();
                            dr["iamount"] = model[0].dt1.Rows[i]["IAMOUNT"].ToString();
                            dr["taxamt"] = model[0].dt1.Rows[i]["TAXAMOUNT"].ToString();
                            dr["discamt"] = model[0].dt1.Rows[i]["DISCAMOUNT"].ToString();
                            dr["lineamount"] = model[0].dt1.Rows[i]["LINEAMOUNT"].ToString();
                            if (model[0].Col80 != null && model[0].Col80 != "")
                            {
                                if (model[0].Col80 == "75")
                                {
                                    dr["pino"] = model[0].dt1.Rows[i]["PI_NO"].ToString();
                                    dr["pidate"] = sgen.Make_date_S(model[0].dt1.Rows[i]["PI_DATE"].ToString());
                                }
                            }
                            if (model[0].Col12 == "45")
                            {
                                dr["matjobamt"] = model[0].dt1.Rows[i]["MAT_CONS_AMT"].ToString();
                                dr["matjoper"] = model[0].dt1.Rows[i]["MAT_CONS_PER"].ToString();
                                dr["amrt_amount"] = model[0].dt1.Rows[i]["AMORT_CHRGS_AMOUNT"].ToString();
                                dr["amort_unit"] = model[0].dt1.Rows[i]["AMORT_CHRGS_PERUNIT"].ToString();
                            }
                            if (model[0].Col12 == "46")
                            {
                                dr["tcsamt"] = model[0].dt1.Rows[i]["Tcs_amt"].ToString();
                                dr["tcsper"] = model[0].dt1.Rows[i]["Tcs_per"].ToString();
                            }
                            dr["totremark"] = model[0].Col31;
                            dr["cond"] = model[0].Col32;
                            dr["basicamt"] = model[0].Col33;
                            dr["ginstlchrg"] = model[0].Col62;
                            dr["gserchrg"] = model[0].Col38;
                            dr["gamc"] = model[0].Col39;
                            dr["gloadchrg"] = model[0].Col40;
                            dr["pur_type"] = model[0].Col54;
                            dr["dlv_date"] = sgen.Make_date_S(model[0].dt1.Rows[i]["DELIVERY_DATE"].ToString());
                            dr["col1"] = model[0].Col70;
                            dr["col2"] = model[0].Col71;
                            dr["col3"] = model[0].Col72;
                            dr["col4"] = model[0].Col76;
                            dr["col5"] = model[0].Col77;
                            dr["col6"] = model[0].Col78;
                            dr["date3"] = sgen.Make_date_S(model[0].Col73);
                            dr["date4"] = sgen.Make_date_S(model[0].Col74);
                            dr["date5"] = sgen.Make_date_S(model[0].Col75);
                            dr = getsave(currdate, dr, model);
                            dataTable.Rows.Add(dr);
                        }
                        #endregion
                        Result = sgen.Update_data(userCode, dataTable, model[0].Col10.Trim(), model[0].Col8, isedit);
                        if (Result == true)
                        {
                            DataTable dten = cmd_Fun.GetStructure(userCode, "enx_tab");
                            if (model[0].LTM1 != null && model[0].LTM1.Count > 0)
                            {
                                res = false;
                                #region dr
                                for (int k = 0; k < model[0].LTM1.Count; k++)
                                {
                                    DataRow dr = dten.NewRow();
                                    dr["type"] = model[0].Col12;
                                    dr["vch_num"] = vch_num.Trim();
                                    dr["vch_date"] = sgen.Savedate(model[0].Col48, true);
                                    //dt====
                                    dr["r_no"] = model[0].LTM1[k].Col14;
                                    dr["col1"] = model[0].LTM1[k].Col15;//chrgid
                                    dr["col2"] = model[0].LTM1[k].Col16;//chrgamt
                                    dr["col3"] = model[0].LTM1[k].Col13;//chrgrtid
                                    dr["col4"] = model[0].LTM1[k].Col17;//igstrt
                                    dr["col5"] = model[0].LTM1[k].Col18;//igstamt
                                    dr["col6"] = model[0].LTM1[k].Col19;//cgstrt
                                    dr["col7"] = model[0].LTM1[k].Col20;//cgstamt
                                    dr["col8"] = model[0].LTM1[k].Col21;//sgstrt
                                    dr["col9"] = model[0].LTM1[k].Col22;//sgstamt
                                                                        //======                            
                                    dr["rec_id"] = "0";
                                    if (isedit)
                                    {
                                        dr["client_id"] = model[0].Col1.Trim();
                                        dr["client_unit_id"] = model[0].Col2.Trim();
                                        dr["ent_by"] = model[0].Col3;
                                        dr["ent_date"] = model[0].Col4;
                                        dr["edit_by"] = userid_mst;
                                        dr["edit_date"] = currdate;
                                    }
                                    else
                                    {
                                        dr["client_id"] = clientid_mst;
                                        dr["client_unit_id"] = unitid_mst;
                                        dr["ent_by"] = userid_mst;
                                        dr["ent_date"] = currdate;
                                        dr["edit_by"] = "-";
                                        dr["edit_date"] = currdate;
                                    }
                                    dten.Rows.Add(dr);
                                }
                                #endregion
                                res = sgen.Update_data_uncommit2(userCode, dten, "enx_tab", model[0].Col8, isedit, sat1);
                                if (!res)
                                {
                                    sat1.Rollback();
                                    ViewBag.vnew = "disabled='disabled'";
                                    ViewBag.vedit = "disabled='disabled'";
                                    ViewBag.vimport = "disabled='disabled";
                                    ViewBag.vsave = "";
                                    ViewBag.vsavenew = "";
                                    ViewBag.scripCall += "showmsgJS(1, 'Calc error', 0);";
                                    ModelState.Clear();
                                    return View(model);
                                }
                            }
                            if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                            {
                                sat1.Commit();
                                ViewBag.vnew = "";
                                ViewBag.vedit = "";
                                ViewBag.vsave = "disabled='disabled'";
                                ViewBag.vsavenew = "disabled='disabled'";
                                ViewBag.vimport = "disabled='disabled";
                                string date = sgen.SaveDate_dt(tm.Col48, false).ToString("yyyyMMdd");

                                url = clientid_mst + unitid_mst + vch_num + date + "" + model[0].Col12 + "";
                                sgen.SetSession(MyGuid, "SSEEKVAL", url);
                                ViewBag.scripCall = "showmsgJS(2, 'Data Saved Successfully. Do You Want To Print', 1);disableForm();";
                                //ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                            }
                            else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                            {
                                try
                                {
                                    sat1.Commit();

                                    Make_query("s_order", "Select SO Type", "NEW", "1", "", "", MyGuid);

                                    ViewBag.scripCall = "callFoo('Select SO Type');";
                                    ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                                }
                                catch (Exception ex)
                                {
                                    ViewBag.scripCall += "mytoast('error', 'toast-top-right', '" + ex.Message.ToString().Replace("'", "") + "');";
                                }
                            }
                            model = new List<Tmodelmain>();
                            model.Add(new Tmodelmain
                            {
                                Col10 = tm.Col10,
                                Col53 = tm.Col53,
                                Col54 = tm.Col54,
                                Col11 = tm.Col11,
                                Col13 = "Save",
                                Col100 = "Save & New",
                                Col121 = "S",
                                Col122 = "<u>S</u>ave",
                                Col123 = "Save & Ne<u>w</u>",
                                Col14 = tm.Col14,
                                Col15 = tm.Col15,
                                TList2 = mod2,
                                TList3 = mod3,
                                TList1 = mod1,
                                TList5 = mod5,
                                SelectedItems3 = new string[] { "" },
                                SelectedItems2 = new string[] { "" },
                                SelectedItems1 = new string[] { "" },
                                SelectedItems5 = new string[] { "" },
                                dt1 = ((DataTable)sgen.GetSession(MyGuid, "BSO_DT")).Copy()
                            });
                            sgen.SetSession(MyGuid, "BDSOTYPE", null);
                            sgen.SetSession(MyGuid, "BDSOPARTY", null);
                            sgen.SetSession(MyGuid, "BDSOORDTYPE", null);
                        }
                    }
                    catch (Exception ex) { ViewBag.scripCall = "showmsgJS(1,'" + ex.Message.ToString().Replace("'", "") + "', 0);"; }
                }
                else if (command == "Import")
                {
                    string currdate = sgen.server_datetime(userCode);

                    HttpPostedFileBase file1 = upd1;
                    DataTable dt = new DataTable();
                    if (file1.ContentLength > 1)
                    {
                        string ext = Path.GetExtension(file1.FileName).ToLower();
                        if (ext == ".csv")
                        {
                            string filesavepath = AppDomain.CurrentDomain.BaseDirectory + "\\Uploads\\" + cg_com_name.Replace(" ", "")
                                + "\\file" + DateTime.Now.ToString("ddMMyyyyhhmmfff") + ext;
                            file1.SaveAs(filesavepath);
                            // Read sample data from CSV file
                            int i = 0;
                            using (CsvFileReader reader = new CsvFileReader(filesavepath))
                            {
                                CsvRow row = new CsvRow();
                                while (reader.ReadRow(row))
                                {
                                    DataRow dr = dt.NewRow();
                                    for (int c = 0; c < row.Count; c++)
                                    {
                                        if (i == 0) { dt.Columns.Add(row[c].ToString()); }
                                        else { dr[c] = row[c].ToString(); }
                                        //if (c > dt.Columns.Count) break;                                                                 
                                    }
                                    i++;
                                    dt.Rows.Add(dr);
                                }
                            }
                        }
                        try
                        {
                            dt.Rows[0].Delete();
                            for (int k = 0; k < dt.Rows.Count; k++)
                            {
                                //mq = sgen.seekval(userCode, "select icode from item where icode='" + dt.Rows[k]["icode"].ToString() + "' and type='IT' and sale='Y' and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "'", "icode");
                                mq = sgen.seekval(userCode, "select icode from item where icode='" + dt.Rows[k]["icode"].ToString() + "' and type='IT' and sale='Y' and client_unit_id='" + unitid_mst + "'", "icode");
                                if (mq.Trim() == "0")
                                {
                                    ViewBag.vnew = "disabled='disabled'";
                                    ViewBag.vedit = "disabled='disabled'";
                                    ViewBag.vsave = "";
                                    ViewBag.vsavenew = "";
                                    ViewBag.scripCall += "showmsgJS(1,'Icode: " + dt.Rows[k]["icode"].ToString() + " not found,please check.', 0);";
                                    ModelState.Clear();
                                    return View(model);
                                }
                            }
                            string Fdate = sgen.server_datetime_dt(userCode).ToString("dd/MM/yyyy");
                            mq1 = "select '-' item,'0' Sno,i.icode,i.iname,i.cpartno partno,u.master_name uom,h.master_name hsn,h.group_name taxrate,nvl(s.closing, 0) qty_in_stock," +
                                "'0' iamount,'0' taxamount,'0' as discamount,'0' lineamount,'' Delivery_date from item i " +
                                "inner join  master_setting u on u.master_id = i.uom and u.type = 'UMM' and find_in_set(u.client_unit_id, i.client_unit_id)= 1 " +
                                "inner join  master_setting h on h.master_id = i.hsno and h.type = 'HSN' and find_in_set(h.client_unit_id, i.client_unit_id)= 1 " +
                                "left join(select icode,client_unit_id,sum(op) op,sum(pktop) pktop,sum(qtyin) qtyin,sum(qtyout) out," +
                                      "sum(op)+sum(qtyin)-sum(qtyout) closing from (select icode, client_unit_id, nvl(op_2019, 0) op," +
                                      " nvl(pkt_2019, 0) pktop, 0 qtyin, 0 qtyout, 0 pktno from itbal union all select icode, client_unit_id, " +
                                      "sum(to_number(qtyin)) - sum(to_number(qtyout)) op, sum((case when substr(type, 1, 1) in ('0', '1') then" +
                                      " pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktop,sum(to_number(qtyin)) " +
                                      "qtyin,sum(to_number(qtyout)) qtyout,0 pktno from itransaction where trim(store) = 'Y' and " +
                                      "to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and " +
                                      "to_date('" + year_from.Split(' ')[0].Trim() + "','" + sgen.Getsqldateformat() + "')-1 group by icode,client_unit_id union all select icode,client_unit_id," +
                                      "0 as op,0 as pktop,to_number(qtyin) qtyin,to_number(qtyout) qtyout,sum((case when substr(type, 1, 1) in " +
                                      "('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktno from " +
                                      "itransaction where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between " +
                                      "to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and to_date('" + Fdate + "','" + sgen.Getsqldateformat() + "') group by icode,client_unit_id," +
                                      "to_number(qtyin),to_number(qtyout)) a group by icode, client_unit_id) s on i.icode = s.icode and find_in_set(i.client_unit_id, s.client_unit_id)=1 " +
                                "where i.type = 'IT' and find_in_set(i.client_unit_id, '" + unitid_mst + "')=1 and i.sale='Y'";
                            DataTable dt2 = sgen.getdata(userCode, mq1);
                            if (dt2.Rows.Count > 0)
                            {
                                var results = from table1 in dt.AsEnumerable()
                                              join table2 in dt2.AsEnumerable() on table1["icode"] equals table2["icode"]
                                              select new
                                              {
                                                  item = table2["item"],
                                                  sno = table2["sno"],
                                                  icode = table1["icode"],
                                                  iname = table2["iname"],
                                                  partno = table2["partno"],
                                                  hsn = table2["hsn"],
                                                  uom = table2["uom"],
                                                  taxrate = table2["taxrate"],
                                                  qty_in_stock = table2["qty_in_stock"],
                                                  qty_ord = table1["qty_ord"],
                                                  irate = table1["irate"],
                                                  disc_type = table1["disc_type"],
                                                  disc_rate = table1["disc_rate"],
                                                  iamount = table2["iamount"],
                                                  taxamount = table2["taxamount"],
                                                  discamount = table2["discamount"],
                                                  lineamount = table2["lineamount"],
                                                  delivery_date = sgen.server_datetime_local(userCode),
                                                  remark = table1["remark"]
                                              };
                                results.ToList();
                                DataTable dtk = sgen.ToDataTable(results.ToList());
                                model[0].dt1 = dtk;
                                ViewBag.vsave = "";
                                ViewBag.vimport = "";
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                            }
                        }
                        catch (Exception err) { sgen.showmsg(1, err.Message.ToString().Replace("'", ""), 0); }
                    }
                }
                else if (command == "-")
                {
                    if (model[0].dt1.Rows.Count > 1) model[0].dt1.Rows.RemoveAt(sgen.Make_int(hfrow));
                    else { model[0].dt1 = ((DataTable)sgen.GetSession(MyGuid, "BSO_DT")).Copy(); }
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        [HttpPost]
        public void soorddelrno(string value)
        {
            sgen.SetSession(MyGuid, "soorddelrno", value);
        }
        [HttpGet]
        public FileResult soordtemp(List<Tmodelmain> model, string Myguid = "")
        {
            FillMst(Myguid);
            model = (List<Tmodelmain>)sgen.GetSession(Myguid, "model");
            DataTable dtl = new DataTable();
            mq = "SELECT '' Icode,'' Qty_ord,'' Irate,'' Disc_type,'' Disc_Rate,'' Remark from Dual";
            dtl = sgen.getdata(userCode, mq);
            string cg_com_name = sgen.GetCookie(MyGuid, "cg_com_name");
            Byte[] fileBytes = sgen.Exp_to_csv_new(dtl, "soitem", cg_com_name);
            return File(fileBytes, System.Net.Mime.MediaTypeNames.Application.Octet, "soitem");
        }
        #endregion
        #region itemgrp
        public ActionResult itemgrp()
        {
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            FillMst(MyGuid);
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            model[0].Col9 = "ITEM GROUP MASTER";
            model[0].Col10 = "master_setting";
            model[0].Col11 = " and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "'";
            model[0].Col12 = "KIG";
            mq = "select master_name evaltype from master_setting where type='CF0' and client_id='" + clientid_mst + "'";
            mq = sgen.seekval(userCode, mq, "evaltype");
            model[0].Col24 = mq;
            if (mq.Trim() == "0")
            {
                TempData[MyGuid + "_OKVAL"] = "NOT";
                ViewBag.vnew = "";
                ViewBag.vedit = "";
                ViewBag.vsave = "disabled='disabled'";
                ViewBag.vsavenew = "disabled='disabled'";
                ViewBag.scripCall += "showmsgJS(1, 'Please select Inventory Evaluation Type in Inventory Config', 2);";
            }
            List<SelectListItem> mod1 = new List<SelectListItem>();
            TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
            model[0].SelectedItems1 = new string[] { "" };
            ViewBag.showextend = "N";
            try
            {
                if (sgen.Make_int(sgen.GetSession(MyGuid, "unitcnt").ToString()) > 1) ViewBag.showextend = "Y";
            }
            catch (Exception err)
            {
                mq = "select count(*) unitcnt from company_unit_profile where unit_status = '1' and company_profile_id='" + clientid_mst + "'";
                mq = sgen.seekval(userCode, mq, "unitcnt");
                sgen.SetSession(MyGuid, "unitcnt", mq);
                if (sgen.Make_int(sgen.GetSession(MyGuid, "unitcnt").ToString()) > 1) ViewBag.showextend = "Y";
            }
            return View(model);
        }
        public List<Tmodelmain> newitemgrp(List<Tmodelmain> model)
        {
            DataTable dt = new DataTable();
            sgen.SetSession(MyGuid, "EDMODE", "N");
            ViewBag.vnew = "disabled='disabled'";
            ViewBag.vedit = "disabled='disabled'";
            ViewBag.vsave = "";
            ViewBag.vsavenew = "";
            ViewBag.scripCall += "enableForm();";
            model[0].Col21 = "Active";
            #region grand group
            List<SelectListItem> mod1 = cmd_Fun.grandgrp(userCode, unitid_mst);
            TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1;
            //model[0].TList1 = mod1;
            model[0].SelectedItems1 = new string[] { "" };
            #endregion
            return model;
        }
        [HttpPost]
        public ActionResult itemgrp(List<Tmodelmain> model, string command, HttpPostedFileBase upd1)
        {
            try
            {
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();
                #region ddl
                List<SelectListItem> mod1 = new List<SelectListItem>();
                TempData[MyGuid + "_TList1"] = model[0].TList1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                //TempData[MyGuid + "_TList1"] = model[0].TList1;
                if (tm.SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                #endregion
                if (command == "New")
                {
                    try
                    {
                        newitemgrp(model);
                        model[0].Col24 = tm.Col24;
                    }
                    catch (Exception ex) { }
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command == "btnok")
                {
                    if (TempData[MyGuid + "_OKVAL"].ToString().Trim() == "NOT")
                    {
                        return RedirectToAction("inv_conf", "Inventory", new { @m_id = EncryptDecrypt.Encrypt(model[0].Col15), @mid = EncryptDecrypt.Encrypt("17001.27") });
                    }
                    else
                    {
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                    }
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {
                    try
                    {
                        string gtype = "", chktype = "";
                        var tmodel = model.FirstOrDefault();
                        string currdate = sgen.server_datetime(userCode);
                        ent_date = currdate;
                        type = model[0].Col12;
                        if (model[0].Col21.Trim() == "Inactive")
                        {
                            type = "DD" + type;
                            status = "N";
                        }
                        else status = "Y";
                        DataTable dtstr = new DataTable();
                        dtstr = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                        gtype = model[0].SelectedItems1.FirstOrDefault();
                        if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                        {
                            mq1 = " and master_id<>'" + model[0].Col16.Trim() + "'";
                            isedit = true;
                            vch_num = model[0].Col16.Trim();
                        }
                        else
                        {
                            isedit = false;
                            if (gtype.Trim().Equals("99"))
                            {
                                //mq = "select max(to_number(substr(master_id,3,1))) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11 + " and substr(master_id,1,2)='" + gtype + "'";
                                mq = "select max(to_number(substr(master_id,3,1))) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "' and substr(master_id,1,2)='" + gtype + "'";
                                vch_num = sgen.genNo(userCode, mq, 1, "auto_genid");
                                if (sgen.Make_int(vch_num) > 9)
                                {
                                    TempData[MyGuid + "_OKVAL"] = "OK";
                                    ViewBag.vnew = "disabled='disabled'";
                                    ViewBag.vedit = "disabled='disabled'";
                                    ViewBag.vsave = "";
                                    ViewBag.vsavenew = "";
                                    ViewBag.scripCall += "showmsgJS(1, 'Max Number Allowed on this group is " + gtype + (Convert.ToInt32(vch_num) - 1).ToString() + "', 2)";
                                    return View(model);
                                }
                                vch_num = gtype + vch_num;
                            }
                            else if (gtype.Trim().Equals("9"))
                            {
                                //mq = "select max(to_number(substr(master_id,2,2))) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11 + " and substr(master_id,1,1)='" + gtype + "' and substr(master_id,1,2)<>'99'";
                                mq = "select max(to_number(substr(master_id,2,2))) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "' and substr(master_id,1,1)='" + gtype + "' and substr(master_id,1,2)<>'99'";
                                vch_num = sgen.genNo(userCode, mq, 2, "auto_genid");
                                if (sgen.Make_int(vch_num) >= 90)
                                {
                                    TempData[MyGuid + "_OKVAL"] = "OK";
                                    ViewBag.vnew = "disabled='disabled'";
                                    ViewBag.vedit = "disabled='disabled'";
                                    ViewBag.vsave = "";
                                    ViewBag.vsavenew = "";
                                    ViewBag.scripCall += "showmsgJS(1, 'Max Number Allowed on this group is " + gtype + (sgen.Make_int(vch_num) - 1).ToString() + "', 2)";
                                    return View(model);
                                }
                                vch_num = gtype + vch_num;
                            }
                            else
                            {
                                //mq = "select max(to_number(substr(master_id,2,2))) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11 + " and substr(master_id,1,1)='" + gtype + "'";
                                mq = "select max(to_number(substr(master_id,2,2))) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "' and substr(master_id,1,1)='" + gtype + "'";
                                vch_num = sgen.genNo(userCode, mq, 2, "auto_genid");
                                if (sgen.Make_int(vch_num) >= 99)
                                {
                                    TempData[MyGuid + "_OKVAL"] = "OK";
                                    ViewBag.vnew = "disabled='disabled'";
                                    ViewBag.vedit = "disabled='disabled'";
                                    ViewBag.vsave = "";
                                    ViewBag.vsavenew = "";
                                    ViewBag.scripCall += "showmsgJS(1, 'Max Number Allowed on this group is " + gtype + (Convert.ToInt32(vch_num) - 1).ToString() + "', 2)";
                                    return View(model);
                                }
                                vch_num = gtype + vch_num;
                            }
                            //if (gtype.Substring(0, 1) != vch_num.Substring(0, 1) && gtype != "99")
                            //{
                            //    TempData[MyGuid + "_OKVAL"] = "OK";
                            //    model[0].Col16 = "";
                            //    ViewBag.vnew = "disabled='disabled'";
                            //    ViewBag.vedit = "disabled='disabled'";
                            //    ViewBag.vsave = "";
                            //    ViewBag.vsavenew = "";
                            //    ViewBag.scripCall += "showmsgJS(1, 'Max Number Allowed on this group is " + (Convert.ToInt32(vch_num) - 1).ToString() + ", 2);";
                            //    return View(model);
                            //}
                            //else { model[0].Col16 = vch_num; }
                            model[0].Col16 = vch_num;
                        }
                        if (!gtype.Trim().Equals("")) chktype = " and substr(master_id,1,1)='" + gtype + "'";
                        cond = sgen.seekval(userCode, "select master_name from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "' and upper(master_name)='" + model[0].Col20.Trim().ToString().ToUpper() + "'" + chktype + "" + mq1 + "", "master_name");
                        if (!cond.Equals("0"))
                        {
                            TempData[MyGuid + "_OKVAL"] = "OK";
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            ViewBag.scripCall += "showmsgJS(1, 'Name Already Exists', 2);";
                            return View(model);
                        }
                        #region dtstr module
                        DataRow dr = dtstr.NewRow();
                        dr["master_id"] = model[0].Col16.Trim();
                        dr["vch_date"] = ent_date;
                        dr["type"] = type.Trim();
                        dr["master_name"] = System.Threading.Thread.CurrentThread.CurrentCulture.TextInfo.ToTitleCase(model[0].Col20.ToLower());
                        dr["classid"] = model[0].Col17;//iso
                        dr["sectionid"] = model[0].Col18;//pattern
                        dr["client_name"] = model[0].Col22;//desc
                        dr["subjectid"] = gtype;
                        dr["group_name"] = model[0].Col24;//inv eval type in case og item grp type
                        dr["GROUP_REFRENCE_NUMBER"] = model[0].Col25;//account group
                        dr["Status"] = status;
                        dr["Inactive_date"] = ent_date;
                        if (isedit)
                        {
                            dr["master_entby"] = model[0].Col3;
                            dr["master_entdate"] = model[0].Col4;
                            dr["client_id"] = model[0].Col1;
                            dr["client_unit_id"] = model[0].Col2;
                            dr["rec_id"] = model[0].Col7;
                            dr["master_editby"] = userid_mst;
                            dr["master_editdate"] = ent_date;
                        }
                        else
                        {
                            dr["rec_id"] = "0";
                            dr["master_entby"] = userid_mst;
                            dr["master_entdate"] = ent_date;
                            dr["master_editby"] = "-";
                            dr["master_editdate"] = ent_date;
                            dr["client_id"] = clientid_mst;
                            dr["client_unit_id"] = unitid_mst;
                        }
                        dtstr.Rows.Add(dr);
                        #endregion
                        res = sgen.Update_data(userCode, dtstr, model[0].Col10.Trim(), model[0].Col8, isedit);
                        if (res == true)
                        {
                            model = new List<Tmodelmain>();
                            model.Add(new Tmodelmain
                            {
                                Col9 = tm.Col9,
                                Col10 = tm.Col10,
                                Col11 = tm.Col11,
                                Col12 = tm.Col12,
                                Col13 = "Save",
                                Col14 = tm.Col14,
                                Col15 = tm.Col15,
                                Col16 = vch_num,
                                Col24 = tm.Col24,
                                Col100 = "Save & New",
                                Col121 = "S",
                                Col122 = "<u>S</u>ave",
                                Col123 = "Save & Ne<u>w</u>",
                                TList1 = mod1,
                                SelectedItems1 = new string[] { "" }
                            });
                            #region

                            if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                            {
                                try
                                {
                                    if (sgen.Make_int(sgen.GetSession(MyGuid, "unitcnt").ToString()) > 1) ViewBag.showextend = "Y";
                                }
                                catch (Exception err)
                                {
                                    mq = "select count(*) unitcnt from company_unit_profile where unit_status = '1' and company_profile_id='" + clientid_mst + "'";
                                    mq = sgen.seekval(userCode, mq, "unitcnt");
                                    sgen.SetSession(MyGuid, "unitcnt", mq);
                                    if (sgen.Make_int(sgen.GetSession(MyGuid, "unitcnt").ToString()) > 1) ViewBag.showextend = "Y";
                                }
                                ViewBag.vnew = "";
                                ViewBag.vedit = "";
                                ViewBag.vsave = "disabled='disabled'";
                                ViewBag.vsavenew = "disabled='disabled'";
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                            }
                            else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                            {
                                try
                                {
                                    newitemgrp(model);
                                    ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                                }
                                catch (Exception ex) { }
                            }
                            #endregion
                        }
                        else { ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Something Went Wrong, Data Not Saved');"; }
                    }
                    catch (Exception ex)
                    {
                        TempData[MyGuid + "_OKVAL"] = "OK";
                        ViewBag.scripCall = "showmsgJS(1,'" + ex.Message.ToString().Replace("'", " ") + "', 0);";
                    }
                }
                else if (command == "Import")
                {
                    var sg = "";
                    HttpPostedFileBase file1 = upd1;
                    DataTable dt = new DataTable();
                    if (file1.ContentLength > 1)
                    {
                        string ext = Path.GetExtension(file1.FileName).ToLower();
                        if (ext == ".csv")
                        {
                            string filesavepath = AppDomain.CurrentDomain.BaseDirectory + "\\Uploads\\" + cg_com_name.Replace(" ", "")
                                + "\\file" + DateTime.Now.ToString("ddMMyyyyhhmmfff") + ext;
                            file1.SaveAs(filesavepath);
                            // Read sample data from CSV file
                            int i = 0;
                            using (CsvFileReader reader = new CsvFileReader(filesavepath))
                            {
                                CsvRow row = new CsvRow();
                                while (reader.ReadRow(row))
                                {
                                    DataRow dr = dt.NewRow();
                                    for (int c = 0; c < row.Count; c++)
                                    {
                                        if (i == 0) { dt.Columns.Add(row[c].ToString()); }
                                        else { dr[c] = row[c].ToString(); }
                                        //if (c > dt.Columns.Count) break;                                                                 
                                    }
                                    i++;
                                    dt.Rows.Add(dr);
                                }
                            }
                        }
                        try
                        {
                            dt.Rows[0].Delete();
                            string currdate = sgen.server_datetime(userCode);
                            ent_date = currdate;
                            for (int k = 0; k < dt.Rows.Count; k++)
                            {
                                mq = sgen.seekval(userCode, "select master_name from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "' and upper(master_name)='" + dt.Rows[k][2].ToString() + "' and substr(master_id, 1, 1) = '" + dt.Rows[k][1].ToString() + "'", "master_name");
                                if (!mq.Trim().Equals("0"))
                                {
                                    ViewBag.scripCall += "showmsgJS(3, 'You already have " + dt.Rows[k][2].ToString() + " Item Sub Group saved', 2);";
                                    ViewBag.vnew = "disabled='disabled'";
                                    ViewBag.vedit = "disabled='disabled'";
                                    ViewBag.vsave = "";
                                    ViewBag.vsavenew = "";
                                    return View(model);
                                }
                                if (dt.Rows[k][1].ToString().Trim().Equals("") && dt.Rows[k][2].ToString().Trim().Equals(""))
                                {
                                    ViewBag.scripCall += "showmsgJS(3, 'Field " + dt.Rows[k][1].ToString() + " and " + dt.Rows[k][2].ToString() + " Are Mandatory. Please Check Before Import.', 2);";
                                    ViewBag.vnew = "disabled='disabled'";
                                    ViewBag.vedit = "disabled='disabled'";
                                    ViewBag.vsave = "";
                                    ViewBag.vsavenew = "";
                                    return View(model);
                                }
                            }
                            string gtype = "";
                            DataTable dataTable = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                            sgen.SetSession(MyGuid, "EDMODE", "N");
                            int inc = 1;
                            isedit = false;
                            DataView dv1 = dt.DefaultView;
                            dv1.Sort = dt.Columns[1].ColumnName.Trim();
                            dt = dv1.ToTable();
                            for (int i = 0; i < dt.Rows.Count; i++)
                            {
                                DataRow dr = dataTable.NewRow();
                                if (sg != dt.Rows[i]["Group_Type"].ToString().Trim())
                                {
                                    gtype = dt.Rows[i]["Group_Type"].ToString().Trim();
                                    if (gtype.Trim().Equals("99"))
                                    {
                                        mq = "select max(to_number(substr(master_id,3,1))) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "' and substr(master_id,1,2)='" + gtype + "'";
                                        inc = sgen.Make_int(sgen.seekval(userCode, mq, "auto_genid"));
                                        if (inc > 9)
                                        {
                                            TempData[MyGuid + "_OKVAL"] = "OK";
                                            ViewBag.vnew = "disabled='disabled'";
                                            ViewBag.vedit = "disabled='disabled'";
                                            ViewBag.vsave = "";
                                            ViewBag.vsavenew = "";
                                            ViewBag.scripCall += "showmsgJS(1, 'Max Number Allowed on this group is " + gtype + (inc - 1).ToString() + "', 2)";
                                            return View(model);
                                        }
                                    }
                                    else if (gtype.Trim().Equals("9"))
                                    {
                                        mq = "select max(to_number(substr(master_id,2,2))) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "' and substr(master_id,1,1)='" + gtype + "' and substr(master_id,1,2)<>'99'";
                                        inc = sgen.Make_int(sgen.seekval(userCode, mq, "auto_genid"));
                                        if (inc >= 90)
                                        {
                                            TempData[MyGuid + "_OKVAL"] = "OK";
                                            ViewBag.vnew = "disabled='disabled'";
                                            ViewBag.vedit = "disabled='disabled'";
                                            ViewBag.vsave = "";
                                            ViewBag.vsavenew = "";
                                            ViewBag.scripCall += "showmsgJS(1, 'Max Number Allowed on this group is " + gtype + (inc - 1).ToString() + "', 2)";
                                            return View(model);
                                        }
                                    }
                                    else
                                    {
                                        mq = "select max(to_number(substr(master_id,2,2))) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "' and substr(master_id,1,1)='" + gtype + "'";
                                        inc = sgen.Make_int(sgen.seekval(userCode, mq, "auto_genid"));
                                        if (inc >= 99)
                                        {
                                            TempData[MyGuid + "_OKVAL"] = "OK";
                                            ViewBag.vnew = "disabled='disabled'";
                                            ViewBag.vedit = "disabled='disabled'";
                                            ViewBag.vsave = "";
                                            ViewBag.vsavenew = "";
                                            ViewBag.scripCall += "showmsgJS(1, 'Max Number Allowed on this group is " + gtype + (inc - 1).ToString() + "', 2)";
                                            return View(model);
                                        }
                                    }
                                }
                                inc = inc + 1;
                                if (gtype.Trim().Equals("99")) vch_num = sgen.padlc(inc, 1);
                                else vch_num = sgen.padlc(inc, 2);
                                sg = dt.Rows[i][1].ToString().Trim();
                                dr["master_id"] = sg + vch_num;
                                dr["vch_date"] = currdate;
                                dr["type"] = model[0].Col12;
                                dr["master_name"] = System.Threading.Thread.CurrentThread.CurrentCulture.TextInfo.ToTitleCase(dt.Rows[i]["Item_Group"].ToString().ToLower());
                                dr["classid"] = "";//iso
                                dr["sectionid"] = "";//pattern
                                dr["client_name"] = dt.Rows[i]["Description"].ToString();//desc
                                dr["subjectid"] = gtype;
                                dr["group_name"] = dt.Rows[i]["Inventory_Evaluation"].ToString();//inv eval type in case og item grp type
                                dr["GROUP_REFRENCE_NUMBER"] = dt.Rows[i]["Accounting_group"].ToString();//accounting groups
                                dr["Status"] = "Y";
                                dr["rec_id"] = "0";
                                dr["master_entby"] = userid_mst;
                                dr["master_entdate"] = ent_date;
                                dr["master_editby"] = "-";
                                dr["master_editdate"] = ent_date;
                                dr["client_id"] = clientid_mst;
                                dr["client_unit_id"] = unitid_mst;
                                dataTable.Rows.Add(dr);
                            }
                            res = sgen.Update_data(userCode, dataTable, model[0].Col10, model[0].Col8, false);
                            if (res == true)
                            {
                                model = new List<Tmodelmain>();
                                model.Add(new Tmodelmain
                                {
                                    Col3 = tm.Col3,
                                    Col8 = tm.Col8,
                                    Col9 = tm.Col9,
                                    Col10 = tm.Col10,
                                    Col11 = tm.Col11,
                                    Col12 = tm.Col12,
                                    Col13 = "Save",
                                    Col100 = "Save & New",
                                    Col121 = "S",
                                    Col122 = "<u>S</u>ave",
                                    Col123 = "Save & Ne<u>w</u>",
                                    Col14 = tm.Col14,
                                    Col15 = tm.Col15
                                });
                                ViewBag.vnew = "";
                                ViewBag.vedit = "";
                                ViewBag.vsave = "disabled='disabled'";
                                ViewBag.vsavenew = "disabled='disabled'";
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Imported Successfully');disableForm(); ";
                            }
                            else { ViewBag.scripCall = "showmsgJS(3, 'Record Not Saved', 1);"; }
                        }
                        catch (Exception err) { sgen.showmsg(1, err.Message.ToString().Replace("'", ""), 0); }
                    }
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        [HttpGet]
        public FileResult itgrptemp(List<Tmodelmain> model, string Myguid = "")
        {
            if (Myguid.Equals("")) Myguid = MyGuid;
            FillMst(Myguid);
            model = (List<Tmodelmain>)sgen.GetSession(Myguid, "model");
            DataTable dtl = new DataTable();
            mq = "SELECT '' Inventory_Evaluation,'' Group_Type,'' Item_Group ,'' Description ,'' Accounting_group from Dual";
            dtl = sgen.getdata(userCode, mq);
            string cg_com_name = sgen.GetCookie(MyGuid, "cg_com_name");
            Byte[] fileBytes = sgen.Exp_to_csv_new(dtl, "itgrptemp", cg_com_name);
            return File(fileBytes, System.Net.Mime.MediaTypeNames.Application.Octet, "itgrptemp");
        }
        #endregion
        #region standard_price             
        public ActionResult standard_price()
        {
            List<Tmodelmain> model = new List<Tmodelmain>();
            List<SelectListItem> mod1 = new List<SelectListItem>();
            model = getload(model);
            FillMst(MyGuid);
            model[0].Col9 = "STANDARD PRICE LIST";
            model[0].Col10 = "enx_tab";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "SP1";
            return View(model);
        }
        [HttpPost]
        public ActionResult standard_price(List<Tmodelmain> model, string command, string hfrow, string hftable)
        {
            try
            {
                FillMst(model[0].Col15);
                DataTable dtm = sgen.settable(hftable);
                model[0].dt1 = dtm;
                var tm = model.FirstOrDefault();
                if (command == "New")
                {
                    try
                    {
                        model = getnew(model);
                        mq = "select '' item,'-' sno,'-' icode,'-' iname,'0' mrp,'0' min_price,'0' sale_price from dual";
                        model[0].dt1 = sgen.getdata(userCode, mq);
                        sgen.SetSession(MyGuid, "KSP1", model[0].dt1);
                    }
                    catch (Exception ex) { }
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    if (sgen.GetSession(MyGuid, "btnval") != null) btnval = sgen.GetSession(MyGuid, "btnval").ToString();
                    model = CallbackFun(btnval, "N", actionName, controllerName, model);
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {
                    try
                    {
                        Satransaction sat1 = new Satransaction(userCode, MyGuid);
                        string currdate = sgen.server_datetime(userCode);
                        if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                        {
                            mq1 = " and vch_num<>'" + model[0].Col16.Trim() + "'";
                            isedit = true;
                            vch_num = model[0].Col16;
                        }
                        else
                        {
                            mq1 = "";
                            isedit = false;
                            mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                            vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        }
                        cond = "select col5 plname from enx_tab where type='" + model[0].Col12 + "'" + model[0].Col11 + " and lower(col5)='" + model[0].Col19.Trim().ToLower() + "'" + mq1 + "";
                        mq = sgen.seekval(userCode, cond, "plname");
                        if (mq.Trim() != "0")
                        {
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.scripCall += "showmsgJS(1,'Data already exist for this Price List Name', 2);";
                        }
                        DataTable dataTable = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                        for (int i = 0; i < model[0].dt1.Rows.Count; i++)
                        {
                            #region dr
                            DataRow dr = dataTable.NewRow();
                            dr["type"] = model[0].Col12;
                            dr["vch_num"] = vch_num.Trim();
                            dr["vch_date"] = currdate;
                            dr["date1"] = sgen.Make_date_S(model[0].Col17); //fromdt
                            dr["date2"] = sgen.Make_date_S(model[0].Col18);//todt
                            dr["col5"] = model[0].Col19;//pl name
                                                        //dt====
                            dr["col1"] = model[0].dt1.Rows[i][2].ToString();//icode
                            dr["col2"] = model[0].dt1.Rows[i][4].ToString();//mrp
                            dr["col3"] = model[0].dt1.Rows[i][5].ToString();//min price
                            dr["col4"] = model[0].dt1.Rows[i][6].ToString();//sale price
                            dr["r_no"] = model[0].dt1.Rows[i][1].ToString();//rowno
                            dr = getsave(currdate, dr, model);
                            dataTable.Rows.Add(dr);
                            #endregion
                        }
                        res = sgen.Update_data_uncommit2(userCode, dataTable, model[0].Col10.Trim(), model[0].Col8, isedit, sat1);
                        if (res)
                        {
                            sat1.Commit();
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                            model = new List<Tmodelmain>();
                            model.Add(new Tmodelmain
                            {
                                Col9 = tm.Col9,
                                Col10 = tm.Col10,
                                Col11 = tm.Col11,
                                Col12 = tm.Col12,
                                Col13 = "Save",
                                Col14 = tm.Col14,
                                Col15 = tm.Col15,
                                dt1 = null
                            });
                        }
                        else
                        {
                            sat1.Rollback();
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            ViewBag.scripCall += "showmsgJS(1, 'Data Not Saved', 0);";
                            ModelState.Clear();
                            return View(model);
                        }
                    }
                    catch (Exception ex) { ViewBag.scripCall += "showmsgJS(1,'" + ex.Message.ToString().Replace("'", "") + "', 0);"; }
                }
                else if (command == "-")
                {
                    if (model[0].dt1.Rows.Count > 1) model[0].dt1.Rows.RemoveAt(sgen.Make_int(hfrow));
                    else { model[0].dt1 = (DataTable)sgen.GetSession(MyGuid, "KSP1"); }
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region custom_price             
        public ActionResult custom_price()
        {
            List<Tmodelmain> model = new List<Tmodelmain>();
            List<SelectListItem> mod1 = new List<SelectListItem>();
            model = getload(model);
            FillMst(MyGuid);
            model[0].Col9 = "CUSTOM PRICE LIST";
            model[0].Col10 = "enx_tab";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "SP2";
            model[0].TList1 = mod1;
            model[0].SelectedItems1 = new string[] { "" };
            return View(model);
        }
        [HttpPost]
        public ActionResult custom_price(List<Tmodelmain> model, string command, string hfrow, string hftable)
        {
            try
            {
                FillMst(model[0].Col15);
                DataTable dtm = sgen.settable(hftable);
                model[0].dt1 = dtm;
                var tm = model.FirstOrDefault();
                List<SelectListItem> mod1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
                //TempData[MyGuid + "_TList1"] = model[0].TList1;
                if (tm.SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                if (command == "New")
                {
                    try
                    {
                        model = getnew(model);
                        mod1 = new List<SelectListItem>();
                        mq1 = "select distinct col5 plname,vch_num from enx_tab where type='" + model[0].Col12 + "'" + model[0].Col11 + "";
                        DataTable dtc = sgen.getdata(userCode, mq1);
                        if (dtc.Rows.Count > 0)
                        {
                            foreach (DataRow dr in dtc.Rows)
                            {
                                mod1.Add(new SelectListItem { Text = dr["plname"].ToString(), Value = dr["vch_num"].ToString() });
                            }
                        }
                        TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
                        //TempData[MyGuid + "_TList1"] = mod1;
                        model[0].SelectedItems1 = new string[] { "" };
                        mq = "select '' item,'-' sno,'-' icode,'-' iname,'0' mrp,'0' sale_price,'0' Disc_in_Per,'0' Disc_in_Abs,'0' Net_Amount from dual";
                        model[0].dt1 = sgen.getdata(userCode, mq);
                        sgen.SetSession(MyGuid, "KSP2", model[0].dt1);
                    }
                    catch (Exception ex) { }
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    if (sgen.GetSession(MyGuid, "btnval") != null) btnval = sgen.GetSession(MyGuid, "btnval").ToString();
                    model = CallbackFun(btnval, "N", actionName, controllerName, model);
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {
                    try
                    {
                        Satransaction sat1 = new Satransaction(userCode, MyGuid);
                        string currdate = sgen.server_datetime(userCode);
                        if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                        {
                            mq1 = " and vch_num<>'" + model[0].Col16.Trim() + "'";
                            isedit = true;
                            vch_num = model[0].Col16;
                        }
                        else
                        {
                            mq1 = "";
                            isedit = false;
                            mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                            vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        }
                        DataTable dataTable = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                        for (int i = 0; i < model[0].dt1.Rows.Count; i++)
                        {
                            #region dr
                            DataRow dr = dataTable.NewRow();
                            dr["type"] = model[0].Col12;
                            dr["vch_num"] = vch_num.Trim();
                            dr["vch_date"] = currdate;
                            dr["date1"] = sgen.Make_date_S(model[0].Col17);//eff from date
                            dr["date2"] = sgen.Make_date_S(model[0].Col21);//eff to date
                            dr["col4"] = model[0].Col18;//price list name
                            dr["col5"] = model[0].Col22;//disc type
                            dr["col6"] = model[0].Col19;//customer multi
                            dr["col7"] = model[0].SelectedItems1.FirstOrDefault();
                            dr["col8"] = model[0].Col23;//disc
                            dr["col9"] = model[0].Chk1 == true ? "Y" : "N";//apply toall
                            dr["col13"] = model[0].Col24;//discon
                                                         //dt====
                            dr["r_no"] = model[0].dt1.Rows[i][1].ToString();//rowno
                            dr["col1"] = model[0].dt1.Rows[i][2].ToString();//icode
                            dr["col2"] = model[0].dt1.Rows[i][4].ToString();//mrp
                            dr["col3"] = model[0].dt1.Rows[i][5].ToString();//sale price                        
                            dr["col10"] = model[0].dt1.Rows[i][6].ToString();//disc in per                        
                            dr["col11"] = model[0].dt1.Rows[i][7].ToString();//disc in abs                        
                            dr["col12"] = model[0].dt1.Rows[i][8].ToString();//net amt                                               
                            dr = getsave(currdate, dr, model);
                            dataTable.Rows.Add(dr);
                            #endregion
                        }
                        res = sgen.Update_data_uncommit2(userCode, dataTable, model[0].Col10.Trim(), model[0].Col8, isedit, sat1);
                        if (res)
                        {
                            sat1.Commit();
                            ViewBag.vnew = "";
                            ViewBag.vedit = "";
                            ViewBag.vsave = "disabled='disabled'";
                            ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                            model = new List<Tmodelmain>();
                            model.Add(new Tmodelmain
                            {
                                Col9 = tm.Col9,
                                Col10 = tm.Col10,
                                Col11 = tm.Col11,
                                Col12 = tm.Col12,
                                Col13 = "Save",
                                Col14 = tm.Col14,
                                Col15 = tm.Col15,
                                TList1 = mod1,
                                SelectedItems1 = new string[] { "" },
                                dt1 = null
                            });
                        }
                        else
                        {
                            sat1.Rollback();
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            ViewBag.scripCall += "showmsgJS(1, 'Data Not Saved', 0);";
                            ModelState.Clear();
                            return View(model);
                        }
                    }
                    catch (Exception ex) { ViewBag.scripCall += "showmsgJS(1,'" + ex.Message.ToString().Replace("'", "") + "', 0);"; }
                }
                else if (command == "-")
                {
                    if (model[0].dt1.Rows.Count > 1) model[0].dt1.Rows.RemoveAt(sgen.Make_int(hfrow));
                    else { model[0].dt1 = (DataTable)sgen.GetSession(MyGuid, "KSP2"); }
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region PERFORMA INVOICE
        public ActionResult p_invoice()
        {
            string title = "", pr_type = "";
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            FillMst(MyGuid);
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            List<SelectListItem> mod1 = new List<SelectListItem>();
            List<SelectListItem> mod2 = new List<SelectListItem>();
            List<SelectListItem> mod3 = new List<SelectListItem>();
            List<SelectListItem> mod4 = new List<SelectListItem>();
            title = "PERFORMA INVOICE";
            pr_type = "BPI";
            model[0].Col10 = "itransactionc";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col53 = title;
            model[0].Col54 = pr_type;
            model[0].TList1 = mod1;
            model[0].SelectedItems1 = new string[] { "" };
            model[0].TList2 = mod2;
            model[0].SelectedItems2 = new string[] { "" };
            model[0].TList3 = mod3;
            model[0].SelectedItems3 = new string[] { "" };
            model[0].TList4 = mod4;
            model[0].SelectedItems4 = new string[] { "" };
            model[0].Col18 = sgen.seekval(userCode, "select unit_gstin_no from company_unit_profile where cup_id='" + unitid_mst + "'", "unit_gstin_no");
            DataTable dt = sgen.getdata(userCode, "select '' Item,'1' as  SNo ,'-' as Icode,'-' as IName,'-' PARTNO,'-'  HSN,'-' as UOM,'0' as TaxRate,'0' as  Qty_in_stock,'0' as Qty_Ord,'0' as IRate," +
               "'-' disc_type,'0' as disc_rate,'0' IAmount,'0' TaxAmount,'0' discAmount,'0' LineAmount,'-' as Remark from dual");
            model[0].dt1 = dt;
            sgen.SetSession(MyGuid, "PIV_DT", dt.Copy());
            ModelState.Clear();
            return View(model);
        }
        [HttpPost]
        public ActionResult p_invoice(List<Tmodelmain> model, string command, string hfrow, string hftable, HttpPostedFileBase upd1)
        {
            try
            {
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();
                DataTable dtm = sgen.settable(hftable);
                model[0].dt1 = dtm;
                #region ddl          
                List<SelectListItem> mod1 = new List<SelectListItem>();
                List<SelectListItem> mod2 = new List<SelectListItem>();
                List<SelectListItem> mod3 = new List<SelectListItem>();
                List<SelectListItem> mod4 = new List<SelectListItem>();
                TempData[MyGuid + "_Tlist1"] = model[0].TList1 = (List<SelectListItem>)TempData[MyGuid + "_Tlist1"];
                TempData[MyGuid + "_Tlist2"] = model[0].TList2 = (List<SelectListItem>)TempData[MyGuid + "_Tlist2"];
                TempData[MyGuid + "_Tlist3"] = model[0].TList3 = (List<SelectListItem>)TempData[MyGuid + "_Tlist3"];
                TempData[MyGuid + "_Tlist4"] = model[0].TList4 = (List<SelectListItem>)TempData[MyGuid + "_Tlist4"];
                if (tm.SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                if (tm.SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
                if (tm.SelectedItems3 == null) model[0].SelectedItems3 = new string[] { "" };
                if (tm.SelectedItems4 == null) model[0].SelectedItems4 = new string[] { "" };
                #endregion
                model[0].Col18 = sgen.seekval(userCode, "select unit_gstin_no from company_unit_profile where cup_id='" + unitid_mst + "'", "unit_gstin_no");
                if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    if (sgen.GetSession(MyGuid, "pivdelrno") != null) btnval = "CHRGDEL";
                    else if (sgen.GetSession(MyGuid, "btnval") != null) btnval = sgen.GetSession(MyGuid, "btnval").ToString();
                    model = CallbackFun(btnval, "N", actionName, controllerName, model);
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                    if (btnval == "PRINT")
                    {
                        ViewBag.vnew = "";
                        ViewBag.vedit = "";
                        ViewBag.vsave = "disabled='disabled'";
                        ViewBag.vsavenew = "disabled='disabled'";
                    }
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {
                    try
                    {
                        if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-"))
                        {
                            ViewBag.scripCall += "showmsgJS(1,'Please Select item in grid-1', 2);";
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            return View(model);
                        }
                        Satransaction sat1 = new Satransaction(userCode, MyGuid);
                        string currdate = sgen.server_datetime(userCode);
                        if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                        {
                            isedit = true;
                            vch_num = model[0].Col16;
                            vch_num = model[0].Col47;
                        }
                        else
                        {
                            isedit = false;
                            mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + " and pur_type = 'BPI'";
                            vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        }
                        bool Result = false;
                        DataTable dtbtch = cmd_Fun.GetStructure(userCode, "btchtrans");
                        DataTable dataTable = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                        #region DTSTR
                        for (int i = 0; i < model[0].dt1.Rows.Count; i++)
                        {
                            DataRow dr = dataTable.NewRow();
                            dr["rec_id"] = "0";
                            dr["type"] = model[0].Col12;
                            dr["vch_num"] = vch_num.Trim();
                            dr["vch_date"] = sgen.Make_date_S(model[0].Col48);
                            dr["acode"] = model[0].Col49;
                            dr["shipfrom"] = model[0].Col50;
                            dr["shipto"] = model[0].Col51;
                            dr["icode"] = model[0].dt1.Rows[i][2].ToString();
                            dr["iname"] = model[0].dt1.Rows[i][3].ToString();
                            dr["cpartno"] = model[0].dt1.Rows[i][4].ToString();
                            dr["hsno"] = model[0].dt1.Rows[i][5].ToString();
                            dr["uom"] = model[0].dt1.Rows[i][6].ToString();
                            dr["taxrate"] = model[0].dt1.Rows[i][7].ToString().Replace("%", "");
                            dr["qtystk"] = model[0].dt1.Rows[i][8].ToString();
                            dr["ORDQTY"] = model[0].dt1.Rows[i][9].ToString();
                            dr["gtaxamt"] = model[0].Col62; //net amount
                            dr["tmode"] = model[0].SelectedItems3.FirstOrDefault();
                            dr["pay_term"] = model[0].SelectedItems1.FirstOrDefault();
                            dr["price_term"] = model[0].SelectedItems2.FirstOrDefault();
                            dr["iremark"] = model[0].dt1.Rows[i]["REMARK"].ToString();
                            if (model[0].Col31 == "") model[0].Col31 = "-";
                            if (model[0].Col32 == "") model[0].Col32 = "-";
                            dr["irate"] = model[0].dt1.Rows[i]["IRATE"].ToString();
                            dr["disctype"] = model[0].dt1.Rows[i]["DISC_TYPE"].ToString();
                            dr["discrate"] = model[0].dt1.Rows[i]["DISC_RATE"].ToString();
                            dr["iamount"] = model[0].dt1.Rows[i]["IAMOUNT"].ToString();
                            dr["taxamt"] = model[0].dt1.Rows[i]["TAXAMOUNT"].ToString();
                            dr["discamt"] = model[0].dt1.Rows[i]["DISCAMOUNT"].ToString();
                            dr["lineamount"] = model[0].dt1.Rows[i]["LINEAMOUNT"].ToString();
                            if (model[0].Col80 != null && model[0].Col80 != "")
                            {
                                if (model[0].Col80 == "77")
                                {
                                    dr["pi_no"] = model[0].dt1.Rows[i]["QT_NO"].ToString();
                                    dr["pi_date"] = sgen.Make_date_S(model[0].dt1.Rows[i]["QT_DATE"].ToString());
                                }
                            }
                            dr["totremark"] = model[0].Col31;
                            dr["cond"] = model[0].Col32;
                            dr["basicamt"] = model[0].Col33;
                            dr["igst"] = model[0].Col34;
                            dr["cgst"] = model[0].Col35;
                            dr["sgst"] = model[0].Col36;
                            dr["ginstlchrg"] = model[0].Col37;
                            dr["gserchrg"] = model[0].Col38;
                            dr["gamc"] = model[0].Col39;
                            dr["gloadchrg"] = model[0].Col40;
                            dr["gdisc"] = model[0].Col80;
                            dr["pur_type"] = model[0].Col54;
                            dr["PONO"] = model[0].Col56;
                            dr["PODATE"] = sgen.Make_date_S(model[0].Col57);
                            dr["per_id"] = model[0].SelectedItems4.FirstOrDefault();
                            dr["is_other"] = (model[0].Chk1 == true) ? "Y" : "N"; //is other person
                            if (model[0].Chk1)
                            {
                                dr["other_per"] = model[0].Col63;
                            }
                            dr = getsave(currdate, dr, model);
                            dataTable.Rows.Add(dr);
                        }
                        #endregion
                        Result = sgen.Update_data_fast1_uncommit(userCode, dataTable, model[0].Col10.Trim(), model[0].Col8, isedit, sat1);
                        if (Result == true)
                        {
                            if (!isedit && model[0].Chk1)
                            {
                                string CONTVCH_NUM = "";
                                #region new contact
                                mq = "select max(to_number(vch_num)) as auto_genid from clients_mst a where  type in " +
                                            "('BCD' ,'DDBCD')" + model[0].Col11.Trim() + " and ref_code='" + model[0].Col49.Trim() + "' and substr(ref_code,0,3)='303'";
                                CONTVCH_NUM = sgen.genNo(userCode, mq, 6, "auto_genid");
                                DataTable dtstrr = cmd_Fun.GetStructure(userCode, "clients_mst");
                                DataRow dr = dtstrr.NewRow();
                                dr["ref_code"] = model[0].Col49;
                                dr["vch_num"] = CONTVCH_NUM;
                                dr["vch_date"] = sgen.Savedate(currdate, false);
                                dr["type"] = "BCD";
                                dr["cpname"] = model[0].Col63;//cont per name
                                dr["rec_id"] = "0";
                                dr["client_id"] = clientid_mst;
                                dr["client_unit_id"] = unitid_mst;
                                dr["ent_by"] = userid_mst;
                                dr["ent_date"] = currdate;
                                dr["edit_by"] = "-";
                                dr["edit_date"] = currdate;
                                dtstrr.Rows.Add(dr);
                                bool ok = sgen.Update_data_fast1(userCode, dtstrr, "clients_mst", tm.Col8, isedit);
                                #endregion
                            }
                            DataTable dten = cmd_Fun.GetStructure(userCode, "enx_tab");
                            if (model[0].LTM1 != null && model[0].LTM1.Count > 0)
                            {
                                res = false;
                                #region dr
                                for (int k = 0; k < model[0].LTM1.Count; k++)
                                {
                                    DataRow dr = dten.NewRow();
                                    dr["type"] = model[0].Col54;
                                    dr["vch_num"] = vch_num.Trim();
                                    dr["vch_date"] = sgen.Savedate(model[0].Col48, true);
                                    dr["r_no"] = model[0].LTM1[k].Col14;
                                    dr["col1"] = model[0].LTM1[k].Col15;//chrgid
                                    dr["col2"] = model[0].LTM1[k].Col16;//chrgamt
                                    dr["col3"] = model[0].LTM1[k].Col13;//chrgrtid
                                    dr["col4"] = model[0].LTM1[k].Col17.ToString().Replace("%", ""); ;//igstrt
                                    dr["col5"] = model[0].LTM1[k].Col18;//igstamt
                                    dr["col6"] = model[0].LTM1[k].Col19.ToString().Replace("%", ""); ;//cgstrt
                                    dr["col7"] = model[0].LTM1[k].Col20;//cgstamt
                                    dr["col8"] = model[0].LTM1[k].Col21.ToString().Replace("%", "");//sgstrt
                                    dr["col9"] = model[0].LTM1[k].Col22;//sgstamt
                                    dr["col10"] = model[0].LTM1[k].Col27;//hsnvch
                                    dr["col11"] = model[0].LTM1[k].Col28;//hsncode
                                    dr["col12"] = model[0].LTM1[k].Col25;//per
                                    dr = getsave(currdate, dr, model);
                                    dten.Rows.Add(dr);
                                }
                                #endregion
                                res = sgen.Update_data_uncommit2(userCode, dten, "enx_tab", model[0].Col85, isedit, sat1);
                                if (!res)
                                {
                                    sat1.Rollback();
                                    ViewBag.vnew = "disabled='disabled'";
                                    ViewBag.vedit = "disabled='disabled'";
                                    ViewBag.vimport = "disabled='disabled";
                                    ViewBag.vsave = "";
                                    ViewBag.vsavenew = "";
                                    ViewBag.scripCall += "showmsgJS(1, 'Calc error', 0);";
                                    ModelState.Clear();
                                    return View(model);
                                }
                            }
                            if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                            {
                                sat1.Commit();
                                ViewBag.vnew = "";
                                ViewBag.vedit = "";
                                ViewBag.vsave = "disabled='disabled'";
                                ViewBag.vsavenew = "disabled='disabled'";
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                            }
                            else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                            {
                                try
                                {
                                    sat1.Commit();

                                    Make_query("p_invoice", "Select PI Type", "NEW", "1", "", "", MyGuid);

                                    ViewBag.scripCall = "callFoo('Select PI Type');";
                                    ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                                }
                                catch (Exception ex)
                                {
                                    ViewBag.scripCall += "mytoast('error', 'toast-top-right', '" + ex.Message.ToString().Replace("'", "").Trim() + "');";
                                }
                            }
                            model = new List<Tmodelmain>();
                            model.Add(new Tmodelmain
                            {
                                Col10 = tm.Col10,
                                Col53 = tm.Col53,
                                Col54 = tm.Col54,
                                Col11 = tm.Col11,
                                Col13 = "Save",
                                Col100 = "Save & New",
                                Col121 = "S",
                                Col122 = "<u>S</u>ave",
                                Col123 = "Save & Ne<u>w</u>",
                                Col14 = tm.Col14,
                                Col15 = tm.Col15,
                                TList2 = mod2,
                                TList3 = mod3,
                                TList1 = mod1,
                                TList4 = mod4,
                                SelectedItems3 = new string[] { "" },
                                SelectedItems4 = new string[] { "" },
                                SelectedItems2 = new string[] { "" },
                                SelectedItems1 = new string[] { "" },
                                dt1 = ((DataTable)sgen.GetSession(MyGuid, "PIV_DT")).Copy()
                            });
                        }
                    }
                    catch (Exception ex) { ViewBag.scripCall = "showmsgJS(1,'" + ex.Message.ToString().Replace("'", "") + "', 0);"; }
                }
                else if (command == "-")
                {
                    if (model[0].dt1.Rows.Count > 1) model[0].dt1.Rows.RemoveAt(sgen.Make_int(hfrow));
                    else { model[0].dt1 = ((DataTable)sgen.GetSession(MyGuid, "PIV_DT")).Copy(); }
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        [HttpPost]
        public void pivdelrno(string value)
        {
            sgen.SetSession(MyGuid, "pivdelrno", value);
        }
        #endregion
        #region request for quotation
        public ActionResult rfq()
        {
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            FillMst(MyGuid);
            List<Tmodelmain> model = new List<Tmodelmain>();
            List<SelectListItem> mod1 = new List<SelectListItem>();
            List<SelectListItem> mod2 = new List<SelectListItem>();
            List<SelectListItem> mod3 = new List<SelectListItem>();
            List<SelectListItem> mod4 = new List<SelectListItem>();
            List<SelectListItem> mod5 = new List<SelectListItem>();
            List<SelectListItem> mod6 = new List<SelectListItem>();
            List<SelectListItem> mod7 = new List<SelectListItem>();
            model = getload(model);
            DataTable dt = new DataTable();
            model[0].Col9 = "REQUEST FOR QUOTATION";
            model[0].Col10 = "kc_tab";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col12 = "RFQ"; //RFQ
            TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1;
            model[0].SelectedItems1 = new string[] { "" };
            TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2;
            model[0].SelectedItems2 = new string[] { "" };
            TempData[MyGuid + "_TList3"] = model[0].TList3 = mod3;
            model[0].SelectedItems3 = new string[] { "" };
            TempData[MyGuid + "_TList4"] = model[0].TList4 = mod4;
            model[0].SelectedItems4 = new string[] { "" };
            TempData[MyGuid + "_TList5"] = model[0].TList5 = mod5;
            model[0].SelectedItems5 = new string[] { "" };
            TempData[MyGuid + "_TList6"] = model[0].TList6 = mod6;
            model[0].SelectedItems6 = new string[] { "" };
            TempData[MyGuid + "_TList7"] = model[0].TList7 = mod7;
            model[0].SelectedItems7 = new string[] { "" };
            dt = sgen.getdata(userCode, "select '' as Item, '1' as SNo ,'-' as Icode,'-' as IName,'-' PartNo,'-' as UOM,'0' as Order_qty,'-' as Remark from dual");
            model[0].dt1 = dt;
            sgen.SetSession(MyGuid, "BRFQ_DT", model[0].dt1);
            model[0].Col18 = sgen.seekval(userCode, "select unit_gstin_no from company_unit_profile where cup_id='" + unitid_mst + "'", "unit_gstin_no");
            model[0].Col99 = sgen.seekval(userCode, "select ll_act from company_unit_profile where company_profile_id='" + clientid_mst + "' and cup_id='" + unitid_mst + "'", "ll_act");//local_currency
            sgen.SetSession(MyGuid, "LOCALCUR", model[0].Col99);
            return View(model);
        }
        public List<Tmodelmain> new_rfq(List<Tmodelmain> model)
        {
            List<SelectListItem> mod1 = new List<SelectListItem>();
            List<SelectListItem> mod2 = new List<SelectListItem>();
            List<SelectListItem> mod3 = new List<SelectListItem>();
            List<SelectListItem> mod4 = new List<SelectListItem>();
            List<SelectListItem> mod5 = new List<SelectListItem>();
            List<SelectListItem> mod6 = new List<SelectListItem>();
            List<SelectListItem> mod7 = new List<SelectListItem>();
            var loccur = sgen.GetSession(MyGuid, "LOCALCUR").ToString();
            model = getnew(model);
            #region ddl
            TempData[MyGuid + "_TList1"] = model[0].TList1 = mod1 = cmd_Fun.payterm(userCode, unitid_mst, out defcall);
            TempData[MyGuid + "_TList2"] = model[0].TList2 = mod2 = cmd_Fun.priceterm(userCode, unitid_mst);
            TempData[MyGuid + "_TList3"] = model[0].TList3 = mod3 = cmd_Fun.transportmode(userCode, unitid_mst);
            TempData[MyGuid + "_TList4"] = model[0].TList4 = mod4 = cmd_Fun.Modeofpayment(userCode, unitid_mst);
            TempData[MyGuid + "_TList5"] = model[0].TList5 = mod5 = cmd_Fun.insby(userCode, unitid_mst);
            TempData[MyGuid + "_TList6"] = model[0].TList6 = mod6 = cmd_Fun.delterm(userCode, unitid_mst);
            TempData[MyGuid + "_TList7"] = model[0].TList7 = mod7 = cmd_Fun.curname(userCode, unitid_mst);
            model[0].SelectedItems1 = new string[] { "" };
            model[0].SelectedItems2 = new string[] { "" };
            model[0].SelectedItems3 = new string[] { "" };
            model[0].SelectedItems4 = new string[] { "" };
            model[0].SelectedItems5 = new string[] { "" };
            model[0].SelectedItems6 = new string[] { "" };
            model[0].SelectedItems7 = new string[] { loccur };
            model[0].Col17 = sgen.server_datetime_local(userCode);
            #endregion
            return model;
        }
        [HttpPost]
        public ActionResult rfq(List<Tmodelmain> model, string command, string hfrow, string hftable, HttpPostedFileBase upd1)
        {
            try
            {
                FillMst(model[0].Col15);
                DataTable dtm = sgen.settable(hftable);
                model[0].dt1 = dtm;
                var tm = model.FirstOrDefault();
                #region ddl          
                List<SelectListItem> mod1 = new List<SelectListItem>();
                List<SelectListItem> mod2 = new List<SelectListItem>();
                List<SelectListItem> mod3 = new List<SelectListItem>();
                List<SelectListItem> mod4 = new List<SelectListItem>();
                List<SelectListItem> mod5 = new List<SelectListItem>();
                List<SelectListItem> mod6 = new List<SelectListItem>();
                List<SelectListItem> mod7 = new List<SelectListItem>();
                TempData[MyGuid + "_TList1"] = model[0].TList1 = (List<SelectListItem>)TempData[MyGuid + "_TList1"];
                TempData[MyGuid + "_TList2"] = model[0].TList2 = (List<SelectListItem>)TempData[MyGuid + "_TList2"];
                TempData[MyGuid + "_TList3"] = model[0].TList3 = (List<SelectListItem>)TempData[MyGuid + "_TList3"];
                TempData[MyGuid + "_TList4"] = model[0].TList4 = (List<SelectListItem>)TempData[MyGuid + "_TList4"];
                TempData[MyGuid + "_TList5"] = model[0].TList5 = (List<SelectListItem>)TempData[MyGuid + "_TList5"];
                TempData[MyGuid + "_TList6"] = model[0].TList6 = (List<SelectListItem>)TempData[MyGuid + "_TList6"];
                TempData[MyGuid + "_TList7"] = model[0].TList7 = (List<SelectListItem>)TempData[MyGuid + "_TList7"];
                if (tm.SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                if (tm.SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
                if (tm.SelectedItems3 == null) model[0].SelectedItems3 = new string[] { "" };
                if (tm.SelectedItems4 == null) model[0].SelectedItems4 = new string[] { "" };
                if (tm.SelectedItems5 == null) model[0].SelectedItems5 = new string[] { "" };
                if (tm.SelectedItems6 == null) model[0].SelectedItems6 = new string[] { "" };
                if (tm.SelectedItems7 == null) model[0].SelectedItems7 = new string[] { "" };
                #endregion
                if (command == "New")
                {
                    model = new_rfq(model);
                }
                if (command == "Cancel") { return CancelFun(model); }
                else if (command == "Callback") { model = StartCallback(model); }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {
                    if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-"))
                    {
                        ViewBag.scripCall += "showmsgJS(1,'Please Select item in grid-1', 2);";
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.vsavenew = "";
                        return View(model);
                    }
                    DataTable dataTable = new DataTable();
                    bool Result = false;
                    try
                    {
                        string currdate = sgen.server_datetime(userCode);
                        if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                        {
                            isedit = true;
                            vch_num = model[0].Col16;
                        }
                        else
                        {
                            isedit = false;
                            mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                            vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                            model[0].Col16 = vch_num;
                        }
                        dataTable = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                        for (int i = 0; i < model[0].dt1.Rows.Count; i++)
                        {
                            DataRow dr = dataTable.NewRow();
                            dr["vch_num"] = vch_num;
                            dr["type"] = model[0].Col12;
                            dr["vch_date"] = sgen.Make_date_S(model[0].Col17);
                            dr["col1"] = model[0].Col49;//party code
                            dr["col2"] = model[0].Col22;//ship from
                            dr["col3"] = model[0].Col23; //ship to
                            dr["col4"] = model[0].SelectedItems1.FirstOrDefault(); //Payment Terms
                            dr["col5"] = model[0].SelectedItems2.FirstOrDefault();//Price Term
                            dr["col6"] = model[0].SelectedItems3.FirstOrDefault();//Transport / Shipment Mode
                            dr["col7"] = model[0].SelectedItems4.FirstOrDefault();//Payment Mode
                            dr["col8"] = model[0].SelectedItems5.FirstOrDefault();//Insurance By
                            dr["col9"] = model[0].SelectedItems6.FirstOrDefault();//Delivery Terms
                            dr["col10"] = model[0].SelectedItems7.FirstOrDefault();//Document Currency
                            dr["col11"] = model[0].Col24; //transporer
                            dr["col12"] = model[0].Col25; //pi reference
                            dr["col21"] = model[0].Col26; //tax remark
                            dr["col69"] = model[0].Col27; //Remark
                            dr["col13"] = model[0].dt1.Rows[i]["Icode"].ToString(); //Icode
                            dr["col14"] = model[0].dt1.Rows[i]["Order_qty"].ToString(); //Icode
                            dr["col22"] = model[0].dt1.Rows[i]["Remark"].ToString(); //Icode
                            dr = getsave(currdate, dr, model);
                            dataTable.Rows.Add(dr);
                        }
                        Result = sgen.Update_data_fast1(userCode, dataTable, model[0].Col10.Trim(), model[0].Col8, isedit);
                        if (Result == true)
                        {
                            model = new List<Tmodelmain>();
                            model.Add(new Tmodelmain
                            {
                                Col9 = tm.Col9,
                                Col10 = tm.Col10,
                                Col11 = tm.Col11,
                                Col12 = tm.Col12,
                                Col13 = "Save",
                                Col14 = tm.Col14,
                                Col15 = tm.Col15,
                                Col53 = tm.Col53,
                                Col54 = tm.Col54,
                                Col100 = "Save & New",
                                Col121 = "S",
                                Col122 = "<u>S</u>ave",
                                Col123 = "Save & Ne<u>w</u>",
                                dt1 = (DataTable)sgen.GetSession(MyGuid, "BRFQ_DT")
                            });
                            if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                            {
                                ViewBag.vnew = "";
                                ViewBag.vedit = "";
                                ViewBag.vsave = "disabled='disabled'";
                                ViewBag.vsavenew = "disabled='disabled'";
                                ViewBag.vimport = "disabled='disabled";
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                            }
                            else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                            {
                                try
                                {
                                    model = new_rfq(model);
                                    ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                                }
                                catch (Exception ex)
                                {
                                    ViewBag.scripCall += "mytoast('error', 'toast-top-right', '" + ex.Message.ToString().Replace("'", "").Trim() + "');";
                                }
                            }
                        }
                    }
                    catch (Exception ex) { ViewBag.scripCall = "showmsgJS(1,'" + ex.Message.ToString().Replace("'", "") + "', 0);"; }
                }
                else if (command == "-")
                {
                    if (model[0].dt1.Rows.Count > 1) model[0].dt1.Rows.RemoveAt(sgen.Make_int(hfrow));
                    else { model[0].dt1 = (DataTable)sgen.GetSession(MyGuid, "BRFQ_DT"); }
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region Pending Payment
        public ActionResult pend_pay()
        {
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            FillMst(MyGuid);
            List<Tmodelmain> model = new List<Tmodelmain>();
            Tmodelmain tm1 = new Tmodelmain();
            model = getload(model);
            model[0].Col9 = "PENDING PAYMENT";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col14 = mid_mst.Trim();
            model[0].Col15 = MyGuid.Trim();
            return View(model);
        }
        [HttpPost]
        public ActionResult pend_pay(List<Tmodelmain> model, string command, string hfrow, string hftable)
        {
            try
            {
                string fdt = "", tdt = "", dts = "";
                string dt_filter = "";
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();
                DataTable dt = new DataTable();
                if (sgen.GetSession(MyGuid, "KPDCMD") != null)
                {
                    if (sgen.GetSession(MyGuid, "KPDFDT") != null) fdt = sgen.GetSession(MyGuid, "KPDFDT").ToString();
                    if (sgen.getstring(MyGuid, "KPDTDT") != null) tdt = sgen.GetSession(MyGuid, "KPDTDT").ToString();
                    if (sgen.GetSession(MyGuid, "KPDCMD") != null) command = sgen.GetSession(MyGuid, "KPDCMD").ToString();
                    dts = "_" + fdt + "_" + tdt;
                    string tcp = "", tut = "", tfromdt = "", ttodate = "";
                    try
                    {
                        tcp = sgen.GetSession(MyGuid, "KDDL_CL").ToString();
                        tut = sgen.GetSession(MyGuid, "KDDL_UT").ToString();
                        tfromdt = sgen.GetSession(MyGuid, "TXTFROMDATE").ToString();
                        ttodate = sgen.GetSession(MyGuid, "TXTTODATE").ToString();
                    }
                    catch (Exception err)
                    {
                    }
                    dt_filter = "(From " + fdt + " To " + tdt + " )";
                }
                switch (command)
                {
                    case "Callback":
                        model = StartCallback(model);
                        break;
                    case "Party Wise":
                        try
                        {
                            sgen.SetSession(MyGuid, "KPDCMD", null);
                            mq = "select (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) as fstr,p.vch_num Invoice_Number,to_char(convert_tz(p.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') Invoice_Date,(case when p.potype = '51' then 'Sales Order' when p.potype = '52' then 'Dispatch schedule' when p.potype = '53' then 'Disp Chl' when p.potype = '54' then 'Direct Invoice' when p.potype = '55' then 'With PI' end) as Against,c.c_name as Party_Name,c.c_gstin as Party_Gstin,c.addr as Party_Address,p.gdisc Gross_Discount, p.discrate,p.iamount, nvl(sf.c_name, '-') as From_Name,nvl(sf.c_gstin, '-') as From_Gstin,nvl(sf.cpaddr, '-') FromAddress,nvl(st.c_name, '-') as To_Name,nvl(st.c_gstin, '-') as To_Gstin,nvl(st.cpaddr, '-') ToAddress," +
                                    "p.gothrchrg po_no,p.gserchrg IGST, p.gloadchrg SGST, p.gamc CGST , p.basicamt BasicAmt, p.ginstlchrg GrossAmt, p.netamt net_amount" +
                                    " from itransaction p inner join clients_mst c on p.acode = c.vch_num and c.client_unit_id =" +
                                    " p.client_unit_id and c.type = 'BCD' and substr(c.vch_num,0,3)='303' left join clients_mst sf on p.shipfrom = sf.vch_num and find_in_set(sf.client_unit_id, p.client_unit_id)=1 and sf.type = 'BCD' and substr(sf.vch_num,0,3)='303' left join clients_mst st on p.shipto = st.vch_num and find_in_set(st.client_unit_id, p.client_unit_id)=1 and st.type = 'BCD' and substr(st.vch_num,0,3)='303' where p.client_unit_id = '" + unitid_mst + "' and SUBSTR(p.type, 1, 1) = '4' and SUBSTR(p.potype, 1, 1)='5' and " +
                                      "to_date(to_char(p.vch_date,'" + sgen.Getsqldateformat() + "'),'" + sgen.Getsqldateformat() + "') between " +
                            "to_date('" + fdt + "','" + sgen.Getsqldateformat() + "') and to_date('" + tdt + "','" + sgen.Getsqldateformat() + "') order by p.vch_num desc";
                            dt = sgen.getdata(userCode, mq);
                            mq1 = sgen.open_grid_dt("Party Wise Pending Payment " + dt_filter + "", dt, 0);
                            if (mq1 == "ok") { ViewBag.scripCall = "callFoo('Party Wise Pending Payment " + dt_filter + "');"; }
                            else { ViewBag.scripCall = "showmsgJS(1,'No Data Found',2);"; }
                        }
                        catch { }
                        break;
                    case "Invoice Wise":
                        try
                        {
                            sgen.SetSession(MyGuid, "KPDCMD", null);
                            mq = "select (p.client_id||p.client_unit_id||p.vch_num||to_char(p.vch_date,'yyyymmdd')||p.type) as fstr,p.vch_num Invoice_Number,to_char(convert_tz(p.vch_date, 'UTC', '" + sgen.Gettimezone() + "'), '" + sgen.Getsqldateformat() + "') Invoice_Date,(case when p.potype = '51' then 'Sales Order' when p.potype = '52' then 'Dispatch schedule' when p.potype = '53' then 'Disp Chl' when p.potype = '54' then 'Direct Invoice' when p.potype = '55' then 'With PI' end) as Against,c.c_name as Party_Name,c.c_gstin as Party_Gstin,c.addr as Party_Address,p.gdisc Gross_Discount, p.discrate,p.iamount, nvl(sf.c_name, '-') as From_Name,nvl(sf.c_gstin, '-') as From_Gstin,nvl(sf.cpaddr, '-') FromAddress,nvl(st.c_name, '-') as To_Name,nvl(st.c_gstin, '-') as To_Gstin,nvl(st.cpaddr, '-') ToAddress," +
                                    "p.gothrchrg po_no" +
                                    ", p.gserchrg IGST, p.gloadchrg SGST, p.gamc CGST , p.basicamt BasicAmt, p.ginstlchrg GrossAmt, p.netamt net_amount" +
                                    " from itransaction p inner join clients_mst c on p.acode = c.vch_num and find_in_set(c.client_unit_id,p.client_unit_id)=1 and c.type = 'BCD' and substr(c.vch_num,0,3)='303' left join clients_mst sf on p.shipfrom = sf.vch_num and find_in_set(sf.client_unit_id, p.client_unit_id)=1 and sf.type = 'BCD' and substr(sf.vch_num,0,3)='303' left join clients_mst st on p.shipto = st.vch_num and find_in_set(st.client_unit_id, p.client_unit_id)=1 and st.type = 'BCD' and substr(st.vch_num,0,3)='303' " +
                                    "where p.client_unit_id = '" + unitid_mst + "' and SUBSTR(p.type, 1, 1) = '4' and SUBSTR(p.potype, 1, 1)='5' and " +
                                      "to_date(to_char(p.vch_date,'" + sgen.Getsqldateformat() + "'),'" + sgen.Getsqldateformat() + "') between " +
                            "to_date('" + fdt + "','" + sgen.Getsqldateformat() + "') and to_date('" + tdt + "','" + sgen.Getsqldateformat() + "') order by p.vch_num desc";
                            dt = sgen.getdata(userCode, mq);
                            mq1 = sgen.open_grid_dt("Invoice Wise Pending Payment " + dt_filter + "", dt, 0);
                            if (mq1 == "ok") { ViewBag.scripCall = "callFoo('Invoice Wise Pending Payment " + dt_filter + "');"; }
                            else { ViewBag.scripCall = "showmsgJS(1,'No Data Found',2);"; }
                        }
                        catch { }
                        break;
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region Payment Receipt
        public ActionResult pay_rec()
        {
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            FillMst(MyGuid);
            ViewBag.vnew = "";
            ViewBag.vedit = "";
            ViewBag.vsave = "disabled='disabled'";
            ViewBag.scripCall = "disableForm();";
            List<Tmodelmain> model = new List<Tmodelmain>();
            Tmodelmain tm1 = new Tmodelmain();
            mid_mst = EncryptDecrypt.Decrypt(Request.QueryString["mid"]);
            tm1.Col9 = "MY PROFILE";
            //tm1.Col10 = "enx_tab";
            //tm1.Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            //tm1.Col12 = "KSG";
            tm1.Col13 = "Update";
            tm1.Col121 = "U";
            tm1.Col122 = "<u>U</u>pdate";
            tm1.Col14 = mid_mst.Trim();
            tm1.Col15 = MyGuid.Trim();
            model.Add(tm1);
            ModelState.Clear();
            return View(model);
        }
        [HttpPost]
        public ActionResult pay_rec(List<Tmodelmain> model, string command, string hfrow, string hftable)
        {
            try
            {
                FillMst(model[0].Col15);
                DataTable dtm = sgen.settable(hftable);
                model[0].dt1 = dtm;
                var tm = model.FirstOrDefault();
                if (command == "New")
                {
                    try
                    {
                        sgen.SetSession(MyGuid, "EDMODE", "N");
                        ViewBag.vnew = "disabled='disabled'";
                        ViewBag.vedit = "disabled='disabled'";
                        ViewBag.vsave = "";
                        ViewBag.scripCall = "enableForm();";
                        mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                        vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        string currdate = sgen.server_datetime_local(userCode);
                        model[0].Col16 = vch_num;
                    }
                    catch (Exception ex) { }
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command == "Save" || command == "Update")
                {
                    try
                    {
                    }
                    catch (Exception ex) { ViewBag.scripCall = "showmsgJS(1,'" + ex.Message.ToString().Replace("'", "") + "', 0);"; }
                }
                else if (command == "-")
                {
                    if (model[0].dt1.Rows.Count > 1) model[0].dt1.Rows.RemoveAt(sgen.Make_int(hfrow));
                    else { model[0].dt1 = (DataTable)sgen.GetSession(MyGuid, "RVA_DT"); }
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region POD Entry
        public ActionResult pod_entry()
        {
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            FillMst(MyGuid);
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            model[0].Col9 = "POD ENTRY";
            model[0].Col12 = "POD";
            model[0].Col10 = "itransactionc";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            DataTable dt = sgen.getdata(userCode, "select '' select_,'1' as  SNo ,'-' as Party_Code,'-' as Party_Name,'-' Invoice_no,'-'  Invoice_Date,'-' Invoice_qty,'-' Invoice_Value,'-' as POD_No,'-' as POD_Date,'-' as  Recieved_By,'-' as Remark from dual");
            model[0].dt1 = dt;
            sgen.SetSession(MyGuid, "BPOD_DT", dt.Copy());
            ModelState.Clear();
            return View(model);
        }
        [HttpPost]
        public ActionResult pod_entry(List<Tmodelmain> model, string command, string hfrow, string hftable)
        {
            try
            {
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();
                DataTable dtm = sgen.settable(hftable);
                model[0].dt1 = dtm;
                if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    model = StartCallback(model);
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {
                    try
                    {
                        if (model[0].dt1.Rows[0]["PARTY_CODE"].ToString().Trim().Equals("-"))
                        {
                            ViewBag.scripCall += "showmsgJS(1,'Please Select Document in grid', 2);";
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            return View(model);
                        }
                        string currdate = sgen.server_datetime(userCode);
                        if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                        {
                            isedit = true;
                            vch_num = model[0].Col16;
                        }
                        else
                        {
                            isedit = false;
                            mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + " and pur_type = 'BPI'";
                            vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        }
                        bool Result = false;
                        DataTable dataTable = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                        #region DTSTR
                        for (int i = 0; i < model[0].dt1.Rows.Count; i++)
                        {
                            DataRow dr = dataTable.NewRow();
                            dr["vch_num"] = vch_num;
                            dr["type"] = model[0].Col12;
                            dr["vch_date"] = currdate;
                            dr["acode"] = model[0].Col21;//party code
                            dr["icode"] = model[0].dt1.Rows[i]["party_code"].ToString();
                            dr["iname"] = model[0].dt1.Rows[i]["party_name"].ToString();
                            dr["INVNO"] = model[0].dt1.Rows[i]["invoice_no"].ToString();
                            dr["INVDATE"] = model[0].dt1.Rows[i]["invoice_date"].ToString();
                            dr["QTYCHL"] = model[0].dt1.Rows[i]["invoice_qty"].ToString();
                            dr["NETAMT"] = model[0].dt1.Rows[i]["invoice_value"].ToString();
                            dr["pono"] = model[0].dt1.Rows[i]["POD_NO"].ToString();
                            dr["podate"] = sgen.Make_date_S(model[0].dt1.Rows[i]["POD_DATE"].ToString());
                            dr["REQ_BY"] = model[0].dt1.Rows[i]["RECIEVED_BY"].ToString();
                            dr["IREMARK"] = model[0].dt1.Rows[i]["REMARK"].ToString();
                            dr = getsave(currdate, dr, model);
                            dataTable.Rows.Add(dr);
                        }
                        #endregion
                        Result = sgen.Update_data_fast1(userCode, dataTable, model[0].Col10.Trim(), model[0].Col8, isedit);
                        if (Result == true)
                        {
                            if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                            {
                                ViewBag.vnew = "";
                                ViewBag.vedit = "";
                                ViewBag.vsave = "disabled='disabled'";
                                ViewBag.vsavenew = "disabled='disabled'";
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                            }
                            else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                            {
                                try
                                {

                                    Make_query("p_invoice", "Select Transporter", "TRPTR", "1", "", "", MyGuid);

                                    ViewBag.scripCall = "callFoo('Select Transporter');";
                                    ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                                }
                                catch (Exception ex)
                                {
                                    ViewBag.scripCall += "mytoast('error', 'toast-top-right', '" + ex.Message.ToString().Replace("'", "").Trim() + "');";
                                }
                            }
                            model = new List<Tmodelmain>();
                            model.Add(new Tmodelmain
                            {
                                Col10 = tm.Col10,
                                Col53 = tm.Col53,
                                Col54 = tm.Col54,
                                Col11 = tm.Col11,
                                Col13 = "Save",
                                Col100 = "Save & New",
                                Col121 = "S",
                                Col122 = "<u>S</u>ave",
                                Col123 = "Save & Ne<u>w</u>",
                                Col14 = tm.Col14,
                                Col15 = tm.Col15,
                                dt1 = ((DataTable)sgen.GetSession(MyGuid, "BPOD_DT")).Copy()
                            });
                        }
                    }
                    catch (Exception ex) { ViewBag.scripCall = "showmsgJS(1,'" + ex.Message.ToString().Replace("'", "") + "', 0);"; }
                }
                else if (command == "-")
                {
                    if (model[0].dt1.Rows.Count > 1) model[0].dt1.Rows.RemoveAt(sgen.Make_int(hfrow));
                    else { model[0].dt1 = ((DataTable)sgen.GetSession(MyGuid, "BPOD_DT")).Copy(); }
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region custmuer po
        public ActionResult cust_po()
        {
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            FillMst(MyGuid);
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            List<SelectListItem> mod1 = new List<SelectListItem>();
            List<SelectListItem> mod2 = new List<SelectListItem>();
            List<SelectListItem> mod3 = new List<SelectListItem>();
            List<SelectListItem> mod5 = new List<SelectListItem>();
            model[0].Col9 = "PURCHASE ORDER";
            model[0].Col12 = "BDP";
            model[0].Col10 = "Purchasesc";
            ViewBag.vimport = "disabled='disabled";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].TList1 = mod1;
            model[0].SelectedItems1 = new string[] { "" };
            model[0].TList2 = mod2;
            model[0].SelectedItems2 = new string[] { "" };
            model[0].TList3 = mod3;
            model[0].SelectedItems3 = new string[] { "" };
            model[0].TList5 = mod5;
            model[0].SelectedItems5 = new string[] { "" };
            DataTable dtb = (DataTable)sgen.GetSession(MyGuid, "URIGHTS");
            try
            {
                dtb = dtb.Select("m_id='" + model[0].Col14 + "'").CopyToDataTable();
                if (dtb.Rows.Count > 0)
                {
                    model[0].Col91 = dtb.Rows[0]["btnnew"].ToString();
                    model[0].Col92 = dtb.Rows[0]["btnedit"].ToString();
                    model[0].Col93 = dtb.Rows[0]["btnview"].ToString();
                }
            }
            catch (Exception ex) { }
            model[0].Col18 = sgen.seekval(userCode, "select unit_gstin_no from company_unit_profile where cup_id='" + unitid_mst + "'", "unit_gstin_no");
            DataTable dt = sgen.getdata(userCode, "select '' Item,'1' as  SNo ,'-' as Icode,'-' as IName,'-' PARTNO,'-'  HSN,'-' as UOM,'0' as TaxRate,'0' as Qty_Ord,'0' as IRate," +
               "'-' disc_type,'0' as disc_rate,'0' IAmount,'0' TaxAmount,'0' discAmount,'0' LineAmount,'-' as delivery_date,'-' as Remark from dual");
            model[0].dt1 = dt;
            sgen.SetSession(MyGuid, "BCPO_DT", dt.Copy());
            ModelState.Clear();
            return View(model);
        }
        public List<Tmodelmain> new_custpo(List<Tmodelmain> model)
        {
            try
            {

                List<SelectListItem> mod1 = new List<SelectListItem>();
                List<SelectListItem> mod2 = new List<SelectListItem>();
                List<SelectListItem> mod3 = new List<SelectListItem>();
                List<SelectListItem> mod5 = new List<SelectListItem>();
                model = getnew(model);
                TempData[MyGuid + "_Tlist1"] = model[0].TList1 = mod1 = cmd_Fun.payterm(userCode, unitid_mst, out defcall);
                TempData[MyGuid + "_Tlist2"] = model[0].TList2 = mod2 = cmd_Fun.priceterm(userCode, unitid_mst);
                TempData[MyGuid + "_Tlist3"] = model[0].TList3 = mod3 = cmd_Fun.transportmode(userCode, unitid_mst);
                mod5.Add(new SelectListItem { Text = "Open Qty", Value = "open" });
                mod5.Add(new SelectListItem { Text = "Fix Qty", Value = "fix" });
                TempData[MyGuid + "_Tlist5"] = model[0].TList5 = mod5;
                model[0].SelectedItems1 = new string[] { "" };
                model[0].SelectedItems2 = new string[] { "" };
                model[0].SelectedItems3 = new string[] { "" };
                model[0].SelectedItems4 = new string[] { "" };
                model[0].SelectedItems5 = new string[] { "" };
                model[0].Col17 = sgen.server_datetime_local(userCode);
                //mq = "SELECT ud.vch_num||to_char(ud.vch_date, 'yyyymmdd')|| ud.type as fstr,ud.user_id,ud.first_name||' '||replace(ud.middle_name,'0','')||''||replace(ud.last_name,'0','') as teachername," +
                //          "ud.email,nvl(msdg.master_name, '-') designation,ud.type,ud.vch_num as u_id,nvl(msdp.master_name, '-') department,ud.status FROM user_details ud " +
                //          "left join master_setting msdp on ud.DEPARTMENT = msdp.master_id and msdp.type = 'MDP' and find_in_set(msdp.client_unit_id, ud.client_unit_id)= 1 " +
                //          "left join master_setting msdg on ud.designation = msdg.master_id and msdg.type = 'MDG' and find_in_set(msdg.client_unit_id, ud.client_unit_id)= 1 " +
                //          "where ud.type = 'CPR' and std_type='003' and ud.vch_num='" + userid_mst + "'";
                //DataTable dtd = sgen.getdata(MyGuid, mq);


                mq = "select distinct (a.vch_num|| to_char(a.vch_date,'yyyymmdd')||a.type) as fstr,a.vch_num,a.c_name as name,a.addr address,a.pincode as Pincode,a.c_gstin as gstin," +
                     "a.type_desc as Search_text,a.tor,(case when a.cpcont='0000000000' then '-' else a.cpcont end) ContactNo,(case when a.cpemail='ab@ab.ab' then '-' else a.cpemail end) as Email " +
                     "from clients_mst a inner join user_details ud on ud.emp_id=a.vch_num and ud.type = 'CPR' and std_type='003' and ud.vch_num='" + userid_mst + "'" +
                     "where find_in_set(a.client_unit_id,'" + unitid_mst + "')=1 AND a.type='BCD' and substr(a.vch_num,0,3)='303'";
                DataTable dtp = sgen.getdata(userCode, mq);
                if (dtp.Rows.Count > 0)
                {
                    model[0].Col49 = dtp.Rows[0]["vch_num"].ToString();
                    model[0].Col20 = dtp.Rows[0]["name"].ToString();
                    model[0].Col21 = dtp.Rows[0]["address"].ToString();
                    model[0].Col22 = dtp.Rows[0]["gstin"].ToString();
                    model[0].Col52 = dtp.Rows[0]["tor"].ToString();
                }
            }
            catch (Exception ex) { }
            return model;
        }
        [HttpPost]
        public ActionResult cust_po(List<Tmodelmain> model, string command, string hfrow, string hftable, HttpPostedFileBase upd1)
        {
            try
            {
                #region ddl          
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();
                DataTable dtm = sgen.settable(hftable);
                model[0].dt1 = dtm;
                List<SelectListItem> mod1 = new List<SelectListItem>();
                List<SelectListItem> mod2 = new List<SelectListItem>();
                List<SelectListItem> mod3 = new List<SelectListItem>();
                List<SelectListItem> mod5 = new List<SelectListItem>();
                TempData[MyGuid + "_Tlist1"] = model[0].TList1 = (List<SelectListItem>)TempData[MyGuid + "_Tlist1"];
                TempData[MyGuid + "_Tlist2"] = model[0].TList2 = (List<SelectListItem>)TempData[MyGuid + "_Tlist2"];
                TempData[MyGuid + "_Tlist3"] = model[0].TList3 = (List<SelectListItem>)TempData[MyGuid + "_Tlist3"];
                TempData[MyGuid + "_Tlist5"] = model[0].TList5 = (List<SelectListItem>)TempData[MyGuid + "_Tlist5"];
                if (tm.SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                if (tm.SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
                if (tm.SelectedItems3 == null) model[0].SelectedItems3 = new string[] { "" };
                if (tm.SelectedItems5 == null) model[0].SelectedItems5 = new string[] { "" };
                #endregion
                if (command == "New")
                {
                    model = new_custpo(model);
                }
                else if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    if (model[0].Col92 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for edit SO, please contact your admin', 2);disableForm();";
                        return View(model);
                    }
                    if (sgen.GetSession(MyGuid, "cust_poorddelrno") != null) btnval = "CHRGDEL";
                    else if (sgen.GetSession(MyGuid, "btnval") != null) btnval = sgen.GetSession(MyGuid, "btnval").ToString();
                    model = CallbackFun(btnval, "N", actionName, controllerName, model);
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {
                    if (model[0].Col91 == "N")
                    {
                        ViewBag.scripCall += "showmsgJS(1, 'You dont have permission for save SO, please contact your admin', 2);";
                        return View(model);
                    }
                    try
                    {
                        if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-"))
                        {
                            ViewBag.scripCall += "showmsgJS(1,'Please Select item in grid-1', 2);";
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            return View(model);
                        }
                        Satransaction sat1 = new Satransaction(userCode, MyGuid);
                        string currdate = sgen.server_datetime(userCode);
                        if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                        {
                            isedit = true;
                            vch_num = model[0].Col16;
                        }
                        else
                        {
                            isedit = false;
                            mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + "";
                            vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                            //string condi = sgen.seekval(userCode, "select gothrchrg from " + model[0].Col10 + " where type='" + model[0].Col12 + "' and client_id='" + clientid_mst + "'  and " +
                            //               "gothrchrg='" + model[0].Col59 + "' and client_unit_id='" + unitid_mst + "' and pur_type='NPI " + mq1 + "", "gothrchrg");
                            //if (!condi.Equals("0"))
                            //{
                            //    //Means Already Exits.... 
                            //    ViewBag.vnew = "disabled='disabled'";
                            //    ViewBag.vedit = "disabled='disabled'";
                            //    ViewBag.scripCall = "showmsgJS(1,'PO No Already Exists',2)";
                            //    return View(model);
                            //}
                        }
                        bool Result = false;
                        DataTable dtbtch = cmd_Fun.GetStructure(userCode, "btchtrans");
                        DataTable dataTable = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                        #region DTSTR
                        for (int i = 0; i < model[0].dt1.Rows.Count; i++)
                        {
                            DataRow dr = dataTable.NewRow();
                            dr["rec_id"] = "0";
                            dr["type"] = model[0].Col12;
                            dr["PUR_TYPE"] = "P";
                            dr["vch_num"] = vch_num.Trim();
                            dr["vch_date"] = sgen.Make_date_S(model[0].Col17);
                            dr["acode"] = model[0].Col49;
                            dr["shipfrom"] = model[0].Col50;
                            dr["shipto"] = model[0].Col51;
                            dr["icode"] = model[0].dt1.Rows[i][2].ToString();
                            dr["iname"] = model[0].dt1.Rows[i][3].ToString();
                            dr["cpartno"] = model[0].dt1.Rows[i][4].ToString();
                            dr["hsno"] = model[0].dt1.Rows[i][5].ToString();
                            dr["uom"] = model[0].dt1.Rows[i][6].ToString();
                            dr["taxrate"] = model[0].dt1.Rows[i][7].ToString();
                            dr["qtyord"] = model[0].dt1.Rows[i][8].ToString();
                            dr["INDNO"] = model[0].SelectedItems5.FirstOrDefault();  //po mode
                            dr["gtaxamt"] = model[0].Col84; //net amount
                            dr["tmode"] = model[0].SelectedItems3.FirstOrDefault();
                            dr["pay_term"] = model[0].SelectedItems1.FirstOrDefault();
                            dr["price_term"] = model[0].SelectedItems2.FirstOrDefault();
                            dr["iremark"] = model[0].dt1.Rows[i]["REMARK"].ToString();
                            if (model[0].Col31 == "") model[0].Col31 = "-";
                            if (model[0].Col32 == "") model[0].Col32 = "-";
                            dr["irate"] = model[0].dt1.Rows[i]["IRATE"].ToString();
                            dr["disctype"] = model[0].dt1.Rows[i]["DISC_TYPE"].ToString();
                            dr["discrate"] = model[0].dt1.Rows[i]["DISC_RATE"].ToString();
                            dr["iamount"] = model[0].dt1.Rows[i]["IAMOUNT"].ToString();
                            dr["taxamt"] = model[0].dt1.Rows[i]["TAXAMOUNT"].ToString();
                            dr["discamt"] = model[0].dt1.Rows[i]["DISCAMOUNT"].ToString();
                            dr["lineamount"] = model[0].dt1.Rows[i]["LINEAMOUNT"].ToString();
                            dr["totremark"] = model[0].Col31;
                            dr["cond"] = model[0].Col32;
                            dr["basicamt"] = model[0].Col33;
                            dr["ginstlchrg"] = model[0].Col62;
                            dr["gserchrg"] = model[0].Col38;
                            dr["gamc"] = model[0].Col39;
                            dr["gloadchrg"] = model[0].Col40;
                            dr["dlv_date"] = sgen.Make_date_S(model[0].dt1.Rows[i]["DELIVERY_DATE"].ToString());
                            dr["col1"] = model[0].Col70;
                            dr["col2"] = model[0].Col71;
                            dr["col3"] = model[0].Col72;
                            dr["col4"] = model[0].Col76;
                            dr["col5"] = model[0].Col77;
                            dr["col6"] = model[0].Col78;
                            dr["date3"] = sgen.Make_date_S(model[0].Col73);
                            dr["date4"] = sgen.Make_date_S(model[0].Col74);
                            dr["date5"] = sgen.Make_date_S(model[0].Col75);
                            dr = getsave(currdate, dr, model);
                            dataTable.Rows.Add(dr);
                        }
                        #endregion
                        Result = sgen.Update_data_fast1(userCode, dataTable, model[0].Col10.Trim(), model[0].Col8, isedit);
                        if (Result == true)
                        {
                            DataTable dten = cmd_Fun.GetStructure(userCode, "enx_tab");
                            if (model[0].LTM1 != null && model[0].LTM1.Count > 0)
                            {
                                res = false;
                                #region dr
                                for (int k = 0; k < model[0].LTM1.Count; k++)
                                {
                                    DataRow dr = dten.NewRow();
                                    dr["type"] = model[0].Col12;
                                    dr["vch_num"] = vch_num.Trim();
                                    dr["vch_date"] = sgen.Savedate(model[0].Col48, true);
                                    //dt====
                                    dr["r_no"] = model[0].LTM1[k].Col14;
                                    dr["col1"] = model[0].LTM1[k].Col15;//chrgid
                                    dr["col2"] = model[0].LTM1[k].Col16;//chrgamt
                                    dr["col3"] = model[0].LTM1[k].Col13;//chrgrtid
                                    dr["col4"] = model[0].LTM1[k].Col17;//igstrt
                                    dr["col5"] = model[0].LTM1[k].Col18;//igstamt
                                    dr["col6"] = model[0].LTM1[k].Col19;//cgstrt
                                    dr["col7"] = model[0].LTM1[k].Col20;//cgstamt
                                    dr["col8"] = model[0].LTM1[k].Col21;//sgstrt
                                    dr["col9"] = model[0].LTM1[k].Col22;//sgstamt
                                                                        //======                            
                                    dr["rec_id"] = "0";
                                    if (isedit)
                                    {
                                        dr["client_id"] = model[0].Col1.Trim();
                                        dr["client_unit_id"] = model[0].Col2.Trim();
                                        dr["ent_by"] = model[0].Col3;
                                        dr["ent_date"] = model[0].Col4;
                                        dr["edit_by"] = userid_mst;
                                        dr["edit_date"] = currdate;
                                    }
                                    else
                                    {
                                        dr["client_id"] = clientid_mst;
                                        dr["client_unit_id"] = unitid_mst;
                                        dr["ent_by"] = userid_mst;
                                        dr["ent_date"] = currdate;
                                        dr["edit_by"] = "-";
                                        dr["edit_date"] = currdate;
                                    }
                                    dten.Rows.Add(dr);
                                }
                                #endregion
                                res = sgen.Update_data_uncommit2(userCode, dten, "enx_tab", model[0].Col8, isedit, sat1);
                                if (!res)
                                {
                                    sat1.Rollback();
                                    ViewBag.vnew = "disabled='disabled'";
                                    ViewBag.vedit = "disabled='disabled'";
                                    ViewBag.vimport = "disabled='disabled";
                                    ViewBag.vsave = "";
                                    ViewBag.vsavenew = "";
                                    ViewBag.scripCall += "showmsgJS(1, 'Calc error', 0);";
                                    ModelState.Clear();
                                    return View(model);
                                }
                            }
                            if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                            {
                                sat1.Commit();
                                ViewBag.vnew = "";
                                ViewBag.vedit = "";
                                ViewBag.vsave = "disabled='disabled'";
                                ViewBag.vsavenew = "disabled='disabled'";
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                            }
                            else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                            {
                                try
                                {
                                    sat1.Commit();
                                    model = new_custpo(model);
                                    ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                                }
                                catch (Exception ex)
                                {
                                    ViewBag.scripCall += "mytoast('error', 'toast-top-right', '" + ex.Message.ToString().Replace("'", "").Trim() + "');";
                                }
                            }
                            model = new List<Tmodelmain>();
                            model.Add(new Tmodelmain
                            {
                                Col9 = tm.Col9,
                                Col10 = tm.Col10,
                                Col53 = tm.Col53,
                                Col54 = tm.Col54,
                                Col11 = tm.Col11,
                                Col13 = "Save",
                                Col100 = "Save & New",
                                Col121 = "S",
                                Col122 = "<u>S</u>ave",
                                Col123 = "Save & Ne<u>w</u>",
                                Col14 = tm.Col14,
                                Col18 = tm.Col18,
                                Col15 = tm.Col15,
                                TList2 = mod2,
                                TList3 = mod3,
                                TList1 = mod1,
                                TList5 = mod5,
                                SelectedItems3 = new string[] { "" },
                                SelectedItems2 = new string[] { "" },
                                SelectedItems1 = new string[] { "" },
                                SelectedItems5 = new string[] { "" },
                                dt1 = ((DataTable)sgen.GetSession(MyGuid, "BCPO_DT")).Copy()
                            });
                        }
                    }
                    catch (Exception ex) { ViewBag.scripCall = "showmsgJS(1,'" + ex.Message.ToString().Replace("'", "") + "', 0);"; }
                }
                else if (command == "Import")
                {
                    string currdate = sgen.server_datetime(userCode);

                    HttpPostedFileBase file1 = upd1;
                    DataTable dt = new DataTable();
                    if (file1.ContentLength > 1)
                    {
                        string ext = Path.GetExtension(file1.FileName).ToLower();
                        if (ext == ".csv")
                        {
                            string filesavepath = AppDomain.CurrentDomain.BaseDirectory + "\\Uploads\\" + cg_com_name.Replace(" ", "")
                                + "\\file" + DateTime.Now.ToString("ddMMyyyyhhmmfff") + ext;
                            file1.SaveAs(filesavepath);
                            // Read sample data from CSV file
                            int i = 0;
                            using (CsvFileReader reader = new CsvFileReader(filesavepath))
                            {
                                CsvRow row = new CsvRow();
                                while (reader.ReadRow(row))
                                {
                                    DataRow dr = dt.NewRow();
                                    for (int c = 0; c < row.Count; c++)
                                    {
                                        if (i == 0) { dt.Columns.Add(row[c].ToString()); }
                                        else { dr[c] = row[c].ToString(); }
                                        //if (c > dt.Columns.Count) break;                                                                 
                                    }
                                    i++;
                                    dt.Rows.Add(dr);
                                }
                            }
                        }
                        try
                        {
                            dt.Rows[0].Delete();
                            for (int k = 0; k < dt.Rows.Count; k++)
                            {
                                //mq = sgen.seekval(userCode, "select icode from item where icode='" + dt.Rows[k]["icode"].ToString() + "' and type='IT' and sale='Y' and client_id='" + clientid_mst + "' and client_unit_id='" + unitid_mst + "'", "icode");
                                mq = sgen.seekval(userCode, "select icode from item where icode='" + dt.Rows[k]["icode"].ToString() + "' and type='IT' and sale='Y' and client_unit_id='" + unitid_mst + "'", "icode");
                                if (mq.Trim() == "0")
                                {
                                    ViewBag.vnew = "disabled='disabled'";
                                    ViewBag.vedit = "disabled='disabled'";
                                    ViewBag.vsave = "";
                                    ViewBag.vsavenew = "";
                                    ViewBag.scripCall += "showmsgJS(1,'Icode: " + dt.Rows[k]["icode"].ToString() + " not found,please check.', 0);";
                                    ModelState.Clear();
                                    return View(model);
                                }
                            }
                            mq1 = "select '-' item,'0' Sno,i.icode,i.iname,i.cpartno partno,u.master_name uom,h.master_name hsn,h.group_name taxrate,nvl(s.closing, 0) qty_in_stock," +
                                "'0' iamount,'0' taxamount,'0' as discamount,'0' lineamount,'' Delivery_date from item i " +
                                "inner join  master_setting u on u.master_id = i.uom and u.type = 'UMM' and find_in_set(u.client_unit_id, i.client_unit_id)= 1 " +
                                "inner join  master_setting h on h.master_id = i.hsno and h.type = 'HSN' and find_in_set(h.client_unit_id, i.client_unit_id)= 1 " +
                                "left join(select icode,client_unit_id,sum(op) op,sum(pktop) pktop,sum(qtyin) qtyin,sum(qtyout) out," +
                                      "sum(op)+sum(qtyin)-sum(qtyout) closing from (select icode, client_unit_id, nvl(op_2019, 0) op," +
                                      " nvl(pkt_2019, 0) pktop, 0 qtyin, 0 qtyout, 0 pktno from itbal union all select icode, client_unit_id, " +
                                      "sum(to_number(qtyin)) - sum(to_number(qtyout)) op, sum((case when substr(type, 1, 1) in ('0', '1') then" +
                                      " pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktop,sum(to_number(qtyin)) " +
                                      "qtyin,sum(to_number(qtyout)) qtyout,0 pktno from itransaction where trim(store) = 'Y' and " +
                                      "to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and " +
                                      "to_date('" + year_from.Split(' ')[0].Trim() + "','" + sgen.Getsqldateformat() + "')-1 group by icode,client_unit_id union all select icode,client_unit_id," +
                                      "0 as op,0 as pktop,to_number(qtyin) qtyin,to_number(qtyout) qtyout,sum((case when substr(type, 1, 1) in " +
                                      "('0', '1') then pktno when substr(type,1,1) in ('2', '3', '4') then - pktno else pktno end)) pktno from " +
                                      "itransaction where trim(store) = 'Y' and to_date(to_char(vch_date, '" + sgen.Getsqldateformat() + "'), '" + sgen.Getsqldateformat() + "') between " +
                                      "to_date('" + year_from.Split(' ')[0].Trim() + "', '" + sgen.Getsqldateformat() + "') and to_date('" + currdate.Split(' ')[0].Trim() + "','" + sgen.Getsqldateformat() + "') group by icode,client_unit_id," +
                                      "to_number(qtyin),to_number(qtyout)) a group by icode, client_unit_id) s on i.icode = s.icode and find_in_set(i.client_unit_id, s.client_unit_id)=1 " +
                                "where i.type = 'IT' and find_in_set(i.client_unit_id, '" + unitid_mst + "')=1 and i.sale='Y'";
                            DataTable dt2 = sgen.getdata(userCode, mq1);
                            if (dt2.Rows.Count > 0)
                            {
                                var results = from table1 in dt.AsEnumerable()
                                              join table2 in dt2.AsEnumerable() on table1["icode"] equals table2["icode"]
                                              select new
                                              {
                                                  item = table2["item"],
                                                  sno = table2["sno"],
                                                  icode = table1["icode"],
                                                  iname = table2["iname"],
                                                  partno = table2["partno"],
                                                  hsn = table2["hsn"],
                                                  uom = table2["uom"],
                                                  taxrate = table2["taxrate"],
                                                  qty_in_stock = table2["qty_in_stock"],
                                                  qty_ord = table1["qty_ord"],
                                                  irate = table1["irate"],
                                                  disc_type = table1["disc_type"],
                                                  disc_rate = table1["disc_rate"],
                                                  iamount = table2["iamount"],
                                                  taxamount = table2["taxamount"],
                                                  discamount = table2["discamount"],
                                                  lineamount = table2["lineamount"],
                                                  delivery_date = sgen.server_datetime_local(userCode),
                                                  remark = table1["remark"]
                                              };
                                results.ToList();
                                DataTable dtk = sgen.ToDataTable(results.ToList());
                                model[0].dt1 = dtk;
                                ViewBag.vsave = "";
                                ViewBag.vimport = "";
                                ViewBag.vnew = "disabled='disabled'";
                                ViewBag.vedit = "disabled='disabled'";
                            }
                        }
                        catch (Exception err) { sgen.showmsg(1, err.Message.ToString().Replace("'", ""), 0); }
                    }
                }
                else if (command == "-")
                {
                    if (model[0].dt1.Rows.Count > 1) model[0].dt1.Rows.RemoveAt(sgen.Make_int(hfrow));
                    else { model[0].dt1 = ((DataTable)sgen.GetSession(MyGuid, "BCPO_DT")).Copy(); }
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        [HttpPost]
        public void cust_posoorddelrno(string value)
        {
            sgen.SetSession(MyGuid, "cust_posoorddelrno", value);
        }
        [HttpGet]
        public FileResult cust_posoordtemp(List<Tmodelmain> model, string Myguid = "")
        {
            FillMst(Myguid);
            model = (List<Tmodelmain>)sgen.GetSession(Myguid, "model");
            DataTable dtl = new DataTable();
            mq = "SELECT '' Icode,'' Qty_ord,'' Irate,'' Disc_type,'' Disc_Rate,'' Remark from Dual";
            dtl = sgen.getdata(userCode, mq);
            string cg_com_name = sgen.GetCookie(MyGuid, "cg_com_name");
            Byte[] fileBytes = sgen.Exp_to_csv_new(dtl, "cust_posoitem", cg_com_name);
            return File(fileBytes, System.Net.Mime.MediaTypeNames.Application.Octet, "cust_posoitem");
        }
        #endregion
        #region customer po approve
        public ActionResult cstpo_apr()
        {
            FillMst();
            chkRef();
            ViewBag.scripCall = "disableForm();";
            ViewBag.div_po1 = "style=display:none;";
            ViewBag.div_po2 = "style=display:none;";
            ViewBag.div_po3 = "style=display:none;";
            ViewBag.div_po4 = "style=display:none;";
            ViewBag.div_hr = "style=display:none;";
            List<Tmodelmain> model = new List<Tmodelmain>();
            Tmodelmain tm1 = new Tmodelmain();
            List<SelectListItem> mod1 = new List<SelectListItem>();
            List<SelectListItem> mod2 = new List<SelectListItem>();
            List<SelectListItem> mod3 = new List<SelectListItem>();
            List<SelectListItem> mod4 = new List<SelectListItem>();
            List<SelectListItem> mod5 = new List<SelectListItem>();
            mid_mst = EncryptDecrypt.Decrypt(Request.QueryString["mid"]);
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            tm1.Col10 = "purchasesc";
            tm1.Col9 = "CONFIRM CUSTOMER PURCHASE ORDER";
            tm1.Col12 = "BDP";
            tm1.Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            tm1.Col14 = mid_mst.Trim();
            tm1.Col15 = MyGuid.Trim();
            tm1.TList1 = mod1;
            tm1.SelectedItems1 = new string[] { "" };
            tm1.TList2 = mod2;
            tm1.SelectedItems2 = new string[] { "" };
            tm1.TList3 = mod3;
            tm1.SelectedItems3 = new string[] { "" };
            tm1.TList4 = mod4;
            tm1.SelectedItems4 = new string[] { "" };
            tm1.TList5 = mod5;
            tm1.SelectedItems5 = new string[] { "" };
            TempData[MyGuid + "_TList1"] = tm1.TList1;
            TempData[MyGuid + "_TList2"] = tm1.TList2;
            TempData[MyGuid + "_TList3"] = tm1.TList3;
            TempData[MyGuid + "_TList4"] = tm1.TList4;
            TempData[MyGuid + "_TList5"] = tm1.TList5;

            tm1.Col18 = sgen.seekval(userCode, "select unit_gstin_no from company_unit_profile where cup_id='" + unitid_mst + "'", "unit_gstin_no");
            DataTable dt = sgen.getdata(userCode, "select '' Item,'1' as  SNo ,'-' as Icode,'-' as IName,'-' PARTNO,'-'  HSN,'-' as UOM,'0' as TaxRate,'0' as Qty_Ord,'0' as IRate," +
               "'-' disc_type,'0' as disc_rate,'0' IAmount,'0' TaxAmount,'0' discAmount,'0' LineAmount,'-' as delivery_date,'-' as Remark from dual");
            tm1.dt1 = dt;
            sgen.SetSession(MyGuid, "BCONF_DT", dt.Copy());
            model.Add(tm1);
            ModelState.Clear();
            return View(model);
        }
        [HttpPost]
        public ActionResult cstpo_apr(List<Tmodelmain> model, string command, string hfrow, string hftable, HttpPostedFileBase upd1)
        {
            try
            {
                FillMst(model[0].Col15);
                DataTable dtm = sgen.settable(hftable);
                model[0].dt1 = dtm;
                var tm = model.FirstOrDefault();
                #region ddl po          
                List<SelectListItem> mod1 = new List<SelectListItem>();
                List<SelectListItem> mod2 = new List<SelectListItem>();
                List<SelectListItem> mod3 = new List<SelectListItem>();
                List<SelectListItem> mod4 = new List<SelectListItem>();
                List<SelectListItem> mod5 = new List<SelectListItem>();
                TempData[MyGuid + "_Tlist1"] = model[0].TList1 = (List<SelectListItem>)TempData[MyGuid + "_Tlist1"];
                TempData[MyGuid + "_Tlist2"] = model[0].TList2 = (List<SelectListItem>)TempData[MyGuid + "_Tlist2"];
                TempData[MyGuid + "_Tlist3"] = model[0].TList3 = (List<SelectListItem>)TempData[MyGuid + "_Tlist3"];
                TempData[MyGuid + "_Tlist4"] = model[0].TList4 = (List<SelectListItem>)TempData[MyGuid + "_Tlist4"];
                TempData[MyGuid + "_Tlist5"] = model[0].TList5 = (List<SelectListItem>)TempData[MyGuid + "_Tlist5"];
                if (tm.SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                if (tm.SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
                if (tm.SelectedItems3 == null) model[0].SelectedItems3 = new string[] { "" };
                if (tm.SelectedItems4 == null) model[0].SelectedItems4 = new string[] { "" };
                if (tm.SelectedItems5 == null) model[0].SelectedItems5 = new string[] { "" };
                #endregion
                if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    if (sgen.GetSession(MyGuid, "podelrno") != null) btnval = "CHRGDEL";
                    else if (sgen.GetSession(MyGuid, "delid") != null) { btnval = "FDEL"; }
                    else if (sgen.GetSession(MyGuid, "btnval") != null) btnval = sgen.GetSession(MyGuid, "btnval").ToString();
                    model = CallbackFun(btnval, "N", actionName, controllerName, model);
                    ViewBag.scripCall = "disableForm();";
                    ViewBag.div_po1 = "style=display:block;";
                    ViewBag.div_po2 = "style=display:block;";
                    ViewBag.div_po3 = "style=display:block;";
                    ViewBag.div_po4 = "style=display:block;";
                    ViewBag.div_hr = "style=display:block;";
                }
                else if (command == "Accept PO")
                {
                    mq = "update purchasesc set pur_type='A' where " + model[0].Col8 + "";
                    res = sgen.execute_cmd(userCode, mq);
                    if (res)
                    {
                        ViewBag.scripCall = "disableForm();";
                        ViewBag.div_po1 = "style=display:none;";
                        ViewBag.div_po2 = "style=display:none;";
                        ViewBag.div_po3 = "style=display:none;";
                        ViewBag.div_po4 = "style=display:none;";
                        ViewBag.div_hr = "style=display:none;";
                        ViewBag.scripCall += "showmsgJS(1, 'PO accepted', 1);";
                    }
                }
                else if (command == "Reject PO")
                {
                    mq = "update purchasesc set pur_type='R' where " + model[0].Col8 + "";
                    res = sgen.execute_cmd(userCode, mq);
                    if (res)
                    {
                        ViewBag.scripCall = "disableForm();";
                        ViewBag.div_po1 = "style=display:none;";
                        ViewBag.div_po2 = "style=display:none;";
                        ViewBag.div_po3 = "style=display:none;";
                        ViewBag.div_po4 = "style=display:none;";
                        ViewBag.div_hr = "style=display:none;";
                        ViewBag.scripCall += "showmsgJS(1, 'PO rejected', 1);";
                    }
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        #endregion
        #region quotation
        public ActionResult quot()
        {
            string title = "", pr_type = "";
            MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
            FillMst(MyGuid);
            List<Tmodelmain> model = new List<Tmodelmain>();
            model = getload(model);
            List<SelectListItem> mod1 = new List<SelectListItem>();
            List<SelectListItem> mod2 = new List<SelectListItem>();
            List<SelectListItem> mod3 = new List<SelectListItem>();
            List<SelectListItem> mod4 = new List<SelectListItem>();
            title = "QUOTATION";
            pr_type = "QTN";
            model[0].Col10 = "itransactionc";
            model[0].Col11 = " and client_id = '" + clientid_mst + "' and client_unit_id = '" + unitid_mst + "'";
            model[0].Col53 = title;
            model[0].Col54 = pr_type;
            model[0].TList1 = mod1;
            model[0].SelectedItems1 = new string[] { "" };
            model[0].TList2 = mod2;
            model[0].SelectedItems2 = new string[] { "" };
            model[0].TList3 = mod3;
            model[0].SelectedItems3 = new string[] { "" };
            model[0].TList4 = mod4;
            model[0].SelectedItems4 = new string[] { "" };
            model[0].Col18 = sgen.seekval(userCode, "select unit_gstin_no from company_unit_profile where cup_id='" + unitid_mst + "'", "unit_gstin_no");
            DataTable dt = sgen.getdata(userCode, "select '' Item,'1' as  SNo ,'-' as Icode,'-' as IName,'-' PARTNO,'-'  HSN,'-' as UOM,'0' as TaxRate,'0' as  Qty_in_stock,'0' as Qty_Ord,'0' as IRate," +
               "'-' disc_type,'0' as disc_rate,'0' IAmount,'0' TaxAmount,'0' discAmount,'0' LineAmount,'-' as Remark from dual");
            model[0].dt1 = dt;
            sgen.SetSession(MyGuid, "QTN_DT", dt.Copy());
            ModelState.Clear();
            return View(model);
        }
        [HttpPost]
        public ActionResult quot(List<Tmodelmain> model, string command, string hfrow, string hftable, HttpPostedFileBase upd1)
        {
            try
            {
                FillMst(model[0].Col15);
                var tm = model.FirstOrDefault();
                DataTable dtm = sgen.settable(hftable);
                model[0].dt1 = dtm;
                #region ddl          
                List<SelectListItem> mod1 = new List<SelectListItem>();
                List<SelectListItem> mod2 = new List<SelectListItem>();
                List<SelectListItem> mod3 = new List<SelectListItem>();
                List<SelectListItem> mod4 = new List<SelectListItem>();
                TempData[MyGuid + "_Tlist1"] = model[0].TList1 = (List<SelectListItem>)TempData[MyGuid + "_Tlist1"];
                TempData[MyGuid + "_Tlist2"] = model[0].TList2 = (List<SelectListItem>)TempData[MyGuid + "_Tlist2"];
                TempData[MyGuid + "_Tlist3"] = model[0].TList3 = (List<SelectListItem>)TempData[MyGuid + "_Tlist3"];
                TempData[MyGuid + "_Tlist4"] = model[0].TList4 = (List<SelectListItem>)TempData[MyGuid + "_Tlist4"];
                if (tm.SelectedItems1 == null) model[0].SelectedItems1 = new string[] { "" };
                if (tm.SelectedItems2 == null) model[0].SelectedItems2 = new string[] { "" };
                if (tm.SelectedItems3 == null) model[0].SelectedItems3 = new string[] { "" };
                if (tm.SelectedItems4 == null) model[0].SelectedItems4 = new string[] { "" };
                #endregion
                if (command == "Cancel")
                {
                    return CancelFun(model);
                }
                else if (command == "Callback")
                {
                    if (sgen.GetSession(MyGuid, "qtndelrno") != null) btnval = "CHRGDEL";
                    else if (sgen.GetSession(MyGuid, "btnval") != null) btnval = sgen.GetSession(MyGuid, "btnval").ToString();
                    model = CallbackFun(btnval, "N", actionName, controllerName, model);
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                    if (btnval == "PRINT")
                    {
                        ViewBag.vnew = "";
                        ViewBag.vedit = "";
                        ViewBag.vsave = "disabled='disabled'";
                        ViewBag.vsavenew = "disabled='disabled'";
                    }
                }
                else if (command == "Save" || command == "Update" || command == "Save & New" || command == "Update & New")
                {
                    try
                    {
                        if (model[0].dt1.Rows[0]["icode"].ToString().Trim().Equals("-"))
                        {
                            ViewBag.scripCall += "showmsgJS(1,'Please Select item in grid-1', 2);";
                            ViewBag.vnew = "disabled='disabled'";
                            ViewBag.vedit = "disabled='disabled'";
                            ViewBag.vsave = "";
                            ViewBag.vsavenew = "";
                            return View(model);
                        }
                        Satransaction sat1 = new Satransaction(userCode, MyGuid);
                        string currdate = sgen.server_datetime(userCode);
                        if (sgen.GetSession(MyGuid, "EDMODE").ToString().Equals("Y"))
                        {
                            isedit = true;
                            vch_num = model[0].Col16;
                            vch_num = model[0].Col47;
                        }
                        else
                        {
                            isedit = false;
                            mq = "select max(to_number(vch_num)) as auto_genid from " + model[0].Col10.Trim() + " a where type='" + model[0].Col12.Trim() + "'" + model[0].Col11.Trim() + " and pur_type = 'QTN'";
                            vch_num = sgen.genNo(userCode, mq, 6, "auto_genid");
                        }
                        bool Result = false;
                        DataTable dtbtch = cmd_Fun.GetStructure(userCode, "btchtrans");
                        DataTable dataTable = cmd_Fun.GetStructure(userCode, model[0].Col10.Trim());
                        #region DTSTR
                        for (int i = 0; i < model[0].dt1.Rows.Count; i++)
                        {
                            DataRow dr = dataTable.NewRow();
                            dr["rec_id"] = "0";
                            dr["type"] = model[0].Col12;
                            dr["vch_num"] = vch_num.Trim();
                            dr["vch_date"] = sgen.Make_date_S(model[0].Col48);
                            dr["acode"] = model[0].Col49;
                            dr["shipfrom"] = model[0].Col50;
                            dr["shipto"] = model[0].Col51;
                            dr["icode"] = model[0].dt1.Rows[i][2].ToString();
                            dr["iname"] = model[0].dt1.Rows[i][3].ToString();
                            dr["cpartno"] = model[0].dt1.Rows[i][4].ToString();
                            dr["hsno"] = model[0].dt1.Rows[i][5].ToString();
                            dr["uom"] = model[0].dt1.Rows[i][6].ToString();
                            dr["taxrate"] = model[0].dt1.Rows[i][7].ToString();
                            dr["qtystk"] = model[0].dt1.Rows[i][8].ToString();
                            dr["ORDQTY"] = model[0].dt1.Rows[i][9].ToString();
                            dr["gtaxamt"] = model[0].Col62; //net amount
                            dr["tmode"] = model[0].SelectedItems3.FirstOrDefault();
                            dr["pay_term"] = model[0].SelectedItems1.FirstOrDefault();
                            dr["price_term"] = model[0].SelectedItems2.FirstOrDefault();
                            dr["iremark"] = model[0].dt1.Rows[i][17].ToString();
                            if (model[0].Col31 == "") model[0].Col31 = "-";
                            if (model[0].Col32 == "") model[0].Col32 = "-";
                            dr["irate"] = model[0].dt1.Rows[i]["IRATE"].ToString();
                            dr["disctype"] = model[0].dt1.Rows[i]["DISC_TYPE"].ToString();
                            dr["discrate"] = model[0].dt1.Rows[i]["DISC_RATE"].ToString();
                            dr["iamount"] = model[0].dt1.Rows[i]["IAMOUNT"].ToString();
                            dr["taxamt"] = model[0].dt1.Rows[i]["TAXAMOUNT"].ToString();
                            dr["discamt"] = model[0].dt1.Rows[i]["DISCAMOUNT"].ToString();
                            dr["lineamount"] = model[0].dt1.Rows[i]["LINEAMOUNT"].ToString();
                            dr["totremark"] = model[0].Col31;
                            dr["cond"] = model[0].Col32;
                            dr["basicamt"] = model[0].Col33;
                            dr["igst"] = model[0].Col34;
                            dr["cgst"] = model[0].Col35;
                            dr["sgst"] = model[0].Col36;
                            dr["ginstlchrg"] = model[0].Col37;
                            dr["gserchrg"] = model[0].Col38;
                            dr["gamc"] = model[0].Col39;
                            dr["gloadchrg"] = model[0].Col40;
                            dr["pur_type"] = model[0].Col54;
                            dr["GFREIGHT"] = model[0].Col60;
                            dr["per_id"] = model[0].SelectedItems4.FirstOrDefault();
                            dr["is_other"] = (model[0].Chk1 == true) ? "Y" : "N"; //is other person
                            if (model[0].Chk1)
                            {
                                dr["other_per"] = model[0].Col63;
                            }
                            dr["REQ_BY"] = model[0].Col59;
                            dr = getsave(currdate, dr, model);
                            dataTable.Rows.Add(dr);
                        }
                        #endregion
                        Result = sgen.Update_data(userCode, dataTable, model[0].Col10.Trim(), model[0].Col8, isedit);
                        if (Result == true)
                        {
                            if (!isedit && model[0].Chk1)
                            {
                                string CONTVCH_NUM = "";
                                #region new contact
                                mq = "select max(to_number(vch_num)) as auto_genid from clients_mst a where  type in " +
                                            "('BCD' ,'DDBCD')" + model[0].Col11.Trim() + " and ref_code='" + model[0].Col49.Trim() + "' and substr(ref_code,0,3)='303'";
                                CONTVCH_NUM = sgen.genNo(userCode, mq, 6, "auto_genid");
                                DataTable dtstrr = cmd_Fun.GetStructure(userCode, "clients_mst");
                                DataRow dr = dtstrr.NewRow();
                                dr["ref_code"] = model[0].Col49;
                                dr["vch_num"] = CONTVCH_NUM;
                                dr["vch_date"] = sgen.Savedate(currdate, false);
                                dr["type"] = "BCD";
                                dr["cpname"] = model[0].Col63;//cont per name
                                dr["rec_id"] = "0";
                                dr["client_id"] = clientid_mst;
                                dr["client_unit_id"] = unitid_mst;
                                dr["ent_by"] = userid_mst;
                                dr["ent_date"] = currdate;
                                dr["edit_by"] = "-";
                                dr["edit_date"] = currdate;
                                dtstrr.Rows.Add(dr);
                                bool ok = sgen.Update_data_fast1(userCode, dtstrr, "clients_mst", tm.Col8, isedit);
                                #endregion
                            }
                            DataTable dten = cmd_Fun.GetStructure(userCode, "enx_tab");
                            if (model[0].LTM1 != null && model[0].LTM1.Count > 0)
                            {
                                res = false;
                                #region dr
                                for (int k = 0; k < model[0].LTM1.Count; k++)
                                {
                                    DataRow dr = dten.NewRow();
                                    dr["type"] = "QTN";
                                    dr["vch_num"] = vch_num.Trim();
                                    dr["vch_date"] = sgen.Savedate(model[0].Col48, true);
                                    //dt====
                                    dr["r_no"] = model[0].LTM1[k].Col14;
                                    dr["col1"] = model[0].LTM1[k].Col15;//chrgid
                                    dr["col2"] = model[0].LTM1[k].Col16;//chrgamt
                                    dr["col3"] = model[0].LTM1[k].Col13;//chrgrtid
                                    dr["col4"] = model[0].LTM1[k].Col17;//igstrt
                                    dr["col5"] = model[0].LTM1[k].Col18;//igstamt
                                    dr["col6"] = model[0].LTM1[k].Col19;//cgstrt
                                    dr["col7"] = model[0].LTM1[k].Col20;//cgstamt
                                    dr["col8"] = model[0].LTM1[k].Col21;//sgstrt
                                    dr["col9"] = model[0].LTM1[k].Col22;//sgstamt
                                    dr["col12"] = model[0].LTM1[k].Col25;//per
                                    dr["col10"] = model[0].LTM1[k].Col27;
                                    dr["col11"] = model[0].LTM1[k].Col28;
                                    dr["rec_id"] = "0";
                                    if (isedit)
                                    {
                                        dr["client_id"] = model[0].Col1.Trim();
                                        dr["client_unit_id"] = model[0].Col2.Trim();
                                        dr["ent_by"] = model[0].Col3;
                                        dr["ent_date"] = model[0].Col4;
                                        dr["edit_by"] = userid_mst;
                                        dr["edit_date"] = currdate;
                                    }
                                    else
                                    {
                                        dr["client_id"] = clientid_mst;
                                        dr["client_unit_id"] = unitid_mst;
                                        dr["ent_by"] = userid_mst;
                                        dr["ent_date"] = currdate;
                                        dr["edit_by"] = "-";
                                        dr["edit_date"] = currdate;
                                    }
                                    dten.Rows.Add(dr);
                                }
                                #endregion
                                res = sgen.Update_data_uncommit2(userCode, dten, "enx_tab", model[0].Col85, isedit, sat1);
                                if (!res)
                                {
                                    sat1.Rollback();
                                    ViewBag.vnew = "disabled='disabled'";
                                    ViewBag.vedit = "disabled='disabled'";
                                    ViewBag.vimport = "disabled='disabled";
                                    ViewBag.vsave = "";
                                    ViewBag.vsavenew = "";
                                    ViewBag.scripCall += "showmsgJS(1, 'Calc error', 0);";
                                    ModelState.Clear();
                                    return View(model);
                                }
                            }
                            if (command.Trim().ToUpper().Equals("SAVE") || command.Trim().ToUpper().Equals("UPDATE"))
                            {
                                sat1.Commit();
                                ViewBag.vnew = "";
                                ViewBag.vedit = "";
                                ViewBag.vsave = "disabled='disabled'";
                                ViewBag.vsavenew = "disabled='disabled'";
                                ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');disableForm();";
                            }
                            else if (command.Trim().ToUpper().Equals("SAVE & NEW") || command.Trim().ToUpper().Equals("UPDATE & NEW"))
                            {
                                try
                                {
                                    sat1.Commit();

                                    Make_query("quot", "Select Quotation Type", "NEW", "1", "", "", MyGuid);

                                    ViewBag.scripCall = "callFoo('Select Quotation Type');";
                                    ViewBag.scripCall += "mytoast('success', 'toast-top-right', 'Data Saved Successfully');";
                                }
                                catch (Exception ex)
                                {
                                    ViewBag.scripCall += "mytoast('error', 'toast-top-right', '" + ex.Message.ToString().Replace("'", "").Trim() + "');";
                                }
                            }
                            model = new List<Tmodelmain>();
                            model.Add(new Tmodelmain
                            {
                                Col10 = tm.Col10,
                                Col53 = tm.Col53,
                                Col54 = tm.Col54,
                                Col11 = tm.Col11,
                                Col13 = "Save",
                                Col100 = "Save & New",
                                Col121 = "S",
                                Col122 = "<u>S</u>ave",
                                Col123 = "Save & Ne<u>w</u>",
                                Col14 = tm.Col14,
                                Col15 = tm.Col15,
                                TList2 = mod2,
                                TList3 = mod3,
                                TList1 = mod1,
                                TList4 = mod4,
                                SelectedItems3 = new string[] { "" },
                                SelectedItems4 = new string[] { "" },
                                SelectedItems2 = new string[] { "" },
                                SelectedItems1 = new string[] { "" },
                                dt1 = ((DataTable)sgen.GetSession(MyGuid, "QTN_DT")).Copy()
                            });
                        }
                    }
                    catch (Exception ex) { ViewBag.scripCall = "showmsgJS(1,'" + ex.Message.ToString().Replace("'", "") + "', 0);"; }
                }
                else if (command == "-")
                {
                    if (model[0].dt1.Rows.Count > 1) model[0].dt1.Rows.RemoveAt(sgen.Make_int(hfrow));
                    else { model[0].dt1 = ((DataTable)sgen.GetSession(MyGuid, "QTN_DT")).Copy(); }
                    ViewBag.vnew = "disabled='disabled'";
                    ViewBag.vedit = "disabled='disabled'";
                    ViewBag.vsave = "";
                    ViewBag.vsavenew = "";
                }
            }
            catch (Exception err)
            {
                var LineNumber = new StackTrace(err, true).GetFrame(0).GetFileLineNumber();
                ViewBag.scripCall += "showmsgJS(1, '" + err.Message.Replace("'", "") + " At Line number " + LineNumber + "', 1);";
            }
            ModelState.Clear();
            return View(model);
        }
        [HttpPost]
        public void qtndelrno(string value)
        {
            sgen.SetSession(MyGuid, "qtndelrno", value);
        }
        #endregion
    }
}