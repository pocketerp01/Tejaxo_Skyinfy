@using System.Data;
@model IList<skyinfyMVC.Models.Tmodelmain>
@{
    string MyGuid = "";
    MyGuid = Model[0].Col15;
    sgenFun sgen;
    sgen = new sgenFun(MyGuid);


    string userCode = sgen.GetCookie(MyGuid,"userCode");

    ViewBag.Title = "Upload Training";
    Layout = "~/Views/Shared/_MasterPage.cshtml";
    var viewName = sgen.GetSession(MyGuid, "viewName").ToString();
    var controllerName = sgen.GetSession(MyGuid, "controllerName").ToString();
}
@{



    //DataTable dt = new DataTable();
    //dt = sgen.getdata(userCode, "select mod_id as m_id,mod_name as m_name from module where type='TMD' where 1=2");
    //if (dt.Rows.Count > 0)
    //{
    //}

    //List<SelectListItem> mod = new List<SelectListItem>();
    //foreach (DataRow dr in dt.Rows)
    //{
    //    var newItem = new SelectListItem { Text = dr["m_name"].ToString(), Value = dr["m_id"].ToString() };
    //    mod.Add(newItem);
    //}
    List<SelectListItem> mod = new List<SelectListItem>();
    var newItem2 = new MultiSelectList(mod, "value", "text", mod, new List<int>() { 1 });
    ViewBag.listitem = newItem2;


}
@functions{


    List<SelectListItem> filltrn()
    {
        List<SelectListItem> mod1 = new List<SelectListItem>();
        mod1.Add(new SelectListItem { Text = "Select", Value = "0", Selected = true });
        mod1.Add(new SelectListItem { Text = "Beginners", Value = "1" });
        mod1.Add(new SelectListItem { Text = "Intermediate", Value = "2" });
        mod1.Add(new SelectListItem { Text = "Advance", Value = "3" });
        mod1.Add(new SelectListItem { Text = "Expert", Value = "4" });

        //MultiSelectList newItem3 = new MultiSelectList(mod1, "value", "text");

        return mod1;
    }
}
@using (Html.BeginForm("upload_training", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="row">
        <div class="col-sm-4">
            <div class="form-group">
                <div class='input-group'>
                    <div class="title_left">
                        <h3>Upload Training</h3>
                    </div>

                    <span class="input-group-addon formclass"></span>
                </div>
            </div>
        </div>
        <div class="col-sm-8">
            <div class="col-sm-2">
                <div class="form-group">
                    <div class='input-group'>

                        <input type="submit" class="btn btn-primary form-control sa-button" @ViewBag.vnew style="border-radius: 10px!important;" id="btnnew" name="command" value="New" accesskey="N" />

                        <span class="input-group-addon formclass"></span>
                    </div>
                </div>
            </div>
            <div class='col-sm-2'>
                <div class="form-group">
                    <div class='input-group'>
                        <input type="button" class="btn btn-warning form-control" @ViewBag.vedit style="border-radius: 10px!important;" id="btnedit" onclick="editfun();" accesskey="i" name="command" value="Edit" />

                        <span class="input-group-addon formclass"></span>
                    </div>
                </div>
            </div>
            <div class='col-sm-2'>
                <div class="form-group">
                    <div class='input-group'>
                        <input type="submit" class="btn btn-success form-control" @ViewBag.vsave style="border-radius: 10px!important;" id="btnsave" accesskey="s" name="command" value="Save" />

                        <span class="input-group-addon formclass"></span>
                    </div>
                </div>
            </div>
            <div class='col-sm-2'>
                <div class="form-group">
                    <div class='input-group'>
                        <input type="button" class="btn btn-info form-control" style="border-radius: 10px!important;" onclick="detailfun();" id="btndetail" accesskey="V" name="command" value="Detail" />

                        <span class="input-group-addon formclass"></span>
                    </div>
                </div>
            </div>
            <div class='col-sm-2'>
                <div class="form-group">
                    <div class='input-group'>
                        <button type="submit" class="btn btn-primary form-control" style="border-radius: 10px!important;" id="btncancel" onclick="cancelfun()" accesskey="C">C<u>a</u>ncel</button>
                        <span class="input-group-addon formclass"></span>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="clearfix"></div>
    <div class="clearfix"></div>
    for (int i = 0; i < Model.Count; i++)
    {
        <div class="row">
            <div class="col-md-12 col-sm-12 col-xs-12">
                <div class="x_panel">
                    <div class="x_content">


                        @Html.HiddenFor(model => model[i].Col20, new { @class = "form-control col-md-12 col-sm-12 col-xs-12", data_placeholder = "Choose a Module" })
                        @Html.HiddenFor(model => model[i].Col19, new { @class = "form-control col-md-12 col-sm-12 col-xs-12", data_placeholder = "Choose a Module" })
                        @Html.HiddenFor(model => model[i].Col18, new { @class = "form-control col-md-12 col-sm-12 col-xs-12", data_placeholder = "Choose a Module" })

                        <div id="demo-form2" data-parsley-validate="" class="form-horizontal">

                            <div class="form-group">
                                <label class="control-label col-md-3 col-sm-3 col-xs-12" for="first-name">
                                    Module <span class="ClientProfileLabelColor">*</span>

                                </label>
                                <div class="col-md-6 col-sm-6 col-xs-12 input-group">

                                    @Html.HiddenFor(model => model[i].Col1, new { @class = "form-control col-md-12 col-sm-12 col-xs-12", data_placeholder = "Choose a Module" })
                                    @Html.TextBoxFor(model => model[i].Col2, new { @class = " form-control col-md-12 col-sm-12 col-xs-12", data_placeholder = "Choose a Module" }) <span class="input-group-addon"><a id="aselectmod" onclick="aselect();"><i class="fa fa-edit"></i></a></span>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-3 col-sm-3 col-xs-12" for="last-name">
                                    Category <span class="ClientProfileLabelColor">*</span>
                                </label>
                                <div class="col-md-6 col-sm-6 col-xs-12">
                                    @Html.HiddenFor(model => model[i].Col3, new { @class = " form-control col-md-12 col-sm-12 col-xs-12", data_placeholder = "Choose a Module" })
                                    @Html.TextBoxFor(model => model[i].Col4, new { @class = " form-control col-md-12 col-sm-12 col-xs-12", data_placeholder = "Choose a Module" })

                                </div>
                            </div>
                            <div class="form-group">
                                <label for="middle-name" class="control-label col-md-3 col-sm-3 col-xs-12">
                                    Course Title <span class="ClientProfileLabelColor">*</span>
                                </label>
                                <div class="col-md-6 col-sm-6 col-xs-12">
                                    @Html.HiddenFor(model => model[i].Col5, new { @class = "form-control col-md-12 col-sm-12 col-xs-12", data_placeholder = "Choose a Module" })
                                    @Html.TextBoxFor(model => model[i].Col6, new { @class = " form-control col-md-12 col-sm-12 col-xs-12", data_placeholder = "Choose a Module" })

                                    <input type="button" id="btnShow" onclick="addcourse();" value="Add Course" class="btn btn-primary" style="margin-top: 10px" borderstyle="Solid">
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-3 col-sm-3 col-xs-12" for="first-name">
                                    Reference Code
                                </label>
                                <div class="col-md-6 col-sm-6 col-xs-12">
                                    @Html.TextBoxFor(model => model[i].Col7, new { @class = "form-control col-md-12 col-sm-12 col-xs-12" })

                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-3 col-sm-3 col-xs-12" for="first-name">
                                    Upload Files <span class="ClientProfileLabelColor">*</span>
                                </label>
                                <div class="col-md-6 col-sm-6 col-xs-12">
                                    <img id="imgupd" src="../../images/file-upload-button.png" onclick="imgclick(this)" style="max-width: 120px">
                                    <input id="upd" runat="server" onchange="fileselected(this);" clientidmode="static" style="visibility: hidden; height: 0; width: 0" multiple="multiple" name="postedFile" type="file">
                                    <span runat="server" clientidmode="Static" onclick="imgclick(this)" id="spanupd">Select File</span>
                                </div>
                            </div><div class="form-group">
                                <label class="control-label col-md-3 col-sm-3 col-xs-12" for="first-name">
                                    Training Duration in Minutes  <span class="ClientProfileLabelColor">*</span>
                                </label>
                                <div class="col-md-6 col-sm-6 col-xs-12">
                                    @Html.TextBoxFor(model => model[i].Col8, new { @class = "form-control col-md-12 col-sm-12 col-xs-12" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-3 col-sm-3 col-xs-12" for="first-name">
                                    Training Level <span class="ClientProfileLabelColor">*</span>
                                </label>
                                <div class="col-md-6 col-sm-6 col-xs-12">

                                    @Html.ListBoxFor(model => model[i].SelectedItems1, Model[i].TList, new { multiple = "multiple", @id = "trn_levelddl", @class = "sa-selectfast form-control col-md-12 col-sm-12 col-xs-12", data_placeholder = "Choose a Module" })

                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-6 col-sm-6 col-xs-12 col-md-offset-3">
                                    <asp:button id="Save_btn" runat="server" cssclass="btn btn-success" text="Save" onclick="Save_btn_Click">
                                        <asp:label id="lbl_msg" runat="server" text=""></asp:label>
                                    </asp:button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div id='Panel' class='modal'>
            <div class="modal-dialog">
                
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                        <h4 class="modal-title" id="myModalLabel">FriendsInfo</h4>
                    </div>
                    <div class="modal-body">
                        <p style="color: red"># Please select module and category first from the previous page !!</p>
                        <table class="table table-striped table-bordered table-hover" id="Table2" style="width: 100%">

                            <tbody>

                                <tr>
                                    <td>Module <span class="ClientProfileLabelColor">#</span></td>

                                    <td>
                                        <asp:TextBox ID="txt_module" ReadOnly="true" CssClass="form-control col-md-12 col-sm-12 col-xs-12"></asp:TextBox>
                                        <asp:HiddenField runat="server" ID="hdn_moduleid" />
                                    </td>
                                </tr>
                                <tr>
                                    <td>Category <span class="ClientProfileLabelColor">#</span></td>
                                    <td>
                                        <asp:TextBox ID="txt_category" ReadOnly="true" CssClass="form-control col-md-12 col-sm-12 col-xs-12"></asp:TextBox>
                                        <asp:HiddenField runat="server" ID="hdn_catid" />
                                    </td>
                                </tr>
                                <tr>
                                    <td>Course Title <span class="ClientProfileLabelColor">*</span></td>
                                    <td>
                                        <asp:TextBox ID="txt_course_title" CssClass="form-control col-md-12 col-sm-12 col-xs-12"></asp:TextBox>

                                    </td>
                                </tr>
                                <tr>
                                    <td>Description <span class="ClientProfileLabelColor">*</span></td>
                                    <td>
                                        <asp:TextBox ID="txt_course_descrp" CssClass="form-control col-md-12 col-sm-12 col-xs-12" TextMode="MultiLine"></asp:TextBox>

                                    </td>
                                </tr>

                                <tr>
                                    <td>Reference Code <span class="ClientProfileLabelColor">*</span></td>
                                    <td>
                                        <asp:TextBox ID="txt_course_refcode" CssClass="form-control col-md-12 col-sm-12 col-xs-12"></asp:TextBox>

                                    </td>
                                </tr>
                                <tr>
                                    <td>Active</td>
                                    <td>
                                        <asp:CheckBox ID="chk_course_active" runat="server" Text="Please Uncheck To Deactivate Course" Checked="true" />
                                    </td>
                                </tr>


                                <tr>
                                    <td>
                                        <asp:Button ID="btn_addcourse" runat="server" CssClass="btn btn-success" Text="Submit" OnClick="btn_addcourse_Click" />
                                        <asp:Label runat="server" ID="lbl_msg1" Text=""></asp:Label>
                                    </td>
                                    <td>
                                        <asp:Button ID="btnClose" runat="server" Text="Close" CssClass="btn btn-primary" BorderStyle="Solid" />
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>

        </div>
      </div>

        @*<div id="Panel2" class="modal fade">
            <div class="modal-dialog">
                <div class="x_panel">

                    <div class="x_content">


                      


                    </div>
                </div>
            </div>

            <br />

        </div>*@

    }
    <input type="submit" id="callback1" value="Callback" name="Command" title="callback" class="btn btn-primary" />
}
<script type="text/javascript">

    function addcourse() {
        var options = { "backdrop": "static", keyboard: true };
        $('#Panel').modal(options);
        $('#Panel').modal('show');

    }

    function savefun() {


        //var name=$("[id*=txt_name]")[0].Value;
        //datatable = new Array();
        //var rows = 1;
        //for (var r = 0; r < rows.length; r++) {
        //    var row = rows[r];
        //    datatable.push([{ srno: row.children[0].children[0].innerText }
        //        , { locname: row.children[1].children[0].innerText }
        //    ]);
        //}
        $.ajax({
            type: "POST",
            url: "/Home/invoice_config",
            data: JSON.stringify(invoice),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (r) {
                alert(r + " Data Inserted Successfully");
            }
        });
    }
    $(document).ready(function () {


        debugger

           @Html.Raw(ViewBag.scripCall)
        //disableForm();
        //enableForm();
        //enableForm();
        //$("[id*=btnnew]").attr("disabled", false);
        //$("[id*=btnedit]").attr("disabled", false);
        //$("[id*=btnsave]").attr("disabled", true);
        //$("[id*=btndetail]").attr("disabled", false);
        //$("[id*=btncancel]").attr("disabled", false);
    });

    function aselect() {
        var data = show_Foo('Select Module', 'MODULE', '1', '@viewName');


    }
    function newfun() {
        debugger
        enableForm();
        $("[id*=btnsave]").attr("disabled", false);
        $("[id*=btnnew]").attr("disabled", true);
        $("[id*=btnedit]").attr("disabled", true);

        var mq = '@EncryptDecrypt.Encrypt_new("select mod_id,mod_name from module where type='TMD'")';


        fillDdl('module_drpdwn', mq);

    }
    function editfun() {
        var data = show_Foo('Select Module', 'EDIT', '1', '@viewName');}
    function detailfun() {
        var data = show_Foo('Select Module', 'EDIT', '0', '@viewName');
    }

    function viewfun() { }
    function cancelfun() {
        $("[id*=btnnew]").attr("disabled", false);
        $("[id*=btnedit]").attr("disabled", false);
        $("[id*=btnsave]").attr("disabled", true);
        $("[id*=btndetail]").attr("disabled", false);
        $("[id*=btncancel]").attr("disabled", false);
        fillBlanks();
        disableForm();
    }
    $(document).ready(function () {
           $("[id*=hf_controller]").val('@ViewContext.RouteData.Values["Controller"].ToString()');
        $("[id*=hf_viewname]").val('@Path.GetFileNameWithoutExtension(Server.MapPath(VirtualPath))');
        //$("[id*=module_drpdwn]").chosen().change(function () {
        //    debugger;
        //    var id = $(this).val();
        //});
        $('#module_drpdwn').change(function () {

            //alert(chose_get_value(this) + ' : ' + chose_get_text(this));
        });
    });

    function chose_get_value(ctrl) {

    }
    function chose_get_text(ctrl) {

    }
    function fileselected(ctrl) {
        debugger;
        var files = ctrl.files;
        var cnts = files.length;
        $(ctrl).parent().parent().find("span")[1].style.color = "blue";

        //$(ctrl).parent().parent().find("span")[1].css("color", "blue");
        for (var k = 0; k < cnts; k++) {

            var file = files[k];
            var namelen = file.name.length;
            if (namelen > 25) {
                $(ctrl).parent().parent().find("span")[1].innerText = "Sorry!! The file name can not be more than 25 Chars";
                //$(ctrl).parent().parent().find("span")[1].css("color", "red");
                $(ctrl).parent().parent().find("span")[1].style.color = "red";
                clearFileInput(ctrl.id);
                return;
            }
            var ext = file.name.match(/\.(.+)$/)[1];
            switch (ext) {
                case 'pdf':
                case 'jpg':
                case 'jpeg':
                case 'png':
                case 'bmp':
                case 'xls':
                    break;
                default:
                    $(ctrl).parent().parent().find("span")[1].innerText = "Sorry!! Upload only pdf,jpg,jpeg,png,gif file";
                    //$(ctrl).parent().parent().find("span")[1].css("color", "red");
                    $(ctrl).parent().parent().find("span")[1].style.color = "red";
                    clearFileInput(ctrl.id);
                    return;
                    break;
            }

            var filesize = file.size / 1024 / 1024;
            //var filesize = file.size / 1024;
            if (filesize < 1) {
                var filenme = file.name.split('\\');
                var lenn = filenme.length;
                var namee = filenme[lenn - 1];
                if (cnts > 1) {
                    $(ctrl).parent().parent().find("span")[1].innerText = cnts + " File Selected";
                }
                else { $(ctrl).parent().parent().find("span")[1].innerText = namee; }
            }
            else {
                $(ctrl).parent().parent().find("span")[1].innerText = 'Sorry!! This file size is:' + filesize + 'Kb Max. Allowed size is 100Kb';
                //$(ctrl).parent().parent().find("span")[1].css("color", "red");
                $(ctrl).parent().parent().find("span")[1].style.color = "red";
                clearFileInput(ctrl.id);
                return;
            }
        }


    }

    function clearFileInput(id) {
        var oldInput = document.getElementById(id);

        var newInput = document.createElement("input");

        newInput.type = "file";
        newInput.id = oldInput.id;
        newInput.setAttribute("onchange", "fileselected(this);");
        newInput.name = oldInput.name;
        newInput.className = oldInput.className;
        newInput.style.cssText = oldInput.style.cssText;
        // TODO: copy any other relevant attributes

        oldInput.parentNode.replaceChild(newInput, oldInput);
    }
    function imgclick(ctrl) {


        $(ctrl).closest('div').find("input[type=file]").click();

    }

</script>

