@using System.Data;
@model IList<skyinfyMVC.Models.Tmodelmain>
@{
    string MyGuid = "";
    MyGuid = Model[0].Col15;
    sgenFun sgen;
    sgen = new sgenFun(MyGuid);
    string userCode = sgen.GetCookie(MyGuid, "userCode");
    Layout = "~/Views/Shared/_MasterPage.cshtml";
    var viewName = sgen.GetSession(MyGuid, "viewName").ToString();
    var controllerName = sgen.GetSession(MyGuid, "controllerName").ToString();
    string mq = "";
    string buttons = "";
    #region buttons
    buttons += "<div class='col-md-8'>" +
"        <div class='row'>" +
"            <div class='col-sm-2'>" +
"                <div class='form-group'>" +
"                    <div class='input-group'>" +
"                        <button type='submit' class='btn btn-primary form-control sa-button' " + ViewBag.vnew + " formnovalidate id='btnnew' name='command' value='New' accesskey='N'><u>N</u>ew</button>" +
"                        <span class='input-group-addon formclass'></span>" +
"                    </div>" +
"                </div>" +
"            </div>" +
"            <div class='col-sm-2'> " +
"                <div class='form-group'>" +
"                    <div class='input-group'>" +
"                        <button type='button' class='btn btn-primary form-control sa-button' " + ViewBag.vedit + " id='btnedit' name='command' value='Edit' accesskey='I' onclick='editfun();'>Ed<u>i</u>t</button>" +
"                        <span class='input-group-addon formclass'></span>" +
"                    </div>" +
"                </div>" +
"            </div>" +
"            <div class='col-sm-2'> " +
"                <div class='form-group'>" +
"                    <div class='input-group'>" +
"                        <button type='submit' class='btn btn-primary form-control sa-button' " + ViewBag.vsave + " id='btnsave' onclick='return SaveVal();' name='command' value= '" + Model[0].Col13 + "' accesskey = '" + Model[0].Col121 + "' > " + Html.Raw(Model[0].Col122) + "</button>" +
"                        <span class='input-group-addon formclass'></span>" +
"                    </div>" +
"                </div>" +
"            </div>" +
"            <div class='col-sm-2'>" +
"                <div class='form-group'> " +
"                    <div class='input-group'>" +
"                        <button type='submit' class='btn btn-primary form-control sa-button' " + ViewBag.vsavenew + " id='btnsavenew' onclick='return SaveVal();' name='command' value= '" + Model[0].Col100 + "' accesskey ='W'> " + Html.Raw(Model[0].Col123) + "</button>" +
"                        <span class='input-group-addon formclass'></span>" +
"                    </div>" +
"                </div>" +
"            </div>" +
"            <div class='col-sm-2'> " +
"                <div class='form-group'>" +
"                    <div class='input-group'>" +
"                        <button type='button' class='btn btn-primary form-control sa-button' id='btndetail' name='command' value='View' accesskey='V' onclick='viewfun();'><u>V</u>iew</button>" +
"                        <span class='input-group-addon formclass'></span>" +
"                    </div>" +
"                </div>" +
"            </div>" +
"            <div class='col-sm-2'>" +
"                <div class='form-group'>" +
"                    <div class='input-group'>" +
"                        <button type='submit' class='form-control sa-button sa-btncancel' formnovalidate id='btncancel' name='command' value='Cancel' accesskey='C'><u>C</u>ancel</button>" +
"                        <span class='input-group-addon formclass'></span>" +
"                    </div>" +
"                </div>" +
"            </div>" +
"            <div class='col-sm-2'>" +
"                <div class='form-group'>" +
"                    <div class='input-group'>" +
"                        <button type='button' class='sa-button btn btn-primary form-control' id='btn_inactive' onclick='Inactivefun();' name='command' value='Inactive' accesskey='i'><u>In</u>active</button>" +
"                        <span class='input-group-addon formclass'></span>" +
"                    </div>" +
"                </div>" +
"            </div>" +
"        </div>" +
"    </div>";
    #endregion
}

<style type="text/css">
    .myclass {
        vertical-align: initial;
        min-height: 0px;
        margin: 0px
    }
</style>

<link href="~/Content/css/passwordstrength.css" rel="stylesheet" />
@using (Html.BeginForm(viewName, controllerName, new { @m_id = EncryptDecrypt.Encrypt(Model[0].Col15), @mid = EncryptDecrypt.Encrypt(Model[0].Col14) }, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="row">
        <div class="col-sm-4">
            <div class="form-group">
                <div class='input-group'>
                    <div class="title_left">
                        <h3>@Model[0].Col9</h3>
                        @Html.HiddenFor(model => model[0].Col9, new { @id = "hf_title" })
                    </div>
                    <span class="input-group-addon formclass"></span>
                </div>
            </div>
        </div>
        @Html.Raw(buttons)
    </div>
    <div class="clearfix"></div>

    for (int i = 0; i < Model.Count; i++)
    {
        DataTable dtm = Model[i].dt1;

        @Html.HiddenFor(model => model[i].Col1, new { @id = "hf_clientid" })
        @Html.HiddenFor(model => model[i].Col2, new { @id = "hf_clientunitid" })
        @Html.HiddenFor(model => model[i].Col3, new { @id = "hf_entby" })
        @Html.HiddenFor(model => model[i].Col4, new { @id = "hf_entdate" })
        @Html.HiddenFor(model => model[i].Col5, new { @id = "hf_editby" })
        @Html.HiddenFor(model => model[i].Col6, new { @id = "hf_editdate" })
        @Html.HiddenFor(model => model[i].Col7, new { @id = "hf_recid" })
        @Html.HiddenFor(model => model[i].Col8, new { @id = "hf_url" })
        @Html.HiddenFor(model => model[i].Col10, new { @id = "hf_tab_name" })
        @Html.HiddenFor(model => model[i].Col11, new { @id = "hf_where" })
        @Html.HiddenFor(model => model[i].Col12, new { @id = "hf_type" })
        @Html.HiddenFor(model => model[0].Col13, new { @id = "hf_btn_text" })
        @Html.HiddenFor(model => model[i].Col14, new { @id = "hf_mid" })
        @Html.HiddenFor(model => model[i].Col15, new { @id = "hf_m_id" })
        @Html.HiddenFor(model => model[i].Col16, new { @id = "hf_vch_num" })
        @Html.HiddenFor(model => model[i].Col17, new { @id = "hf_vch_dt" })
        @Html.HiddenFor(model => model[i].Col33, new { @id = "hf_rbt" })
        @Html.HiddenFor(model => model[i].Col34, new { @id = "hf_emp_id" })
        @Html.HiddenFor(model => model[i].Col100, new { @id = "hf_savenew" })
        @Html.HiddenFor(model => model[i].Col121, new { @id = "Update" })
        @Html.HiddenFor(model => model[i].Col122, new { @id = "Save" })
        @Html.HiddenFor(model => model[i].Col123, new { @id = "savenew" })
        <div class="row">
            <div class="col-md-12 col-sm-12 col-xs-12">
                <div class="x_panel">
                    <div class="x_content">

                        <div class="row">
                            <div class='col-sm-4'>
                                <label for="first-name">Doc No. </label>
                                <div class="form-group">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model[0].Col18, new { @id = "txt_vchnum", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @readonly = true, placeholder = "Doc No." })
                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                            <div class='col-sm-4 col-xs-4'>
                                <label for="first-name">User Type </label>
                                <div class="form-group">
                                    <div class='input-group'>
                                        @Html.DropDownListFor(model => model[i].SelectedItems11, new MultiSelectList(Model[i].TList11, "Value", "Text", Model[i].SelectedItems11), new { @id = "ddl_usrtype", @class = "sa-select2-single form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @multiple = "multiple", @MaxLength = "20", @style = "width:100%" })                                        
                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                            <div class='col-sm-4'>
                                <label for="first-name">Select User For Login </label>
                                <div class="form-group">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model[0].Col19, new { @id = "txt_user", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", placeholder = "Select Employee For Login", @onkeypress = "return false;" })
                                        <span class="input-group-addon" data-toggle="tooltip" data-placement="top" title="Select User For Login" id="spn_user" onclick="usrtype();"><i class="fa fa-search"></i></span>
                                    </div>
                                </div>
                            </div>                                                                                  
                        </div>
                        <div class="row">
                            <div class='col-sm-4'>
                                <label for="first-name">UserId <span class="ClientProfileLabelColor">*</span></label>
                                <div class="form-group">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model[0].Col20, new { @id = "txt_userid", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-mandatory", onkeypress = "return RestrictSpace()", OnTextChanged = "newuserid_TextChanged", placeholder = "User Id" })
                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                            <div class='col-sm-4'>
                                <label for="first-name">Password <span class="ClientProfileLabelColor">*</span></label>
                                <div class="form-group">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model[0].Col21, new { @id = "txt_pass", @type = "password", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-mandatory", placeholder = "Password", onkeypress = "return RestrictSpace()", onkeyup = "CheckPasswordStrength(this.value)" })
                                        <span id="password_strength"></span>
                                        @Html.CheckBoxFor(model => model[i].Chk1, new { @id = "cbShowHidePassword", @class = "sa-input checkbox myclass", onclick = "ShowHidePassword();" })
                                        <label for='cbShowHidePassword' style="width: 10px; margin-top: 5px">Show</label>
                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                            <div class='col-sm-4'>
                                <label for="first-name">Confirm Password <span class="ClientProfileLabelColor">*</span></label>
                                <div class="form-group">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model[0].Col22, new { @id = "txt_cfrmpass", @type = "password", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-mandatory", @onkeypress = "return RestrictSpace()", placeholder = "Confirm Password" })
                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>                            
                        </div>
                        <div class="row">
                            <div class='col-sm-4'>
                                <label for="first-name">First Name <span class="ClientProfileLabelColor">*</span></label>
                                <div class="form-group">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model[0].Col23, new { @id = "txt_fname", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-mandatory", placeholder = "First Name" })
                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                            <div class='col-sm-4'>
                                <label for="first-name">Last Name <span class="ClientProfileLabelColor"></span></label>
                                <div class="form-group">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model[0].Col24, new { @id = "txt_lname", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", placeholder = "Last Name" })
                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                            <div class='col-sm-4'>
                                <label for="first-name">Date Of Birth <span class="ClientProfileLabelColor"></span></label>
                                <div class="form-group">
                                    <div class='input-group'>

                                        @Html.TextBoxFor(model => model[0].Col25, new { @id = "txt_dob", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-date-dob", placeholder = "Date Of Birth" })

                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>                            
                        </div>
                        <div class="row">
                            <div class='col-sm-4'>
                                <label for="first-name">Date Of Anniversary <span class="ClientProfileLabelColor"></span></label>
                                <div class="form-group">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model[0].Col26, new { @id = "txt_doA", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-date-dob", placeholder = "Date Of Anniversary" })
                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                            <div class='col-sm-4'>
                                <label for="first-name">Spouse Name <span class="ClientProfileLabelColor"></span></label>
                                <div class="form-group">
                                    <div class='input-group'>

                                        @Html.TextBoxFor(model => model[0].Col27, new { @id = "txt_spouse_name", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", placeholder = "Spouse Name" })

                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                            <div class='col-sm-4'>
                                <label for="first-name">Country <span class="ClientProfileLabelColor"></span></label>
                                <div class="form-group">
                                    <div class='input-group'>

                                        @Html.ListBoxFor(model => model[0].SelectedItems1, new MultiSelectList(Model[0].TList1, "Value", "Text", Model[0].SelectedItems1), new { @id = "country", @class = "sa-select2-single form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @MaxLength = "20", @style = "width:100%", onchange = "country_change(this);" })
                                        @*@Html.DropDownListFor(model => model[0].SelectedItems1, new SelectList(Model[0].TList1, "Value", "Text", Model[0].SelectedItems1), new { @id = "country", style = "border-color: silver;", @class = "sa-textbox form-control col-md-12 col-sm-12 col-xs-12", data_placeholder = "Select Country", onchange = "country_change(this);" })*@

                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>                            
                        </div>
                        <div class="row">
                            <div class='col-sm-4'>
                                <label for="first-name">City <span class="ClientProfileLabelColor"></span></label>
                                <div class="form-group">
                                    <div class='input-group'>
                                        @Html.ListBoxFor(model => model[0].SelectedItems3, new MultiSelectList(Model[0].TList3, "Value", "Text", Model[0].SelectedItems3), new { @id = "ddl_city", @class = "sa-select2-single form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @MaxLength = "20", @style = "width:100%", onchange = "city_change(this);" })
                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                            <div class='col-sm-4' id="citydiv" style="display:none;">
                                <label for="first-name">Type Your City <span class="ClientProfileLabelColor"></span></label>
                                <div class="form-group">
                                    <div class='input-group'>

                                        @Html.TextBoxFor(model => model[0].Col31, new { @id = "txt_city", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", onkeypress = "return RestrictSpace()", placeholder = "Type Your City" })

                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                            <div class='col-sm-4'>
                                <label for="first-name">Contact No. <span class="ClientProfileLabelColor">*</span></label>
                                <div class="form-group">
                                    <div class='input-group'>

                                        @Html.TextBoxFor(model => model[0].Col28, new { @id = "txt_contact_no", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-mobile sa-textbox sa-mandatory", onkeypress = "return RestrictSpace()", placeholder = "Contact No.", @Maxlength = "15" })

                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                            <div class='col-sm-4'>
                                <label for="first-name">Email Id <span class="ClientProfileLabelColor">*</span></label>
                                <div class="form-group">
                                    <div class='input-group'>

                                        @Html.TextBoxFor(model => model[0].Col29, new { @id = "email_id_txtbx", @type = "email", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-mandatory", onkeypress = "return RestrictSpace()", placeholder = "Email Id" })

                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                            <div class='col-sm-4'>
                                <label for="first-name">Department <span class="ClientProfileLabelColor"></span></label>
                                <div class="form-group">
                                    <div class='input-group'>

                                        @Html.ListBoxFor(model => model[0].SelectedItems4, new MultiSelectList(Model[0].TList4, "Value", "Text", Model[0].SelectedItems4), new { @id = "dept_drpdwn", @class = "sa-select2-single form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @MaxLength = "20", @style = "width:100%" })

                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                            <div class='col-sm-4'>
                                <label for="first-name">Designation</label>
                                <div class="form-group">
                                    <div class='input-group'>

                                        @Html.ListBoxFor(model => model[0].SelectedItems5, new MultiSelectList(Model[0].TList5, "Value", "Text", Model[0].SelectedItems5), new { @id = "desig_drpdwn", @class = "sa-select2-single form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @MaxLength = "20", @style = "width:100%" })

                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                            <div class='col-sm-4'>
                                <label for="first-name">Company <span class="ClientProfileLabelColor">*</span></label>
                                <div class="form-group">
                                    <div class='input-group'>



                                        @Html.DropDownListFor(model => model[0].SelectedItems6, new MultiSelectList(Model[0].TList6, "Value", "Text", Model[0].SelectedItems6), new { multiple = "multiple", @id = "ddlchk_company", @class = "sa-select2-multiple form-control col-md-12 col-sm-12 col-xs-12 sa-mandatory ", onchange = "comp_change(this);" })

                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                            <div class='col-sm-4'>
                                <label for="first-name">Company Unit <span class="ClientProfileLabelColor">*</span></label>
                                <div class="form-group">
                                    <div class='input-group'>


                                        @Html.DropDownListFor(model => model[0].SelectedItems7, new MultiSelectList(Model[0].TList7, "Value", "Text", Model[0].SelectedItems7), new { multiple = "multiple", @id = "ddlchk_unit", @class = "sa-select2-multiple form-control col-md-12 col-sm-12 col-xs-12 sa-mandatory " })

                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                            <div class='col-sm-4'>
                                <label for="first-name">Module <span class="ClientProfileLabelColor">*</span></label>
                                <div class="form-group">
                                    <div class='input-group'>

                                        @Html.ListBoxFor(model => model[0].SelectedItems8, new MultiSelectList(Model[0].TList8, "Value", "Text", Model[0].SelectedItems8), new { @id = "ddlchk_module", @class = "sa-select2-multiple form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-mandatory", @MaxLength = "20", @style = "width:100%", onchange = "module_change(this);" })
                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                            <div class='col-sm-4'>
                                <label for="first-name">Effective Date <span class="ClientProfileLabelColor"></span></label>
                                <div class="form-group">
                                    <div class='input-group'>
                                        <asp:TextBox ID="Txt_eff" CssClass="form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-ac-date" runat="server"></asp:TextBox>
                                        @Html.TextBoxFor(model => model[0].Col30, new { @id = "Txt_eff", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-ac-date", placeholder = "Effective Date" })

                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class='col-sm-12'>
                                <label for="first-name">User Type <span class="ClientProfileLabelColor">*</span></label>
                                <div class="form-group">
                                    <div class="col-md-12 col-sm-12 col-xs-12" id="kdiv">


                                        @foreach (var chk in Model[0].SelectedItems8)
                                        {
                                            string rbt_name = "rbtmod_" + chk;
                                            @:<fieldset>
                                                //if (chk.Selected == true)
                                                {
                                                    mq = "SELECT u_id,m_id,r_name,m_name FROM role_authority where m_id='" + chk + "'";
                                                    DataTable dtrole = sgen.getdata(userCode, mq);
                                                    if (dtrole.Rows.Count > 0)
                                                    {
                                                        <span><b>@dtrole.Rows[0]["m_name"].ToString()</b></span><br>

                                                        for (int y = 0; y < dtrole.Rows.Count; y++)
                                                        {
                                                            string check = "";
                                                            if (y == 0)
                                                            { check = "checked"; }

                                                            if (Model[0].Col33 == @dtrole.Rows[y]["u_id"].ToString())
                                                            {
                                                                check = "checked";
                                                            }


                                                            @*<input id="@dtrole.Rows[y]["u_id"].ToString()" value="@dtrole.Rows[y]["u_id"].ToString()" name= "rbt_mod" type="radio"> @dtrole.Rows[y]["r_name"].ToString()*@
                                                            <input id="@dtrole.Rows[y]["u_id"].ToString()" @check value="@dtrole.Rows[y]["u_id"].ToString()" name="@rbt_name" type="radio"> @dtrole.Rows[y]["r_name"].ToString()



                                                        }
                                                        <br><br>

                                                    }
                                                }
                                            @:</fieldset>
































































                                        }


                                    </div>
                                </div>
                            </div>

                        </div>
                        <div class="row">
                            <div class='col-sm-4' id="div_tresc" style="display:none">
                                <label for="first-name">Training Escalation </label>
                                <div class="form-group">
                                    <div class='input-group'>

                                        @Html.DropDownListFor(model => model[0].SelectedItems9, new MultiSelectList(Model[0].TList9, "Value", "Text", Model[0].SelectedItems9), new { @id = "ddl_authorizeusers", @class = "sa-select2-single form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @MaxLength = "20", @style = "width:100%" })
                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                            <div class='col-sm-4'>
                                <label for="first-name">Mail To Admin</label>
                                <div class="form-group">
                                    <div class='input-group'>
                                        <div class="checkbox" style="margin-left: 20px">

                                            @Html.CheckBoxFor(model => model[0].Chk1, new { @id = "chkbx_mail_to_admin", @class = "sa-input checkbox" })
                                        </div>
                                    </div>
                                    <span class="input-group-addon formclass"></span>
                                </div>
                            </div>
                            <div class='col-sm-4'>
                                <label for="first-name">Outside mail (check to allow)</label>
                                <div class="form-group">
                                    <div class='input-group'>
                                        <div class="checkbox" style="margin-left: 20px">

                                            @Html.CheckBoxFor(model => model[0].Chk2, new { @id = "outside_mail", @class = "sa-input checkbox" })

                                        </div>
                                    </div>
                                    <span class="input-group-addon formclass"></span>
                                </div>
                            </div>
                            <div class='col-sm-4'>
                                <label for="first-name">Show To Do List</label>
                                <div class="form-group">
                                    <div class='input-group'>
                                        <div class="checkbox" style="margin-left: 20px">
                                            @Html.CheckBoxFor(model => model[0].Chk3, new { @id = "chk_todo", @class = "sa-input checkbox" })
                                            <span class="input-group-addon formclass"></span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class='col-sm-4'>
                                <label for="first-name">Team </label>
                                <div class="form-group">
                                    <div class='input-group'>
                                        @Html.DropDownListFor(model => model[0].SelectedItems10, new MultiSelectList(Model[0].TList10, "Value", "Text", Model[0].SelectedItems10), new { multiple = "multiple", @id = "ddl_team", @class = "sa-select2-multiple form-control col-md-12 col-sm-12 col-xs-12" })
                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    }

    <asp:HiddenField ID="hf_empid" runat="server" />
    <asp:HiddenField ID="hfcompany" runat="server" />
    <asp:HiddenField ID="hfunit" runat="server" />
    <asp:HiddenField ID="hfmodule" runat="server" />

    <input type="submit" id="callback1" value="Callback" formnovalidate name="Command" title="callback" style="visibility:hidden" class="btn btn-primary" />
    <input type="submit" id="btn_ctry" value="country" formnovalidate name="Command" title="callback" style="visibility:hidden" class="btn btn-primary" />
    <input type="submit" id="btn_state" value="state" formnovalidate name="Command" title="callback" style="visibility:hidden" class="btn btn-primary" />
    @*<input type="submit" id="btn_city" value="city" formnovalidate name="Command" title="callback" style="visibility:hidden" class="btn btn-primary" />*@
    <input type="submit" id="btn_company" value="company" formnovalidate name="Command" title="callback" style="visibility:hidden" class="btn btn-primary" />
    <input type="submit" id="btn_module" value="module" formnovalidate name="Command" title="callback" style="visibility:hidden" class="btn btn-primary" />
}

<script type="text/javascript">
        $(document).ready(function () {
        @Html.Raw(ViewBag.scripCall);
            $("[id*=hf_controller]").val('@ViewContext.RouteData.Values["Controller"].ToString()');
            $("[id*=hf_viewname]").val('@Path.GetFileNameWithoutExtension(Server.MapPath(VirtualPath))');
        });

        function editfun() {

            var data = show_Foo('Select Entry For Edit', 'EDIT', '1', '@viewName','@controllerName');
    }

    function Inactivefun() {

        var data = show_Foo('Select Entry ', 'INACTIVE', '1', '@viewName','@controllerName');
        }

        function viewfun() {
        var data = show_Foo('View Detail', 'DETAIL', '0', '@viewName','@controllerName');
    }


    function usrtype() {
    debugger;
        var usrtype = "";
        var ddl = $("#ddl_usrtype")[0].value;
        if (ddl == "001") usrtype = "EMP";
        else if (ddl == "002") usrtype = "VND";
        else if (ddl == "003") usrtype = "CST";
        else { showmsgJS(1, "Please select Usertype", 2); }

        var data = show_Foo('Select Employee For Login', usrtype, '1', '@viewName', '@controllerName');
    }

    function ShowHidePassword() {
        debugger;
        //

        var txt = $("#txt_pass");

            if (txt.prop("type") == "password") {
                txt.prop("type", "text");
                $("label[for='cbShowHidePassword']").text("Hide");
            }
            else {
                txt.prop("type", "password");
                $("label[for='cbShowHidePassword']").text("Show");
            }
        }

        function CheckPasswordStrength(password) {
            var password_strength = document.getElementById("password_strength");

            //TextBox left blank.
            if (password.length == 0) {
                password_strength.innerHTML = "";
                return;
            }

            //Regular Expressions.
            var regex = new Array();
            regex.push("[A-Z]"); //Uppercase Alphabet.
            regex.push("[a-z]"); //Lowercase Alphabet.
            regex.push("[0-9]"); //Digit.
            regex.push("[$$!%*#?&]"); //Special Character.

            var passed = 0;

            //Validate for each Regular Expression.
            for (var i = 0; i < regex.length; i++) {
                if (new RegExp(regex[i]).test(password)) {
                    passed++;
                }
            }

            //Validate for length of Password.
            if (passed > 2 && password.length > 8) {
                passed++;
            }

            //Display status.
            var color = "";
            var strength = "";
            switch (passed) {
                case 0:
                case 1:
                    strength = "Password is Weak";
                    color = "red";
                    break;
                case 2:
                    strength = "Password is Good";
                    color = "darkorange";
                    break;
                case 3:
                case 4:
                    strength = "Password is Strong";
                    color = "green";
                    break;
                case 5:
                    strength = "Password is Excellent";
                    color = "darkgreen";
                    break;
            }
            password_strength.innerHTML = strength;
            password_strength.style.color = color;
        }

    function RestrictSpace() {
        if (event.keyCode == 32) {
            event.returnValue = false;
            return false;
        }
    }

    //$.noConflict();
    //$(function () {

    //    //Initialize Select2 Elements
    //    $('.select2').select2();
    //    //$('.select2').tagsinput('items');

    //});


    $("#button").click(function () {
        alert($("#ddlchk_unit").val());
    });

    function country_change(ctrl) {


        $(parent.document.getElementById('btn_ctry')).trigger('click');
    }

    function state_change(ctrl) {


        $(parent.document.getElementById('btn_state')).trigger('click');
    }

    function city_change(ctrl) {
        debugger;
        if (ctrl.value.trim() == "Other") { $("#citydiv").show(); }
        else { $("#citydiv").hide(); }

        //$(parent.document.getElementById('btn_city')).trigger('click');
    }

    function comp_change(ctrl) {


        $(parent.document.getElementById('btn_company')).trigger('click');
    }

    function module_change(ctrl) {

        //div_tresc
        if (ctrl.value.trim() == "1000") { $("#div_tresc").show(); }

        else { $("#div_tresc").hide(); }

        $(parent.document.getElementById('btn_module')).trigger('click');
    }


    function fillddl(subjects) {
        debugger;

        var a = subjects.split(",");
        var mm = "";
        for (index = 0, len = a.length; index < len; ++index) {
            if (mm == "") mm = a[index];
            else mm = "'" + mm + "','" + a[index] + "'";
        }
        $("#ddlchk_module").val(a).trigger("change");
    }

    function fillddl1(subjects) {
        debugger;

        var a = subjects.split(",");
        var mm = "";
        for (index = 0, len = a.length; index < len; ++index) {
            if (mm == "") mm = a[index];
            else mm = "'" + mm + "','" + a[index] + "'";
        }
        $("#ddlchk_company").val(a).trigger("change");
    }

    function fillddl2(subjects) {
        debugger;

        var a = subjects.split(",");
        var mm = "";
        for (index = 0, len = a.length; index < len; ++index) {
            if (mm == "") mm = a[index];
            else mm = "'" + mm + "','" + a[index] + "'";
        }
        $("#ddlchk_unit").val(a).trigger("change");
    }

    function SaveVal()
    {
        debugger;

      var  name = $("[name^=rbtmod_]");
        var rbt = "";
        for (var i = 0; i < name.length; i++)
        {
            if (name[i].checked) {
                 rbt= rbt+","+ name[i].value;
            }
        }


        $("#hf_rbt")[0].value = rbt;
    }
</script>