@using System.Data;
@model IList<skyinfyMVC.Models.Tmodelmain>
@{
    string MyGuid = "";
    MyGuid = Model[0].Col15;
    sgenFun sgen;
    sgen = new sgenFun(MyGuid);
    string userCode = sgen.GetCookie(MyGuid, "userCode");
    if (Model[0].Col17 == "ok") { Layout = ""; }
    else { Layout = "~/Views/Shared/_MasterPage.cshtml"; }
    var viewName = sgen.GetSession(MyGuid, "viewName").ToString();
    var controllerName = sgen.GetSession(MyGuid, "controllerName").ToString();

    string pgid = "menueditor";
    string pgurl = "/" + controllerName + "/" + viewName + "";
}

<!----datatable---->
<link href="~/erp/vendors/datatables.net-bs/css/dataTables.bootstrap.min.css" rel="stylesheet" />
<link href="~/erp/vendors/datatables.net-buttons-bs/css/buttons.bootstrap.min.css" rel="stylesheet" />
<link href="~/erp/vendors/datatables.net-fixedheader-bs/css/fixedHeader.bootstrap.min.css" rel="stylesheet" />
<link href="~/erp/vendors/datatables.net-responsive-bs/css/responsive.bootstrap.min.css" rel="stylesheet" />
<link href="~/erp/vendors/datatables.net-scroller-bs/css/scroller.bootstrap.min.css" rel="stylesheet" />

<script src="https://cdn.datatables.net/1.10.20/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/1.10.15/js/dataTables.bootstrap4.min.js "></script>
<!-- Datatables -->

<script>

    $(document).ready(function () {
     @Html.Raw(ViewBag.scripCall)
        $("[id*=hf_controller]").val('@ViewContext.RouteData.Values["Controller"].ToString()');
        $("[id*=hf_viewname]").val('@Path.GetFileNameWithoutExtension(Server.MapPath(VirtualPath))');

        var tableid = "demoGrid";
        showdata(tableid);
    });

    var times = [
        "1",
        "2",
        "3",
        "4",
        "5"
    ];
    function showdata(tableid) {
            var obj = { "gridid": tableid, "myguid": @MyGuid };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: obj,
                url: "/Grid/GetCols",
                success: function (data) {
                    var cols = [];
                    $('#' + tableid).parents().find("div[id*=_" + tableid + "]").show();
                    var yourobj = JSON.parse(data);
                    var htr = $("#" + tableid).find('thead tr');
                    var ftr = $("#" + tableid).find('tfoot tr');

                    var i = 0;
                    for (n1_1 in yourobj[0]) {
                        $(htr).append("<th>" + n1_1 + "</th>");
                        $(ftr).append("<th>" + n1_1 + "</th>");
                        if (i == 0) {
                            cols.push(
                                {
                                    "render": function (data, type, full, meta, row) {
                                        var fstr = full[Object.keys(full)[0]];
                                        return "<a class='btn btn-primary' style='max-height: 20px;padding-top: 0px;max-width:36px'><i class='fa fa-eye' aria-hidden='true' data-toggle='tooltip' data-placement=top' title='Detail'></i></a> " +
                                            "<input type='hidden' id='hf_fstr' value='" + full[Object.keys(full)[0]] + "'>";
                                    }
                                }
                            );
                        }
                        //else if (i == 5) {
                        //    cols.push(
                        //        {
                        //            "render": function (d, t, r) {
                        //                var $select = $("<select></select>", {
                        //                    "id": r[0] + "start",
                        //                    "value": d
                        //                });
                        //                $.each(times, function (k, v) {
                        //                    var $option = $("<option></option>", {
                        //                        "text": v,
                        //                        "value": v
                        //                    });
                        //                    if (d === v) {
                        //                        $option.attr("selected", "selected")
                        //                    }
                        //                    $select.append($option);
                        //                });
                        //                return $select.prop("outerHTML");
                        //            }

                        //        }
                        //    );
                        //}
                        else { cols.push({ "data": n1_1, "name": n1_1, "autoWidth": true }); }
                        i++;
                    }
                    var table = $("#" + tableid).DataTable({
                        processing: true, // control the processing indicator.
                        serverSide: true, // recommended to use serverSide when data is more than 10000 rows for performance reasons
                        //info: true,   // control table information display field
                        //stateSave: true, //restore table state on page reload,
                        searchDelay: 1000,
                        lengthMenu: [[10, 20, 50, -1], [10, 20, 50, "All"]],    // use the first inner array as the page length values and the second inner array as the displayed options
                        ajax: function (data, callback, settings) {
                            data.gridid = tableid;
                            data.myguid =@MyGuid;
                            $.ajax({
                                url: '/Grid/LoadData',
                                method: 'POST',
                                data: data
                            }).done(function (res) {

                                callback(JSON.parse(res));
                            }).error(function (res) {

                                callback(JSON.parse(res));
                            }).error;
                        },
                        createdRow: function (row, data, dataIndex) {
                            //if (data["LINKED_PAGE"].length>10) {
                                //$('td', row).eq(5).text(data["DESCRIPTION"].slice(0, 10) + "..");
                            //}
                            //if (data["STATUS"] == 'C') {
                            //    $(row)[0].style.textDecoration = "line-through";
                            //}

                            var len = $('td', row).length;
                            for (var i = 3; i < len; i++) {
                                //if (i == 5) { }
                                //else {
                                    $('td', row).eq(i).attr("onclick", "$(this).attr('contenteditable', 'true');");
                                    $('td', row).eq(i).attr("onblur", "updateval(this,'" + data.SNO + "','" + data[Object.keys(data)[i]] + "','" + Object.keys(data)[i] + "','" + tableid + "')");
                                //}
                            }
                        },
                        columns: cols,
                        columnDefs: [{
                            //"targets": 5,
                            //"render": function (data, type, row, meta) {

                            //    var $select = $("<select></select>", {
                            //    });
                            //    $.each(times, function (k, v) {

                            //        var $option = $("<option></option>", {
                            //            "text": v,
                            //            "value": v
                            //        });
                            //        if (data == v) {
                            //            $option.attr("selected", "selected")
                            //        }
                            //        $select.append($option);
                            //    });
                            //    return $select.prop("outerHTML");
                            //}
                        }],
                        //"order": [[0, "asc"]]
                    });
                    //debugger
                    // Get the column API object
                    //var column = table.column($(this).attr('data-column'));

                    //// Toggle the visibility
                    //column.visible(!column.visible());
                    var timeout;
                    $("#" + tableid + "_filter input")
                        .unbind().bind("input", function (e) {
                            var vali = $(this).val();
                            if (timeout) { clearTimeout(timeout); }
                            timeout = setTimeout(function () {
                                table.search(vali).draw();
                            }, 1000);
                        });
                    $("#" + tableid + " tfoot th").each(function () {
                        var placeHolderTitle = $("#" + tableid).find('thead th').eq($(this).index() + 1).text();
                        $("#" + tableid).find('tfoot th').eq($(this).index() + 1).html(' <input type = "text" class= "form-control input input-sm" placeholder = "Search ' + placeHolderTitle + '" /> ');
                    });
                    table.columns().every(function () {
                        var column = this;
                        //if (column.index() == 6) {
                        //    column.visible(!column.visible());
                        //}
                        var timeout;
                        $(this.footer()).find('input').on('keyup change', function () {
                            var keyy = this;
                            if (timeout) { clearTimeout(timeout); }
                            timeout = setTimeout(function () {
                                column.search(keyy.value).draw();
                            }, 1000);
                        });
                    });
                },
                error: function (res) {
                    $('#' + tableid).parents().find("div[id*=_" + tableid + "]").hide();
                }
            });
            try { $(".dataTables_processing")[0].style.paddingTop = "15px"; }
            catch (err) { }
    }

    var gid = "";
    var oldctl;
    var oldval = "";
    function updateval(ctrl,val,colval,col,tableid) {
        debugger
        if ($(ctrl).attr('contenteditable').toString() == "false") return;
        gid = tableid;
        oldctl = ctrl;
        oldval = colval;
        var obj = { "val": val, "colval": ctrl.innerText, "col": col };
        myMethod_C("@controllerName", "@viewName", "updateval", obj, onsuccess);
    }
    function onsuccess(Response) {
        if (Response == "Y") {
            //$("#" + gid).DataTable().ajax.reload();
            mytoast('success', 'toast-top-right', 'Data Updated Successfully');
        }
        else {
            oldctl.innerText = oldval;
            mytoast('error', 'toast-top-right', 'Data not updated');
        }
    }

</script>
<style>
    tfoot {
        display: table-header-group;
    }
</style>

@using (Html.BeginForm(viewName, controllerName, new { @m_id = EncryptDecrypt.Encrypt(Model[0].Col15), @mid = EncryptDecrypt.Encrypt(Model[0].Col14) }, FormMethod.Post, new { enctype = "multipart/form-data", id = pgid }))
{
    <div class="row">
        <div class="col-sm-12">
            <div class="form-group">
                <div class='input-group'>
                    <div class="title_left">
                        <h3>@Model[0].Col9</h3>
                        @Html.HiddenFor(model => model[0].Col9, new { @id = "hf_title" })
                    </div>
                    <span class="input-group-addon formclass"></span>
                </div>
            </div>
        </div>
    </div>
    @Html.HiddenFor(model => model[0].Col16, new { @id = "hf_txt" })
    <div class="clearfix"></div>
    <div class="row">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="x_panel">
                <div class="x_content">
                    <div class="row">
                        <div class="col-md-12 col-sm-12 col-xs-12" style="width:100%; margin:0 auto;">
                            <div class="x_panel">
                                <div class="x_content">
                                    <div class="x_title">Select Column for Edit Values</div>
                                    <div class="row">
                                        <div class="col-sm-12">
                                            <table id="demoGrid" class="table table-striped table-bordered dt-responsive nowrap" width="100%" cellspacing="0">

                                                <thead>
                                                    <tr></tr>
                                                </thead>
                                                <tfoot>
                                                    <tr></tr>
                                                </tfoot>

                                            </table>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <input type="submit" id="callback1" value="Callback" formnovalidate name="Command" title="callback" style="visibility:hidden" class="btn btn-primary" />
}
