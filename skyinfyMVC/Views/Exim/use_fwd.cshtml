@using System.Data;
@model IList<skyinfyMVC.Models.Tmodelmain>
@{
    string MyGuid = Model[0].Col15;
    sgenFun sgen = new sgenFun(MyGuid); Layout = "~/Views/Shared/_MasterPage.cshtml";
    string userCode = sgen.GetCookie(MyGuid, "userCode");
    var viewName = sgen.GetSession(MyGuid, "viewName").ToString();
    var controllerName = sgen.GetSession(MyGuid, "controllerName").ToString();
    #region buttons
    string buttons = "";
    buttons += "<div class='col-md-8'>" +
"        <div class='row'>" +
"            <div class='col-sm-2'>" +
"                <div class='form-group'>" +
"                    <div class='input-group'>" +
"                        <button type='button' class='btn btn-primary form-control sa-button' " + ViewBag.vnew + " formnovalidate onclick='setTableDatat();newfun();' id='btnnew' name='command' value='New' accesskey='N'><u>N</u>ew</button>" +
"                        <span class='input-group-addon formclass'></span>" +
"                    </div>" +
"                </div>" +
"            </div>" +
"            <div class='col-sm-2' > " +
"                <div class='form-group'>" +
"                    <div class='input-group'>" +
"                        <button type='button' class='btn btn-warning form-control sa-button' " + ViewBag.vedit + " id='btnedit' name='command' value='Edit' accesskey='I' onclick='setTableDatat();editfun();'>Ed<u>i</u>t</button>" +
"                        <span class='input-group-addon formclass'></span>" +
"                    </div>" +
"                </div>" +
"            </div>" +
"            <div class='col-sm-2'> " +
"                <div class='form-group'>" +
"                    <div class='input-group'>" +
"                        <button type='submit' class='btn btn-success form-control sa-button' " + ViewBag.vsave + " id='btnsave' name='command' value= '" + Model[0].Col13 + "' onclick='setTableDatat();' accesskey = '" + Model[0].Col121 + "' > " + Html.Raw(Model[0].Col122) + "</button>" +
"                        <span class='input-group-addon formclass'></span>" +
"                    </div>" +
"                </div>" +
"            </div>" +
"            <div class='col-sm-2'>" +
"                <div class='form-group'> " +
"                    <div class='input-group'>" +
"                        <button type='submit' class='btn btn-success form-control sa-button' " + ViewBag.vsavenew + " id='btnsavenew' name='command' onclick='setTableDatat();' value= '" + Model[0].Col100 + "' accesskey ='W'> " + Html.Raw(Model[0].Col123) + "</button>" +
"                        <span class='input-group-addon formclass'></span>" +
"                    </div>" +
"                </div>" +
"            </div>" +
"            <div class='col-sm-2' > " +
"                <div class='form-group'>" +
"                    <div class='input-group'>" +
"                        <button type='button' class='btn btn-info form-control sa-button' id='btndetail' name='command' value='View' accesskey='V' onclick='setTableDatat();viewfun();'><u>V</u>iew</button>" +
"                        <span class='input-group-addon formclass'></span>" +
"                    </div>" +
"                </div>" +
"            </div>" +
"            <div class='col-sm-2'>" +
"                <div class='form-group'>" +
"                    <div class='input-group'>" +
"                        <button type='submit' class='form-control sa-button sa-btncancel' formnovalidate id='btncancel' name='command' onclick='setTableDatat();' value='Cancel' accesskey='C'><u>C</u>ancel</button>" +
"                        <span class='input-group-addon formclass'></span>" +
"                    </div>" +
"                </div>" +
"            </div>" +
"        </div>" +
"    </div>";
    #endregion
}
@using (Html.BeginForm(viewName, controllerName, new { @m_id = EncryptDecrypt.Encrypt(Model[0].Col15), @mid = EncryptDecrypt.Encrypt(Model[0].Col14) }, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="row">

        <div class="col-sm-4">
            <div class="form-group">
                <div class='input-group'>
                    <div class="title_left">
                        <h3 id="hd_title">@Model[0].Col9</h3>
                    </div>

                    <span class="input-group-addon formclass"></span>
                </div>
            </div>
        </div>
        @Html.Raw(buttons)
    </div>

    <div class="clearfix"></div>
    {
        <div class=" clearfix"></div>
        @Html.HiddenFor(model => model[0].Col1, new { @id = "hf_clientid" })
        @Html.HiddenFor(model => model[0].Col2, new { @id = "hf_clientunitid" })
        @Html.HiddenFor(model => model[0].Col3, new { @id = "hf_entby" })
        @Html.HiddenFor(model => model[0].Col4, new { @id = "hf_entdate" })
        @Html.HiddenFor(model => model[0].Col5, new { @id = "hf_editby" })
        @Html.HiddenFor(model => model[0].Col6, new { @id = "hf_editdate" })
        @Html.HiddenFor(model => model[0].Col7, new { @id = "hf_recid" })
        @Html.HiddenFor(model => model[0].Col8, new { @id = "hf_url" })
        @Html.HiddenFor(model => model[0].Col9, new { @id = "hf_title" })
        @Html.HiddenFor(model => model[0].Col10, new { @id = "hf_tab_name" })
        @Html.HiddenFor(model => model[0].Col11, new { @id = "hf_where" })
        @Html.HiddenFor(model => model[0].Col12, new { @id = "hf_type" })
        @Html.HiddenFor(model => model[0].Col13, new { @id = "hf_btn_text" })
        @Html.HiddenFor(model => model[0].Col14, new { @id = "hf_mid" })
        @Html.HiddenFor(model => model[0].Col15, new { @id = "hf_m_id" })
        @Html.HiddenFor(model => model[0].Col16, new { @id = "hf_vch_num" })
        @Html.HiddenFor(model => model[0].Col100, new { @id = "hf_savenew" })
        @Html.HiddenFor(model => model[0].Col121, new { @id = "Update" })
        @Html.HiddenFor(model => model[0].Col122, new { @id = "Save" })
        @Html.HiddenFor(model => model[0].Col123, new { @id = "savenew" })
        <style>
            /*---for calender---*/
            .bootstrap-datetimepicker-widget {
                z-index: 999 !important;
                overflow: visible !important;
            }
            /*---for calender---*/

            .grid-container {
                display: grid; /* This is a (hacky) way to make the .grid element size to fit its content */
                overflow: auto;
                height: 300px;
                /*width: 600px;*/
            }

            .grid {
                display: flex;
                flex-wrap: nowrap;
            }

            .grid-col {
                width: 100px;
                min-width: 100px;
            }

            .grid-item--header {
                height: 35px;
                min-height: 35px;
                z-index: 1;
                position: sticky;
                position: -webkit-sticky;
                top: 0;
                text-transform: uppercase;
                font-size: 12px;
                /*font-weight: bold;*/
                color: #ECF0F1;
                background: rgba(52,73,94,.94);
            }

            .grid-col--fixed-left {
                position: sticky;
                left: 0;
                z-index: 2;
                background: white;
            }

            .grid-col--fixed-right {
                position: sticky;
                right: 0;
                z-index: 9998;
                background: white;
            }

            .grid-item {
                height: 35px;
                border: 1px solid gray;
                /*color: #999;*/
                border: 1px solid #eee;
                padding-left: 5px;
                border-collapse: collapse;
                font-family: "Helvetica Neue",Helvetica,Arial,sans-serif";
            }

            .grid-container::-webkit-scrollbar-thumb {
                background: #555;
                border: 0px none #ffffff;
                border-radius: 50px;
            }

                .grid-container::-webkit-scrollbar-thumb:hover {
                    background: #ffffff;
                }

                .grid-container::-webkit-scrollbar-thumb:active {
                    background: #555;
                }

            .grid-container::-webkit-scrollbar-track {
                background: #ffffff;
            }

            .grid-container::-webkit-scrollbar-corner {
                background: #ffffff;
            }

            .datepicker.-menu {
                z-index: 99999 !important
            }

            .bootstrap-datetimepicker-widget.dropdown-menu {
                overflow: visible;
                height: 100%;
            }
            /*.grid-item:hover {
                background: #4E5066;
                color: #FFFFFF;
                border-top: 1px solid #22262e;
            }*/
        </style>
        <style>
            .grid-container {
                display: grid; /* This is a (hacky) way to make the .grid element size to fit its content */
                overflow: auto;
                height: 300px;
                /*width: 600px;*/
            }

            .grid {
                display: flex;
                flex-wrap: nowrap;
            }

            .grid-col {
                width: 100px;
                min-width: 100px;
            }

            .grid-item--header {
                height: 35px;
                min-height: 35px;
                z-index: 1;
                position: sticky;
                position: -webkit-sticky;
                top: 0;
                text-transform: uppercase;
                font-size: 12px;
                font-weight: bold;
                color: #ECF0F1;
                background: rgba(52,73,94,.94);
            }

            .grid-col--fixed-left {
                position: sticky;
                left: 0;
                z-index: 2;
                background: white;
            }

            .grid-col--fixed-right {
                position: sticky;
                right: 0;
                z-index: 9998;
                background: white;
            }

            .grid-item {
                height: 35px;
                border: 1px solid gray;
                /*color: #999;*/
                border: 1px solid #eee;
                padding-left: 5px;
                border-collapse: collapse;
                font-family: "Helvetica Neue",Helvetica,Arial,sans-serif";
            }

            .grid-container::-webkit-scrollbar-thumb {
                background: #555;
                border: 0px none #ffffff;
                border-radius: 50px;
            }

                .grid-container::-webkit-scrollbar-thumb:hover {
                    background: #ffffff;
                }

                .grid-container::-webkit-scrollbar-thumb:active {
                    background: #555;
                }

            .grid-container::-webkit-scrollbar-track {
                background: #ffffff;
            }

            .grid-container::-webkit-scrollbar-corner {
                background: #ffffff;
            }

            .datepicker.dropdown-menu {
                z-index: 99999 !important
            }

            .bootstrap-datetimepicker-widget.dropdown-menu {
                overflow: visible;
                height: 100%;
            }
            /*.grid-item:hover {
                background: #4E5066;
                color: #FFFFFF;
                border-top: 1px solid #22262e;
            }*/
        </style>
        <div class="row">
            <div class="col-md-12 col-sm-12 col-xs-12">
                <div class="x_panel">
                    <div class="clearfix"></div>
                    <div class="x_content">

                        <div class="row">
                            <div class='col-sm-3'>
                                <label for="first-name">Select Bank Branch<span class="ClientProfileLabelColor">*</span></label>
                                <div class="form-group ">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model[0].Col20, new { @id = "txt_partyname", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-mandatory", placeholder = "Bank Name", @onkeypress = "return false;", @ReadOnly = "true" })
                                        @*@Html.HiddenFor(model => model[0].Col49, new { @id = "p_recid" })*@
                                        @Html.HiddenFor(model => model[0].Col52, new { @id = "hf_bnk_id" })
                                        <span class="input-group-addon" data-toggle="tooltip" data-placement="top" title="Select Party" id="spn_add" onclick="setTableDatat(); newfun();"><i class="fa fa-search"></i></span>

                                    </div>
                                </div>
                            </div>

                            <div class='col-sm-3'>
                                <label for="first-name">Bank Branch</label>
                                <div class="form-group ">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model[0].Col17, new { @id = "txt_brnch", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", placeholder = "Bank Branch", @ReadOnly = "true" })
                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                            <div class='col-sm-3'>
                                <label for="first-name">Account Type </label>
                                <div class="form-group ">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model[0].Col18, new { @id = "txt_ac_type", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", placeholder = "Account Type", @ReadOnly = "true" })
                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>

                            <div class='col-sm-3'>
                                <label for="first-name">Account No. <span class="ClientProfileLabelColor">*</span></label>
                                <div class="form-group ">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model[0].Col19, new { @id = "txt_gstin", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", placeholder = "Account No.", @ReadOnly = "true" })
                                    </div>
                                </div>
                            </div>

                        </div>
                        <div class="row">
                            <div class='col-sm-3'>
                                <label for="first-name">Forward Amt To Be Used</label>
                                <div class="form-group ">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model[0].Col21, new { @id = "txt_fwd_to_be", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", placeholder = "Forward Amt To Be Used", @ReadOnly = "true" })
                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>

                            <div class='col-sm-3'>
                                <label for="first-name">Use Date <span class="ClientProfileLabelColor">*</span></label>
                                <div class="form-group ">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model[0].Col22, new { @id = "txt_use_dt", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-ac-date sa-mandatory", placeholder = "Use Date" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    @if (Model.Count < 1)
                    { }
                    else
                    {
                        for (int i = 0; i < Model.Count; i++)
                        {
                            DataTable dtm = Model[i].dt1;
                            <div class="col-md-12 col-sm-12 col-xs-12">
                                <div class="x_panel" style="padding: 3px 15px !important">

                                    <div class="x_content">
                                        <div class="row">
                                            <h5>List of Forward To Be Used</h5>
                                            <div class="grid-container">
                                                <div class="grid">

                                                    @foreach (DataColumn dc in dtm.Columns)
                                                    {
                                                        int mlength = 10;
                                                        try
                                                        {
                                                            mlength = dtm.Select("[" + dc.ColumnName + "] = MAX([" + dc.ColumnName + "])")[0][dc.ColumnName].ToString().Length;
                                                        }
                                                        catch (Exception err) { }
                                                        int k = 0;
                                                        if (dc.Ordinal == 0)
                                                        {
                                                            <div class="grid-col grid-col--fixed-left" id="col_@dc.Ordinal" style="width:10px">
                                                                <div class="grid-item grid-item--header">
                                                                    <p>@dc.ColumnName.ToString()</p>
                                                                </div>

                                                                @foreach (DataRow dr in dtm.Rows)
                                                                {
                                                                    <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)'>
                                                                        <input name="command" onclick="sethfval('@k');getitem();" type="button" value="+" style="max-height: 20px;padding-top: 0px;" class="btn btn-info btn-sm" data-toggle="tooltip" title="Get Items" />
                                                                        <input name="command" onclick="sethfval('@k');" type="submit" value="-" style="max-height: 20px;padding-top: 0px;" class="btn btn-info btn-sm" formnovalidate data-toggle="tooltip" title="Hide" />
                                                                        <input type="hidden" value="@dr[dc].ToString()" id="fstr_@dc.Ordinal" />
                                                                    </div>
                                                                }
                                                            </div>
                                                        }
                                                        else if (dc.Ordinal == 1)
                                                        {
                                                            <div class="grid-col grid-col--fixed-left" id="col_@dc.Ordinal" style="width:@(mlength * 8)px">
                                                                <div class="grid-item grid-item--header">
                                                                    <p>@dc.ColumnName.ToString()</p>
                                                                </div>

                                                                @foreach (DataRow dr in dtm.Rows)
                                                                {
                                                                    <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)'>
                                                                        <label>@(k + 1)</label>
                                                                    </div>
                                                                    k++;
                                                                }
                                                            </div>
                                                        }
                                                        @*else if (dc.Ordinal == 12)
                                                            {
                                                                <div class="grid-col" id="col_@dc.Ordinal" style="width:@(mlength * 8)px;left:100px;position:sticky; z-index: 2;background: white;">
                                                                    <div class="grid-item grid-item--header">
                                                                        <p>@dc.ColumnName.ToString()</p>
                                                                    </div>
                                                                    @foreach (DataRow dr in dtm.Rows)
                                                                    {
                                                                        <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)' contenteditable="true">
                                                                            @dr[dc].ToString()
                                                                        </div>
                                                                    }
                                                                </div>
                                                            }*@
                                                        else if (dc.Ordinal == 12)
                                                        {
                                                            <div class="grid-col" id="col_@dc.Ordinal" style="width:@(mlength * 8)px;left:100px;position:sticky; z-index: 2;background: white;">
                                                                <div class="grid-item grid-item--header">
                                                                    <p>@dc.ColumnName.ToString()</p>
                                                                </div>
                                                                @foreach (DataRow dr in dtm.Rows)
                                                                {
                                                                    <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)' contenteditable="false" onkeyup="bal_amt();">
                                                                        @dr[dc].ToString()
                                                                    </div>
                                                                }
                                                            </div>
                                                        }
                                                        else if (dc.Ordinal == 13)
                                                        {
                                                            <div class="grid-col" id="col_@dc.Ordinal" style="width:@(mlength * 8)px;left:100px;position:sticky; z-index: 2;background: white;">
                                                                <div class="grid-item grid-item--header">
                                                                    <p>@dc.ColumnName.ToString()</p>
                                                                </div>
                                                                @foreach (DataRow dr in dtm.Rows)
                                                                {
                                                                    <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)' contenteditable="true" onkeyup="calcamt();">
                                                                        @dr[dc].ToString()
                                                                    </div>
                                                                }
                                                            </div>
                                                        }
                                                        else if (dc.Ordinal == 11)
                                                        {
                                                            <div class="grid-col" id="col_@dc.Ordinal" style="width:@(mlength * 8)px;left:100px;position:sticky; z-index: 2;background: white;">
                                                                <div class="grid-item grid-item--header">
                                                                    <p>@dc.ColumnName.ToString()</p>
                                                                </div>
                                                                @foreach (DataRow dr in dtm.Rows)
                                                                {
                                                                    <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)' contenteditable="false">
                                                                        @dr[dc].ToString()
                                                                    </div>
                                                                }
                                                            </div>
                                                        }
                                                        @*else if (dc.Ordinal == 10)
                                                            {
                                                                <div class="grid-col" id="col_@dc.Ordinal" style="width:300px">
                                                                    <div class="grid-item grid-item--header">
                                                                        <p>@dc.ColumnName.ToString()</p>
                                                                    </div>

                                                                    @foreach (DataRow dr in dtm.Rows)
                                                                    {
                                                                        string id = "dd_item_" + dtm.Rows.IndexOf(dr);

                                                                        <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)'>
                                                                            <div class="row">
                                                                                <div id="mtxt" class="col-md-10"> @dr[dc].ToString()</div>
                                                                                <div class="col-md-10" style="display:none">
                                                                                    @Html.TextBoxFor(m => m[0].Col51, new { id, @class = "form-control select2-dtype" })
                                                                                </div>
                                                                                <div id="msrc" class="col-md-2"><i class="fa fa-edit" onclick="showddl(this);"></i></div>
                                                                            </div>

                                                                        </div>


                                                                    }
                                                                </div>
                                                            }*@
                                                        else if (dc.Ordinal == 14)
                                                        {
                                                            <div class="grid-col" id="col_@dc.Ordinal" style="width:@(mlength * 8)px;left:100px;position:sticky; z-index: 2;background: white;">
                                                                <div class="grid-item grid-item--header">
                                                                    <p>@dc.ColumnName.ToString()</p>
                                                                </div>
                                                                @foreach (DataRow dr in dtm.Rows)
                                                                {
                                                                    <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)' contenteditable="true">
                                                                        @dr[dc].ToString()
                                                                    </div>
                                                                }
                                                            </div>
                                                        }
                                                        @*else if (dc.Ordinal == 14)
                                                            {
                                                                <div class="grid-col" id="col_@dc.Ordinal" style="width:@(mlength * 8)px;left:100px;position:sticky; z-index: 2;background: white;">
                                                                    <div class="grid-item grid-item--header">
                                                                        <p>@dc.ColumnName.ToString()</p>
                                                                    </div>
                                                                    @foreach (DataRow dr in dtm.Rows)
                                                                    {
                                                                        <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)' contenteditable="false">
                                                                            @dr[dc].ToString()
                                                                        </div>
                                                                    }
                                                                </div>
                                                            }*@
                                                        @*else if (dc.Ordinal == 16)
                                                            {
                                                                <div class="grid-col" id="col_@dc.Ordinal" style="width:@(mlength * 8)px;left:100px;position:sticky; z-index: 2;background: white;">
                                                                    <div class="grid-item grid-item--header">
                                                                        <p>@dc.ColumnName.ToString()</p>
                                                                    </div>
                                                                    @foreach (DataRow dr in dtm.Rows)
                                                                    {
                                                                        <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)' contenteditable="false">
                                                                            @dr[dc].ToString()
                                                                        </div>
                                                                    }
                                                                </div>
                                                            }*@
                                                        else
                                                        {
                                                            <div class="grid-col" id="col_@dc.Ordinal" style="width:@(mlength * 8)px">
                                                                <div class="grid-item grid-item--header">
                                                                    <p>@dc.ColumnName.ToString()</p>
                                                                </div>
                                                                @foreach (DataRow dr in dtm.Rows)
                                                                {
                                                                    <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)' contenteditable="false">
                                                                        @dr[dc].ToString()
                                                                    </div>
                                                                }
                                                            </div>
                                                        }
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                </div>

            </div>

        </div>
    }
    <input type="hidden" name="hftable" id="hftable" />
    <input type="hidden" name="hfrow" id="hfrow" />
    <input type="submit" id="callback1" formnovalidate value="Callback" name="Command" title="callback" onclick="setTableDatat();" style="visibility:hidden" class="btn btn-primary" />
}

<script type="text/javascript">
    //debugger;
    $(document).ready(function () {
        @Html.Raw(ViewBag.scripCall);
        $("[id*=hf_controller]").val('@ViewContext.RouteData.Values["Controller"].ToString()');
        $("[id*=hf_viewname]").val('@Path.GetFileNameWithoutExtension(Server.MapPath(VirtualPath))');

        calcamt();
        calcamt2();

    });

    function checkrefcode(ctrl) {
        //debugger;
        var obj = { "value": $(ctrl).val() };
        var res = myMethod('@controllerName','@viewName', 'checkrefcode', obj, ctrl);
    }




    function editfun() { var data = show_Foo('Select Entry For Edit', 'EDIT', '1', '@viewName', '@controllerName'); }
    @*function getitem() { var data = show_Foo('Select Book Forward', 'BOOKFWD', '1', '@viewName', '@controllerName'); }*@
    function viewfun() { var data = show_Foo('View Detail', 'VIEW', '0', '@viewName', '@controllerName'); }
    function newfun() { var data = show_Foo('Select Bank', 'NEW', '1', '@viewName', '@controllerName'); }


    function setTableDatat() {
        try {
            //debugger;
            datatable = new Array();

            var heads = $("[id*=col_]");
            var rows = $(heads).eq(0).find("[id*=row_]");
            for (var r = 0; r < rows.length; r++) {
                var row = $("[id=row_" + r + "]");
                var arr = new Array();
                for (var h = 0; h < heads.length; h++) {
                    var obj = {};
                    obj[heads[h].children[0].innerText] = row[h].innerText;
                    arr.push(obj);
                }
                datatable.push(arr);
            }
        }
        catch (err) { alert(err); return; }
        $("#hftable").val(JSON.stringify(datatable));
        //PageMethods.settable(datatable);


    }
    function sethfval(val) {

        $("#hfrow").val(val);
        setTableDatat();
    }

    function getitem()                                               /* for  additem or plus minus buttons*/
    {
        //debugger
        var icode = "", chkcode = "", ptype = "";

        ptype = "";
        // var acode = $("#hf_party_code")[0].value;
        //if (acode == "") { showmsgJS(1, "Please select Party", 2); return; }    /*popup for first*/
        var heads = $("[id*=col_]");
        var rows = $(heads).eq(0).find("[id*=row_]");
        for (var r = 0; r < rows.length; r++) {

            var row = $("[id=row_" + r + "]");
            chkcode = row[2].innerText.trim();
            if (chkcode != "-" && chkcode!="") {
                icode = icode + chkcode + ",";
            }
        }

        var data = show_Foo('Select Book Forward', 'BOOKFWD', '2', '@viewName', '@controllerName', icode, "");
    }

    function calcamt() {
        //debugger;
        var amt = 0;
        var exp = 0;
        var heads = $("[id*=col_]");
        var rows = $(heads).eq(0).find("[id*=row_]");
        for (var r = 0; r < rows.length; r++) {
            var row = $("[id=row_" + r + "]");
            exp = parseFloat(row[13].innerText);
            bal_amt = parseFloat(row[12].innerText);
            if (isNaN(exp)) { exp = 0; }

            amt = parseFloat(exp) + parseFloat(amt);

            if (bal_amt < exp) {
                row[13].innerText = bal_amt;
                alert("Amount To be Used should be equal or less than Bal Amount ");
            }
        }
        if (isNaN(amt)) { amt = 0; }
        $("#txt_fwd_to_be")[0].value = amt;
        //$("#txt_per_ex")[0].value = parseFloat(amt) / parseFloat($("#txt_pax")[0].value);

        //if (isNaN($("#txt_per_ex")[0].value)) { $("#txt_per_ex")[0].value = 0; }
    }

    function bal_amt() {
        //debugger;
        var amt = 0;
        var amt2 = 0;
        var used_amt = 0;
        var book_amt = 0;
        var bal_amt = 0;

        var heads = $("[id*=col_]");
        var rows = $(heads).eq(0).find("[id*=row_]");
        for (var r = 0; r < rows.length; r++) {
            var row = $("[id=row_" + r + "]");

            bal_amt = parseFloat(row[12].innerText);
            used_amt = parseFloat(row[13].innerText);
            if (isNaN(used_amt)) { used_amt = 0; }
            if (isNaN(bal_amt)) { bal_amt = 0; }

            if (bal_amt < used_amt) {
                alert("Amount To be Used be equal or less than Bal Amount ");
            }

        }

    }



</script>




