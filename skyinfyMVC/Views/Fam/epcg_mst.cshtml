@using System.Data;
@model IList<skyinfyMVC.Models.Tmodelmain>
@{
    string MyGuid = Model[0].Col15;
    sgenFun sgen = new sgenFun(MyGuid); string clr = "";
    //  ViewBag.Title = "epcg_mst";
    Layout = "~/Views/Shared/_MasterPage.cshtml";
    string userCode = sgen.GetCookie(MyGuid, "userCode");
    var viewName = sgen.GetSession(MyGuid, "viewName").ToString();
    var controllerName = sgen.GetSession(MyGuid, "controllerName").ToString();
    //var controllerName = @ViewContext.RouteData.Values["Controller"].ToString();
    //var viewName = @Path.GetFileNameWithoutExtension(Server.MapPath(VirtualPath));
    //Session["viewName"] = viewName;
    //Session["controllerName"] = controllerName;
    var ishc = false;
}
@using (Html.BeginForm(viewName, controllerName, new { @m_id = EncryptDecrypt.Encrypt(Model[0].Col15), @mid = EncryptDecrypt.Encrypt(Model[0].Col14) }, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="row">
        <div class="col-sm-4">
            <div class="form-group">
                <div class='input-group'>
                    <div class="title_left">
                        <h3>@Model[0].Col9</h3>
                    </div>
                    <span class="input-group-addon formclass"></span>
                </div>
            </div>
        </div>
        <div class="col-md-8">
            <div class="row">
                <div class="col-sm-2">
                    <div class="form-group">
                        <div class='input-group'>
                            <input type="submit" class="btn btn-primary form-control sa-button" @ViewBag.vnew id="btnnew" name="command" value="New" />
                            <span class="input-group-addon formclass"></span>
                        </div>
                    </div>
                </div>
                <div class='col-sm-2'>
                    <div class="form-group">
                        <div class='input-group'>
                            <input type="button" class="btn btn-warning form-control sa-button" @ViewBag.vedit id="btnedit" name="command" value="Edit" onclick="editfun();" />
                            <span class="input-group-addon formclass"></span>
                        </div>
                    </div>
                </div>
                <div class='col-sm-2'>
                    <div class="form-group">
                        <div class='input-group'>
                            <input type="submit" class="btn btn-success form-control sa-button" @ViewBag.vsave id="btnsave" name="command" value="@Model[0].Col13" />

                            <span class="input-group-addon formclass"></span>
                        </div>
                    </div>
                </div>
                <div class='col-sm-2'>
                    <div class="form-group">
                        <div class='input-group'>
                            <input type="button" class="btn btn-info form-control sa-button" id="btndetail" name="command" value="View" onclick="viewfun();" />
                            <span class="input-group-addon formclass"></span>
                        </div>
                    </div>
                </div>
                <div class='col-sm-2'>
                    <div class="form-group">
                        <div class='input-group'>
                            <input type="submit" class="form-control sa-button sa-btncancel" id="btncancel" name="command" value="Cancel" />
                            <span class="input-group-addon formclass"></span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="clearfix"></div>
    for (int i = 0; i < Model.Count; i++)
    {
        @Html.HiddenFor(model => model[i].Col1, new { @id = "hf_clientid" })
        @Html.HiddenFor(model => model[i].Col2, new { @id = "hf_clientunitid" })
        @Html.HiddenFor(model => model[i].Col3, new { @id = "hf_entby" })
        @Html.HiddenFor(model => model[i].Col4, new { @id = "hf_entdate" })
        @Html.HiddenFor(model => model[i].Col5, new { @id = "hf_editby" })
        @Html.HiddenFor(model => model[i].Col6, new { @id = "hf_editdate" })
        @Html.HiddenFor(model => model[i].Col7, new { @id = "hf_recid" })
        @Html.HiddenFor(model => model[i].Col8, new { @id = "hf_url" })
        @Html.HiddenFor(model => model[i].Col9, new { @id = "hf_title" })
        @Html.HiddenFor(model => model[i].Col10, new { @id = "hf_tab_name" })
        @Html.HiddenFor(model => model[i].Col11, new { @id = "hf_where" })
        @Html.HiddenFor(model => model[i].Col12, new { @id = "hf_type" })
        @Html.HiddenFor(model => model[i].Col13, new { @id = "hf_btn_text" })
        @Html.HiddenFor(model => model[i].Col14, new { @id = "hf_mid" })
        @Html.HiddenFor(model => model[i].Col15, new { @id = "hf_m_id" })
        @Html.HiddenFor(model => model[i].Col36, new { @id = "hf_file_entdate" })
        @Html.HiddenFor(model => model[i].Col37, new { @id = "hf_file_date" })
        @Html.HiddenFor(model => model[i].Col38, new { @id = "hf_tab_name" })
        @Html.HiddenFor(model => model[0].Col100, new { @id = "hf_savenew" })
        <div class="clearfix"></div>
        <div class="row">
            <div class="col-md-12 col-sm-12 col-xs-12">
                <div class="x_panel">
                    <div class="x_content">
                        <div id="demo-form2" class="form-horizontal">
                            <div class="form-group" runat="server">
                                <label class="control-label col-md-3 col-sm-3 col-xs-12" for="first-name">Doc No.</label>
                                <div class="col-md-6 col-sm-6 col-xs-12">
                                    @Html.TextBoxFor(model => model[i].Col16, new { @id = "txt_vchnum", @ReadOnly = "true", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox" })
                                </div>

                            </div>
                            <div class="form-group" runat="server">

                                <label class="control-label col-md-3 col-sm-3 col-xs-12" for="first-name">EPCG No.</label>
                                <div class="col-md-6 col-sm-6 col-xs-12">
                                    @Html.TextBoxFor(model => model[i].Col17, new { @id = "txt_epcgno", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-mandatory" })
                                </div>
                            </div>
                            <div class="form-group" runat="server">
                                <label class="control-label col-md-3 col-sm-3 col-xs-12" for="first-name">EPCG Date</label>
                                <div class="col-md-6 col-sm-6 col-xs-12">
                                    @Html.TextBoxFor(model => model[i].Col18, new { @id = "txt_epcgdate", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-ac-date sa-mandatory" })
                                </div>
                            </div>
                            <div class="form-group" runat="server">
                                <label class="control-label col-md-3 col-sm-3 col-xs-12" for="first-name">EPCG Amount</label>
                                <div class="col-md-6 col-sm-6 col-xs-12">
                                    @Html.TextBoxFor(model => model[i].Col19, new { @id = "txt_epcgamt", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-mandatory", @onkeydown = "return isDecimalKey(this);" })
                                </div>
                            </div>
                            <div class="form-group" runat="server">
                                <label class="control-label col-md-3 col-sm-3 col-xs-12" for="first-name">EPCG Benefit Amount</label>
                                <div class="col-md-6 col-sm-6 col-xs-12">
                                    @Html.TextBoxFor(model => model[i].Col20, new { @id = "txt_epcgbnfitm", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-mandatory", @onkeydown = "return isDecimalKey(this);" })
                                </div>
                            </div>
                            <div class="form-group" runat="server">
                                <label class="control-label col-md-3 col-sm-3 col-xs-12" for="first-name">EPCG Obligation Amount</label>
                                <div class="col-md-6 col-sm-6 col-xs-12">
                                    @Html.TextBoxFor(model => model[i].Col21, new { @id = "txt_obamt", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-mandatory", @onkeydown = "return isDecimalKey(this);" })
                                </div>
                            </div>
                            <div class="form-group" runat="server">
                                <label class="control-label col-md-3 col-sm-3 col-xs-12" for="first-name">Expiry On</label>
                                <div class="col-md-6 col-sm-6 col-xs-12">
                                    @Html.TextBoxFor(model => model[i].Col22, new { @id = "txt_date2", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-date  sa-mandatory" })
                                </div>
                            </div>
                            <div class="form-group" runat="server">
                                <label class="control-label col-md-3 col-sm-3 col-xs-12" for="first-name">Remarks</label>
                                <div class="col-md-6 col-sm-6 col-xs-12">
                                    @Html.TextBoxFor(model => model[i].Col23, new { @id = "txt_rmk", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox  sa-mandatory" })
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>

        </div>
        <hr />
        <div class="row">
            <div class='col-sm-4'>
                <label for="first-name">File Upload</label>
                @try
                {
                    var hlist = Model[0].LTM1.Where(m => m.Col2 == "ASSET ENTRY").ToList();
                    ishc = hlist.Count > 0;
                }
                catch (Exception err) { }

                @if (ishc)
                {
                    <div class="form-group">
                        <div class='input-group'>
                            <label>File Already Attached</label>
                        </div>
                    </div>
                }
                @if (!ishc)
                {
                    <div class="form-group">
                        <div class='input-group'>
                            <img id="imgupd1" src="../../images/file-upload-button.png" onclick="imgclick(this);" style="max-width: 120px" />
                            <input id="upd1" runat="server" onchange="fileselected(this);" clientidmode="static"
                                   style="visibility: hidden; height: 0; width: 0" multiple="multiple" name="upd1" type="file" />
                            <span ClientIDMode="Static" onclick="imgclick(this);" ID="spanupd1">@Model[0].Col32</span>
                            <span class="input-group-addon formclass"></span>
                        </div>
                    </div>
                }
            </div>
        </div>
        <div class="row">
            <div class="col-md-4">
                <table id="filetable" class="table table-striped table-bordered table-hover">
                    <thead>
                        <tr>
                            <th>File Name</th>
                            <th>File Title</th>
                            <th colspan="2">Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model[0].LTM1 != null)
                        {
                            for (int f = 0; f < Model[0].LTM1.Count; f++)
                            {
                                @Html.HiddenFor(model => model[i].LTM1[f].Col1, new { @id = "hf_ltm1" })
                                @Html.HiddenFor(model => model[i].LTM1[f].Col2, new { @id = "hf_ltm2" })
                                @Html.HiddenFor(model => model[i].LTM1[f].Col3, new { @id = "hf_ltm3" })
                                <tr>
                                    <td>
                                        <label Width="170px" Style="word-wrap: normal; word-break: break-all;" ID="lbl_filename">@Model[0].LTM1[f].Col1</label>
                                    </td>
                                    <td>
                                        <label Style="word-wrap: break-word" ID="lbl_filetitle">@Model[0].LTM1[f].Col2</label>
                                    </td>
                                    <td><a href="@Url.RouteUrl(new { Controller = "Fam", Action = "fdown", value = Model[0].LTM1[f].Col3 })"><i class="fa fa-download"></i></a></td>
                                    <td><a onclick="fdelete(event,'@Model[0].LTM1[f].Col3');"><i class="fa fa-close"></i></a></td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }
    <input type="submit" id="callback1" value="Callback" name="Command" title="callback" style="visibility:hidden" class="btn btn-primary" />
}
<script type="text/javascript">
    //debugger;
    $(document).ready(function () {
        @Html.Raw(ViewBag.scripCall);
        $("[id*=hf_controller]").val('@ViewContext.RouteData.Values["Controller"].ToString()');
        $("[id*=hf_viewname]").val('@Path.GetFileNameWithoutExtension(Server.MapPath(VirtualPath))');
    });




    //function newfun()
    //{
    //    enableForm();
    //    $("[id*=btnsave]").attr("disabled", false);
    //    $("[id*=btnnew]").attr("disabled", true);
    //    $("[id*=btnedit]").attr("disabled", true);
    //}

    function editfun() { var data = show_Foo('Select Entry For Edit', 'EDIT', '1', '@viewName', '@controllerName'); }
    function viewfun() { var data = show_Foo('View Detail', 'VIEW', '0', '@viewName', '@controllerName'); }


    //function cancelfun()
    //{
    //    $("[id*=btnnew]").attr("disabled", false);
    //    $("[id*=btnedit]").attr("disabled", false);
    //    $("[id*=btnsave]").attr("disabled", true);
    //    $("[id*=btndetail]").attr("disabled", false);
    //    $("[id*=btncancel]").attr("disabled", false);
    //    fillBlanks();
    //    disableForm();
    //}

    function fileselected(ctrl) {

        var files = ctrl.files;
        var cnts = files.length;
        $(ctrl).parent().parent().find("span").css("color", "blue");
        for (var k = 0; k < cnts; k++) {

            var file = files[k];
            var namelen = file.name.length;
            if (namelen > 20) {
                $(ctrl).parent().parent().find("span")[0].innerText = "Sorry!! The file name can not be more than 15 Chars";
                $(ctrl).parent().parent().find("span").css("color", "red");
                return;
            }
            var ext = file.name.match(/\.(.+)$/)[1];
            switch (ext) {
                case 'pdf':
                case 'jpg':
                case 'jpeg':
                case 'png':
                case 'bmp':
                    break
                default:
                    $(ctrl).parent().parent().find("span")[0].innerText = "Sorry!! Upload only pdf,,jpg,jpeg,png,gif file";
                    $(ctrl).parent().parent().find("span").css("color", "red");
                    return;
                    break;
            }

            //var filesize = file.size / 1024 / 1024;
            var filesize = file.size / 1024;
            if (filesize < 100) {
                var filenme = file.name.split('\\');
                var lenn = filenme.length;
                var namee = filenme[lenn - 1];
                if (cnts > 1) {
                    $(ctrl).parent().parent().find("span")[0].innerText = cnts + " File Selected";
                }
                else { $(ctrl).parent().parent().find("span")[0].innerText = namee; }
            }
            else {
                $(ctrl).parent().parent().find("span")[0].innerText = 'Sorry!! This file size is:' + filesize + 'Kb Max. Allowed size is 100Kb';
                $(ctrl).parent().parent().find("span").css("color", "red");
            }
        }
    }
    function imgclick(ctrl) {
        $(ctrl).closest('div').find("input[type=file]").click();
    }
</script>
