@using System.Data;
@model IList<skyinfyMVC.Models.Tmodelmain>
@{
    string MyGuid = Model[0].Col15;
    sgenFun sgen = new sgenFun(MyGuid); string clr = "";
    // ViewBag.Title = "fa_m";
    Layout = "~/Views/Shared/_MasterPage.cshtml";
    string userCode = sgen.GetCookie(MyGuid, "userCode");
    var viewName = sgen.GetSession(MyGuid, "viewName").ToString();
    var controllerName = sgen.GetSession(MyGuid, "controllerName").ToString();
    #region buttons
    string buttons = "";
    buttons += "<div class='col-md-8'>" +
"        <div class='row'>" +
"            <div class='col-sm-2'>" +
"                <div class='form-group'>" +
"                    <div class='input-group'>" +
"                        <button type='submit' class='btn btn-primary form-control sa-button' " + ViewBag.vnew + " formnovalidate id='btnnew' name='command' value='New' accesskey='N'><u>N</u>ew</button>" +
"                        <span class='input-group-addon formclass'></span>" +
"                    </div>" +
"                </div>" +
"            </div>" +
"            <div class='col-sm-2' > " +
"                <div class='form-group'>" +
"                    <div class='input-group'>" +
"                        <button type='button' class='btn btn-warning form-control sa-button' " + ViewBag.vedit + " id='btnedit' name='command' value='Edit' accesskey='I' onclick='editfun();'>Ed<u>i</u>t</button>" +
"                        <span class='input-group-addon formclass'></span>" +
"                    </div>" +
"                </div>" +
"            </div>" +
"            <div class='col-sm-2'> " +
"                <div class='form-group'>" +
"                    <div class='input-group'>" +
"                        <button type='submit' class='btn btn-success form-control sa-button' " + ViewBag.vsave + " id='btnsave' name='command' value= '" + Model[0].Col13 + "' accesskey = '" + Model[0].Col121 + "' > " + Html.Raw(Model[0].Col122) + "</button>" +
"                        <span class='input-group-addon formclass'></span>" +
"                    </div>" +
"                </div>" +
"            </div>" +
"            <div class='col-sm-2'>" +
"                <div class='form-group'> " +
"                    <div class='input-group'>" +
"                        <button type='submit' class='btn btn-success form-control sa-button' " + ViewBag.vsavenew + " id='btnsavenew' name='command' value= '" + Model[0].Col100 + "' accesskey ='W'> " + Html.Raw(Model[0].Col123) + "</button>" +
"                        <span class='input-group-addon formclass'></span>" +
"                    </div>" +
"                </div>" +
"            </div>" +
"            <div class='col-sm-2' > " +
"                <div class='form-group'>" +
"                    <div class='input-group'>" +
"                        <button type='button' class='btn btn-info form-control sa-button' id='btndetail' name='command' value='View' accesskey='V' onclick='viewfun();'><u>V</u>iew</button>" +
"                        <span class='input-group-addon formclass'></span>" +
"                    </div>" +
"                </div>" +
"            </div>" +
"            <div class='col-sm-2'>" +
"                <div class='form-group'>" +
"                    <div class='input-group'>" +
"                        <button type='submit' class='form-control sa-button sa-btncancel' formnovalidate id='btncancel' name='command' value='Cancel' accesskey='C'><u>C</u>ancel</button>" +
"                        <span class='input-group-addon formclass'></span>" +
"                    </div>" +
"                </div>" +
"            </div>" +
"        </div>" +
"    </div>";
    #endregion
}
@using (Html.BeginForm(viewName, controllerName, new { @m_id = EncryptDecrypt.Encrypt(Model[0].Col15), @mid = EncryptDecrypt.Encrypt(Model[0].Col14) }, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="row">
        <div class="col-sm-4">
            <div class="form-group">
                <div class='input-group'>
                    <div class="title_left">
                        <h3>@Model[0].Col9</h3>
                    </div>
                    <span class="input-group-addon formclass"></span>
                </div>
            </div>
        </div>
        @Html.Raw(buttons)
    </div>

    <div class="clearfix"></div>
    for (int i = 0; i < Model.Count; i++)
    {
        @Html.HiddenFor(model => model[0].Col1, new { @id = "hf_clientid" })
        @Html.HiddenFor(model => model[0].Col2, new { @id = "hf_clientunitid" })
        @Html.HiddenFor(model => model[0].Col3, new { @id = "hf_entby" })
        @Html.HiddenFor(model => model[0].Col4, new { @id = "hf_entdate" })
        @Html.HiddenFor(model => model[0].Col5, new { @id = "hf_editby" })
        @Html.HiddenFor(model => model[0].Col6, new { @id = "hf_editdate" })
        @Html.HiddenFor(model => model[0].Col7, new { @id = "hf_recid" })
        @Html.HiddenFor(model => model[0].Col8, new { @id = "hf_url" })
        @Html.HiddenFor(model => model[0].Col9, new { @id = "hf_title" })
        @Html.HiddenFor(model => model[0].Col10, new { @id = "hf_tab_name" })
        @Html.HiddenFor(model => model[0].Col11, new { @id = "hf_where" })
        @Html.HiddenFor(model => model[0].Col12, new { @id = "hf_type" })
        @Html.HiddenFor(model => model[0].Col13, new { @id = "hf_btn_text" })
        @Html.HiddenFor(model => model[0].Col14, new { @id = "hf_mid" })
        @Html.HiddenFor(model => model[0].Col15, new { @id = "hf_m_id" })
        @Html.HiddenFor(model => model[0].Col16, new { @id = "hf_vch_num" })
        @Html.HiddenFor(model => model[0].Col100, new { @id = "hf_savenew" })
        @Html.HiddenFor(model => model[0].Col121, new { @id = "Update" })
        @Html.HiddenFor(model => model[0].Col122, new { @id = "Save" })
        @Html.HiddenFor(model => model[0].Col123, new { @id = "savenew" })
        <div class="clearfix"></div>
        <div class="row">
            <div class="col-md-12 col-sm-12 col-xs-12">
                <div class="x_panel">
                    <div class="x_content">
                        <div class="row">
                            <div class='col-sm-4'>
                                <label for="first-name">Asset Major Head <span class="ClientProfileLabelColor">*</span></label>
                                <div class="form-group">
                                    <div class='input-group'>
                                        @Html.DropDownListFor(model => model[0].SelectedItems1, new MultiSelectList(Model[0].TList1, "Value", "Text", Model[0].SelectedItems1), new { @id = "ddl_majaorhead", @class = "sa-select2-single form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-mandatory", @multiple = "multiple", })
                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>

                            <div class='col-sm-4'>
                                <label for="first-name">Asset Minor Head <span class="ClientProfileLabelColor">*</span></label>
                                <div class="form-group">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model[0].Col26, new { @id = "txt_minor_abbrv", @onkeypress = "return checkLength(this, 28,event);", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-mandatory", })
                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>

                            <div class='col-sm-4'>
                                <label for="first-name">Asset Minor Head Abbreviation <span class="ClientProfileLabelColor">*</span></label>
                                <div class="form-group">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model[0].Col17, new { @id = "txt_minor_abbrv", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-mandatory", @onkeypress = "return checkLength(this, 28,event);", })
                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <hr />
                            <h4 style="font-style: italic">Depreciation Rate Per Annum (In Percentage)</h4>
                        </div>

                        <div class="row">
                            <div class='col-sm-3'>
                                <label for="first-name">Companies Act / Custom Rate (in %) <span class="ClientProfileLabelColor">*</span></label>
                                <div class="form-group">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model[0].Col18, new { @id = "txt_companyactrate", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-mandatory Percent", @onchange = "per(this);", @onkeypress = "return checkLength(this, 4,event);", @onkeydown = "return isNumberKey(this);", })
                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                            <div class='col-sm-3'>
                                <label for="first-name">Income Tax Rate (in %) <span class="ClientProfileLabelColor">*</span></label>
                                <div class="form-group">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model[0].Col19, new { @id = "txt_itrate", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-mandatory Percent", @onkeypress = "return checkLength(this, 4,event);", @onchange = "per(this);", @onkeydown = "return isNumberKey(this);" })
                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                            <div class='col-sm-3' runat="server">
                                <label for="first-name">Salvage Value in % <span class="ClientProfileLabelColor">*</span> </label>
                                <div class="form-group">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model[0].Col20, new { @id = "txt_salvagevalue", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-mandatory", @onchange = "per(this);", @onkeypress = "return checkLength(this, 4,event);", @onkeydown = "return isNumberKey(this);" })
                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                            <div class='col-sm-3' runat="server">
                                <label for="first-name">Salvage Value in Absolute Amount <span class="ClientProfileLabelColor">*</span> </label>
                                <div class="form-group">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model[0].Col21, new { @id = "txt_salabsamt", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-mandatory", @onkeypress = "return checkLength(this, 28,event);", @onkeydown = "return isNumberKey(this);" })
                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">


                            <div class='col-sm-3' runat="server">
                                <label for="first-name">Life Of Asset In Years <span class="ClientProfileLabelColor">*</span> </label>
                                <div class="form-group">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model[0].Col23, new { @id = "txt_life", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-mandatory", onkeypress = "return checkLength(this, 3,event);", @onkeydown = "return isNumberKey(this);", @AutoCompleteType = "Disabled" })
                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                            <div class='col-sm-3'>
                                <label for="first-name">Calibration Required <span class="ClientProfileLabelColor">*</span></label>
                                <div class="form-group">
                                    <div class='input-group'>
                                        <div class="clearfix"></div>
                                        <p>
                                            Yes:
                                            @Html.RadioButtonFor(model => model[0].Col22, "Y", new { @id = "rb_calyes", @class = " sa-input radio sa-mandatory", @style = "vertical-align:initial;min-height:0px;margin:0px;padding-top: 0px;" })
                                            No:
                                            @Html.RadioButtonFor(model => model[0].Col22, "N", new { @id = "rb_calno", @class = " sa-input radio sa-mandatory", @style = "vertical-align:initial;min-height:0px;margin:0px;padding-top: 0px;" })
                                        </p>
                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                            <div class='col-md-3'>
                                <label for="first-name">Calculation Method <span class="ClientProfileLabelColor">*</span></label>
                                <div class="form-group">
                                    <div class='input-group'>
                                        <div class="clearfix"></div>
                                        <p>
                                            SLM:
                                            @Html.RadioButtonFor(model => model[0].Col24, "SLM", new { @id = "rb_slm", @class = " sa-input radio sa-mandatory", @style = "vertical-align:initial;min-height:0px;margin:0px;padding-top: 0px;" })
                                            WDV:
                                            @Html.RadioButtonFor(model => model[0].Col24, "WDV", new { @id = "rb_wdv", @class = " sa-input radio sa-mandatory", @style = "vertical-align:initial;min-height:0px;margin:0px;padding-top: 0px;" })
                                        </p>
                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                           
                            <div class='col-md-6 col-sm-6 col-xs-12'>
                                <label for="first-name">Preferable Depreciation Method <span class="ClientProfileLabelColor">*</span></label>
                                <div class="form-group">
                                    <div class='input-group'>
                                        <div class="clearfix"></div>
                                        <p>
                                            Simple:
                                            @Html.RadioButtonFor(model => model[0].Col25, "S", new { @id = "rb_simpledep", @class = " sa-input radio sa-mandatory", @style = "vertical-align:initial;min-height:0px;margin:0px;padding-top: 0px;" })
                                            Double:
                                            @Html.RadioButtonFor(model => model[0].Col25, "D", new { @id = "rb_doubledep", @class = " sa-input radio sa-mandatory", @style = "vertical-align:initial;min-height:0px;margin:0px;padding-top: 0px;" })
                                            Triple:
                                            @Html.RadioButtonFor(model => model[0].Col25, "T", new { @id = "rb_tripledep", @class = " sa-input radio sa-mandatory", @style = "vertical-align:initial;min-height:0px;margin:0px;padding-top: 0px;" })
                                            Continous Process:
                                            @Html.RadioButtonFor(model => model[0].Col25, "C", new { @id = "rb_Contprocess", @class = " sa-input radio sa-mandatory", @style = "vertical-align:initial;min-height:0px;margin:0px;padding-top: 0px;" })
                                        </p>
                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>

                        </div>

                    </div>
                </div>
            </div>
        </div>
    }
    <input type="submit" id="callback1" value="Callback" name="Command" title="callback" style="visibility:hidden" class="btn btn-primary" />
}
<script type="text/javascript">
    //debugger;
    $(document).ready(function () {
        @Html.Raw(ViewBag.scripCall);
        $("[id*=hf_controller]").val('@ViewContext.RouteData.Values["Controller"].ToString()');
        $("[id*=hf_viewname]").val('@Path.GetFileNameWithoutExtension(Server.MapPath(VirtualPath))');
    });




    //function newfun()
    //{
    //    enableForm();
    //    $("[id*=btnsave]").attr("disabled", false);
    //    $("[id*=btnnew]").attr("disabled", true);
    //    $("[id*=btnedit]").attr("disabled", true);
    //}

    function editfun() { var data = show_Foo('Select Entry For Edit', 'EDIT', '1', '@viewName', '@controllerName'); }
    function viewfun() { var data = show_Foo('View Detail', 'VIEW', '0', '@viewName', '@controllerName'); }
    function add2() { var data = show_Foo('Select Category And Module', 'ADD2', '1', '@viewName', '@controllerName'); }

    //function cancelfun()
    //{
    //    $("[id*=btnnew]").attr("disabled", false);
    //    $("[id*=btnedit]").attr("disabled", false);
    //    $("[id*=btnsave]").attr("disabled", true);
    //    $("[id*=btndetail]").attr("disabled", false);
    //    $("[id*=btncancel]").attr("disabled", false);
    //    fillBlanks();
    //    disableForm();
    //}

</script>
<script>
    function per(ctrl) {
        //debugger;
        var txt = ctrl;
        if (txt.value.length > 0) {
            if (!txt.value.endsWith('%')) {
                if (txt.value > 100) {
                    showmsgJS(1, "Percentage cannot greater than 100 ", 2);
                    txt.value = "";
                    return false;
                }
                txt.value = txt.value + "%";
            }
            else {
                if (txt.value.endsWith('%')) {
                    var a = txt.value.split('%')[0];
                    if (a > 100) {
                        showmsgJS(1, "Percentage cannot greater than 100 ", 2);
                        txt.value = "";
                        return false;
                    }
                    txt.value = txt.value
                }
            }
        }
        else { txt.value = "0" + "%" }
    }


</script>

