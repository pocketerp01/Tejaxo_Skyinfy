@using System.Data;
@model IList<skyinfyMVC.Models.Tmodelmain>
@{
    string MyGuid = Model[0].Col15;
    sgenFun sgen = new sgenFun(MyGuid); string clr = "";
    string basestr = "", imgdisplay = "", base64 = "";
    //  ViewBag.Title = "asset_ent";
    Layout = "~/Views/Shared/_MasterPage.cshtml";
    string userCode = sgen.GetCookie(MyGuid, "userCode");
    var viewName = sgen.GetSession(MyGuid, "viewName").ToString();
    var controllerName = sgen.GetSession(MyGuid, "controllerName").ToString();
    string cg_com_name = sgen.GetCookie(MyGuid, "cg_com_name");
    string serverpath = Server.MapPath("~/Uploads/" + cg_com_name.Replace(" ", "") + "/");
    var ispr = false;
    var iscp = false;
    var onclick = "";
    var imgclosedisplay = "";
    #region buttons
    string buttons = "";
    buttons += "<div class='col-md-8'>" +
"        <div class='row'>" +
"            <div class='col-sm-2'>" +
"                <div class='form-group'>" +
"                    <div class='input-group'>" +
"                        <button type='submit' class='btn btn-primary form-control sa-button' " + ViewBag.vnew + " formnovalidate onclick='setTableDatat();' id='btnnew' name='command' value='New' accesskey='N'><u>N</u>ew</button>" +
"                        <span class='input-group-addon formclass'></span>" +
"                    </div>" +
"                </div>" +
"            </div>" +
"            <div class='col-sm-2' > " +
"                <div class='form-group'>" +
"                    <div class='input-group'>" +
"                        <button type='button' class='btn btn-warning form-control sa-button' " + ViewBag.vedit + " id='btnedit' name='command' value='Edit' accesskey='I' onclick='setTableDatat();editfun();'>Ed<u>i</u>t</button>" +
"                        <span class='input-group-addon formclass'></span>" +
"                    </div>" +
"                </div>" +
"            </div>" +
"            <div class='col-sm-2'> " +
"                <div class='form-group'>" +
"                    <div class='input-group'>" +
"                        <button type='submit' class='btn btn-success form-control sa-button' " + ViewBag.vsave + " id='btnsave' name='command' value= '" + Model[0].Col13 + "' onclick='setTableDatat();' accesskey = '" + Model[0].Col121 + "' > " + Html.Raw(Model[0].Col122) + "</button>" +
"                        <span class='input-group-addon formclass'></span>" +
"                    </div>" +
"                </div>" +
"            </div>" +
"            <div class='col-sm-2'>" +
"                <div class='form-group'> " +
"                    <div class='input-group'>" +
"                        <button type='submit' class='btn btn-success form-control sa-button' " + ViewBag.vsavenew + " id='btnsavenew' name='command' onclick='setTableDatat();' value= '" + Model[0].Col100 + "' accesskey ='W'> " + Html.Raw(Model[0].Col123) + "</button>" +
"                        <span class='input-group-addon formclass'></span>" +
"                    </div>" +
"                </div>" +
"            </div>" +
"            <div class='col-sm-2' > " +
"                <div class='form-group'>" +
"                    <div class='input-group'>" +
"                        <button type='button' class='btn btn-info form-control sa-button' id='btndetail' name='command' value='View' accesskey='V' onclick='setTableDatat();viewfun();'><u>V</u>iew</button>" +
"                        <span class='input-group-addon formclass'></span>" +
"                    </div>" +
"                </div>" +
"            </div>" +
"            <div class='col-sm-2'>" +
"                <div class='form-group'>" +
"                    <div class='input-group'>" +
"                        <button type='submit' class='form-control sa-button sa-btncancel' formnovalidate id='btncancel' name='command' onclick='setTableDatat();' value='Cancel' accesskey='C'><u>C</u>ancel</button>" +
"                        <span class='input-group-addon formclass'></span>" +
"                    </div>" +
"                </div>" +
"            </div>" +
"        </div>" +
"    </div>";
    #endregion
}
@using (Html.BeginForm(viewName, controllerName, new { @m_id = EncryptDecrypt.Encrypt(Model[0].Col15), @mid = EncryptDecrypt.Encrypt(Model[0].Col14) }, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="row">
        <div class="col-sm-4">
            <div class="form-group">
                <div class='input-group'>
                    <div class="title_left">
                        <h3>@Model[0].Col9</h3>
                    </div>
                    <span class="input-group-addon formclass"></span>
                </div>
            </div>
        </div>
        @Html.Raw(buttons)
    </div>

    <div class="clearfix"></div>
    {
        @Html.HiddenFor(model => model[0].Col1, new { @id = "hf_clientid" })
        @Html.HiddenFor(model => model[0].Col2, new { @id = "hf_clientunitid" })
        @Html.HiddenFor(model => model[0].Col3, new { @id = "hf_entby" })
        @Html.HiddenFor(model => model[0].Col4, new { @id = "hf_entdate" })
        @Html.HiddenFor(model => model[0].Col5, new { @id = "hf_editby" })
        @Html.HiddenFor(model => model[0].Col6, new { @id = "hf_editdate" })
        @Html.HiddenFor(model => model[0].Col7, new { @id = "hf_recid" })
        @Html.HiddenFor(model => model[0].Col8, new { @id = "hf_url" })
        @Html.HiddenFor(model => model[0].Col9, new { @id = "hf_title" })
        @Html.HiddenFor(model => model[0].Col10, new { @id = "hf_tab_name" })
        @Html.HiddenFor(model => model[0].Col11, new { @id = "hf_where" })
        @Html.HiddenFor(model => model[0].Col12, new { @id = "hf_type" })
        @Html.HiddenFor(model => model[0].Col13, new { @id = "hf_btn_text" })
        @Html.HiddenFor(model => model[0].Col14, new { @id = "hf_mid" })
        @Html.HiddenFor(model => model[0].Col15, new { @id = "hf_m_id" })
        @Html.HiddenFor(model => model[0].Col35, new { @id = "Aera_vch_num" })
        @Html.HiddenFor(model => model[0].Col36, new { @id = "hf_file_entdate" })
        @Html.HiddenFor(model => model[0].Col37, new { @id = "hf_file_date" })
        @Html.HiddenFor(model => model[0].Col38, new { @id = "hf_tab_name" })
        @Html.HiddenFor(model => model[0].Col100, new { @id = "hf_savenew" })
        @Html.HiddenFor(model => model[0].Col121, new { @id = "Update" })
        @Html.HiddenFor(model => model[0].Col122, new { @id = "Save" })
        @Html.HiddenFor(model => model[0].Col123, new { @id = "savenew" })
        <div class="clearfix"></div>

        <div class="row">
            <div class="x_panel">
                <div class="x_content">
                    <div class="row">

                        <div class="row">
                            <div class='col-sm-4'>
                                <label for="first-name">Doc No <span class="ClientProfileLabelColor">*</span></label>
                                <div class="form-group">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model[0].Col16, new { @id = "txt_doc", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-mandatory", @ReadOnly = "true", placeholder = "Doc No." })
                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                            <div class='col-sm-4'>
                                <label for="first-name">Vendor Code</label>
                                <div class="form-group ">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model[0].Col40, new { @id = "p_recid", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", placeholder = "Vendor Code", @ReadOnly = "true" })
                                        <span class="input-group-addon" data-toggle="tooltip" data-placement="top" title="Select Vendor" id="spn_add" onclick="setTableDatat();PARTY(this);"><i class="fa fa-search"></i></span>
                                    </div>
                                </div>
                            </div>
                            <div class='col-sm-4'>
                                <label for="first-name">Vendor Name<span class="ClientProfileLabelColor">*</span></label>
                                <div class="form-group ">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model[0].Col39, new { @id = "txt_partyname", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-mandatory", @Readonly = "ture", placeholder = "Name Of Vendor", @onkeypress = "return false;" })
                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class='col-sm-9'>
                                <label for="first-name">Vendor Address</label>
                                <div class="form-group ">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model[0].Col41, new { @id = "txt_party_add", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", placeholder = "Vendor Address", @ReadOnly = "true" })
                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                            <div class='col-sm-3'>
                                <label for="first-name">Country </label>
                                <div class="form-group ">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model[0].Col42, new { @id = "txt_contry", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", placeholder = "Country", @ReadOnly = "true" })
                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class='col-sm-3'>
                                <label for="first-name">Bill No. </label>
                                <div class="form-group ">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model[0].Col17, new { @id = "txt_b_no", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", placeholder = "Bill No." })
                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                            <div class='col-sm-3'>
                                <label for="first-name">Bill Date </label>
                                <div class="form-group ">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model[0].Col18, new { @id = "txt_bdate", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-date", placeholder = "Bill Date" })
                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>

                            <div class='col-sm-3'>
                                <label for="first-name">Bill Amount </label>
                                <div class="form-group ">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model[0].Col19, new { @id = "txt_bamt", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", placeholder = "Bill Amount", @onkeydown = "return isDecimalKey(this);" })
                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                            <div class='col-sm-3'>
                                <label for="first-name">Valid from Date </label>
                                <div class="form-group ">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model[0].Col18, new { @id = "txt_bdate", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-date" })
                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                            <div class='col-sm-3'>
                                <label for="first-name">Valid upto Date </label>
                                <div class="form-group ">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model[0].Col18, new { @id = "txt_bdate", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-date" })
                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                            <div class='col-sm-9'>
                                <label for="first-name">Remarks </label>
                                <div class="form-group ">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model[0].Col20, new { @id = "txt_rmk", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", placeholder = "Remark" })
                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <hr />
                    </div>
                </div>
            </div>
        </div>
        <style>
            .grid-container {
                display: grid; /* This is a (hacky) way to make the .grid element size to fit its content */
                overflow: auto;
                height: 300px;
                /*width: 600px;*/
            }

            .grid {
                display: flex;
                flex-wrap: nowrap;
            }

            .grid-col {
                width: 100px;
                min-width: 100px;
            }

            .grid-item--header {
                height: 35px;
                min-height: 35px;
                z-index: 1;
                position: sticky;
                position: -webkit-sticky;
                top: 0;
                text-transform: uppercase;
                font-size: 12px;
                /*font-weight: bold;*/
                color: #ECF0F1;
                background: rgba(52,73,94,.94);
            }

            .grid-col--fixed-left {
                position: sticky;
                left: 0;
                z-index: 2;
                background: white;
            }

            .grid-col--fixed-right {
                position: sticky;
                right: 0;
                z-index: 9998;
                background: white;
            }

            .grid-item {
                height: 35px;
                border: 1px solid gray;
                /*color: #999;*/
                border: 1px solid #eee;
                padding-left: 5px;
                border-collapse: collapse;
                font-family: "Helvetica Neue",Helvetica,Arial,sans-serif";
            }

            .grid-container::-webkit-scrollbar-thumb {
                background: #555;
                border: 0px none #ffffff;
                border-radius: 50px;
            }

                .grid-container::-webkit-scrollbar-thumb:hover {
                    background: #ffffff;
                }

                .grid-container::-webkit-scrollbar-thumb:active {
                    background: #555;
                }

            .grid-container::-webkit-scrollbar-track {
                background: #ffffff;
            }

            .grid-container::-webkit-scrollbar-corner {
                background: #ffffff;
            }

            .datepicker.dropdown-menu {
                z-index: 99999 !important
            }

            .bootstrap-datetimepicker-widget.dropdown-menu {
                overflow: visible;
                height: 100%;
            }
            /*.grid-item:hover {
                                background: #4E5066;
                                color: #FFFFFF;
                                border-top: 1px solid #22262e;
                            }*/
        </style>
        if (Model.Count < 1)
        { }
        else
        {
            for (int i = 0; i < Model.Count; i++)
            {
                DataTable dtm = Model[i].dt1;
                <div class="x_panel" style="padding: 3px 15px !important">

                    <div class="x_content">
                        <div class="row">
                            <div class="grid-container">
                                <div class="grid">

                                    @try
                                    {
                                        foreach (DataColumn dc in dtm.Columns)
                                        {
                                            int mlength = 20;
                                            try
                                            {
                                                mlength = dtm.Select("[" + dc.ColumnName + "] = MAX([" + dc.ColumnName + "])")[0][dc.ColumnName].ToString().Length;
                                            }
                                            catch (Exception err) { }
                                            int k = 0;

                                            if (dc.Ordinal == 0)
                                            {
                                                <div class="grid-col grid-col--fixed-left" id="col_@dc.Ordinal" style="width:25px">
                                                    <div class="grid-item grid-item--header">
                                                        <p>@dc.ColumnName.ToString()</p>
                                                    </div>

                                                    @foreach (DataRow dr in dtm.Rows)
                                                    {
                                                        <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)'>
                                                            <input name="command" onclick="sethfval('@k');getitem();" type="button" value="+" style="max-height: 20px;padding-top: 0px;" class="btn btn-info btn-sm" formnovalidate data-toggle="tooltip" title="Add More" />
                                                            <input name="command" onclick="sethfval('@k');" type="submit" value="-" style="max-height: 20px;padding-top: 0px;" class="btn btn-info btn-sm" formnovalidate data-toggle="tooltip" title="Hide" />
                                                            <input type="hidden" value="@dr[dc].ToString()" id="fstr_@dc.Ordinal" />
                                                        </div>
                                                    }
                                                </div>
                                            }

                                            else if (dc.Ordinal == 22)
                                            {
                                                <div class="grid-col" id="col_@dc.Ordinal" style="width:30%;">
                                                    <div class="grid-item grid-item--header">
                                                        <p>@dc.ColumnName.ToString()</p>
                                                    </div>
                                                    @foreach (DataRow dr in dtm.Rows)
                                                    {
                                                        <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)' contenteditable="true">
                                                            @dr[dc].ToString()
                                                        </div>
                                                    }
                                                </div>
                                            }
                                            else if (dc.Ordinal == 21)
                                            {
                                                <div class="grid-col" id="col_@dc.Ordinal" style="width:300px">
                                                    <div class="grid-item grid-item--header">
                                                        <p>@dc.ColumnName.ToString()</p>
                                                    </div>

                                                    @foreach (DataRow dr in dtm.Rows)
                                                    {
                                                        string id = "kcdate_" + dtm.Rows.IndexOf(dr);

                                                        <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)'>
                                                            <div class="row">
                                                                <div id="mtxt" class="col-md-10 input-group">
                                                                    @Html.TextBoxFor(m => m[0].Col51, new { @class = "form-control sa-date-pre", @id, @value = @dr[dc].ToString(), @style = "position:relative;z-index:1000;width: 95%;left:10px;" })
                                                                </div>
                                                            </div>
                                                        </div>
                                                    }
                                                </div>
                                            }


                                            else
                                            {
                                                <div class="grid-col" id="col_@dc.Ordinal" style="width:30%">
                                                    <div class="grid-item grid-item--header">
                                                        <p>@dc.ColumnName.ToString()</p>
                                                    </div>
                                                    @foreach (DataRow dr in dtm.Rows)
                                                    {
                                                        <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)' contenteditable="false">
                                                            @dr[dc].ToString()
                                                        </div>
                                                    }
                                                </div>
                                            }
                                        }
                                    }
                                    catch (Exception err)
                                    {

                                    }
                                </div>
                            </div>
                        </div>
                        <hr />
                        <div class="row">
                            <div class='col-sm-7'>

                                @try
                                {
                                    var plist = Model[0].LTM1.Where(m => m.Col2 == "AMC_doc").ToList();
                                    ispr = plist.Count > 0;
                                    imgdisplay = "none";
                                    imgclosedisplay = "none";

                                    if (ispr)
                                    {
                                        base64 = sgen.imgtobase64(serverpath + plist[0].Col4);
                                        basestr = "data: image/png;base64," + base64;
                                        imgdisplay = "block";
                                    }
                                }
                                catch (Exception err) { imgdisplay = "none"; imgclosedisplay = "none"; }

                                @if (ispr)
                                {
                                    <div class="form-group">
                                        <div class='input-group'>
                                            <label>File Already Attached</label>
                                        </div>
                                    </div>
                                }
                                @if (!ispr)
                                {
                                    <div class="form-group">
                                        <div class='input-group'>
                                            <img id="imgupd1" src="../../images/file-upload-button.png" onclick="imgclick(this);" style="max-width: 120px" />
                                            <input id="upd1" onchange="fileselected(this);" style="visibility: hidden; height: 0; width: 0" multiple="multiple" name="upd1" type="file" />
                                            <span onclick="imgclick(this);" ID="spanupd1">@Model[0].Col32</span>
                                            <span class="input-group-addon formclass"></span>
                                            @Html.HiddenFor(model => model[i].Col32, new { @id = "hf_sp" })
                                        </div>
                                    </div>
                                }
                            </div>
                            <div class='col-sm-5'>
                                <img id="thumbnil1" style="width: 80px; height: 80px; margin-top: 10px; display: @imgdisplay" data-pdf-thumbnail-file="@basestr" src="@basestr" alt="" />
                                <span id="img_close1" style="border: 1px solid white;padding: 3px;cursor:pointer;display:@imgclosedisplay" onclick="removetempfile(this);"><i class="fa fa-close"></i></span>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-4">
                                <table id="filetable" class="table table-striped table-bordered table-hover">
                                    <thead>
                                        <tr>
                                            <th>File Name</th>
                                            <th>File Title</th>
                                            <th colspan="2">Action</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @if (Model[0].LTM1 != null)
                                        {
                                            for (int f = 0; f < Model[0].LTM1.Count; f++)
                                            {
                                                @Html.HiddenFor(model => model[0].LTM1[f].Col1, new { @id = "hf_ltm1" })
                                                @Html.HiddenFor(model => model[0].LTM1[f].Col2, new { @id = "hf_ltm2" })
                                                @Html.HiddenFor(model => model[0].LTM1[f].Col3, new { @id = "hf_ltm3" })
                                                <tr>
                                                    <td>
                                                        <label Width="170px" Style="word-wrap: normal; word-break: break-all;" ID="lbl_filename">@Model[0].LTM1[f].Col1</label>
                                                    </td>
                                                    <td>
                                                        <label Style="word-wrap: break-word" ID="lbl_filetitle">@Model[0].LTM1[f].Col2</label>
                                                    </td>
                                                    <td><a href="@Url.RouteUrl(new { Controller = "Fam", Action = "fdown", value = Model[0].LTM1[f].Col3 })"><i class="fa fa-download"></i></a></td>
                                                    <td><a onclick="fdelete(event,'@Model[0].LTM1[f].Col3');setTableDatat();"><i class="fa fa-close"></i></a></td>
                                                </tr>
                                            }
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>

            }
        }

    }

    <input type="hidden" name="hfrow" id="hfrow" />
    <input type="hidden" name="hftable" id="hftable" />
    <input type="hidden" name="hfrow" id="hfrow" />
    <input type="submit" id="callback1" formnovalidate value="Callback" name="Command" title="callback" style="visibility:hidden" class="btn btn-primary" />
    <input type="submit" id="btn_class" formnovalidate value="Class" name="Command" title="callback" style="visibility:hidden" class="btn btn-primary" />
}


<script type="text/javascript">
    //debugger;
    $(document).ready(function () {
        @Html.Raw(ViewBag.scripCall);
        $("[id*=hf_controller]").val('@ViewContext.RouteData.Values["Controller"].ToString()');
        $("[id*=hf_viewname]").val('@Path.GetFileNameWithoutExtension(Server.MapPath(VirtualPath))');
    });

    function checkrefcode(ctrl) {
        //debugger;
        var obj = { "value": $(ctrl).val() };
        var res = myMethod('@controllerName','@viewName', 'checkrefcode', obj, ctrl);
    }
    function removetempfile(ctrl) {
        //debugger;
        var cnt = ctrl.id.split('e')[1];
        $("#upd" + cnt + "")[0].value = "";
        $("#spanupd" + cnt + "")[0].innerText = "";
        $("#thumbnil" + cnt + "")[0].src = "";
        $("#thumbnil" + cnt + "").hide();
        $(ctrl).hide();
    }





    function editfun() { var data = show_Foo('Select Entry For Edit', 'EDIT', '1', '@viewName', '@controllerName'); }
    function viewfun() { var data = show_Foo('View Detail', 'VIEW', '0', '@viewName', '@controllerName'); }
    function PARTY() { var data = show_Foo('Select Vendor', 'PARTY', '1', '@viewName', '@controllerName'); }





    function setTableDatat() {
        try {
            //debugger;
            datatable = new Array();

            var heads = $("[id*=col_]");
            var rows = $(heads).eq(0).find("[id*=row_]");
            for (var r = 0; r < rows.length; r++) {
                var row = $("[id=row_" + r + "]");
                var arr = new Array();
                for (var h = 0; h < heads.length; h++) {
                    var obj = {};
                    obj[heads[h].children[0].innerText] = row[h].innerText;
                    arr.push(obj);
                }
                datatable.push(arr);
            }
        }
        catch (err) { alert(err); return; }
        $("#hftable").val(JSON.stringify(datatable));
        //PageMethods.settable(datatable);


    }
    function sethfval(val) {

        $("#hfrow").val(val);
        setTableDatat();
    }

    function getitem()                                               /* for  additem or plus minus buttons*/
    {
        //debugger
        var icode = "", chkcode = "", ptype = "";

        ptype = "";
        var acode = $("#p_recid")[0].value;
        if (acode == "") { showmsgJS(1, "Please select Party", 2); return; }    /*popup for first*/
        var heads = $("[id*=col_]");
        var rows = $(heads).eq(0).find("[id*=row_]");
        for (var r = 0; r < rows.length; r++) {

            var row = $("[id=row_" + r + "]");
            chkcode = row[2].innerText.trim();
            if (chkcode != "-" && chkcode!="") {
                icode = icode + chkcode + ",";
            }
        }

        var data = show_Foo('Select Items', 'ITEM', '2', '@viewName', '@controllerName', icode, "");
    }
    //function fileselected(ctrl) {

    //    var files = ctrl.files;
    //    var cnts = files.length;
    //    $(ctrl).parent().parent().find("span").css("color", "blue");
    //    for (var k = 0; k < cnts; k++) {

    //        var file = files[k];
    //        var namelen = file.name.length;
    //        if (namelen > 20) {
    //            $(ctrl).parent().parent().find("span")[0].innerText = "Sorry!! The file name can not be more than 15 Chars";
    //            $(ctrl).parent().parent().find("span").css("color", "red");
    //            return;
    //        }
    //        var ext = file.name.match(/\.(.+)$/)[1];
    //        switch (ext) {
    //            case 'pdf':
    //            case 'jpg':
    //            case 'jpeg':
    //            case 'png':
    //            case 'bmp':
    //                break
    //            default:
    //                $(ctrl).parent().parent().find("span")[0].innerText = "Sorry!! Upload only pdf,,jpg,jpeg,png,gif file";
    //                $(ctrl).parent().parent().find("span").css("color", "red");
    //                return;
    //                break;
    //        }

    //        //var filesize = file.size / 1024 / 1024;
    //        var filesize = file.size / 1024;
    //        if (filesize < 100) {
    //            var filenme = file.name.split('\\');
    //            var lenn = filenme.length;
    //            var namee = filenme[lenn - 1];
    //            if (cnts > 1) {
    //                $(ctrl).parent().parent().find("span")[0].innerText = cnts + " File Selected";
    //            }
    //            else { $(ctrl).parent().parent().find("span")[0].innerText = namee; }
    //        }
    //        else {
    //            $(ctrl).parent().parent().find("span")[0].innerText = 'Sorry!! This file size is:' + filesize + 'Kb Max. Allowed size is 100Kb';
    //            $(ctrl).parent().parent().find("span").css("color", "red");
    //        }
    //    }
    //}

    function fileselected(ctrl) {

        var files = ctrl.files;
        var cnts = files.length;
        $(ctrl).parent().parent().find("span").css("color", "blue");
        for (var k = 0; k < cnts; k++) {

            var file = files[k];
            var namelen = file.name.length;
            if (namelen > 20) {
                $(ctrl).parent().parent().find("span")[0].innerText = "Sorry!! The file name can not be more than 15 Chars";
                $(ctrl).parent().parent().find("span").css("color", "red");
                return;
            }
            var ext = file.name.match(/\.(.+)$/)[1];
            switch (ext) {
                case 'pdf':
                case 'jpg':
                case 'jpeg':
                case 'png':
                case 'bmp':
                    break
                default:
                    $(ctrl).parent().parent().find("span")[0].innerText = "Sorry!! Upload only pdf,,jpg,jpeg,png file";
                    $(ctrl).parent().parent().find("span").css("color", "red");
                    return;
                    break;
            }

            //var filesize = file.size / 1024 / 1024;
            var filesize = file.size / 1024;
            if (filesize < 100) {
                var filenme = file.name.split('\\');
                var lenn = filenme.length;
                var namee = filenme[lenn - 1];
                if (cnts > 1) {
                    $(ctrl).parent().parent().find("span")[0].innerText = cnts + " File Selected";
                }
                else { $(ctrl).parent().parent().find("span")[0].innerText = namee; }
            }
            else {
                $(ctrl).parent().parent().find("span")[0].innerText = 'Sorry!! This file size is:' + filesize + 'Kb Max. Allowed size is 100Kb';
                $(ctrl).parent().parent().find("span").css("color", "red");
            }
        }


        var files = ctrl.files;
        var thmbcnt = ctrl.id.split('d')[1].trim();
        for (var i = 0; i < files.length; i++) {
            var file = files[i];
            var imageType = /image.*/;
            if (!file.type.match(imageType)) {
                //continue;
            }

            var img = document.getElementById("thumbnil" + thmbcnt + "");
            img.file = file;
            var reader = new FileReader();
            reader.onload = (function (aImg) {
                return function (e) {
                    debugger
                    aImg.src = e.target.result;
                    aImg.setAttribute("data-pdf-thumbnail-file", e.target.result);
                    createPDFThumbnails();
                };
            })(img);
            reader.readAsDataURL(file);
            $("#thumbnil" + thmbcnt + "").show();
            $("#img_close" + thmbcnt + "").show();

        }
    }
    function imgclick(ctrl) { $(ctrl).closest('div').find("input[type=file]").click(); }
        function fdelete(evt, id) {
                //prevent the browsers default function
        evt.preventDefault();
        //grab the form and wrap it with jQuery
        var $form = $("form");
         var obj = { "value": id };
        myMethod('@controllerName', '@viewName', "fdelete", obj, null);
        $("#callback1").click();
    }
</script>
<script type="text/javascript">
    var currctrl,currbody;
    $(function () {

        var getSelectedValue = function () {
            var activeRow = $("tr.active");
            var firstColumn = $("td:nth-child(1)", activeRow).text();
            var secondColumn = $("td:nth-child(2)", activeRow).text();
            var entry = firstColumn + " (" + secondColumn + ")";
            return entry;
        }
        $("[id*=SearchTerm]")
            .on("focusout", function (e) {

                window.setTimeout(function () {

                    $(this).parent().find(".suggestions").addClass("hidden");
                }, 100);

            })
            .on("keyup keypress",
                function (e) {
                    var active = $("tr.active", ".suggest-grid");
                    if (e.which === 27) {
                        $(".suggestions").addClass("hidden");
                    } else if (e.which === 40) {
                        if (active.length > 0) {
                            var next = $(active).next();
                            $(active).removeClass("active");
                            $(next).addClass("active");
                        } else {
                            $("tr:first", ".suggest-grid").addClass("active");
                        }
                    } else if (e.which === 38) {
                        if (active.length > 0) {
                            var previous = $(active).prev();
                            $(active).removeClass("active");
                            $(previous).addClass("active");
                        } else {
                            $("tr:last", ".suggest-grid").addClass("active");
                        }
                    } else if (e.which === 13) {
                        e.preventDefault();
                        //debugger
                        //var selectedValue = getSelectedValue();
                        //$(this).val(selectedValue);

                        var activerow = $(currctrl).parent().find("tr.active");
                        var id = $("td:nth-child(1)", activerow).text();
                        var vall = $("td:nth-child(2)", activerow).text();
                        //$(".search-term").val(id);
                        if (vall.trim() != "") {
                            try {
                                $(currctrl).val(id);

                                //$(currctrl).parent().parent().parent().parent().parent().find("[id*=SearchTerm]").val(id);
                                var rowid = $(currctrl)[0].id.split('_')[1];
                                $(currctrl).parent().parent().parent().parent().prev().find("[id*=" + rowid + "]")[0].innerText = vall;
                            }
                            catch (err) { }
                        }
                        $(".suggestions").addClass("hidden");
                        $(currbody).empty();
                        return false;
                    } else {
                        // We have a good value w/ no special keys.
                        var value = $(this).val();
                        if (value === "") {
                            $(".suggestions").addClass("hidden");
                        } else {
                            var uri = '@Url.Action("GetLoc", "Inventory")';
                            var datat = {
                                "searchTerm": value, "pageSize": 10, "pageNum": 1, "icode": 'aaaa'
                            };
                            //$(".suggestions").removeClass("hidden");
                            currctrl = $(this);

                            $(this).parent().find(".suggestions").removeClass("hidden");
                            $.getJSON(uri, datat)
                                .done(function (data) {
                                    var grid = $(currctrl).parent().find(".suggest-grid");
                                    currbody = $("tbody", grid);
                                    $(currbody).empty();
                                    //

                                    for (var a = 0; a < data.Results.length; a++) {
                                        try {
                                            var value = data.Results[a];
                                            var row =
                                                "<td>" + value.text + "</td>" +
                                                "<td>" + value.id.split('!~!-!~!')[0] + "</td>";
                                            $("tbody", grid).append($("<tr></tr>").html(row));
                                            // On mouse click, set the value.

                                            //$("tr", grid)[a].setAttribute("onclick", "RowClick(event);");
                                            $("tr", grid).on("click",
                                                function (e) {
                                                    e.preventDefault();
                                                    // this = the row (tr)
                                                    // Grabs the first column's value.

                                                    //var selectedValue = getSelectedValue();
                                                    var activerow = $(this).eq(0);
                                                    var id = $("td:nth-child(1)", activerow).text();
                                                    var vall = $("td:nth-child(2)", activerow).text();
                                                    //$(".search-term").val(id);
                                                    try {
                                                        $(this).parent().parent().parent().parent().parent().find("[id*=SearchTerm]").val(id);
                                                        var rowid = $(this).parent().parent().parent().parent().parent().parent()[0].id.split('_')[1];
                                                        $(this).parent().parent().parent().parent().parent().parent().parent().prev().find("[id*=" + rowid + "]")[0].innerText = vall;
                                                    }
                                                    catch (err) { }
                                                    //$("[id*=SearchTerm]").eq(0).val(id);
                                                    $(".suggestions").addClass("hidden");
                                                    $(currbody).empty();
                                                });
                                        }
                                        catch (err) { }
                                    }
                                    ///
                                });
                        }
                    }
                });
    });

</script>
