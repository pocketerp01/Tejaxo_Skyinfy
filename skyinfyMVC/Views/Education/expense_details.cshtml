
@using System.Data;
@model IList<skyinfyMVC.Models.Tmodelmain>
@{
    Layout = "~/Views/Shared/_MasterPage.cshtml";
    sgenFun sgen = new sgenFun(Model[0].Col15);
    string userCode = sgen.GetCookie(Model[0].Col15, "userCode");
    var viewName = sgen.GetSession(Model[0].Col15, "viewName").ToString();
    var controllerName = sgen.GetSession(Model[0].Col15, "controllerName").ToString();
 
}

@using (Html.BeginForm(viewName, controllerName, new { @m_id = EncryptDecrypt.Encrypt(Model[0].Col15), @mid = EncryptDecrypt.Encrypt(Model[0].Col14) }, FormMethod.Post, new { enctype = "multipart/form-data" }))
{


    @Html.HiddenFor(model => model[0].Col1, new { @id = "hf_clientid" })
    @Html.HiddenFor(model => model[0].Col2, new { @id = "hf_clientunitid" })
    @Html.HiddenFor(model => model[0].Col3, new { @id = "hf_entby" })
    @Html.HiddenFor(model => model[0].Col4, new { @id = "hf_entdate" })
    @Html.HiddenFor(model => model[0].Col5, new { @id = "hf_vch_num" })
    @Html.HiddenFor(model => model[0].Col6, new { @id = "hf_editdate" })
    @Html.HiddenFor(model => model[0].Col7, new { @id = "hf_recid" })
    @Html.HiddenFor(model => model[0].Col8, new { @id = "hf_url" })
    @Html.HiddenFor(model => model[0].Col9, new { @id = "hf_title" })
    @Html.HiddenFor(model => model[0].Col10, new { @id = "hf_tab_name" })
    @Html.HiddenFor(model => model[0].Col12, new { @id = "hf_type" })
    @Html.HiddenFor(model => model[0].Col13, new { @id = "hf_btn_text" })
    @Html.HiddenFor(model => model[0].Col14, new { @id = "hf_mid" })
    @Html.HiddenFor(model => model[0].Col15, new { @id = "hf_m_id" })
    @Html.HiddenFor(model => model[0].Col22, new { @id = "hf_file_url" })
    @Html.HiddenFor(model => model[0].Col100, new { @id = "hf_savenew" })

    <div class="row">
        <div class="col-sm-4">
            <div class="form-group">
                <div class='input-group'>
                    <div class="title_left">
                        <h3>
                            @Model[0].Col9
                            @Html.HiddenFor(model => model[0].Col9, new { @id = "hf_title" })
                            @Html.HiddenFor(model => model[0].Col10, new { @id = "hf_type" })
                        </h3>
                    </div>

                    <span class="input-group-addon formclass"></span>
                </div>
            </div>
        </div>
        <div class="col-md-8">
            <div class="row">
                <div class="col-sm-2">
                    <div class="form-group">
                        <div class='input-group'>
                            <input type="submit" class="btn btn-primary form-control sa-button" @ViewBag.vnew style="border-radius: 10px!important;" id="btnnew" name="command" value="New" />
                            <span class="input-group-addon formclass"></span>
                        </div>
                    </div>
                </div>
                <div class='col-sm-2'>
                    <div class="form-group">
                        <div class='input-group'>
                            <input type="button" class="btn btn-primary form-control" @ViewBag.vedit style="border-radius: 10px!important;" id="btnedit" onclick="editfun();" name="command" value="Edit" />

                            <span class="input-group-addon formclass"></span>
                        </div>
                    </div>
                </div>
                <div class='col-sm-2'>
                    <div class="form-group">
                        <div class='input-group'>
                            <input type="submit" class="btn btn-primary form-control" @ViewBag.vsave style="border-radius: 10px!important;" id="btnsave" name="command" value=@Model[0].Col13 />
                            @Html.HiddenFor(model => model[0].Col13, new { @id = "hf_btn_text" })

                            <span class="input-group-addon formclass"></span>
                        </div>
                    </div>
                </div>
                <div class='col-sm-2'>
                    <div class="form-group">
                        <div class='input-group'>
                            <input type="button" class="btn btn-primary form-control" style="border-radius: 10px!important;" onclick="viewfun();" id="btndetail" name="command" value="View" />

                            <span class="input-group-addon formclass"></span>
                        </div>
                    </div>
                </div>
                <div class='col-sm-2'>
                    <div class="form-group">
                        <div class='input-group'>
                            <button type="submit" class="sa-btncancel form-control" style="border-radius: 10px!important;" id="btncancel" name="command" value="Cancel">Cancel</button>
                            <span class="input-group-addon formclass"></span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-md-12 col-sm-12 col-xs-12">
        <div class="x_panel">
            <div class="x_content">

                <div class="row">
                    <div class="col-sm-offset-2 col-sm-2 ">
                        <label id="lbl_master" runat="server" for="first-name">
                            Date<span class="ClientProfileLabelColor">*</span>
                        </label>
                        <div class="form-group">
                            <div class='input-group'>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">

                        <div class="form-group">
                            <div class='input-group'>

                                @Html.TextBoxFor(model => model[0].Col16, new { @id = "Txt_date", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-date " })


                                <span class="input-group-addon formclass"></span>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-offset-2 col-sm-2 ">
                        <label id="lbl_master" runat="server" for="first-name">
                            Type Of Expense<span class="ClientProfileLabelColor">*</span>
                        </label>
                        <div class="form-group">
                            <div class='input-group'>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">

                        <div class="form-group">
                            <div class='input-group'>

                                @Html.DropDownListFor(model => model[0].SelectedItems1, new MultiSelectList(Model[0].TList1, "Value", "Text", Model[0].SelectedItems1), new { multiple = "multiple", @id = "ddl_exp", @class = "sa-select2-multiple form-control col-md-12 col-sm-12 col-xs-12 " })



                                <span class="input-group-addon formclass"></span>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-offset-2 col-sm-2 ">
                        <label id="lbl_master" runat="server" for="first-name">
                            Amount<span class="ClientProfileLabelColor">*</span>
                        </label>
                        <div class="form-group">
                            <div class='input-group'>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">

                        <div class="form-group">
                            <div class='input-group'>

                                @Html.TextBoxFor(model => model[0].Col17, new { @id = "Txt_amt", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox ",@MaxLength="8", @onkeypress = "return isNumberKey(event)" })




                                <span class="input-group-addon formclass"></span>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-offset-2 col-sm-2 ">
                        <label id="lbl_master" runat="server" for="first-name">
                            Mode Of Payment<span class="ClientProfileLabelColor">*</span>
                        </label>
                        <div class="form-group">
                            <div class='input-group'>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">

                        <div class="form-group">
                            <div class='input-group'>

                                @Html.DropDownListFor(model => model[0].SelectedItems2, new MultiSelectList(Model[0].TList2, "Value", "Text", Model[0].SelectedItems2), new { multiple = "multiple", @id = "ddl_payment", @class = "sa-select2-multiple form-control col-md-12 col-sm-12 col-xs-12 " })


                                <span class="input-group-addon formclass"></span>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-offset-2 col-sm-2 ">
                        <label id="lbl_master" runat="server" for="first-name">
                            Payment To<span class="ClientProfileLabelColor">*</span>
                        </label>
                        <div class="form-group">
                            <div class='input-group'>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">

                        <div class="form-group">
                            <div class='input-group'>

                                @Html.TextBoxFor(model => model[0].Col18, new { @id = "Txt_paymentto", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox ",@MaxLength="198" })



                                <span class="input-group-addon formclass"></span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-offset-2 col-sm-2 ">
                        <label id="lbl_master" runat="server" for="first-name">
                            Remarks<span class="ClientProfileLabelColor">*</span>
                        </label>
                        <div class="form-group">
                            <div class='input-group'>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">

                        <div class="form-group">
                            <div class='input-group'>

                                @Html.TextAreaFor(model => model[0].Col19, new { @id = "txt_rmk", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox " })




                                <span class="input-group-addon formclass"></span>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-offset-2 col-sm-2 ">
                        <label id="lbl_master" runat="server" for="first-name">
                            Attachment<span class="ClientProfileLabelColor">*</span>
                        </label>
                        <div class="form-group">
                            <div class='input-group'>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">

                        <div class="form-group">
                            <div class='input-group'>

                                <img id="imgupd1" src="../../images/file-upload-button.png" onclick="imgclick(this);" style="max-width: 120px" />
                                <input id="upd1" onchange="fileselected(this);" style="visibility: hidden; height: 0; width: 0" multiple="multiple" name="upd1" type="file" />
                                <span onclick="imgclick(this);" ID="spanupd1">@Model[0].Col20</span>




                                <span class="input-group-addon formclass"></span>
                            </div>
                        </div>
                    </div>
                </div>



            </div>
        </div>
    </div>
    <input type="submit" id="callback1" value="Callback" name="Command" title="callback" style="visibility:hidden" class="btn btn-primary" />
}


<script type="text/javascript">

        $(document).ready(function () {
                   @Html.Raw(ViewBag.scripCall);
                 $("[id*=hf_controller]").val('@ViewContext.RouteData.Values["Controller"].ToString()');
        $("[id*=hf_viewname]").val('@Path.GetFileNameWithoutExtension(Server.MapPath(VirtualPath))');
        });
       // function newfun() {

       //// debugger
       // enableForm();
       // $("[id*=btnsave]").attr("disabled", false);
       // $("[id*=btnnew]").attr("disabled", true);
       // $("[id*=btnedit]").attr("disabled", true);

       // }

        function editfun() {

            var data = show_Foo('Select Entry For Edit', 'EDIT', '1', '@viewName','@controllerName');
        }

        function viewfun() {
        var data = show_Foo('View Detail', 'VIEW', '0', '@viewName','@controllerName');
        }
         function REG() { var data = show_Foo('Select Student', 'REG', '1', '@viewName', '@controllerName'); }

    //    function cancelfun() {
    //    $("[id*=btnnew]").attr("disabled", false);
    //    $("[id*=btnedit]").attr("disabled", false);
    //    $("[id*=btnsave]").attr("disabled", true);
    //    $("[id*=btndetail]").attr("disabled", false);
    //    $("[id*=btncancel]").attr("disabled", false);
    //    fillBlanks();
    //    disableForm();
    //}

    function selectionIndexChange(ctrl) {


        $(parent.document.getElementById('btn_class')).trigger('click');
    }

    function imgclick(ctrl) {

        $(ctrl).closest('div').find("input[type=file]").click();

    }

    function fileselected(ctrl) {

        var files = ctrl.files;
        var cnts = files.length;
        $(ctrl).parent().parent().find("span").css("color", "blue");
        for (var k = 0; k < cnts; k++) {

            var file = files[k];
            var namelen = file.name.length;
            if (namelen > 20) {
                $(ctrl).parent().parent().find("span")[0].innerText = "Sorry!! The file name can not be more than 15 Chars";
                $(ctrl).parent().parent().find("span").css("color", "red");
                return;
            }
            var ext = file.name.match(/\.(.+)$/)[1];
            switch (ext) {
                case 'pdf':
                case 'jpg':
                case 'jpeg':
                case 'png':
                case 'bmp':
                    break
                default:
                    $(ctrl).parent().parent().find("span")[0].innerText = "Sorry!! Upload only pdf,,jpg,jpeg,png file";
                    $(ctrl).parent().parent().find("span").css("color", "red");
                    return;
                    break;
            }

            //var filesize = file.size / 1024 / 1024;
            var filesize = file.size / 1024;
            if (filesize < 100) {
                var filenme = file.name.split('\\');
                var lenn = filenme.length;
                var namee = filenme[lenn - 1];
                if (cnts > 1) {
                    $(ctrl).parent().parent().find("span")[0].innerText = cnts + " File Selected";
                }
                else { $(ctrl).parent().parent().find("span")[0].innerText = namee; }
            }
            else {
                $(ctrl).parent().parent().find("span")[0].innerText = 'Sorry!! This file size is:' + filesize + 'Kb Max. Allowed size is 100Kb';
                $(ctrl).parent().parent().find("span").css("color", "red");
            }
        }

       // debugger
        //var files = ctrl.files;
        //var thmbcnt = ctrl.id.split('d')[1].trim();
        //for (var i = 0; i < files.length; i++) {
        //    var file = files[i];
        //    var imageType = /image.*/;
        //    if (!file.type.match(imageType)) {
        //        continue;
        //    }
        //    var img = document.getElementById("thumbnil" + thmbcnt + "");
        //    img.file = file;
        //    var reader = new FileReader();
        //    reader.onload = (function (aImg) {
        //        return function (e) {
        //            aImg.src = e.target.result;
        //        };
        //    })(img);
        //    reader.readAsDataURL(file);
        //    $("#thumbnil" + thmbcnt + "").show();
        //}
    }



</script>

