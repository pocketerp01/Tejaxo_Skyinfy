@using System.Data;
@model IList<skyinfyMVC.Models.Tmodelmain>
@{
    Layout = "~/Views/Shared/_MasterPage.cshtml";
    sgenFun sgen = new sgenFun(Model[0].Col15);
    string userCode = sgen.GetCookie(Model[0].Col15, "userCode");
    var viewName = sgen.GetSession(Model[0].Col15, "viewName").ToString();
    var controllerName = sgen.GetSession(Model[0].Col15, "controllerName").ToString();
  
    string cond = "";
    string idpre = "";
    bool readonlycontrol = false;
}

@using (Html.BeginForm(viewName, controllerName, new { @m_id = EncryptDecrypt.Encrypt(Model[0].Col15), @mid = EncryptDecrypt.Encrypt(Model[0].Col14) }, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.HiddenFor(model => model[0].Col14, new { @id = "hf_mid" })
    @Html.HiddenFor(model => model[0].Col15, new { @id = "hf_m_id" })


    <div class="row">
        <div class="col-sm-4">
            <div class="form-group">
                <div class='input-group'>
                    <div class="title_left">
                        <h3>
                            @Model[0].Col9
                            @Html.HiddenFor(model => model[0].Col9, new { @id = "hf_title" })
                            @Html.HiddenFor(model => model[0].Col10, new { @id = "hf_type" })
                        </h3>
                    </div>

                    <span class="input-group-addon formclass"></span>
                </div>
            </div>
        </div>
        <div class="col-md-8">
            <div class="row">
                @*<div class="col-sm-2">
                        <div class="form-group">
                            <div class='input-group'>
                                <input type="submit" class="btn btn-primary form-control sa-button" @ViewBag.vnew style="border-radius: 10px!important;" id="btnnew" name="command" value="New" accesskey="N" />
                                <span class="input-group-addon formclass"></span>
                            </div>
                        </div>
                    </div>
                    <div class='col-sm-2'>
                        <div class="form-group">
                            <div class='input-group'>
                                <input type="button" class="btn btn-warning form-control" @ViewBag.vedit style="border-radius: 10px!important;" id="btnedit" onclick="editfun();" accesskey="i" name="command" value="Edit" />

                                <span class="input-group-addon formclass"></span>
                            </div>
                        </div>
                    </div>
                    <div class='col-sm-2'>
                        <div class="form-group">
                            <div class='input-group'>
                                <input type="submit" class="btn btn-success form-control" @ViewBag.vsave style="border-radius: 10px!important;" id="btnsave" accesskey="s" name="command" value=@Model[0].Col13 />
                                @Html.HiddenFor(model => model[0].Col13, new { @id = "hf_btn_text" })

                                <span class="input-group-addon formclass"></span>
                            </div>
                        </div>
                    </div>
                    <div class='col-sm-2'>
                        <div class="form-group">
                            <div class='input-group'>
                                <input type="button" class="btn btn-info form-control" style="border-radius: 10px!important;" onclick="viewfun();" id="btndetail" accesskey="V" name="command" value="View" />

                                <span class="input-group-addon formclass"></span>
                            </div>
                        </div>
                    </div>
                    <div class='col-sm-2'>
                        <div class="form-group">
                            <div class='input-group'>
                                <button type="submit" class="sa-btncancel form-control" style="border-radius: 10px!important;" onclick="cancelfun();" id="btncancel" name="command" value="Cancel" accesskey="C">C<u>a</u>ncel</button>
                                <span class="input-group-addon formclass"></span>
                            </div>
                        </div>
                    </div>*@


                <div class='col-sm-2'>
                    <div class="form-group">
                        <div class='input-group'>
                            <button type="submit" class="btn btn-primary form-control" style="border-radius: 10px!important;" id="btn_submit" name="command" value="Submit">Submit</button>


                            <span class="input-group-addon formclass"></span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="x_panel">
                <div class="x_content">
                    <div class="row">
                        <div class='col-sm-3'>
                            <label for="first-name">Mode of Communication <span class="ClientProfileLabelColor">*</span></label>
                            <div class="form-group has-success">
                                <div class='input-group'>


                                    @Html.DropDownListFor(model => model[0].SelectedItems1, new MultiSelectList(Model[0].TList1, "Value", "Text", Model[0].SelectedItems1), new { multiple = "multiple", @id = "ddl_comm", @class = "sa-select2-multiple form-control col-md-12 col-sm-12 col-xs-12 ", data_placeholder = "Select Class" })


                                    <span class="input-group-addon formclass">
                                        <input type="checkbox" runat="server" id="chk_class" onchange="chk_control(this,'ddl_comm');" class="sa-input checkbox" name="chk_class_name" />
                                    </span>
                                </div>
                            </div>
                        </div>
                        <div class='col-sm-3'>
                            <label for="first-name">Class <span class="ClientProfileLabelColor">*</span></label>
                            <div class="form-group has-success">
                                <div class='input-group'>


                                    @Html.DropDownListFor(model => model[0].SelectedItems2, new MultiSelectList(Model[0].TList2, "Value", "Text", Model[0].SelectedItems2), new { multiple = "multiple", @id = "ddl_class", @class = "sa-select2-multiple form-control col-md-12 col-sm-12 col-xs-12 ", data_placeholder = "Select Class" })


                                    <span class="input-group-addon formclass">
                                        <input type="checkbox" runat="server" id="chk_class" onchange="chk_control(this,'ddl_class');" class="sa-input checkbox" name="chk_class_name" />
                                    </span>
                                </div>
                            </div>
                        </div>

                        <div class='col-sm-3'>
                            <label for="first-name">Section <span class="ClientProfileLabelColor">*</span></label>
                            <div class="form-group has-success">
                                <div class='input-group'>


                                    @Html.DropDownListFor(model => model[0].SelectedItems3, new MultiSelectList(Model[0].TList3, "Value", "Text", Model[0].SelectedItems3), new { multiple = "multiple", @id = "ddl_section", @class = "sa-select2-multiple form-control col-md-12 col-sm-12 col-xs-12 ", data_placeholder = "Select Section" })
                                    <span class="input-group-addon formclass">
                                        <input type="checkbox" runat="server" id="chk_section" onchange="chk_control(this,'ddl_section');" class="sa-input checkbox" name="chk_section_name" />

                                    </span>


                                </div>
                            </div>

                        </div>

                        <div class='col-sm-2'>
                            <label for="first-name"></label>
                            <div class="form-group">
                                <div class='input-group'>
                                    <input type="submit" class="btn btn-primary form-control sa-button" name="command" @ViewBag.vfill value="Fill Data" id="btn_Fill" accesskey="F" />
                                    <span class="input-group-addon formclass"></span>
                                </div>
                            </div>
                        </div>


                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="clearfix"></div>
    <div class="row" id="Table1">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="x_panel" style="padding: 0px 10px !important;margin-bottom:0px !important;background-color:lightgray">
                <div class="x_content">
                    <div class="row">
                        <div class='col-sm-1'>
                            <div class='col-sm-6'>
                                <input type="checkbox" runat="server" class="sa-input checkbox" id="cbSelectAll" checked onclick="CheckUncheckChildNodesForFoo1('#Table1', this);" />
                            </div>
                            <div class='col-sm-6'> <label>S.No.</label> </div>
                        </div>
                        <div class='col-sm-1'><label for="first-name">Class Section </label></div>
                        <div class='col-sm-1'><label for="first-name">Roll Number </label></div>
                        <div class='col-sm-2'><label for="first-name">Student Name</label></div>
                        <div class='col-sm-2'><label for="first-name">Father Name </label></div>
                        <div class='col-sm-1'><label for="first-name">Due Amount </label></div>
                        <div class='col-sm-2'><label for="first-name">Email_Id</label></div>
                        <div class='col-sm-2'><label for="first-name">Contact Number</label></div>

                    </div>


                </div>
            </div>




        </div>

    </div>

    for (int i = 0; i < Model.Count; i++)
    {
        if (Model[i].Col18 != null)
        {

            <div class="row">
                <div class="col-md-12 col-sm-12 col-xs-12">


                    <div class="x_panel" style="padding: 0px 10px !important;margin-bottom:0px !important;">
                        <div class="x_content">
                            <div class="row" id="Table12">
                                <div class='col-sm-1'>
                                    <div class='col-sm-6'>
                                        <div class="form-group">
                                            <div class='input-group'>
                                                @*<input type="checkbox" runat="server" class="sa-input checkbox" id="cbSelectAll" onclick="CheckUncheckChildNodesForFoo2('#Table1', this);" />*@
                                                @Html.CheckBoxFor(model => model[i].Chk1, new { @id = "cbSelect", @class = "sa-input checkbox", @onclick = "CheckUncheckChildNodesForFoo2('#Table12',this.checked, this);" })
                                                <span class="input-group-addon formclass"></span>
                                            </div>
                                        </div>
                                    </div>

                                    <div class='col-sm-6'>
                                        <label for="first-name">@(i + 1)</label>
                                        <div class="form-group has-success">
                                            <div class='input-group'>
                                                <span class="input-group-addon formclass"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                    <div class='col-sm-1'>
                                        <div class="form-group">
                                            <div class='input-group'>
                                                @Html.DisplayFor(model => model[i].Col16, new { @id = "lbl_class", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox" })
                                                @Html.HiddenFor(model => model[i].Col16, new { @id = "lbl_class", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox" })

                                                <span class="input-group-addon formclass"></span>
                                            </div>
                                        </div>
                                    </div>
                               
                                <div class='col-sm-1'>
                                    <div class="form-group">
                                        <div class='input-group'>
                                            <div class=" clearfix"></div>
                                            @Html.DisplayFor(model => model[i].Col17, new { @id = "lbl_roll", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox" })

                                            <span class="input-group-addon formclass"></span>
                                        </div>
                                    </div>
                                </div>


                                <div class='col-sm-2'>
                                    <div class="form-group">
                                        <div class='input-group'>
                                            <div class=" clearfix"></div>
                                            @Html.DisplayFor(model => model[i].Col18, new { @id = "lbl_std", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox" })
                                            @Html.HiddenFor(model => model[i].Col18, new { @id = "lbl_std", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox" })

                                            <span class="input-group-addon formclass"></span>
                                        </div>
                                    </div>
                                </div>

                                <div class='col-sm-2'>
                                    <div class="form-group">
                                        <div class='input-group'>
                                            <div class=" clearfix"></div>
                                            @Html.DisplayFor(model => model[i].Col19, new { @id = "lbl_father", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox" })

                                            <span class="input-group-addon formclass"></span>
                                        </div>
                                    </div>
                                </div>

                                <div class='col-sm-1'>
                                    <div class="form-group">
                                        <div class='input-group'>
                                            <div class=" clearfix"></div>
                                            <p style="margin-left:40px">@Html.DisplayFor(model => model[i].Col23, new { @id = "lbl_mother", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox" })</p>
                                            @Html.HiddenFor(model => model[i].Col23, new { @id = "lbl_mother", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox" })
                                            @Html.HiddenFor(model => model[i].Col20, new { @id = "lbl_mother", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox" })
                                            


                                            <span class="input-group-addon formclass"></span>
                                        </div>
                                    </div>
                                </div>

                                <div class='col-sm-2'>
                                    <div class="form-group">
                                        <div class='input-group'>
                                            <div class=" clearfix"></div>
                                            @Html.DisplayFor(model => model[i].Col21, new { @id = "lbl_Email", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox" })
                                            @Html.HiddenFor(model => model[i].Col21, new { @id = "lbl_Email", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox" })


                                            <span class="input-group-addon formclass"></span>
                                        </div>
                                    </div>
                                </div>

                                <div class='col-sm-2'>
                                    <div class="form-group">
                                        <div class='input-group'>
                                            <div class=" clearfix"></div>
                                            @Html.DisplayFor(model => model[i].Col22, new { @id = "lbl_Contact", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox" })
                                            @Html.HiddenFor(model => model[i].Col22, new { @id = "lbl_Contact", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox" })
                                            @*@Html.HiddenFor(model => model[i].Col23, new { @id = "Due_bal_amt", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox" })*@


                                            <span class="input-group-addon formclass"></span>
                                        </div>
                                    </div>
                                </div>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }

    }
}

<script type="text/javascript">

        $(document).ready(function () {
                   @Html.Raw(ViewBag.scripCall);
                 $("[id*=hf_controller]").val('@ViewContext.RouteData.Values["Controller"].ToString()');
            $("[id*=hf_viewname]").val('@Path.GetFileNameWithoutExtension(Server.MapPath(VirtualPath))');
          
        });
        //function newfun() {

        ////debugger
        //enableForm();
        //$("[id*=btnsave]").attr("disabled", false);
        //$("[id*=btnnew]").attr("disabled", true);
        //$("[id*=btnedit]").attr("disabled", true);

        //}

        function editfun() {

            var data = show_Foo('Select Entry For Edit', 'EDIT', '1', '@viewName','@controllerName');
        }

        function viewfun() {
        var data = show_Foo('View Detail', 'VIEW', '0', '@viewName','@controllerName');
        }


    //    function cancelfun() {
    //    $("[id*=btnnew]").attr("disabled", false);
    //    $("[id*=btnedit]").attr("disabled", false);
    //    $("[id*=btnsave]").attr("disabled", true);
    //    $("[id*=btndetail]").attr("disabled", false);
    //    $("[id*=btncancel]").attr("disabled", false);
    //    fillBlanks();
    //    disableForm();
    //}
                function chk_control(myctrl, ddl) {
                    //debugger
                    if (myctrl.checked) {



                        $("select[id$=" + ddl + "] option").prop("selected", "selected")
                        $("select[id$=" + ddl + "]").trigger("change");


                    }

                    else {

                        $("select[id$=" + ddl + "] option").removeAttr("selected");
                        $("select[id$=" + ddl + "]").trigger("change");

                    }


                }


    function CheckUncheckChildNodesForFoo1(childContainer, checkbox) {
        //debugger;
        var check = $(checkbox)[0].checked;

        var checks = $("[type=checkbox][id=cbSelect]");
        var cnt = checks.length;
        for (var i = 0; i < cnt; i++) {
            var chk = "";
            //chk = $(checks[i]).closest('tr').find("[id*=hd_chk]").val();
            if (check) {

                if (chk == "") { checks.eq(i).prop('checked', true); }
            }
            else {
                if (chk == "") { checks.eq(i).prop('checked', false); }
            }

        }

        if (check) {
            //$("[type=checkbox][id=cbSelect]").prop('checked', true);
            $("[type=checkbox][id=cbSelectAll]").prop('checked', true);
        }
        else {
            //$("[type=checkbox][id=cbSelect]").prop('checked', false);
            $("[type=checkbox][id=cbSelectAll]").prop('checked', false);
        }

    }


    function CheckUncheckChildNodesForFoo2(childContainer, check, ctrl) {
        //debugger

        var checktype = 2;
        if (checktype != 2) {

            $("[type=checkbox][id=cbSelect]").prop('checked', false);
            $(ctrl).prop("checked", check);
            document.getElementsByName(ctrl.name)[0].checked = check;

        }
        else {

            //var seeklimit = '<%= Session["SEEKLIMIT"] %>';
            var checkall = true;
            document.getElementsByName(ctrl.name)[0].checked = check;
            var childChkBoxes = $(childContainer)[0].getElementsByTagName("input");
            var childChkBoxCount = childChkBoxes.length;
            for (var i = 0; i < childChkBoxCount; i++) {
                if ($(childChkBoxes[i]).children.length > 0)
                    checkall = $(childChkBoxes[i])[0].checked;
                else checkall = $(childChkBoxes[i]).checked;
                if (!checkall) break;
            }
            $("[type=checkbox][id=cbSelectAll]").prop('checked', checkall);

        }


    }

</script>