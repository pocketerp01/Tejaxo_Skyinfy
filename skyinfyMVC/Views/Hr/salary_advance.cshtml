@using System.Data;
@model IList<skyinfyMVC.Models.Tmodelmain>
@{  string MyGuid = "";
    MyGuid = Model[0].Col15;
    sgenFun sgen;
    sgen = new sgenFun(MyGuid);
    Layout = "~/Views/Shared/_MasterPage.cshtml";
    var viewName = sgen.GetSession(MyGuid, "viewName").ToString();
    var controllerName = sgen.GetSession(MyGuid, "controllerName").ToString();

}
@using (Html.BeginForm(viewName, controllerName, new { @m_id = EncryptDecrypt.Encrypt(Model[0].Col15), @mid = EncryptDecrypt.Encrypt(Model[0].Col14) }, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="row">
        <div class="col-sm-4">
            <div class="form-group">
                <div class='input-group'>
                    <div class="title_left">
                        <h3>@Model[0].Col9</h3>
                    </div>
                    <span class="input-group-addon formclass"></span>
                </div>
            </div>
        </div>
        <div class="col-md-8">
            <div class="row">
                <div class="col-sm-2">
                    <div class="form-group">
                        <div class='input-group'>
                            <input type="submit" class="btn btn-primary form-control sa-button" @ViewBag.vnew id="btnnew" name="command" value="New" accesskey="N" />
                            <span class="input-group-addon formclass"></span>
                        </div>
                    </div>
                </div>
                <div class='col-sm-2'>
                    <div class="form-group">
                        <div class='input-group'>
                            <input type="button" class="btn btn-primary form-control sa-button" @ViewBag.vedit id="btnedit" name="command" value="Edit" accesskey="E" onclick="editfun();" />
                            <span class="input-group-addon formclass"></span>
                        </div>
                    </div>
                </div>
                <div class='col-sm-2'>
                    <div class="form-group">
                        <div class='input-group'>
                            <input type="submit" class="btn btn-primary form-control sa-button" @ViewBag.vsave id="btnsave" name="command" value=@Model[0].Col13 accesskey="S" />

                            <span class="input-group-addon formclass"></span>
                        </div>
                    </div>
                </div>
                <div class='col-sm-2'>
                    <div class="form-group">
                        <div class='input-group'>
                            <input type="button" class="btn btn-primary form-control sa-button" id="btndetail" name="command" value="View" accesskey="V" onclick="viewfun();" />
                            <span class="input-group-addon formclass"></span>
                        </div>
                    </div>
                </div>
                <div class='col-sm-2'>
                    <div class="form-group">
                        <div class='input-group'>
                            <input type="submit" class="form-control sa-button sa-btncancel" formnovalidate id="btncancel" name="command" value="Cancel" accesskey="C" />
                            <span class="input-group-addon formclass"></span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="clearfix"></div>
    for (int i = 0; i < Model.Count; i++)
    {
        @Html.HiddenFor(model => model[i].Col1, new { @id = "hf_clientid" })
        @Html.HiddenFor(model => model[i].Col2, new { @id = "hf_clientunitid" })
        @Html.HiddenFor(model => model[i].Col3, new { @id = "hf_entby" })
        @Html.HiddenFor(model => model[i].Col4, new { @id = "hf_entdate" })
        @Html.HiddenFor(model => model[i].Col5, new { @id = "hf_editby" })
        @Html.HiddenFor(model => model[i].Col6, new { @id = "hf_editdate" })
        @Html.HiddenFor(model => model[i].Col7, new { @id = "hf_recid" })
        @Html.HiddenFor(model => model[i].Col8, new { @id = "hf_url" })
        @Html.HiddenFor(model => model[i].Col9, new { @id = "hf_title" })
        @Html.HiddenFor(model => model[i].Col10, new { @id = "hf_tab_name" })
        @Html.HiddenFor(model => model[i].Col11, new { @id = "hf_where" })
        @Html.HiddenFor(model => model[i].Col12, new { @id = "hf_type" })
        @Html.HiddenFor(model => model[i].Col13, new { @id = "hf_btn_text" })
        @Html.HiddenFor(model => model[i].Col14, new { @id = "hf_mid" })
        @Html.HiddenFor(model => model[i].Col15, new { @id = "hf_m_id" })
        <div class="clearfix"></div>

        <div class="row">
            <div class="col-md-12 col-sm-12 col-xs-12">
                <div class="x_panel" style="padding: 3px 15px !important">
                    <div class="x_content">

                        <div class="x_content">
                            <div class="row">
                                <div class="col-md-12 col-sm-12 col-xs-12">
                                    <div class="x_panel" style="padding: 3px 15px !important">
                                        <div class="x_title" style="padding: 0px !important; border-bottom: 0px !important" onclick="hidep(this);">
                                            <b>Copy Fixed Component from Other Units</b>
                                            <ul class="nav navbar-right panel_toolbox">
                                                <li><a id="ahide5" class="a_panel"><i class="fa fa-chevron-up"></i></a></li>
                                            </ul>
                                            <div class="clearfix"></div>
                                        </div>
                                        <div class="x_content kc">
                                            <div class="row">
                                                <div class='col-sm-4'>
                                                    <label for="first-name">Select Unit </label>
                                                    <div class="form-group">
                                                        <div class='input-group'>
                                                            @Html.DropDownListFor(model => model[i].SelectedItems1, new MultiSelectList(Model[i].TList1, "Value", "Text", Model[i].SelectedItems1), new { @id = "ddl_units", @class = "sa-select2-single form-control col-md-12 col-sm-12 col-xs-12 sa-textbox ", @multiple = "multiple" })
                                                            <span class="input-group-addon formclass"></span>
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="col-sm-4">
                                                    <label for="first-name"></label>
                                                    <div class="form-group">
                                                        <div class='input-group'>
                                                            <input type="submit" class="btn btn-primary form-control sa-button" causesvalidation="false" name="command" @ViewBag.vfill value="COPYUNIT" id="btn_Fill" accesskey="F" />
                                                            @*<button type="submit" class="btn btn-primary form-control sa-button" causesvalidation="false" runat="server" id="btn_copyhead" onserverclick="btn_copyhead_ServerClick" accesskey="N"><u>C</u>opy Fixed Components</button>*@
                                                            <span class="input-group-addon formclass"></span>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class='col-sm-4'>
                                    <label for="first-name">Doc No. </label>
                                    <div class="form-group">
                                        <div class='input-group'>
                                            @Html.TextBoxFor(model => model[i].Col16, new { @id = "txt_vchnum", @AutoCompleteType = "Disabled", @Readonly = "ture", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-mandatory"})

                                            <span class="input-group-addon formclass"></span>
                                        </div>
                                    </div>
                                </div>
                                <div class='col-sm-4'>
                                    <label for="first-name">Policy Name/Rule </label>
                                    <div class="form-group">
                                        <div class='input-group'>
                                            @Html.TextBoxFor(model => model[i].Col17, new { @id = "txt_policy", @AutoCompleteType = "Disabled",@onkeydown = "return checkLength(this, 20,event);", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-mandatory" })
                                            <span class="input-group-addon formclass"></span>
                                        </div>
                                    </div>
                                </div>
                                <div class='col-sm-4'>
                                    <label for="first-name">Advance Type </label>
                                    <div class="form-group">
                                        <div class='input-group'>
                                            @Html.TextBoxFor(model => model[i].Col18, new { @id = "txt_advtype", @AutoCompleteType = "Disabled", @onkeydown = "return checkLength(this, 20,event);", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-mandatory" })
                                            <span class="input-group-addon formclass"></span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class='col-sm-4'>
                                    <label for="first-name">Advance Eligibility Days From Date Of Joining </label>
                                    <div class="form-group">
                                        <div class='input-group'>
                                            @Html.TextBoxFor(model => model[i].Col19, new { @id = "txt_adv_dys_doj", @AutoCompleteType = "Disabled",  @onkeydown = "return checkLength(this, 20,event);", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-mandatory sa-date" })
                                            <span class="input-group-addon formclass"></span>
                                        </div>
                                    </div>
                                </div>
                                <div class='col-sm-4'>
                                    <label for="first-name">Maximum No Of EMI </label>
                                    <div class="form-group">
                                        <div class='input-group'>
                                            @Html.TextBoxFor(model => model[i].Col20, new { @id = "txt_maxemi", @AutoCompleteType = "Disabled",  @onkeydown = "return checkLength(this, 20,event);", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-mandatory" })
                                            <span class="input-group-addon formclass"></span>
                                        </div>
                                    </div>
                                </div>
                                <div class='col-sm-4'>
                                    <label for="first-name">Rate Of Interest </label>
                                    <div class="form-group">
                                        <div class='input-group'>
                                            @Html.TextBoxFor(model => model[i].Col21, new { @id = "txt_interst", @AutoCompleteType = "Disabled",  @onkeydown = "return checkLength(this, 20,event);", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-mandatory" })
                                            
                                            <span class="input-group-addon formclass"></span>
                                        </div>
                                    </div>
                                </div>

                            </div>
                            <div class="row">
                                <div class='col-sm-4'>
                                    <label for="first-name">Pay Group </label>
                                    <div class="form-group">
                                        <div class='input-group'>
                                            @Html.DropDownListFor(model => model[i].SelectedItems2, new MultiSelectList(Model[i].TList2, "Value", "Text", Model[i].SelectedItems2), new { @id = "ddl_paygrp", @class = "sa-select2-single form-control col-md-12 col-sm-12 col-xs-12 sa-textbox ", @multiple = "multiple" })
                                       
                                            <span class="input-group-addon formclass"></span>
                                        </div>
                                    </div>
                                </div>
                                <div class='col-sm-4'>
                                    <label for="first-name">Pay Component </label>
                                    <div class="form-group">
                                        <div class='input-group'>
                                            @Html.DropDownListFor(model => model[i].SelectedItems3, new MultiSelectList(Model[i].TList3, "Value", "Text", Model[i].SelectedItems3), new { @id = "ddl_paycomponent", @class = "sa-select2-multiple form-control col-md-12 col-sm-12 col-xs-12 sa-textbox ", @multiple = "multiple" })
                                            
                                            <span class="input-group-addon formclass"></span>
                                        </div>
                                    </div>
                                </div>
                                <div class='col-sm-4'>
                                    <label for="first-name">Allow Exception </label>
                                    <div class="form-group">
                                        <div class='input-group'>
                                            @Html.DropDownListFor(model => model[i].SelectedItems4, new MultiSelectList(Model[i].TList4, "Value", "Text", Model[i].SelectedItems4), new { @id = "ddl_exception", @class = "sa-select2-single form-control col-md-12 col-sm-12 col-xs-12 sa-textbox ", @multiple = "multiple" })
                                            @*<select class="form-control select2 col-md-12 col-sm-12 col-xs-12 sa-select2-single" onkeydown="return checkLength(this, 20,event);" id="ddl_exception" clientidmode="Static" runat="server" multiple="true" style="width: 100%; border-radius: 0px;">
                                                <option value="No">No</option>
                                                <option value="Yes">Yes</option>
                                            </select>*@
                                            <span class="input-group-addon formclass"></span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    }
    <input type="submit" id="callback1" formnovalidate value="Callback" name="Command" title="callback" style="visibility:hidden" class="btn btn-primary" />
}
<script type="text/javascript">
    //debugger;
    $(document).ready(function () {
        @Html.Raw(ViewBag.scripCall);
        $("[id*=hf_controller]").val('@ViewContext.RouteData.Values["Controller"].ToString()');
        $("[id*=hf_viewname]").val('@Path.GetFileNameWithoutExtension(Server.MapPath(VirtualPath))');
    });




    //function newfun()
    //{
    //    enableForm();
    //    $("[id*=btnsave]").attr("disabled", false);
    //    $("[id*=btnnew]").attr("disabled", true);
    //    $("[id*=btnedit]").attr("disabled", true);
    //}



    function editfun() { var data = show_Foo('Select Entry For Edit', 'EDIT', '1', '@viewName', '@controllerName'); }
    function viewfun() { var data = show_Foo('View Detail', 'VIEW', '0', '@viewName', '@controllerName'); }


    //function cancelfun()
    //{
    //    $("[id*=btnnew]").attr("disabled", false);
    //    $("[id*=btnedit]").attr("disabled", false);
    //    $("[id*=btnsave]").attr("disabled", true);
    //    $("[id*=btndetail]").attr("disabled", false);
    //    $("[id*=btncancel]").attr("disabled", false);
    //    fillBlanks();
    //    disableForm();
    //}

</script>

<script type="text/javascript">
    $(document).ready(function () {

        if (!isPostBack()) {
            $(".fa-chevron-up").addClass('fa-chevron-down');
            $(".fa-chevron-up").removeClass('fa-chevron-up');
            $('.kc').hide();
        }
        else {
            var kcs = $('.kc');
            for (var l = 0; l < kcs.length; l++) {
                var child = $(".kc")[l].parentElement.children[0].children[1].children[0].children[0].children[0];
                if (child.classList.contains('fa-chevron-up')) {
                    $(".kc")[l].style.display = "none";
                    //child.classList.remove = "fa-chevron-up";
                    //child.classList.add = "fa-chevron-down";
                    $(child).removeClass("fa-chevron-up");
                    $(child).addClass("fa-chevron-down");
                }
            }
        }

        //var ctrl = $("[id*=ddl_duefreq]")[0].value;
        //if (ctrl != "") { $("[id*=div_paymonth]").show(); }
        //else $("[id*=div_paymonth]").hide();
    });
    function hidep(ctrl) {
        var actrl = $(ctrl).find("a[id*=ahide]")[0];
        hide(actrl);

    }
    function hide(ctrl) {

        //$(ctrl).closest("div.x_content").hide();

        if (ctrl.children[0].classList.contains('fa-chevron-up')) {
            $(ctrl.children[0]).removeClass('fa-chevron-up');
            $(ctrl.children[0]).addClass('fa-chevron-down');
            ctrl.closest("div").parentElement.children[1].style.display = 'none';

        }
        else {
            $(ctrl.children[0]).removeClass('fa-chevron-down');
            $(ctrl.children[0]).addClass('fa-chevron-up');
            ctrl.closest("div").parentElement.children[1].style.display = 'block';
        }

    }

</script>

