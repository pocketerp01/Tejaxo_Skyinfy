@using System.Data;
@model IList<skyinfyMVC.Models.Tmodelmain>
@{ 
    string MyGuid = "";
    MyGuid = Model[0].Col15;
    sgenFun sgen;
    sgen = new sgenFun(MyGuid);
    Layout = "~/Views/Shared/_MasterPage.cshtml";
    var viewName = sgen.GetSession(MyGuid, "viewName").ToString();
    var controllerName = sgen.GetSession(MyGuid, "controllerName").ToString();
}
@using (Html.BeginForm(viewName, controllerName, new { @m_id = EncryptDecrypt.Encrypt(Model[0].Col15), @mid = EncryptDecrypt.Encrypt(Model[0].Col14) }, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="row">
        <div class="col-sm-4">
            <div class="form-group">
                <div class='input-group'>
                    <div class="title_left">
                        <h3>@Model[0].Col9</h3>
                    </div>
                    <span class="input-group-addon formclass"></span>
                </div>
            </div>
        </div>
        <div class="col-md-8">
            <div class="row">
                <div class="col-sm-2">
                    <div class="form-group">
                        <div class='input-group'>
                            <input type="submit" class="btn btn-primary form-control sa-button" @ViewBag.vnew id="btnnew" onclick="setTableDatat();" name="command" value="New" accesskey="N" />
                            <span class="input-group-addon formclass"></span>
                        </div>
                    </div>
                </div>
                <div class='col-sm-2'>
                    <div class="form-group">
                        <div class='input-group'>
                            <input type="button" class="btn btn-primary form-control sa-button" @ViewBag.vedit id="btnedit" name="command" value="Edit" accesskey="E" onclick="editfun(); setTableDatat();" />
                            <span class="input-group-addon formclass"></span>
                        </div>
                    </div>
                </div>
                <div class='col-sm-2'>
                    <div class="form-group">
                        <div class='input-group'>
                            <input type="submit" class="btn btn-primary form-control sa-button" @ViewBag.vsave id="btnsave" onclick="setTableDatat();getTot();" name="command" value=@Model[0].Col13 accesskey="S" />

                            <span class="input-group-addon formclass"></span>
                        </div>
                    </div>
                </div>
                <div class='col-sm-2'>
                    <div class="form-group">
                        <div class='input-group'>
                            <input type="button" class="btn btn-primary form-control sa-button" id="btndetail" name="command" value="View" accesskey="V" onclick="viewfun(); setTableDatat();" />
                            <span class="input-group-addon formclass"></span>
                        </div>
                    </div>
                </div>
                <div class='col-sm-2'>
                    <div class="form-group">
                        <div class='input-group'>
                            <input type="submit" class="form-control sa-button sa-btncancel" formnovalidate id="btncancel" name="command" onclick="setTableDatat();" value="Cancel" accesskey="C" />
                            <span class="input-group-addon formclass"></span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="clearfix"></div>
    @Html.HiddenFor(model => model[0].Col1, new { @id = "hf_clientid" })
    @Html.HiddenFor(model => model[0].Col2, new { @id = "hf_clientunitid" })
    @Html.HiddenFor(model => model[0].Col3, new { @id = "hf_entby" })
    @Html.HiddenFor(model => model[0].Col4, new { @id = "hf_entdate" })
    @Html.HiddenFor(model => model[0].Col5, new { @id = "hf_editby" })
    @Html.HiddenFor(model => model[0].Col6, new { @id = "hf_editdate" })
    @Html.HiddenFor(model => model[0].Col7, new { @id = "hf_recid" })
    @Html.HiddenFor(model => model[0].Col8, new { @id = "hf_url" })
    @Html.HiddenFor(model => model[0].Col9, new { @id = "hf_title" })
    @Html.HiddenFor(model => model[0].Col10, new { @id = "hf_tab_name" })
    @Html.HiddenFor(model => model[0].Col11, new { @id = "hf_where" })
    @Html.HiddenFor(model => model[0].Col12, new { @id = "hf_type" })
    @Html.HiddenFor(model => model[0].Col13, new { @id = "hf_btn_text" })
    @Html.HiddenFor(model => model[0].Col14, new { @id = "hf_mid" })
    @Html.HiddenFor(model => model[0].Col15, new { @id = "hf_m_id" })
    @Html.HiddenFor(model => model[0].Col16, new { @id = "hf_vch_num" })
    @Html.HiddenFor(model => model[0].Col25, new { @id = "hdemp_id" })
    <div class="clearfix"></div>
    <div class="x_panel">
        <div class="x_content">
            <div class="row">
                <div class='col-sm-3'>
                    <label for="first-name">Employee Name </label>
                    <div class="form-group">
                        <div class='input-group'>
                            @Html.TextBoxFor(model => model[0].Col17, new { @id = "txt_emp", @Readonly = "ture", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-mandatory" })
                            <span class="input-group-addon" data-toggle="tooltip" data-placement="top" clientidmode="static" id="emp_det" onclick="GETEMP(this);"><i class="fa fa-search"></i></span>
                        </div>
                    </div>
                </div>
                <div class='col-sm-3'>
                    <label for="first-name">DOJ</label>
                    <div class="form-group">
                        <div class='input-group'>
                            @Html.TextBoxFor(model => model[0].Col18, new { @id = "txt_doj", @Readonly = "ture", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox" })
                            <span class="input-group-addon formclass"></span>
                        </div>
                    </div>
                </div>
                <div class='col-sm-3'>
                    <label for="first-name">
                        Department
                        <span class="ClientProfileLabelColor"></span>
                    </label>
                    <div class="form-group">
                        <div class='input-group'>
                            @Html.TextBoxFor(model => model[0].Col26, new { @id = "txt_dpt", @ReadOnly = "true", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox" })

                            <span class="input-group-addon formclass"></span>

                        </div>
                    </div>
                </div>
                <div class='col-sm-3'>
                    <label for="first-name">
                        Designation
                        <span class="ClientProfileLabelColor"></span>
                    </label>
                    <div class="form-group">
                        <div class='input-group'>
                            @Html.TextBoxFor(model => model[0].Col27, new { @id = "txt_desig", @ReadOnly = "true", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox" })

                            <span class="input-group-addon formclass"></span>

                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class='col-sm-3'>
                    <label for="first-name">Monthly Salary</label>
                    <div class="form-group">
                        <div class='input-group'>
                            @Html.TextBoxFor(model => model[0].Col19, new { @id = "txt_sal", @Readonly = "ture", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox" })
                            <span class="input-group-addon formclass"></span>
                        </div>
                    </div>
                </div>
                <div class='col-sm-3'>
                    <label for="first-name">Advanced Amount</label>
                    <div class="form-group">
                        <div class='input-group'>
                            @Html.TextBoxFor(model => model[0].Col20, new { @id = "Txt_Amt", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", onkeypress = "return isNumberKey(event)" })
                            <span class="input-group-addon formclass"></span>
                        </div>
                    </div>
                </div>
                <div class='col-sm-3'>
                    <label for="first-name">Deduction Effective From</label>
                    <div class="form-group">
                        <div class='input-group'>
                            @Html.TextBoxFor(model => model[0].Col21, new { @id = "Txt_eff", @class = " form-control col-md-12 col-sm-12 sa-date col-xs-12 sa-textbox", onkeypress = "return isNumberKey(event)" })
                            <span class="input-group-addon formclass"></span>
                        </div>
                    </div>
                </div>
                <div class='col-sm-3'>
                    <label for="first-name">Deduction End Date</label>
                    <div class="form-group">
                        <div class='input-group'>
                            @Html.TextBoxFor(model => model[0].Col51, new { @id = "txtend", @class = " form-control col-md-12 col-sm-12 sa-date col-xs-12 sa-textbox", onkeypress = "return isNumberKey(event)" })
                            <span class="input-group-addon formclass"></span>
                        </div>
                    </div>
                </div>
                <div class='col-sm-3'>
                    @*<div class="form-group">
                <div class='input-group'>
                    @Html.RadioButtonFor(model => model[0].Col22, "1", new { @id = "rdamt", @class = " sa-input radio", @style = "sa-input radio" })
                    <b>Amount</b>
                    @Html.RadioButtonFor(model => model[0].Col22, "2", new { @id = "rdinst", @class = " sa-input radio", @style = "sa-input radio" })
                    <b title="2.5 Times cost higher than English SMS">Installments</b>
                </div>
            </div>*@
                    Amount
                    <div class="form-group">
                        <div class='input-group'>
                            @Html.TextBoxFor(model => model[0].Col23, new { @id = "txt_count", @MaxLength = "10", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox" })
                            <span class="input-group-addon formclass"></span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class='col-sm-3'>
                    <label for="first-name">Type Of Advance</label>
                    <div class="form-group">
                        <div class='input-group'>
                            @Html.DropDownListFor(model => model[0].SelectedItems1, new MultiSelectList(Model[0].TList1, "Value", "Text", Model[0].SelectedItems1), new { @id = "ddl_adv_type", @class = "sa-select2-single form-control col-md-12 col-sm-12 col-xs-12 sa-textbox ", @multiple = "multiple" })
                            <span class="input-group-addon formclass"></span>
                        </div>
                    </div>
                </div>
                <div class='col-sm-3'>
                    <label for="first-name"></label>
                    <div class="form-group">
                        <div class='input-group'>
                            <input type="submit" class="btn btn-primary form-control sa-button" causesvalidation="false" name="command" @ViewBag.vfill value="Fill Data" id="btn_Fill" accesskey="F" />
                            <span class="input-group-addon formclass"></span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class='col-sm-12'>
                    <label for="first-name">Remark</label>
                    <div class="form-group">
                        <div class='input-group'>
                            @Html.TextBoxFor(model => model[0].Col24, new { @id = "txt_rmk", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox" })
                            <span class="input-group-addon formclass"></span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    @*if (Model.Count < 1)
    { }
    else
    {
        for (int i = 0; i < Model.Count; i++)
        {
            DataTable dtm = Model[i].dt1;
            <div class="col-md-12 col-sm-12 col-xs-12">
                <div class="x_panel" style="padding: 3px 15px !important">

                    <div class="x_content">
                        <div class="row">
                            <div class="grid-container">
                                <div class="grid">

                                    @try
                                    {
                                        foreach (DataColumn dc in dtm.Columns)
                                        {
                                            int mlength = 20;
                                            try
                                            {
                                                mlength = dtm.Select("[" + dc.ColumnName + "] = MAX([" + dc.ColumnName + "])")[0][dc.ColumnName].ToString().Length;
                                            }
                                            catch (Exception err) { }
                                            int k = 0;
                                            if (dc.Ordinal == 0)
                                            {
                                                <div class="grid-col grid-col--fixed-left table-striped" id="col_@dc.Ordinal" style="width:70px;z-index:10;left:0px;position:sticky;">
                                                    <div class="grid-item grid-item--header">
                                                        <p>@dc.ColumnName.ToString()</p>
                                                    </div>

                                                    @foreach (DataRow dr in dtm.Rows)
                                                    {
                                                        <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)' data-sakeys="gloval">
                                                            <input type="hidden" value="@dr[dc].ToString()" id="fstr_@dc.Ordinal" />
                                                            <label>@(k + 1)</label>
                                                        </div>
                                                        k++;
                                                    }
                                                </div>
                                            }
                                            else if (dc.Ordinal == 1)
                                            {
                                                <div class="grid-col grid-col--fixed-left" id="col_@dc.Ordinal" style="width:350px;z-index:10;left:100px">
                                                    <div class="grid-item grid-item--header">
                                                        <p>@dc.ColumnName.ToString()</p>
                                                    </div>
                                                    @foreach (DataRow dr in dtm.Rows)
                                                    {
                                                        <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)' contenteditable="false" data-sakeys="gloval">
                                                            @dr[dc].ToString()
                                                        </div>
                                                    }
                                                </div>
                                            }
                                            else if (dc.Ordinal == 2)
                                            {
                                                <div class="grid-col grid-col--fixed-left" id="col_@dc.Ordinal" style="width:300px;z-index:10;left:100px">
                                                    <div class="grid-item grid-item--header">
                                                        <p>@dc.ColumnName.ToString()</p>
                                                    </div>
                                                    @foreach (DataRow dr in dtm.Rows)
                                                    {
                                                        <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)' contenteditable="true" onkeyup="balAmt();" data-sakeys="gloval">
                                                            @dr[dc].ToString()
                                                            @Html.HiddenFor(model => model[i].Col28, new { @id = "MonthName" })
                                                        </div>
                                                    }
                                                </div>
                                            }
                                            else if (dc.Ordinal == 3)
                                            {
                                                <div class="grid-col grid-col--fixed-left" id="col_@dc.Ordinal" style="width:300px;z-index:10;left:100px">
                                                    <div class="grid-item grid-item--header">
                                                        <p>@dc.ColumnName.ToString()</p>
                                                    </div>
                                                    @foreach (DataRow dr in dtm.Rows)
                                                    {
                                                        <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)' contenteditable="true" data-sakeys="gloval">
                                                            @dr[dc].ToString()
                                                        </div>
                                                    }
                                                </div>
                                            }
                                            else if (dc.Ordinal == 4)
                                            {                                                
                                                <div class="grid-col grid-col--fixed-left" id="col_@dc.Ordinal" style="width:300px;z-index:10;left:100px">
                                                    <div class="grid-item grid-item--header">
                                                        <p>@dc.ColumnName.ToString()</p>
                                                    </div>
                                                    @foreach (DataRow dr in dtm.Rows)
                                                    {
                                                        <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)' contenteditable="true" data-sakeys="gloval">
                                                            <button type="submit" data-toggle="tooltip" data-placement="top" title="Add More" id="aclone" name="command" value="+"><i class="fa fa-plus"></i></button>
                                                        </div>
                                                    }
                                                </div>
                                            }
                                            else
                                            {
                                                <div class="grid-col" id="col_@dc.Ordinal" style="width:@(mlength * 8)px">
                                                    <div class="grid-item grid-item--header">
                                                        <p>@dc.ColumnName.ToString()</p>
                                                    </div>
                                                    @foreach (DataRow dr in dtm.Rows)
                                                    {
                                                        <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)' contenteditable="false" data-sakeys="gloval">
                                                            @dr[dc].ToString()
                                                        </div>
                                                    }
                                                </div>
                                            }
                                        }
                                    }
                                    catch (Exception err) { }

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    }*@

    <input type="hidden" name="hfrow" id="hfrow" />
    <input type="hidden" name="hftable" id="hftable" />
    <input type="submit" id="callback1" value="Callback" onclick="setTableDatat();" formnovalidate name="Command" title="callback" style="visibility:hidden" class="btn btn-primary" />

}
<script type="text/javascript">
          $(document).ready(function () {
        @Html.Raw(ViewBag.scripCall);
        $("[id*=hf_controller]").val('@ViewContext.RouteData.Values["Controller"].ToString()');
          $("[id*=hf_viewname]").val('@Path.GetFileNameWithoutExtension(Server.MapPath(VirtualPath))');
          setTableDatat();
    });
    function calcamt() {
        try {

            var sumamt = 0, sumqtychl = 0, sumqtyin = 0;

            var heads = $("[id*=col_]");
            var rows = $(heads).eq(0).find("[id*=row_]");
            for (var r = 0; r < rows.length; r++) {
                var row = $("[id=row_" + r + "]");
                var qtychl = parseFloat(row[8].innerText);
                var qtyord = parseFloat(row[9].innerText);
                sumqtychl = sumqtychl + qtychl;
                sumqtyin = sumqtyin + qtyord;
            }
            $("#div_qtychl")[0].innerText = sumqtychl.toFixed(2);
            $("#div_qtyin")[0].innerText = sumqtyin.toFixed(2);
        }
        catch (err) { alert(err); return; }
    }
    function getTot() {
        debugger;
        var heads = $("[id*=col_]");
        var rows = $(heads).eq(0).find("[id*=row_]");
        var emis = 0,sumemis = 0, amt = ""; var emitot = 0;
        var totamt = parseFloat($("#Txt_Amt")[0].value);
        for (var r = 0; r < rows.length; r++) {
            var row = $("[id=row_" + r + "]");
            emis = parseFloat(row[2].innerText.trim());
            sumemis += emis;
        }
        //for (var k = 0; k < emis.length; k++) {
        //    emitot = emitot + parseFloat(emis[k].value);
        //}
        if (sumemis != totamt) { showmsgJS(1, "Emi's Total is not equals to Total Advanced Amount", 2); return false; }
        else { return true; }
    }
    function editfun() { var data = show_Foo('Select Entry For Edit', 'EDIT', '1', '@viewName', '@controllerName'); }
    function viewfun() { var data = show_Foo('View Detail', 'VIEW', '0', '@viewName', '@controllerName'); }
    function GETEMP() { var data = show_Foo('List Of Employees', 'EMPDETAIL', '1', '@viewName', '@controllerName'); }
    function setTableDatat() {
        try {
            datatable = new Array();
           var heads = $("[id*=col_]");
            var rows = $(heads).eq(0).find("[id*=row_]");
            for (var r = 0; r < rows.length; r++) {
                var row = $("[id=row_" + r + "]");
                var arr = new Array();
                for (var h = 0; h < heads.length; h++) {
                    var obj = {};
                    var vall = "";
                    if (h == 0) {
                        //vall = $(row[0]).eq(0).find("[id*=fstr]").val().trim();
                        vall = row.eq(0).find("[id*=fstr]").val().trim();
                    }
                    else {
                        vall = row[h].innerText;
                    }
                    if (vall == undefined) {
                        vall = "";
                    }
                    obj[heads[h].children[0].innerText] = vall;
                    arr.push(obj);
                }
                datatable.push(arr);
            }
        }
        catch (err) { alert(err); return; }
        $("#hftable").val(JSON.stringify(datatable));
    }
    function sethfval(val) {
        $("#hfrow").val(val);
        setTableDatat();
    }
    function balAmt() {
        debugger;
        var heads = $("[id*=col_]");
        var rows = $(heads).eq(0).find("[id*=row_]");
        var emis = "", amt = "";        var bal = 0;
        var totamt = parseFloat($("#Txt_Amt")[0].value);
        for (var r = 0; r < rows.length; r++) {
            var row = $("[id=row_" + r + "]");
            emis = parseFloat(row[2].innerText.trim());
            amt = parseFloat(row[3].innerText.trim());
            if (r == 0) {
                if (row[2].innerText == "") parseFloat(row[2].innerText) = 0;
                bal = totamt - parseFloat(row[2].innerText);
                row[3].innerText = bal;
            }
            else {
                if (row[2].innerText == "") parseFloat(row[2].innerText) = 0;
                bal = bal - parseFloat(row[2].innerText);
                row[3].innerText = bal;
            }
        }

    }
    //function balAmt() {
    //    debugger;
    //    var bal = 0;
    //    var emis = $("[id*=Txt_EMI]");
    //    var amt = $("[id*=lbl_Amount]");
    //    var totamt = parseFloat($("#Txt_Amt")[0].value);
    //    for (var k = 0; k < emis.length; k++) {

    //        if (k == 0) {
    //            if (emis[k].value == "") emis[k].value = 0;
    //            bal = totamt - parseFloat(emis[k].value);
    //            amt[k].value = bal;
    //        }
    //        else {
    //            if (emis[k].value == "") emis[k].value = 0;
    //            bal = bal - parseFloat(emis[k].value);
    //            amt[k].value = bal;
    //        }
    //    }
    //}
</script>