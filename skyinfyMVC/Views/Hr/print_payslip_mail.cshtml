@using System.Data;
@model IList<skyinfyMVC.Models.Tmodelmain>
@{
    string MyGuid = "";
    MyGuid = Model[0].Col15;
    sgenFun sgen;
    sgen = new sgenFun(MyGuid);
    string mandatory = "sa-mandatory";
    string userCode = sgen.GetCookie(MyGuid, "userCode");
    //  ViewBag.Title = "PRINT PAYSLIP";
    Layout = "~/Views/Shared/_MasterPage.cshtml";
    var viewName = sgen.GetSession(MyGuid, "viewName").ToString();
    var controllerName = sgen.GetSession(MyGuid, "controllerName").ToString();
}

@using (Html.BeginForm(viewName, controllerName, new { @m_id = EncryptDecrypt.Encrypt(Model[0].Col15), @mid = EncryptDecrypt.Encrypt(Model[0].Col14) }, FormMethod.Post, new { enctype = "multipart/form-data" }))
{

    <div class="row">
        <div class="col-sm-4">
            <div class="form-group">
                <div class='input-group'>
                    <div class="title_left">
                        <h3>@Model[0].Col9</h3>
                        @Html.HiddenFor(model => model[0].Col13, new { @id = "hf_btn_text" })
                    </div>
                    <span class="input-group-addon formclass"></span>
                </div>
            </div>
        </div>
        <div class="col-md-8">
            <div class="row">
                <div class="col-sm-2">
                    <div class="form-group">
                        <div class='input-group'>
                            <input type="submit" class="btn btn-primary form-control sa-button" @ViewBag.vnew id="btnnew" name="command" value="New" accesskey="N" />
                            <span class="input-group-addon formclass"></span>
                        </div>
                    </div>
                </div>
                <div class='col-sm-2'>
                    <div class="form-group">
                        <div class='input-group'>
                            <input type="submit" class="btn btn-primary form-control sa-button" @ViewBag.vprint id="btnprint" name="command" value="Print" accesskey="P" />
                            <span class="input-group-addon formclass"></span>
                        </div>
                    </div>
                </div>
                <div class='col-sm-2'>
                    <div class="form-group">
                        <div class='input-group'>
                            <input type="submit" class="form-control sa-button sa-btncancel" id="btncancel" name="command" value="Cancel" accesskey="C" />
                            <span class="input-group-addon formclass"></span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="clearfix"></div>

    for (int i = 0; i < Model.Count; i++)
    {
        @Html.HiddenFor(model => model[i].Col1, new { @id = "hf_clientid" })
        @Html.HiddenFor(model => model[i].Col2, new { @id = "hf_clientunitid" })
        @Html.HiddenFor(model => model[i].Col3, new { @id = "hf_entby" })
        @Html.HiddenFor(model => model[i].Col4, new { @id = "hf_entdate" })
        @Html.HiddenFor(model => model[i].Col5, new { @id = "hf_editby" })
        @Html.HiddenFor(model => model[i].Col6, new { @id = "hf_editdate" })
        @Html.HiddenFor(model => model[i].Col7, new { @id = "hf_recid" })
        @Html.HiddenFor(model => model[i].Col8, new { @id = "hf_url" })
        @Html.HiddenFor(model => model[i].Col9, new { @id = "hf_title" })
        @Html.HiddenFor(model => model[i].Col10, new { @id = "hf_tab_name" })
        @Html.HiddenFor(model => model[i].Col11, new { @id = "hf_where" })
        @Html.HiddenFor(model => model[i].Col12, new { @id = "hf_type" })
   
        @Html.HiddenFor(model => model[i].Col14, new { @id = "hf_mid" })
        @Html.HiddenFor(model => model[i].Col15, new { @id = "hf_m_id" })
        @Html.HiddenFor(model => model[i].Col16, new { @id = "hf_empname" })     

        <div class="row">
            <div class="col-md-12 col-sm-12 col-xs-12">
                <div class="x_panel">
                    <div class="clearfix"></div>
                    <div class="x_content">

                        <div class="row">
                            @if (Model[0].Col14.Trim() == "9003.2.12")
                            {
                                <div class='col-sm-3'>
                                    <label for="first-name">Select Month</label>
                                    <div class="form-group">
                                        <div class='input-group'>
                                            @Html.DropDownListFor(model => model[i].SelectedItems1, new MultiSelectList(Model[i].TList1, "Value", "Text", Model[i].SelectedItems1), new { @id = "ddl_month", @class = "sa-select2-single form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", multiple = "multiple", placeholder = "Select Month" })
                                            <span class="input-group-addon formclass"></span>
                                        </div>
                                    </div>
                                </div>
                            }
                            <div class='col-sm-3'>
                                <label for="first-name">From Emp Code <span class="ClientProfileLabelColor">*</span></label>
                                <div class="form-group ">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model[0].Col19, new { @id = "txt_fcode", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-mandatory", placeholder = "From Emp Code" })
                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                             
                            <div class='col-sm-6'>
                                <div class="row">
                                    <div class='col-sm-10'>
                                        <label for="first-name">Department <span class="ClientProfileLabelColor">*</span></label>
                                        <div class="form-group has-success">
                                            <div class='input-group'>
                                                @Html.DropDownListFor(model => model[0].SelectedItems3, new MultiSelectList(Model[0].TList3, "Value", "Text", Model[0].SelectedItems3), new { multiple = "multiple", @id = "ddl_dept", @class = "sa-select2-multiple form-control col-md-12 col-sm-12 col-xs-12 sa-mandatory", placeholder = "Choose Department", @MaxLength = "10" })
                                                <span class="input-group-addon formclass"></span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class='col-sm-2'>
                                        <label for="first-name">All </label>
                                        <div class="form-group">
                                            <div class='input-group'>
                                                <input clientidmode="Static" id="chk_dept" runat="server" type="checkbox" class="all sa-input checkbox" onchange="selectall(this);" />
                                                <span class="input-group-addon formclass"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>                            
                        </div>                       
                        <div class="row">
                            <div class='col-sm-6'>
                                <div class="row">
                                    <div class='col-sm-10'>
                                        <label for="first-name">Designation  <span class="ClientProfileLabelColor">*</span></label>
                                        <div class="form-group has-success">
                                            <div class='input-group'>
                                                @Html.DropDownListFor(model => model[0].SelectedItems4, new MultiSelectList(Model[0].TList4, "Value", "Text", Model[0].SelectedItems4), new { multiple = "multiple", @id = "ddl_desig", @class = "sa-select2-multiple form-control col-md-12 col-sm-12 col-xs-12 sa-mandatory", placeholder = "Choose Designation", @MaxLength = "10" })
                                                <span class="input-group-addon formclass"></span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class='col-sm-2'>
                                        <label for="first-name">All </label>
                                        <div class="form-group">
                                            <div class='input-group'>
                                                <input clientidmode="Static" id="chk_desig" runat="server" type="checkbox" class="all sa-input checkbox" onchange="selectall(this);" />
                                                <span class="input-group-addon formclass"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class='col-sm-3'>
                                <label for="first-name">Select Record  <span class="ClientProfileLabelColor">*</span></label>
                                <div class="form-group">
                                    <div class='input-group'>
                                        @Html.DropDownListFor(model => model[i].SelectedItems2, new MultiSelectList(Model[i].TList2, "Value", "Text", Model[i].SelectedItems2), new { @id = "ddl_rcd", @class = "sa-select2-single form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-mandatory", multiple = "multiple", placeholder = "Select Record" })
                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                            <div class='col-sm-3'>
                                <label for="first-name">Select Employee </label>
                                <div class="form-group">
                                    <div class='input-group demo2'>
                                        @Html.TextBoxFor(model => model[i].Col18, new { @id = "txt_emp", @ReadOnly = "true", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", placeholder = "Select Employee" })
                                        <span class="input-group-addon" data-toggle="tooltip" data-placement="top" title="Select Address" id="spn_add" onclick="getemp();"><i class="fa fa-search"></i></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class='col-sm-12'>
                                <label for="first-name"> </label>
                                <div class="form-group">
                                    <div class='input-group'>
                                        @Html.DisplayFor(model => model[i].Col16, new { @id = "txt_empname", @ReadOnly = "true", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", placeholder = "Select Employee" })
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    }
    <input type="submit" id="callback1" formnovalidate value="Callback" name="Command" title="callback" style="visibility:hidden" class="btn btn-primary" />
}
<script type="text/javascript">

    $(document).ready(function () {
          @Html.Raw(ViewBag.scripCall);
        $("[id*=hf_controller]").val('@ViewContext.RouteData.Values["Controller"].ToString()');
        $("[id*=hf_viewname]").val('@Path.GetFileNameWithoutExtension(Server.MapPath(VirtualPath))');
    });
  
    function getemp() {
        //debugger;
        var param1 = "",caseprnt="";
        var fcode = $("#txt_fcode")[0].value.trim()
        var rcd = $("#ddl_rcd")[0].value.trim();
        var dept = $("#ddl_dept").val().join(",");
        var desig = $("#ddl_desig").val().join(",");
        var hf_title = $("#hf_title")[0].value;
        param1 = fcode;
        caseprnt = "EMPIC";
        if (hf_title.toUpperCase() == "PRINT PAY SLIP") {
            var mnt = $("#ddl_month")[0].value.trim();
            param1 = fcode + mnt;
            caseprnt="EMP";
        }
        
        var param2 = rcd + "!~!~!~!~!" + dept + "!~!~!~!~!" + desig;
        if (fcode == "" || rcd == "" || mnt=="") {
            showmsgJS(1, "Please fill all the field", 2);
            return;
        }
        var data = show_Foo('Employees', caseprnt, '2', '@viewName', '@controllerName', param1, param2);
    }

    function selectall(ctrl) {
        //debugger;
        var ddl = "", chk = "";
        chk = ctrl.id;
        if (chk == "chk_dept") ddl = "ddl_dept";
        else if (chk == "chk_desig") ddl = "ddl_desig";

        if ($(".all").is(':checked')) {
            $("#" + ddl + " > option").prop("selected", "selected");
            $("#" + ddl + "").trigger("change");
        } else {
            $("#" + ddl + " > option").removeAttr("selected");
            $("#" + ddl + "").trigger("change");
        }
    }
</script>

<style type="text/css">
    .select2-container--default .select2-selection--multiple .select2-selection__rendered {
        box-sizing: border-box;
        list-style: none;
        margin: 0;
        padding: 0 5px;
        width: 100%;
        max-height: 10rem;
        overflow: auto;
        cursor: pointer;
    }
</style>
