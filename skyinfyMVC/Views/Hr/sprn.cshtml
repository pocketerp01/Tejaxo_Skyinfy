@using System.Data;
@model IList<skyinfyMVC.Models.Tmodelmain>
@{ string MyGuid = "";
    MyGuid = Model[0].Col15;
    sgenFun sgen;
    sgen = new sgenFun(MyGuid);
    Layout = "~/Views/Shared/_MasterPage.cshtml";
    var viewName = sgen.GetSession(MyGuid, "viewName").ToString();
    var controllerName = sgen.GetSession(MyGuid, "controllerName").ToString();

}
@using (Html.BeginForm(viewName, controllerName, new { @m_id = EncryptDecrypt.Encrypt(Model[0].Col15), @mid = EncryptDecrypt.Encrypt(Model[0].Col14) }, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="row">
        <div class="col-sm-4">
            <div class="form-group">
                <div class='input-group'>
                    <div class="title_left">
                        <h3>@Model[0].Col9</h3>
                    </div>
                    <span class="input-group-addon formclass"></span>
                </div>
            </div>
        </div>
        <div class="col-md-8">
            <div class="row">
                <div class="col-sm-2">
                    <div class="form-group">
                        <div class='input-group'>
                            <input type="submit" class="btn btn-primary form-control sa-button" @ViewBag.vnew id="btnnew" onclick="setTableDatat();" name="command" value="New" accesskey="N" />
                            <span class="input-group-addon formclass"></span>
                        </div>
                    </div>
                </div>
                <div class='col-sm-2'>
                    <div class="form-group">
                        <div class='input-group'>
                            <input type="button" class="btn btn-primary form-control sa-button" @ViewBag.vedit id="btnedit" name="command" value="Edit" accesskey="E" onclick="setTableDatat();editfun();" />
                            <span class="input-group-addon formclass"></span>
                        </div>
                    </div>
                </div>
                <div class='col-sm-2'>
                    <div class="form-group">
                        <div class='input-group'>
                            <input type="submit" class="btn btn-primary form-control sa-button" @ViewBag.vsave id="btnsave" name="command" onclick="setTableDatat();" value=@Model[0].Col13 accesskey="S" />

                            <span class="input-group-addon formclass"></span>
                        </div>
                    </div>
                </div>
                <div class='col-sm-2'>
                    <div class="form-group">
                        <div class='input-group'>
                            <input type="button" class="btn btn-primary form-control sa-button" id="btndetail" name="command" value="View" onclick="setTableDatat();viewfun();" accesskey="V" />
                            <span class="input-group-addon formclass"></span>
                        </div>
                    </div>
                </div>
                <div class='col-sm-2'>
                    <div class="form-group">
                        <div class='input-group'>
                            <input type="submit" class="form-control sa-button sa-btncancel" formnovalidate id="btncancel" onclick="setTableDatat();" name="command" value="Cancel" accesskey="C" />
                            <span class="input-group-addon formclass"></span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="clearfix"></div>
    @Html.HiddenFor(model => model[0].Col1, new { @id = "hf_clientid" })
    @Html.HiddenFor(model => model[0].Col2, new { @id = "hf_clientunitid" })
    @Html.HiddenFor(model => model[0].Col3, new { @id = "hf_entby" })
    @Html.HiddenFor(model => model[0].Col4, new { @id = "hf_entdate" })
    @Html.HiddenFor(model => model[0].Col5, new { @id = "hf_editby" })
    @Html.HiddenFor(model => model[0].Col6, new { @id = "hf_editdate" })
    @Html.HiddenFor(model => model[0].Col7, new { @id = "hf_recid" })
    @Html.HiddenFor(model => model[0].Col8, new { @id = "hf_url" })
    @Html.HiddenFor(model => model[0].Col9, new { @id = "hf_title" })
    @Html.HiddenFor(model => model[0].Col10, new { @id = "hf_tab_name" })
    @Html.HiddenFor(model => model[0].Col11, new { @id = "hf_where" })
    @Html.HiddenFor(model => model[0].Col12, new { @id = "hf_type" })
    @Html.HiddenFor(model => model[0].Col13, new { @id = "hf_btn_text" })
    @Html.HiddenFor(model => model[0].Col14, new { @id = "hf_mid" })
    @Html.HiddenFor(model => model[0].Col15, new { @id = "hf_m_id" })
    @Html.HiddenFor(model => model[0].Col16, new { @id = "hf_vch_num" })
    <div class="clearfix"></div>
    <div class="x_panel">
        <div class="x_content">
            <div class="row">
                <div class="x_panel" style="padding: 3px 15px !important">
                    <div class="x_title" style="padding: 0px !important; border-bottom: 0px !important" onclick="hidep(this);">
                        <b>Separation Policy</b>
                        <ul class="nav navbar-right panel_toolbox">
                            <li><a id="ahide1" class="a_panel"><i class="fa fa-chevron-up"></i></a></li>
                        </ul>
                        <div class="clearfix"></div>
                    </div>
                    <div class="x_content bd">
                        <div class="row">
                            <div class="col-sm-4">
                                <label for="first-name">
                                    Allow Employees To Suggest Last Working Day<span class="ClientProfileLabelColor"></span>
                                </label>
                                <div class="form-group">
                                    <div class='input-group'>
                                        @Html.DropDownListFor(model => model[0].SelectedItems1, new MultiSelectList(Model[0].TList1, "Value", "Text", Model[0].SelectedItems1), new { @id = "ddl_wday", @style = "width: 100%;", @class = "sa-select2-single form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @multiple = "multiple" })
                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-4">
                                <label for="first-name">
                                    Allow Backdate Separation<span class="ClientProfileLabelColor"></span>
                                </label>
                                <div class="form-group">
                                    <div class='input-group'>
                                        @Html.DropDownListFor(model => model[0].SelectedItems2, new MultiSelectList(Model[0].TList2, "Value", "Text", Model[0].SelectedItems2), new { @id = "ddl_month", @style = "width: 100%;", @class = "sa-select2-single form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @multiple = "multiple" })
                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-4">
                                <label for="first-name">
                                    Backdate Separation Days<span class="ClientProfileLabelColor"></span>
                                </label>
                                <div class="form-group">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model[0].Col17, new { @id = "txt_sep_days", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox" })
                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-4">
                                <label for="first-name">
                                    Separation Policy Applicable On<span class="ClientProfileLabelColor"></span>
                                </label>
                                <div class="form-group">
                                    <div class='input-group'>
                                        @Html.DropDownListFor(model => model[0].SelectedItems3, new MultiSelectList(Model[0].TList3, "Value", "Text", Model[0].SelectedItems3), new { @id = "ddl_role", @style = "width: 100%;", @class = "sa-select2-single form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @multiple = "multiple" })
                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-4">
                                <label for="first-name">
                                    Policy Based On<span class="ClientProfileLabelColor"></span>
                                </label>
                                <div class="form-group">
                                    <div class='input-group'>
                                        @Html.DropDownListFor(model => model[0].SelectedItems4, new MultiSelectList(Model[0].TList4, "Value", "Text", Model[0].SelectedItems4), new { @id = "ddl_based", @style = "width: 100%;", @class = "sa-select2-single form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @multiple = "multiple" })
                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <hr />
                        <div class="clearfix"></div>
                        <style>

                            .datepicker.dropdown-menu {
                                z-index: 99999 !important
                            }

                            .bootstrap-datetimepicker-widget.dropdown-menu {
                                overflow: visible;
                                height: 100%;
                            }
                        </style>
                        @if (Model.Count < 1)
                        { }
                        else
                        {
                            for (int i = 0; i < Model.Count; i++)
                            {
                                DataTable dtm = Model[i].dt1;
                                <div class="col-md-12 col-sm-12 col-xs-12">
                                    <div class="x_panel" style="padding: 3px 15px !important">
                                        <div class="x_content">
                                            <div class="row">
                                                <div class="grid-container">
                                                    <div class="grid">
                                                        @try
                                                        {
                                                            foreach (DataColumn dc in dtm.Columns)
                                                            {
                                                                int mlength = 20;
                                                                try
                                                                {
                                                                    mlength = dtm.Select("[" + dc.ColumnName + "] = MAX([" + dc.ColumnName + "])")[0][dc.ColumnName].ToString().Length;
                                                                }
                                                                catch (Exception err) { }
                                                                int k = 0;
                                                                if (dc.Ordinal == 0)
                                                                {
                                                                    <div class="grid-col grid-col--fixed-left" id="col_@dc.Ordinal" style="width:70px;z-index:10;left:0px;position:sticky;">
                                                                        <div class="grid-item grid-item--header">
                                                                            <p>@dc.ColumnName.ToString()</p>
                                                                        </div>

                                                                        @foreach (DataRow dr in dtm.Rows)
                                                                        {
                                                                            <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)' data-sakeys="gloval">
                                                                                <input name="command" onclick="sethfval('@k');getitem();" type="button" value="+" style="max-height: 20px;padding-top: 0px;" class="btn btn-info btn-sm" formnovalidate data-toggle="tooltip" title="Add More" />
                                                                                <input name="command" onclick="sethfval('@k');" type="submit" value="-" style="max-height: 20px;padding-top: 0px;" class="btn btn-info btn-sm" formnovalidate data-toggle="tooltip" title="Hide" />
                                                                                <input type="hidden" value="@dr[dc].ToString()" id="fstr_@dc.Ordinal" />
                                                                            </div>
                                                                        }
                                                                    </div>
                                                                }
                                                                else if (dc.Ordinal == 1)
                                                                {
                                                                    <div class="grid-col grid-col--fixed-left" id="col_@dc.Ordinal" style="width:40px">
                                                                        <div class="grid-item grid-item--header">
                                                                            <p>@dc.ColumnName.ToString()</p>
                                                                        </div>
                                                                        @foreach (DataRow dr in dtm.Rows)
                                                                        {
                                                                            <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)' data-sakeys="gloval">
                                                                                <label>@(k + 1)</label>
                                                                            </div>
                                                                            k++;
                                                                        }
                                                                    </div>
                                                                }
                                                                else if (dc.Ordinal == 2)
                                                                {
                                                                    <div class="grid-col grid-col--fixed-left" id="col_@dc.Ordinal" style="width:300px;z-index:10;left:100px">
                                                                        <div class="grid-item grid-item--header">
                                                                            <p>@dc.ColumnName.ToString()</p>
                                                                        </div>
                                                                        @foreach (DataRow dr in dtm.Rows)
                                                                        {
                                                                            <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)' contenteditable="false" data-sakeys="gloval">
                                                                                @dr[dc].ToString()
                                                                            </div>
                                                                        }
                                                                    </div>
                                                                }
                                                                else if (dc.Ordinal == 3)
                                                                {
                                                                    <div class="grid-col grid-col--fixed-left" id="col_@dc.Ordinal" style="width:240px;z-index:10;left:100px">
                                                                        <div class="grid-item grid-item--header">
                                                                            <p>@dc.ColumnName.ToString()</p>
                                                                        </div>
                                                                        @foreach (DataRow dr in dtm.Rows)
                                                                        {
                                                                            <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)' contenteditable="true" data-sakeys="gloval">
                                                                                @dr[dc].ToString()
                                                                            </div>
                                                                        }
                                                                    </div>
                                                                }
                                                                else if (dc.Ordinal == 4)
                                                                {
                                                                    <div class="grid-col" id="col_@dc.Ordinal" style="width:240px;left:100px;position:sticky; z-index: 2;background: white;">
                                                                        <div class="grid-item grid-item--header">
                                                                            <p>@dc.ColumnName.ToString()</p>
                                                                        </div>
                                                                        @foreach (DataRow dr in dtm.Rows)
                                                                        {
                                                                            <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)' contenteditable="true" data-sakeys="gloval">
                                                                                @dr[dc].ToString()
                                                                            </div>
                                                                        }
                                                                    </div>
                                                                }
                                                                else if (dc.Ordinal == 5)
                                                                {
                                                                    <div class="grid-col" id="col_@dc.Ordinal" style="width:200px;left:100px;position:sticky; z-index: 2;background: white;">
                                                                        <div class="grid-item grid-item--header">
                                                                            <p>@dc.ColumnName.ToString()</p>
                                                                        </div>
                                                                        @foreach (DataRow dr in dtm.Rows)
                                                                        {
                                                                            <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)' contenteditable="true" data-sakeys="gloval">
                                                                                @dr[dc].ToString()
                                                                            </div>
                                                                        }
                                                                    </div>
                                                                }
                                                                else
                                                                {
                                                                    <div class="grid-col" id="col_@dc.Ordinal" style="width:@(mlength * 8)px">
                                                                        <div class="grid-item grid-item--header">
                                                                            <p>@dc.ColumnName.ToString()</p>
                                                                        </div>
                                                                        @foreach (DataRow dr in dtm.Rows)
                                                                        {
                                                                            <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)' contenteditable="false" data-sakeys="gloval">
                                                                                @dr[dc].ToString()
                                                                            </div>
                                                                        }
                                                                    </div>
                                                                }
                                                            }
                                                        }
                                                        catch (Exception err)
                                                        {
                                                        }
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                    </div>
                </div>

            </div>
            <div class="row">
                <div class="x_panel" style="padding: 3px 15px !important">
                    <div class="x_title" style="padding: 0px !important; border-bottom: 0px !important" onclick="hidep(this);">
                        <b>Resignation Reason</b>
                        <ul class="nav navbar-right panel_toolbox">
                            <li><a id="ahide1" class="a_panel"><i class="fa fa-chevron-up"></i></a></li>
                        </ul>
                        <div class="clearfix"></div>
                    </div>
                    <div class="x_content kc">
                        <div class="row">
                            <div class="col-sm-5">
                                <label for="first-name">
                                    Reason<span class="ClientProfileLabelColor"></span>
                                </label>
                                <div class="form-group">
                                    <div class='input-group'>
                                        @Html.DropDownListFor(model => model[0].SelectedItems5, new MultiSelectList(Model[0].TList5, "Value", "Text", Model[0].SelectedItems5), new { @id = "ddl_reason", @style = "width: 100%;", @class = "sa-select2-multiple form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @multiple = "multiple" })
                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="x_panel" style="padding: 3px 15px !important">
                    <div class="x_title" style="padding: 0px !important; border-bottom: 0px !important" onclick="hidep(this);">
                        <b>Retirement Policy</b>
                        <ul class="nav navbar-right panel_toolbox">
                            <li><a id="ahide1" class="a_panel"><i class="fa fa-chevron-up"></i></a></li>
                        </ul>
                        <div class="clearfix"></div>
                    </div>
                    <div class="x_content kc">
                        <div class="row">
                            <div class="col-sm-5">
                                <label for="first-name">
                                    Retirement Age<span class="ClientProfileLabelColor"></span>
                                </label>
                                <div class="form-group">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model[0].Col18, new { @id = "txt_rage", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox" })
                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <input type="hidden" name="hfrow" id="hfrow" />
    <input type="hidden" name="hftable" id="hftable" />
    <input type="submit" id="callback1" value="Callback" formnovalidate name="Command" onclick="setTableDatat();" title="callback" style="visibility:hidden" class="btn btn-primary" />
}
<script type="text/javascript">
          $(document).ready(function () {
        @Html.Raw(ViewBag.scripCall);
        $("[id*=hf_controller]").val('@ViewContext.RouteData.Values["Controller"].ToString()');
              $("[id*=hf_viewname]").val('@Path.GetFileNameWithoutExtension(Server.MapPath(VirtualPath))');
              if (!isPostBack()) {
                  $(".fa-chevron-up").addClass('fa-chevron-down');
                  $(".fa-chevron-up").removeClass('fa-chevron-up');
                  $('.kc').hide();
                  $('.bd').show();
              }
              else {
                  var kcs = $('.kc');
                  for (var l = 0; l < kcs.length; l++) {

                      var child = $(".kc")[l].parentElement.children[0].children[1].children[0].children[0].children[0];
                      if (child.classList.contains('fa-chevron-up')) {
                          $(".kc")[l].style.display = "none";
                          $(child).removeClass("fa-chevron-up");
                          $(child).addClass("fa-chevron-down");
                      }
                  }
              }
    });
    function editfun() { var data = show_Foo('Select Entry For Edit', 'EDIT', '1', '@viewName', '@controllerName'); }
    function viewfun() { var data = show_Foo('View Detail', 'VIEW', '0', '@viewName', '@controllerName'); }
    function sethfval(val) { $("#hfrow").val(val); }
    function hidep(ctrl) {
        var actrl = $(ctrl).find("a[id*=ahide]")[0];
        hide(actrl);
    }
    function hide(ctrl) {

        if (ctrl.children[0].classList.contains('fa-chevron-up')) {
            $(ctrl.children[0]).removeClass('fa-chevron-up');
            $(ctrl.children[0]).addClass('fa-chevron-down');
            ctrl.closest("div").parentElement.children[1].style.display = 'none';

        }
        else {
            $(ctrl.children[0]).removeClass('fa-chevron-down');
            $(ctrl.children[0]).addClass('fa-chevron-up');
            ctrl.closest("div").parentElement.children[1].style.display = 'block';
        }

    }
            function setTableDatat() {
        try {
            datatable = new Array();
            var heads = $("[id*=col_]");
            var rows = $(heads).eq(0).find("[id*=row_]");
            for (var r = 0; r < rows.length; r++) {
                var row = $("[id=row_" + r + "]");
                var arr = new Array();
                for (var h = 0; h < heads.length; h++) {
                    var obj = {};
                    var vall = "";
                    vall = row[h].innerText;
                    if (vall == undefined) {
                        vall = "";
                    }
                    obj[heads[h].children[0].innerText] = vall;
                    arr.push(obj);
                }
                datatable.push(arr);
            }
        }
        catch (err) { alert(err); return; }
        $("#hftable").val(JSON.stringify(datatable));
    }
    function sethfval(val) {
        $("#hfrow").val(val);
        setTableDatat();
    }

    function getitem() {
        debugger;
        var ddval = $("#ddl_role")[0].value;
        if (ddval == "" || ddval == undefined) {
            showmsgJS(1, "Please Select Confirmation Policy Applicable On ", 2); return;
        }
        var icode = "", chkcode = "", ptype = "";
        $(".sa-input").attr("onclick", "return false;");
        var heads = $("[id*=col_]");
        var rows = $(heads).eq(0).find("[id*=row_]");
        for (var r = 0; r < rows.length; r++) {
            var row = $("[id=row_" + r + "]");
            chkcode = row.eq(0).find("[id*=fstr]").val().trim();
            if (chkcode != "-" && chkcode != "") {
                icode = icode + chkcode + ",";
            }
        }
        var data = show_Foo('Select Names', 'PARTY', '2', '@viewName', '@controllerName', icode, ddval);
    }
</script>