@using System.Data;
@model IList<skyinfyMVC.Models.Tmodelmain>
@{
    string MyGuid = "";
    MyGuid = Model[0].Col15;
    sgenFun sgen;
    sgen = new sgenFun(MyGuid);
    string mandatory = "sa-mandatory";

    Layout = "~/Views/Shared/_MasterPage.cshtml";
    var viewName = sgen.GetSession(MyGuid, "viewName").ToString();
    var controllerName = sgen.GetSession(MyGuid, "controllerName").ToString();
    string userCode = sgen.GetCookie(MyGuid, "userCode");
    string clientid_mst = sgen.GetCookie(MyGuid, "clientid_mst");
    string unitid_mst = sgen.GetCookie(MyGuid, "unitid_mst");
    var isep = false;
}

@using (Html.BeginForm(viewName, controllerName, new { @m_id = EncryptDecrypt.Encrypt(Model[0].Col15), @mid = EncryptDecrypt.Encrypt(Model[0].Col14) }, FormMethod.Post, new { id = "emp_attendance", enctype = "multipart/form-data" }))
{
    <div class="row">
        <div class="col-sm-4">
            <div class="form-group">
                <div class='input-group'>
                    <div class="title_left">
                        <h3>@Model[0].Col9</h3>
                        @Html.HiddenFor(model => model[0].Col9, new { @id = "hf_title" })
                    </div>
                    <span class="input-group-addon formclass"></span>
                </div>
            </div>
        </div>
        <div class="col-md-8">
            <div class="row">
                <div class="col-sm-2">
                    <div class="form-group">
                        <div class='input-group'>
                            <input type="submit" class="btn btn-primary form-control sa-button" id="btnnew" @ViewBag.vnew name="command" value="New" />
                            <span class="input-group-addon formclass"></span>
                        </div>
                    </div>
                </div>
                <div class='col-sm-2'>
                    <div class="form-group">
                        <div class='input-group'>
                            <input type="button" class="btn btn-primary form-control sa-button" id="btnedit" name="command" value="Edit" @ViewBag.vedit onclick="setTableDatat();editfun();" />
                            <span class="input-group-addon formclass"></span>
                        </div>
                    </div>
                </div>
                <div class='col-sm-2'>
                    <div class="form-group">
                        <div class='input-group'>
                            <input type="submit" class="btn btn-primary form-control sa-button" id="btnsave" @ViewBag.vsave onclick="setTableDatat();" name="command" value=@Model[0].Col13 accesskey="S" />
                            @Html.HiddenFor(model => model[0].Col13, new { @id = "hf_btn_text" })
                            <span class="input-group-addon formclass"></span>
                        </div>
                    </div>
                </div>
                <div class='col-sm-2'>
                    <div class="form-group">
                        <div class='input-group'>
                            <input type="submit" class="btn btn-primary form-control sa-button" id="btnimport" @ViewBag.vimport name="command" value="Import" onclick="setTableDatat();" />
                            <span class="input-group-addon formclass"></span>
                        </div>
                    </div>
                </div>
                <div class='col-sm-2'>
                    <div class="form-group">
                        <div class='input-group'>
                            <input type="submit" class="form-control sa-button sa-btncancel" formnovalidate id="btncancel" onclick="setTableDatat();" name="command" value="Cancel" />
                            <span class="input-group-addon formclass"></span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="clearfix"></div>

    @Html.HiddenFor(model => model[0].Col1, new { @id = "hf_clientid" })
    @Html.HiddenFor(model => model[0].Col2, new { @id = "hf_clientunitid" })
    @Html.HiddenFor(model => model[0].Col3, new { @id = "hf_entby" })
    @Html.HiddenFor(model => model[0].Col4, new { @id = "hf_entdate" })
    @Html.HiddenFor(model => model[0].Col5, new { @id = "hf_editby" })
    @Html.HiddenFor(model => model[0].Col6, new { @id = "hf_editdate" })
    @Html.HiddenFor(model => model[0].Col7, new { @id = "hf_recid" })
    @Html.HiddenFor(model => model[0].Col8, new { @id = "hf_url" })
    @Html.HiddenFor(model => model[0].Col10, new { @id = "hf_tab_name" })
    @Html.HiddenFor(model => model[0].Col11, new { @id = "hf_where" })
    @Html.HiddenFor(model => model[0].Col12, new { @id = "hf_type" })
    @Html.HiddenFor(model => model[0].Col14, new { @id = "hf_mid" })
    @Html.HiddenFor(model => model[0].Col15, new { @id = "hf_m_id" })
    @Html.HiddenFor(model => model[0].Col20, new { @id = "M_LASTDT" })

    <div class="row">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="x_panel">
                <div class="clearfix"></div>
                <div class="x_content">

                    <div class="row">
                        <div class='col-sm-4'>
                            <label for="first-name">Doc No. </label>
                            <div class="form-group">
                                <div class='input-group'>
                                    @Html.TextBoxFor(model => model[0].Col17, new { @id = "txt_vchnum", @ReadOnly = "true", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", placeholder = "Doc No." })
                                    <span class="input-group-addon formclass"></span>
                                </div>
                            </div>
                        </div>
                        <div class='col-sm-4'>
                            <label for="first-name">Select Month <span class="ClientProfileLabelColor">*</span></label>
                            <div class="form-group">
                                <div class='input-group'>
                                    @Html.DropDownListFor(model => model[0].SelectedItems1, new MultiSelectList(Model[0].TList1, "Value", "Text", Model[0].SelectedItems1), new { @id = "ddl_month", @class = "sa-select2-single form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-mandatory", multiple = "multiple", @MaxLength = "20" })
                                    <span class="input-group-addon formclass"></span>
                                </div>
                            </div>
                        </div>
                        @*<div class='col-sm-4'>
                            <label for="first-name">Select Employee Type <span class="ClientProfileLabelColor">*</span></label>
                            <div class="form-group">
                                <div class='input-group demo2'>
                                    @Html.DropDownListFor(model => model[0].SelectedItems2, new MultiSelectList(Model[0].TList2, "Value", "Text", Model[0].SelectedItems2), new { @id = "ddl_emp", @class = "sa-select2-single form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-mandatory", multiple = "multiple", @MaxLength = "20" })
                                    <span class="input-group-addon" data-toggle="tooltip" data-placement="top" title="Select Employee" id="spn_emptype" onclick="selectemp();"><i class="fa fa-search"></i></span>
                                </div>
                            </div>
                        </div>*@
                    </div>
                    <div class="row">
                        <div class='col-sm-12'>
                            @Html.DisplayFor(model => model[0].Col18, new { @id = "lbl_emp" })
                            @Html.HiddenFor(model => model[0].Col18, new { @id = "hf_emp" })
                        </div>
                    </div>
                    <div class="row">
                        <div class='col-sm-4'>
                            <label for="first-name"></label>
                            <div class="form-group">
                                <div class='input-group'>
                                    <label for="first-name">Download Template Here <i class="fa fa-2x fa-hand-o-right" style="margin-right: 10px"></i></label>
                                    @*<a href="@Url.RouteUrl(new { Action = "fdownAtt",new { @ddl_month = Model[0].SelectedItems1.FirstOrDefault(), 
                                        @ddl_emp = Model[0].SelectedItems2.FirstOrDefault()  })">Employee Attendance</a>*@
                                    @if (Model[0].Col74 == "Y")
                                    {
                                        <a id="empTemp" style="cursor:pointer" onclick="setTableDatat();emptemp(event);">Employee Attendance</a>
                                    }
                                    else
                                    {
                                        <a id="empTemp" style="pointer-events:none;cursor:default" onclick="setTableDatat();emptemp(event);">Employee Attendance</a>
                                    }
                                    <span class="input-group-addon formclass"></span>
                                </div>
                            </div>
                        </div>
                        <div class='col-sm-4'>
                            <label for="first-name">Upload Attendance</label>
                            @try
                            {
                                var plist = Model[0].LTM1.Where(m => m.Col2 == "Emp_Attendance").ToList();
                                isep = plist.Count > 0;
                            }
                            catch (Exception err) { }
                            @if (isep)
                            {
                                <div class="form-group">
                                    <div class='input-group'>
                                        <label>File Already Attached</label>
                                    </div>
                                </div>
                            }
                            @if (!isep)
                            {
                                <div class="form-group">
                                    <div class='input-group'>
                                        <img id="imgupd1" src="../../images/file-upload-button.png" onclick="imgclick(this);" style="max-width: 120px" />
                                        <input id="upd1" runat="server" onchange="fileselected(this);" style="visibility: hidden; height: 0; width: 0" multiple="multiple" name="upd1" type="file" />
                                        <span ClientIDMode="Static" onclick="imgclick(this);" ID="spanupd1">@Model[0].Col22</span>
                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            }


                        </div>
                    </div>

                    <hr />
                    <div class="row">
                        <div class='col-sm-12'>
                            <h3>ATTENDANCE FOR THE MONTH OF :- @Html.DisplayFor(model => model[0].Col19, new { @id = "lbl_head" })</h3>
                            @Html.HiddenFor(model => model[0].Col19, new { @id = "hf_head" })
                        </div>
                    </div>
                    <div class="row">
                     
                        @if (Model.Count < 1)
                        { }
                        else
                        {
                            for (int i = 0; i < Model.Count; i++)
                            {
                                DataTable dtm = Model[i].dt1;
                                if (dtm != null)
                                {
                                    <div class="col-md-12 col-sm-12 col-xs-12">
                                        <div class="x_panel" style="padding: 3px 15px !important">

                                            <div class="x_content">
                                                <div class="row">
                                                    <div class="grid-container">
                                                        <div class="grid">

                                                            @foreach (DataColumn dc in dtm.Columns)
                                                            {
                                                                try
                                                                {
                                                                    string haserror = "false", bgclr = "";
                                                                  

                                                                    int mlength = 20;
                                                                    try
                                                                    {
                                                                        mlength = dtm.Select("[" + dc.ColumnName + "] = MAX([" + dc.ColumnName + "])")[0][dc.ColumnName].ToString().Length;
                                                                    }
                                                                    catch (Exception err) { }

                                                                    int collength = dc.ColumnName.ToString().Length;
                                                                    if (collength > mlength) { mlength = collength; }
                                                                    int k = 0;
                                                                    if (dc.Ordinal == 0)
                                                                    {
                                                                        <div class="grid-col grid-col--fixed-left" id="col_@dc.Ordinal" style="width:140px;z-index:10;left:0px;position:sticky;">
                                                                            <div class="grid-item grid-item--header">
                                                                                <p>@dc.ColumnName.ToString()</p>
                                                                            </div>

                                                                            @foreach (DataRow dr in dtm.Rows)
                                                                            {
                                                                                <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)' contenteditable="false">
                                                                                    @if (!dr[dc].ToString().Contains("-"))
                                                                                    {
                                                                                        <label>@(k + 1) - </label>
                                                                                    }
                                                                                    @dr[dc].ToString()
                                                                                </div>
                                                                                k++;
                                                                            }
                                                                        </div>
                                                                    }
                                                                    else if (dc.Ordinal == 4)
                                                                    {
                                                                        <div class="grid-col grid-col--fixed-left" id="col_@dc.Ordinal" style="width:160px;z-index:10;left:140px">
                                                                            <div class="grid-item grid-item--header">
                                                                                <p>@dc.ColumnName.ToString()</p>
                                                                            </div>
                                                                            @foreach (DataRow dr in dtm.Rows)
                                                                            {
                                                                                <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)' data-sakeys="gloval" contenteditable="false">
                                                                                    @dr[dc].ToString()
                                                                                </div>
                                                                            }
                                                                        </div>
                                                                    }
                                                                    else if (dc.Ordinal > 4)
                                                                    {
                                                                        <div class="grid-col" id="col_@dc.Ordinal" style="width:@(mlength * 8)px">
                                                                            <div class="grid-item grid-item--header">
                                                                                <p>@dc.ColumnName.ToString()</p>
                                                                            </div>
                                                                            @foreach (DataRow dr in dtm.Rows)
                                                                            {
                                                                                <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)' data-sakeys="gloval" contenteditable="true">
                                                                                    @dr[dc].ToString()
                                                                                </div>
                                                                            }
                                                                        </div>
                                                                    }
                                                                    else
                                                                    {
                                                                        <div class="grid-col" id="col_@dc.Ordinal" style="width:@(mlength * 8)px">
                                                                            <div class="grid-item grid-item--header">
                                                                                <p>@dc.ColumnName.ToString()</p>
                                                                            </div>
                                                                            @foreach (DataRow dr in dtm.Rows)
                                                                            {
                                                                                <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)' data-sakeys="gloval" contenteditable="false">
                                                                                    @dr[dc].ToString()
                                                                                </div>
                                                                            }
                                                                        </div>
                                                                    }
                                                                }
                                                                catch (Exception ex) { }
                                                            }

                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            }
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
    <input type="hidden" name="hfrow" id="hfrow" />
    <input type="hidden" name="hftable" id="hftable" />
    <input type="submit" id="callback1" value="Callback" name="Command" title="callback" style="visibility:hidden" class="btn btn-primary" />
}

<script type="text/javascript">

    $(document).ready(function () {
          @Html.Raw(ViewBag.scripCall);
        $("[id*=hf_controller]").val('@ViewContext.RouteData.Values["Controller"].ToString()');
        $("[id*=hf_viewname]").val('@Path.GetFileNameWithoutExtension(Server.MapPath(VirtualPath))');
    });

    // EDIT CLICK
    function editfun() { var data = show_Foo('Select Entry For Edit', 'EDIT', '1', '@viewName', '@controllerName'); }

    // VIEW CLICK
    function viewfun() { var data = show_Foo('View Detail Of Employees', 'DETAIL', '0', '@viewName', '@controllerName'); }

    // EMP CLICK
    function selectemp() { var data = show_Foo('Select Employees', 'EMP', '1', '@viewName', '@controllerName'); }

    function fileselected(ctrl) {
        //debugger
        var files = ctrl.files;
        var cnts = files.length;
        $(ctrl).parent().parent().find("span").css("color", "blue");
        for (var k = 0; k < cnts; k++) {

            var file = files[k];
            var namelen = file.name.length;
            if (namelen > 100) {
                $(ctrl).parent().parent().find("span")[0].innerText = "Sorry!! The file name can not be more than 99 Chars";
                $(ctrl).parent().parent().find("span").css("color", "red");
                return;
            }
            var ext = file.name.split('.').pop();
            switch (ext) {
                case 'csv':
                    break
                default:
                    $(ctrl).parent().parent().find("span")[0].innerText = "Sorry!! Upload only csv file";
                    $(ctrl).parent().parent().find("span").css("color", "red");
                    return;
                    break;
            }

            //var filesize = file.size / 1024 / 1024;
            var filesize = file.size / 1024;
            if (filesize < 100) {
                var filenme = file.name.split('\\');
                var lenn = filenme.length;
                var namee = filenme[lenn - 1];
                if (cnts > 1) {
                    $(ctrl).parent().parent().find("span")[0].innerText = cnts + " File Selected";
                }
                else { $(ctrl).parent().parent().find("span")[0].innerText = namee; }
            }
            else {
                $(ctrl).parent().parent().find("span")[0].innerText = 'Sorry!! This file size is:' + filesize + 'Kb Max. Allowed size is 100Kb';
                $(ctrl).parent().parent().find("span").css("color", "red");
            }
        }
    }
    function imgclick(ctrl) {
        $(ctrl).closest('div').find("input[type=file]").click();
    }

    function setTableDatat() {
        try {

            datatable = new Array();

            var heads = $("[id*=col_]");
            var rows = $(heads).eq(0).find("[id*=row_]");
            for (var r = 0; r < rows.length; r++) {
                var row = $("[id=row_" + r + "]");
                var arr = new Array();
                for (var h = 0; h < heads.length; h++) {
                    var obj = {};
                    obj[heads[h].children[0].innerText] = row[h].innerText;
                    arr.push(obj);
                }
                datatable.push(arr);
            }
        }
        catch (err) { alert(err); return; }
        $("#hftable").val(JSON.stringify(datatable));
        //PageMethods.settable(datatable);


    }
    function sethfval(val) {

        $("#hfrow").val(val);
        setTableDatat();
    }

    function emptemp(evt) {
        //debugger;
        evt.preventDefault();
        var $form = $("#emp_attendance");

        $.ajax({
            type: "POST",
            url: "/Hr/SetSession",
            data: $form.serialize() + "&Name=model",
            dataType: "json",
            traditional: true,
            success: function (response) {
                window.location.href = "@Url.RouteUrl(new { Controller = "Hr", Action = "emptemp_lv" , Myguid = MyGuid})";
            },
            error: function (err) {
                window.location.href = "@Url.RouteUrl(new { Controller = "Hr", Action = "emptemp_lv", Myguid = MyGuid })";
            }
        });
    }

</script>
