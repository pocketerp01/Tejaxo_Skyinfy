@using System.Data;
@model IList<skyinfyMVC.Models.Tmodelmain>
@{
    string MyGuid = "";
    MyGuid = Model[0].Col15;
    sgenFun sgen;
    sgen = new sgenFun(MyGuid);
    Layout = "~/Views/Shared/_MasterPage.cshtml";

    var viewName = sgen.GetSession(MyGuid, "viewName").ToString();
    var controllerName = sgen.GetSession(MyGuid, "controllerName").ToString();
    string userCode = sgen.GetCookie(MyGuid, "userCode");
    string clientid_mst = sgen.GetCookie(MyGuid, "clientid_mst");
    string unitid_mst = sgen.GetCookie(MyGuid, "unitid_mst");
}
@using (Html.BeginForm(viewName, controllerName, new { @m_id = EncryptDecrypt.Encrypt(Model[0].Col15), @mid = EncryptDecrypt.Encrypt(Model[0].Col14) }, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="row">
        <div class="col-sm-4">
            <div class="form-group">
                <div class='input-group'>
                    <div class="title_left">
                        <h3>@Model[0].Col9</h3>
                        @Html.HiddenFor(model => model[0].Col9, new { @id = "hf_title" })
                    </div>
                    <span class="input-group-addon formclass"></span>
                </div>
            </div>
        </div>
        <div class="col-sm-8">
            <div class="row">
                <div class="col-sm-2">
                    <div class="form-group">
                        <div class='input-group'>
                            <input type="submit" class="btn btn-primary form-control sa-button" @ViewBag.vnew id="btnnew" name="command" value="New" accesskey="N" />
                            <span class="input-group-addon formclass"></span>
                        </div>
                    </div>
                </div>
                <div class='col-sm-2'>
                    <div class="form-group">
                        <div class='input-group'>
                            <input type="submit" class="btn btn-primary form-control sa-button" @ViewBag.vnext id="btnnext" onclick="setTableDatat();" accesskey="N" name="command" value="Generate" />
                            @Html.HiddenFor(model => model[0].Col13, new { @id = "hf_btn_text" })
                            <span class="input-group-addon formclass"></span>
                        </div>
                    </div>
                </div>
                <div class='col-sm-2'>
                    <div class="form-group">
                        <div class='input-group'>
                            <input type="submit" class="btn btn-primary form-control sa-button" @ViewBag.vcalc id="btncalc" onclick="setTableDatat();" accesskey="C" name="command" value="Calculate" />
                            <span class="input-group-addon formclass"></span>
                        </div>
                    </div>
                </div>
                <div class='col-sm-2'>
                    <div class="form-group">
                        <div class='input-group'>
                            <button type="button" class="btn btn-primary form-control sa-button" onclick="setTableDatat();editfun();" id="btnedit" name="command" value="Edit" accesskey="E">Edit</button>
                            <span class="input-group-addon formclass"></span>
                        </div>
                    </div>
                </div>
                <div class='col-sm-2'>
                    <div class="form-group">
                        <div class='input-group'>
                            <button type="submit" class="form-control sa-button sa-btncancel"  formnovalidate id="btncancel" name="command" value="Cancel" accesskey="C">Cancel</button>
                            <span class="input-group-addon formclass"></span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="clearfix"></div>
    @Html.HiddenFor(model => model[0].Col1, new { @id = "hf_clientid" })
    @Html.HiddenFor(model => model[0].Col2, new { @id = "hf_clientunitid" })
    @Html.HiddenFor(model => model[0].Col3, new { @id = "hf_entby" })
    @Html.HiddenFor(model => model[0].Col4, new { @id = "hf_entdate" })
    @Html.HiddenFor(model => model[0].Col5, new { @id = "hf_editby" })
    @Html.HiddenFor(model => model[0].Col6, new { @id = "hf_editdate" })
    @Html.HiddenFor(model => model[0].Col7, new { @id = "hf_recid" })
    @Html.HiddenFor(model => model[0].Col8, new { @id = "hf_url" })
    @Html.HiddenFor(model => model[0].Col10, new { @id = "hf_tab_name" })
    @Html.HiddenFor(model => model[0].Col11, new { @id = "hf_where" })
    @Html.HiddenFor(model => model[0].Col12, new { @id = "hf_type" })
    @Html.HiddenFor(model => model[0].Col14, new { @id = "hf_mid" })
    @Html.HiddenFor(model => model[0].Col15, new { @id = "hf_m_id" })
    @Html.HiddenFor(model => model[0].Col16, new { @id = "hf_vch_date" })

    <div class="row">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="x_panel">
                <div class="x_content">
                    <div class="row">
                        <div class='col-sm-4'>
                            <label for="first-name">Doc No. </label>
                            <div class="form-group">
                                <div class='input-group'>
                                    @Html.TextBoxFor(model => model[0].Col18, new { @id = "txt_docno", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", placeholder = "Doc No." })
                                    <span class="input-group-addon formclass"></span>
                                </div>
                            </div>
                        </div>
                        <div class='col-sm-4'>
                            <label for="first-name">Select Month <span class="ClientProfileLabelColor">*</span></label>
                            <div class="form-group">
                                <div class='input-group'>
                                    @Html.DropDownListFor(model => model[0].SelectedItems1, new MultiSelectList(Model[0].TList1, "Value", "Text", Model[0].SelectedItems1), new { @id = "ddl_mnth", @class = "sa-select2-single form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-mandatory", @MaxLength = "20", multiple = "multiple", @style = "width:100%" })
                                    <span class="input-group-addon formclass"></span>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-2">
                            <label for="first-name"></label>
                            <div class="form-group">
                                <div class='input-group'>
                                    <input type="submit" class="btn btn-primary form-control sa-button" @ViewBag.vgetdata onclick="setTableDatat();" id="btngetdata" name="command" value="Get Data" accesskey="G" />
                                    <span class="input-group-addon formclass"></span>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-2">
                            <label for="first-name"></label>
                            <div class="form-group">
                                <div class='input-group'>
                                    <input type="submit" class="btn btn-primary form-control sa-button" @ViewBag.vgetdata onclick="setTableDatat();" id="btngetdata" name="command" value="Supp. Salary" accesskey="R" />
                                    <span class="input-group-addon formclass"></span>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-12">
                            <h3>SALARY FOR THE MONTH OF :- @Html.DisplayFor(m => m[0].Col19, new { @id = "lbl_heading", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox" })</h3>
                            @Html.HiddenFor(model => model[0].Col19, new { @id = "hf_heading" })
                        </div>
                    </div>
                    <div class="row">
                        @*<style>
                            .grid-container {
                                display: grid; /* This is a (hacky) way to make the .grid element size to fit its content */
                                overflow: auto;
                                height: 300px;
                                /*width: 600px;*/
                            }

                            .grid {
                                display: flex;
                                flex-wrap: nowrap;
                            }

                            .grid-col {
                                width: 100px;
                                min-width: 100px;
                                z-index: 3;
                            }

                            .grid-item--header {
                                height: 35px;
                                min-height: 35px;
                                z-index: 1;
                                position: sticky;
                                position: -webkit-sticky;
                                top: 0;
                                text-transform: uppercase;
                                font-size: 12px;
                                font-weight: bold;
                                color: #ECF0F1;
                                background: rgba(52,73,94,.94);
                            }

                            .grid-col--fixed-left {
                                position: sticky;
                                left: 0;
                                z-index: 2;
                                background: white;
                            }

                            .grid-col--fixed-right {
                                position: sticky;
                                right: 0;
                                z-index: 9998;
                                background: white;
                            }

                            .grid-item {
                                height: 35px;
                                border: 1px solid gray;
                                /*color: #999;*/
                                border: 1px solid #eee;
                                padding-left: 5px;
                                border-collapse: collapse;
                                font-family: "Helvetica Neue",Helvetica,Arial,sans-serif";
                            }

                            .grid-container::-webkit-scrollbar-thumb {
                                background: #555;
                                border: 0px none #ffffff;
                                border-radius: 50px;
                            }

                                .grid-container::-webkit-scrollbar-thumb:hover {
                                    background: #ffffff;
                                }

                                .grid-container::-webkit-scrollbar-thumb:active {
                                    background: #555;
                                }

                            .grid-container::-webkit-scrollbar-track {
                                background: #ffffff;
                            }

                            .grid-container::-webkit-scrollbar-corner {
                                background: #ffffff;
                            }
                            /*.grid-item:hover {
                                background: #4E5066;
                                color: #FFFFFF;
                                border-top: 1px solid #22262e;
                            }*/
                            .suggestions {
                                border: 1px solid #CCC;
                                background-color: #FFF;
                                /*width: 300px;*/
                                z-index: 10000;
                                top: 30px;
                                left: 15px;
                                width: fit-content;
                            }

                            .suggest-grid tr.active td {
                                background-color: #777 !important;
                                color: #FFF;
                                z-index: 10000;
                            }
                        </style>*@
                        @if (Model.Count < 1)
                        { }
                        else
                        {
                            for (int i = 0; i < Model.Count; i++)
                            {
                                DataTable dtm = Model[i].dt1;
                                if (dtm != null)
                                {
                                    <div class="col-md-12 col-sm-12 col-xs-12">
                                        <div class="x_panel" style="padding: 3px 15px !important">

                                            <div class="x_content">
                                                <div class="row">
                                                    <div class="grid-container">
                                                        <div class="grid">

                                                            @foreach (DataColumn dc in dtm.Columns)
                                                            {
                                                                try
                                                                {
                                                                    string editable = "false";
                                                                    var res = "0";
                                                                    try
                                                                    {
                                                                        var headid = dc.ColumnName.Split('(')[1].Split(')')[0].ToString();
                                                                        res = sgen.seekval(userCode, "select cur_tehsil from vehicle_master where type='KSP' and vch_num='" + headid + "' and client_id='" + clientid_mst + "'" +
                                                                            " and client_unit_id='" + unitid_mst + "'  ", "cur_tehsil").ToString().ToUpper();
                                                                    }
                                                                    catch (Exception err) { }
                                                                    if (res == "N") { }
                                                                    else if ((res == "0" && dc.Ordinal > 4) || res == "Y") { editable = "true"; }
                                                                    if (dc.ColumnName.Trim().ToUpper().StartsWith("ARR_")) { editable = "true"; }

                                                                    int mlength = dtm.Select("[" + dc.ColumnName + "] = MAX([" + dc.ColumnName + "])")[0][dc.ColumnName].ToString().Length;
                                                                    int collength = dc.ColumnName.ToString().Length;
                                                                    if (collength > mlength) { mlength = collength; }
                                                                    int k = 0;
                                                                    if (dc.Ordinal == 0)
                                                                    {
                                                                    <div class="grid-col grid-col--fixed-left" id="col_@dc.Ordinal" style="width:140px;z-index:10;left:0px;position:sticky;">
                                                                        <div class="grid-item grid-item--header">
                                                                            <p>@dc.ColumnName.ToString()</p>
                                                                        </div>

                                                                        @foreach (DataRow dr in dtm.Rows)
                                                                        {
                                                                            <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)' data-sakeys="gloval" contenteditable=@editable>
                                                                                @if (!dr[dc].ToString().Contains("-"))
                                                                                {
                                                                                    <label>@(k + 1) - </label>
                                                                                }
                                                                                @dr[dc].ToString()
                                                                            </div>
                                                                            k++;
                                                                        }
                                                                    </div>
                                                                    }
                                                                    else if (dc.Ordinal == 1)
                                                                    {
                                                                    <div class="grid-col grid-col--fixed-left" id="col_@dc.Ordinal" style="width:160px;z-index:10;left:140px">
                                                                        <div class="grid-item grid-item--header">
                                                                            <p>@dc.ColumnName.ToString()</p>
                                                                        </div>
                                                                        @foreach (DataRow dr in dtm.Rows)
                                                                        {
                                                                            <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)'  data-sakeys="gloval" contenteditable=@editable>
                                                                                @dr[dc].ToString()
                                                                            </div>
                                                                        }
                                                                    </div>
                                                                    }
                                                                    else if (dc.Ordinal == 2)
                                                                    {
                                                                    <div class="grid-col grid-col--fixed-left" id="col_@dc.Ordinal" style="width:200px;z-index:10;left:300px">
                                                                        <div class="grid-item grid-item--header">
                                                                            <p>@dc.ColumnName.ToString()</p>
                                                                        </div>
                                                                        @foreach (DataRow dr in dtm.Rows)
                                                                        {
                                                                            <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)'  data-sakeys="gloval" contenteditable=@editable>
                                                                                @dr[dc].ToString()
                                                                            </div>
                                                                        }
                                                                    </div>
                                                                    }
                                                                    else if (dc.Ordinal == 3)
                                                                    {
                                                                    <div class="grid-col" id="col_@dc.Ordinal" style="width:200px">
                                                                        <div class="grid-item grid-item--header">
                                                                            <p>@dc.ColumnName.ToString()</p>
                                                                        </div>
                                                                        @foreach (DataRow dr in dtm.Rows)
                                                                        {
                                                                            <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)'  data-sakeys="gloval" contenteditable=@editable>
                                                                                @dr[dc].ToString()
                                                                            </div>
                                                                        }
                                                                    </div>
                                                                    }
                                                                    else if (dc.Ordinal == 5 || dc.Ordinal == 6 || dc.Ordinal == 7 || dc.Ordinal == 8 || dc.Ordinal == 9)
                                                                    {
                                                                    <div class="grid-col" id="col_@dc.Ordinal" style="width:@(mlength * 8)px">
                                                                        <div class="grid-item grid-item--header">
                                                                            <p>@dc.ColumnName.ToString()</p>
                                                                        </div>
                                                                        @foreach (DataRow dr in dtm.Rows)
                                                                        {
                                                                            <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)'  data-sakeys="gloval" contenteditable="false">
                                                                                @dr[dc].ToString()
                                                                            </div>
                                                                        }
                                                                    </div>
                                                                    }
                                                                    else
                                                                    {
                                                                    <div class="grid-col" id="col_@dc.Ordinal" style="width:@(mlength * 8)px">
                                                                        <div class="grid-item grid-item--header">
                                                                            <p>@dc.ColumnName.ToString()</p>
                                                                        </div>
                                                                        @foreach (DataRow dr in dtm.Rows)
                                                                        {
                                                                            <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)'  data-sakeys="gloval" contenteditable=@editable>
                                                                                @dr[dc].ToString()
                                                                            </div>
                                                                        }
                                                                    </div>
                                                                    }
                                                                }
                                                                catch (Exception err) { }
                                                            }
                                                            
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            }
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
    <input type="hidden" name="hfrow" id="hfrow" />
    <input type="hidden" name="hftable" id="hftable" />
    <input type="submit" id="callback1" value="Callback" formnovalidate name="Command" title="callback" style="visibility:hidden" class="btn btn-primary" />
}
<script type="text/javascript">
     $(document).ready(function () {
        @Html.Raw(ViewBag.scripCall);
        $("[id*=hf_controller]").val('@controllerName');
         $("[id*=hf_viewname]").val('@viewName');    
        
    });

    function editfun() { var data = show_Foo('Select month for salary edit', 'EDIT', '1', '@viewName', '@controllerName'); }
    function setTableDatat() {
        try {

            datatable = new Array();

            var heads = $("[id*=col_]");
            var rows = $(heads).eq(0).find("[id*=row_]");
            for (var r = 0; r < rows.length; r++) {
                var row = $("[id=row_" + r + "]");
                var arr = new Array();
                for (var h = 0; h < heads.length; h++) {
                    var obj = {};
                    obj[heads[h].children[0].innerText] = row[h].innerText;
                    arr.push(obj);
                }
                datatable.push(arr);
            }
        }
        catch (err) { alert(err); return; }
        $("#hftable").val(JSON.stringify(datatable));
        //PageMethods.settable(datatable);


    }
    function sethfval(val) {

        $("#hfrow").val(val);
        setTableDatat();
    }

</script>

@*<script>

    var i = 0;
    var dragging = false;
    var ek, dusra;
    $('.grid-item--header').mousedown(function (e) {
        e.preventDefault();

        dragging = true;
        ek = $(this);
        dusra = $(this).parent().next();
        var ghostbar = $('<div>',
            {
                id: 'ghostbar',
                css: {
                    height: dusra.outerHeight(),
                    top: dusra.offset().top,
                    left: dusra.offset().left
                }
            }).appendTo('body');

        $(document).mousemove(function (e) {
            ghostbar.css("left", e.pageX + 2);
        });

    });

    $(document).mouseup(function (e) {
        if (dragging) {
         
            var percentage = (e.pageX / window.innerWidth) * 100;
            var mainPercentage = 100 - percentage;

            $('#console').text("side:" + percentage + " main:" + mainPercentage);

            $(ek).css("width", percentage + "%");
            $(dusra).css("width", mainPercentage + "%");
            $('#ghostbar').remove();
            $(document).unbind('mousemove');
            dragging = false;
        }
    });

</script>
<style>
    #ghostbar{
    width:3px;
    background-color:#000;
    opacity:0.5;
    position:absolute;
    cursor: col-resize;
    z-index:999}
</style>*@

