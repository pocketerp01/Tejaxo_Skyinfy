@using System.Data;
@model IList<skyinfyMVC.Models.Tmodelmain>
    @{

        string MyGuid = Model[0].Col15;
        sgenFun sgen = new sgenFun(MyGuid); ViewBag.Title = "billing_master";
        Layout = "~/Views/Shared/_MasterPage.cshtml";
        string userCode = sgen.GetCookie(MyGuid, "userCode");
        var viewName = sgen.GetSession(MyGuid, "viewName").ToString();
        var controllerName = sgen.GetSession(MyGuid, "controllerName").ToString();

    }
    @using (Html.BeginForm(viewName, controllerName, new { @m_id = EncryptDecrypt.Encrypt(Model[0].Col20), @mid = EncryptDecrypt.Encrypt(Model[0].Col10) }, FormMethod.Post, new { enctype = "multipart/form-data" }))
    {

    <div class="row">
        <div class="col-sm-4">
            <div class="form-group">
                <div class='input-group'>
                    <div class="title_left">
                        <h3>@Model[0].Col9</h3>
                    </div>

                    <span class="input-group-addon formclass"></span>
                </div>
            </div>
        </div>
        <div class="col-md-8">
            <div class="row">
                <div class="col-sm-2">
                    <div class="form-group">
                        <div class='input-group'>
                            <input type="submit" class="btn btn-primary form-control sa-button" formnovalidate @ViewBag.vnew id="btnnew" name="command" value="New" accesskey="N" />
                            <span class="input-group-addon formclass"></span>
                        </div>
                    </div>
                </div>
                <div class='col-sm-2'>
                    <div class="form-group">
                        <div class='input-group'>
                            <input type="button" class="btn btn-warning form-control" @ViewBag.vedit style="border-radius: 10px!important;" id="btnedit" onclick="editfun();" name="command" value="Edit" />

                            <span class="input-group-addon formclass"></span>
                        </div>
                    </div>
                </div>
                <div class='col-sm-2'>
                    <div class="form-group">
                        <div class='input-group'>
                            <input type="submit" class="btn btn-success form-control" @ViewBag.vsave style="border-radius: 10px!important;" id="btnsave" name="command" value="@Model[0].Col13" />

                            <span class="input-group-addon formclass"></span>
                        </div>
                    </div>
                </div>
                <div class='col-sm-2'>
                    <div class="form-group">
                        <div class='input-group'>
                            <input type="button" class="btn btn-info form-control" style="border-radius: 10px!important;" onclick="viewfun();" id="btndetail" name="command" value="View" />

                            <span class="input-group-addon formclass"></span>
                        </div>
                    </div>
                </div>
                <div class='col-sm-2'>
                    <div class="form-group">
                        <div class='input-group'>
                            <button type="submit" class="sa-btncancel form-control" style="border-radius: 10px!important;" id="btncancel" name="command" value="Cancel">Cancel</button>
                            <span class="input-group-addon formclass"></span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    for (int i = 0; i < Model.Count; i++)
    {
    <div class=" clearfix"></div>

    @Html.HiddenFor(model => model[i].Col1, new { @id = "lbl_entby" })
    @Html.HiddenFor(model => model[i].Col2, new { @id = "lbl_entdt" })
    @Html.HiddenFor(model => model[i].Col21, new { @id = "lbl_vch_num" })
    @Html.HiddenFor(model => model[i].Col4, new { @id = "lbl_client_id" })
    @Html.HiddenFor(model => model[i].Col5, new { @id = "lbl_client_unit_id" })
    @Html.HiddenFor(model => model[i].Col6, new { @id = "lbl_url" })
    @Html.HiddenFor(model => model[i].Col7, new { @id = "lbl_recid" })
    @Html.HiddenFor(model => model[i].Col8, new { @id = "hf_id" })
    @Html.HiddenFor(model => model[i].Col9, new { @id = "hf_heading" })
    @Html.HiddenFor(model => model[i].Col10, new { @id = "hf_mid" })
    @Html.HiddenFor(model => model[i].Col20, new { @id = "hf_m_id" })
    @Html.HiddenFor(model => model[i].Col13, new { @id = "hf_btn_text" })
    <div class="row">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="x_panel">
                <div class="x_content">
                    <div class="row">
                        <div id="demo-form2" class="form-horizontal">
                            <div class="form-group">
                                <label class="control-label col-md-3 col-sm-3 col-xs-12" for="first-name">Group Type</label>
                                <div class="col-md-6 col-sm-6 col-xs-12">
                                    <select class="sa-select2-single form-control" multiple="multiple">
                                        <option value="0" label="Fixed Assets">Fixed Assets</option>
                                        <option value="1" label="Raw Materials">Raw Materials</option>
                                        <option value="2" label="Packing Materials">Packing Materials</option>
                                        <option value="3" label="Spare Parts(BOP)">Spare Parts(BOP)</option>
                                        <option value="4" label="Consumables">Consumables</option>
                                        <option value="5" label="General Items">General Items</option>
                                        <option value="6" label="Service Items(Non Stock)">Service Items(Non Stock)</option>
                                        <option value="7" label="Trading Items">Trading Items</option>
                                        <option value="8" label="Semi Finished(SF)">Semi Finished(SF)</option>
                                        <option value="9" label="Finshed Goods(FG)">Finshed Goods(FG)</option>
                                        <option value="99" label="Scrap Items">Scrap Items</option>
                                    </select>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-3 col-sm-3 col-xs-12" for="first-name">Group No.</label>
                                <div class="col-md-6 col-sm-6 col-xs-12">
                                    @Html.TextBoxFor(model => model[i].Col11, new { @id = "txt_vchnum", @ReadOnly = "true", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", data_placeholder = "Doc No." })
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="control-label col-md-3 col-sm-3 col-xs-12" for="first-name" id="lbl_headname">Group Name<span class="ClientProfileLabelColor">*</span></label>
                                @Html.HiddenFor(model => model[i].Col14, new { @id = "hf_headname" })
                                <div class="col-md-6 col-sm-6 col-xs-12">
                                    @Html.TextBoxFor(model => model[i].Col15, new { @id = "txt_name", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-mandatory", data_placeholder = "Enter Name" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-3 col-sm-3 col-xs-12" for="first-name">Description </label>
                                <div class="col-md-6 col-sm-6 col-xs-12">
                                    @Html.TextBoxFor(model => model[i].Col16, new { @id = "txt_descrp", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-mandatory", data_placeholder = "desp" })
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="control-label col-md-3 col-sm-3 col-xs-12" for="first-name">Status <span class="ClientProfileLabelColor">*</span></label>
                                <div class="col-md-6 col-sm-6 col-xs-12">
                                    <b style="padding-top:12px">Active</b>
                                    @Html.RadioButtonFor(model => model[i].Col17, "Y", new { @id = "active", @class = " sa-input radio sa-mandatory", @style = "vertical-align:initial;min-height:0px;margin:0px;padding-top: 0px;" })
                                    <b style="padding-top:12px">Inactive</b>
                                    @Html.RadioButtonFor(model => model[i].Col17, "N", new { @id = "Inactive", @class = " sa-input radio sa-mandatory", @style = "vertical-align:initial;min-height:0px;margin:0px;padding-top: 0px;" })
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    }
    <input type="submit" id="callback1" formnovalidate value="Callback" name="Command" title="callback" style="visibility:hidden" class="btn btn-primary" />
    }

    <script type="text/javascript">
       
        $(document).ready(function () {
            @Html.Raw(ViewBag.scripCall);
            $("[id*=hf_controller]").val('@ViewContext.RouteData.Values["Controller"].ToString()');
            $("[id*=hf_viewname]").val('@Path.GetFileNameWithoutExtension(Server.MapPath(VirtualPath))');
        });


        @* function checkrefcode(ctrl) {
            debugger;
            var obj = { "value": $(ctrl).val() };
            var res = myMethod(@controllerName, @viewName, "checkrefcode", obj, ctrl);
        } *@


            //function newfun() {
            //    enableForm();
            //    $("[id*=btnsave]").attr("disabled", false);
            //    $("[id*=btnnew]").attr("disabled", true);
            //    $("[id*=btnedit]").attr("disabled", true);
            //}

        function editfun() { var data = show_Foo('Select Entry For Edit', 'EDIT', '1', '@viewName', '@controllerName'); }
        function viewfun() { var data = show_Foo('View Detail', 'VIEW', '0', '@viewName', '@controllerName'); }


        //function cancelfun() {
        //    $("[id*=btnnew]").attr("disabled", false);
        //    $("[id*=btnedit]").attr("disabled", false);
        //    $("[id*=btnsave]").attr("disabled", true);
        //    $("[id*=btndetail]").attr("disabled", false);
        //    $("[id*=btncancel]").attr("disabled", false);
        //    fillBlanks();
        //    disableForm();
        //}

    </script>
    <script>
        function per(ctrl) {
           
            var txt = ctrl;
            if (txt.value.length > 0) {
                if (!txt.value.endsWith('%')) {
                    if (txt.value > 100) {
                        showmsgJS(1, "Percentage cannot greater than 100 ", 2);
                        txt.value = "";
                        return false;
                    }
                    txt.value = txt.value + "%";
                }
                else {
                    if (txt.value.endsWith('%')) {
                        var a = txt.value.split('%')[0];
                        if (a > 100) {
                            showmsgJS(1, "Percentage cannot greater than 100 ", 2);
                            txt.value = "";
                            return false;
                        }
                        txt.value = txt.value
                    }
                }
            }
            else { txt.value = "0" + "%" }
        }


    </script>
