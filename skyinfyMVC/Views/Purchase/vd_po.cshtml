@using System.Data;
@model IList<skyinfyMVC.Models.Tmodelmain>
@{
    string MyGuid = "";
    MyGuid = Model[0].Col15;
    sgenFun sgen;
    sgen = new sgenFun(MyGuid);
    Cmd_Fun cmd_fun;
    cmd_fun = new Cmd_Fun(MyGuid);

    string userCode = sgen.GetCookie(MyGuid, "userCode");
    string mandatory = "sa-mandatory";
    Layout = "~/Views/Shared/_MasterPage.cshtml";
    var viewName = sgen.GetSession(MyGuid, "viewName").ToString();
    var controllerName = sgen.GetSession(MyGuid, "controllerName").ToString();

    DataTable tmp = cmd_fun.getsessiondt(userCode, "dtpo", "select type,id,name,param1,param2,trim(upper(param3)) param3,param4,param5,param6,param7,client_id,client_unit_id,m_module3 from controls where trim(upper(param5))='PO' and type='VDC'");

    #region buttons
    string buttons = "";
    buttons += "<div class='col-md-8'>" +
"        <div class='row'>" +
"            <div class='col-sm-3'> " +
"                <div class='form-group'>" +
"                    <div class='input-group'>" +
"                        <button type='button' class='btn btn-primary form-control sa-button' id='btninpo' name='command' value='Pending PO List' accesskey='P' onclick='inpo();setTableDatat();'><u>P</u>ending PO List</button>" +
"                        <span class='input-group-addon formclass'></span>" +
"                    </div>" +
"                </div>" +
"            </div>" +
"            <div class='col-sm-3'> " +
"                <div class='form-group'>" +
"                    <div class='input-group'>" +
"                        <button type='button' class='btn btn-success form-control sa-button' id='btnacpo' name='command' value='Accepted PO List' accesskey='A' onclick='acpo();setTableDatat();'><u>A</u>ccepted PO List</button>" +
"                        <span class='input-group-addon formclass'></span>" +
"                    </div>" +
"                </div>" +
"            </div>" +
"            <div class='col-sm-3'> " +
"                <div class='form-group'>" +
"                    <div class='input-group'>" +
"                        <button type='button' class='btn btn-danger form-control sa-button' id='btnrejpo' name='command' value='Rejected PO List' accesskey='R' onclick='rejpo();setTableDatat();'><u>R</u>ejected PO List</button>" +
"                        <span class='input-group-addon formclass'></span>" +
"                    </div>" +
"                </div>" +
"            </div>" +
"        </div>" +
"    </div>";
    #endregion
}

@using (Html.BeginForm(viewName, controllerName, new { @m_id = EncryptDecrypt.Encrypt(Model[0].Col15), @mid = EncryptDecrypt.Encrypt(Model[0].Col14) }, FormMethod.Post, new { id = "potemp", enctype = "multipart/form-data" }))
{
    <div class="row">
        <div class="col-sm-4">
            <div class="form-group">
                <div class='input-group'>
                    <div class="title_left">
                        <h3>PURCHASE ORDER</h3>
                        <h3>@Model[0].Col79 - @Model[0].Col9</h3>
                        @Html.HiddenFor(model => model[0].Col9, new { @id = "hf_title" })
                        @Html.HiddenFor(model => model[0].Col79, new { @id = "hf_title2" })
                    </div>
                    <span class="input-group-addon formclass"></span>
                </div>
            </div>
        </div>
        @Html.Raw(buttons)
    </div>
    <div class="clearfix"></div>
    <div class="row" @ViewBag.div_po1>
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="x_panel">
                <div class="x_content">
                    <div class="row">
                        @if (Model[0].Col29 != null && Model[0].Col29 != "")
                        {
                            if (Model[0].Col29 == "002")
                            {
                                <div class='col-sm-2'>
                                    <label for="first-name">
                                        Copy From Previous PO
                                    </label>
                                </div>
                                <div class="col-md-1" id="div_search">
                                    <a causesvalidation="false" data-toggle="tooltip" data-placement="top" title="Select From Previous PO" id="spn_bm" tooltip="Select From Previous PO" onclick="setTableDatat();getpolist();"><i class="fa fa-search"></i></a>
                                    <span class="ClientProfileLabelColor"></span>
                                </div>
                            }
                        }

                    </div>
                    <div class="row">
                        <div class='col-sm-3'>
                            <label for="first-name">PO Number <span class="ClientProfileLabelColor">*</span></label>
                            <div class="form-group">
                                <div class='input-group'>
                                    @Html.TextBoxFor(model => model[0].Col47, new { @id = "txt_ponumber", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", placeholder = "PO Number", @ReadOnly = "true" })
                                    <span class="input-group-addon formclass"></span>
                                </div>
                            </div>
                        </div>
                        <div class='col-sm-3'>
                            <label for="first-name">PO Date <span class="ClientProfileLabelColor">*</span></label>
                            <div class="form-group">
                                <div class='input-group'>
                                    @Html.TextBoxFor(model => model[0].Col48, new { @id = "txt_podate", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-ac-date sa-mandatory", placeholder = "PO Date" })
                                    <span class="input-group-addon formclass"></span>
                                </div>
                            </div>
                        </div>
                        <div class='col-sm-3'>
                            <label for="first-name">Vendor Code <span class="ClientProfileLabelColor">*</span></label>
                            <div class="form-group">
                                <div class='input-group'>
                                    @Html.TextBoxFor(model => model[0].Col49, new { @id = "txt_pcode", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", placeholder = "Vendor Code", @ReadOnly = "true" })
                                    <span class="input-group-addon formclass"></span>
                                </div>
                            </div>
                        </div>
                        <div class='col-sm-3'>
                            <label for="first-name">Name Of Vendor <span class="ClientProfileLabelColor">*</span></label>
                            <div class="form-group">
                                <div class='input-group'>
                                    @Html.TextBoxFor(model => model[0].Col20, new { @id = "txt_partyname", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-mandatory", placeholder = "Name Of Vendor", @onkeypress = "return false;" })
                                    @Html.HiddenFor(model => model[0].Col49, new { @id = "p_recid" })
                                    @Html.HiddenFor(model => model[0].Col52, new { @id = "hf_pgsttype" })
                                    <span class="input-group-addon" data-toggle="tooltip" data-placement="top" title="Select Vendor" id="spn_add" onclick="setTableDatat();selectparty(this);"><i class="fa fa-search"></i></span>

                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class='col-sm-3'>
                            <label for="first-name">GSTIN No. <span class="ClientProfileLabelColor">*</span></label>
                            <div class="form-group">
                                <div class='input-group'>
                                    @Html.TextBoxFor(model => model[0].Col22, new { @id = "txt_gstin", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", placeholder = "GSTIN No.", @ReadOnly = "true" })
                                    <span class="input-group-addon formclass"></span>
                                </div>
                            </div>
                        </div>
                        <div class='col-sm-6'>
                            <label for="first-name">Vendor Address <span class="ClientProfileLabelColor">*</span></label>
                            <div class="form-group">
                                <div class='input-group'>
                                    @Html.TextBoxFor(model => model[0].Col21, new { @id = "txt_party_add", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", placeholder = "Vendor Address", @ReadOnly = "true" })
                                    <span class="input-group-addon formclass"></span>
                                </div>
                            </div>
                        </div>
                        <div class='col-sm-3'>
                            <label for="first-name">PO Type </label>
                            <div class="form-group">
                                <div class='input-group'>
                                    @Html.DropDownListFor(model => model[0].SelectedItems8, new MultiSelectList(Model[0].TList8, "Value", "Text", Model[0].SelectedItems8), new { @id = "ddl_potype", @class = "sa-select2-single form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @MaxLength = "20", @style = "width:100%", @multiple = "multiple" })
                                    <span class="input-group-addon formclass"></span>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class='col-sm-3'>
                            <label for="first-name">Payment Terms <span class="ClientProfileLabelColor">*</span></label>
                            <div class="form-group">
                                <div class='input-group'>
                                    @Html.DropDownListFor(model => model[0].SelectedItems1, new MultiSelectList(Model[0].TList1, "Value", "Text", Model[0].SelectedItems1), new { @id = "ddl_pay_terms", @class = "sa-select2-single form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @MaxLength = "20", @style = "width:100%", @multiple = "multiple" })
                                    <span class="input-group-addon formclass"></span>
                                </div>
                            </div>
                        </div>
                        <div class='col-sm-3'>
                            <label for="first-name">Price Terms <span class="ClientProfileLabelColor"></span></label>
                            <div class="form-group">
                                <div class='input-group'>
                                    @Html.DropDownListFor(model => model[0].SelectedItems2, new MultiSelectList(Model[0].TList2, "Value", "Text", Model[0].SelectedItems2), new { @id = "ddl_price", @class = "sa-select2-single form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @MaxLength = "20", @style = "width:100%", @multiple = "multiple" })
                                    <span class="input-group-addon formclass"></span>
                                </div>
                            </div>
                        </div>
                        <div class='col-sm-3'>
                            <label for="first-name">Transport / Shipment Mode <span class="ClientProfileLabelColor"></span></label>
                            <div class="form-group">
                                <div class='input-group'>
                                    @Html.DropDownListFor(model => model[0].SelectedItems3, new MultiSelectList(Model[0].TList3, "Value", "Text", Model[0].SelectedItems3), new { @id = "ddl_transport_mode", @class = "sa-select2-single form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @MaxLength = "20", @style = "width:100%", @multiple = "multiple" })
                                    <span class="input-group-addon formclass"></span>
                                </div>
                            </div>
                        </div>
                        <div class='col-sm-3'>
                            <label for="first-name">Transporter Name </label>
                            <div class="form-group">
                                <div class='input-group'>
                                    @Html.TextBoxFor(model => model[0].Col56, new { @id = "txt_tname", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", placeholder = "Transporter Name", MaxLength = "25" })
                                    <span class="input-group-addon formclass"></span>
                                </div>
                            </div>
                        </div>
                        <div class='col-sm-3'>
                            <label for="first-name">PI / Price Reference Details </label>
                            <div class="form-group">
                                <div class='input-group'>
                                    @Html.TextBoxFor(model => model[0].Col60, new { @id = "txt_pi", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", placeholder = "PI / Price Reference Details", MaxLength = "25" })
                                    <span class="input-group-addon formclass"></span>
                                </div>
                            </div>
                        </div>
                        <div class='col-sm-3'>
                            <label for="first-name">Tax Remarks </label>
                            <div class="form-group">
                                <div class='input-group'>
                                    @Html.TextBoxFor(model => model[0].Col61, new { @id = "txt_taxre", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", placeholder = "Tax Remarks", MaxLength = "25" })
                                    <span class="input-group-addon formclass"></span>
                                </div>
                            </div>
                        </div>
                        <div class='col-sm-3'>
                            <label for="first-name">Payment Mode </label>
                            <div class="form-group">
                                <div class='input-group'>
                                    @Html.DropDownListFor(model => model[0].SelectedItems4, new MultiSelectList(Model[0].TList4, "Value", "Text", Model[0].SelectedItems4), new { @id = "ddl_paymode", @class = "sa-select2-single form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @MaxLength = "20", @style = "width:100%", @multiple = "multiple" })
                                    <span class="input-group-addon formclass"></span>
                                </div>
                            </div>
                        </div>
                        <div class='col-sm-3'>
                            <label for="first-name">Insurance By </label>
                            <div class="form-group">
                                <div class='input-group'>
                                    @Html.DropDownListFor(model => model[0].SelectedItems5, new MultiSelectList(Model[0].TList5, "Value", "Text", Model[0].SelectedItems5), new { @id = "ddl_insby", @class = "sa-select2-single form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @MaxLength = "20", @style = "width:100%", @multiple = "multiple" })
                                    <span class="input-group-addon formclass"></span>
                                </div>
                            </div>
                        </div>
                        <div class='col-sm-3'>
                            <label for="first-name">Delivery Terms </label>
                            <div class="form-group">
                                <div class='input-group'>
                                    @Html.DropDownListFor(model => model[0].SelectedItems6, new MultiSelectList(Model[0].TList6, "Value", "Text", Model[0].SelectedItems6), new { @id = "ddl_delterm", @class = "sa-select2-single form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @MaxLength = "20", @style = "width:100%", @multiple = "multiple" })
                                    <span class="input-group-addon formclass"></span>
                                </div>
                            </div>
                        </div>
                        @if (tmp.Select("param3='DOCUMENT CURRENCY'")[0]["param2"].ToString() == "Y")
                        {
                            if (tmp.Select("param3='DOCUMENT CURRENCY'")[0]["param1"].ToString().Trim().Equals("Y") || tmp.Select("param3='DOCUMENT CURRENCY'")[0]["param1"].ToString().Trim().Equals("M"))
                            {
                                mandatory = "sa-mandatory";
                            }
                            else { mandatory = ""; }
                            <div class='col-sm-3'>
                                <label for="first-name">
                                    @tmp.Select("param3='DOCUMENT CURRENCY'")[0]["name"].ToString()
                                    @if (tmp.Select("param3='DOCUMENT CURRENCY'")[0]["param1"].ToString().Trim().Equals("Y") || tmp.Select("param3='DOCUMENT CURRENCY'")[0]["param1"].ToString().Trim().Equals("M"))
                                    {
                                        <span class="ClientProfileLabelColor">*</span>
                                    }
                                </label>
                                <div class="form-group">
                                    <div class='input-group'>
                                        @Html.DropDownListFor(model => model[0].SelectedItems7, new MultiSelectList(Model[0].TList7, "Value", "Text", Model[0].SelectedItems7), new { @id = "ddl_doccur", @class = "sa-select2-single form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @MaxLength = "20", @style = "width:100%", @multiple = "multiple" })
                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                        }
                        @if (tmp.Select("param3='SHIPMENT FROM'")[0]["param2"].ToString() == "Y")
                        {
                            if (tmp.Select("param3='SHIPMENT FROM'")[0]["param1"].ToString().Trim().Equals("Y") || tmp.Select("param3='SHIPMENT FROM'")[0]["param1"].ToString().Trim().Equals("M"))
                            {
                                mandatory = "sa-mandatory";
                            }
                            else { mandatory = ""; }
                            <div class='col-sm-3'>
                                <label for="first-name">
                                    @tmp.Select("param3='SHIPMENT FROM'")[0]["name"].ToString()
                                    @if (tmp.Select("param3='SHIPMENT FROM'")[0]["param1"].ToString().Trim().Equals("Y") || tmp.Select("param3='SHIPMENT FROM'")[0]["param1"].ToString().Trim().Equals("M"))
                                    {
                                        <span class="ClientProfileLabelColor">*</span>
                                    }
                                </label>
                                <div class="form-group">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model[0].Col62, new { @id = "txt_shpf", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox " + mandatory + "", placeholder = "" + @tmp.Select("param3='SHIPMENT FROM'")[0]["name"].ToString() + "", MaxLength = "25" })
                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                        }
                        @if (tmp.Select("param3='SHIPMENT TO'")[0]["param2"].ToString() == "Y")
                        {
                            if (tmp.Select("param3='SHIPMENT TO'")[0]["param1"].ToString().Trim().Equals("Y") || tmp.Select("param3='SHIPMENT TO'")[0]["param1"].ToString().Trim().Equals("M"))
                            {
                                mandatory = "sa-mandatory";
                            }
                            else { mandatory = ""; }
                            <div class='col-sm-3'>
                                <label for="first-name">
                                    @tmp.Select("param3='SHIPMENT TO'")[0]["name"].ToString()
                                    @if (tmp.Select("param3='SHIPMENT TO'")[0]["param1"].ToString().Trim().Equals("Y") || tmp.Select("param3='SHIPMENT TO'")[0]["param1"].ToString().Trim().Equals("M"))
                                    {
                                        <span class="ClientProfileLabelColor">*</span>
                                    }
                                </label>
                                <div class="form-group">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model[0].Col63, new { @id = "txt_shpt", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox " + mandatory + "", placeholder = "" + @tmp.Select("param3='SHIPMENT TO'")[0]["name"].ToString() + "", MaxLength = "25" })
                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                        }
                        @if (tmp.Select("param3='PACKING INSTRUCTION'")[0]["param2"].ToString() == "Y")
                        {
                            if (tmp.Select("param3='PACKING INSTRUCTION'")[0]["param1"].ToString().Trim().Equals("Y") || tmp.Select("param3='PACKING INSTRUCTION'")[0]["param1"].ToString().Trim().Equals("M"))
                            {
                                mandatory = "sa-mandatory";
                            }
                            else { mandatory = ""; }
                            <div class='col-sm-3'>
                                <label for="first-name">
                                    @tmp.Select("param3='PACKING INSTRUCTION'")[0]["name"].ToString()
                                    @if (tmp.Select("param3='PACKING INSTRUCTION'")[0]["param1"].ToString().Trim().Equals("Y") || tmp.Select("param3='PACKING INSTRUCTION'")[0]["param1"].ToString().Trim().Equals("M"))
                                    {
                                        <span class="ClientProfileLabelColor">*</span>
                                    }
                                </label>
                                <div class="form-group">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model[0].Col57, new { @id = "txt_pkins", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox " + mandatory + "", placeholder = "" + @tmp.Select("param3='PACKING INSTRUCTION'")[0]["name"].ToString() + "", MaxLength = "50" })
                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                        }
                        @if (tmp.Select("param3='TEST CERTIFICATE'")[0]["param2"].ToString() == "Y")
                        {
                            if (tmp.Select("param3='TEST CERTIFICATE'")[0]["param1"].ToString().Trim().Equals("Y") || tmp.Select("param3='TEST CERTIFICATE'")[0]["param1"].ToString().Trim().Equals("M"))
                            {
                                mandatory = "sa-mandatory";
                            }
                            else { mandatory = ""; }
                            <div class='col-sm-3'>
                                <label for="first-name">
                                    @tmp.Select("param3='TEST CERTIFICATE'")[0]["name"].ToString()
                                    @if (tmp.Select("param3='TEST CERTIFICATE'")[0]["param1"].ToString().Trim().Equals("Y") || tmp.Select("param3='TEST CERTIFICATE'")[0]["param1"].ToString().Trim().Equals("M"))
                                    {
                                        <span class="ClientProfileLabelColor">*</span>
                                    }
                                </label>
                                <div class="form-group">
                                    <div class='input-group'>
                                        <b style="padding-top:12px">Yes </b>
                                        @Html.RadioButtonFor(model => model[0].Col58, "Y", new { @id = "rd_tcy", @class = "sa-input radio " + mandatory + "", onclick = "chktc();", @style = "vertical-align:initial;min-height:0px;margin:0px;padding-top:0px;" })
                                        <b style="padding-top:12px"> No </b>
                                        @Html.RadioButtonFor(model => model[0].Col58, "N", new { @id = "rd_tcn", @class = "sa-input radio " + mandatory + "", onclick = "chktc();", @style = "vertical-align:initial;min-height:0px;margin:0px;padding-top:0px;" })
                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                        }
                        @if (tmp.Select("param3='TEST REMARK'")[0]["param2"].ToString() == "Y")
                        {
                            if (tmp.Select("param3='TEST REMARK'")[0]["param1"].ToString().Trim().Equals("Y") || tmp.Select("param3='TEST REMARK'")[0]["param1"].ToString().Trim().Equals("M"))
                            {
                                mandatory = "sa-mandatory";
                            }
                            else { mandatory = ""; }
                            <div class='col-sm-3'>
                                <label for="first-name">
                                    @tmp.Select("param3='TEST REMARK'")[0]["name"].ToString()
                                    @if (tmp.Select("param3='TEST REMARK'")[0]["param1"].ToString().Trim().Equals("Y") || tmp.Select("param3='TEST REMARK'")[0]["param1"].ToString().Trim().Equals("M"))
                                    {
                                        <span class="ClientProfileLabelColor">*</span>
                                    }
                                </label>
                                <div class="form-group ">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model[0].Col59, new { @id = "txt_tcr", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox " + mandatory + "", placeholder = "" + @tmp.Select("param3='TEST REMARK'")[0]["name"].ToString() + "", MaxLength = "50" })
                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                        }
                        @if (tmp.Select("param3='GST CREDIT AVAILABLE'")[0]["param2"].ToString() == "Y")
                        {
                            if (tmp.Select("param3='GST CREDIT AVAILABLE'")[0]["param1"].ToString().Trim().Equals("Y") || tmp.Select("param3='GST CREDIT AVAILABLE'")[0]["param1"].ToString().Trim().Equals("M"))
                            {
                                mandatory = "sa-mandatory";
                            }
                            else { mandatory = ""; }
                            <div class='col-sm-3'>
                                <label for="first-name">
                                    @tmp.Select("param3='GST CREDIT AVAILABLE'")[0]["name"].ToString()
                                    @if (tmp.Select("param3='GST CREDIT AVAILABLE'")[0]["param1"].ToString().Trim().Equals("Y") || tmp.Select("param3='GST CREDIT AVAILABLE'")[0]["param1"].ToString().Trim().Equals("M"))
                                    {
                                        <span class="ClientProfileLabelColor">*</span>
                                    }
                                </label>
                                <div class="form-group ">
                                    <div class='input-group'>
                                        <b style="padding-top:12px">Yes </b>
                                        @Html.RadioButtonFor(model => model[0].Col67, "Y", new { @id = "rd_gstavly", @class = "sa-input radio " + mandatory + "", onclick = "gstavl();", @style = "vertical-align:initial;min-height:0px;margin:0px;padding-top:0px;" })
                                        <b style="padding-top:12px"> No </b>
                                        @Html.RadioButtonFor(model => model[0].Col67, "N", new { @id = "rd_gstavln", @class = "sa-input radio " + mandatory + "", onclick = "gstavl();", @style = "vertical-align:initial;min-height:0px;margin:0px;padding-top:0px;" })
                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                        }
                        @if (tmp.Select("param3='GST CREDIT REMARK'")[0]["param2"].ToString() == "Y")
                        {
                            if (tmp.Select("param3='GST CREDIT REMARK'")[0]["param1"].ToString().Trim().Equals("Y") || tmp.Select("param3='GST CREDIT REMARK'")[0]["param1"].ToString().Trim().Equals("M"))
                            {
                                mandatory = "sa-mandatory";
                            }
                            else { mandatory = ""; }
                            <div class='col-sm-3'>
                                <label for="first-name">
                                    @tmp.Select("param3='GST CREDIT REMARK'")[0]["name"].ToString()
                                    @if (tmp.Select("param3='GST CREDIT REMARK'")[0]["param1"].ToString().Trim().Equals("Y") || tmp.Select("param3='GST CREDIT REMARK'")[0]["param1"].ToString().Trim().Equals("M"))
                                    {
                                        <span class="ClientProfileLabelColor">*</span>
                                    }
                                </label>
                                <div class="form-group ">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model[0].Col68, new { @id = "txt_gstre", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox " + mandatory + "", placeholder = "" + @tmp.Select("param3='GST CREDIT REMARK'")[0]["name"].ToString() + "", MaxLength = "30" })
                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                        }
                        @if (tmp.Select("param3='NUMBER 1'")[0]["param2"].ToString() == "Y")
                        {
                            if (tmp.Select("param3='NUMBER 1'")[0]["param1"].ToString().Trim().Equals("Y") || tmp.Select("param3='NUMBER 1'")[0]["param1"].ToString().Trim().Equals("M"))
                            {
                                mandatory = "sa-mandatory";
                            }
                            else { mandatory = ""; }
                            <div class='col-sm-3'>
                                <label for="first-name">
                                    @tmp.Select("param3='NUMBER 1'")[0]["name"].ToString()
                                    @if (tmp.Select("param3='NUMBER 1'")[0]["param1"].ToString().Trim().Equals("Y") || tmp.Select("param3='NUMBER 1'")[0]["param1"].ToString().Trim().Equals("M"))
                                    {
                                        <span class="ClientProfileLabelColor">*</span>
                                    }
                                </label>
                                <div class="form-group ">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model[0].Col70, new { @id = "txt_no1", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox " + mandatory + "", placeholder = "" + @tmp.Select("param3='NUMBER 1'")[0]["name"].ToString() + "", MaxLength = "25" })
                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                        }
                        @if (tmp.Select("param3='NUMBER 2'")[0]["param2"].ToString() == "Y")
                        {
                            if (tmp.Select("param3='NUMBER 2'")[0]["param1"].ToString().Trim().Equals("Y") || tmp.Select("param3='NUMBER 2'")[0]["param1"].ToString().Trim().Equals("M"))
                            {
                                mandatory = "sa-mandatory";
                            }
                            else { mandatory = ""; }
                            <div class='col-sm-3'>
                                <label for="first-name">
                                    @tmp.Select("param3='NUMBER 2'")[0]["name"].ToString()
                                    @if (tmp.Select("param3='NUMBER 2'")[0]["param1"].ToString().Trim().Equals("Y") || tmp.Select("param3='NUMBER 2'")[0]["param1"].ToString().Trim().Equals("M"))
                                    {
                                        <span class="ClientProfileLabelColor">*</span>
                                    }
                                </label>
                                <div class="form-group ">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model[0].Col71, new { @id = "txt_no2", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox " + mandatory + "", placeholder = "" + @tmp.Select("param3='NUMBER 2'")[0]["name"].ToString() + "", MaxLength = "25" })
                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                        }
                        @if (tmp.Select("param3='NUMBER 3'")[0]["param2"].ToString() == "Y")
                        {
                            if (tmp.Select("param3='NUMBER 3'")[0]["param1"].ToString().Trim().Equals("Y") || tmp.Select("param3='NUMBER 3'")[0]["param1"].ToString().Trim().Equals("M"))
                            {
                                mandatory = "sa-mandatory";
                            }
                            else { mandatory = ""; }
                            <div class='col-sm-3'>
                                <label for="first-name">
                                    @tmp.Select("param3='NUMBER 3'")[0]["name"].ToString()
                                    @if (tmp.Select("param3='NUMBER 3'")[0]["param1"].ToString().Trim().Equals("Y") || tmp.Select("param3='NUMBER 3'")[0]["param1"].ToString().Trim().Equals("M"))
                                    {
                                        <span class="ClientProfileLabelColor">*</span>
                                    }
                                </label>
                                <div class="form-group ">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model[0].Col72, new { @id = "txt_no3", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox " + mandatory + "", placeholder = "" + @tmp.Select("param3='NUMBER 3'")[0]["name"].ToString() + "", MaxLength = "25" })
                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                        }
                        @if (tmp.Select("param3='DATE 1'")[0]["param2"].ToString() == "Y")
                        {
                            if (tmp.Select("param3='DATE 1'")[0]["param1"].ToString().Trim().Equals("Y") || tmp.Select("param3='DATE 1'")[0]["param1"].ToString().Trim().Equals("M"))
                            {
                                mandatory = "sa-mandatory";
                            }
                            else { mandatory = ""; }
                            <div class='col-sm-3'>
                                <label for="first-name">
                                    @tmp.Select("param3='DATE 1'")[0]["name"].ToString()
                                    @if (tmp.Select("param3='DATE 1'")[0]["param1"].ToString().Trim().Equals("Y") || tmp.Select("param3='DATE 1'")[0]["param1"].ToString().Trim().Equals("M"))
                                    {
                                        <span class="ClientProfileLabelColor">*</span>
                                    }
                                </label>
                                <div class="form-group ">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model[0].Col73, new { @id = "txt_dt1", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-date " + mandatory + "", placeholder = "" + @tmp.Select("param3='DATE 1'")[0]["name"].ToString() + "", MaxLength = "25" })
                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                        }
                        @if (tmp.Select("param3='DATE 2'")[0]["param2"].ToString() == "Y")
                        {
                            if (tmp.Select("param3='DATE 2'")[0]["param1"].ToString().Trim().Equals("Y") || tmp.Select("param3='DATE 2'")[0]["param1"].ToString().Trim().Equals("M"))
                            {
                                mandatory = "sa-mandatory";
                            }
                            else { mandatory = ""; }
                            <div class='col-sm-3'>
                                <label for="first-name">
                                    @tmp.Select("param3='DATE 2'")[0]["name"].ToString()
                                    @if (tmp.Select("param3='DATE 2'")[0]["param1"].ToString().Trim().Equals("Y") || tmp.Select("param3='DATE 2'")[0]["param1"].ToString().Trim().Equals("M"))
                                    {
                                        <span class="ClientProfileLabelColor">*</span>
                                    }
                                </label>
                                <div class="form-group ">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model[0].Col74, new { @id = "txt_dt2", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-date " + mandatory + "", placeholder = "" + @tmp.Select("param3='DATE 2'")[0]["name"].ToString() + "", MaxLength = "25" })
                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                        }
                        @if (tmp.Select("param3='DATE 3'")[0]["param2"].ToString() == "Y")
                        {
                            if (tmp.Select("param3='DATE 3'")[0]["param1"].ToString().Trim().Equals("Y") || tmp.Select("param3='DATE 3'")[0]["param1"].ToString().Trim().Equals("M"))
                            {
                                mandatory = "sa-mandatory";
                            }
                            else { mandatory = ""; }
                            <div class='col-sm-3'>
                                <label for="first-name">
                                    @tmp.Select("param3='DATE 3'")[0]["name"].ToString()
                                    @if (tmp.Select("param3='DATE 3'")[0]["param1"].ToString().Trim().Equals("Y") || tmp.Select("param3='DATE 3'")[0]["param1"].ToString().Trim().Equals("M"))
                                    {
                                        <span class="ClientProfileLabelColor">*</span>
                                    }
                                </label>
                                <div class="form-group ">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model[0].Col75, new { @id = "txt_dt3", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-date " + mandatory + "", placeholder = "" + @tmp.Select("param3='DATE 3'")[0]["name"].ToString() + "", MaxLength = "25" })
                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                        }
                        @if (tmp.Select("param3='TEXT 1'")[0]["param2"].ToString() == "Y")
                        {
                            if (tmp.Select("param3='TEXT 1'")[0]["param1"].ToString().Trim().Equals("Y") || tmp.Select("param3='TEXT 1'")[0]["param1"].ToString().Trim().Equals("M"))
                            {
                                mandatory = "sa-mandatory";
                            }
                            else { mandatory = ""; }
                            <div class='col-sm-3'>
                                <label for="first-name">
                                    @tmp.Select("param3='TEXT 1'")[0]["name"].ToString()
                                    @if (tmp.Select("param3='TEXT 1'")[0]["param1"].ToString().Trim().Equals("Y") || tmp.Select("param3='TEXT 1'")[0]["param1"].ToString().Trim().Equals("M"))
                                    {
                                        <span class="ClientProfileLabelColor">*</span>
                                    }
                                </label>
                                <div class="form-group ">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model[0].Col76, new { @id = "txt_1", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox " + mandatory + "", placeholder = "" + @tmp.Select("param3='TEXT 1'")[0]["name"].ToString() + "", MaxLength = "25" })
                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                        }
                        @if (tmp.Select("param3='TEXT 2'")[0]["param2"].ToString() == "Y")
                        {
                            if (tmp.Select("param3='TEXT 2'")[0]["param1"].ToString().Trim().Equals("Y") || tmp.Select("param3='TEXT 2'")[0]["param1"].ToString().Trim().Equals("M"))
                            {
                                mandatory = "sa-mandatory";
                            }
                            else { mandatory = ""; }
                            <div class='col-sm-3'>
                                <label for="first-name">
                                    @tmp.Select("param3='TEXT 2'")[0]["name"].ToString()
                                    @if (tmp.Select("param3='TEXT 2'")[0]["param1"].ToString().Trim().Equals("Y") || tmp.Select("param3='TEXT 2'")[0]["param1"].ToString().Trim().Equals("M"))
                                    {
                                        <span class="ClientProfileLabelColor">*</span>
                                    }
                                </label>
                                <div class="form-group ">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model[0].Col77, new { @id = "txt_2", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox " + mandatory + "", placeholder = "" + @tmp.Select("param3='TEXT 2'")[0]["name"].ToString() + "", MaxLength = "25" })
                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                        }
                        @if (tmp.Select("param3='TEXT 3'")[0]["param2"].ToString() == "Y")
                        {
                            if (tmp.Select("param3='TEXT 3'")[0]["param1"].ToString().Trim().Equals("Y") || tmp.Select("param3='TEXT 3'")[0]["param1"].ToString().Trim().Equals("M"))
                            {
                                mandatory = "sa-mandatory";
                            }
                            else { mandatory = ""; }
                            <div class='col-sm-3'>
                                <label for="first-name">
                                    @tmp.Select("param3='TEXT 3'")[0]["name"].ToString()
                                    @if (tmp.Select("param3='TEXT 3'")[0]["param1"].ToString().Trim().Equals("Y") || tmp.Select("param3='TEXT 3'")[0]["param1"].ToString().Trim().Equals("M"))
                                    {
                                        <span class="ClientProfileLabelColor">*</span>
                                    }
                                </label>
                                <div class="form-group ">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model[0].Col78, new { @id = "txt_3", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox " + mandatory + "", placeholder = "" + @tmp.Select("param3='TEXT 3'")[0]["name"].ToString() + "", MaxLength = "25" })
                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                    <div class="row">
                        <div class="x_panel" style="padding: 3px 15px !important">
                            <div class="x_title" style="padding: 0px !important; border-bottom: 0px !important" onclick="hidep(this);">
                                <b>Shipment Detail</b>
                                <ul class="nav navbar-right panel_toolbox">
                                    <li><a id="ahide1" class="a_panel"><i class="fa fa-chevron-up"></i></a></li>
                                </ul>
                                <div class="clearfix"></div>
                            </div>
                            <div class="x_content kc">
                                <div class="row">
                                    <div class="col-sm-6">
                                        <hr />
                                        <h4 style="font-style: italic">Ship From</h4>
                                        <div class="row">
                                            <div class='col-sm-12'>
                                                <label for="first-name">Vendor Name <span class="ClientProfileLabelColor">*</span></label>
                                                <div class="form-group ">
                                                    <div class='input-group'>
                                                        @Html.TextBoxFor(model => model[0].Col23, new { @id = "txt_shipfrmname", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @ReadOnly = "true" })
                                                        @Html.HiddenFor(model => model[0].Col50, new { @id = "ship_frm" })
                                                        <span class="input-group-addon" data-toggle="tooltip" data-placement="top" title="Select Vendor" id="spn_add" onclick="setTableDatat();partyfrom(this);"><i class="fa fa-search"></i></span>

                                                    </div>
                                                </div>
                                            </div>
                                            <div class='col-sm-12'>
                                                <label for="first-name">Vendor Address <span class="ClientProfileLabelColor">*</span></label>
                                                <div class="form-group ">
                                                    <div class='input-group'>
                                                        @Html.TextBoxFor(model => model[0].Col24, new { @id = "txt_shipfrmadd", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @ReadOnly = "true" })
                                                        <span class="input-group-addon formclass"></span>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class='col-sm-12'>
                                                <label for="first-name">GSTIN No. <span class="ClientProfileLabelColor">*</span></label>
                                                <div class="form-group ">
                                                    <div class='input-group'>
                                                        @Html.TextBoxFor(model => model[0].Col25, new { @id = "txt_shipfrmgstno", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @ReadOnly = "true" })
                                                        <span class="input-group-addon formclass"></span>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <hr />
                                        <h4 style="font-style: italic">Ship To</h4>
                                        <div class="row">
                                            <div class='col-sm-12'>
                                                <label for="first-name">Vendor Name <span class="ClientProfileLabelColor">*</span></label>
                                                <div class="form-group ">
                                                    <div class='input-group'>
                                                        @Html.TextBoxFor(model => model[0].Col26, new { @id = "txt_shiptoname", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @ReadOnly = "true" })
                                                        @Html.HiddenFor(model => model[0].Col51, new { @id = "ship_to" })
                                                        <span class="input-group-addon" data-toggle="tooltip" data-placement="top" title="Select Vendor" id="spn_add" onclick="setTableDatat();partyto(this);"><i class="fa fa-search"></i></span>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class='col-sm-12'>
                                                <label for="first-name">Vendor Address <span class="ClientProfileLabelColor">*</span></label>
                                                <div class="form-group ">
                                                    <div class='input-group'>
                                                        @Html.TextBoxFor(model => model[0].Col27, new { @id = "txt_shiptoadd", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @ReadOnly = "true" })
                                                        <span class="input-group-addon formclass"></span>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class='col-sm-12'>
                                                <label for="first-name">GSTIN No. <span class="ClientProfileLabelColor">*</span></label>
                                                <div class="form-group ">
                                                    <div class='input-group'>
                                                        @Html.TextBoxFor(model => model[0].Col28, new { @id = "txt_shiptogstno", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @ReadOnly = "true" })
                                                        <span class="input-group-addon formclass"></span>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    @Html.HiddenFor(model => model[0].Col1, new { @id = "hf_clientid" })
    @Html.HiddenFor(model => model[0].Col2, new { @id = "hf_clientunitid" })
    @Html.HiddenFor(model => model[0].Col3, new { @id = "hf_entby" })
    @Html.HiddenFor(model => model[0].Col4, new { @id = "hf_entdate" })
    @Html.HiddenFor(model => model[0].Col5, new { @id = "hf_editby" })
    @Html.HiddenFor(model => model[0].Col6, new { @id = "hf_editdate" })
    @Html.HiddenFor(model => model[0].Col7, new { @id = "hf_recid" })
    @Html.HiddenFor(model => model[0].Col8, new { @id = "hf_url" })
    @Html.HiddenFor(model => model[0].Col10, new { @id = "hf_tab_name" })
    @Html.HiddenFor(model => model[0].Col11, new { @id = "hf_where" })
    @Html.HiddenFor(model => model[0].Col12, new { @id = "hf_type" })
    @Html.HiddenFor(model => model[0].Col14, new { @id = "hf_mid" })
    @Html.HiddenFor(model => model[0].Col15, new { @id = "hf_m_id" })
    @Html.HiddenFor(model => model[0].Col16, new { @id = "vch_num" })
    @Html.HiddenFor(model => model[0].Col17, new { @id = "hf_rno" })
    @Html.HiddenFor(model => model[0].Col18, new { @id = "hf_cgstin" })
    @Html.HiddenFor(model => model[0].Col29, new { @id = "rbindent" })
    @Html.HiddenFor(model => model[0].Col99, new { @id = "localcur" })
    @Html.HiddenFor(model => model[0].Col100, new { @id = "hf_savenew" })
    @Html.HiddenFor(model => model[0].Col121, new { @id = "Update" })
    @Html.HiddenFor(model => model[0].Col122, new { @id = "Save" })
    @Html.HiddenFor(model => model[0].Col123, new { @id = "savenew" })
    @Html.HiddenFor(model => model[0].Col41, new { @id = "hf_ver" })
    @Html.HiddenFor(model => model[0].Col82, new { @id = "hf_vdst" })

    <style>
        .datepicker td, .datepicker th {
            background-color: white !important;
        }

        .datepicker.dropdown-menu {
            z-index: 99999 !important
        }

        .bootstrap-datetimepicker-widget.dropdown-menu {
            overflow: visible;
            height: 100%;
        }

        /*select2 height placement*/
        .select2-container {
            height: 34px !important;
            width: 100% !important;
        }

        .select2-container--default .select2-selection--multiple {
            max-height: 34px !important;
        }
        /*select2 height placement*/

    </style>
    
    <div class="row" @ViewBag.div_po2>
        @if (Model.Count < 1)
        { }
        else
        {
            for (int i = 0; i < Model.Count; i++)
            {
                DataTable dtm = new DataTable();
                if (Model[0].Col12 == "50" || Model[0].Col12 == "52" || Model[0].Col12 == "54")
                {
                    if (Model[i].Col29 == "002")
                    {
                        dtm = Model[i].dt1;
                        <div class="col-md-12 col-sm-12 col-xs-12">
                            <div class="x_panel" style="padding: 3px 15px !important">
                                <div class="x_content">
                                    <div class="row">
                                        <div class="grid-container">
                                            <div class="grid">
                                                @try
                                                {
                                                    foreach (DataColumn dc in dtm.Columns)
                                                    {
                                                        int mlength = 20;
                                                        try
                                                        {
                                                            mlength = dtm.Select("[" + dc.ColumnName + "] = MAX([" + dc.ColumnName + "])")[0][dc.ColumnName].ToString().Length;
                                                        }
                                                        catch (Exception err) { }
                                                        int k = 0;
                                                        if (dc.Ordinal == 0)
                                                        {
                                                            <div class="grid-col grid-col--fixed-left" id="col_@dc.Ordinal" style="width:10px">
                                                                <div class="grid-item grid-item--header">
                                                                    <p>@dc.ColumnName.ToString()</p>
                                                                </div>

                                                                @foreach (DataRow dr in dtm.Rows)
                                                                {
                                                                    <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)' data-sakeys="gloval">
                                                                        <input type="hidden" value="@dr[dc].ToString()" id="fstr_@dc.Ordinal" />
                                                                    </div>
                                                                }
                                                            </div>
                                                        }
                                                        else if (dc.Ordinal == 1)
                                                        {
                                                            <div class="grid-col grid-col--fixed-left" id="col_@dc.Ordinal" style="width:@(mlength * 8)px">
                                                                <div class="grid-item grid-item--header">
                                                                    <p>@dc.ColumnName.ToString()</p>
                                                                </div>

                                                                @foreach (DataRow dr in dtm.Rows)
                                                                {
                                                                    <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)' data-sakeys="gloval">
                                                                        <label>@(k + 1)</label>
                                                                    </div>
                                                                    k++;
                                                                }
                                                            </div>
                                                        }
                                                        else if (dc.Ordinal == 9)
                                                        {
                                                            <div class="grid-col" id="col_@dc.Ordinal" style="width:@(mlength * 8)px;left:100px;position:sticky; z-index: 2;background: white;">
                                                                <div class="grid-item grid-item--header">
                                                                    <p>@dc.ColumnName.ToString()</p>
                                                                </div>
                                                                @foreach (DataRow dr in dtm.Rows)
                                                                {
                                                                    <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)' contenteditable="false" onblur="calcamt();" data-sakeys="gloval">
                                                                        @dr[dc].ToString()
                                                                    </div>
                                                                }
                                                            </div>
                                                        }
                                                        else if (dc.Ordinal == 10)
                                                        {
                                                            <div class="grid-col" id="col_@dc.Ordinal" style="width:@(mlength * 8)px;left:100px;position:sticky; z-index: 2;background: white;">
                                                                <div class="grid-item grid-item--header">
                                                                    <p>@dc.ColumnName.ToString()</p>
                                                                </div>
                                                                @foreach (DataRow dr in dtm.Rows)
                                                                {
                                                                    <div class="row">
                                                                        <div class="col-sm-8">
                                                                            <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)' contenteditable="false" onblur="calcamt();" data-sakeys="gloval">
                                                                                @dr[dc].ToString()
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-sm-4">
                                                                            <span style="cursor:pointer" onclick="getirate('@dr[2].ToString()');"><i class="fa fa-search"></i></span>
                                                                        </div>
                                                                    </div>
                                                                }
                                                            </div>
                                                        }
                                                        else if (dc.Ordinal == 11)//discrate
                                                        {
                                                            <div class="grid-col" id="col_@dc.Ordinal" style="width:100px;">
                                                                <div class="grid-item grid-item--header">
                                                                    <p>@dc.ColumnName.ToString()</p>
                                                                </div>
                                                                @foreach (DataRow dr in dtm.Rows)
                                                                {
                                                                    <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)' contenteditable="false" onblur="caldiscamt();" data-sakeys="gloval">
                                                                        @dr[dc].ToString()
                                                                    </div>
                                                                }
                                                            </div>
                                                        }
                                                        else if (dc.Ordinal == 14)//discamt
                                                        {
                                                            <div class="grid-col" id="col_@dc.Ordinal" style="width:100px;">
                                                                <div class="grid-item grid-item--header">
                                                                    <p>@dc.ColumnName.ToString()</p>
                                                                </div>
                                                                @foreach (DataRow dr in dtm.Rows)
                                                                {
                                                                    <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)' contenteditable="false" onblur="caldiscrate();" data-sakeys="gloval">
                                                                        @dr[dc].ToString()
                                                                    </div>
                                                                }
                                                            </div>
                                                        }
                                                        else if (dc.Ordinal == 16)
                                                        {
                                                            <div class="grid-col" id="col_@dc.Ordinal" style="width:300px">
                                                                <div class="grid-item grid-item--header">
                                                                    <p>@dc.ColumnName.ToString()</p>
                                                                </div>

                                                                @foreach (DataRow dr in dtm.Rows)
                                                                {
                                                                    string id = "kcdate_" + dtm.Rows.IndexOf(dr);

                                                                    <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)' data-sakeys="gloval">
                                                                        <div class="row">
                                                                            <div id="mtxt" class="col-md-10 input-group">
                                                                                <input type="text" value='@dr[dc].ToString()' class="form-control sa-date-pre" style="position:relative;z-index:1000;width: 70%;left:30px;" />
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                }
                                                            </div>
                                                        }
                                                        else if (dc.Ordinal == 17)
                                                        {
                                                            <div class="grid-col" id="col_@dc.Ordinal" style="width:@(mlength * 8)px;left:100px;position:sticky; z-index: 2;background: white;">
                                                                <div class="grid-item grid-item--header">
                                                                    <p>@dc.ColumnName.ToString()</p>
                                                                </div>
                                                                @foreach (DataRow dr in dtm.Rows)
                                                                {
                                                                    <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)' contenteditable="false" data-sakeys="gloval">
                                                                        @dr[dc].ToString()
                                                                    </div>
                                                                }
                                                            </div>
                                                        }
                                                        else
                                                        {
                                                            <div class="grid-col" id="col_@dc.Ordinal" style="width:@(mlength * 8)px">
                                                                <div class="grid-item grid-item--header">
                                                                    <p>@dc.ColumnName.ToString()</p>
                                                                </div>
                                                                @foreach (DataRow dr in dtm.Rows)
                                                                {
                                                                    <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)' contenteditable="false">
                                                                        @dr[dc].ToString()
                                                                    </div>
                                                                }
                                                            </div>
                                                        }
                                                    }
                                                }
                                                catch (Exception err)
                                                {

                                                }

                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                    else
                    {
                        dtm = Model[i].dt2;
                        <div class="col-md-12 col-sm-12 col-xs-12">
                            <div class="x_panel" style="padding: 3px 15px !important">
                                <div class="x_content">
                                    <div class="row">
                                        <div class="grid-container">
                                            <div class="grid">
                                                @try
                                                {
                                                    foreach (DataColumn dc in dtm.Columns)
                                                    {
                                                        int mlength = 20;
                                                        try
                                                        {
                                                            mlength = dtm.Select("[" + dc.ColumnName + "] = MAX([" + dc.ColumnName + "])")[0][dc.ColumnName].ToString().Length;
                                                        }
                                                        catch (Exception err) { }
                                                        int k = 0;
                                                        if (dc.Ordinal == 0)
                                                        {
                                                            <div class="grid-col grid-col--fixed-left" id="col_@dc.Ordinal" style="width:10px">
                                                                <div class="grid-item grid-item--header">
                                                                    <p>@dc.ColumnName.ToString()</p>
                                                                </div>

                                                                @foreach (DataRow dr in dtm.Rows)
                                                                {
                                                                    <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)' data-sakeys="gloval">
                                                                        <input type="hidden" value="@dr[dc].ToString()" id="fstr_@dc.Ordinal" />
                                                                    </div>
                                                                }
                                                            </div>
                                                        }
                                                        else if (dc.Ordinal == 1)
                                                        {
                                                            <div class="grid-col grid-col--fixed-left" id="col_@dc.Ordinal" style="width:@(mlength * 8)px">
                                                                <div class="grid-item grid-item--header">
                                                                    <p>@dc.ColumnName.ToString()</p>
                                                                </div>

                                                                @foreach (DataRow dr in dtm.Rows)
                                                                {
                                                                    <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)' data-sakeys="gloval">
                                                                        <label>@(k + 1)</label>
                                                                    </div>
                                                                    k++;
                                                                }
                                                            </div>
                                                        }
                                                        else if (dc.Ordinal == 10)
                                                        {
                                                            <div class="grid-col" id="col_@dc.Ordinal" style="width:@(mlength * 8)px;left:100px;position:sticky; z-index: 2;background: white;">
                                                                <div class="grid-item grid-item--header">
                                                                    <p>@dc.ColumnName.ToString()</p>
                                                                </div>
                                                                @foreach (DataRow dr in dtm.Rows)
                                                                {
                                                                    <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)' contenteditable="false" onblur="calcbal();calcamt2();" data-sakeys="gloval">
                                                                        @dr[dc].ToString()
                                                                    </div>
                                                                }
                                                            </div>
                                                        }
                                                        else if (dc.Ordinal == 12)
                                                        {
                                                            <div class="grid-col" id="col_@dc.Ordinal" style="width:@(mlength * 8)px;left:100px;position:sticky; z-index: 2;background: white;">
                                                                <div class="grid-item grid-item--header">
                                                                    <p>@dc.ColumnName.ToString()</p>
                                                                </div>
                                                                @foreach (DataRow dr in dtm.Rows)
                                                                {
                                                                    <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)' contenteditable="false" onblur="calcamt2();" data-sakeys="gloval">
                                                                        @dr[dc].ToString()
                                                                    </div>
                                                                }
                                                            </div>
                                                        }
                                                        else if (dc.Ordinal == 13)//discrate
                                                        {
                                                            <div class="grid-col" id="col_@dc.Ordinal" style="width:100px;">
                                                                <div class="grid-item grid-item--header">
                                                                    <p>@dc.ColumnName.ToString()</p>
                                                                </div>
                                                                @foreach (DataRow dr in dtm.Rows)
                                                                {
                                                                    <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)' contenteditable="false" onblur="caldiscamt();" data-sakeys="gloval">
                                                                        @dr[dc].ToString()
                                                                    </div>
                                                                }
                                                            </div>
                                                        }
                                                        else if (dc.Ordinal == 16)//discamt
                                                        {
                                                            <div class="grid-col" id="col_@dc.Ordinal" style="width:100px;">
                                                                <div class="grid-item grid-item--header">
                                                                    <p>@dc.ColumnName.ToString()</p>
                                                                </div>
                                                                @foreach (DataRow dr in dtm.Rows)
                                                                {
                                                                    <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)' contenteditable="false" onblur="caldiscrate();" data-sakeys="gloval">
                                                                        @dr[dc].ToString()
                                                                    </div>
                                                                }
                                                            </div>
                                                        }
                                                        else if (dc.Ordinal == 18)//dlvry date
                                                        {
                                                            <div class="grid-col" id="col_@dc.Ordinal" style="width:300px">
                                                                <div class="grid-item grid-item--header">
                                                                    <p>@dc.ColumnName.ToString()</p>
                                                                </div>

                                                                @foreach (DataRow dr in dtm.Rows)
                                                                {
                                                                    string id = "kcdate_" + dtm.Rows.IndexOf(dr);

                                                                    <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)' data-sakeys="gloval">
                                                                        <div class="row">
                                                                            <div id="mtxt" class="col-md-10 input-group">
                                                                                <input type="text" value='@dr[dc].ToString()' class="form-control sa-date" style="position:relative;z-index:1000;width: 70%;left:30px;" />
                                                                                @*<input type="text" value='@dr[dc].ToString()' class="form-control sa-date-pre" style="position:relative;z-index:1000;width: 70%;left:30px;" />*@
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                }
                                                            </div>
                                                        }
                                                        else if (dc.Ordinal == 19)//remark
                                                        {
                                                            <div class="grid-col" id="col_@dc.Ordinal" style="width:@(mlength * 8)px;left:100px;position:sticky; z-index: 2;background: white;">
                                                                <div class="grid-item grid-item--header">
                                                                    <p>@dc.ColumnName.ToString()</p>
                                                                </div>
                                                                @foreach (DataRow dr in dtm.Rows)
                                                                {
                                                                    <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)' contenteditable="false" data-sakeys="gloval">
                                                                        @dr[dc].ToString()
                                                                    </div>
                                                                }
                                                            </div>
                                                        }
                                                        else
                                                        {
                                                            <div class="grid-col" id="col_@dc.Ordinal" style="width:@(mlength * 8)px">
                                                                <div class="grid-item grid-item--header">
                                                                    <p>@dc.ColumnName.ToString()</p>
                                                                </div>
                                                                @foreach (DataRow dr in dtm.Rows)
                                                                {
                                                                    <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)' contenteditable="false">
                                                                        @dr[dc].ToString()
                                                                    </div>
                                                                }
                                                            </div>
                                                        }
                                                    }
                                                }
                                                catch (Exception err)
                                                {

                                                }

                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                }
            }
        }
    </div>
    <div class="row" @ViewBag.div_po3>
        <div class="col-sm-3">
            <div class="row">
                <div class='col-sm-12'>
                    <label for="first-name">Gross Amount in Words</label>
                    <div class="form-group ">
                        <div class='input-group'>
                            @Html.TextAreaFor(model => model[0].Col55, new { @id = "txt_amtword", rows = "4", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @ReadOnly = "true" })
                            <span class="input-group-addon formclass"></span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class='col-sm-12'>
                    <label for="first-name">Tax Amount in Words <span class="ClientProfileLabelColor">*</span></label>
                    <div class="form-group ">
                        <div class='input-group'>
                            @Html.TextAreaFor(model => model[0].Col53, new { @id = "txt_taxamtword", rows = "4", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @ReadOnly = "true" })
                            <span class="input-group-addon formclass"></span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class='col-sm-12'>
                    <label for="first-name">Net Amount in Words <span class="ClientProfileLabelColor">*</span></label>
                    <div class="form-group ">
                        <div class='input-group'>
                            @Html.TextAreaFor(model => model[0].Col54, new { @id = "txt_netamtword", rows = "4", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @ReadOnly = "true" })
                            <span class="input-group-addon formclass"></span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class='col-sm-12'>
                    <label for="first-name">Remarks</label>
                    <div class="form-group ">
                        <div class='input-group'>
                            @Html.TextAreaFor(model => model[0].Col31, new { @id = "txt_shiptoname", rows = "4", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox" })
                            <span class="input-group-addon formclass"></span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class='col-sm-12'>
                    <label for="first-name">General Terms and Conditions</label>
                    <div class="form-group ">
                        <div class='input-group'>
                            @Html.TextAreaFor(model => model[0].Col32, new { @id = "txt_shiptoname", rows = "4", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @MaxLength = "79" })
                            <span class="input-group-addon formclass"></span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-sm-9">
            @*<!----heading--->*@
            <div class="row">
                <div class="col-sm-3">
                    <div class="row">
                        <div class="col-sm-4">
                            <label for="first-name">Add Charges </label>
                        </div>
                        <div class="col-sm-8">
                            <label for="first-name">Particular </label>
                        </div>
                    </div>
                </div>
                <div class="col-sm-9">
                    <div class="row">
                        <div class="col-sm-3">
                            <label for="first-name">Amount </label>
                        </div>
                        <div class="col-sm-3">
                            <label for="first-name">IGST </label>
                        </div>
                        <div class="col-sm-3">
                            <label for="first-name">CGST </label>
                        </div>
                        <div class="col-sm-3">
                            <label for="first-name">SGST </label>
                        </div>
                    </div>
                </div>
            </div>
            @*<!----heading--->*@
            <hr />
            @*<!----fixed basic row--->*@
            <div class="row">
                <div class="col-sm-3">
                    <div class="row">
                        <div class="col-sm-4">
                            <input name="command" type="button" onclick="getchrgs();" value="+" style="max-height: 20px;padding-top: 0px;width:30px;" class="btn btn-info btn-sm" data-toggle="tooltip" title="Add Charge" />
                        </div>
                        <div class="col-sm-8">
                            <label for="first-name">Basic Amount </label>
                        </div>
                    </div>
                </div>
                <div class="col-sm-9">
                    <div class="row">
                        <div class="col-sm-3">
                            <div class="form-group">
                                <div class='input-group'>
                                    @Html.TextBoxFor(model => model[0].Col33, new { @id = "txt_bamt", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @ReadOnly = "true" })
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-3">
                            <div class="form-group">
                                <div class='input-group'>
                                    @Html.TextBoxFor(model => model[0].Col34, new { @id = "txt_bigst", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @ReadOnly = "true" })
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-3">
                            <div class="form-group">
                                <div class='input-group'>
                                    @Html.TextBoxFor(model => model[0].Col35, new { @id = "txt_bcgst", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @ReadOnly = "true" })
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-3">
                            <div class="form-group">
                                <div class='input-group'>
                                    @Html.TextBoxFor(model => model[0].Col36, new { @id = "txt_bsgst", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @ReadOnly = "true" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            @*<!----fixed basic row--->*@

            @*<!----variable other charges--->*@

            @if (Model[0].LTM1 != null)
            {
                for (int k = 0; k < Model[0].LTM1.Count; k++)
                {
                    <div class="row">
                        <div class="col-sm-3">
                            <div class="row">
                                <div class="col-sm-4">
                                    <input name="command" type="button" value="-" onclick="podelrno(event,'@Model[0].LTM1[k].Col14');" style="max-height: 20px;padding-top: 0px;width:30px;" class="btn btn-info btn-sm" data-toggle="tooltip" title="Remove Charge" />
                                    @Html.HiddenFor(model => model[0].LTM1[k].Col14, new { @id = "hf_rno" })
                                </div>
                                <div class="col-sm-8">
                                    <label for="first-name">
                                        @Html.DisplayFor(model => model[0].LTM1[k].Col23, new { @id = "txt_chrgsname", @ReadOnly = "true", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox" })
                                        @Html.HiddenFor(model => model[0].LTM1[k].Col23, new { @id = "hf_chrgsname" })
                                        @Html.HiddenFor(model => model[0].LTM1[k].Col15, new { @id = "hf_chrgs" })
                                    </label>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-9">
                            <div class="row">
                                <div class='col-sm-3'>
                                    <div class="row">
                                        <div class="col-sm-10">
                                            <div class="form-group">
                                                <div class='input-group'>
                                                    @Html.TextBoxFor(model => model[0].LTM1[k].Col16, new { @id = "txt_amt", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class='col-sm-2'>
                                            <a id="btn_str" data-toggle="tooltip" data-placement="top" title="Select Rate" onclick="getrate('@Model[0].LTM1[k].Col14');"><i class="fa fa-search"></i></a>
                                            @Html.HiddenFor(model => model[0].LTM1[k].Col13, new { @id = "hf_rt" })
                                        </div>
                                    </div>
                                </div>
                                <div class='col-sm-3'>
                                    <div class="row">
                                        <div class="col-sm-5">
                                            <div class="form-group">
                                                <div class='input-group'>
                                                    @Html.TextBoxFor(model => model[0].LTM1[k].Col17, new { @id = "txt_igstrt", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @ReadOnly = "true" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-sm-7">
                                            <div class="form-group">
                                                <div class='input-group'>
                                                    @Html.TextBoxFor(model => model[0].LTM1[k].Col18, new { @id = "txt_igstamt", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @ReadOnly = "true" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class='col-sm-3'>
                                    <div class="row">
                                        <div class="col-sm-5">
                                            <div class="form-group">
                                                <div class='input-group'>
                                                    @Html.TextBoxFor(model => model[0].LTM1[k].Col19, new { @id = "txt_cgstrt", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @ReadOnly = "true" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-sm-7">
                                            <div class="form-group">
                                                <div class='input-group'>
                                                    @Html.TextBoxFor(model => model[0].LTM1[k].Col20, new { @id = "txt_cgstamt", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @ReadOnly = "true" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class='col-sm-3'>
                                    <div class="row">
                                        <div class="col-sm-5">
                                            <div class="form-group">
                                                <div class='input-group'>
                                                    @Html.TextBoxFor(model => model[0].LTM1[k].Col21, new { @id = "txt_sgstrt", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @ReadOnly = "true" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-sm-7">
                                            <div class="form-group">
                                                <div class='input-group'>
                                                    @Html.TextBoxFor(model => model[0].LTM1[k].Col22, new { @id = "txt_sgstamt", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @ReadOnly = "true" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }

            @*<!----variable other charges--->*@

            <hr />
            @*<!----fixed total row--->*@
            <div class="row">
                <div class="col-sm-3">
                    <div class="row">
                        <div class="col-sm-4">
                        </div>
                        <div class="col-sm-8">
                            <label for="first-name">Total Amount </label>
                        </div>
                    </div>
                </div>
                <div class="col-sm-9">
                    <div class="row">
                        <div class="col-sm-3">
                            <div class="form-group">
                                <div class='input-group'>
                                    @Html.TextBoxFor(model => model[0].Col37, new { @id = "txt_gamt", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @ReadOnly = "true" })
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-3">
                            <div class="form-group">
                                <div class='input-group'>
                                    @Html.TextBoxFor(model => model[0].Col38, new { @id = "txt_gigst", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @ReadOnly = "true" })
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-3">
                            <div class="form-group">
                                <div class='input-group'>
                                    @Html.TextBoxFor(model => model[0].Col39, new { @id = "txt_gcgst", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @ReadOnly = "true" })
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-3">
                            <div class="form-group">
                                <div class='input-group'>
                                    @Html.TextBoxFor(model => model[0].Col40, new { @id = "txt_gsgst", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @ReadOnly = "true" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            @*<!----fixed total row--->*@

            <hr />
            @*<!----NET total row--->*@
            <div class="row">
                <div class="col-sm-3">
                    <div class="row">
                        <div class="col-sm-4">
                        </div>
                        <div class="col-sm-8">
                            <label for="first-name">Net Amount </label>
                        </div>
                    </div>
                </div>
                <div class="col-sm-9">
                    <div class="row">
                        <div class="col-sm-12">
                            <div class="form-group">
                                <div class='input-group'>
                                    @Html.TextBoxFor(model => model[0].Col69, new { @id = "txt_netamt", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @ReadOnly = "true" })
                                    <span class="input-group-addon formclass"></span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            @*<!----NET total row--->*@

        </div>
    </div>  
    <hr @ViewBag.div_hr />
    <div class="row" @ViewBag.div_po4>
        <div class="col-md-2">
            <div class='form-group'>
                <div class='input-group'>
                    <button type='submit' class='btn btn-success form-control sa-button' id='btnacpo' name='command' value='Accept PO' onclick='setTableDatat();'>Accept PO</button>
                    <span class='input-group-addon formclass'></span>
                </div>
            </div>
        </div>
        <div class="col-md-2">
            <div class='form-group'>
                <div class='input-group'>
                    <button type='submit' class='btn btn-danger form-control sa-button' id='btnrepo' name='command' value='Reject PO' onclick='setTableDatat();'>Reject PO</button>
                    <span class='input-group-addon formclass'></span>
                </div>
            </div>
        </div>
    </div>

    <input type="hidden" name="hfrow" id="hfrow" />
    <input type="hidden" name="hftable" id="hftable" />
    <input type="submit" id="callback1" value="Callback" onclick="setTableDatat();" formnovalidate name="Command" title="callback" style="visibility:hidden" class="btn btn-primary" />
}

<script type="text/javascript">
    $(document).ready(function () {
        @Html.Raw(ViewBag.scripCall);
        $("[id*=hf_controller]").val('@ViewContext.RouteData.Values["Controller"].ToString()');
        $("[id*=hf_viewname]").val('@Path.GetFileNameWithoutExtension(Server.MapPath(VirtualPath))');
        if (!isPostBack()) {
            $(".fa-chevron-up").addClass('fa-chevron-down');
            $(".fa-chevron-up").removeClass('fa-chevron-up');
            $('.kc').hide();
        }
        else {

            var kcs = $('.kc');
            for (var l = 0; l < kcs.length; l++) {

                var child = $(".kc")[l].parentElement.children[0].children[1].children[0].children[0].children[0];
                if (child.classList.contains('fa-chevron-up')) {
                    $(".kc")[l].style.display = "none";
                    $(child).removeClass("fa-chevron-up");
                    $(child).addClass("fa-chevron-down");
                }
            }
        }

        if ($("#rbindent")[0].value == "002") { calcamt(); }
        else { calcamt2(); }

        $('.select2-dtype').on("change", function (e) {
            var cols = $("[id$=row_" + $(this)[0].id.split('_')[2] + "]");
            cols[12].innerText = e.currentTarget.value;
            calcamt();
        });

        chktc();
        gstavl();
        updctrl();

        if ($("#txt_gstin")[0].value.trim().toUpperCase() == "NOT REGISTERED" && $("#rd_gstavln")[0].checked == true) {
            $("#rd_gstavly").attr('readonly', true);
            $("#rd_gstavln").attr('readonly', true);
        }
        else {
            $("#rd_gstavly").removeAttr('readonly');
            $("#rd_gstavln").removeAttr('readonly');
        }
    });

    function getirate(val) { if (val.trim() != "") var data = show_Foo('Po rate', 'PORATE', '0', '@viewName', '@controllerName', val); }
    function caldiscamt() {
        try {
            var iamt = 0, sumamt = 0;
            debugger
            var heads = $("[id*=col_]");
            var rows = $(heads).eq(0).find("[id*=row_]");
            for (var r = 0; r < rows.length; r++) {
                var row = $("[id=row_" + r + "]");

                if ($("#rbindent")[0].value == "002") {
                    if (row[12].innerText.trim() != "") { iamt = parseFloat(row[12].innerText.trim()); }
                    var idiscrate = row[11].innerText.split('%')[0];
                    var discamt = iamt * idiscrate / 100;
                    row[14].innerText = discamt;
                    calcamt();
                }
                else {
                    if (row[14].innerText.trim() != "") { iamt = parseFloat(row[14].innerText.trim()); }
                    var idiscrate = row[13].innerText.split('%')[0];
                    var discamt = iamt * idiscrate / 100;
                    row[16].innerText = discamt;
                    calcamt2();
                }
            }
        }
        catch (err) { return; }
    }
    function caldiscrate() {
        try {
            debugger
            var iamt = 0, discamt = 0, restamt = 0;
            var idiscrate = "";
            var heads = $("[id*=col_]");
            var rows = $(heads).eq(0).find("[id*=row_]");
            for (var r = 0; r < rows.length; r++) {
                var row = $("[id=row_" + r + "]");

                if ($("#rbindent")[0].value == "002") {
                    if (row[12].innerText.trim() != "") { iamt = parseFloat(row[12].innerText.trim()); }
                    if (row[14].innerText.trim() != "") { discamt = parseFloat(row[14].innerText.trim()); }
                    idiscrate = (discamt / iamt) * 100;
                    row[11].innerText = idiscrate;
                    calcamt();
                }
                else {
                    if (row[14].innerText.trim() != "") { iamt = parseFloat(row[14].innerText.trim()); }
                    if (row[16].innerText.trim() != "") { discamt = parseFloat(row[16].innerText.trim()); }
                    idiscrate = (discamt / iamt) * 100;
                    row[13].innerText = idiscrate;
                    calcamt2();
                }
            }
        }
        catch (err) { /*alert(err);*/ return; }
    }
    function calcamt() {
        try {

            var sumamt = 0, sumdiscamt = 0, finalamt = 0, gstamt = 0, igst = 0, sgst = 0, cgst = 0, taxamt = 0;
            var tamt = 0, tigst = 0, tsgst = 0, tcgst = 0;
            var taxrate = "", vgstin = "", cgstin = "";
            var taxrate = "", taxrt = "";
            var vgstin = "", cgstin = "";

            if ($("[id=txt_gstin]").val() == "Not Registered") {
                vgstin = $("[id=txt_gstin]").val();
                taxrate = "0%";
            }
            else {
                vgstin = $("[id=txt_gstin]").val().slice(0, 2);
                if ($("#hf_pgsttype")[0].value == "C") { taxrate = "0%"; }
            }
            cgstin = $("[id=hf_cgstin]").val().slice(0, 2);

            var heads = $("[id*=col_]");
            var rows = $(heads).eq(0).find("[id*=row_]");
            for (var r = 0; r < rows.length; r++) {
                var row = $("[id=row_" + r + "]");

                if (taxrate == "0%" || taxrate == "0") { row[7].innerText = taxrate; }
                var txrt = row[7].innerText.split('%')[0];

                var qtyord = row[9].innerText;
                var irate = row[10].innerText;

                var iamt = qtyord * irate;
                row[12].innerText = iamt;
                discamt = row[14].innerText;

                var taxamt = (iamt - discamt) * txrt / 100;
                row[13].innerText = taxamt;

                var lamt = (iamt - discamt) + taxamt;
                row[15].innerText = lamt;

                sumamt = sumamt + (iamt - discamt);
                gstamt = gstamt + taxamt;
                //sumdiscamt = sumdiscamt + discamt;
            }

            if (vgstin === cgstin) {

                $("#txt_bcgst")[0].value = ((gstamt / 2).toFixed(2)).toString();
                cgst = parseFloat($("#txt_bcgst")[0].value);

                $("#txt_bsgst")[0].value = ((gstamt / 2).toFixed(2)).toString();
                sgst = parseFloat($("#txt_bsgst")[0].value);
            }
            else {
                $("#txt_bigst")[0].value = ((gstamt).toFixed(2)).toString();
                igst = parseFloat($("#txt_bigst")[0].value);
            }

            $("#txt_bamt")[0].value = (sumamt).toFixed(2);//basic amt
            $("#txt_bigst")[0].value = (parseFloat(igst).toFixed(2)).toString();//basic igst
            $("#txt_bcgst")[0].value = (parseFloat(cgst).toFixed(2)).toString();//basic cgst
            $("#txt_bsgst")[0].value = (parseFloat(sgst).toFixed(2)).toString();//basic sgst

            var ltxtamt = $("[id=txt_amt]");
            var ltxtigstamt = $("[id=txt_igstamt]");
            var ltxtcgstamt = $("[id=txt_cgstamt]");
            var ltxtsgstamt = $("[id=txt_sgstamt]");

            for (var k = 0; k < ltxtamt.length; k++) {
                tamt = tamt + parseFloat(ltxtamt[k].value);//chrgamt
                tigst = tigst + parseFloat(ltxtigstamt[k].value);//chrgigst
                tcgst = tcgst + parseFloat(ltxtcgstamt[k].value);//chrgcgst
                tsgst = tsgst + parseFloat(ltxtsgstamt[k].value);//chrgsgst
            }

            $("#txt_gamt")[0].value = (tamt + sumamt).toFixed(2);//totamt
            $("#txt_gigst")[0].value = (parseFloat(tigst) + parseFloat(igst)).toFixed(2);//totigst
            $("#txt_gcgst")[0].value = (parseFloat(tcgst) + parseFloat(cgst)).toFixed(2);//totcgst
            $("#txt_gsgst")[0].value = (parseFloat(tsgst) + parseFloat(sgst)).toFixed(2);//totsgst
            $("#txt_netamt")[0].value = (parseFloat($("#txt_gamt")[0].value) + parseFloat($("#txt_gigst")[0].value) + parseFloat($("#txt_gcgst")[0].value) + parseFloat($("#txt_gsgst")[0].value)).toFixed(2);//netamt

            number2text($("#txt_gamt")[0].value);
            taxnumber2text(parseFloat($("#txt_gigst")[0].value) + parseFloat($("#txt_gcgst")[0].value) + parseFloat($("#txt_gsgst")[0].value));
            netnumber2text($("#txt_netamt")[0].value);
        }
        catch (err) { /*alert(err);*/ return; }
    }
    function setTableDatat() {
        try {
            debugger
            datatable = new Array();

            var heads = $("[id*=col_]");
            var rows = $(heads).eq(0).find("[id*=row_]");
            for (var r = 0; r < rows.length; r++) {
                var row = $("[id=row_" + r + "]");
                var arr = new Array();
                for (var h = 0; h < heads.length; h++) {
                    var obj = {};
                    var vall = "";
                    if (h == 16) {
                        val = $(row[h]).eq(0).find("input").val();
                    }

                    if ($(row[h]).find("input").not("[type=button],[type=submit],[id^=dd_item],[id^=s2id]").eq(0)[0] != undefined
                        && $(row[h]).find("input").not("[type=button],[type=submit],[id^=dd_item],[id^=s2id]").eq(0)[0].type == "checkbox") {
                        vall = $(row[h]).find("input").not("[type=button],[type=submit],[id^=dd_item],[id^=s2id]").eq(0)[0].checked;
                    }
                    else if ($(row[h]).find("input").not("[type=button],[type=submit],[id^=dd_item],[id^=s2id]").length > 0) {
                        vall = $(row[h]).find("input").not("[type=button],[type=submit],[id^=dd_item],[id^=s2id]").val();
                    }
                    else if ($(row[h]).find("select").length > 0) {
                        vall = $(row[h]).find("select").val();
                    }
                    else {
                        vall = row[h].innerText;
                    }
                    obj[heads[h].children[0].innerText] = vall;
                    arr.push(obj);
                }
                datatable.push(arr);
            }
        }
        catch (err) { /*alert(err);*/ return; }
        $("#hftable").val(JSON.stringify(datatable));
        //PageMethods.settable(datatable);


    }
    function sethfval(val) {

        $("#hfrow").val(val);
        setTableDatat();
    }

    function getpolist() { var data = show_Foo('Select PO', 'COPYPO', '1', '@viewName', '@controllerName'); }
    function inpo() {  var data = show_Foo('Select Pending PO', 'INPO', '1', '@viewName', '@controllerName'); }
    function acpo() {  var data = show_Foo('Select Accepted PO', 'ACPO', '1', '@viewName', '@controllerName'); }
    function rejpo() {  var data = show_Foo('Select Rejected PO', 'REJPO', '1', '@viewName', '@controllerName'); }        
    function getrate(val) { var data = show_Foo('Select Rate', 'RATE', '1', '@viewName', '@controllerName', val); }

    function podelrno(evt, id) {
        evt.preventDefault();
        var guid = '@MyGuid';
        var obj = { "value": id, "guid": guid };
        myMethod_C("@controllerName", "@viewName", "podelrno", obj, onsuccessdel,onfailuredel);
        //myMethod('@controllerName', '@viewName', "podelrno", obj, null);
        //$("#callback1").click();
    }
    function onsuccessdel(response) {
        debugger
        $("#callback1").click();
    }
    function onfailuredel(response) {
        debugger
        $("#callback1").click();
    }
    function hidep(ctrl) {
        var actrl = $(ctrl).find("a[id*=ahide]")[0];
        hide(actrl);
    }
    function hide(ctrl) {

        //$(ctrl).closest("div.x_content").hide();

        if (ctrl.children[0].classList.contains('fa-chevron-up')) {
            $(ctrl.children[0]).removeClass('fa-chevron-up');
            $(ctrl.children[0]).addClass('fa-chevron-down');
            ctrl.closest("div").parentElement.children[1].style.display = 'none';

        }
        else {
            $(ctrl.children[0]).removeClass('fa-chevron-down');
            $(ctrl.children[0]).addClass('fa-chevron-up');
            ctrl.closest("div").parentElement.children[1].style.display = 'block';
        }

    }

    function chktc() {
        if ($("#rd_tcy")[0].checked == true) $("#txt_tcr").removeAttr('readonly');
        else $("#txt_tcr").attr('readonly', true);
    }
    function gstavl() {
        if ($("#rd_gstavln")[0].checked == true) $("#txt_gstre").attr('readonly', true);
        else $("#txt_gstre").removeAttr('readonly');
    }
    function getitem() {

        var icode = "", chkcode = "", ptype = "";
        //$(".sa-input").attr("onclick", "return false;");
        //ptype = $(".sa-input:checked")[0].value;
        ptype = $("#rbindent")[0].value;

        var heads = $("[id*=col_]");
        var rows = $(heads).eq(0).find("[id*=row_]");
        for (var r = 0; r < rows.length; r++) {

            var row = $("[id=row_" + r + "]");
            if (ptype == "001") chkcode = row.eq(0).find("[id*=fstr]").val().trim();
            else if (ptype = "002") chkcode = row[2].innerText.trim();
            if (chkcode != "-" && chkcode!="") {
                icode = icode + chkcode + ",";
            }
        }

        var data = show_Foo('Select Items', 'ITEM', '2', '@viewName', '@controllerName', icode, ptype);
    }

    function number2text(value) {
        var fraction = Math.round(frac(value) * 100);
        var f_text = "";

        if (fraction > 0) { f_text = "AND " + convert_number(fraction) + " PAISE"; }
        txt_amtword.value = convert_number(value) + " RUPEE " + f_text + " ONLY";
    }
    function taxnumber2text(value) {
        var fraction = Math.round(frac(value) * 100);
        var f_text = "";

        if (fraction > 0) { f_text = "AND " + convert_number(fraction) + " PAISE"; }
        txt_taxamtword.value = convert_number(value) + " RUPEE " + f_text + " ONLY";
    }
    function netnumber2text(value) {
        var fraction = Math.round(frac(value) * 100);
        var f_text = "";

        if (fraction > 0) { f_text = "AND " + convert_number(fraction) + " PAISE"; }
        txt_netamtword.value = convert_number(value) + " RUPEE " + f_text + " ONLY";
    }
    function frac(f) { return f % 1; }
    function convert_number(number) {
        if ((number < 0) || (number > 999999999)) { return "NUMBER OUT OF RANGE!"; }
        var Gn = Math.floor(number / 10000000);  /* Crore */
        number -= Gn * 10000000;
        var kn = Math.floor(number / 100000);     /* lakhs */
        number -= kn * 100000;
        var Hn = Math.floor(number / 1000);      /* thousand */
        number -= Hn * 1000;
        var Dn = Math.floor(number / 100);       /* Tens (deca) */
        number = number % 100;               /* Ones */
        var tn = Math.floor(number / 10);
        var one = Math.floor(number % 10);
        var res = "";

        if (Gn > 0) { res += (convert_number(Gn) + " CRORE"); }
        if (kn > 0) {
            res += (((res == "") ? "" : " ") +
                convert_number(kn) + " LAKH");
        }
        if (Hn > 0) {
            res += (((res == "") ? "" : " ") +
                convert_number(Hn) + " THOUSAND");
        }

        if (Dn) {
            res += (((res == "") ? "" : " ") +
                convert_number(Dn) + " HUNDRED");
        }

        var ones = Array("", "ONE", "TWO", "THREE", "FOUR", "FIVE", "SIX", "SEVEN", "EIGHT", "NINE", "TEN", "ELEVEN", "TWELVE", "THIRTEEN", "FOURTEEN", "FIFTEEN", "SIXTEEN", "SEVENTEEN", "EIGHTEEN", "NINETEEN");
        var tens = Array("", "", "TWENTY", "THIRTY", "FOURTY", "FIFTY", "SIXTY", "SEVENTY", "EIGHTY", "NINETY");

        if (tn > 0 || one > 0) {
            if (!(res == "")) {
                res += " AND ";
            }
            if (tn < 2) {
                res += ones[tn * 10 + one];
            }
            else {
                res += tens[tn];
                if (one > 0) {
                    res += ("-" + ones[one]);
                }
            }
        }

        if (res == "") {
            res = "ZERO";
        }
        return res;
    }

    function updctrl() {
        if ($("#rbindent")[0].value == "002") {
            $("#div_temp").show();
            $("#div_upd").show();
            $("#div_btnupd").show();
        }
        else {
            $("#div_temp").hide();
            $("#div_upd").hide();
            $("#div_btnupd").hide();
        }
    }
    function potemp(evt) {
          evt.preventDefault();
          var $form = $("#potemp");

          $.ajax({
              type: "POST",
              url: "/Purchase/SetSession",
              data: $form.serialize() + "&Name=model",
              dataType: "json",
              traditional: true,
              success: function (response) {
                  window.location.href = "@Url.RouteUrl(new { Controller = "Purchase", Action = "potemp" })";
              },
              error: function (err) {
                   window.location.href = "@Url.RouteUrl(new { Controller = "Purchase", Action = "potemp" })";
              }
          });
    }

    function calcamt2() {
        try {

            var sumamt = 0, sumdiscamt = 0, finalamt = 0, gstamt = 0, igst = 0, sgst = 0, cgst = 0, taxamt = 0;
            var tamt = 0, tigst = 0, tsgst = 0, tcgst = 0;
            var taxrate = "", vgstin = "", cgstin = "";
            var taxrate = "", taxrt = "";
            var vgstin = "", cgstin = "";

            if ($("[id=txt_gstin]").val() == "Not Registered") {
                vgstin = $("[id=txt_gstin]").val();
                taxrate = "0%";
            }
            else {
                vgstin = $("[id=txt_gstin]").val().slice(0, 2);
                if ($("#hf_pgsttype")[0].value == "C") { taxrate = "0%"; }
            }
            cgstin = $("[id=hf_cgstin]").val().slice(0, 2);

            var heads = $("[id*=col_]");
            var rows = $(heads).eq(0).find("[id*=row_]");
            for (var r = 0; r < rows.length; r++) {
                var row = $("[id=row_" + r + "]");

                if (taxrate == "0%" || taxrate == "0") { row[7].innerText = taxrate; }
                var txrt = row[7].innerText.split('%')[0];

                var qtyord = row[10].innerText;
                var irate = row[12].innerText;

                var iamt = qtyord * irate;
                row[14].innerText = iamt;
                discamt = row[16].innerText;

                var taxamt = (iamt - discamt) * txrt / 100;
                row[15].innerText = taxamt;

                var lamt = (iamt - discamt) + taxamt;
                row[17].innerText = lamt;

                sumamt = sumamt + (iamt - discamt);
                gstamt = gstamt + taxamt;
                //sumdiscamt = sumdiscamt + discamt;
            }

            if (vgstin === cgstin) {

                $("#txt_bcgst")[0].value = ((gstamt / 2).toFixed(2)).toString();
                cgst = parseFloat($("#txt_bcgst")[0].value);

                $("#txt_bsgst")[0].value = ((gstamt / 2).toFixed(2)).toString();
                sgst = parseFloat($("#txt_bsgst")[0].value);
            }
            else {
                $("#txt_bigst")[0].value = ((gstamt).toFixed(2)).toString();
                igst = parseFloat($("#txt_bigst")[0].value);
            }

            $("#txt_bamt")[0].value = (sumamt).toFixed(2);//basic amt
            $("#txt_bigst")[0].value = (parseFloat(igst).toFixed(2)).toString();//basic igst
            $("#txt_bcgst")[0].value = (parseFloat(cgst).toFixed(2)).toString();//basic cgst
            $("#txt_bsgst")[0].value = (parseFloat(sgst).toFixed(2)).toString();//basic sgst

            var ltxtamt = $("[id=txt_amt]");
            var ltxtigstamt = $("[id=txt_igstamt]");
            var ltxtcgstamt = $("[id=txt_cgstamt]");
            var ltxtsgstamt = $("[id=txt_sgstamt]");

            for (var k = 0; k < ltxtamt.length; k++) {
                tamt = tamt + parseFloat(ltxtamt[k].value);//chrgamt
                tigst = tigst + parseFloat(ltxtigstamt[k].value);//chrgigst
                tcgst = tcgst + parseFloat(ltxtcgstamt[k].value);//chrgcgst
                tsgst = tsgst + parseFloat(ltxtsgstamt[k].value);//chrgsgst
            }

            $("#txt_gamt")[0].value = (tamt + sumamt).toFixed(2);//totamt
            $("#txt_gigst")[0].value = (parseFloat(tigst) + parseFloat(igst)).toFixed(2);//totigst
            $("#txt_gcgst")[0].value = (parseFloat(tcgst) + parseFloat(cgst)).toFixed(2);//totcgst
            $("#txt_gsgst")[0].value = (parseFloat(tsgst) + parseFloat(sgst)).toFixed(2);//totsgst
            $("#txt_netamt")[0].value = (parseFloat($("#txt_gamt")[0].value) + parseFloat($("#txt_gigst")[0].value) + parseFloat($("#txt_gcgst")[0].value) + parseFloat($("#txt_gsgst")[0].value)).toFixed(2);//netamt

            number2text($("#txt_gamt")[0].value);
            taxnumber2text(parseFloat($("#txt_gigst")[0].value) + parseFloat($("#txt_gcgst")[0].value) + parseFloat($("#txt_gsgst")[0].value));
            netnumber2text($("#txt_netamt")[0].value);
        }
        catch (err) {/* alert(err);*/ return; }
    }
    function calcbal() {
        try {
            var heads = $("[id*=col_]");
            var rows = $(heads).eq(0).find("[id*=row_]");
            for (var r = 0; r < rows.length; r++) {
                var row = $("[id=row_" + r + "]");

                if ($("#rbindent")[0].value == "001") {
                    var qtyord = parseFloat(row[9].innerText.trim());
                    var qtyreq = parseFloat(row[10].innerText.trim());
                    if (qtyreq > qtyord) {
                        row[10].innerText = qtyord;
                        showmsgJS(1, "QtyReq cannot be more than QtyOrd", 2);
                        return;
                    }
                    var qtybal = qtyord - qtyreq;
                    row[11].innerText = qtybal;
                    calcamt2();
                }
            }
        }
        catch (err) { /*alert(err);*/ return; }
    }

</script>