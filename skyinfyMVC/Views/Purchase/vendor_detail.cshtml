@using System.Data;
@model IList<skyinfyMVC.Models.Tmodelmain>
@{
    string MyGuid = "";
    MyGuid = Model[0].Col15;
    sgenFun sgen;
    sgen = new sgenFun(MyGuid);
    string userCode = sgen.GetCookie(MyGuid, "userCode");
    Layout = "~/Views/Shared/_MasterPage.cshtml";
    var viewName = sgen.GetSession(MyGuid, "viewName").ToString();
    var controllerName = sgen.GetSession(MyGuid, "controllerName").ToString();

    string cg_com_name = sgen.GetCookie(MyGuid,"cg_com_name");
    string basestr = "", imgdisplay = "", base64 = "";
    string serverpath = Server.MapPath("~/Uploads/" + cg_com_name.Replace(" ", "") + "/");
    var ispc = false;
    var isms = false;
    var isgs = false;
    var isvr = false;
    var isbchq = false;

    var onclick = "";
    var imgclosedisplay = "";
}
@using (Html.BeginForm(viewName, controllerName, new { @m_id = EncryptDecrypt.Encrypt(Model[0].Col15), @mid = EncryptDecrypt.Encrypt(Model[0].Col14) }, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="row">
        <div class="col-sm-4">
            <div class="form-group">
                <div class='input-group'>
                    <div class="title_left">
                        <h3>@Model[0].Col9</h3>
                    </div>
                    <span class="input-group-addon formclass"></span>
                </div>
            </div>
        </div>
        <div class="col-md-8">
            <div class="row">
                <div class="col-sm-2">
                    <div class="form-group">
                        <div class='input-group'>
                            <input type="submit" class="btn btn-primary form-control sa-button" @ViewBag.vnew id="btnnew" name="command" value="New" />
                            <span class="input-group-addon formclass"></span>
                        </div>
                    </div>
                </div>
                <div class='col-sm-2'>
                    <div class="form-group">
                        <div class='input-group'>
                            <input type="button" class="btn btn-warning form-control sa-button" @ViewBag.vedit id="btnedit" name="command" value="Edit" onclick="editfun();" />
                            <span class="input-group-addon formclass"></span>
                        </div>
                    </div>
                </div>
                <div class='col-sm-2'>
                    <div class="form-group">
                        <div class='input-group'>
                            <input type="submit" class="btn btn-success form-control sa-button" @ViewBag.vsave id="btnsave" name="command" value="@Model[0].Col13" />
                            <span class="input-group-addon formclass"></span>
                        </div>
                    </div>
                </div>
                <div class='col-sm-2'>
                    <div class="form-group">
                        <div class='input-group'>
                            <input type="button" class="btn btn-info form-control sa-button" id="btndetail" name="command" value="View" onclick="viewfun();" />
                            <span class="input-group-addon formclass"></span>
                        </div>
                    </div>
                </div>
                <div class='col-sm-2'>
                    <div class="form-group">
                        <div class='input-group'>
                            <input type="submit" class="form-control sa-button sa-btncancel" formnovalidate id="btncancel" name="command" value="Cancel" />
                            <span class="input-group-addon formclass"></span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="clearfix"></div>

    for (int i = 0; i < Model.Count; i++)
    {
        <div class=" clearfix"></div>
        @Html.HiddenFor(model => model[i].Col1, new { @id = "hf_clientid" })
        @Html.HiddenFor(model => model[i].Col2, new { @id = "hf_clientunitid" })
        @Html.HiddenFor(model => model[i].Col3, new { @id = "hf_entby" })
        @Html.HiddenFor(model => model[i].Col4, new { @id = "hf_entdate" })
        @Html.HiddenFor(model => model[i].Col5, new { @id = "hf_editby" })
        @Html.HiddenFor(model => model[i].Col6, new { @id = "hf_editdate" })
        @Html.HiddenFor(model => model[i].Col7, new { @id = "hf_recid" })
        @Html.HiddenFor(model => model[i].Col8, new { @id = "hf_url" })
        @Html.HiddenFor(model => model[i].Col9, new { @id = "hf_title" })
        @Html.HiddenFor(model => model[i].Col10, new { @id = "hf_tab_name" })
        @Html.HiddenFor(model => model[i].Col11, new { @id = "hf_where" })
        @Html.HiddenFor(model => model[i].Col12, new { @id = "hf_type" })
        @Html.HiddenFor(model => model[i].Col13, new { @id = "hf_btn_text" })
        @Html.HiddenFor(model => model[i].Col14, new { @id = "hf_mid" })
        @Html.HiddenFor(model => model[i].Col15, new { @id = "hf_m_id" })                       

        <div class="row">
            <div class="col-md-12 col-sm-12 col-xs-12">
                <div class="x_panel">
                    <div class="x_content">
                        <div class="row">
                            <div class="col-sm-4">
                                <label for="first-name">
                                    Doc No <span class="ClientProfileLabelColor">*</span>
                                </label>
                                <div class="form-group">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model[i].Col17, new { @id = "txt_docno", @ReadOnly = "true", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-mandatory" })

                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-4">
                                <label for="first-name">
                                    Name <span class="ClientProfileLabelColor">*</span>
                                </label>
                                <div class="form-group">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model[i].Col18, new { @id = "txt_clientname", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-mandatory", @MaxLength = "48" })
                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-4">
                                <label for="first-name">Country <span class="ClientProfileLabelColor">*</span></label>
                                <div class='input-group'>
                                    @Html.DropDownListFor(model => model[i].SelectedItems1, new MultiSelectList(Model[i].TList1, "Value", "Text", Model[i].SelectedItems1), new { @id = "ddl_ct", @class = "sa-select2-single form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @MaxLength = "20", @multiple = "multiple", onchange = "getst();" })
                                    <span class="input-group-addon formclass"></span>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-4">
                                <label for="first-name">State <span class="ClientProfileLabelColor">*</span></label>
                                <div class='input-group'>
                                    @Html.DropDownListFor(model => model[i].SelectedItems2, new MultiSelectList(Model[i].TList2, "Value", "Text", Model[i].SelectedItems2), new { @id = "ddl_st", @class = "sa-select2-single form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @MaxLength = "20", @multiple = "multiple" })
                                    <span class="input-group-addon formclass"></span>
                                </div>
                            </div>
                            <div class="col-sm-4">
                                <label for="first-name">
                                    Address <span class="ClientProfileLabelColor">*</span>
                                </label>
                                <div class='input-group'>
                                    @Html.TextBoxFor(model => model[i].Col22, new { @id = "txt_add", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-mandatory", @MaxLength = "58" })
                                    <span class="input-group-addon formclass"></span>
                                </div>
                            </div>
                            <div class="col-sm-4">
                                <label for="first-name">
                                    Pincode <span class="ClientProfileLabelColor">*</span>
                                </label>
                                <div class='input-group'>
                                    @Html.TextBoxFor(model => model[i].Col23, new { @id = "txt_pincode", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-mandatory", @MaxLength = "6" })
                                    <span class="input-group-addon formclass"></span>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-4">
                                <label for="first-name">PAN Number</label>
                                <div class='input-group'>
                                    @Html.TextBoxFor(model => model[i].Col36, new { @id = "txt_pan", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @MaxLength = "20" })
                                    <span class="input-group-addon formclass"></span>
                                </div>
                            </div>
                            <div class="col-sm-4">
                                <label for="first-name">MSME Number</label>
                                <div class='input-group'>
                                    @Html.TextBoxFor(model => model[i].Col37, new { @id = "txt_msme", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @MaxLength = "20" })
                                    <span class="input-group-addon formclass"></span>
                                </div>
                            </div>
                            <div class="col-sm-4">
                                <label for="first-name">TAN Number</label>
                                <div class='input-group'>
                                    @Html.TextBoxFor(model => model[i].Col38, new { @id = "txt_tan", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @MaxLength = "20" })
                                    <span class="input-group-addon formclass"></span>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-4">
                                <label for="first-name">
                                    Search Text <span class="ClientProfileLabelColor">*</span>
                                </label>
                                <div class='input-group'>
                                    @Html.TextBoxFor(model => model[i].Col25, new { @id = "txt_searchtext", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-mandatory", @MaxLength = "20" })
                                    <span class="input-group-addon formclass"></span>
                                </div>
                            </div>
                            <div class='col-sm-4' id="dv_party">
                                <label for="first-name">Party Type</label>
                                <div class="form-group">
                                    <div class='input-group'>
                                        @Html.DropDownListFor(model => model[i].SelectedItems3, new MultiSelectList(Model[i].TList3, "Value", "Text", Model[i].SelectedItems3), new { @id = "ddl_ptype", @class = "sa-select2-single form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @MaxLength = "20", @multiple = "multiple" })
                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                            <div class='col-sm-4' id="dv_loc">
                                <label for="first-name">Party Location</label>
                                <div class="form-group">
                                    <div class='input-group'>
                                        @Html.DropDownListFor(model => model[i].SelectedItems4, new MultiSelectList(Model[i].TList4, "Value", "Text", Model[i].SelectedItems4), new { @id = "ddl_ploc", @class = "sa-select2-single form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @MaxLength = "20", @multiple = "multiple" })
                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-4">
                                <div class="row">
                                    <div class='col-sm-2'>
                                        <label for="first-name">GST</label>
                                        <div class="form-group">
                                            <div class='input-group'>
                                                @Html.CheckBoxFor(m => m[i].Chk1, new { @id = "chk_reg", @class = "reg sa-input checkbox", @onchange = "reggstin();" })
                                                <span class="input-group-addon formclass"></span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class='col-sm-10 hidectrl' id="div_gstin">
                                        <label for="first-name">GSTIN Number</label>
                                        <div class='input-group'>
                                            @Html.TextBoxFor(model => model[i].Col24, new { @id = "txt_gstinno", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @MaxLength = "21" })
                                            <span class="input-group-addon formclass"></span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class='col-sm-4 hidectrl' id="div_tor">
                                <label for="first-name">Type Of GST Registration <span class="ClientProfileLabelColor">*</span></label>
                                <div class="form-group">
                                    <div class='input-group'>
                                        <b style="vertical-align: super;">Composition </b>
                                        @Html.RadioButtonFor(m => m[i].Col35, "C", new { @id = "rd_com", @class = "sa-input radio myclass", @style = "vertical-align:initial;min-height:0px;margin:5px;padding-top: 0px;" })
                                        <b style="vertical-align: super;">Regular </b>
                                        @Html.RadioButtonFor(m => m[i].Col35, "R", new { @id = "rd_reg", @class = "sa-input radio myclass", @style = "vertical-align:initial;min-height:0px;margin:5px;padding-top: 0px;" })
                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                            <div class='col-sm-4 col-xs-4'>
                                <label for="first-name">Status <span class="ClientProfileLabelColor">*</span></label>
                                <div class="form-group">
                                    <div class='input-group' style="width: 100%">
                                        <b>Active </b>
                                        @Html.RadioButtonFor(model => model[i].Col44, "Active", new { @id = "rdY", @class = "sa-input radio sa-mandatory", @style = "vertical-align:initial;min-height:0px;margin:0px;padding-top: 0px;" })
                                        <b style="margin-left:5px">Inactive </b>
                                        @Html.RadioButtonFor(model => model[i].Col44, "Inactive", new { @id = "rdN", @class = "sa-input radio sa-mandatory", @style = "vertical-align:initial;min-height:0px;margin:0px;padding-top: 0px;" })
                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                            <div class='col-sm-4'>
                                <label for="first-name">Labor Contractor</label>
                                <div class="form-group ">
                                    <div class='input-group'>
                                        @Html.CheckBoxFor(m => m[i].Chk2, new { @id = "chk_contract", @class = "sa-input checkbox" })
                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <hr />
                            <h5 style="font-style: italic">Contact Person Detail</h5>
                        </div>
                        <div class="row">
                            <div class="col-sm-4">
                                <label for="first-name">
                                    Name <span class="ClientProfileLabelColor">*</span>
                                </label>
                                <div class='input-group'>
                                    @Html.TextBoxFor(model => model[i].Col26, new { @id = "txt_cp", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-mandatory", @MaxLength = "48" })
                                    <span class="input-group-addon formclass"></span>
                                </div>
                            </div>
                            <div class="col-sm-4">
                                <label for="first-name">
                                    Contact No <span class="ClientProfileLabelColor">*</span>
                                </label>
                                <div class='input-group'>
                                    @Html.TextBoxFor(model => model[i].Col27, new { @id = "txt_contactno", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-mandatory", @maxlength = "10" })
                                    <span class="input-group-addon formclass"></span>
                                </div>
                            </div>
                            <div class="col-sm-4">
                                <label for="first-name">
                                    Alternate Contact No <span class="ClientProfileLabelColor">*</span>
                                </label>
                                <div class='input-group'>
                                    @Html.TextBoxFor(model => model[i].Col28, new { @id = "txt_alternatecontactno", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-mandatory", @maxlength = "10" })
                                    <span class="input-group-addon formclass"></span>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-4">
                                <label for="first-name">
                                    Email Id <span class="ClientProfileLabelColor">*</span>
                                </label>
                                <div class='input-group'>
                                    @Html.TextBoxFor(model => model[i].Col29, new { @id = "txt_emailid", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-mandatory", @maxlength = "40" })
                                    <span class="input-group-addon formclass"></span>
                                </div>
                            </div>
                            <div class="col-sm-4">
                                <label for="first-name">
                                    Address <span class="ClientProfileLabelColor">*</span>
                                </label>
                                <div class='input-group'>
                                    @Html.TextBoxFor(model => model[i].Col30, new { @id = "txt_address", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-mandatory", @MaxLength = "58" })
                                    <span class="input-group-addon formclass"></span>
                                </div>
                            </div>
                            <div class="col-sm-4">
                                <label for="first-name">
                                    Designation <span class="ClientProfileLabelColor">*</span>
                                </label>
                                <div class='input-group'>
                                    @Html.TextBoxFor(model => model[i].Col31, new { @id = "txt_desig", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-mandatory", @MaxLength = "20" })
                                    <span class="input-group-addon formclass"></span>
                                </div>
                            </div>
                        </div>

                        <div class="row" id="bkdt">
                            <hr />
                            <h5 style="font-style: italic">Bank Detail</h5>
                        </div>
                        <div class="row" id="dvbn">
                            <div class="col-sm-4">
                                <label for="first-name">Bank Name</label>
                                <div class='input-group'>
                                    @Html.DropDownListFor(model => model[i].SelectedItems7, new MultiSelectList(Model[i].TList7, "Value", "Text", Model[i].SelectedItems7), new { @id = "ddl_bnk", @class = "sa-select2-single form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @MaxLength = "20", @multiple = "multiple" })
                                    <span class="input-group-addon formclass"></span>
                                </div>
                            </div>
                            <div class="col-sm-4">
                                <label for="first-name">Account Type </label>
                                <div class='input-group'>
                                    @Html.DropDownListFor(model => model[i].SelectedItems5, new MultiSelectList(Model[i].TList5, "Value", "Text", Model[i].SelectedItems5), new { @id = "ddl_acctype", @class = "sa-select2-single form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @MaxLength = "20", @multiple = "multiple" })
                                    <span class="input-group-addon formclass"></span>
                                </div>
                            </div>
                            <div class="col-sm-4">
                                <label for="first-name">Currency Type </label>
                                <div class='input-group'>
                                    @Html.DropDownListFor(model => model[i].SelectedItems6, new MultiSelectList(Model[i].TList6, "Value", "Text", Model[i].SelectedItems6), new { @id = "ddl_curtype", @class = "sa-select2-single form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @MaxLength = "20", @multiple = "multiple" })
                                    <span class="input-group-addon formclass"></span>
                                </div>
                            </div>
                        </div>
                        <div class="row" id="dv_add">
                            <div class="col-sm-4">
                                <label for="first-name">
                                    Address <span class="ClientProfileLabelColor">*</span>
                                </label>
                                <div class='input-group'>
                                    @Html.TextBoxFor(model => model[i].Col33, new { @id = "txt_addr", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @maxlength = "200" })
                                    <span class="input-group-addon formclass"></span>
                                </div>
                            </div>
                            <div class="col-sm-4">
                                <label for="first-name">
                                    MICR No. 
                                </label>
                                <div class='input-group'>
                                    @Html.TextBoxFor(model => model[i].Col34, new { @id = "txt_micr", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @maxlength = "20" })
                                    <span class="input-group-addon formclass"></span>
                                </div>
                            </div>
                            <div class="col-sm-4">
                                <label for="first-name">
                                    Swift Code 
                                </label>
                                <div class='input-group'>
                                    @Html.TextBoxFor(model => model[i].Col50, new { @id = "txt_swt", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @maxlength = "20" })
                                    <span class="input-group-addon formclass"></span>
                                </div>
                            </div>
                        </div>
                        <div class="row" id="dv_">
                            <div class="col-sm-4">
                                <label for="first-name">Bank Account No.</label>
                                <div class='input-group'>
                                    @Html.TextBoxFor(model => model[i].Col51, new { @id = "txt_acctno", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @maxlength = "25" })
                                    <span class="input-group-addon formclass"></span>
                                </div>
                            </div>
                            <div class="col-sm-4">
                                <label for="first-name">IFSC Code</label>
                                <div class='input-group'>
                                    @Html.TextBoxFor(model => model[i].Col52, new { @id = "txt_ifsc", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @maxlength = "20" })
                                    <span class="input-group-addon formclass"></span>
                                </div>
                            </div>                            
                        </div>

                        @Html.HiddenFor(model => model[0].Col45, new { @id = "hf_chkacct" })
                        <div class="row" id="div_hd" style="display:none">
                            <hr />
                            <h5 style="font-style: italic">Accounting</h5>
                        </div>

                        <div class="row" id="div_lsr" style="display:none">
                            <div class='col-sm-3'>
                                <label for="first-name">Recon Ledger <span class="ClientProfileLabelColor">*</span></label>
                                <div class="form-group ">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model[0].Col16, new { @id = "txt_lsr", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", placeholder = "Ledger", @onkeypress = "return false;" })
                                        @Html.HiddenFor(model => model[0].Col32, new { @id = "hf_lsr" })
                                        <span class="input-group-addon" data-toggle="tooltip" data-placement="top" title="Select Leisure" id="spn_lsr" onclick="getlsr(this);"><i class="fa fa-search"></i></span>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row" id="dv_up">
                            <hr />
                            <h5 style="font-style: italic">Upload Document</h5>
                        </div>
                        <div class="row" id="dv_up1">
                            <div class='col-sm-4 col-xs-4'>
                                <label for="first-name">PAN Photo</label>
                                <div class="row">
                                    <div class='col-sm-7'>

                                        @try
                                        {
                                            var pclist = Model[0].LTM1.Where(m => m.Col2 == "Pan Card").ToList();
                                            ispc = pclist.Count > 0;
                                            imgdisplay = "none";
                                            imgclosedisplay = "none";

                                            if (ispc)
                                            {
                                                base64 = sgen.imgtobase64(serverpath + pclist[0].Col4);
                                                basestr = "data: image/png;base64," + base64;
                                                imgdisplay = "block";
                                            }
                                        }
                                        catch (Exception err) { imgdisplay = "none"; imgclosedisplay = "none"; }

                                        @if (ispc)
                                        {
                                            <div class="form-group">
                                                <div class='input-group'>
                                                    <label>File Already Attached</label>
                                                </div>
                                            </div>
                                        }
                                        @if (!ispc)
                                        {
                                            <div class="form-group">
                                                <div class='input-group'>
                                                    <img id="imgupd1" src="../../images/file-upload-button.png" onclick="imgclick(this);" style="max-width: 120px" />
                                                    <input id="upd1" onchange="fileselected(this);" style="visibility: hidden; height: 0; width: 0" multiple="multiple" name="upd1" type="file" />
                                                    <span onclick="imgclick(this);" ID="spanupd1">@Model[0].Col39</span>
                                                    <span class="input-group-addon formclass"></span>
                                                    @Html.HiddenFor(model => model[i].Col39, new { @id = "hf_pc" })
                                                </div>
                                            </div>
                                        }
                                    </div>
                                    <div class='col-sm-5'>
                                        <img id="thumbnil1" style="width: 80px; height: 80px; margin-top: 10px; display: @imgdisplay" data-pdf-thumbnail-file="@basestr" src="@basestr" alt="" />
                                        <span id="img_close1" style="border: 1px solid white;padding: 3px;cursor:pointer;display:@imgclosedisplay" onclick="removetempfile(this);"><i class="fa fa-close"></i></span>
                                    </div>
                                </div>
                            </div>
                            <div class='col-sm-4 col-xs-4'>
                                <label for="first-name">MSME Photo</label>
                                <div class="row">
                                    <div class='col-sm-7'>

                                        @try
                                        {
                                            var mslist = Model[0].LTM1.Where(m => m.Col2 == "Msme").ToList();
                                            isms = mslist.Count > 0;
                                            imgdisplay = "none";
                                            imgclosedisplay = "none";

                                            if (isms)
                                            {
                                                base64 = sgen.imgtobase64(serverpath + mslist[0].Col4);
                                                basestr = "data: image/png;base64," + base64;
                                                imgdisplay = "block";
                                            }
                                        }
                                        catch (Exception err) { imgdisplay = "none"; imgclosedisplay = "none"; }

                                        @if (isms)
                                        {
                                            <div class="form-group">
                                                <div class='input-group'>
                                                    <label>File Already Attached</label>
                                                </div>
                                            </div>
                                        }
                                        @if (!isms)
                                        {
                                            <div class="form-group">
                                                <div class='input-group'>
                                                    <img id="imgupd2" src="../../images/file-upload-button.png" onclick="imgclick(this);" style="max-width: 120px" />
                                                    <input id="upd2" onchange="fileselected(this);" style="visibility: hidden; height: 0; width: 0" multiple="multiple" name="upd2" type="file" />
                                                    <span onclick="imgclick(this);" ID="spanupd2">@Model[0].Col40</span>
                                                    <span class="input-group-addon formclass"></span>
                                                    @Html.HiddenFor(model => model[i].Col40, new { @id = "hf_ms" })
                                                </div>
                                            </div>
                                        }
                                    </div>
                                    <div class='col-sm-5'>
                                        <img id="thumbnil2" style="width: 80px; height: 80px; margin-top: 10px; display: @imgdisplay" data-pdf-thumbnail-file="@basestr" src="@basestr" alt=" " />
                                        <span id="img_close2" style="border: 1px solid white;padding: 3px;cursor:pointer;display:@imgclosedisplay" onclick="removetempfile(this);"><i class="fa fa-close"></i></span>
                                    </div>
                                </div>
                            </div>
                            <div class='col-sm-4 col-xs-4'>
                                <label for="first-name">GSTIN Photo</label>
                                <div class="row">
                                    <div class="col-sm-7">
                                        @try
                                        {
                                            var gslist = Model[0].LTM1.Where(m => m.Col2 == "Gstin").ToList();
                                            isgs = gslist.Count > 0;
                                            imgdisplay = "none";
                                            imgclosedisplay = "none";

                                            if (isgs)
                                            {
                                                base64 = sgen.imgtobase64(serverpath + gslist[0].Col4);
                                                basestr = "data: image/png;base64," + base64;
                                                imgdisplay = "block";
                                            }
                                        }
                                        catch (Exception err) { imgdisplay = "none"; imgclosedisplay = "none"; }

                                        @if (isgs)
                                        {
                                            <div class="form-group">
                                                <div class='input-group'>
                                                    <label>File Already Attached</label>
                                                </div>
                                            </div>
                                        }
                                        @if (!isgs)
                                        {
                                            <div class="form-group">
                                                <div class='input-group'>
                                                    <img id="imgupd3" src="../../images/file-upload-button.png" onclick="imgclick(this);" style="max-width: 120px" />
                                                    <input id="upd3" onchange="fileselected(this);" style="visibility: hidden; height: 0; width: 0" multiple="multiple" name="upd3" type="file" />
                                                    <span onclick="imgclick(this);" ID="spanupd3">@Model[0].Col41</span>
                                                    <span class="input-group-addon formclass"></span>
                                                    @Html.HiddenFor(model => model[i].Col41, new { @id = "hf_gs" })
                                                </div>
                                            </div>
                                        }
                                    </div>
                                    <div class='col-sm-5'>
                                        <img id="thumbnil3" style="width: 80px; height: 80px; margin-top: 10px; display: @imgdisplay" data-pdf-thumbnail-file="@basestr" src="@basestr" alt=" " />
                                        <span id="img_close3" style="border: 1px solid white;padding: 3px;cursor:pointer;display:@imgclosedisplay" onclick="removetempfile(this);"><i class="fa fa-close"></i></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row" id="dv_up2">
                            <div class='col-sm-4 col-xs-4'>
                                <label for="first-name">Vendor Registration</label>
                                <div class="row">
                                    <div class="col-sm-7">
                                        @try
                                        {
                                            var vrlist = Model[0].LTM1.Where(m => m.Col2 == "Vd_Reg").ToList();
                                            isvr = vrlist.Count > 0;
                                            imgdisplay = "none";
                                            imgclosedisplay = "none";

                                            if (isvr)
                                            {
                                                base64 = sgen.imgtobase64(serverpath + vrlist[0].Col4);
                                                basestr = "data: image/png;base64," + base64;
                                                imgdisplay = "block";
                                            }
                                        }
                                        catch (Exception err) { imgdisplay = "none"; imgclosedisplay = "none"; }

                                        @if (isvr)
                                        {
                                            <div class="form-group">
                                                <div class='input-group'>
                                                    <label>File Already Attached</label>
                                                </div>
                                            </div>
                                        }
                                        @if (!isvr)
                                        {
                                            <div class="form-group">
                                                <div class='input-group'>
                                                    <img id="imgupd4" src="../../images/file-upload-button.png" onclick="imgclick(this);" style="max-width: 120px" />
                                                    <input id="upd4" onchange="fileselected(this);" style="visibility: hidden; height: 0; width: 0" multiple="multiple" name="upd4" type="file" />
                                                    <span onclick="imgclick(this);" ID="spanupd4">@Model[0].Col42</span>
                                                    <span class="input-group-addon formclass"></span>
                                                    @Html.HiddenFor(model => model[i].Col42, new { @id = "hf_vr" })
                                                </div>
                                            </div>
                                        }
                                    </div>
                                    <div class='col-sm-5'>
                                        <img id="thumbnil4" style="width: 80px; height: 80px; margin-top: 10px; display: @imgdisplay" data-pdf-thumbnail-file="@basestr" src="@basestr" alt=" " />
                                        <span id="img_close4" style="border: 1px solid white;padding: 3px;cursor:pointer;display:@imgclosedisplay" onclick="removetempfile(this);"><i class="fa fa-close"></i></span>
                                    </div>
                                </div>
                            </div>
                            <div class='col-sm-4 col-xs-4'>
                                <label for="first-name">Cheque Copy</label>
                                <div class="row">
                                    <div class="col-sm-7">
                                        @try
                                        {
                                            var chqlist = Model[0].LTM1.Where(m => m.Col2 == "Chq_Copy").ToList();
                                            isbchq = chqlist.Count > 0;
                                            imgdisplay = "none";
                                            imgclosedisplay = "none";

                                            if (isbchq)
                                            {
                                                base64 = sgen.imgtobase64(serverpath + chqlist[0].Col4);
                                                basestr = "data: image/png;base64," + base64;
                                                imgdisplay = "block";
                                            }
                                        }
                                        catch (Exception err) { imgdisplay = "none"; imgclosedisplay = "none"; }

                                        @if (isbchq)
                                        {
                                            <div class="form-group">
                                                <div class='input-group'>
                                                    <label>File Already Attached</label>
                                                </div>
                                            </div>
                                        }
                                        @if (!isbchq)
                                        {
                                            <div class="form-group">
                                                <div class='input-group'>
                                                    <img id="imgupd5" src="../../images/file-upload-button.png" onclick="imgclick(this);" style="max-width: 120px" />
                                                    <input id="upd5" onchange="fileselected(this);" style="visibility: hidden; height: 0; width: 0" multiple="multiple" name="upd5" type="file" />
                                                    <span onclick="imgclick(this);" ID="spanupd5">@Model[0].Col43</span>
                                                    <span class="input-group-addon formclass"></span>
                                                    @Html.HiddenFor(model => model[i].Col43, new { @id = "hf_bchq" })
                                                </div>
                                            </div>
                                        }
                                    </div>
                                    <div class='col-sm-5'>
                                        <img id="thumbnil5" style="width: 80px; height: 80px; margin-top: 10px; display: @imgdisplay" data-pdf-thumbnail-file="@basestr" src="@basestr" alt=" " />
                                        <span id="img_close5" style="border: 1px solid white;padding: 3px;cursor:pointer;display:@imgclosedisplay" onclick="removetempfile(this);"><i class="fa fa-close"></i></span>
                                    </div>
                                </div>
                            </div>

                        </div>
                        <hr />
                        <div class="row" id="dv_up3">
                            <div class="col-md-4 col-xs-4">
                                <table id="filetable" class="table table-striped table-bordered table-hover">
                                    <thead>
                                        <tr>
                                            <th>File Name</th>
                                            <th>File Title</th>
                                            <th colspan="2">Action</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @if (Model[0].LTM1 != null)
                                        {
                                            for (int f = 0; f < Model[0].LTM1.Count; f++)
                                            {
                                                @Html.HiddenFor(model => model[i].LTM1[f].Col1, new { @id = "hf_ltm1" })
                                                @Html.HiddenFor(model => model[i].LTM1[f].Col2, new { @id = "hf_ltm2" })
                                                @Html.HiddenFor(model => model[i].LTM1[f].Col3, new { @id = "hf_ltm3" })
                                                @Html.HiddenFor(model => model[i].LTM1[f].Col4, new { @id = "hf_ltm4" })
                                                <tr>
                                                    <td>
                                                        <label Width="170px" Style="word-wrap: normal; word-break: break-all;" ID="lbl_filename">@Model[0].LTM1[f].Col1</label>
                                                    </td>
                                                    <td>
                                                        <label Style="word-wrap: break-word" ID="lbl_filetitle">@Model[0].LTM1[f].Col2</label>
                                                    </td>
                                                    <td><a href="@Url.RouteUrl(new { Controller = controllerName, Action = "fdown", value = Model[0].LTM1[f].Col3 })"><i class="fa fa-download"></i></a></td>
                                                    <td><a onclick="fdelete(event,'@Model[0].LTM1[f].Col3');"><i class="fa fa-close"></i></a></td>
                                                </tr>
                                            }
                                        }
                                    </tbody>

                                </table>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    }
    <input type="submit" id="callback1" formnovalidate value="Callback" name="Command" title="callback" style="visibility:hidden" class="btn btn-primary" />
    <input type="submit" id="btnst" formnovalidate value="btnst" name="Command" title="State" style="visibility:hidden" class="btn btn-primary" />
}

<script type="text/javascript">
    //debugger;
    $(document).ready(function () {
        @Html.Raw(ViewBag.scripCall);
        $("[id*=hf_controller]").val('@ViewContext.RouteData.Values["Controller"].ToString()');
        $("[id*=hf_viewname]").val('@Path.GetFileNameWithoutExtension(Server.MapPath(VirtualPath))');

        //gst registered
        reggstin();

        //chk acct
        var acc = $("#hf_chkacct")[0].value.trim();
        if (acc == "Y") {
            $("#div_hd").show();
            $("#div_lsr").show();
        }

        // For Banquet Hall
        //debugger;
        var mid = $("#hf_mid")[0].value;
        if (mid == "41005.8") {
            $("#dv_party").hide();
            $("#dv_loc").hide();
            $("#div_lsr").hide();
            $("#div_hd").hide();
            $("#bkdt").hide();
            $("#dvbn").hide();
            $("#dv_add").hide();
            $("#dv_up").hide();
            $("#dv_up1").hide();
            $("#dv_up2").hide();
            $("#dv_up3").hide();

           
            
        }

        //if (mid != "41005.8")
        //{
        //    $("#txt_addr")[0].value = "sa-mandatory";
        //    $("#txt_micr")[0].value = "sa-mandatory";
        //    $("#txt_swt")[0].value = "sa-mandatory";
        //}


       
    });

    function getst() { $("#btnst").click(); }

    function removetempfile(ctrl) {
        //debugger;
        var cnt = ctrl.id.split('e')[1];
        $("#upd" + cnt + "")[0].value = "";
        $("#spanupd" + cnt + "")[0].innerText = "";
        $("#thumbnil" + cnt + "")[0].src = "";
        $("#thumbnil" + cnt + "").hide();
        $(ctrl).hide();
    }

    function checkrefcode(ctrl) {
        //debugger;
        var obj = { "value": $(ctrl).val() };
        var res = myMethod(@controllerName,@viewName, "checkrefcode", obj, ctrl);
    }

    function reggstin() {
        if ($('.reg').is(":checked")) {
            $("#div_gstin").show();
            $("#div_tor").show();
        }
        else {
            $("#div_gstin").hide();
            $("#div_tor").hide();
        }
    }

    function fileselected(ctrl) {

        var files = ctrl.files;
        var cnts = files.length;
        $(ctrl).parent().parent().find("span").css("color", "blue");
        for (var k = 0; k < cnts; k++) {

            var file = files[k];
            var namelen = file.name.length;
            if (namelen > 20) {
                $(ctrl).parent().parent().find("span")[0].innerText = "Sorry!! The file name can not be more than 15 Chars";
                $(ctrl).parent().parent().find("span").css("color", "red");
                return;
            }
            var ext = file.name.match(/\.(.+)$/)[1];
            switch (ext) {
                case 'pdf':
                case 'jpg':
                case 'jpeg':
                case 'png':
                case 'bmp':
                    break
                default:
                    $(ctrl).parent().parent().find("span")[0].innerText = "Sorry!! Upload only pdf,,jpg,jpeg,png file";
                    $(ctrl).parent().parent().find("span").css("color", "red");
                    return;
                    break;
            }

            //var filesize = file.size / 1024 / 1024;
            var filesize = file.size / 1024;
            if (filesize < 100) {
                var filenme = file.name.split('\\');
                var lenn = filenme.length;
                var namee = filenme[lenn - 1];
                if (cnts > 1) {
                    $(ctrl).parent().parent().find("span")[0].innerText = cnts + " File Selected";
                }
                else { $(ctrl).parent().parent().find("span")[0].innerText = namee; }
            }
            else {
                $(ctrl).parent().parent().find("span")[0].innerText = 'Sorry!! This file size is:' + filesize + 'Kb Max. Allowed size is 100Kb';
                $(ctrl).parent().parent().find("span").css("color", "red");
            }
        }


        var files = ctrl.files;
        var thmbcnt = ctrl.id.split('d')[1].trim();
        for (var i = 0; i < files.length; i++) {
            var file = files[i];
            var imageType = /image.*/;
            if (!file.type.match(imageType)) {
                //continue;
            }

            var img = document.getElementById("thumbnil" + thmbcnt + "");
            img.file = file;
            var reader = new FileReader();
            reader.onload = (function (aImg) {
                return function (e) {                   
                    aImg.src = e.target.result;
                    aImg.setAttribute("data-pdf-thumbnail-file", e.target.result);
                    createPDFThumbnails();
                };
            })(img);
            reader.readAsDataURL(file);
            $("#thumbnil" + thmbcnt + "").show();
            $("#img_close" + thmbcnt + "").show();

        }
    }
    function imgclick(ctrl) { $(ctrl).closest('div').find("input[type=file]").click(); }
    function editfun() { var data = show_Foo('Select Entry For Edit', 'EDIT', '1', '@viewName', '@controllerName'); }
    function viewfun() { var data = show_Foo('View Detail', 'VIEW', '0', '@viewName', '@controllerName'); }
    function getlsr() { var data = show_Foo('Select Leiser', 'LSR', '0', '@viewName', '@controllerName'); } 

           //////files

    function fdelete(evt, id) {
                //prevent the browsers default function
        evt.preventDefault();
        //grab the form and wrap it with jQuery
        var $form = $("form");
        var obj = { "value": id };
        myMethod('@controllerName', '@viewName', "fdelete", obj, null);
        $("#callback1").click();
    }
    function onsuccessdel(response) { bindFiles(); }
    function onfailuredel(response) { }

</script>



