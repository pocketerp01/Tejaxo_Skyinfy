@using System.Data;
@model IList<skyinfyMVC.Models.Tmodelmain>
@{

    sgenFun sgen = new sgenFun();
    string mandatory = "sa-mandatory";
    string userCode = sgen.getcookie("userCode");
    Layout = "~/Views/Shared/_MasterPage.cshtml";

    var controllerName = @ViewContext.RouteData.Values["Controller"].ToString();
    var viewName = @Path.GetFileNameWithoutExtension(Server.MapPath(VirtualPath));
    Session["viewName"] = viewName;
    Session["controllerName"] = controllerName;
}
<style>
    .grid-container {
        display: grid; /* This is a (hacky) way to make the .grid element size to fit its content */
        overflow: auto;
        height: 300px;
        /*width: 600px;*/
    }

    .grid {
        display: flex;
        flex-wrap: nowrap;
    }

    .grid-col {
        width: 100px;
        min-width: 100px;
    }

    .grid-item--header {
        height: 35px;
        min-height: 35px;
        z-index: 1;
        position: sticky;
        position: -webkit-sticky;
        top: 0;
        text-transform: uppercase;
        font-size: 12px;
        font-weight: bold;
        color: #ECF0F1;
        background: rgba(52,73,94,.94);
    }

    .grid-col--fixed-left {
        position: sticky;
        left: 0;
        z-index: 9998;
        background: white;
    }

    .grid-col--fixed-right {
        position: sticky;
        right: 0;
        z-index: 9998;
        background: white;
    }

    .grid-item {
        height: 35px;
        border: 1px solid gray;
        /*color: #999;*/
        border: 1px solid #eee;
        padding-left: 5px;
        border-collapse: collapse;
        font-family: "Helvetica Neue",Helvetica,Arial,sans-serif";
    }

    /*.grid-item:hover {
            background: #4E5066;
            color: #FFFFFF;
            border-top: 1px solid #22262e;
        }*/
</style>
@using (Html.BeginForm("mrn", "Inventory", new { @m_id = EncryptDecrypt.Encrypt(Model[0].Col15), @mid = EncryptDecrypt.Encrypt(Model[0].Col14) }, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.HiddenFor(model => model[0].Col14, new { @id = "hf_mid" })
    @Html.HiddenFor(model => model[0].Col15, new { @id = "hf_m_id" })
    <div class="row">
        <div class="col-sm-4">
            <div class="form-group">
                <div class='input-group'>
                    <div class="title_left">
                        <h3>@Model[0].Col9</h3>
                    </div>
                    <span class="input-group-addon formclass"></span>
                </div>
            </div>
        </div>
        <div class="col-md-8">
            <div class="row">
                <div class="col-sm-2">
                    <div class="form-group">
                        <div class='input-group'>
                            <input type="submit" class="btn btn-primary form-control sa-button" @ViewBag.vnew id="btnnew" onclick="setTableDatat();" name="command" value="New" accesskey="N" />
                            <span class="input-group-addon formclass"></span>
                        </div>
                    </div>
                </div>
                <div class='col-sm-2'>
                    <div class="form-group">
                        <div class='input-group'>
                            <input type="button" class="btn btn-warning form-control sa-button" @ViewBag.vedit id="btnedit" name="command" value="Edit" accesskey="E" onclick="editfun();" />
                            <span class="input-group-addon formclass"></span>
                        </div>
                    </div>
                </div>
                <div class='col-sm-2'>
                    <div class="form-group">
                        <div class='input-group'>
                            <input type="submit" class="btn btn-success form-control sa-button" @ViewBag.vsave id="btnsave" onclick="setTableDatat();" name="command" value="@Model[0].Col13" accesskey="S" />
                            @Html.HiddenFor(model => model[0].Col13, new { @id = "hf_btn_text" })
                            <span class="input-group-addon formclass"></span>
                        </div>
                    </div>
                </div>
                <div class='col-sm-2'>
                    <div class="form-group">
                        <div class='input-group'>
                            <input type="button" class="btn btn-info form-control sa-button" id="btndetail" name="command" value="View" accesskey="V" onclick="viewfun();" />
                            <span class="input-group-addon formclass"></span>
                        </div>
                    </div>
                </div>
                <div class='col-sm-2'>
                    <div class="form-group">
                        <div class='input-group'>
                            <input type="submit" class="btn btn-primary form-control sa-button sa-btncancel" id="btncancel" name="command" onclick="setTableDatat();" value="Cancel" accesskey="C" />
                            <span class="input-group-addon formclass"></span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="clearfix"></div>
    <div class="row">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="x_panel">
                <div class="x_content">
                    <div class="row">
                        <div class='col-sm-6'>
                            <label for="first-name">MRN Type <span class="ClientProfileLabelColor">*</span></label>
                            <div class="form-group ">
                                <div class='input-group'>
                                    <div class="col-md-6 col-sm-6 col-xs-12">
                                        <b style="padding-top:12px">With PO</b>
                                        @Html.RadioButtonFor(model => model[0].Col41, "001", new { @id = "rb_withpo", @class = " sa-input radio sa-mandatory", onclick = "showdiv(this);", @style = "vertical-align:initial;min-height:0px;margin:0px;padding-top:0px;" })
                                        <b style="padding-top:12px">Without PO</b>
                                        @Html.RadioButtonFor(model => model[0].Col41, "002", new { @id = "rb_withoutpo", @class = " sa-input radio sa-mandatory", onclick = "showdiv(this);", @style = "vertical-align:initial;min-height:0px;margin:0px;padding-top:0px;" })
                                    </div>
                                    <span class="input-group-addon formclass"></span>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row" id="div_po">
                        <div class='col-sm-4'>
                            <label for="first-name">Party Name <span class="ClientProfileLabelColor">*</span></label>
                            <div class="form-group">
                                <div class='input-group'>
                                    @Html.TextBoxFor(model => model[0].Col17, new { @id = "txt_pname", @ReadOnly = "true", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox " + mandatory + "", placeholder = "Party Name" })
                                    <span class="input-group-addon" data-toggle="tooltip" data-placement="top" title="Select PO No" onclick="add2();"><i class="fa fa-search"></i></span>
                                    <span class="input-group-addon formclass"></span>
                                </div>
                            </div>
                        </div>
                        <div class='col-sm-4'>
                            <label for="first-name">PO Date <span class="ClientProfileLabelColor">*</span></label>
                            <div class="form-group">
                                <div class='input-group'>
                                    @Html.TextBoxFor(model => model[0].Col18, new { @id = "txt_po_date", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-date " + mandatory + "", placeholder = "PO Date" })
                                    <span class="input-group-addon formclass"></span>
                                </div>
                            </div>
                        </div>
                        <div class='col-sm-4'>
                            <label for="first-name">PO Type</label>
                            <div class="form-group">
                                <div class='input-group'>
                                    @Html.TextBoxFor(model => model[0].Col19, new { @id = "txt_po_type", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox " + mandatory + "", placeholder = "PO Type" })
                                    <span class="input-group-addon formclass"></span>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">                      
                        <div class='col-sm-4'>
                            <label for="first-name">Party Address <span class="ClientProfileLabelColor">*</span></label>
                            <div class="form-group ">
                                <div class='input-group'>
                                    @Html.TextBoxFor(model => model[0].Col20, new { @id = "txt_partyaddress", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox " + mandatory + "", placeholder = "Party Address" })
                                    <span class="input-group-addon formclass"></span>
                                </div>
                            </div>
                        </div>
                        <div class='col-sm-4'>
                            <label for="first-name">Delivery Challan No <span class="ClientProfileLabelColor">*</span></label>
                            <div class="form-group s">
                                <div class='input-group'>
                                    @Html.TextBoxFor(model => model[0].Col30, new { @id = "txt_del_challanno", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox " + mandatory + "", placeholder = "Delivery Challan No" })
                                    <span class="input-group-addon formclass"></span>
                                </div>
                            </div>
                        </div>
                        <div class='col-sm-4'>
                            <label for="first-name">Delivery Challan Date <span class="ClientProfileLabelColor">*</span></label>
                            <div class="form-group">
                                <div class='input-group'>
                                    @Html.TextBoxFor(model => model[0].Col31, new { @id = "txt_del_challan_date", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-date " + mandatory + "", placeholder = "Delivery Challan Date" })
                                    <span class="input-group-addon formclass"></span>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class='col-sm-4'>
                            <label for="first-name">Delivery Mode <span class="ClientProfileLabelColor">*</span></label>
                            <div class="form-group ">
                                <div class='input-group'>
                                    @Html.TextBoxFor(model => model[0].Col32, new { @id = "txt_del_mode", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox " + mandatory + "", placeholder = "Delivery Mode" })
                                    <span class="input-group-addon formclass"></span>
                                </div>
                            </div>
                        </div>
                        <div class='col-sm-4'>
                            <label for="first-name">EWay Bill No. <span class="ClientProfileLabelColor">*</span></label>
                            <div class="form-group">
                                <div class='input-group'>
                                    @Html.TextBoxFor(model => model[0].Col33, new { @id = "txt_eway_billno", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox " + mandatory + "", placeholder = "EWay Bill No." })
                                    <span class="input-group-addon formclass"></span>
                                </div>
                            </div>
                        </div>
                        <div class='col-sm-4'>
                            <label for="first-name">EWay Bill Date <span class="ClientProfileLabelColor">*</span></label>
                            <div class="form-group ">
                                <div class='input-group'>
                                    @Html.TextBoxFor(model => model[0].Col34, new { @id = "txt_eway_billno", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox " + mandatory + "", placeholder = "EWay Bill Date" })
                                    <span class="input-group-addon formclass"></span>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">                        
                        <div class='col-sm-4'>
                            <label for="first-name">Invoice No. <span class="ClientProfileLabelColor">*</span></label>
                            <div class="form-group ">
                                <div class='input-group'>
                                    @Html.TextBoxFor(model => model[0].Col35, new { @id = "txt_invoice_no", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox " + mandatory + "", placeholder = "Invoice No." })
                                    <span class="input-group-addon formclass"></span>
                                </div>
                            </div>
                        </div>
                        <div class='col-sm-4'>
                            <label for="first-name">Invoice Date <span class="ClientProfileLabelColor">*</span></label>
                            <div class="form-group ">
                                <div class='input-group'>
                                    @Html.TextBoxFor(model => model[0].Col36, new { @id = "txt_invoice_date", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-date " + mandatory + "", placeholder = "Invoice Date" })
                                    <span class="input-group-addon formclass"></span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                @Html.HiddenFor(model => model[0].Col1, new { @id = "hf_clientid" })
                @Html.HiddenFor(model => model[0].Col2, new { @id = "hf_clientunitid" })
                @Html.HiddenFor(model => model[0].Col3, new { @id = "hf_entby" })
                @Html.HiddenFor(model => model[0].Col4, new { @id = "hf_entdate" })
                @Html.HiddenFor(model => model[0].Col5, new { @id = "hf_editby" })
                @Html.HiddenFor(model => model[0].Col6, new { @id = "hf_editdate" })
                @Html.HiddenFor(model => model[0].Col7, new { @id = "hf_recid" })
                @Html.HiddenFor(model => model[0].Col8, new { @id = "hf_url" })
                @Html.HiddenFor(model => model[0].Col9, new { @id = "hf_title" })
                @Html.HiddenFor(model => model[0].Col10, new { @id = "hf_tab_name" })
                @Html.HiddenFor(model => model[0].Col11, new { @id = "hf_where" })
                @Html.HiddenFor(model => model[0].Col12, new { @id = "hf_type" })
                @Html.HiddenFor(model => model[0].Col16, new { @id = "hf_vch_num" })
                @Html.HiddenFor(model => model[0].Col40, new { @id = "hf_man" })
                @if (Model.Count < 1)
                { }
                else
                {
                    for (int i = 0; i < Model.Count; i++)
                    {
                        DataTable dtm = Model[i].dt1;
                        <div class="col-md-12 col-sm-12 col-xs-12">
                            <div class="x_panel" style="padding: 3px 15px !important">

                                <div class="x_content">
                                    <div class="row">
                                        <div class="grid-container">
                                            <div class="grid">
                                                @*@{
                                                        List<int> maxc = Enumerable.Range(0, dtm.Columns.Count)
                                                                .Select(col => dtm.AsEnumerable()
                                                               .Select(row => row[col]).OfType<string>()
                                                    .Max(val => val.Length)).ToList();
                                                    }*@

                                                @foreach (DataColumn dc in dtm.Columns)
                                                {
                                                    int mlength = dtm.Select("[" + dc.ColumnName + "] = MAX([" + dc.ColumnName + "])")[0][dc.ColumnName].ToString().Length;
                                                    int k = 0;
                                                    if (dc.Ordinal == 0)
                                                    {


                                                        <div class="grid-col grid-col--fixed-left" id="col_@dc.Ordinal" style="width:@(mlength * 8)px">
                                                            <div class="grid-item grid-item--header">
                                                                <p>@dc.ColumnName.ToString()</p>
                                                            </div>

                                                            @foreach (DataRow dr in dtm.Rows)
                                                            {
                                                                <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)'>
                                                                    <input name="command" onclick="sethfval('@k');" type="submit" value="+" style="max-height: 20px;padding-top: 0px;" class="btn btn-info btn-sm" formnovalidate data-toggle="tooltip" title="Add More" />
                                                                    <input name="command" onclick="sethfval('@k');" type="submit" value="-" style="max-height: 20px;padding-top: 0px;" class="btn btn-info btn-sm" formnovalidate data-toggle="tooltip" title="Hide" />
                                                                    <label>@k</label>
                                                                </div>
                                                                k++;
                                                            }
                                                        </div>
                                                    }
                                                    if (dc.Ordinal == 1)
                                                    {


                                                        <div class="grid-col" id="col_@dc.Ordinal" style="width:@(mlength * 8)px;left:100px;position:sticky; z-index: 9998;background: white;">
                                                            <div class="grid-item grid-item--header">
                                                                <p>@dc.ColumnName.ToString()</p>
                                                            </div>
                                                            @foreach (DataRow dr in dtm.Rows)
                                                            @*{
                                                                <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)' contenteditable="true">
                                                                    @dr[dc].ToString()
                                                                </div>*@
                                                            }

                                                        </div>
                                                    }
                                                    else if (dc.Ordinal == 2)
                                                    {


                                                        <div class="grid-col" id="col_@dc.Ordinal" style="width:300px">
                                                            <div class="grid-item grid-item--header">
                                                                <p>@dc.ColumnName.ToString()</p>
                                                            </div>

                                                            @foreach (DataRow dr in dtm.Rows)
                                                            {
                                                                string id = "dd_item_" + dtm.Rows.IndexOf(dr);

                                                                <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)'>
                                                                    <div class="row">
                                                                        <div id="mtxt" class="col-md-10"> @dr[dc].ToString()</div>
                                                                        <div class="col-md-10" style="display:none">
                                                                            @Html.TextBoxFor(m => m[0].Col51, new { id, @class = "form-control select2-items" })
                                                                        </div>
                                                                        <div id="msrc" class="col-md-2"><i class="fa fa-edit" onclick="showddl(this);"></i></div>
                                                                    </div>

                                                                </div>


                                                            }
                                                        </div>
                                                    }

                                                    else if (dc.Ordinal > 2)
                                                    {
                                                        <div class="grid-col" id="col_@dc.Ordinal" style="width:@(mlength * 8)px">
                                                            <div class="grid-item grid-item--header">
                                                                <p>@dc.ColumnName.ToString()</p>
                                                            </div>
                                                            @foreach (DataRow dr in dtm.Rows)
                                                            {
                                                                <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)' contenteditable="true">
                                                                    @dr[dc].ToString()
                                                                </div>
                                                            }
                                                        </div>

                                                    }
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                }



            </div>
        </div>
    </div>
    <input type="hidden" name="hfrow" id="hfrow" />
    <input type="hidden" name="hftable" id="hftable" />
    <input type="submit" id="callback1" value="Callback" name="Command" title="callback" style="visibility:hidden" class="btn btn-primary" />
}

<link href="~/Content/css/select2.css" rel="stylesheet" />
<script src="~/Scripts/select2.js"></script>
<script src="~/Scripts/jquery.validate.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.js"></script>

<script type="text/javascript">

    function sethfval(val) {

        $("#hfrow").val(val);
        setTableDatat();
    }

    function showddl(ctrl) {
        debugger
        //if($(ctrl).parent().parent().siblings().is(":visible"))
        if ($(ctrl).parent().siblings().eq(1).is(":visible")) {
            $(ctrl).parent().siblings().eq(1).hide();
            $(ctrl).parent().siblings().eq(0).show();
        }
        else {
            $(ctrl).parent().siblings().eq(1).show();
            $(ctrl).parent().siblings().eq(0).hide();
        }

    }
    $(document).ready(function () {
        @Html.Raw(ViewBag.scripCall);
        $("[id*=hf_controller]").val('@ViewContext.RouteData.Values["Controller"].ToString()');
        $("[id*=hf_viewname]").val('@Path.GetFileNameWithoutExtension(Server.MapPath(VirtualPath))');
    });

    function showdiv(ctrl) {

        var ind = ctrl.value;
        if (ind == "001") { $("#div_po").show(); }
        else if (ind == "002") { $("#div_po").hide(); }
    }

    function editfun() {
        var data = show_Foo('Select Entry For Edit', 'EDIT', '1', '@viewName', '@controllerName');
        setTableDatat();
    }
    function viewfun() {
        var data = show_Foo('View Detail', 'VIEW', '0', '@viewName', '@controllerName');
        setTableDatat();
    }

    function selectionIndexChange(ctrl) {

        //javascript: __doPostBack(ctrl.id, '');
        $(parent.document.getElementById('btn_class')).trigger('click');
    }
    function setTableDatat() {
        try {
            debugger
            datatable = new Array();

            var heads = $("[id*=col_]");
            var rows = $(heads).eq(0).find("[id*=row_]");
            for (var r = 0; r < rows.length; r++) {
                var row = $("[id=row_" + r + "]");
                var arr = new Array();
                for (var h = 0; h < heads.length; h++) {
                    var obj = {};
                    obj[heads[h].children[0].innerText] = row[h].innerText;
                    arr.push(obj);
                }
                datatable.push(arr);
            }
        }
        catch (err) { alert(err); return; }
        $("#hftable").val(JSON.stringify(datatable));
        //PageMethods.settable(datatable);


    }
    $(document).ready(function () {
               //The url we will send our get request to
        var attendeeUrl = '@Url.Action("GetItems", "Inventory")';
        var pageSize = 20;

        $('.select2-items').select2(
            {
            placeholder: 'Select Item',
            //Does the user have to enter any data before sending the ajax request
            minimumInputLength: 0,
            allowClear: true,
            ajax: {
                //How long the user has to pause their typing before sending the next request
                quietMillis: 150,
                //The url of the json service
                url: attendeeUrl,
                dataType: 'jsonp',
                //Our search term and what page we are on
                data: function (term, page) {

                    return {
                        pageSize: pageSize,
                        pageNum: page,
                        searchTerm: term
                    };
                },
                results: function (data, page) {
                    //Used to determine whether or not there are more results available,
                    //and if requests for more data should be sent in the infinite scrolling
                    var more = (page * pageSize) < data.Total;
                    return { results: data.Results, more: more };
                }
            }
            }).on("change", function (e) {
                debugger
                var id = "", text = "";
                if (e.added != undefined) {
                    id = e.added.id;
                    text = e.added.text;
                }
                var cols = $("[id$=row_" + $(this)[0].id.split('_')[2] + "]");
                cols[1].innerText = id;
                $(this).parent().siblings().eq(0)[0].innerText = text;
                $(this).parent().hide();
                $(this).parent().siblings().eq(0).show()

            });

    });

</script>
