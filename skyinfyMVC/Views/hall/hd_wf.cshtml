@using System.Data;
@model IList<skyinfyMVC.Models.Tmodelmain>
@{
    /**/

    string clr = "";
    string MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
    sgenFun sgen = new sgenFun(MyGuid); string mandatory = "sa-mandatory";
    Layout = "~/Views/Shared/_MasterPage.cshtml";
    string userCode = sgen.GetCookie(MyGuid, "userCode");
    var viewName = sgen.GetSession(MyGuid, "viewName").ToString();
    var controllerName = sgen.GetSession(MyGuid, "controllerName").ToString();
    #region buttons
    string buttons = "";
    buttons += "<div class='col-md-8'>" +
"        <div class='row'>" +
"            <div class='col-sm-2'>" +
"                <div class='form-group'>" +
"                    <div class='input-group'>" +
"                        <button type='submit' class='btn btn-primary form-control sa-button' " + ViewBag.vnew + " formnovalidate id='btnnew' name='command' value='New' accesskey='N'><u>N</u>ew</button>" +
"                        <span class='input-group-addon formclass'></span>" +
"                    </div>" +
"                </div>" +
"            </div>" +
"            <div class='col-sm-2' > " +
"                <div class='form-group'>" +
"                    <div class='input-group'>" +
"                        <button type='button' class='btn btn-primary form-control sa-button' " + ViewBag.vedit + " id='btnedit' name='command' value='Edit' accesskey='I' onclick='editfun();'>Ed<u>i</u>t</button>" +
"                        <span class='input-group-addon formclass'></span>" +
"                    </div>" +
"                </div>" +
"            </div>" +
"            <div class='col-sm-2'> " +
"                <div class='form-group'>" +
"                    <div class='input-group'>" +
"                        <button type='submit' class='btn btn-primary form-control sa-button' " + ViewBag.vsave + " id='btnsave' name='command' value= '" + Model[0].Col13 + "' accesskey = '" + Model[0].Col121 + "' > " + Html.Raw(Model[0].Col122) + "</button>" +
"                        <span class='input-group-addon formclass'></span>" +
"                    </div>" +
"                </div>" +
"            </div>" +
"            <div class='col-sm-2'>" +
"                <div class='form-group'> " +
"                    <div class='input-group'>" +
"                        <button type='submit' class='btn btn-primary form-control sa-button' " + ViewBag.vsavenew + " id='btnsavenew' name='command' value= '" + Model[0].Col100 + "' accesskey ='W'> " + Html.Raw(Model[0].Col123) + "</button>" +
"                        <span class='input-group-addon formclass'></span>" +
"                    </div>" +
"                </div>" +
"            </div>" +
"            <div class='col-sm-2' > " +
"                <div class='form-group'>" +
"                    <div class='input-group'>" +
"                        <button type='button' class='btn btn-primary form-control sa-button' id='btndetail' name='command' value='View' accesskey='V' onclick='viewfun();'><u>V</u>iew</button>" +
"                        <span class='input-group-addon formclass'></span>" +
"                    </div>" +
"                </div>" +
"            </div>" +
"            <div class='col-sm-2'>" +
"                <div class='form-group'>" +
"                    <div class='input-group'>" +
"                        <button type='submit' class='form-control sa-button sa-btncancel' formnovalidate id='btncancel' name='command' value='Cancel' accesskey='C'><u>C</u>ancel</button>" +
"                        <span class='input-group-addon formclass'></span>" +
"                    </div>" +
"                </div>" +
"            </div>" +
"        </div>" +
"    </div>";
    #endregion

}
@using (Html.BeginForm(viewName, controllerName, new { @m_id = EncryptDecrypt.Encrypt(Model[0].Col15), @mid = EncryptDecrypt.Encrypt(Model[0].Col14) }, FormMethod.Post, new { enctype = "multipart/form-data" }))
{

    <div class="row">
        <div class="col-sm-4">
            <div class="form-group">
                <div class='input-group'>
                    <div class="title_left">
                        <h3>@Model[0].Col9</h3>
                    </div>
                    <span class="input-group-addon formclass"></span>
                </div>
            </div>
        </div>

        @Html.Raw(buttons)

    </div>
    <div class="clearfix"></div>
    @Html.HiddenFor(model => model[0].Col1, new { @id = "hf_clientid" })
    @Html.HiddenFor(model => model[0].Col2, new { @id = "hf_clientunitid" })
    @Html.HiddenFor(model => model[0].Col3, new { @id = "hf_entby" })
    @Html.HiddenFor(model => model[0].Col4, new { @id = "hf_entdate" })
    @Html.HiddenFor(model => model[0].Col5, new { @id = "hf_editby" })
    @Html.HiddenFor(model => model[0].Col6, new { @id = "hf_editdate" })
    @Html.HiddenFor(model => model[0].Col7, new { @id = "hf_recid" })
    @Html.HiddenFor(model => model[0].Col8, new { @id = "hf_url" })
    @Html.HiddenFor(model => model[0].Col9, new { @id = "hf_title" })
    @Html.HiddenFor(model => model[0].Col10, new { @id = "hf_tab_name" })
    @Html.HiddenFor(model => model[0].Col11, new { @id = "hf_where" })
    @Html.HiddenFor(model => model[0].Col12, new { @id = "hf_type" })
    @Html.HiddenFor(model => model[0].Col13, new { @id = "hf_btn_text" })
    @Html.HiddenFor(model => model[0].Col14, new { @id = "hf_mid" })
    @Html.HiddenFor(model => model[0].Col15, new { @id = "hf_m_id" })
    @Html.HiddenFor(model => model[0].Col16, new { @id = "hf_vch_num" })
    @Html.HiddenFor(model => model[0].Col100, new { @id = "hf_savenew" })
    @Html.HiddenFor(model => model[0].Col121, new { @id = "Update" })
    @Html.HiddenFor(model => model[0].Col122, new { @id = "Save" })
    @Html.HiddenFor(model => model[0].Col123, new { @id = "savenew" })

    <div class="clearfix"></div>
    <div class="x_panel">
        <div class="x_content">
            <div class="row">
                <div class="col-sm-6 ">
                    <label for="first-name">
                        Doc no<span class="ClientProfileLabelColor"></span>
                    </label>
                    <div class="form-group">
                        <div class='input-group'>
                            @Html.TextBoxFor(model => model[0].Col16, new { @id = "Txt_doc", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-mandatory",@readonly=true, placeholder = "Doc No" })
                            <span class="input-group-addon formclass"></span>
                        </div>
                    </div>
                </div>
                <div class="col-sm-6 ">
                    <label for="first-name">
                        Help type <span class="ClientProfileLabelColor">*</span>
                    </label>
                    <div class="form-group">
                        <div class='input-group'>
                            @Html.DropDownListFor(model => model[0].SelectedItems3, new MultiSelectList(Model[0].TList3, "Value", "Text", Model[0].SelectedItems3), new { @id = "ddl_htyp", @class = "sa-select2-multiple form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-mandatory", @multiple = "multiple" })
                            <span class="input-group-addon formclass"></span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <hr />
            </div>
            <div class="col-md-12 col-sm-12 col-xs-12">
                <div class='col-sm-1'>
                    <label for="first-name">Level <span class="ClientProfileLabelColor"></span></label>
                </div>
                <div class='col-sm-3'>
                    <label for="first-name">Select User <span class="ClientProfileLabelColor"></span></label>
                </div>
                <div class='col-sm-3'>
                    <label for="first-name">User Role<span class="ClientProfileLabelColor"></span></label>
                </div>
                <div class='col-sm-1'>
                    <label for="first-name">Intimation Only<span class="ClientProfileLabelColor"></span></label>
                </div>
                <div class='col-sm-1'>
                    <label for="first-name">Send Mail<span class="ClientProfileLabelColor"></span></label>
                </div>
                <div class='col-sm-3'>
                    <label for="first-name">TAT (Hours)<span class="ClientProfileLabelColor"></span></label>
                </div>
            </div>

            @for (int k = 0; k < Model[0].LTM2.Count; k++)
            {
                <div class="col-md-12 col-sm-12 col-xs-12">
                    @Html.HiddenFor(m => m[0].LTM2[k].Col1)
                    @Html.HiddenFor(m => m[0].LTM2[k].Col19)

                    <div class="x_panel" style="padding: 3px 15px !important">
                        <div class="x_title" style="padding: 0px !important">
                            <!-- tools box -->
                            <ul class="nav navbar-right panel_toolbox">
                                <li><input name="command" onclick="sethfval('@k');" type="submit" value="Add" class="fa fa-plus" formnovalidate data-toggle="tooltip" title="Add More" /> </li>
                                <li><input name="command" onclick="sethfval('@k');" type="submit" value="Remove" class="fa fa-close" formnovalidate data-toggle="tooltip" title="Remove" /> </li>
                            </ul>
                            <div class="clearfix" id="diclear"></div>
                        </div>
                        <div class="x_content">
                            <div class="row">
                                <div class='col-sm-1'>
                                    <div class="form-group">
                                        <div class='input-group'>
                                            <b>@(k + 1)</b> <span class="input-group-addon formclass"></span>
                                        </div>
                                    </div>
                                </div>
                                <div class='col-sm-3'>
                                    <div class="form-group">
                                        <div class='input-group'>
                                            @Html.DropDownListFor(model => model[0].LTM2[k].SelectedItems1, new MultiSelectList(Model[0].LTM2[k].TList1, "Value", "Text", Model[0].LTM2[k].SelectedItems1), new { @id = "ddl_user" + k + "", @style = "width: 100%;", @class = "sa-select2-single form-control col-md-12 col-sm-12 col-xs-12 sa-textbox ", @multiple = "multiple" })
                                            <span class="input-group-addon formclass"></span>
                                        </div>
                                    </div>
                                </div>
                                <div class='col-sm-3'>
                                    <div class="form-group">
                                        <div class='input-group'>
                                            @Html.DropDownListFor(model => model[0].LTM2[k].SelectedItems2, new MultiSelectList(Model[0].LTM2[k].TList2, "Value", "Text", Model[0].LTM2[k].SelectedItems2), new { @id = "ddl_utype" + k + "", @style = "width: 100%;", @class = "sa-select2-single form-control col-md-12 col-sm-12 col-xs-12 sa-textbox ", @multiple = "multiple"})
                                            <span class="input-group-addon formclass"></span>
                                        </div>
                                    </div>
                                </div>
                                <div class='col-sm-1'>
                                    <div class="form-group">
                                        <div class='input-group'>
                                            @Html.CheckBoxFor(m => Model[0].LTM2[k].Chk1, new { @id = "chk_1" + k + "", @class = "sa-input checkbox" })
                                            <span class="input-group-addon formclass"></span>
                                        </div>
                                    </div>
                                </div>
                                <div class='col-sm-1'>
                                    <div class="form-group">
                                        <div class='input-group'>
                                            @Html.CheckBoxFor(m => Model[0].LTM2[k].Chk2, new { @id = "chk_2" + k + "", @class = "sa-input checkbox" })
                                            <span class="input-group-addon formclass"></span>
                                        </div>
                                    </div>
                                </div>
                                <div class='col-sm-3'>
                                    <div class="form-group">
                                        <div class='input-group'>
                                            @Html.TextBoxFor(model => model[0].LTM2[k].Col17, new { @id = "txt_tothour" + k + "", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", placeholder = "TAT (Hours)" })
                                            <span class="input-group-addon formclass"></span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
    <input type="hidden" name="hfrow" id="hfrow" />
    <input type="submit" id="callback1" value="Callback" formnovalidate name="Command" title="callback" style="visibility:hidden" class="btn btn-primary" />

}
<script type="text/javascript">
    $(document).ready(function () {
        @Html.Raw(ViewBag.scripCall);
        $("[id*=hf_controller]").val('@ViewContext.RouteData.Values["Controller"].ToString()');
        $("[id*=hf_viewname]").val('@Path.GetFileNameWithoutExtension(Server.MapPath(VirtualPath))');
    });
    function sethfval(val) { $("#hfrow").val(val); }
    function editfun() { var data = show_Foo('Select Entry For Edit', 'EDIT', '1', '@viewName', '@controllerName'); }
    function viewfun() { var data = show_Foo('View Detail', 'DETAIL', '0', '@viewName', '@controllerName'); }
        function fileselected(ctrl) {

        var files = ctrl.files;
        var cnts = files.length;
        $(ctrl).parent().parent().find("span").css("color", "blue");
        for (var k = 0; k < cnts; k++) {

            var file = files[k];
            var namelen = file.name.length;
            if (namelen > 20) {
                $(ctrl).parent().parent().find("span")[0].innerText = "Sorry!! The file name can not be more than 15 Chars";
                $(ctrl).parent().parent().find("span").css("color", "red");
                return;
            }
            var ext = file.name.match(/\.(.+)$/)[1].toLowerCase();
            switch (ext) {
                case 'pdf':
                case 'jpg':
                case 'jpeg':
                case 'png':
                case 'bmp':
                    break
                default:
                    $(ctrl).parent().parent().find("span")[0].innerText = "Sorry!! Upload only pdf,,jpg,jpeg,png file";
                    $(ctrl).parent().parent().find("span").css("color", "red");
                    return;
                    break;
            }

            //var filesize = file.size / 1024 / 1024;
            var filesize = file.size / 1024;
            if (filesize < 1000) {
                var filenme = file.name.split('\\');
                var lenn = filenme.length;
                var namee = filenme[lenn - 1];
                if (cnts > 1) {
                    $(ctrl).parent().parent().find("span")[0].innerText = cnts + " File Selected";
                }
                else { $(ctrl).parent().parent().find("span")[0].innerText = namee; }
            }
            else {
                $(ctrl).parent().parent().find("span")[0].innerText = 'Sorry!! This file size is:' + filesize + 'Kb Max. Allowed size is 1000Kb';
                $(ctrl).parent().parent().find("span").css("color", "red");
            }
        }


        var files = ctrl.files;
        var thmbcnt = ctrl.id.split('d')[1].trim();
        for (var i = 0; i < files.length; i++) {
            var file = files[i];
            var imageType = /image.*/;
            if (!file.type.match(imageType)) {
                //continue;
            }

            var img = document.getElementById("thumbnil" + thmbcnt + "");
            img.file = file;
            var reader = new FileReader();
            reader.onload = (function (aImg) {
                return function (e) {

                    aImg.src = e.target.result;
                    aImg.setAttribute("data-pdf-thumbnail-file", e.target.result);
                    //createPDFThumbnails();
                };
            })(img);
            reader.readAsDataURL(file);
            $("#thumbnil" + thmbcnt + "").show();
            $("#img_close" + thmbcnt + "").show();

        }
    }
    function imgclick(ctrl) { $(ctrl).closest('div').find("input[type=file]").click(); }

    function fdelete(evt, id) {
        debugger;
        evt.preventDefault();
        var $form = $("add_exp");
        var obj = { "value": id };
        myMethod('@controllerName', '@viewName', "fdelete", obj, null);
        $("#callback1").click();
    }
</script>
