@using System.Data;
@model IList<skyinfyMVC.Models.Tmodelmain>
@{

    string MyGuid = Model[0].Col15;
    sgenFun sgen = new sgenFun(MyGuid); string mandatory = "sa-mandatory";
    Layout = "~/Views/Shared/_MasterPage.cshtml";
    string userCode = sgen.GetCookie(MyGuid, "userCode");
    var viewName = sgen.GetSession(MyGuid, "viewName").ToString();
    var controllerName = sgen.GetSession(MyGuid, "controllerName").ToString();
    #region buttons
    string buttons = "";
    buttons += "<div class='col-md-8'>" +
"        <div class='row'>" +
"            <div class='col-sm-2'>" +
"                <div class='form-group'>" +
"                    <div class='input-group'>" +
"                        <button type='button' class='btn btn-primary form-control sa-button' " + ViewBag.vnew + " formnovalidate id='btnnew' onclick='newfun();setTableDatat();' name='command' value='New' accesskey='N'><u>N</u>ew</button>" +
"                        <span class='input-group-addon formclass'></span>" +
"                    </div>" +
"                </div>" +
"            </div>" +
"            <div class='col-sm-2'> " +
"                <div class='form-group'>" +
"                    <div class='input-group'>" +
"                        <button type='button' class='btn btn-primary form-control sa-button' " + ViewBag.vedit + " id='btnedit' name='command' value='Edit' accesskey='I' onclick='editfun();setTableDatat();'>Ed<u>i</u>t</button>" +
"                        <span class='input-group-addon formclass'></span>" +
"                    </div>" +
"                </div>" +
"            </div>" +
"            <div class='col-sm-2'> " +
"                <div class='form-group'>" +
"                    <div class='input-group'>" +
"                        <button type='submit' class='btn btn-primary form-control sa-button' " + ViewBag.vsave + " id='btnsave' onclick='setTableDatat();' name='command' value= '" + Model[0].Col13 + "' accesskey = '" + Model[0].Col121 + "' > " + Html.Raw(Model[0].Col122) + "</button>" +
"                        <span class='input-group-addon formclass'></span>" +
"                    </div>" +
"                </div>" +
"            </div>" +
"            <div class='col-sm-2'>" +
"                <div class='form-group'> " +
"                    <div class='input-group'>" +
"                        <button type='submit' class='btn btn-primary form-control sa-button' " + ViewBag.vsavenew + " id='btnsavenew' onclick='setTableDatat();' name='command' value= '" + Model[0].Col100 + "' accesskey ='W'> " + Html.Raw(Model[0].Col123) + "</button>" +
"                        <span class='input-group-addon formclass'></span>" +
"                    </div>" +
"                </div>" +
"            </div>" +
"            <div class='col-sm-2'> " +
"                <div class='form-group'>" +
"                    <div class='input-group'>" +
"                        <button type='button' class='btn btn-primary form-control sa-button' id='btndetail' name='command' value='View' accesskey='V' onclick='setTableDatat();viewfun();'><u>V</u>iew</button>" +
"                        <span class='input-group-addon formclass'></span>" +
"                    </div>" +
"                </div>" +
"            </div>" +
"            <div class='col-sm-2'>" +
"                <div class='form-group'>" +
"                    <div class='input-group'>" +
"                        <button type='submit' class='form-control sa-button sa-btncancel' formnovalidate id='btncancel' name='command' value='Cancel' onclick='setTableDatat();' accesskey='C'><u>C</u>ancel</button>" +
"                        <span class='input-group-addon formclass'></span>" +
"                    </div>" +
"                </div>" +
"            </div>" +
"            <div class='col-sm-2'>" +
"                <div class='form-group'>" +
"                    <div class='input-group'>" +
"                        <button type='button' class='sa-button btn btn-primary form-control' id='btn_print' onclick='setTableDatat();printfun();' name='command' value='Print' accesskey='P'><u>P</u>rint</button>" +
"                        <span class='input-group-addon formclass'></span>" +
"                    </div>" +
"                </div>" +
"            </div>" +
"        </div>" +
"    </div>";
    #endregion
}
@using (Html.BeginForm(viewName, controllerName, new { @m_id = EncryptDecrypt.Encrypt(Model[0].Col15), @mid = EncryptDecrypt.Encrypt(Model[0].Col14) }, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
<div class="row">

    <div class="col-sm-4">
        <div class="form-group">
            <div class='input-group'>
                <div class="title_left">
                    <h3 id="hd_title">@Model[0].Col9</h3>
                </div>

                <span class="input-group-addon formclass"></span>
            </div>
        </div>
    </div>
    @Html.Raw(buttons)


</div>
    <div class="clearfix"></div>
    {
        @Html.HiddenFor(model => model[0].Col1, new { @id = "hf_clientid" })
        @Html.HiddenFor(model => model[0].Col2, new { @id = "hf_clientunitid" })
        @Html.HiddenFor(model => model[0].Col3, new { @id = "hf_entby" })
        @Html.HiddenFor(model => model[0].Col4, new { @id = "hf_entdate" })
        @Html.HiddenFor(model => model[0].Col5, new { @id = "hf_editby" })
        @Html.HiddenFor(model => model[0].Col6, new { @id = "hf_editdate" })
        @Html.HiddenFor(model => model[0].Col7, new { @id = "hf_recid" })
        @Html.HiddenFor(model => model[0].Col8, new { @id = "hf_url" })
        @Html.HiddenFor(model => model[0].Col9, new { @id = "hf_title" })
        @Html.HiddenFor(model => model[0].Col10, new { @id = "hf_tab_name" })
        @Html.HiddenFor(model => model[0].Col11, new { @id = "hf_where" })
        @Html.HiddenFor(model => model[0].Col12, new { @id = "hf_type" })
        @Html.HiddenFor(model => model[0].Col13, new { @id = "hf_btn_text" })
        @Html.HiddenFor(model => model[0].Col14, new { @id = "hf_mid" })
        @Html.HiddenFor(model => model[0].Col15, new { @id = "hf_m_id" })
        @Html.HiddenFor(model => model[0].Col16, new { @id = "hf_vch_num" })
        @Html.HiddenFor(model => model[0].Col20, new { @id = "hf_party_code" })
        @Html.HiddenFor(model => model[0].Col23, new { @id = "hf_fun" })
        @Html.HiddenFor(model => model[0].Col100, new { @id = "hf_savenew" })
        @Html.HiddenFor(model => model[0].Col121, new { @id = "Update" })
        @Html.HiddenFor(model => model[0].Col122, new { @id = "Save" })
        @Html.HiddenFor(model => model[0].Col123, new { @id = "savenew" })

        <div class="row">
            <div class="col-md-12 col-sm-12 col-xs-12">
                <div class="x_panel">
                    <div class="x_content">

                        <div class="row">
                            <div class="col-sm-3">
                                <label for="first-name">
                                    Party Name<span class="ClientProfileLabelColor">*</span>
                                </label>
                                <div class="form-group">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model[0].Col19, new { @id = "txt_party", @ReadOnly = "true", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", data_placeholder = "Select Party" })
                                        <span class="input-group-addon" data-toggle="tooltip" data-placement="top" title="Select Party" id="spn_add" onclick="setTableDatat();  newfun();"><i class="fa fa-search"></i></span>

                                    </div>
                                </div>
                            </div>

                            <div class="col-sm-3">
                                <label for="first-name">
                                    Party Contact No <span class="ClientProfileLabelColor"></span>
                                </label>
                                <div class="form-group">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model[0].Col25, new { @id = "txt_contact", @ReadOnly = "true", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", data_placeholder = "Party Contact No" })



                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>

                            <div class="col-sm-3">
                                <label for="first-name">
                                    Email Id <span class="ClientProfileLabelColor"></span>
                                </label>
                                <div class="form-group">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model[0].Col26, new { @id = "txt_email", @ReadOnly = "true", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", data_placeholder = "Email Id" })



                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-3">
                                <label for="first-name">
                                    Function Name <span class="ClientProfileLabelColor"></span>
                                </label>
                                <div class="form-group">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model[0].Col21, new { @id = "txt_function", @ReadOnly = "true", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", data_placeholder = "Function Name" })



                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>

                            <div class="col-sm-3">
                                <label for="first-name">
                                    Function Date <span class="ClientProfileLabelColor"></span>
                                </label>
                                <div class="form-group">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model[0].Col22, new { @id = "txt_func_dt", @ReadOnly = "true", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", data_placeholder = "Function Date" })

                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>

                            <div class="col-sm-3">
                                <label for="first-name">
                                    No. Of Pax <span class="ClientProfileLabelColor"></span>
                                </label>
                                <div class="form-group">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model[0].Col27, new { @id = "txt_pax", @ReadOnly = "true", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", data_placeholder = "No. Of Pax" })

                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>

                            <div class="col-sm-3">
                                <label for="first-name">
                                    Total Expense Amount <span class="ClientProfileLabelColor"></span>
                                </label>
                                <div class="form-group">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model[0].Col24, new { @id = "txt_total", @ReadOnly = "true", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", data_placeholder = "Total Expense Amount" })



                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>

                            <div class="col-sm-3">
                                <label for="first-name">
                                    Exp Per Pax <span class="ClientProfileLabelColor"></span>
                                </label>
                                <div class="form-group">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model[0].Col28, new { @id = "txt_per_ex", @ReadOnly = "true", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", data_placeholder = "Exp Per Pax" })

                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>






                        </div>





                    </div>
                </div>
            </div>
        </div>


        <style>

            .datepicker.dropdown-menu {
                z-index: 99999 !important
            }

            .bootstrap-datetimepicker-widget.dropdown-menu {
                overflow: visible;
                height: 100%;
            }
        </style>
        if (Model.Count < 1)
        { }
        else
        {
            for (int i = 0; i < Model.Count; i++)
            {
                DataTable dtm = Model[i].dt1;
                <div class="col-md-12 col-sm-12 col-xs-12">
                    <div class="x_panel" style="padding: 3px 15px !important">

                        <div class="x_content">
                            <div class="row">
                                <h5>Expenses Head Wise</h5>
                                <div class="grid-container">
                                    <div class="grid">

                                        @try
                                        {
                                            foreach (DataColumn dc in dtm.Columns)
                                            {
                                                int mlength = 20;
                                                try
                                                {
                                                    mlength = dtm.Select("[" + dc.ColumnName + "] = MAX([" + dc.ColumnName + "])")[0][dc.ColumnName].ToString().Length;
                                                }
                                                catch (Exception err) { }
                                                int k = 0;

                                                if ((dc.Ordinal == 0) && (dc.ColumnName.ToString() == "HEAD"))
                                                {
                                                    <div class="grid-col grid-col--fixed-left" id="col_@dc.Ordinal" style="width:25px">
                                                        <div class="grid-item grid-item--header">
                                                            <p>@dc.ColumnName.ToString()</p>
                                                        </div>

                                                        @foreach (DataRow dr in dtm.Rows)
                                                        {
                                                            <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)'>
                                                                <input name="command" onclick="sethfval('@k');getitem();" type="button" value="+" style="max-height: 20px;padding-top: 0px;" class="btn btn-info btn-sm" formnovalidate data-toggle="tooltip" title="Add More" />
                                                                <input name="command" onclick="sethfval('@k');" type="submit" value="-" style="max-height: 20px;padding-top: 0px;" class="btn btn-info btn-sm" formnovalidate data-toggle="tooltip" title="Hide" />
                                                                <input type="hidden" value="@dr[dc].ToString()" id="fstr_@dc.Ordinal" />
                                                            </div>
                                                            k++;
                                                        }
                                                    </div>
                                                }

                                                else if (dc.Ordinal == 4)
                                                {
                                                    <div class="grid-col" id="col_@dc.Ordinal" style="width:30%;">
                                                        <div class="grid-item grid-item--header">
                                                            <p>@dc.ColumnName.ToString()</p>
                                                        </div>
                                                        @foreach (DataRow dr in dtm.Rows)
                                                        {
                                                            <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)' contenteditable="true" onkeyup="calcamt();">
                                                                @dr[dc].ToString()
                                                            </div>
                                                        }
                                                    </div>
                                                }

                                                else if (dc.Ordinal == 5)
                                                {
                                                    <div class="grid-col" id="col_@dc.Ordinal" style="width:30%;">
                                                        <div class="grid-item grid-item--header">
                                                            <p>@dc.ColumnName.ToString()</p>
                                                        </div>
                                                        @foreach (DataRow dr in dtm.Rows)
                                                        {
                                                            <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)' contenteditable="true">
                                                                @dr[dc].ToString()
                                                            </div>
                                                        }
                                                    </div>
                                                }

                                                else
                                                {
                                                    <div class="grid-col" id="col_@dc.Ordinal" style="width:30%">
                                                        <div class="grid-item grid-item--header">
                                                            <p>@dc.ColumnName.ToString()</p>
                                                        </div>
                                                        @foreach (DataRow dr in dtm.Rows)
                                                        {
                                                            <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)' contenteditable="false">
                                                                @dr[dc].ToString()
                                                            </div>
                                                        }
                                                    </div>
                                                }
                                            }
                                        }
                                        catch (Exception err)
                                        {

                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            }
        }

    }
    <input type="hidden" name="hfrow" id="hfrow" />
    <input type="hidden" name="hftable" id="hftable" />
    <input type="hidden" name="hfrow" id="hfrow" />
    <input type="submit" id="callback1" formnovalidate value="Callback" name="Command" title="callback" style="visibility:hidden" class="btn btn-primary" />
}
<script type="text/javascript">
    //debugger;
    $(document).ready(function () {
        @Html.Raw(ViewBag.scripCall);
        $("[id*=hf_controller]").val('@ViewContext.RouteData.Values["Controller"].ToString()');
        $("[id*=hf_viewname]").val('@Path.GetFileNameWithoutExtension(Server.MapPath(VirtualPath))');

        calcamt();
    });

    function checkrefcode(ctrl) {
        //debugger;
        var obj = { "value": $(ctrl).val() };
        var res = myMethod('@controllerName','@viewName', 'checkrefcode', obj, ctrl);
    }




    function editfun() { var data = show_Foo('Select Entry For Edit', 'EDIT', '1', '@viewName', '@controllerName'); }
    function printfun() { var data = show_Foo('Select Entry For Print', 'PRINT', '1', '@viewName', '@controllerName'); }
    function viewfun() { var data = show_Foo('View Detail', 'VIEW', '1', '@viewName', '@controllerName'); }
    @*function PARTY() { var data = show_Foo('Select Party', 'NEW', '1', '@viewName', '@controllerName'); }*@
    function newfun() { var data = show_Foo('Select Party', 'NEW', '1', '@viewName', '@controllerName'); }





    function setTableDatat() {
        try {
            //debugger;
            datatable = new Array();

            var heads = $("[id*=col_]");
            var rows = $(heads).eq(0).find("[id*=row_]");
            for (var r = 0; r < rows.length; r++) {
                var row = $("[id=row_" + r + "]");
                var arr = new Array();
                for (var h = 0; h < heads.length; h++) {
                    var obj = {};
                    obj[heads[h].children[0].innerText] = row[h].innerText;
                    arr.push(obj);
                }
                datatable.push(arr);
            }
        }
        catch (err) { alert(err); return; }
        $("#hftable").val(JSON.stringify(datatable));
        //PageMethods.settable(datatable);


    }
    function sethfval(val) {

        $("#hfrow").val(val);
        setTableDatat();
    }

    function getitem()                                               /* for  additem or plus minus buttons*/
    {
        //debugger
        var icode = "", chkcode = "", ptype = "";

        ptype = "";
         var acode = $("#hf_party_code")[0].value;
        if (acode == "") { showmsgJS(1, "Please select Party", 2); return; }    /*popup for first*/
        var heads = $("[id*=col_]");
        var rows = $(heads).eq(0).find("[id*=row_]");
        for (var r = 0; r < rows.length; r++) {

            var row = $("[id=row_" + r + "]");
            chkcode = row[2].innerText.trim();
            if (chkcode != "-" && chkcode!="") {
                icode = icode + chkcode + ",";
            }
        }

        var data = show_Foo('Select Head', 'Head', '2', '@viewName', '@controllerName', icode, "");
    }

    function calcamt()
    {
        //debugger;
        var amt = 0;
        var exp = 0;


        var heads = $("[id*=col_]");
        var rows = $(heads).eq(0).find("[id*=row_]");
        for (var r = 0; r < rows.length; r++)
        {
            var row = $("[id=row_" + r + "]");
            exp = parseFloat(row[4].innerText);
            if (isNaN(exp)) { exp = 0; }
            amt = parseFloat(exp) +parseFloat(amt);
        }
        if (isNaN(amt)) { amt = 0; }
        $("#txt_total")[0].value = amt;
        $("#txt_per_ex")[0].value = (parseFloat(amt) / parseFloat($("#txt_pax")[0].value)).toFixed(2);

        if (isNaN($("#txt_per_ex")[0].value)) { $("#txt_per_ex")[0].value = 0; }
    }

</script>
