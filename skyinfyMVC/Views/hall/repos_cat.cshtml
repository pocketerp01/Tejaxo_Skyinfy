@using System.Data;
@model IList<skyinfyMVC.Models.Tmodelmain>
@{
    string clr = "";
    string MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
    sgenFun sgen = new sgenFun(MyGuid); string mandatory = "sa-mandatory";
    Layout = "~/Views/Shared/_MasterPage.cshtml";
    string userCode = sgen.GetCookie(MyGuid, "userCode");
    var viewName = sgen.GetSession(MyGuid, "viewName").ToString();
    var controllerName = sgen.GetSession(MyGuid, "controllerName").ToString();
    #region buttons
    string buttons = "";
    buttons += "<div class='col-md-8'>" +
"        <div class='row'>" +
"            <div class='col-sm-2'> " +
"                <div class='form-group'>" +
"                    <div class='input-group'>" +
"                        <button type='submit' class='btn btn-primary form-control sa-button' " + ViewBag.vsave + " id='btnsave' name='command' value= '" + Model[0].Col13 + "' accesskey = '" + Model[0].Col121 + "' > " + Html.Raw(Model[0].Col122) + "</button>" +
"                        <span class='input-group-addon formclass'></span>" +
"                    </div>" +
"                </div>" +
"            </div>" +
"            <div class='col-sm-2'>" +
"                <div class='form-group'>" +
"                    <div class='input-group'>" +
"                        <button type='submit' class='form-control sa-button sa-btncancel' formnovalidate id='btncancel' name='command' value='Cancel' accesskey='C'><u>C</u>ancel</button>" +
"                        <span class='input-group-addon formclass'></span>" +
"                    </div>" +
"                </div>" +
"            </div>" +
"        </div>" +
"    </div>";
    #endregion
}
@using (Html.BeginForm(viewName, controllerName, new { @m_id = EncryptDecrypt.Encrypt(Model[0].Col15), @mid = EncryptDecrypt.Encrypt(Model[0].Col14) }, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="row">

        <div class="col-sm-4">
            <div class="form-group">
                <div class='input-group'>
                    <div class="title_left">
                        <h3 id="hd_title">@Model[0].Col9</h3>
                    </div>

                    <span class="input-group-addon formclass"></span>
                </div>
            </div>
        </div>
        @Html.Raw(buttons)
    </div>

    <div class="row">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="x_panel">
                <div class="x_content">

                    <div id="div_form" data-parsley-validate="" class="form-horizontal">

                        @*<div class="form-group">
                            <label class="control-label col-md-2 col-sm-2 col-xs-12 col-sm-offset-1"> Doc No. <span class="ClientProfileLabelColor"></span></label>
                            <div class="col-md-6 col-sm-6 col-xs-12">
                                @Html.TextBoxFor(model => model[0].Col16, new { @id = "txt_vchnum", @ReadOnly = "true", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", placeholder = "Doc No." })
                            </div>
                        </div>*@
                        <div class="form-group">
                            <label class="control-label col-md-2 col-sm-2 col-xs-12 col-sm-offset-1"> Country <span class="ClientProfileLabelColor">*</span></label>
                            <div class="col-md-6 col-sm-6 col-12">
                                @Html.DropDownListFor(model => model[0].SelectedItems1, new MultiSelectList(Model[0].TList1, "Value", "Text", Model[0].SelectedItems1), new { @id = "ddl_country", @class = "sa-select2-single form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @multiple = "multiple", @onchange = "ddl_country_SelectedIndexChanged();" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-2 col-sm-2 col-xs-12 col-sm-offset-1">State <span class="ClientProfileLabelColor">*</span></label>
                            <div class="col-md-6 col-sm-6 col-xs-12">
                                @Html.DropDownListFor(model => model[0].SelectedItems2, new MultiSelectList(Model[0].TList2, "Value", "Text", Model[0].SelectedItems2), new { @id = "ddl_state", @class = "sa-select2-single form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @multiple = "multiple", @onchange = "ddl_state_SelectedIndexChanged();" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-1 col-sm-1 col-xs-12 col-sm-offset-2" for="first-name">Legislation Area <span class="ClientProfileLabelColor">*</span></label>
                            <div class="col-md-6 col-sm-6 col-xs-12">
                                @Html.DropDownListFor(model => model[0].SelectedItems3, new MultiSelectList(Model[0].TList3, "Value", "Text", Model[0].SelectedItems3), new { @id = "ddl_legislationarea", @class = "sa-select2-single form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @multiple = "multiple", @onchange = "ddl_legislationarea_SelectedIndexChanged();" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-2 col-sm-2 col-xs-12 col-sm-offset-1">Sub Legislation Area <span class="ClientProfileLabelColor">*</span></label>
                            <div class="col-md-6 col-sm-6 col-xs-12">
                                @Html.DropDownListFor(model => model[0].SelectedItems4, new MultiSelectList(Model[0].TList4, "Value", "Text", Model[0].SelectedItems4), new { @id = "ddl_sub_legislationarea", @class = "sa-select2-single form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @multiple = "multiple", @onchange = "ddl_sub_legislationarea_SelectedIndexChanged();" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-2 col-sm-2 col-xs-12 col-sm-offset-1">Name Of Act <span class="ClientProfileLabelColor">*</span></label>
                            <div class="col-md-6 col-sm-6 col-xs-12">
                                @Html.DropDownListFor(model => model[0].SelectedItems5, new MultiSelectList(Model[0].TList5, "Value", "Text", Model[0].SelectedItems5), new { @id = "ddl_name_of_act", @class = "sa-select2-single form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @multiple = "multiple", @onchange = "ddl_name_of_act_SelectedIndexChanged();" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-2 col-sm-2 col-xs-12 col-sm-offset-1">Name Of Rule <span class="ClientProfileLabelColor">*</span></label>
                            <div class="col-md-6 col-sm-6 col-xs-12">
                                @Html.DropDownListFor(model => model[0].SelectedItems6, new MultiSelectList(Model[0].TList6, "Value", "Text", Model[0].SelectedItems6), new { @id = "ddl_name_of_rule", @class = "sa-select2-single form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @multiple = "multiple", @onchange = "ddl_name_of_rule_SelectedIndexChanged();" })
                            </div>
                        </div>
                    </div>
                    <div class="clearfix"></div>

                    <div class="row">
                        <div class="col-md-12 col-sm-12 col-xs-12">
                            <div class="x_panel" style="padding: 0px 15px !important;margin-bottom:0px !important;background-color:lightgray">
                                <div class="x_content">
                                    <div class="row">
                                        <div class='col-sm-1'>
                                            @Html.CheckBoxFor(model => model[0].Chk1, new { @id = "cbSelectAll", @class = "sa-input checkbox", onclick = "CheckUncheckChildNodesForFoo1('#Table1', this);" })
                                        </div>
                                        <div class='col-sm-1'> <label>S.No.</label> </div>
                                        <div class='col-sm-2'><label for="first-name">Country</label></div>
                                        <div class='col-sm-2'><label for="first-name">State</label></div>
                                        <div class='col-sm-2'><label for="first-name">Legislation Area</label></div>
                                        <div class='col-sm-2'><label for="first-name">Sub Legislation Area</label></div>
                                        <div class='col-sm-1'><label for="first-name">Name Of Act</label></div>
                                        <div class='col-sm-1'><label for="first-name">Name Of Rule</label></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    @if (Model.Count > 0)
                    {
                    for (int i = 0; i < Model.Count; i++)
                    {
                    <div class="row">
                        <div class="col-md-12 col-sm-12 col-xs-12">
                            <div class="x_panel" style="padding:0px 17px!important">
                                <div class="x_content">
                                    <div class="row" id="Table1">
                                        <div class='col-sm-1'>
                                            <div class="form-group">
                                                <div class='input-group'>
                                                    @Html.CheckBoxFor(model => model[i].Chk2, new { @id = "cbSelect", @class = "sa-input checkbox", onclick = "CheckUncheckChildNodesForFoo2('#Table1', this);" })
                                                    <span class="input-group-addon formclass"></span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class='col-sm-1'>
                                            <label for="first-name">@(i + 1)</label>
                                            <div class="form-group has-success">
                                                <div class='input-group'>
                                                    <span class="input-group-addon formclass"></span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class='col-sm-2'>
                                            <div class="form-group">
                                                <div class='input-group'>
                                                    @Html.DisplayFor(model => model[i].Col17, new { @id = "lbl_country", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @onkeydown = "return checkLength(this, 28,event);" })
                                                    @Html.HiddenFor(model => model[i].Col17, new { @id = "lbl_country", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @onkeydown = "return checkLength(this, 28,event);" })
                                                    @Html.HiddenFor(model => model[i].Col18, new { @id = "hdn_country_id", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @onkeydown = "return checkLength(this, 28,event);" })
                                                    <span class="input-group-addon formclass"></span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class='col-sm-2'>
                                            <div class="form-group">
                                                <div class='input-group'>
                                                    @Html.DisplayFor(model => model[i].Col19, new { @id = "lbl_state", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @onkeydown = "return checkLength(this, 28,event);" })
                                                    @Html.HiddenFor(model => model[i].Col19, new { @id = "lbl_state", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @onkeydown = "return checkLength(this, 28,event);" })
                                                    @Html.HiddenFor(model => model[i].Col20, new { @id = "hdn_larea_id", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @onkeydown = "return checkLength(this, 28,event);" })

                                                    <span class="input-group-addon formclass"></span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class='col-sm-2'>
                                            <div class="form-group">
                                                <div class='input-group'>
                                                    @Html.DisplayFor(model => model[i].Col21, new { @id = "lbl_l_area", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @onkeydown = "return checkLength(this, 28,event);" })
                                                    @Html.HiddenFor(model => model[i].Col21, new { @id = "lbl_l_area", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @onkeydown = "return checkLength(this, 28,event);" })
                                                    @Html.HiddenFor(model => model[i].Col22, new { @id = "cont_per", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @onkeydown = "return checkLength(this, 28,event);" })
                                                    <span class="input-group-addon formclass"></span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class='col-sm-2'>
                                            <div class="form-group">
                                                <div class='input-group'>
                                                    @Html.DisplayFor(model => model[i].Col23, new { @id = "lbl_sl_area", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @onkeydown = "return checkLength(this, 28,event);" })
                                                    @Html.HiddenFor(model => model[i].Col23, new { @id = "lbl_sl_area", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @onkeydown = "return checkLength(this, 28,event);" })
                                                    @Html.HiddenFor(model => model[i].Col24, new { @id = "hdn_slarea_id", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @onkeydown = "return checkLength(this, 28,event);" })
                                                    <span class="input-group-addon formclass"></span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class='col-sm-1'>
                                            <div class="form-group">
                                                <div class='input-group'>
                                                    @Html.DisplayFor(model => model[i].Col25, new { @id = "lbl_nameofact", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @onkeydown = "return checkLength(this, 28,event);" })
                                                    @Html.HiddenFor(model => model[i].Col25, new { @id = "lbl_nameofact", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @onkeydown = "return checkLength(this, 28,event);" })
                                                    @Html.HiddenFor(model => model[i].Col26, new { @id = "hdn_noa_id", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @onkeydown = "return checkLength(this, 28,event);" })
                                                    <span class="input-group-addon formclass"></span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class='col-sm-1'>
                                            <div class="form-group">
                                                <div class='input-group'>
                                                    @Html.DisplayFor(model => model[i].Col27, new { @id = "lbl_nameofrule", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @onkeydown = "return checkLength(this, 28,event);" })
                                                    @Html.HiddenFor(model => model[i].Col27, new { @id = "lbl_nameofrule", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @onkeydown = "return checkLength(this, 28,event);" })
                                                    @Html.HiddenFor(model => model[i].Col28, new { @id = "hdn_nor_id", @class = " form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @onkeydown = "return checkLength(this, 28,event);" })
                                                    <span class="input-group-addon formclass"></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    }
                    }
                </div>
            </div>
        </div>
    </div>

    <div class="clearfix"></div>
    {
        @Html.HiddenFor(model => model[0].Col1, new { @id = "hf_clientid" })
        @Html.HiddenFor(model => model[0].Col2, new { @id = "hf_clientunitid" })
        @Html.HiddenFor(model => model[0].Col3, new { @id = "hf_entby" })
        @Html.HiddenFor(model => model[0].Col4, new { @id = "hf_entdate" })
        @Html.HiddenFor(model => model[0].Col5, new { @id = "hf_editby" })
        @Html.HiddenFor(model => model[0].Col6, new { @id = "hf_editdate" })
        @Html.HiddenFor(model => model[0].Col7, new { @id = "hf_recid" })
        @Html.HiddenFor(model => model[0].Col8, new { @id = "hf_url" })
        @Html.HiddenFor(model => model[0].Col9, new { @id = "hf_title" })
        @Html.HiddenFor(model => model[0].Col10, new { @id = "hf_tab_name" })
        @Html.HiddenFor(model => model[0].Col11, new { @id = "hf_where" })
        @Html.HiddenFor(model => model[0].Col12, new { @id = "hf_type" })
        @Html.HiddenFor(model => model[0].Col13, new { @id = "hf_btn_text" })
        @Html.HiddenFor(model => model[0].Col14, new { @id = "hf_mid" })
        @Html.HiddenFor(model => model[0].Col15, new { @id = "hf_m_id" })
        @Html.HiddenFor(model => model[0].Col100, new { @id = "hf_savenew" })
        @Html.HiddenFor(model => model[0].Col121, new { @id = "Update" })
        @Html.HiddenFor(model => model[0].Col122, new { @id = "Save" })
        @Html.HiddenFor(model => model[0].Col123, new { @id = "savenew" })
    }
    <input type="submit" id="ddl_country_SelectedIndexChanged1" value="ddl_country_SelectedIndexChanged" name="Command" title="callback" style="visibility:hidden" class="btn btn-primary" />
    <input type="submit" id="ddl_state_SelectedIndexChanged1" value="ddl_state_SelectedIndexChanged" name="Command" title="callback" style="visibility:hidden" class="btn btn-primary" />
    <input type="submit" id="ddl_legislationarea_SelectedIndexChanged1" value="ddl_legislationarea_SelectedIndexChanged" name="Command" title="callback" style="visibility:hidden" class="btn btn-primary" />
    <input type="submit" id="ddl_sub_legislationarea_SelectedIndexChanged1" value="ddl_sub_legislationarea_SelectedIndexChanged" name="Command" title="callback" style="visibility:hidden" class="btn btn-primary" />
    <input type="submit" id="ddl_name_of_act_SelectedIndexChanged1" value="ddl_name_of_act_SelectedIndexChanged" name="Command" title="callback" style="visibility:hidden" class="btn btn-primary" />
    <input type="submit" id="ddl_name_of_rule_SelectedIndexChanged1" value="ddl_name_of_rule_SelectedIndexChanged" name="Command" title="callback" style="visibility:hidden" class="btn btn-primary" />
    <input type="submit" id="callback1" formnovalidate value="Callback" name="Command" title="callback" style="visibility:hidden" class="btn btn-primary" />
}
<script type="text/javascript">
    $(document).ready(function () {
        @Html.Raw(ViewBag.scripCall);
        $("[id*=hf_controller]").val('@ViewContext.RouteData.Values["Controller"].ToString()');
        $("[id*=hf_viewname]").val('@Path.GetFileNameWithoutExtension(Server.MapPath(VirtualPath))');
    });
    function ddl_country_SelectedIndexChanged() {
        $(parent.document.getElementById('ddl_country_SelectedIndexChanged1')).trigger('click');
    }
    function ddl_state_SelectedIndexChanged() {
        $(parent.document.getElementById('ddl_state_SelectedIndexChanged1')).trigger('click');
    }
    function ddl_name_of_rule_SelectedIndexChanged() {
        $(parent.document.getElementById('ddl_name_of_rule_SelectedIndexChanged1')).trigger('click');
    }
    function ddl_name_of_act_SelectedIndexChanged() {
        $(parent.document.getElementById('ddl_name_of_act_SelectedIndexChanged1')).trigger('click');
    }
    function ddl_sub_legislationarea_SelectedIndexChanged() {
        $(parent.document.getElementById('ddl_sub_legislationarea_SelectedIndexChanged1')).trigger('click');
    }
    function ddl_legislationarea_SelectedIndexChanged() {
        $(parent.document.getElementById('ddl_legislationarea_SelectedIndexChanged1')).trigger('click');
    }
    function editfun() { var data = show_Foo('Select Entry For Edit', 'EDIT', '1', '@viewName', '@controllerName'); }
    function viewfun() { var data = show_Foo('View Detail', 'DETAIL', '0', '@viewName', '@controllerName'); }
    function PARTY() { var data = show_Foo('Select Workflow', 'WFLOW', '1', '@viewName', '@controllerName'); }

    function CheckUncheckChildNodesForFoo1(childContainer, checkbox) {

        var check = $(checkbox)[0].checked;

        var checks = $("[type=checkbox][id=cbSelect]");
        var cnt = checks.length;
        for (var i = 0; i < cnt; i++) {
            var chk = "";
            //chk = $(checks[i]).closest('tr').find("[id*=hd_chk]").val();
            if (check) {

                if (chk == "") { checks.eq(i).prop('checked', true); }
            }
            else {
                if (chk == "") { checks.eq(i).prop('checked', false); }
            }

        }

        if (check) {
            //$("[type=checkbox][id=cbSelect]").prop('checked', true);
            $("[type=checkbox][id=cbSelectAll]").prop('checked', true);
        }
        else {
            //$("[type=checkbox][id=cbSelect]").prop('checked', false);
            $("[type=checkbox][id=cbSelectAll]").prop('checked', false);
        }

    }

    function CheckUncheckChildNodesForFoo2(childContainer, check, ctrl) {


        var checktype = 2;
        if (checktype != 2) {

            $("[type=checkbox][id=cbSelect]").prop('checked', false);
            $(ctrl).prop("checked", check);
            document.getElementsByName(ctrl.name)[0].checked = check;

        }
        else {

            var seeklimit = '<%= Session["SEEKLIMIT"] %>';
            var checkall = true;
            document.getElementsByName(ctrl.name)[0].checked = check;
            var childChkBoxes = $(childContainer)[0].getElementsByTagName("input")
            var childChkBoxCount = childChkBoxes.length;
            for (var i = 1; i < childChkBoxCount; i++) {
                if ($(childChkBoxes[i]).children.length > 0)
                    checkall = $(childChkBoxes[i])[0].checked;
                else checkall = $(childChkBoxes[i]).checked;
                if (!checkall) break;
            }
            $("[type=checkbox][id=cbSelectAll]").prop('checked', checkall);

        }


    }

</script>
