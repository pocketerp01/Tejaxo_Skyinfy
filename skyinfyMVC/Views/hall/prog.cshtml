@using System.Data;
@model IList<skyinfyMVC.Models.Tmodelmain>
@{
    string MyGuid = EncryptDecrypt.Decrypt(Request.QueryString["m_id"]);
    sgenFun sgen = new sgenFun(MyGuid);
    Layout = "~/Views/Shared/_MasterPage.cshtml";
    string userCode = sgen.GetCookie(MyGuid, "userCode");
    var viewName = sgen.GetSession(MyGuid, "viewName").ToString();
    var controllerName = sgen.GetSession(MyGuid, "controllerName").ToString();
    #region buttons
    string buttons = "";
    buttons += "<div class='col-md-8'>" +
"        <div class='row'>" +
"            <div class='col-sm-2'>" +
"                <div class='form-group'>" +
"                    <div class='input-group'>" +
"                        <button type='submit' class='btn btn-primary form-control sa-button' " + ViewBag.vnew + " formnovalidate id='btnnew' onclick='setTableDatat();' name='command' value='New' accesskey='N'><u>N</u>ew</button>" +
"                        <span class='input-group-addon formclass'></span>" +
"                    </div>" +
"                </div>" +
"            </div>" +
"            <div class='col-sm-2'> " +
"                <div class='form-group'>" +
"                    <div class='input-group'>" +
"                        <button type='button' class='btn btn-primary form-control sa-button' " + ViewBag.vedit + " id='btnedit' name='command' value='Edit' accesskey='I' onclick='editfun();setTableDatat();'>Ed<u>i</u>t</button>" +
"                        <span class='input-group-addon formclass'></span>" +
"                    </div>" +
"                </div>" +
"            </div>" +
"            <div class='col-sm-2'> " +
"                <div class='form-group'>" +
"                    <div class='input-group'>" +
"                        <button type='submit' class='btn btn-primary form-control sa-button' " + ViewBag.vsave + " id='btnsave' onclick='setTableDatat();' name='command' value= '" + Model[0].Col13 + "' accesskey = '" + Model[0].Col121 + "' > " + Html.Raw(Model[0].Col122) + "</button>" +
"                        <span class='input-group-addon formclass'></span>" +
"                    </div>" +
"                </div>" +
"            </div>" +
"            <div class='col-sm-2'>" +
"                <div class='form-group'> " +
"                    <div class='input-group'>" +
"                        <button type='submit' class='btn btn-primary form-control sa-button' " + ViewBag.vsavenew + " id='btnsavenew' onclick='setTableDatat();' name='command' value= '" + Model[0].Col100 + "' accesskey ='W'> " + Html.Raw(Model[0].Col123) + "</button>" +
"                        <span class='input-group-addon formclass'></span>" +
"                    </div>" +
"                </div>" +
"            </div>" +
"            <div class='col-sm-2'> " +
"                <div class='form-group'>" +
"                    <div class='input-group'>" +
"                        <button type='button' class='btn btn-primary form-control sa-button' id='btndetail' name='command' value='View' accesskey='V' onclick='setTableDatat();viewfun();'><u>V</u>iew</button>" +
"                        <span class='input-group-addon formclass'></span>" +
"                    </div>" +
"                </div>" +
"            </div>" +
"            <div class='col-sm-2'>" +
"                <div class='form-group'>" +
"                    <div class='input-group'>" +
"                        <button type='submit' class='form-control sa-button sa-btncancel' formnovalidate id='btncancel' name='command' value='Cancel' onclick='setTableDatat();' accesskey='C'><u>C</u>ancel</button>" +
"                        <span class='input-group-addon formclass'></span>" +
"                    </div>" +
"                </div>" +
"            </div>" +
"        </div>" +
"    </div>";
    #endregion
}

@using (Html.BeginForm(viewName, controllerName, new { @m_id = EncryptDecrypt.Encrypt(Model[0].Col15), @mid = EncryptDecrypt.Encrypt(Model[0].Col14) }, FormMethod.Post, new { enctype = "multipart/form-data" }))
{

<div class="row">
    <div class="col-sm-4">
        <div class="form-group">
            <div class='input-group'>
                <div class="title_left">
                    <h3>@Model[0].Col9</h3>
                </div>
                <span class="input-group-addon formclass"></span>
            </div>
        </div>
    </div>
    @Html.Raw(buttons)
</div>
    <div class="clearfix"></div>
    for (int i = 0; i < Model.Count; i++)
    {
        @Html.HiddenFor(model => model[0].Col1, new { @id = "hf_clientid" })
        @Html.HiddenFor(model => model[0].Col2, new { @id = "hf_clientunitid" })
        @Html.HiddenFor(model => model[0].Col3, new { @id = "hf_entby" })
        @Html.HiddenFor(model => model[0].Col4, new { @id = "hf_entdate" })
        @Html.HiddenFor(model => model[0].Col5, new { @id = "hf_editby" })
        @Html.HiddenFor(model => model[0].Col6, new { @id = "hf_editdate" })
        @Html.HiddenFor(model => model[0].Col7, new { @id = "hf_recid" })
        @Html.HiddenFor(model => model[0].Col8, new { @id = "hf_url" })
        @Html.HiddenFor(model => model[0].Col9, new { @id = "hf_title" })
        @Html.HiddenFor(model => model[0].Col10, new { @id = "hf_tab_name" })
        @Html.HiddenFor(model => model[0].Col11, new { @id = "hf_where" })
        @Html.HiddenFor(model => model[0].Col12, new { @id = "hf_type" })
        @Html.HiddenFor(model => model[0].Col13, new { @id = "hf_btn_text" })
        @Html.HiddenFor(model => model[0].Col14, new { @id = "hf_mid" })
        @Html.HiddenFor(model => model[0].Col15, new { @id = "hf_m_id" })
        @Html.HiddenFor(model => model[0].Col16, new { @id = "hf_vch_num" })
        @Html.HiddenFor(model => model[0].Col29, new { @id = "hf_oth_fstr" })

        @Html.HiddenFor(model => model[0].Col100, new { @id = "hf_savenew" })
        @Html.HiddenFor(model => model[0].Col121, new { @id = "Update" })
        @Html.HiddenFor(model => model[0].Col122, new { @id = "Save" })
        @Html.HiddenFor(model => model[0].Col123, new { @id = "savenew" })
        <div class="row">
            <div class="col-md-12 col-sm-12 col-xs-12">
                <div class="x_panel">
                    <div class="x_content">

                        <div class="row">

                            <div class="col-sm-4">
                                <label for="first-name">
                                    Date Of Function <span class="ClientProfileLabelColor">*</span>
                                </label>
                                <div class="form-group">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model[i].Col17, new { @id = "txt_dof", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-date sa-mandatory", data_placeholder = "Date Of Function" })

                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>


                            <div class="col-sm-4">
                                <label for="first-name">
                                    Name Of Party <span class="ClientProfileLabelColor">*</span>
                                </label>
                                <div class="form-group">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model[0].Col19, new { @id = "txt_nop", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-mandatory", data_placeholder = "Name Of Party" })

                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>



                            <div class="col-sm-4">
                                <label for="first-name">
                                    Party Contact No. <span class="ClientProfileLabelColor">*</span>
                                </label>
                                <div class="form-group">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model[0].Col21, new { @id = "txt_contact", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-mandatory sa-mobile", data_placeholder = "Party Contact No.", @maxlength = "10" })


                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>

                        </div>
                        <div class="row">
                            <div class="col-sm-4">
                                <label for="first-name">
                                    Address <span class="ClientProfileLabelColor">*</span>
                                </label>
                                <div class="form-group">
                                    <div class='input-group'>
                                        @Html.TextAreaFor(model => model[0].Col23, new { @id = "txt_add", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-mandatory", data_placeholder = "Party Address" })

                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-4">
                                <label for="first-name">
                                    Email Id <span class="ClientProfileLabelColor"></span>
                                </label>
                                <div class="form-group">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model[0].Col22, new { @id = "txt_email", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-email", data_placeholder = "Party Email Id", @maxlength = "40" })

                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-4">
                                <label for="first-name">
                                    Function Type <span class="ClientProfileLabelColor">*</span>
                                </label>
                                <div class="form-group">
                                    <div class='input-group'>
                                        @Html.DropDownListFor(model => model[i].SelectedItems1, new MultiSelectList(Model[i].TList1, "Value", "Text", Model[i].SelectedItems1), new { @id = "ddl_ftype", @class = "sa-select2-single form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @multiple = "multiple" })



                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-4">
                                <label for="first-name">
                                    Menu Type <span class="ClientProfileLabelColor">*</span>
                                </label>
                                <div class="form-group">
                                    <div class='input-group'>
                                        @Html.DropDownListFor(model => model[i].SelectedItems3, new MultiSelectList(Model[i].TList3, "Value", "Text", Model[i].SelectedItems3), new { @id = "ddl_menu", @class = "sa-select2-single form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @multiple = "multiple" })



                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>


                            <div class="col-sm-4">
                                <label for="first-name">
                                    Service Type <span class="ClientProfileLabelColor">*</span>
                                </label>
                                <div class="form-group">
                                    <div class='input-group'>
                                        @Html.DropDownListFor(model => model[i].SelectedItems2, new MultiSelectList(Model[i].TList2, "Value", "Text", Model[i].SelectedItems2), new { @id = "ddl_ser", @class = "sa-select2-single form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @multiple = "multiple" })



                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-4">
                                <label for="first-name">
                                    Hall Type <span class="ClientProfileLabelColor">*</span>
                                </label>
                                <div class="form-group">
                                    <div class='input-group'>
                                        @Html.DropDownListFor(model => model[i].SelectedItems4, new MultiSelectList(Model[i].TList4, "Value", "Text", Model[i].SelectedItems4), new { @id = "ddl_hall", @class = "sa-select2-single form-control col-md-12 col-sm-12 col-xs-12 sa-textbox", @multiple = "multiple" })



                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-4">
                                <label for="first-name">
                                    No. Of Pax <span class="ClientProfileLabelColor">*</span>
                                </label>
                                <div class="form-group">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model[0].Col18, new { @id = "txtpax", @ReadOnly = "true", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-mandatory", data_placeholder = "No. Of Pax", @onkeydown = "return isNumberKey(event)" })


                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-4">
                                <label for="first-name">
                                    Total Amount <span class="ClientProfileLabelColor">*</span>
                                </label>
                                <div class="form-group">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model[0].Col25, new { @id = "txt_total", @Readonly = "true", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-mandatory", data_placeholder = "Party Address" })

                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-4">
                                <label for="first-name">
                                    Amount Per Pax <span class="ClientProfileLabelColor">*</span>
                                </label>
                                <div class="form-group">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model[0].Col26, new { @id = "txt_exp", @Readonly = "true", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-mandatory", data_placeholder = "Party Address" })

                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-4">
                                <label for="first-name">
                                    Other Cost<span class="ClientProfileLabelColor"></span>
                                </label>
                                <div class="form-group">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model[0].Col28, new { @id = "txt_other_total", @Readonly = "true", @class = "form-control col-md-12 col-sm-12 col-xs-12 sa-textbox sa-mandatory", data_placeholder = "Other Cost" })

                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>




                            <div class='col-sm-4 col-xs-4'>
                                <label for="first-name">Status <span class="ClientProfileLabelColor">*</span></label>
                                <div class="form-group">
                                    <div class='input-group' style="width: 100%">
                                        <b>Active </b>
                                        @Html.RadioButtonFor(model => model[0].Col20, "Y", new { @id = "active", @class = " sa-input radio sa-mandatory", @style = "vertical-align:initial;min-height:0px;margin:0px;padding-top:0px;" })

                                        <b style="margin-left:5px">Inactive </b>
                                        @Html.RadioButtonFor(model => model[0].Col20, "N", new { @id = "Inactive", @class = " sa-input radio sa-mandatory", @style = "vertical-align:initial;min-height:0px;margin:0px;padding-top: 0px;" })

                                        <span class="input-group-addon formclass"></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>

            </div>
        </div>

        <style>


            .datepicker.dropdown-menu {
                z-index: 99999 !important
            }

            .bootstrap-datetimepicker-widget.dropdown-menu {
                overflow: visible;
                height: 100%;
            }
        </style>

        if (Model.Count < 1)
        { }
        else
        {
            for (i = 0; i < Model.Count; i++)
            {
                DataTable dtm = Model[i].dt1;
                <div class="col-md-12 col-sm-12 col-xs-12">
                    <div class="x_panel" style="padding: 3px 15px !important">

                        <div class="x_content">
                            <div class="row">
                                <h5>Details of Pax and Amount</h5>
                                <div class="grid-container">
                                    <div class="grid" id="grd1">

                                        @try
                                        {
                                            foreach (DataColumn dc in dtm.Columns)
                                            {
                                                int mlength = 20;
                                                try
                                                {
                                                    mlength = dtm.Select("[" + dc.ColumnName + "] = MAX([" + dc.ColumnName + "])")[0][dc.ColumnName].ToString().Length;
                                                }
                                                catch (Exception err) { }
                                                int k = 0;

                                                if (dc.Ordinal == 0)
                                                {
                                                    <div class="grid-col grid-col--fixed-left" id="col_@dc.Ordinal" style="width:25px">
                                                        <div class="grid-item grid-item--header">
                                                            <p>@dc.ColumnName.ToString()</p>
                                                        </div>

                                                        @foreach (DataRow dr in dtm.Rows)
                                                        {
                                                            <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)'>
                                                                <input name="command" onclick="sethfval('@k');" type="submit" value="+" style="max-height: 20px;padding-top: 0px;" class="btn btn-info btn-sm" formnovalidate data-toggle="tooltip" title="Add More" />
                                                                <input name="command" onclick="sethfval('@k');" type="submit" value="-" style="max-height: 20px;padding-top: 0px;" class="btn btn-info btn-sm" formnovalidate data-toggle="tooltip" title="Hide" />
                                                                <input type="hidden" value="@dr[dc].ToString()" id="fstr_@dc.Ordinal" />
                                                                @Html.HiddenFor(model => model[i].Col24, new { @id = "hf_refcode" })
                                                            </div>
                                                            k++;
                                                        }
                                                    </div>
                                                }
                                                else if (dc.Ordinal == 1)
                                                {
                                                    <div class="grid-col grid-col--fixed-left" id="col_@dc.Ordinal" style="width:10%">
                                                        <div class="grid-item grid-item--header">
                                                            <p>@dc.ColumnName.ToString()</p>
                                                        </div>

                                                        @foreach (DataRow dr in dtm.Rows)
                                                        {
                                                            <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)'>
                                                                <label>@(k + 1)</label>
                                                            </div>
                                                            k++;
                                                        }
                                                    </div>
                                                }
                                                else if (dc.Ordinal == 2)
                                                {
                                                    <div class="grid-col" id="col_@dc.Ordinal" style="width:350px">
                                                        <div class="grid-item grid-item--header">
                                                            <p>@dc.ColumnName.ToString()</p>
                                                        </div>

                                                        @foreach (DataRow dr in dtm.Rows)
                                                        {
                                                            string id = "kcdate_" + dtm.Rows.IndexOf(dr);

                                                            <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)'>
                                                                <div class="row">
                                                                    <div id="mtxt" class="col-md-10 input-group">
                                                                        <input type="text" @id class="form-control sa-ac-date" value=@dr[dc].ToString() style="position:relative;z-index:1000;width: 70%;left:30px;" />
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        }
                                                    </div>
                                                }
                                                else if (dc.Ordinal == 3)
                                                {
                                                    <div class="grid-col" id="col_@dc.Ordinal" style="width:30%;">
                                                        <div class="grid-item grid-item--header">
                                                            <p>@dc.ColumnName.ToString()</p>
                                                        </div>
                                                        @foreach (DataRow dr in dtm.Rows)
                                                        {
                                                            <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)' contenteditable="true" onkeyup="calcamt();">
                                                                @dr[dc].ToString()
                                                            </div>
                                                        }
                                                    </div>
                                                }

                                                else if (dc.Ordinal == 4)
                                                {
                                                    <div class="grid-col" id="col_@dc.Ordinal" style="width:30%;">
                                                        <div class="grid-item grid-item--header">
                                                            <p>@dc.ColumnName.ToString()</p>
                                                        </div>
                                                        @foreach (DataRow dr in dtm.Rows)
                                                        {
                                                            <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)' contenteditable="true" onkeyup="calcamt();">
                                                                @dr[dc].ToString()
                                                            </div>
                                                        }
                                                    </div>
                                                }

                                                else if (dc.Ordinal == 5)
                                                {
                                                    <div class="grid-col" id="col_@dc.Ordinal" style="width:30%;">
                                                        <div class="grid-item grid-item--header">
                                                            <p>@dc.ColumnName.ToString()</p>
                                                        </div>
                                                        @foreach (DataRow dr in dtm.Rows)
                                                        {
                                                            <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)' contenteditable="true" onkeyup="calcrate();">
                                                                @dr[dc].ToString()
                                                            </div>
                                                        }
                                                    </div>
                                                }

                                                else if (dc.Ordinal == 6)
                                                {
                                                    <div class="grid-col" id="col_@dc.Ordinal" style="width:30%;">
                                                        <div class="grid-item grid-item--header">
                                                            <p>@dc.ColumnName.ToString()</p>
                                                        </div>
                                                        @foreach (DataRow dr in dtm.Rows)
                                                        {
                                                            <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)' contenteditable="true">
                                                                @dr[dc].ToString()
                                                            </div>
                                                        }
                                                    </div>
                                                }
                                                else if (dc.Ordinal == 7)
                                                {
                                                    <div class="grid-col grid-col--fixed-left" id="col_@dc.Ordinal" style="width:10%">
                                                        <div class="grid-item grid-item--header">
                                                            <p>@dc.ColumnName.ToString()</p>
                                                        </div>

                                                        @foreach (DataRow dr in dtm.Rows)
                                                        {
                                                            <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)'>
                                                                <label>@(k)</label>
                                                            </div>
                                                            k++;
                                                        }
                                                    </div>
                                                }

                                                else
                                                {
                                                    <div class="grid-col" id="col_@dc.Ordinal" style="width:30%">
                                                        <div class="grid-item grid-item--header">
                                                            <p>@dc.ColumnName.ToString()</p>
                                                        </div>
                                                        @foreach (DataRow dr in dtm.Rows)
                                                        {
                                                            <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)' contenteditable="false">
                                                                @dr[dc].ToString()
                                                            </div>
                                                        }
                                                    </div>
                                                }
                                            }
                                        }
                                        catch (Exception err)
                                        {

                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                dtm = Model[i].dt2;
                <div class="col-md-12 col-sm-12 col-xs-12">
                    <div class="x_panel" style="padding: 3px 15px !important">

                        <div class="x_content">
                            <div class="row">
                                <h5>Details of Other Amount</h5>
                                <div class="grid-container">
                                    <div class="grid" id="grd2">

                                        @try
                                        {
                                            foreach (DataColumn dc in dtm.Columns)
                                            {
                                                int mlength = 20;
                                                try
                                                {
                                                    mlength = dtm.Select("[" + dc.ColumnName + "] = MAX([" + dc.ColumnName + "])")[0][dc.ColumnName].ToString().Length;
                                                }
                                                catch (Exception err) { }
                                                int k = 0;

                                                if (dc.Ordinal == 0)
                                                {
                                                    <div class="grid-col grid-col--fixed-left" id="col_@dc.Ordinal" style="width:25px">
                                                        <div class="grid-item grid-item--header">
                                                            <p>@dc.ColumnName.ToString()</p>
                                                        </div>

                                                        @foreach (DataRow dr in dtm.Rows)
                                                        {


                                                            <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)'>
                                                                <label>@(k + 1)</label>


                                                                <input name="command" onclick="sethfval('@k');getitem();" type="button" value="+" style="max-height: 20px;padding-top: 0px;" class="btn btn-info btn-sm" formnovalidate data-toggle="tooltip" title="Add More" />
                                                                <button name="command" onclick="sethfval('@k');" type="submit" value="2-" style="max-height: 20px;padding-top: 0px;" class="btn btn-info btn-sm" formnovalidate>-</button>
                                                                <input type="hidden" value="@dr[dc].ToString()" id="fstr_@dc.Ordinal" />
                                                            </div>
                                                            k++;
                                                        }
                                                    </div>
                                                }

                                                else if (dc.Ordinal == 4)
                                                {
                                                    <div class="grid-col" id="col_@dc.Ordinal" style="width:30%;">
                                                        <div class="grid-item grid-item--header">
                                                            <p>@dc.ColumnName.ToString()</p>
                                                        </div>
                                                        @foreach (DataRow dr in dtm.Rows)
                                                        {
                                                            <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)' contenteditable="true" onkeyup="calcoth();">
                                                                @dr[dc].ToString()
                                                            </div>
                                                        }
                                                    </div>
                                                }

                                                else if (dc.Ordinal == 5)
                                                {
                                                    <div class="grid-col" id="col_@dc.Ordinal" style="width:30%;">
                                                        <div class="grid-item grid-item--header">
                                                            <p>@dc.ColumnName.ToString()</p>
                                                        </div>
                                                        @foreach (DataRow dr in dtm.Rows)
                                                        {
                                                            <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)' contenteditable="true">
                                                                @dr[dc].ToString()
                                                            </div>
                                                        }
                                                    </div>
                                                }

                                                else
                                                {
                                                    <div class="grid-col" id="col_@dc.Ordinal" style="width:30%">
                                                        <div class="grid-item grid-item--header">
                                                            <p>@dc.ColumnName.ToString()</p>
                                                        </div>
                                                        @foreach (DataRow dr in dtm.Rows)
                                                        {
                                                            <div class="grid-item" id='row_@dtm.Rows.IndexOf(dr)' contenteditable="false">
                                                                @dr[dc].ToString()
                                                            </div>
                                                        }
                                                    </div>
                                                }
                                            }
                                        }
                                        catch (Exception err)
                                        {

                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            }
        }
    }
    <input type="hidden" name="hfrow" id="hfrow" />
    <input type="hidden" name="hftable" id="hftable" />
    <input type="hidden" name="hfrow" id="hfrow" />
    <input type="submit" id="callback1" formnovalidate value="Callback" name="Command" title="callback" style="visibility:hidden" class="btn btn-primary" />
}
<script type="text/javascript">

    $(document).ready(function () {
        @Html.Raw(ViewBag.scripCall);
        $("[id*=hf_controller]").val('@ViewContext.RouteData.Values["Controller"].ToString()');
        $("[id*=hf_viewname]").val('@Path.GetFileNameWithoutExtension(Server.MapPath(VirtualPath))');
        calcamt();
        calcoth();

    });






    function editfun() { var data = show_Foo('Select Entry For Edit', 'EDIT', '1', '@viewName', '@controllerName'); }
    function viewfun() { var data = show_Foo('View Detail', 'VIEW', '0', '@viewName', '@controllerName'); }


    //function setTableDatat() {
    //    try {
    //        ;
    //        datatable = new Array();

    //        var heads = $("[id*=col_]");
    //        var rows = $(heads).eq(0).find("[id*=row_]");
    //        for (var r = 0; r < rows.length; r++) {
    //            var row = $("[id=row_" + r + "]");
    //            var arr = new Array();
    //            for (var h = 0; h < heads.length; h++) {
    //                var obj = {};
    //                if (h == 2) { val = $(row[h]).eq(0).find("input").val(); }
    //                else {
    //                    val = row[h].innerText;
    //                }

    //                //obj[heads[h].children[0].innerText] = row[h].innerText;
    //                obj[heads[h].children[0].innerText] = val;
    //                arr.push(obj);
    //            }
    //            datatable.push(arr);
    //        }
    //    }
    //    catch (err) { alert(err); return; }
    //    $("#hftable").val(JSON.stringify(datatable));
    //    //PageMethods.settable(datatable);


    //}

    function setTableDatat() {
        debugger;
        datatable = new Array();

        var tstr = "";
        var grids = $("[id*=grd]");
        for (var g = 0; g < grids.length; g++) {
            try {
                var grid = grids.eq(g);
                datatable = new Array();

                var heads = $(grid).find("[id*=col_]");
                var rows = $(heads).eq(0).find("[id*=row_]");
                for (var r = 0; r < rows.length; r++) {
                    var row = $(heads).find("[id=row_" + r + "]");
                    var arr = new Array();
                    for (var h = 0; h < heads.length; h++) {
                        var obj = {};
                        var val = "";
                        if (g==0 && h == 2) { val = $(row[h]).eq(0).find("input").val(); }
                        else {
                            val = row[h].innerText.toString();
                        }
                        obj[heads[h].children[0].innerText] = val;
                        arr.push(obj);
                    }
                    datatable.push(arr);
                }
            }
            catch (err) { alert(err); return; }
            if (tstr.trim() == "") { tstr = JSON.stringify(datatable); }
            else {
                tstr = tstr + "!~!~!~!" + JSON.stringify(datatable);
            }
        }
        //PageMethods.settable(datatable);

        $("#hftable").val(tstr);
    }
    function sethfval(val) {
        $("#hfrow").val(val);
        setTableDatat();
    }

    function calcamt() {
        ;
        var amt = 0;
        var rate = 0;
        var pax = 0;
        var tot = 0;
        var tot_amt = 0;
        $("#txtpax")[0].value = 0;
        $("#txt_total")[0].value = 0;
        $("#txt_exp")[0].value = 0;
        var heads = $("[id*=col_]");
        var rows = $(heads).eq(0).find("[id*=row_]");
        for (var r = 0; r < rows.length; r++) {
            var row = $("[id=row_" + r + "]");
            pax = parseFloat(row[3].innerText);
            rate = parseFloat(row[4].innerText);
            if (isNaN(pax)) { pax = 0; }
            if (isNaN(rate)) { rate = 0; }
            amt = parseFloat(pax) * parseFloat(rate);

            row[5].innerText = amt;
            if (isNaN(amt)) { amt = 0; }
            tot = pax + parseFloat(tot) ;
            tot_amt = amt + parseFloat(tot_amt) ;

        }

        $("#txtpax")[0].value = tot;
        $("#txt_total")[0].value = tot_amt;
        $("#txt_exp")[0].value = (parseFloat(tot_amt) / parseFloat(tot)).toFixed(2);
        if (isNaN($("#txt_exp")[0].value)) { $("#txt_exp")[0].value = 0; }

        if (tot == 0) { $("#txt_exp")[0].value = 0;}


    }

    function calcrate() {
        ;
        var amt = 0;
        var rate = 0;
        var pax = 0;
        var tot = 0;
        var tot_amt = 0;
        $("#txtpax")[0].value = 0;
        $("#txt_total")[0].value = 0;
        $("#txt_exp")[0].value = 0;
        var heads = $("[id*=col_]");
        var rows = $(heads).eq(0).find("[id*=row_]");
        for (var r = 0; r < rows.length; r++) {
            var row = $("[id=row_" + r + "]");
            pax = parseFloat(row[3].innerText);
            amt = parseFloat(row[5].innerText);
            if (isNaN(pax)) { pax = 0; }
            if (isNaN(amt)) { rate = 0; }
            rate = parseFloat(amt) / parseFloat(pax);

            row[4].innerText = rate;
            if (isNaN(rate)) { rate = 0; }
            tot = pax + parseFloat(tot);
            tot_amt = amt + parseFloat(tot_amt);

        }

        $("#txtpax")[0].value = tot;
        $("#txt_total")[0].value = tot_amt;
        $("#txt_exp")[0].value = (parseFloat(tot_amt) / parseFloat(tot)).toFixed(2);
        if (isNaN($("#txt_exp")[0].value)) { $("#txt_exp")[0].value = 0; }

        if (tot == 0) { $("#txt_exp")[0].value = 0; }


    }

      function getitem()                                               /* for  additem or plus minus buttons*/
    {

        var icode = "", chkcode = "", ptype = "";

        ptype = "";
        // var acode = $("#hf_party_code")[0].value;
        //if (acode == "") { showmsgJS(1, "Please select Party", 2); return; }    /*popup for first*/
        var heads = $("[id*=col_]");
        var rows = $(heads).eq(0).find("[id*=row_]");
        for (var r = 0; r < rows.length; r++) {

            var row = $("[id=row_" + r + "]");
            chkcode = row[2].innerText.trim();
            if (chkcode != "-" && chkcode!="") {
                icode = icode + chkcode + ",";
            }
        }

        var data = show_Foo('Select Head', 'Head', '2', '@viewName', '@controllerName', icode, "");
    }

    function calcoth() {
        ;
        ;
        var amt = 0;
        var exp = 0;

        var grds1 = $("[id*=grd2]");
        var gr1 = grds1.eq(0);
        {
            //var heads = $("[id*=col_]");
            //var rows = $(heads).eq(0).find("[id*=row_]");

            var heads = $(gr1).find("[id*=col_]");
            var rows = $(heads).eq(0).find("[id*=row_]");

            for (var r = 0; r < rows.length; r++) {
                //var row = $("[id=row_" + r + "]");
                var row = $(heads).find("[id=row_" + r + "]");
                exp = parseFloat(row[4].innerText);
                if (isNaN(exp)) { exp = 0; }
                amt = parseFloat(exp) + parseFloat(amt);
            }
            if (isNaN(amt)) { amt = 0; }
            $("#txt_other_total")[0].value = amt;
        }

    }

</script>
